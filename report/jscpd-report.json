{
  "statistics": {
    "detectionDate": "2025-09-16T22:04:29.015Z",
    "formats": {
      "javascript": {
        "sources": {
          "components/ui/navbar/navbar.tsx": {
            "lines": 39,
            "tokens": 238,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/floating-navbar/floating-navbar.tsx": {
            "lines": 86,
            "tokens": 504,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/tooltip.tsx": {
            "lines": 36,
            "tokens": 205,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/textarea.tsx": {
            "lines": 14,
            "tokens": 42,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/text-hover-effect.tsx": {
            "lines": 84,
            "tokens": 605,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/testimonials-section.tsx": {
            "lines": 3,
            "tokens": 21,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/tabs.tsx": {
            "lines": 34,
            "tokens": 211,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/table.tsx": {
            "lines": 88,
            "tokens": 609,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/switch.tsx": {
            "lines": 10,
            "tokens": 37,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/sticky-banner.tsx": {
            "lines": 12,
            "tokens": 79,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/spotlight.tsx": {
            "lines": 63,
            "tokens": 347,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/sonner.tsx": {
            "lines": 8,
            "tokens": 46,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/skeleton.tsx": {
            "lines": 0,
            "tokens": 8,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/sidebar.tsx": {
            "lines": 565,
            "tokens": 3136,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/sheet.tsx": {
            "lines": 86,
            "tokens": 484,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/separator.tsx": {
            "lines": 5,
            "tokens": 21,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/select.tsx": {
            "lines": 123,
            "tokens": 816,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/progress.tsx": {
            "lines": 4,
            "tokens": 15,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/macbook-scroll.tsx": {
            "lines": 554,
            "tokens": 2448,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/label.tsx": {
            "lines": 3,
            "tokens": 9,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/input.tsx": {
            "lines": 18,
            "tokens": 56,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/infinite-moving-cards.tsx": {
            "lines": 21,
            "tokens": 118,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/globe.tsx": {
            "lines": 2,
            "tokens": 36,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/form.tsx": {
            "lines": 111,
            "tokens": 796,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/features-section.tsx": {
            "lines": 25,
            "tokens": 159,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/dropdown-menu.tsx": {
            "lines": 192,
            "tokens": 956,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/dialog.tsx": {
            "lines": 83,
            "tokens": 522,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/card.tsx": {
            "lines": 63,
            "tokens": 436,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/button.tsx": {
            "lines": 0,
            "tokens": 15,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/breadcrumb.tsx": {
            "lines": 77,
            "tokens": 434,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/bento-grid-features.tsx": {
            "lines": 176,
            "tokens": 1676,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/badge.tsx": {
            "lines": 0,
            "tokens": 13,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/avatar.tsx": {
            "lines": 32,
            "tokens": 146,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/alert.tsx": {
            "lines": 26,
            "tokens": 193,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/TimelineCompact.tsx": {
            "lines": 48,
            "tokens": 440,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/TelemetryButton.tsx": {
            "lines": 1,
            "tokens": 9,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/LoadingStates.tsx": {
            "lines": 81,
            "tokens": 615,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/GlowingButton.tsx": {
            "lines": 25,
            "tokens": 94,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/BanterLoader.tsx": {
            "lines": 50,
            "tokens": 359,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/resume/ResumeExporter.tsx": {
            "lines": 119,
            "tokens": 989,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/providers/TelemetryProvider.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/dynamic/ProfileFormDynamic.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/admin/analytics-charts.tsx": {
            "lines": 57,
            "tokens": 588,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/admin/FeatureFlagManager.tsx": {
            "lines": 182,
            "tokens": 1451,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/authenticated-layout.tsx": {
            "lines": 203,
            "tokens": 1741,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/UserProfile.tsx": {
            "lines": 3,
            "tokens": 32,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/SiteNavigation.tsx": {
            "lines": 0,
            "tokens": 9,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/SettingsForm.tsx": {
            "lines": 93,
            "tokens": 805,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ResumeUpload.tsx": {
            "lines": 5,
            "tokens": 61,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ResumeTailor.tsx": {
            "lines": 127,
            "tokens": 854,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ResumePromptToast.tsx": {
            "lines": 55,
            "tokens": 415,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ResumeProcessingStatus.tsx": {
            "lines": 72,
            "tokens": 660,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ResumeContext.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ProfileForm.tsx": {
            "lines": 267,
            "tokens": 2482,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/PdfUploadButton.tsx": {
            "lines": 42,
            "tokens": 307,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/LogoutButton.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/JobListingTable.tsx": {
            "lines": 140,
            "tokens": 1245,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/JobFilters.tsx": {
            "lines": 68,
            "tokens": 627,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/InterviewCardRealtime.tsx": {
            "lines": 138,
            "tokens": 1139,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/InterviewCardClient.tsx": {
            "lines": 88,
            "tokens": 642,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/InterviewCard.tsx": {
            "lines": 67,
            "tokens": 509,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/GoogleSignInButton.tsx": {
            "lines": 1,
            "tokens": 9,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/GoogleAuthButton.tsx": {
            "lines": 1,
            "tokens": 9,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/FoundryVoiceAgent.tsx": {
            "lines": 199,
            "tokens": 1679,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/FormField.tsx": {
            "lines": 16,
            "tokens": 96,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/FAQsection.tsx": {
            "lines": 34,
            "tokens": 256,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/EmailVerificationBanner.tsx": {
            "lines": 7,
            "tokens": 41,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/DisplayTechIcons.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/DashboardLayout.tsx": {
            "lines": 145,
            "tokens": 1096,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/CoverLetterGenerator.tsx": {
            "lines": 73,
            "tokens": 515,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/CommunityInterviewPage.tsx": {
            "lines": 80,
            "tokens": 650,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/CodeEditorWrapper.tsx": {
            "lines": 5,
            "tokens": 32,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/CodeEditor.tsx": {
            "lines": 2,
            "tokens": 22,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/BrandSlide.tsx": {
            "lines": 10,
            "tokens": 80,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/AutoApplyDashboard.tsx": {
            "lines": 131,
            "tokens": 1298,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/AuthForm.tsx": {
            "lines": 62,
            "tokens": 441,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/AuthDebugInfo.tsx": {
            "lines": 0,
            "tokens": 14,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/Agent.tsx": {
            "lines": 156,
            "tokens": 1329,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/audio/__tests__/setup.js": {
            "lines": 49,
            "tokens": 307,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/audio/__tests__/micProcessor.test.js": {
            "lines": 69,
            "tokens": 688,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/audio/__tests__/micCapture.simple.test.js": {
            "lines": 185,
            "tokens": 1661,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 6,
            "duplicatedTokens": 117,
            "percentage": 3.24,
            "percentageTokens": 7.04,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/firebase/auth.js": {
            "lines": 124,
            "tokens": 790,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/audio/micProcessor.js": {
            "lines": 117,
            "tokens": 1084,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/audio/micCapture.js": {
            "lines": 215,
            "tokens": 1634,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 6,
            "duplicatedTokens": 117,
            "percentage": 2.79,
            "percentageTokens": 7.16,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 6255,
          "tokens": 45256,
          "sources": 84,
          "clones": 1,
          "duplicatedLines": 6,
          "duplicatedTokens": 117,
          "percentage": 0.1,
          "percentageTokens": 0.26,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      },
      "tsx": {
        "sources": {
          "components/ui/navbar/navbar.tsx": {
            "lines": 92,
            "tokens": 650,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/navbar/index.tsx": {
            "lines": 4,
            "tokens": 61,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/floating-navbar/index.tsx": {
            "lines": 4,
            "tokens": 61,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/floating-navbar/floating-navbar.tsx": {
            "lines": 136,
            "tokens": 921,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/tooltip.tsx": {
            "lines": 60,
            "tokens": 352,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/textarea.tsx": {
            "lines": 33,
            "tokens": 167,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/text-hover-effect.tsx": {
            "lines": 134,
            "tokens": 1069,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/testimonials-section.tsx": {
            "lines": 83,
            "tokens": 569,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/test-form-components.tsx": {
            "lines": 101,
            "tokens": 1034,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/tabs.tsx": {
            "lines": 51,
            "tokens": 357,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/table.tsx": {
            "lines": 113,
            "tokens": 752,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/switch.tsx": {
            "lines": 25,
            "tokens": 163,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/sticky-banner.tsx": {
            "lines": 79,
            "tokens": 582,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/spotlight.tsx": {
            "lines": 127,
            "tokens": 781,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/sonner.tsx": {
            "lines": 24,
            "tokens": 154,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/skeleton.tsx": {
            "lines": 12,
            "tokens": 83,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/sidebar.tsx": {
            "lines": 729,
            "tokens": 4300,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/sheet.tsx": {
            "lines": 138,
            "tokens": 820,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/separator.tsx": {
            "lines": 27,
            "tokens": 144,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/select.tsx": {
            "lines": 157,
            "tokens": 1035,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/progress.tsx": {
            "lines": 31,
            "tokens": 204,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/macbook-scroll.tsx": {
            "lines": 657,
            "tokens": 3253,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/label.tsx": {
            "lines": 23,
            "tokens": 116,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/input.tsx": {
            "lines": 33,
            "tokens": 155,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/infinite-moving-cards.tsx": {
            "lines": 156,
            "tokens": 992,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/globe.tsx": {
            "lines": 51,
            "tokens": 437,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 46,
            "duplicatedTokens": 386,
            "percentage": 90.2,
            "percentageTokens": 88.33,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/form.tsx": {
            "lines": 166,
            "tokens": 1122,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/features-section.tsx": {
            "lines": 123,
            "tokens": 887,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/dropdown-menu.tsx": {
            "lines": 256,
            "tokens": 1305,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/dialog.tsx": {
            "lines": 120,
            "tokens": 757,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/collapsible.tsx": {
            "lines": 32,
            "tokens": 181,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/card.tsx": {
            "lines": 78,
            "tokens": 553,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/button.tsx": {
            "lines": 58,
            "tokens": 346,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/breadcrumb.tsx": {
            "lines": 108,
            "tokens": 657,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/bento-grid-features.tsx": {
            "lines": 241,
            "tokens": 2133,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 46,
            "duplicatedTokens": 386,
            "percentage": 19.09,
            "percentageTokens": 18.1,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/badge.tsx": {
            "lines": 35,
            "tokens": 232,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/avatar.tsx": {
            "lines": 52,
            "tokens": 259,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/alert.tsx": {
            "lines": 58,
            "tokens": 404,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/TimelineCompact.tsx": {
            "lines": 90,
            "tokens": 751,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/TelemetryButton.tsx": {
            "lines": 52,
            "tokens": 363,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/LoadingStates.tsx": {
            "lines": 216,
            "tokens": 1620,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/GlowingButton.tsx": {
            "lines": 60,
            "tokens": 343,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/BanterLoader.tsx": {
            "lines": 579,
            "tokens": 577,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 16,
            "duplicatedTokens": 192,
            "percentage": 2.76,
            "percentageTokens": 33.28,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/test/TestHelperInitializer.tsx": {
            "lines": 216,
            "tokens": 1763,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/resume/ResumeExporter.tsx": {
            "lines": 288,
            "tokens": 2560,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/providers/TelemetryProvider.tsx": {
            "lines": 188,
            "tokens": 2043,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/dynamic/ResumeTailorDynamic.tsx": {
            "lines": 37,
            "tokens": 324,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 32,
            "duplicatedTokens": 291,
            "percentage": 86.49,
            "percentageTokens": 89.81,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/dynamic/ProfileFormDynamic.tsx": {
            "lines": 53,
            "tokens": 408,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 15,
            "duplicatedTokens": 94,
            "percentage": 28.3,
            "percentageTokens": 23.04,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/dynamic/PdfUploadButtonDynamic.tsx": {
            "lines": 39,
            "tokens": 274,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 24,
            "duplicatedTokens": 200,
            "percentage": 61.54,
            "percentageTokens": 72.99,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/dynamic/GoogleSignInButtonDynamic.tsx": {
            "lines": 23,
            "tokens": 140,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/dynamic/CoverLetterGeneratorDynamic.tsx": {
            "lines": 35,
            "tokens": 320,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 32,
            "duplicatedTokens": 291,
            "percentage": 91.43,
            "percentageTokens": 90.94,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/admin/analytics-charts.tsx": {
            "lines": 169,
            "tokens": 1739,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/admin/FeatureFlagManager.tsx": {
            "lines": 373,
            "tokens": 3110,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 126,
            "duplicatedTokens": 882,
            "percentage": 33.78,
            "percentageTokens": 28.36,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/authenticated-layout.tsx": {
            "lines": 468,
            "tokens": 3388,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 38,
            "duplicatedTokens": 373,
            "percentage": 8.12,
            "percentageTokens": 11.01,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/UserProfile.tsx": {
            "lines": 67,
            "tokens": 485,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/SiteNavigation.tsx": {
            "lines": 35,
            "tokens": 263,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/SettingsForm.tsx": {
            "lines": 138,
            "tokens": 1206,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/RouterLoadingHandler.tsx": {
            "lines": 55,
            "tokens": 406,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ResumeUpload.tsx": {
            "lines": 101,
            "tokens": 947,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ResumeTailor.tsx": {
            "lines": 456,
            "tokens": 3965,
            "sources": 1,
            "clones": 9,
            "duplicatedLines": 105,
            "duplicatedTokens": 898,
            "percentage": 23.03,
            "percentageTokens": 22.65,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ResumePromptToast.tsx": {
            "lines": 117,
            "tokens": 874,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ResumeProcessingStatus.tsx": {
            "lines": 259,
            "tokens": 2187,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ResumeContext.tsx": {
            "lines": 73,
            "tokens": 543,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 42,
            "duplicatedTokens": 298,
            "percentage": 57.53,
            "percentageTokens": 54.88,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ProfileForm.tsx": {
            "lines": 513,
            "tokens": 4539,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 27,
            "duplicatedTokens": 183,
            "percentage": 5.26,
            "percentageTokens": 4.03,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/PdfUploadButtonWrapper.tsx": {
            "lines": 37,
            "tokens": 248,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 12,
            "duplicatedTokens": 99,
            "percentage": 32.43,
            "percentageTokens": 39.92,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/PdfUploadButton.tsx": {
            "lines": 396,
            "tokens": 3124,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 12,
            "duplicatedTokens": 101,
            "percentage": 3.03,
            "percentageTokens": 3.23,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/NetworkLoggerInit.tsx": {
            "lines": 14,
            "tokens": 110,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/LogoutButton.tsx": {
            "lines": 39,
            "tokens": 245,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 12,
            "duplicatedTokens": 93,
            "percentage": 30.77,
            "percentageTokens": 37.96,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/JobListingTable.tsx": {
            "lines": 251,
            "tokens": 2467,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/JobFilters.tsx": {
            "lines": 127,
            "tokens": 1222,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/InterviewCardRealtime.tsx": {
            "lines": 218,
            "tokens": 1832,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/InterviewCardClient.tsx": {
            "lines": 192,
            "tokens": 1392,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 21,
            "duplicatedTokens": 176,
            "percentage": 10.94,
            "percentageTokens": 12.64,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/InterviewCard.tsx": {
            "lines": 126,
            "tokens": 939,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 21,
            "duplicatedTokens": 176,
            "percentage": 16.67,
            "percentageTokens": 18.74,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/GoogleSignInButton.tsx": {
            "lines": 209,
            "tokens": 1736,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 36,
            "duplicatedTokens": 318,
            "percentage": 17.22,
            "percentageTokens": 18.32,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/GoogleAuthButton.tsx": {
            "lines": 217,
            "tokens": 1819,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 36,
            "duplicatedTokens": 318,
            "percentage": 16.59,
            "percentageTokens": 17.48,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/FoundryVoiceAgent.tsx": {
            "lines": 527,
            "tokens": 4144,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 72,
            "duplicatedTokens": 618,
            "percentage": 13.66,
            "percentageTokens": 14.91,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/FormField.tsx": {
            "lines": 50,
            "tokens": 323,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/FirebaseClientInit.tsx": {
            "lines": 71,
            "tokens": 462,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/FAQsection.tsx": {
            "lines": 111,
            "tokens": 861,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/EmailVerificationBanner.tsx": {
            "lines": 63,
            "tokens": 481,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 12,
            "duplicatedTokens": 89,
            "percentage": 19.05,
            "percentageTokens": 18.5,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/DisplayTechIcons.tsx": {
            "lines": 12,
            "tokens": 111,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/DashboardLayout.tsx": {
            "lines": 221,
            "tokens": 1731,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 20,
            "duplicatedTokens": 210,
            "percentage": 9.05,
            "percentageTokens": 12.13,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/CoverLetterGenerator.tsx": {
            "lines": 327,
            "tokens": 2794,
            "sources": 1,
            "clones": 9,
            "duplicatedLines": 105,
            "duplicatedTokens": 898,
            "percentage": 32.11,
            "percentageTokens": 32.14,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/CommunityInterviewPage.tsx": {
            "lines": 266,
            "tokens": 2241,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/CodeEditorWrapper.tsx": {
            "lines": 41,
            "tokens": 271,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/CodeEditor.tsx": {
            "lines": 105,
            "tokens": 861,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/BrandSlide.tsx": {
            "lines": 63,
            "tokens": 606,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/AutoApplyDashboard.tsx": {
            "lines": 476,
            "tokens": 4176,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/AuthSync.tsx": {
            "lines": 52,
            "tokens": 424,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/AuthForm.tsx": {
            "lines": 273,
            "tokens": 2293,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/AuthDebugInfo.tsx": {
            "lines": 85,
            "tokens": 897,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/AuthDebug.tsx": {
            "lines": 26,
            "tokens": 366,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/Agent.tsx": {
            "lines": 776,
            "tokens": 6511,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 72,
            "duplicatedTokens": 618,
            "percentage": 9.28,
            "percentageTokens": 9.49,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/test-helpers/test-integration.tsx": {
            "lines": 71,
            "tokens": 415,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 14549,
          "tokens": 108288,
          "sources": 94,
          "clones": 35,
          "duplicatedLines": 490,
          "duplicatedTokens": 4094,
          "percentage": 3.37,
          "percentageTokens": 3.78,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      },
      "typescript": {
        "sources": {
          "components/dynamic/index.ts": {
            "lines": 4,
            "tokens": 68,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/tech-icons.ts": {
            "lines": 318,
            "tokens": 1241,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 232,
            "duplicatedTokens": 930,
            "percentage": 72.96,
            "percentageTokens": 74.94,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/shared/auth/adapters/next-auth.ts": {
            "lines": 301,
            "tokens": 2157,
            "sources": 1,
            "clones": 9,
            "duplicatedLines": 105,
            "duplicatedTokens": 1025,
            "percentage": 34.88,
            "percentageTokens": 47.52,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/shared/auth/adapters/express-auth.ts": {
            "lines": 284,
            "tokens": 2017,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 33,
            "duplicatedTokens": 376,
            "percentage": 11.62,
            "percentageTokens": 18.64,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/shared/auth/adapters/azure-auth.ts": {
            "lines": 292,
            "tokens": 2059,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 79,
            "duplicatedTokens": 740,
            "percentage": 27.05,
            "percentageTokens": 35.94,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/shared/auth/__tests__/next-adapter.integration.test.ts": {
            "lines": 169,
            "tokens": 1500,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/shared/auth/__tests__/e2e-auth-flow.test.ts": {
            "lines": 320,
            "tokens": 2770,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 11,
            "duplicatedTokens": 81,
            "percentage": 3.44,
            "percentageTokens": 2.92,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/shared/auth/__tests__/core.test.ts": {
            "lines": 446,
            "tokens": 4172,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 11,
            "duplicatedTokens": 81,
            "percentage": 2.47,
            "percentageTokens": 1.94,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/shared/auth/__tests__/azure-adapter.integration.test.ts": {
            "lines": 257,
            "tokens": 2233,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/azure-ai-foundry/workflows/__tests__/interview-workflow.test.ts": {
            "lines": 422,
            "tokens": 3970,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/azure-ai-foundry/voice/__tests__/useVoiceAgentBridge.test.ts": {
            "lines": 705,
            "tokens": 5791,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 16,
            "duplicatedTokens": 180,
            "percentage": 2.27,
            "percentageTokens": 3.11,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/azure-ai-foundry/agents/__tests__/agents.test.ts": {
            "lines": 371,
            "tokens": 3097,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/utils/__tests__/template-engine.test.ts": {
            "lines": 512,
            "tokens": 4767,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/storage/providers/AzureBlobStorageService.ts": {
            "lines": 146,
            "tokens": 1526,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/shared/auth/types.ts": {
            "lines": 184,
            "tokens": 1274,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/shared/auth/index.ts": {
            "lines": 257,
            "tokens": 1373,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/shared/auth/core.ts": {
            "lines": 829,
            "tokens": 6117,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 11,
            "duplicatedTokens": 99,
            "percentage": 1.33,
            "percentageTokens": 1.62,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/firebase/schema/resume-schema.ts": {
            "lines": 376,
            "tokens": 2651,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 17,
            "duplicatedTokens": 109,
            "percentage": 4.52,
            "percentageTokens": 4.11,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/azure-ai-foundry/workflows/workflow-types.ts": {
            "lines": 463,
            "tokens": 2613,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/azure-ai-foundry/workflows/interview-workflow.ts": {
            "lines": 425,
            "tokens": 3719,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/azure-ai-foundry/voice/voice-telemetry.ts": {
            "lines": 511,
            "tokens": 3710,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/azure-ai-foundry/voice/voice-session.ts": {
            "lines": 527,
            "tokens": 3625,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/azure-ai-foundry/voice/voice-session-storage.ts": {
            "lines": 75,
            "tokens": 347,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/azure-ai-foundry/voice/voice-live-client.ts": {
            "lines": 494,
            "tokens": 3570,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/azure-ai-foundry/voice/voice-insights.ts": {
            "lines": 406,
            "tokens": 2896,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/azure-ai-foundry/voice/voice-agent-bridge.ts": {
            "lines": 634,
            "tokens": 4962,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/azure-ai-foundry/voice/useVoiceAgentBridge.ts": {
            "lines": 681,
            "tokens": 4971,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/azure-ai-foundry/voice/types.ts": {
            "lines": 287,
            "tokens": 2070,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/azure-ai-foundry/voice/foundry-environment.ts": {
            "lines": 135,
            "tokens": 847,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/azure-ai-foundry/types/index.ts": {
            "lines": 228,
            "tokens": 1125,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/azure-ai-foundry/types/foundry-types.ts": {
            "lines": 511,
            "tokens": 2747,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/azure-ai-foundry/types/agent-types.ts": {
            "lines": 140,
            "tokens": 1028,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/azure-ai-foundry/managers/model-manager.ts": {
            "lines": 391,
            "tokens": 2979,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/azure-ai-foundry/errors/foundry-errors.ts": {
            "lines": 224,
            "tokens": 1929,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/azure-ai-foundry/config/foundry-config.ts": {
            "lines": 409,
            "tokens": 2951,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 12,
            "duplicatedTokens": 101,
            "percentage": 2.93,
            "percentageTokens": 3.42,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/azure-ai-foundry/config/environment.ts": {
            "lines": 230,
            "tokens": 1488,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/azure-ai-foundry/clients/migration-wrapper.ts": {
            "lines": 410,
            "tokens": 3018,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 14,
            "duplicatedTokens": 150,
            "percentage": 3.41,
            "percentageTokens": 4.97,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/azure-ai-foundry/clients/foundry-client.ts": {
            "lines": 376,
            "tokens": 2995,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/azure-ai-foundry/agents/technical-interviewer.ts": {
            "lines": 127,
            "tokens": 767,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/azure-ai-foundry/agents/industry-expert.ts": {
            "lines": 360,
            "tokens": 2174,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/azure-ai-foundry/agents/index.ts": {
            "lines": 82,
            "tokens": 164,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/azure-ai-foundry/agents/behavioral-interviewer.ts": {
            "lines": 196,
            "tokens": 1121,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/azure-ai-foundry/agents/base-agent.ts": {
            "lines": 275,
            "tokens": 2130,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/azure-ai-foundry/agents/agent-orchestrator.ts": {
            "lines": 425,
            "tokens": 2940,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/azure-ai-foundry/agents/agent-factory.ts": {
            "lines": 281,
            "tokens": 1798,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/audio/__tests__/micCapture.test.ts": {
            "lines": 232,
            "tokens": 2173,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/ai/__tests__/index.test.ts": {
            "lines": 349,
            "tokens": 3000,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/ai/__tests__/azureOpenAI.test.ts": {
            "lines": 422,
            "tokens": 3409,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/voice/error-recovery.ts": {
            "lines": 294,
            "tokens": 2245,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/voice/azure-adapters.ts": {
            "lines": 518,
            "tokens": 4168,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/voice/audio-utils.ts": {
            "lines": 299,
            "tokens": 2670,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 28,
            "duplicatedTokens": 307,
            "percentage": 9.36,
            "percentageTokens": 11.5,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/voice/agent-state.ts": {
            "lines": 252,
            "tokens": 2018,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/voice/agent-state.test.ts": {
            "lines": 339,
            "tokens": 2918,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/utils/text-preprocessing.ts": {
            "lines": 194,
            "tokens": 1954,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/utils/template-engine.ts": {
            "lines": 428,
            "tokens": 3758,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/utils/telemetry.ts": {
            "lines": 535,
            "tokens": 4235,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 59,
            "duplicatedTokens": 505,
            "percentage": 11.03,
            "percentageTokens": 11.92,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/utils/telemetry-stub.ts": {
            "lines": 128,
            "tokens": 1472,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 35,
            "duplicatedTokens": 294,
            "percentage": 27.34,
            "percentageTokens": 19.97,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/utils/structured-errors.ts": {
            "lines": 580,
            "tokens": 3875,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 15,
            "duplicatedTokens": 181,
            "percentage": 2.59,
            "percentageTokens": 4.67,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/utils/retry-with-backoff.ts": {
            "lines": 303,
            "tokens": 2220,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 17,
            "duplicatedTokens": 104,
            "percentage": 5.61,
            "percentageTokens": 4.68,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/utils/retry-middleware.ts": {
            "lines": 435,
            "tokens": 3168,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 15,
            "duplicatedTokens": 181,
            "percentage": 3.45,
            "percentageTokens": 5.71,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/utils/resume-parser.ts": {
            "lines": 434,
            "tokens": 2866,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/utils/redirect-guard.ts": {
            "lines": 111,
            "tokens": 786,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/utils/network-logger.ts": {
            "lines": 196,
            "tokens": 1546,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 14,
            "duplicatedTokens": 144,
            "percentage": 7.14,
            "percentageTokens": 9.31,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/utils/markdown-sanitizer.ts": {
            "lines": 127,
            "tokens": 1368,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/utils/logger.ts": {
            "lines": 111,
            "tokens": 1078,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/utils/jwt-decoder.ts": {
            "lines": 103,
            "tokens": 838,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/utils/firebase-auth-debug.ts": {
            "lines": 25,
            "tokens": 133,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/utils/error-utils.ts": {
            "lines": 170,
            "tokens": 1259,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/utils/communityInterviewStorage.ts": {
            "lines": 100,
            "tokens": 731,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/utils/audio-helpers.ts": {
            "lines": 211,
            "tokens": 1577,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 12,
            "duplicatedTokens": 170,
            "percentage": 5.69,
            "percentageTokens": 10.78,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/types/voice.ts": {
            "lines": 102,
            "tokens": 567,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/types/index.ts": {
            "lines": 5,
            "tokens": 12,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/test-helpers/browser-test-shims.ts": {
            "lines": 176,
            "tokens": 1279,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/storage/index.ts": {
            "lines": 119,
            "tokens": 818,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/storage/IStorageService.ts": {
            "lines": 83,
            "tokens": 326,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/services/user-targeting.ts": {
            "lines": 149,
            "tokens": 1071,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 12,
            "duplicatedTokens": 125,
            "percentage": 8.05,
            "percentageTokens": 11.67,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/services/unified-config-service.ts": {
            "lines": 845,
            "tokens": 7605,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/services/sendgrid-service.ts": {
            "lines": 335,
            "tokens": 2481,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/services/resume-processing-service.ts": {
            "lines": 416,
            "tokens": 2827,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 64,
            "duplicatedTokens": 586,
            "percentage": 15.38,
            "percentageTokens": 20.73,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/services/resume-export-service.ts": {
            "lines": 404,
            "tokens": 3144,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/services/question-bank-service.ts": {
            "lines": 525,
            "tokens": 3926,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/services/mock-interview.service.ts": {
            "lines": 539,
            "tokens": 3874,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/services/mock-interview.service.test.ts": {
            "lines": 405,
            "tokens": 4117,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/services/keyword-optimizer-service.ts": {
            "lines": 436,
            "tokens": 3044,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/services/job-notification-integration.ts": {
            "lines": 575,
            "tokens": 4665,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/services/gdpr-compliance-service.ts": {
            "lines": 479,
            "tokens": 4233,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 16,
            "duplicatedTokens": 232,
            "percentage": 3.34,
            "percentageTokens": 5.48,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/services/firebase-user-service.ts": {
            "lines": 314,
            "tokens": 2453,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/services/feature-flags.ts": {
            "lines": 183,
            "tokens": 1313,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/services/error-budget-monitor.ts": {
            "lines": 207,
            "tokens": 1554,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/services/enhanced-resume-processing-service.ts": {
            "lines": 710,
            "tokens": 4746,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 53,
            "duplicatedTokens": 468,
            "percentage": 7.46,
            "percentageTokens": 9.86,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/services/email-verification-service.ts": {
            "lines": 336,
            "tokens": 2469,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/services/config-monitoring-service.ts": {
            "lines": 558,
            "tokens": 4162,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/services/cloud-functions-verification.ts": {
            "lines": 143,
            "tokens": 1087,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/services/azure-token-service.ts": {
            "lines": 272,
            "tokens": 2127,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/services/azure-speech-service.ts": {
            "lines": 325,
            "tokens": 2578,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/services/azure-openai.ts": {
            "lines": 141,
            "tokens": 930,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/services/azure-openai-service.ts": {
            "lines": 782,
            "tokens": 5606,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 58,
            "duplicatedTokens": 495,
            "percentage": 7.42,
            "percentageTokens": 8.83,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/services/azure-openai-service.test.ts": {
            "lines": 378,
            "tokens": 2943,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/services/azure-openai-enhanced.ts": {
            "lines": 356,
            "tokens": 2289,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 52,
            "duplicatedTokens": 443,
            "percentage": 14.61,
            "percentageTokens": 19.35,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/services/azure-gdpr-service.ts": {
            "lines": 764,
            "tokens": 6609,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 16,
            "duplicatedTokens": 232,
            "percentage": 2.09,
            "percentageTokens": 3.51,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/services/azure-functions-client.ts": {
            "lines": 553,
            "tokens": 3436,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 24,
            "duplicatedTokens": 202,
            "percentage": 4.34,
            "percentageTokens": 5.88,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/services/azure-form-recognizer.ts": {
            "lines": 329,
            "tokens": 2012,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 33,
            "duplicatedTokens": 255,
            "percentage": 10.03,
            "percentageTokens": 12.67,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/services/azure-blob-storage.ts": {
            "lines": 560,
            "tokens": 4251,
            "sources": 1,
            "clones": 12,
            "duplicatedLines": 156,
            "duplicatedTokens": 1282,
            "percentage": 27.86,
            "percentageTokens": 30.16,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/services/azure-application-insights-service.ts": {
            "lines": 499,
            "tokens": 3595,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 24,
            "duplicatedTokens": 211,
            "percentage": 4.81,
            "percentageTokens": 5.87,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/services/azure-app-config.ts": {
            "lines": 374,
            "tokens": 2682,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/services/azure-app-config-service.ts": {
            "lines": 469,
            "tokens": 3995,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 32,
            "duplicatedTokens": 313,
            "percentage": 6.82,
            "percentageTokens": 7.83,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/services/azure-ai-service.ts": {
            "lines": 651,
            "tokens": 4050,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 22,
            "duplicatedTokens": 137,
            "percentage": 3.38,
            "percentageTokens": 3.38,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/services/ats-optimization-service.ts": {
            "lines": 802,
            "tokens": 6507,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 17,
            "duplicatedTokens": 109,
            "percentage": 2.12,
            "percentageTokens": 1.68,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/monitoring/resume-processing-events.ts": {
            "lines": 472,
            "tokens": 3274,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/middleware/error-handler.ts": {
            "lines": 351,
            "tokens": 2504,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 17,
            "duplicatedTokens": 104,
            "percentage": 4.84,
            "percentageTokens": 4.15,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/middleware/authMiddleware.ts": {
            "lines": 46,
            "tokens": 247,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 12,
            "duplicatedTokens": 122,
            "percentage": 26.09,
            "percentageTokens": 49.39,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/middleware/authMiddleware-unified.ts": {
            "lines": 206,
            "tokens": 1017,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 20,
            "duplicatedTokens": 143,
            "percentage": 9.71,
            "percentageTokens": 14.06,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/hooks/useUnifiedConfig.ts": {
            "lines": 235,
            "tokens": 1948,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/hooks/useServerFeedback.ts": {
            "lines": 43,
            "tokens": 375,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/hooks/useRealtimeFirestore.ts": {
            "lines": 256,
            "tokens": 1776,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 26,
            "duplicatedTokens": 261,
            "percentage": 10.16,
            "percentageTokens": 14.7,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/hooks/useOfflineSupport.ts": {
            "lines": 228,
            "tokens": 1710,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/hooks/useFirestore.ts": {
            "lines": 102,
            "tokens": 679,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 6,
            "duplicatedTokens": 89,
            "percentage": 5.88,
            "percentageTokens": 13.11,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/hooks/useFeatureFlags.ts": {
            "lines": 135,
            "tokens": 1060,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/hooks/useCommunityInterview.ts": {
            "lines": 43,
            "tokens": 317,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/hooks/use-retry.ts": {
            "lines": 542,
            "tokens": 4021,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/firebase/admin.ts": {
            "lines": 201,
            "tokens": 1446,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/examples/voice-usage.ts": {
            "lines": 94,
            "tokens": 617,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/config/voice-config.ts": {
            "lines": 168,
            "tokens": 957,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/config/environment-loader.ts": {
            "lines": 348,
            "tokens": 2312,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/cache/redis-cache.ts": {
            "lines": 752,
            "tokens": 6013,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/azure-ai-foundry/index.ts": {
            "lines": 263,
            "tokens": 1221,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/audio/micCapture.ts": {
            "lines": 218,
            "tokens": 1749,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/audio/example.ts": {
            "lines": 105,
            "tokens": 808,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/ai/index.ts": {
            "lines": 334,
            "tokens": 2237,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/ai/example.ts": {
            "lines": 140,
            "tokens": 751,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/ai/azureOpenAI.ts": {
            "lines": 275,
            "tokens": 1683,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 10,
            "duplicatedTokens": 98,
            "percentage": 3.64,
            "percentageTokens": 5.82,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/ai/azure-ai.ts": {
            "lines": 439,
            "tokens": 3322,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 24,
            "duplicatedTokens": 212,
            "percentage": 5.47,
            "percentageTokens": 6.38,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/actions/general.action.ts": {
            "lines": 12,
            "tokens": 103,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/actions/feedback.action.ts": {
            "lines": 7,
            "tokens": 77,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/actions/dashboard.action.ts": {
            "lines": 11,
            "tokens": 71,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/actions/auth.action.ts": {
            "lines": 196,
            "tokens": 1396,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 12,
            "duplicatedTokens": 122,
            "percentage": 6.12,
            "percentageTokens": 8.74,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/voice-state-machine.test.ts": {
            "lines": 318,
            "tokens": 2591,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/utils.ts": {
            "lines": 314,
            "tokens": 4346,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/errors.ts": {
            "lines": 167,
            "tokens": 1201,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/azure-startup.ts": {
            "lines": 69,
            "tokens": 526,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/azure-config.ts": {
            "lines": 350,
            "tokens": 2963,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 12,
            "duplicatedTokens": 101,
            "percentage": 3.43,
            "percentageTokens": 3.41,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/azure-config-browser.ts": {
            "lines": 123,
            "tokens": 861,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/auth-unified.ts": {
            "lines": 275,
            "tokens": 1682,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 20,
            "duplicatedTokens": 143,
            "percentage": 7.27,
            "percentageTokens": 8.5,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/audio-utils.ts": {
            "lines": 118,
            "tokens": 933,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 10,
            "duplicatedTokens": 105,
            "percentage": 8.47,
            "percentageTokens": 11.25,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/audio-utils.test.ts": {
            "lines": 263,
            "tokens": 2872,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 45910,
          "tokens": 345981,
          "sources": 145,
          "clones": 47,
          "duplicatedLines": 742,
          "duplicatedTokens": 6174,
          "percentage": 1.62,
          "percentageTokens": 1.78,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      },
      "markdown": {
        "sources": {
          "components/dynamic/README.md": {
            "lines": 54,
            "tokens": 512,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/ai/README.md": {
            "lines": 314,
            "tokens": 1889,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 368,
          "tokens": 2401,
          "sources": 2,
          "clones": 0,
          "duplicatedLines": 0,
          "duplicatedTokens": 0,
          "percentage": 0,
          "percentageTokens": 0,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      }
    },
    "total": {
      "lines": 67082,
      "tokens": 501926,
      "sources": 325,
      "clones": 83,
      "duplicatedLines": 1238,
      "duplicatedTokens": 10385,
      "percentage": 1.85,
      "percentageTokens": 2.07,
      "newDuplicatedLines": 0,
      "newClones": 0
    }
  },
  "duplicates": [
    {
      "format": "tsx",
      "lines": 26,
      "fragment": ";\n\nexport const Globe = ({ className }: { className?: string }) => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  useEffect(() => {\n    let phi = 0;\n\n    if (!canvasRef.current) return;\n\n    const globe = createGlobe(canvasRef.current, {\n      devicePixelRatio: 2,\n      width: 600 * 2,\n      height: 600 * 2,\n      phi: 0,\n      theta: 0,\n      dark: 1,\n      diffuse: 1.2,\n      mapSamples: 16000,\n      mapBrightness: 6,\n      baseColor: [0.3, 0.3, 0.3],\n      markerColor: [0.1, 0.8, 1],\n      glowColor: [1, 1, 1],\n      markers: [\n        // longitude latitude\n        { location: [37.7595, -122.4367], size: 0.03 }, // San Francisco",
      "tokens": 0,
      "firstFile": {
        "name": "components/ui/bento-grid-features.tsx",
        "start": 168,
        "end": 193,
        "startLoc": {
          "line": 168,
          "column": 2,
          "position": 1142
        },
        "endLoc": {
          "line": 193,
          "column": 17,
          "position": 1392
        }
      },
      "secondFile": {
        "name": "components/ui/globe.tsx",
        "start": 4,
        "end": 30,
        "startLoc": {
          "line": 4,
          "column": 8,
          "position": 27
        },
        "endLoc": {
          "line": 30,
          "column": 2,
          "position": 278
        }
      }
    },
    {
      "format": "tsx",
      "lines": 22,
      "fragment": "],\n      onRender: (state) => {\n        // Called on every animation frame.\n        // `state` will be an empty object, return updated params.\n        state.phi = phi;\n        phi += 0.01;\n      },\n    });\n\n    return () => {\n      globe.destroy();\n    };\n  }, []);\n\n  return (\n    <canvas\n      ref={canvasRef}\n      style={{ width: 600, height: 600, maxWidth: \"100%\", aspectRatio: 1 }}\n      className={className}\n    />\n  );\n};",
      "tokens": 0,
      "firstFile": {
        "name": "components/ui/bento-grid-features.tsx",
        "start": 218,
        "end": 239,
        "startLoc": {
          "line": 218,
          "column": 7,
          "position": 1983
        },
        "endLoc": {
          "line": 239,
          "column": 2,
          "position": 2119
        }
      },
      "secondFile": {
        "name": "components/ui/globe.tsx",
        "start": 31,
        "end": 52,
        "startLoc": {
          "line": 31,
          "column": 7,
          "position": 301
        },
        "endLoc": {
          "line": 52,
          "column": 2,
          "position": 437
        }
      }
    },
    {
      "format": "tsx",
      "lines": 9,
      "fragment": "<div className=\"banter-loader__box\" />\n        <div className=\"banter-loader__box\" />\n        <div className=\"banter-loader__box\" />\n        <div className=\"banter-loader__box\" />\n        <div className=\"banter-loader__box\" />\n        <div className=\"banter-loader__box\" />\n        <div className=\"banter-loader__box\" />\n        <div className=\"banter-loader__box\" />\n      </",
      "tokens": 0,
      "firstFile": {
        "name": "components/ui/BanterLoader.tsx",
        "start": 32,
        "end": 40,
        "startLoc": {
          "line": 32,
          "column": 9,
          "position": 209
        },
        "endLoc": {
          "line": 40,
          "column": 3,
          "position": 305
        }
      },
      "secondFile": {
        "name": "components/ui/BanterLoader.tsx",
        "start": 31,
        "end": 36,
        "startLoc": {
          "line": 31,
          "column": 9,
          "position": 197
        },
        "endLoc": {
          "line": 36,
          "column": 2,
          "position": 257
        }
      }
    },
    {
      "format": "tsx",
      "lines": 33,
      "fragment": "),\n  { \n    ssr: false,\n    loading: () => (\n      <div className=\"w-full h-full p-6 mb-8 bg-gray-900 border border-gray-700 rounded-lg\">\n        <div className=\"animate-pulse\">\n          <div className=\"h-4 bg-gray-700 rounded w-3/4 mb-6\"></div>\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n            <div className=\"space-y-6\">\n              <div className=\"bg-gray-800 p-6 rounded-lg\">\n                <div className=\"h-6 bg-gray-700 rounded mb-4\"></div>\n                <div className=\"h-32 bg-gray-700 rounded mb-4\"></div>\n                <div className=\"h-40 bg-gray-700 rounded\"></div>\n              </div>\n              <div className=\"bg-gray-800 p-6 rounded-lg\">\n                <div className=\"h-6 bg-gray-700 rounded mb-4\"></div>\n                <div className=\"h-8 bg-gray-700 rounded mb-4\"></div>\n                <div className=\"h-32 bg-gray-700 rounded\"></div>\n              </div>\n              <div className=\"h-12 bg-blue-700 rounded\"></div>\n            </div>\n            <div className=\"bg-gray-800 p-6 rounded-lg\">\n              <div className=\"h-6 bg-gray-700 rounded mb-4\"></div>\n              <div className=\"flex-1 bg-gray-700 rounded h-96\"></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n);\n\nexport default CoverLetterGenerator",
      "tokens": 0,
      "firstFile": {
        "name": "components/dynamic/CoverLetterGeneratorDynamic.tsx",
        "start": 4,
        "end": 36,
        "startLoc": {
          "line": 4,
          "column": 26,
          "position": 28
        },
        "endLoc": {
          "line": 36,
          "column": 21,
          "position": 319
        }
      },
      "secondFile": {
        "name": "components/dynamic/ResumeTailorDynamic.tsx",
        "start": 6,
        "end": 38,
        "startLoc": {
          "line": 6,
          "column": 18,
          "position": 32
        },
        "endLoc": {
          "line": 38,
          "column": 13,
          "position": 323
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": "? \"Active\" : \"Inactive\"}\n                  </Badge>\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <div className=\"space-y-2\">\n                  <div className=\"flex items-center justify-between\">\n                    <Label className=\"text-gray-300\">Rollout Percentage</Label>\n                    <span className=\"text-white font-bold\">\n                      {rolloutPercentages.portalIntegration",
      "tokens": 0,
      "firstFile": {
        "name": "components/admin/FeatureFlagManager.tsx",
        "start": 243,
        "end": 252,
        "startLoc": {
          "line": 243,
          "column": 2,
          "position": 2111
        },
        "endLoc": {
          "line": 252,
          "column": 18,
          "position": 2200
        }
      },
      "secondFile": {
        "name": "components/admin/FeatureFlagManager.tsx",
        "start": 173,
        "end": 182,
        "startLoc": {
          "line": 173,
          "column": 2,
          "position": 1603
        },
        "endLoc": {
          "line": 182,
          "column": 15,
          "position": 1692
        }
      }
    },
    {
      "format": "tsx",
      "lines": 22,
      "fragment": "}%\n                    </span>\n                  </div>\n                  <Progress \n                    value={rolloutPercentages.portalIntegration} \n                    className=\"h-2\"\n                  />\n                </div>\n\n                <div className=\"flex gap-2\">\n                  <Button\n                    size=\"sm\"\n                    variant=\"outline\"\n                    onClick={() => decreaseRollout('portalIntegration')}\n                    className=\"flex items-center gap-1\"\n                  >\n                    <TrendingDown className=\"h-3 w-3\" />\n                    -5%\n                  </Button>\n                  <Button\n                    size=\"sm\"\n                    ",
      "tokens": 0,
      "firstFile": {
        "name": "components/admin/FeatureFlagManager.tsx",
        "start": 252,
        "end": 273,
        "startLoc": {
          "line": 252,
          "column": 18,
          "position": 2201
        },
        "endLoc": {
          "line": 273,
          "column": 21,
          "position": 2320
        }
      },
      "secondFile": {
        "name": "components/admin/FeatureFlagManager.tsx",
        "start": 182,
        "end": 203,
        "startLoc": {
          "line": 182,
          "column": 15,
          "position": 1693
        },
        "endLoc": {
          "line": 203,
          "column": 21,
          "position": 1812
        }
      }
    },
    {
      "format": "tsx",
      "lines": 34,
      "fragment": "variant=\"outline\"\n                    onClick={() => increaseRollout('portalIntegration')}\n                    className=\"flex items-center gap-1\"\n                  >\n                    <TrendingUp className=\"h-3 w-3\" />\n                    +5%\n                  </Button>\n                </div>\n\n                <div className=\"space-y-2\">\n                  <Label className=\"text-gray-300\">Custom Percentage</Label>\n                  <div className=\"flex gap-2\">\n                    <Input\n                      type=\"number\"\n                      min=\"0\"\n                      max=\"100\"\n                      value={rolloutPercentages.portalIntegration}\n                      onChange={(e) => setRolloutPercentages(prev => ({ \n                        ...prev, \n                        portalIntegration: parseInt(e.target.value) || 0 \n                      }))}\n                      className=\"bg-gray-800 border-gray-600 text-white\"\n                    />\n                    <Button\n                      size=\"sm\"\n                      onClick={() => updateRolloutPercentage('portalIntegration', rolloutPercentages.portalIntegration)}\n                    >\n                      Apply\n                    </Button>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </",
      "tokens": 0,
      "firstFile": {
        "name": "components/admin/FeatureFlagManager.tsx",
        "start": 273,
        "end": 306,
        "startLoc": {
          "line": 273,
          "column": 21,
          "position": 2321
        },
        "endLoc": {
          "line": 306,
          "column": 3,
          "position": 2554
        }
      },
      "secondFile": {
        "name": "components/admin/FeatureFlagManager.tsx",
        "start": 203,
        "end": 237,
        "startLoc": {
          "line": 203,
          "column": 21,
          "position": 1813
        },
        "endLoc": {
          "line": 237,
          "column": 2,
          "position": 2047
        }
      }
    },
    {
      "format": "typescript",
      "lines": 117,
      "fragment": "SiNextdotjs,\n  SiSvelte,\n  SiTypescript,\n  SiJavascript,\n  SiTailwindcss,\n  SiMui,\n  SiExpress,\n  SiDjango,\n  SiFlask,\n  SiSpring,\n  SiRuby,\n  SiRubyonrails,\n  SiGo,\n  SiRust,\n  SiDotnet,\n  SiMongodb,\n  SiMysql,\n  SiPostgresql,\n  SiRedis,\n  SiSqlite,\n  SiOracle,\n  SiElasticsearch,\n  SiFlutter,\n  SiSwift,\n  SiKotlin,\n  SiKubernetes,\n  SiGooglecloud,\n  SiFirebase,\n  SiVercel,\n  SiNetlify,\n  SiWebpack,\n  SiVite,\n  SiRollupdotjs,\n  SiBabel,\n  SiEslint,\n  SiPrettier,\n  SiJest,\n  SiCypress,\n  SiRedux,\n  SiMobx,\n  SiGraphql,\n  SiApollographql,\n  SiPostman,\n  SiJenkins,\n  SiGithubactions,\n  SiCircleci,\n  SiTravisci,\n  SiLaravel,\n  SiSymfony,\n  SiCodeigniter,\n  SiShopify,\n  SiStrapi,\n  SiContentful,\n  SiSanity,\n  SiNuxtdotjs,\n  SiGatsby,\n  SiBackbonedotjs,\n  SiPoly,\n  SiAstro,\n  SiFastapi,\n  SiNestjs,\n  SiKoa,\n  SiHp,\n  SiStripe,\n  SiDeno,\n  SiSupabase,\n  SiPrisma,\n  SiSequelize,\n  SiMariadb,\n  SiNeo4J,\n  SiInfluxdb,\n  SiGrafana,\n  SiPrometheus,\n  SiTerraform,\n  SiAnsible,\n  SiPuppet,\n  SiHelm,\n  SiArgo,\n  SiRancher,\n  SiDatadog,\n  SiNewrelic,\n  SiSentry,\n  SiElastic,\n  SiLogstash,\n  SiKibana,\n  SiApachekafka,\n  SiRabbitmq,\n  SiApachespark,\n  SiDatabricks,\n  SiSnowflake,\n  SiTableau,\n  SiPowers,\n  SiQlik,\n  SiD3Dotjs,\n  SiChartdotjs,\n  SiPlotly,\n  SiLeaflet,\n  SiMapbox,\n  SiThreedotjs,\n  SiSelenium,\n  SiTestinglibrary,\n  SiVitest,\n  SiStorybook,\n  SiChromatic,\n  SiZod,\n  SiPyup,\n  SiFigma,\n  SiSketch,\n  SiAdobexd,\n  SiFramer,\n  SiSolidity,\n  SiEthereum,\n  SiWeb3Dotjs,\n  SiIpfs,\n  SiChainlink,\n  SiAlchemy,\n} as",
      "tokens": 0,
      "firstFile": {
        "name": "components/tech-icons.ts",
        "start": 192,
        "end": 308,
        "startLoc": {
          "line": 192,
          "column": 3,
          "position": 696
        },
        "endLoc": {
          "line": 308,
          "column": 3,
          "position": 1161
        }
      },
      "secondFile": {
        "name": "components/tech-icons.ts",
        "start": 47,
        "end": 163,
        "startLoc": {
          "line": 47,
          "column": 3,
          "position": 117
        },
        "endLoc": {
          "line": 163,
          "column": 5,
          "position": 582
        }
      }
    },
    {
      "format": "tsx",
      "lines": 6,
      "fragment": "/>\n                        <AvatarFallback className=\"rounded-lg\">\n                          {(user?.name || user?.email || data.user.name).slice(0, 2).toUpperCase()}\n                        </AvatarFallback>\n                      </Avatar>\n                      <div className=\"grid flex-1 text-left text-sm leading-tight",
      "tokens": 0,
      "firstFile": {
        "name": "components/authenticated-layout.tsx",
        "start": 382,
        "end": 387,
        "startLoc": {
          "line": 382,
          "column": 25,
          "position": 2655
        },
        "endLoc": {
          "line": 387,
          "column": 44,
          "position": 2722
        }
      },
      "secondFile": {
        "name": "components/authenticated-layout.tsx",
        "start": 354,
        "end": 359,
        "startLoc": {
          "line": 354,
          "column": 23,
          "position": 2396
        },
        "endLoc": {
          "line": 359,
          "column": 81,
          "position": 2463
        }
      }
    },
    {
      "format": "tsx",
      "lines": 9,
      "fragment": "\">\n                        <span className=\"truncate font-semibold\">\n                          {user?.name || data.user.name}\n                        </span>\n                        <span className=\"truncate text-xs text-muted-foreground\">\n                          {user?.email || data.user.email}\n                        </span>\n                      </div>\n                    </",
      "tokens": 0,
      "firstFile": {
        "name": "components/authenticated-layout.tsx",
        "start": 387,
        "end": 395,
        "startLoc": {
          "line": 387,
          "column": 44,
          "position": 2723
        },
        "endLoc": {
          "line": 395,
          "column": 3,
          "position": 2796
        }
      },
      "secondFile": {
        "name": "components/authenticated-layout.tsx",
        "start": 359,
        "end": 367,
        "startLoc": {
          "line": 359,
          "column": 81,
          "position": 2464
        },
        "endLoc": {
          "line": 367,
          "column": 2,
          "position": 2537
        }
      }
    },
    {
      "format": "tsx",
      "lines": 16,
      "fragment": ";\n\ninterface ProfileUser {\n  name?: string;\n  email?: string;\n  emailVerified?: boolean;\n  image?: string;\n  about?: string;\n  phone?: string;\n  workplace?: string;\n  skills?: string[];\n  experience?: string;\n  dateOfBirth?: string;\n}\n\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "components/ProfileForm.tsx",
        "start": 12,
        "end": 27,
        "startLoc": {
          "line": 12,
          "column": 15,
          "position": 130
        },
        "endLoc": {
          "line": 27,
          "column": 7,
          "position": 224
        }
      },
      "secondFile": {
        "name": "components/dynamic/ProfileFormDynamic.tsx",
        "start": 3,
        "end": 18,
        "startLoc": {
          "line": 3,
          "column": 15,
          "position": 11
        },
        "endLoc": {
          "line": 18,
          "column": 10,
          "position": 105
        }
      }
    },
    {
      "format": "tsx",
      "lines": 13,
      "fragment": "interface PdfUploadButtonProps {\n  onQuestionsGenerated?: (result: {\n    questions: string[];\n    fileUrl: string;\n    resumeId: string;\n    extractedData?: any;\n  }) => void;\n  onUploadStart?: () => void;\n  onUploadEnd?: () => void;\n  onResumeReplaced?: () => void;\n}\n\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "components/PdfUploadButtonWrapper.tsx",
        "start": 24,
        "end": 36,
        "startLoc": {
          "line": 24,
          "column": 1,
          "position": 132
        },
        "endLoc": {
          "line": 36,
          "column": 7,
          "position": 231
        }
      },
      "secondFile": {
        "name": "components/dynamic/PdfUploadButtonDynamic.tsx",
        "start": 6,
        "end": 18,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 27
        },
        "endLoc": {
          "line": 18,
          "column": 6,
          "position": 126
        }
      }
    },
    {
      "format": "tsx",
      "lines": 13,
      "fragment": "interface PdfUploadButtonProps {\n  onQuestionsGenerated?: (result: {\n    questions: string[];\n    fileUrl: string;\n    resumeId: string;\n    extractedData?: any;\n  }) => void;\n  onUploadStart?: () => void;\n  onUploadEnd?: () => void;\n  onResumeReplaced?: () => void;\n}\n\nconst PdfUploadButton",
      "tokens": 0,
      "firstFile": {
        "name": "components/PdfUploadButton.tsx",
        "start": 49,
        "end": 61,
        "startLoc": {
          "line": 49,
          "column": 1,
          "position": 394
        },
        "endLoc": {
          "line": 61,
          "column": 16,
          "position": 495
        }
      },
      "secondFile": {
        "name": "components/dynamic/PdfUploadButtonDynamic.tsx",
        "start": 6,
        "end": 18,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 27
        },
        "endLoc": {
          "line": 18,
          "column": 16,
          "position": 128
        }
      }
    },
    {
      "format": "tsx",
      "lines": 13,
      "fragment": ");\n\n  const handleLogout = async () => {\n    try {\n      await fetch(\"/api/profile/logout\", { method: \"POST\" });\n      router.push(\"/marketing\");\n      router.refresh();\n    } catch (error) {\n      console.error('Logout failed:', error);\n    }\n  };\n\n  return",
      "tokens": 0,
      "firstFile": {
        "name": "components/LogoutButton.tsx",
        "start": 5,
        "end": 17,
        "startLoc": {
          "line": 5,
          "column": 2,
          "position": 38
        },
        "endLoc": {
          "line": 17,
          "column": 7,
          "position": 131
        }
      },
      "secondFile": {
        "name": "components/authenticated-layout.tsx",
        "start": 205,
        "end": 217,
        "startLoc": {
          "line": 205,
          "column": 2,
          "position": 1263
        },
        "endLoc": {
          "line": 217,
          "column": 46,
          "position": 1356
        }
      }
    },
    {
      "format": "tsx",
      "lines": 15,
      "fragment": "} Interview</h3>\n\n                    {/* Date & Score */}\n                    <div className=\"flex flex-row gap-5 mt-3\">\n                        <div className=\"flex flex-row gap-2\">\n                            <Image\n                                src=\"/calendar.svg\"\n                                width={22}\n                                height={22}\n                                alt=\"calendar\"\n                            />\n                            <p>{formattedDate}</p>\n                        </div>\n\n                        <",
      "tokens": 0,
      "firstFile": {
        "name": "components/InterviewCard.tsx",
        "start": 67,
        "end": 81,
        "startLoc": {
          "line": 67,
          "column": 5,
          "position": 473
        },
        "endLoc": {
          "line": 81,
          "column": 2,
          "position": 556
        }
      },
      "secondFile": {
        "name": "components/InterviewCardClient.tsx",
        "start": 113,
        "end": 128,
        "startLoc": {
          "line": 113,
          "column": 3,
          "position": 825
        },
        "endLoc": {
          "line": 128,
          "column": 2,
          "position": 910
        }
      }
    },
    {
      "format": "tsx",
      "lines": 8,
      "fragment": "techstack.slice(0, 4).map((tech, index) => {\n                                // Check if the tech string is a valid TechIconName\n                                const isValidTechIcon = tech in techIconMap;\n                                return isValidTechIcon ? (\n                                    <DisplayTechIcons key={index} name={tech as TechIconName} size={20} />\n                                ) : null;\n                            }).filter(Boolean)\n                            :",
      "tokens": 0,
      "firstFile": {
        "name": "components/InterviewCard.tsx",
        "start": 97,
        "end": 104,
        "startLoc": {
          "line": 97,
          "column": 29,
          "position": 702
        },
        "endLoc": {
          "line": 104,
          "column": 2,
          "position": 795
        }
      },
      "secondFile": {
        "name": "components/InterviewCardClient.tsx",
        "start": 155,
        "end": 161,
        "startLoc": {
          "line": 155,
          "column": 2,
          "position": 1104
        },
        "endLoc": {
          "line": 161,
          "column": 2,
          "position": 1195
        }
      }
    },
    {
      "format": "tsx",
      "lines": 13,
      "fragment": ", {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            idToken,\n            name: user.displayName || user.email?.split('@')[0] || 'User',\n            email: user.email,\n          }),\n        });\n\n        console.log(`🔐 ",
      "tokens": 0,
      "firstFile": {
        "name": "components/GoogleAuthButton.tsx",
        "start": 58,
        "end": 70,
        "startLoc": {
          "line": 58,
          "column": 9,
          "position": 483
        },
        "endLoc": {
          "line": 70,
          "column": 5,
          "position": 578
        }
      },
      "secondFile": {
        "name": "components/GoogleSignInButton.tsx",
        "start": 115,
        "end": 127,
        "startLoc": {
          "line": 115,
          "column": 19,
          "position": 898
        },
        "endLoc": {
          "line": 127,
          "column": 31,
          "position": 993
        }
      }
    },
    {
      "format": "tsx",
      "lines": 14,
      "fragment": ";\n\n  return (\n    <Button \n      variant=\"outline\" \n      type=\"button\" \n      className=\"w-full flex items-center justify-center gap-3 !bg-dark-200 hover:!bg-dark-200/80 !text-light-100 !border-white/20 hover:!border-white/30 !rounded-full !min-h-12\"\n      onClick={handleGoogleAuth}\n      disabled={isLoading}\n    >\n      {isLoading ? (\n        <>\n          <div className=\"animate-spin rounded-full h-5 w-5 border-t-2 border-b-2 border-gray-400\"></div>\n          <span>{",
      "tokens": 0,
      "firstFile": {
        "name": "components/GoogleAuthButton.tsx",
        "start": 189,
        "end": 202,
        "startLoc": {
          "line": 189,
          "column": 16,
          "position": 1568
        },
        "endLoc": {
          "line": 202,
          "column": 2,
          "position": 1642
        }
      },
      "secondFile": {
        "name": "components/GoogleSignInButton.tsx",
        "start": 181,
        "end": 194,
        "startLoc": {
          "line": 181,
          "column": 2,
          "position": 1486
        },
        "endLoc": {
          "line": 194,
          "column": 8,
          "position": 1560
        }
      }
    },
    {
      "format": "tsx",
      "lines": 12,
      "fragment": "</span>\n        </>\n      ) : (\n        <>\n          <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z\" fill=\"#4285F4\"/>\n            <path d=\"M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.28-1.93-6.14-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z\" fill=\"#34A853\"/>\n            <path d=\"M5.86 14.09c-.26-.77-.41-1.6-.41-2.45 0-.85.15-1.68.41-2.45V6.35H2.18C1.42 7.8 1 9.39 1 11s.42 3.2 1.18 4.65l3.68-2.84.01.01z\" fill=\"#FBBC05\"/>\n            <path d=\"M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 6.35l3.68 2.84c.86-2.6 3.28-4.53 6.14-4.53z\" fill=\"#EA4335\"/>\n            <path d=\"M1 1h22v22H1z\" fill=\"none\"/>\n          </svg>\n          <span>{",
      "tokens": 0,
      "firstFile": {
        "name": "components/GoogleAuthButton.tsx",
        "start": 202,
        "end": 213,
        "startLoc": {
          "line": 202,
          "column": 2,
          "position": 1645
        },
        "endLoc": {
          "line": 213,
          "column": 2,
          "position": 1794
        }
      },
      "secondFile": {
        "name": "components/GoogleSignInButton.tsx",
        "start": 194,
        "end": 205,
        "startLoc": {
          "line": 194,
          "column": 4,
          "position": 1564
        },
        "endLoc": {
          "line": 205,
          "column": 7,
          "position": 1713
        }
      }
    },
    {
      "format": "tsx",
      "lines": 22,
      "fragment": ";\n\ninterface ExtractedResumeData {\n  personalInfo?: {\n    name?: string;\n    email?: string;\n    phone?: string;\n    address?: string;\n    linkedin?: string;\n    github?: string;\n    website?: string;\n  };\n  summary?: string;\n  skills?: string[];\n  experience?: any[];\n  education?: any[];\n  projects?: any[];\n  certifications?: any[];\n  languages?: any[];\n}\n\ninterface FoundryAgentProps",
      "tokens": 0,
      "firstFile": {
        "name": "components/FoundryVoiceAgent.tsx",
        "start": 30,
        "end": 51,
        "startLoc": {
          "line": 30,
          "column": 37,
          "position": 150
        },
        "endLoc": {
          "line": 51,
          "column": 18,
          "position": 299
        }
      },
      "secondFile": {
        "name": "components/ResumeContext.tsx",
        "start": 3,
        "end": 24,
        "startLoc": {
          "line": 3,
          "column": 8,
          "position": 27
        },
        "endLoc": {
          "line": 24,
          "column": 11,
          "position": 176
        }
      }
    },
    {
      "format": "tsx",
      "lines": 13,
      "fragment": "(true);\n    try {\n      const response = await fetch('/api/auth/resend-verification', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        toast.success('Verification email sent! Please check your inbox.'",
      "tokens": 0,
      "firstFile": {
        "name": "components/EmailVerificationBanner.tsx",
        "start": 19,
        "end": 31,
        "startLoc": {
          "line": 19,
          "column": 13,
          "position": 184
        },
        "endLoc": {
          "line": 31,
          "column": 52,
          "position": 273
        }
      },
      "secondFile": {
        "name": "components/ProfileForm.tsx",
        "start": 79,
        "end": 91,
        "startLoc": {
          "line": 79,
          "column": 25,
          "position": 859
        },
        "endLoc": {
          "line": 91,
          "column": 27,
          "position": 948
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": "\">\n            <ul className=\"space-y-2\">\n              {navigation.map((item) => {\n                const isActive = pathname === item.href || \n                  (item.href !== '/dashboard' && pathname?.startsWith(item.href));\n                const IconComponent = item.icon;\n                \n                return (\n                  <li key={item.name}>\n                    <Link\n                      ",
      "tokens": 0,
      "firstFile": {
        "name": "components/DashboardLayout.tsx",
        "start": 135,
        "end": 145,
        "startLoc": {
          "line": 135,
          "column": 17,
          "position": 1100
        },
        "endLoc": {
          "line": 145,
          "column": 23,
          "position": 1205
        }
      },
      "secondFile": {
        "name": "components/DashboardLayout.tsx",
        "start": 81,
        "end": 91,
        "startLoc": {
          "line": 81,
          "column": 10,
          "position": 703
        },
        "endLoc": {
          "line": 91,
          "column": 25,
          "position": 808
        }
      }
    },
    {
      "format": "tsx",
      "lines": 15,
      "fragment": ", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        resumeText,\n        jobDescription,\n      }),\n    });\n\n    const data = await response.json();\n\n    if (!response.ok) {\n      throw new Error(data.error || 'Failed to generate cover letter'",
      "tokens": 0,
      "firstFile": {
        "name": "components/CoverLetterGenerator.tsx",
        "start": 36,
        "end": 50,
        "startLoc": {
          "line": 36,
          "column": 20,
          "position": 327
        },
        "endLoc": {
          "line": 50,
          "column": 34,
          "position": 426
        }
      },
      "secondFile": {
        "name": "components/ResumeTailor.tsx",
        "start": 10,
        "end": 24,
        "startLoc": {
          "line": 10,
          "column": 21,
          "position": 109
        },
        "endLoc": {
          "line": 24,
          "column": 37,
          "position": 208
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": ");\n  const [error, setError] = useState<string | null>(null);\n  \n\n  const handleFileUpload = async (event: React.ChangeEvent<HTMLInputElement>, type: 'resume' | 'job') => {\n    const files = event.target.files;\n    if (!files || files.length === 0) return;\n\n    setError(null);\n    setIsProcessing",
      "tokens": 0,
      "firstFile": {
        "name": "components/CoverLetterGenerator.tsx",
        "start": 68,
        "end": 77,
        "startLoc": {
          "line": 68,
          "column": 6,
          "position": 604
        },
        "endLoc": {
          "line": 77,
          "column": 16,
          "position": 714
        }
      },
      "secondFile": {
        "name": "components/ResumeTailor.tsx",
        "start": 98,
        "end": 107,
        "startLoc": {
          "line": 98,
          "column": 8,
          "position": 881
        },
        "endLoc": {
          "line": 107,
          "column": 4,
          "position": 991
        }
      }
    },
    {
      "format": "tsx",
      "lines": 8,
      "fragment": "if (file.size > 10 * 1024 * 1024) {\n        throw new Error('File size exceeds 10MB limit. Please use a smaller file.');\n      }\n\n      if (file.type === 'text/plain') {\n        text = await file.text();\n      } else if (file.type === 'application/pdf') {\n        text",
      "tokens": 0,
      "firstFile": {
        "name": "components/CoverLetterGenerator.tsx",
        "start": 83,
        "end": 90,
        "startLoc": {
          "line": 83,
          "column": 7,
          "position": 752
        },
        "endLoc": {
          "line": 90,
          "column": 5,
          "position": 838
        }
      },
      "secondFile": {
        "name": "components/ResumeTailor.tsx",
        "start": 112,
        "end": 119,
        "startLoc": {
          "line": 112,
          "column": 7,
          "position": 1023
        },
        "endLoc": {
          "line": 119,
          "column": 41,
          "position": 1109
        }
      }
    },
    {
      "format": "tsx",
      "lines": 13,
      "fragment": ");\n      }\n\n      if (type === 'resume') {\n        setResumeText(text);\n      } else {\n        setJobDescription(text);\n      }\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : 'Failed to process the file.';\n      setError(errorMessage);\n      console.error('Error parsing file:', error);\n    } finally",
      "tokens": 0,
      "firstFile": {
        "name": "components/CoverLetterGenerator.tsx",
        "start": 92,
        "end": 104,
        "startLoc": {
          "line": 92,
          "column": 54,
          "position": 865
        },
        "endLoc": {
          "line": 104,
          "column": 8,
          "position": 966
        }
      },
      "secondFile": {
        "name": "components/ResumeTailor.tsx",
        "start": 125,
        "end": 138,
        "startLoc": {
          "line": 125,
          "column": 77,
          "position": 1170
        },
        "endLoc": {
          "line": 138,
          "column": 2,
          "position": 1272
        }
      }
    },
    {
      "format": "tsx",
      "lines": 15,
      "fragment": "= async () => {\n    if (!resumeText.trim()) {\n      setError('Please provide your resume content.');\n      return;\n    }\n\n    if (!jobDescription.trim()) {\n      setError('Please provide the job description.');\n      return;\n    }\n\n\n    setError(null);\n    setIsProcessing(true);\n    setGeneratedCoverLetter",
      "tokens": 0,
      "firstFile": {
        "name": "components/CoverLetterGenerator.tsx",
        "start": 109,
        "end": 123,
        "startLoc": {
          "line": 109,
          "column": 2,
          "position": 990
        },
        "endLoc": {
          "line": 123,
          "column": 24,
          "position": 1075
        }
      },
      "secondFile": {
        "name": "components/ResumeTailor.tsx",
        "start": 160,
        "end": 173,
        "startLoc": {
          "line": 160,
          "column": 2,
          "position": 1432
        },
        "endLoc": {
          "line": 173,
          "column": 18,
          "position": 1516
        }
      }
    },
    {
      "format": "tsx",
      "lines": 15,
      "fragment": ".\n        </p>\n      </div>\n\n      {error && (\n        <div className=\"mb-6 p-4 bg-red-900/30 border border-red-500/60 rounded-lg flex items-start\">\n          <AlertCircle className=\"w-5 h-5 text-red-400 mr-2 mt-0.5 flex-shrink-0\" />\n          <p className=\"text-red-300 text-sm\">{error}</p>\n        </div>\n      )}\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 h-full\">\n        {/* Left Column - Inputs */}\n        <div className=\"space-y-6\">\n          <",
      "tokens": 0,
      "firstFile": {
        "name": "components/CoverLetterGenerator.tsx",
        "start": 183,
        "end": 197,
        "startLoc": {
          "line": 183,
          "column": 5,
          "position": 1662
        },
        "endLoc": {
          "line": 197,
          "column": 2,
          "position": 1761
        }
      },
      "secondFile": {
        "name": "components/ResumeTailor.tsx",
        "start": 253,
        "end": 267,
        "startLoc": {
          "line": 253,
          "column": 10,
          "position": 2450
        },
        "endLoc": {
          "line": 267,
          "column": 2,
          "position": 2549
        }
      }
    },
    {
      "format": "tsx",
      "lines": 9,
      "fragment": "<div className=\"bg-gray-900 border border-gray-700 rounded-lg p-6 shadow-md\">\n            <div className=\"flex items-center mb-4\">\n              <FileText className=\"w-5 h-5 text-blue-400 mr-2\" />\n              <h3 className=\"text-xl font-semibold text-white\">Your Resume</h3>\n            </div>\n\n            <div className=\"mb-4\">\n              <label className=\"block text-sm font-medium text-gray-200 mb-2\">\n                Upload Resume File (PDF",
      "tokens": 0,
      "firstFile": {
        "name": "components/CoverLetterGenerator.tsx",
        "start": 197,
        "end": 205,
        "startLoc": {
          "line": 197,
          "column": 11,
          "position": 1761
        },
        "endLoc": {
          "line": 205,
          "column": 4,
          "position": 1847
        }
      },
      "secondFile": {
        "name": "components/ResumeTailor.tsx",
        "start": 268,
        "end": 276,
        "startLoc": {
          "line": 268,
          "column": 11,
          "position": 2554
        },
        "endLoc": {
          "line": 276,
          "column": 4,
          "position": 2640
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": ")\n              </label>\n              <div className=\"flex items-center justify-center w-full\">\n                <label className=\"flex flex-col items-center justify-center w-full h-32 border-2 border-gray-600 border-dashed rounded-lg cursor-pointer bg-gray-800 hover:border-blue-500 hover:bg-gray-750 transition-colors\">\n                  <div className=\"flex flex-col items-center justify-center pt-5 pb-6\">\n                    <Upload className=\"w-8 h-8 mb-4 text-gray-400\" />\n                    <p className=\"mb-2 text-sm text-gray-300\">\n                      <span className=\"font-semibold\">Click to upload</span> or drag and drop\n                    </p>\n                    <p className=\"text-xs text-gray-400\">PDF",
      "tokens": 0,
      "firstFile": {
        "name": "components/CoverLetterGenerator.tsx",
        "start": 205,
        "end": 214,
        "startLoc": {
          "line": 205,
          "column": 7,
          "position": 1854
        },
        "endLoc": {
          "line": 214,
          "column": 4,
          "position": 1959
        }
      },
      "secondFile": {
        "name": "components/ResumeTailor.tsx",
        "start": 276,
        "end": 285,
        "startLoc": {
          "line": 276,
          "column": 12,
          "position": 2645
        },
        "endLoc": {
          "line": 285,
          "column": 4,
          "position": 2750
        }
      }
    },
    {
      "format": "tsx",
      "lines": 19,
      "fragment": "&& (\n              <div className=\"flex space-x-2\">\n                <button\n                  onClick={copyToClipboard}\n                  className=\"inline-flex items-center px-3 py-1.5 border border-gray-600 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-300 bg-gray-800 hover:bg-gray-700 hover:text-white focus:outline-none focus:ring-2 focus:ring-blue-500 transition-colors\"\n                >\n                  {copied ? (\n                    <Check className=\"w-4 h-4 mr-1 text-green-400\" />\n                  ) : (\n                    <Copy className=\"w-4 h-4 mr-1\" />\n                  )}\n                  {copied ? 'Copied!' : 'Copy'}\n                </button>\n                <button\n                  onClick={downloadAsPdf}\n                  className=\"inline-flex items-center px-3 py-1.5 border border-gray-600 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-300 bg-gray-800 hover:bg-gray-700 hover:text-white focus:outline-none focus:ring-2 focus:ring-blue-500 transition-colors\"\n                >\n                  <Download className=\"w-4 h-4 mr-1\" />\n                  Download PDF",
      "tokens": 0,
      "firstFile": {
        "name": "components/CoverLetterGenerator.tsx",
        "start": 279,
        "end": 297,
        "startLoc": {
          "line": 279,
          "column": 2,
          "position": 2411
        },
        "endLoc": {
          "line": 297,
          "column": 4,
          "position": 2538
        }
      },
      "secondFile": {
        "name": "components/ResumeTailor.tsx",
        "start": 404,
        "end": 423,
        "startLoc": {
          "line": 404,
          "column": 2,
          "position": 3547
        },
        "endLoc": {
          "line": 423,
          "column": 3,
          "position": 3675
        }
      }
    },
    {
      "format": "tsx",
      "lines": 22,
      "fragment": ";\n\ninterface ExtractedResumeData {\n    personalInfo?: {\n        name?: string;\n        email?: string;\n        phone?: string;\n        address?: string;\n        linkedin?: string;\n        github?: string;\n        website?: string;\n    };\n    summary?: string;\n    skills?: string[];\n    experience?: any[];\n    education?: any[];\n    projects?: any[];\n    certifications?: any[];\n    languages?: any[];\n}\n\ninterface AgentProps",
      "tokens": 0,
      "firstFile": {
        "name": "components/Agent.tsx",
        "start": 49,
        "end": 70,
        "startLoc": {
          "line": 49,
          "column": 20,
          "position": 275
        },
        "endLoc": {
          "line": 70,
          "column": 11,
          "position": 424
        }
      },
      "secondFile": {
        "name": "components/ResumeContext.tsx",
        "start": 3,
        "end": 24,
        "startLoc": {
          "line": 3,
          "column": 8,
          "position": 27
        },
        "endLoc": {
          "line": 24,
          "column": 11,
          "position": 176
        }
      }
    },
    {
      "format": "tsx",
      "lines": 7,
      "fragment": "const timeoutPromise = new Promise((_, reject) => {\n            setTimeout(() => reject(new Error('Profile image request timeout')), 5000);\n        });\n        \n        Promise.race([loadUserProfileImage(), timeoutPromise])\n            .catch(() => {\n                // Timeout fallback - use generated avatar",
      "tokens": 0,
      "firstFile": {
        "name": "components/Agent.tsx",
        "start": 157,
        "end": 163,
        "startLoc": {
          "line": 157,
          "column": 9,
          "position": 1211
        },
        "endLoc": {
          "line": 163,
          "column": 43,
          "position": 1289
        }
      },
      "secondFile": {
        "name": "components/FoundryVoiceAgent.tsx",
        "start": 189,
        "end": 194,
        "startLoc": {
          "line": 189,
          "column": 5,
          "position": 1249
        },
        "endLoc": {
          "line": 194,
          "column": 6,
          "position": 1324
        }
      }
    },
    {
      "format": "tsx",
      "lines": 12,
      "fragment": ";\n\n    // Auto-end interview when complete\n    useEffect(() => {\n        if (state.isInterviewComplete && isInterviewActive) {\n            logger.success('Interview completed - auto-ending in 2 seconds');\n            const timeoutId = setTimeout(() => {\n                handleEndInterview();\n            }, 2000);\n            return () => clearTimeout(timeoutId);\n        }\n    }, [state.isInterviewComplete, isInterviewActive]",
      "tokens": 0,
      "firstFile": {
        "name": "components/Agent.tsx",
        "start": 182,
        "end": 193,
        "startLoc": {
          "line": 182,
          "column": 2,
          "position": 1474
        },
        "endLoc": {
          "line": 193,
          "column": 2,
          "position": 1572
        }
      },
      "secondFile": {
        "name": "components/FoundryVoiceAgent.tsx",
        "start": 243,
        "end": 254,
        "startLoc": {
          "line": 243,
          "column": 2,
          "position": 1678
        },
        "endLoc": {
          "line": 254,
          "column": 2,
          "position": 1776
        }
      }
    },
    {
      "format": "tsx",
      "lines": 23,
      "fragment": "useEffect(() => {\n        if (isInterviewFinished && state.messages.length > 0 && interviewId && type !== \"generate\") {\n            handleAsyncError(\n                async () => {\n                    const { success, feedbackId: id } = await createFeedback({\n                        interviewId: interviewId!,\n                        userId: userId!,\n                        transcript: state.messages,\n                        feedbackId,\n                    });\n                    \n                    if (success && id) {\n                        dispatch({ \n                            type: 'SET_FEEDBACK_GENERATED', \n                            payload: { generated: true, id } \n                        });\n                        logger.success('Feedback generated successfully', { id });\n                    }\n                },\n                'Failed to generate feedback'\n            );\n        }\n        // No cleanup needed for this effect",
      "tokens": 0,
      "firstFile": {
        "name": "components/Agent.tsx",
        "start": 196,
        "end": 218,
        "startLoc": {
          "line": 196,
          "column": 5,
          "position": 1581
        },
        "endLoc": {
          "line": 218,
          "column": 37,
          "position": 1779
        }
      },
      "secondFile": {
        "name": "components/FoundryVoiceAgent.tsx",
        "start": 257,
        "end": 279,
        "startLoc": {
          "line": 257,
          "column": 3,
          "position": 1788
        },
        "endLoc": {
          "line": 279,
          "column": 2,
          "position": 1982
        }
      }
    },
    {
      "format": "tsx",
      "lines": 13,
      "fragment": ">\n                                    </div>\n                                );\n                            })}\n                            {/* Show indicator if there are more messages */}\n                            {state.messages.length > 6 && (\n                                <div className=\"text-xs text-gray-500 dark:text-gray-400 text-center py-2 italic\">\n                                    ... {state.messages.length - 6} earlier messages (stored for feedback)\n                                </div>\n                            )}\n                        </div>\n                    </div>\n                    {",
      "tokens": 0,
      "firstFile": {
        "name": "components/Agent.tsx",
        "start": 704,
        "end": 716,
        "startLoc": {
          "line": 704,
          "column": 2,
          "position": 5936
        },
        "endLoc": {
          "line": 716,
          "column": 2,
          "position": 6031
        }
      },
      "secondFile": {
        "name": "components/FoundryVoiceAgent.tsx",
        "start": 495,
        "end": 507,
        "startLoc": {
          "line": 495,
          "column": 4,
          "position": 3809
        },
        "endLoc": {
          "line": 507,
          "column": 2,
          "position": 3904
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": ",\n  iterations: number = 100\n): Promise<Record<string, any>> {\n  const monitor = AuthPerformanceMonitor.getInstance();\n  const results: number[] = [];\n\n  for (let i = 0; i < iterations; i++) {\n    const endTiming = monitor.startTiming('benchmark');\n    \n    // Simulate middleware execution",
      "tokens": 0,
      "firstFile": {
        "name": "lib/shared/auth/adapters/express-auth.ts",
        "start": 224,
        "end": 233,
        "startLoc": {
          "line": 224,
          "column": 15,
          "position": 1515
        },
        "endLoc": {
          "line": 233,
          "column": 33,
          "position": 1617
        }
      },
      "secondFile": {
        "name": "lib/shared/auth/adapters/next-auth.ts",
        "start": 277,
        "end": 285,
        "startLoc": {
          "line": 277,
          "column": 12,
          "position": 1852
        },
        "endLoc": {
          "line": 285,
          "column": 6,
          "position": 1952
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ");\n  }\n\n  const sorted = results.sort((a, b) => a - b);\n  const sum = results.reduce((a, b) => a + b, 0);\n\n  return {\n    iterations,\n    average: sum / iterations,\n    median: sorted[Math.floor(sorted.length / 2)],\n    p95: sorted[Math.floor(sorted.length * 0.95)],\n    p99: sorted[Math.floor(sorted.length * 0.99)],\n    min: sorted[0],\n    max: sorted[sorted.length - 1]\n  };\n}",
      "tokens": 0,
      "firstFile": {
        "name": "lib/shared/auth/adapters/express-auth.ts",
        "start": 247,
        "end": 262,
        "startLoc": {
          "line": 247,
          "column": 2,
          "position": 1749
        },
        "endLoc": {
          "line": 262,
          "column": 2,
          "position": 1928
        }
      },
      "secondFile": {
        "name": "lib/shared/auth/adapters/next-auth.ts",
        "start": 287,
        "end": 302,
        "startLoc": {
          "line": 287,
          "column": 9,
          "position": 1978
        },
        "endLoc": {
          "line": 302,
          "column": 2,
          "position": 2157
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "const authHeader = req.headers.authorization || req.headers.Authorization;\n    const authResult = await verifyAuthHeader(authHeader);\n\n    if (!authResult.success || !authResult.user) {\n      const error = new UnifiedAuthError(\n        authResult.errorCode || AuthErrorCode.INVALID_TOKEN,\n        authResult.error || 'Authentication failed'\n      );\n\n      return",
      "tokens": 0,
      "firstFile": {
        "name": "lib/shared/auth/adapters/azure-auth.ts",
        "start": 36,
        "end": 45,
        "startLoc": {
          "line": 36,
          "column": 5,
          "position": 159
        },
        "endLoc": {
          "line": 45,
          "column": 7,
          "position": 254
        }
      },
      "secondFile": {
        "name": "lib/shared/auth/adapters/express-auth.ts",
        "start": 39,
        "end": 48,
        "startLoc": {
          "line": 39,
          "column": 7,
          "position": 205
        },
        "endLoc": {
          "line": 48,
          "column": 10,
          "position": 300
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ";\n    const authResult = await verifyAuthHeader(authHeader);\n\n    if (!authResult.success || !authResult.user) {\n      const error = new UnifiedAuthError(\n        authResult.errorCode || AuthErrorCode.INVALID_TOKEN,\n        authResult.error || 'Authentication failed'\n      );\n\n      return {\n        success: false,\n        user: null,\n        response: createAzureErrorResponse",
      "tokens": 0,
      "firstFile": {
        "name": "lib/shared/auth/adapters/azure-auth.ts",
        "start": 36,
        "end": 48,
        "startLoc": {
          "line": 36,
          "column": 14,
          "position": 178
        },
        "endLoc": {
          "line": 48,
          "column": 25,
          "position": 276
        }
      },
      "secondFile": {
        "name": "lib/shared/auth/adapters/next-auth.ts",
        "start": 34,
        "end": 46,
        "startLoc": {
          "line": 34,
          "column": 2,
          "position": 175
        },
        "endLoc": {
          "line": 46,
          "column": 20,
          "position": 273
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "(error),\n        error: error.message,\n        errorCode: error.code\n      };\n    }\n\n    // Check roles if required\n    if (options.requiredRoles?.length) {\n      const auth = getUnifiedAuth();\n      if (!auth.hasRequiredRoles(authResult.user, options.requiredRoles)) {\n        const error = UnifiedAuthError.insufficientPermissions(options.requiredRoles);\n        return {\n          success: false,\n          user: null,\n          response: createAzureErrorResponse",
      "tokens": 0,
      "firstFile": {
        "name": "lib/shared/auth/adapters/azure-auth.ts",
        "start": 48,
        "end": 62,
        "startLoc": {
          "line": 48,
          "column": 25,
          "position": 277
        },
        "endLoc": {
          "line": 62,
          "column": 25,
          "position": 398
        }
      },
      "secondFile": {
        "name": "lib/shared/auth/adapters/next-auth.ts",
        "start": 46,
        "end": 60,
        "startLoc": {
          "line": 46,
          "column": 20,
          "position": 274
        },
        "endLoc": {
          "line": 60,
          "column": 20,
          "position": 395
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": "(error),\n          error: error.message,\n          errorCode: error.code\n        };\n      }\n    }\n\n    // Custom validation\n    if (options.customValidator) {\n      const isValid = await options.customValidator(authResult.user);\n      if (!isValid) {\n        const error = new UnifiedAuthError(\n          AuthErrorCode.INSUFFICIENT_PERMISSIONS,\n          'Custom validation failed'\n        );\n        return {\n          success: false,\n          user: null,\n          response: createAzureErrorResponse",
      "tokens": 0,
      "firstFile": {
        "name": "lib/shared/auth/adapters/azure-auth.ts",
        "start": 62,
        "end": 80,
        "startLoc": {
          "line": 62,
          "column": 25,
          "position": 399
        },
        "endLoc": {
          "line": 80,
          "column": 25,
          "position": 523
        }
      },
      "secondFile": {
        "name": "lib/shared/auth/adapters/next-auth.ts",
        "start": 60,
        "end": 78,
        "startLoc": {
          "line": 60,
          "column": 20,
          "position": 396
        },
        "endLoc": {
          "line": 78,
          "column": 20,
          "position": 520
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ",\n  iterations: number = 100\n): Promise<Record<string, any>> {\n  const monitor = AuthPerformanceMonitor.getInstance();\n  const results: number[] = [];\n\n  for (let i = 0; i < iterations; i++) {\n    const endTiming = monitor.startTiming('benchmark');\n    await azureAuthMiddleware",
      "tokens": 0,
      "firstFile": {
        "name": "lib/shared/auth/adapters/azure-auth.ts",
        "start": 265,
        "end": 273,
        "startLoc": {
          "line": 265,
          "column": 13,
          "position": 1720
        },
        "endLoc": {
          "line": 273,
          "column": 20,
          "position": 1822
        }
      },
      "secondFile": {
        "name": "lib/shared/auth/adapters/next-auth.ts",
        "start": 277,
        "end": 285,
        "startLoc": {
          "line": 277,
          "column": 12,
          "position": 1852
        },
        "endLoc": {
          "line": 285,
          "column": 19,
          "position": 1954
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ");\n    const duration = endTiming();\n    results.push(duration);\n  }\n\n  const sorted = results.sort((a, b) => a - b);\n  const sum = results.reduce((a, b) => a + b, 0);\n\n  const",
      "tokens": 0,
      "firstFile": {
        "name": "lib/shared/auth/adapters/azure-auth.ts",
        "start": 273,
        "end": 281,
        "startLoc": {
          "line": 273,
          "column": 4,
          "position": 1828
        },
        "endLoc": {
          "line": 281,
          "column": 6,
          "position": 1917
        }
      },
      "secondFile": {
        "name": "lib/shared/auth/adapters/next-auth.ts",
        "start": 285,
        "end": 293,
        "startLoc": {
          "line": 285,
          "column": 8,
          "position": 1957
        },
        "endLoc": {
          "line": 293,
          "column": 7,
          "position": 2046
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "{\n    iterations,\n    average: sum / iterations,\n    median: sorted[Math.floor(sorted.length / 2)],\n    p95: sorted[Math.floor(sorted.length * 0.95)],\n    p99: sorted[Math.floor(sorted.length * 0.99)],\n    min: sorted[0],\n    max: sorted[sorted.length - 1]\n  };\n\n  context",
      "tokens": 0,
      "firstFile": {
        "name": "lib/shared/auth/adapters/azure-auth.ts",
        "start": 281,
        "end": 291,
        "startLoc": {
          "line": 281,
          "column": 2,
          "position": 1923
        },
        "endLoc": {
          "line": 291,
          "column": 8,
          "position": 2034
        }
      },
      "secondFile": {
        "name": "lib/shared/auth/adapters/next-auth.ts",
        "start": 293,
        "end": 302,
        "startLoc": {
          "line": 293,
          "column": 2,
          "position": 2048
        },
        "endLoc": {
          "line": 302,
          "column": 2,
          "position": 2157
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ";\n\n// Mock Firebase Admin\njest.mock('@/lib/firebase/admin', () => ({\n  getAdminAuth: jest.fn(() => ({\n    verifyIdToken: jest.fn(),\n    verifySessionCookie: jest.fn(),\n    getUser: jest.fn()\n  }))\n}));\n\ndescribe('UnifiedAuth Core Library'",
      "tokens": 0,
      "firstFile": {
        "name": "lib/shared/auth/__tests__/core.test.ts",
        "start": 21,
        "end": 32,
        "startLoc": {
          "line": 21,
          "column": 11,
          "position": 60
        },
        "endLoc": {
          "line": 32,
          "column": 27,
          "position": 141
        }
      },
      "secondFile": {
        "name": "lib/shared/auth/__tests__/e2e-auth-flow.test.ts",
        "start": 12,
        "end": 23,
        "startLoc": {
          "line": 12,
          "column": 11,
          "position": 28
        },
        "endLoc": {
          "line": 23,
          "column": 33,
          "position": 109
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ", async () => {\n      const { result } = renderHook(() => useVoiceAgentBridge(defaultConfig));\n\n      await act(async () => {\n        await result.current.startVoiceSession();\n      });\n\n      await act(async () => {\n        await result.current.sendResponse",
      "tokens": 0,
      "firstFile": {
        "name": "lib/azure-ai-foundry/voice/__tests__/useVoiceAgentBridge.test.ts",
        "start": 476,
        "end": 484,
        "startLoc": {
          "line": 476,
          "column": 38,
          "position": 3866
        },
        "endLoc": {
          "line": 484,
          "column": 13,
          "position": 3956
        }
      },
      "secondFile": {
        "name": "lib/azure-ai-foundry/voice/__tests__/useVoiceAgentBridge.test.ts",
        "start": 451,
        "end": 459,
        "startLoc": {
          "line": 451,
          "column": 30,
          "position": 3663
        },
        "endLoc": {
          "line": 459,
          "column": 15,
          "position": 3753
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ",\n      median: sorted[Math.floor(sorted.length / 2)],\n      p95: sorted[Math.floor(sorted.length * 0.95)],\n      p99: sorted[Math.floor(sorted.length * 0.99)],\n      min: sorted[0],\n      max: sorted[sorted.length - 1]\n    };\n  }\n\n  /**\n   * Reset all performance data\n   */",
      "tokens": 0,
      "firstFile": {
        "name": "lib/shared/auth/core.ts",
        "start": 800,
        "end": 811,
        "startLoc": {
          "line": 800,
          "column": 7,
          "position": 5902
        },
        "endLoc": {
          "line": 811,
          "column": 6,
          "position": 6001
        }
      },
      "secondFile": {
        "name": "lib/shared/auth/adapters/next-auth.ts",
        "start": 295,
        "end": 264,
        "startLoc": {
          "line": 295,
          "column": 11,
          "position": 2063
        },
        "endLoc": {
          "line": 264,
          "column": 40,
          "position": 1931
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "> {\n    await this.ensureInitialized();\n\n    const startTime = Date.now();\n    const mappedModel = this.mapModel(params.model);\n    const modelConfig = this.modelManager.getModel(mappedModel) || this.modelManager.getDefaultModelConfig();\n\n    // Estimate cost",
      "tokens": 0,
      "firstFile": {
        "name": "lib/azure-ai-foundry/clients/migration-wrapper.ts",
        "start": 257,
        "end": 264,
        "startLoc": {
          "line": 257,
          "column": 19,
          "position": 1904
        },
        "endLoc": {
          "line": 264,
          "column": 17,
          "position": 1979
        }
      },
      "secondFile": {
        "name": "lib/azure-ai-foundry/clients/migration-wrapper.ts",
        "start": 147,
        "end": 154,
        "startLoc": {
          "line": 147,
          "column": 23,
          "position": 875
        },
        "endLoc": {
          "line": 154,
          "column": 42,
          "position": 951
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "const totalLength = audioChunks.reduce((acc, chunk) => acc + chunk.length, 0);\n    const combinedAudio = new Float32Array(totalLength);\n    let offset = 0;\n    \n    for (const chunk of audioChunks) {\n      combinedAudio.set(chunk, offset);\n      offset += chunk.length;\n    }\n\n    // Convert float samples to 16-bit PCM",
      "tokens": 0,
      "firstFile": {
        "name": "lib/voice/audio-utils.ts",
        "start": 110,
        "end": 119,
        "startLoc": {
          "line": 110,
          "column": 5,
          "position": 906
        },
        "endLoc": {
          "line": 119,
          "column": 39,
          "position": 1007
        }
      },
      "secondFile": {
        "name": "lib/voice/audio-utils.ts",
        "start": 57,
        "end": 66,
        "startLoc": {
          "line": 57,
          "column": 3,
          "position": 342
        },
        "endLoc": {
          "line": 66,
          "column": 4,
          "position": 444
        }
      }
    },
    {
      "format": "typescript",
      "lines": 36,
      "fragment": "export interface TelemetryPageView {\n  name: string;\n  uri?: string;\n  isLoggedIn?: boolean;\n  userId?: string;\n  properties?: { [key: string]: string };\n  measurements?: { [key: string]: number };\n}\n\nexport interface TelemetryEvent {\n  name: string;\n  properties?: { [key: string]: string };\n  measurements?: { [key: string]: number };\n}\n\nexport interface TelemetryUserAction {\n  action: string;\n  feature: string;\n  location?: string;\n  userId?: string;\n  properties?: { [key: string]: string };\n}\n\nexport interface TelemetryCustomMetric {\n  name: string;\n  value: number;\n  properties?: { [key: string]: string };\n}\n\nexport interface TelemetryError {\n  error: Error;\n  userId?: string;\n  context?: { [key: string]: string };\n}\n\nclass TelemetryStubService",
      "tokens": 0,
      "firstFile": {
        "name": "lib/utils/telemetry-stub.ts",
        "start": 4,
        "end": 39,
        "startLoc": {
          "line": 4,
          "column": 1,
          "position": 5
        },
        "endLoc": {
          "line": 39,
          "column": 21,
          "position": 299
        }
      },
      "secondFile": {
        "name": "lib/utils/telemetry.ts",
        "start": 12,
        "end": 47,
        "startLoc": {
          "line": 12,
          "column": 1,
          "position": 49
        },
        "endLoc": {
          "line": 47,
          "column": 17,
          "position": 343
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "function getErrorCodeFromHTTPStatus(status: number): ErrorCode {\n  switch (status) {\n    case 400: return ErrorCode.INVALID_REQUEST;\n    case 401: return ErrorCode.AUTH_TOKEN_INVALID;\n    case 403: return ErrorCode.ACCESS_DENIED;\n    case 404: return ErrorCode.NOT_FOUND;\n    case 409: return ErrorCode.RESOURCE_CONFLICT;\n    case 413: return ErrorCode.FILE_TOO_LARGE;\n    case 429: return ErrorCode.RATE_LIMIT_EXCEEDED;\n    case 500: return ErrorCode.INTERNAL_SERVER_ERROR;\n    case 502: return ErrorCode.SERVICE_UNAVAILABLE;\n    case 503: return ErrorCode.SERVICE_OVERLOADED;\n    case 504: return ErrorCode.SERVICE_TIMEOUT;\n    default: return ErrorCode.UNHANDLED_ERROR;\n  }\n}",
      "tokens": 0,
      "firstFile": {
        "name": "lib/utils/retry-middleware.ts",
        "start": 421,
        "end": 436,
        "startLoc": {
          "line": 421,
          "column": 1,
          "position": 2987
        },
        "endLoc": {
          "line": 436,
          "column": 2,
          "position": 3168
        }
      },
      "secondFile": {
        "name": "lib/utils/structured-errors.ts",
        "start": 425,
        "end": 440,
        "startLoc": {
          "line": 425,
          "column": 2,
          "position": 2727
        },
        "endLoc": {
          "line": 440,
          "column": 2,
          "position": 2908
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "${method} ${url}`);\n      console.log('Timestamp:', new Date(networkCall.timestamp).toISOString());\n      console.log('Caller:', caller);\n      console.log('Full stack:', stack);\n      console.groupEnd();\n    }\n    \n    // Log sync-firebase calls (potential polling source)",
      "tokens": 0,
      "firstFile": {
        "name": "lib/utils/network-logger.ts",
        "start": 68,
        "end": 75,
        "startLoc": {
          "line": 68,
          "column": 25,
          "position": 517
        },
        "endLoc": {
          "line": 75,
          "column": 54,
          "position": 589
        }
      },
      "secondFile": {
        "name": "lib/utils/network-logger.ts",
        "start": 59,
        "end": 66,
        "startLoc": {
          "line": 59,
          "column": 20,
          "position": 414
        },
        "endLoc": {
          "line": 66,
          "column": 43,
          "position": 486
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "const arrayBuffer = new ArrayBuffer(audioArray.length);\n  const view = new Uint8Array(arrayBuffer);\n  view.set(audioArray);\n  const audioBlob = new Blob([arrayBuffer], { type: mimeType });\n  const audioUrl = URL.createObjectURL(audioBlob);\n  \n  const",
      "tokens": 0,
      "firstFile": {
        "name": "lib/utils/audio-helpers.ts",
        "start": 188,
        "end": 194,
        "startLoc": {
          "line": 188,
          "column": 3,
          "position": 1359
        },
        "endLoc": {
          "line": 194,
          "column": 6,
          "position": 1444
        }
      },
      "secondFile": {
        "name": "lib/utils/audio-helpers.ts",
        "start": 21,
        "end": 27,
        "startLoc": {
          "line": 21,
          "column": 7,
          "position": 106
        },
        "endLoc": {
          "line": 27,
          "column": 38,
          "position": 191
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": ");\n    \n    if (result.success && result.data) {\n      try {\n        const parsedData = typeof result.data === 'string' \n          ? JSON.parse(result.data) \n          : result.data;\n\n        return {\n          personalInfo: parsedData.personalInfo || {},\n          summary: parsedData.summary,\n          skills: parsedData.skills || [],\n          experience: parsedData.experience || [],\n          education: parsedData.education || [],\n          projects: parsedData.projects || [],\n          certifications: parsedData.certifications || [],\n          languages: parsedData.languages || [],\n          rawExtraction: { text, aiResponse: result.data }\n        };\n      } catch (parseError) {\n        console.warn('⚠️ Failed to parse OpenAI extraction result'",
      "tokens": 0,
      "firstFile": {
        "name": "lib/services/enhanced-resume-processing-service.ts",
        "start": 461,
        "end": 481,
        "startLoc": {
          "line": 461,
          "column": 2,
          "position": 3353
        },
        "endLoc": {
          "line": 481,
          "column": 46,
          "position": 3570
        }
      },
      "secondFile": {
        "name": "lib/services/resume-processing-service.ts",
        "start": 239,
        "end": 259,
        "startLoc": {
          "line": 239,
          "column": 7,
          "position": 1377
        },
        "endLoc": {
          "line": 259,
          "column": 43,
          "position": 1593
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "}\n\n  /**\n   * Get user's resume data from Firestore\n   */\n  async getUserResumeData(userId: string): Promise<any> {\n    try {\n      const db = await getAdminFirestore();\n      const profileDoc = await db.collection('profiles').doc(userId).get();\n\n      if (profileDoc.exists) {\n        return profileDoc.data() as any;\n      }\n\n      return",
      "tokens": 0,
      "firstFile": {
        "name": "lib/services/enhanced-resume-processing-service.ts",
        "start": 652,
        "end": 666,
        "startLoc": {
          "line": 652,
          "column": 3,
          "position": 4340
        },
        "endLoc": {
          "line": 666,
          "column": 7,
          "position": 4441
        }
      },
      "secondFile": {
        "name": "lib/services/resume-processing-service.ts",
        "start": 374,
        "end": 388,
        "startLoc": {
          "line": 374,
          "column": 3,
          "position": 2514
        },
        "endLoc": {
          "line": 388,
          "column": 45,
          "position": 2615
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": ", error);\n      throw error;\n    }\n  }\n\n  /**\n   * Generate new secure URL for file access\n   */\n  async generateNewSecureUrl(userId: string, expiryHours: number = 24): Promise<string | null> {\n    try {\n      const resumeData = await this.getUserResumeData(userId);\n      \n      const filePath = resumeData?.filePath || resumeData?.blobName;\n      if (filePath) {\n        return await resumeStorageService.getResumeUrl(filePath, expiryHours);\n      }\n\n      return null;\n    } catch (error) {\n      console.error('❌ Failed to generate new secure URL:'",
      "tokens": 0,
      "firstFile": {
        "name": "lib/services/enhanced-resume-processing-service.ts",
        "start": 668,
        "end": 687,
        "startLoc": {
          "line": 668,
          "column": 36,
          "position": 4463
        },
        "endLoc": {
          "line": 687,
          "column": 39,
          "position": 4613
        }
      },
      "secondFile": {
        "name": "lib/services/resume-processing-service.ts",
        "start": 391,
        "end": 410,
        "startLoc": {
          "line": 391,
          "column": 34,
          "position": 2640
        },
        "endLoc": {
          "line": 410,
          "column": 37,
          "position": 2790
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ",\n      callStack: new Error().stack?.split('\\n').slice(0, 5).join('\\n')\n    });\n    \n    if (!this.isInitialized || !this.client) {\n      throw new Error('Azure OpenAI Service not initialized');\n    }\n\n    // Check if we're still collecting preliminary information",
      "tokens": 0,
      "firstFile": {
        "name": "lib/services/azure-openai-service.ts",
        "start": 319,
        "end": 327,
        "startLoc": {
          "line": 319,
          "column": 2,
          "position": 2217
        },
        "endLoc": {
          "line": 327,
          "column": 59,
          "position": 2292
        }
      },
      "secondFile": {
        "name": "lib/services/azure-openai-service.ts",
        "start": 215,
        "end": 223,
        "startLoc": {
          "line": 215,
          "column": 14,
          "position": 1449
        },
        "endLoc": {
          "line": 223,
          "column": 30,
          "position": 1524
        }
      }
    },
    {
      "format": "typescript",
      "lines": 43,
      "fragment": "}\n\n  /**\n   * Retry mechanism with exponential backoff for rate limiting\n   */\n  private async retryWithBackoff<T>(\n    operation: () => Promise<T>,\n    maxRetries: number = 3,\n    baseDelay: number = 1000\n  ): Promise<T> {\n    let lastError: Error;\n    \n    for (let attempt = 0; attempt <= maxRetries; attempt++) {\n      try {\n        return await operation();\n      } catch (error: any) {\n        lastError = error;\n        \n        // Don't retry on non-retryable errors\n        if (error.status && ![429, 500, 502, 503, 504].includes(error.status)) {\n          throw error;\n        }\n        \n        if (attempt === maxRetries) {\n          throw error;\n        }\n        \n        // Calculate delay with exponential backoff\n        const delay = error.status === 429 \n          ? parseInt(error.headers?.['retry-after'] || '10') * 1000\n          : baseDelay * Math.pow(2, attempt);\n        \n        console.log(`⏳ Retrying in ${delay}ms (attempt ${attempt + 1}/${maxRetries + 1})`);\n        await new Promise(resolve => setTimeout(resolve, delay));\n      }\n    }\n    \n    throw lastError!;\n  }\n\n  /**\n   * Check if service is ready\n   */",
      "tokens": 0,
      "firstFile": {
        "name": "lib/services/azure-openai-enhanced.ts",
        "start": 292,
        "end": 334,
        "startLoc": {
          "line": 292,
          "column": 3,
          "position": 1809
        },
        "endLoc": {
          "line": 334,
          "column": 6,
          "position": 2154
        }
      },
      "secondFile": {
        "name": "lib/services/azure-openai-service.ts",
        "start": 455,
        "end": 497,
        "startLoc": {
          "line": 455,
          "column": 3,
          "position": 3360
        },
        "endLoc": {
          "line": 497,
          "column": 6,
          "position": 3705
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": "maskEmail(email: string): string {\n    const [username, domain] = email.split('@');\n    const maskedUsername = username.length > 2 \n      ? username.charAt(0) + '*'.repeat(username.length - 2) + username.charAt(username.length - 1)\n      : '*'.repeat(username.length);\n    return `${maskedUsername}@${domain}`;\n  }\n\n  maskPhoneNumber(phone: string): string {\n    const cleaned = phone.replace(/\\D/g, '');\n    if (cleaned.length > 4) {\n      return cleaned.substring(0, 3) + '*'.repeat(cleaned.length - 6) + cleaned.substring(cleaned.length - 3);\n    }\n    return '*'.repeat(cleaned.length);\n  }\n\n  private",
      "tokens": 0,
      "firstFile": {
        "name": "lib/services/azure-gdpr-service.ts",
        "start": 726,
        "end": 742,
        "startLoc": {
          "line": 726,
          "column": 3,
          "position": 6137
        },
        "endLoc": {
          "line": 742,
          "column": 8,
          "position": 6369
        }
      },
      "secondFile": {
        "name": "lib/services/gdpr-compliance-service.ts",
        "start": 314,
        "end": 330,
        "startLoc": {
          "line": 314,
          "column": 3,
          "position": 2630
        },
        "endLoc": {
          "line": 330,
          "column": 26,
          "position": 2862
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "})\n      });\n\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`HTTP error! status: ${response.status}, message: ${errorText}`);\n      }\n\n      const result = await response.json();\n      return result;\n\n    } catch (error) {\n      console.error('Error requesting GDPR deletion:'",
      "tokens": 0,
      "firstFile": {
        "name": "lib/services/azure-functions-client.ts",
        "start": 414,
        "end": 426,
        "startLoc": {
          "line": 414,
          "column": 9,
          "position": 2836
        },
        "endLoc": {
          "line": 426,
          "column": 34,
          "position": 2937
        }
      },
      "secondFile": {
        "name": "lib/services/azure-functions-client.ts",
        "start": 379,
        "end": 391,
        "startLoc": {
          "line": 379,
          "column": 9,
          "position": 2570
        },
        "endLoc": {
          "line": 391,
          "column": 33,
          "position": 2671
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ".data;\n            \n          return {\n            personalInfo: parsedData.personalInfo || {},\n            summary: parsedData.summary,\n            skills: parsedData.skills || [],\n            experience: parsedData.experience || [],\n            education: parsedData.education || [],\n            projects: parsedData.projects || [],\n            certifications: parsedData.certifications || [],\n            languages: parsedData.languages || []\n          }",
      "tokens": 0,
      "firstFile": {
        "name": "lib/services/azure-form-recognizer.ts",
        "start": 254,
        "end": 265,
        "startLoc": {
          "line": 254,
          "column": 17,
          "position": 1275
        },
        "endLoc": {
          "line": 265,
          "column": 2,
          "position": 1393
        }
      },
      "secondFile": {
        "name": "lib/services/resume-processing-service.ts",
        "start": 245,
        "end": 255,
        "startLoc": {
          "line": 245,
          "column": 7,
          "position": 1438
        },
        "endLoc": {
          "line": 255,
          "column": 2,
          "position": 1553
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "(\n    userId: string,\n    fileBuffer: Buffer,\n    fileName: string,\n    mimeType: string\n  ): Promise<UploadResult> {\n    if (!this.isReady()) {\n      throw new Error('Azure Blob Storage service not initialized');\n    }\n\n    try {\n      const blobName = `${userId}/${Date.now()}-${fileName}`;\n      const containerClient",
      "tokens": 0,
      "firstFile": {
        "name": "lib/services/azure-blob-storage.ts",
        "start": 266,
        "end": 278,
        "startLoc": {
          "line": 266,
          "column": 21,
          "position": 1932
        },
        "endLoc": {
          "line": 278,
          "column": 16,
          "position": 2035
        }
      },
      "secondFile": {
        "name": "lib/services/azure-blob-storage.ts",
        "start": 107,
        "end": 119,
        "startLoc": {
          "line": 107,
          "column": 13,
          "position": 737
        },
        "endLoc": {
          "line": 119,
          "column": 14,
          "position": 840
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ");\n      const blockBlobClient = containerClient.getBlockBlobClient(blobName);\n\n      // Upload the file with metadata\n      await blockBlobClient.uploadData(fileBuffer, {\n        blobHTTPHeaders: {\n          blobContentType: mimeType\n        },\n        metadata: {\n          userId,\n          originalFileName: fileName,\n          uploadDate: new Date().toISOString(),\n          mimeType,",
      "tokens": 0,
      "firstFile": {
        "name": "lib/services/azure-blob-storage.ts",
        "start": 278,
        "end": 290,
        "startLoc": {
          "line": 278,
          "column": 16,
          "position": 2051
        },
        "endLoc": {
          "line": 290,
          "column": 2,
          "position": 2135
        }
      },
      "secondFile": {
        "name": "lib/services/azure-blob-storage.ts",
        "start": 120,
        "end": 133,
        "startLoc": {
          "line": 120,
          "column": 14,
          "position": 866
        },
        "endLoc": {
          "line": 133,
          "column": 2,
          "position": 952
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "): Promise<UploadResult> {\n    if (!this.isReady()) {\n      throw new Error('Azure Blob Storage service not initialized');\n    }\n\n    try {\n      const blobName = `${userId}/${Date.now()}-${fileName}`;\n      const containerName = this.containers[",
      "tokens": 0,
      "firstFile": {
        "name": "lib/services/azure-blob-storage.ts",
        "start": 329,
        "end": 336,
        "startLoc": {
          "line": 329,
          "column": 3,
          "position": 2397
        },
        "endLoc": {
          "line": 336,
          "column": 2,
          "position": 2477
        }
      },
      "secondFile": {
        "name": "lib/services/azure-blob-storage.ts",
        "start": 112,
        "end": 119,
        "startLoc": {
          "line": 112,
          "column": 3,
          "position": 767
        },
        "endLoc": {
          "line": 119,
          "column": 2,
          "position": 847
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ";\n      const containerClient = this.blobServiceClient!.getContainerClient(containerName);\n      const blockBlobClient = containerClient.getBlockBlobClient(blobName);\n\n      // Upload the file with metadata\n      await blockBlobClient.uploadData(fileBuffer, {\n        blobHTTPHeaders: {\n          blobContentType: mimeType\n        },\n        metadata: {\n          userId,\n          originalFileName: fileName,\n          uploadDate: new Date().toISOString(),\n          mimeType,\n          containerType",
      "tokens": 0,
      "firstFile": {
        "name": "lib/services/azure-blob-storage.ts",
        "start": 336,
        "end": 350,
        "startLoc": {
          "line": 336,
          "column": 2,
          "position": 2480
        },
        "endLoc": {
          "line": 350,
          "column": 14,
          "position": 2584
        }
      },
      "secondFile": {
        "name": "lib/services/azure-blob-storage.ts",
        "start": 119,
        "end": 291,
        "startLoc": {
          "line": 119,
          "column": 8,
          "position": 849
        },
        "endLoc": {
          "line": 291,
          "column": 9,
          "position": 2138
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": "blobName: string, \n    expiryHours: number = 1\n  ): Promise<SASTokenResult> {\n    if (!this.isReady() || !this.config) {\n      throw new Error('Azure Blob Storage service not initialized');\n    }\n\n    try {\n      const permissions = BlobSASPermissions.parse('r'); // Read-only permission\n      const expiresOn = new Date();\n      expiresOn.setHours(expiresOn.getHours() + expiryHours);\n\n      const sharedKeyCredential = new StorageSharedKeyCredential(\n        this.config.accountName,\n        this.config.accountKey\n      );\n\n      const",
      "tokens": 0,
      "firstFile": {
        "name": "lib/services/azure-blob-storage.ts",
        "start": 386,
        "end": 403,
        "startLoc": {
          "line": 386,
          "column": 5,
          "position": 2805
        },
        "endLoc": {
          "line": 403,
          "column": 6,
          "position": 2956
        }
      },
      "secondFile": {
        "name": "lib/services/azure-blob-storage.ts",
        "start": 164,
        "end": 179,
        "startLoc": {
          "line": 164,
          "column": 2,
          "position": 1144
        },
        "endLoc": {
          "line": 179,
          "column": 70,
          "position": 1291
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": "const sasOptions: BlobSASSignatureValues = {\n        containerName,\n        blobName,\n        permissions,\n        expiresOn,\n        protocol: SASProtocol.Https\n      };\n\n      const sasToken = generateBlobSASQueryParameters(sasOptions, sharedKeyCredential);\n      const sasUrl = `https://${this.config.accountName}.blob.core.windows.net/${containerName}/${blobName}?${sasToken}`;\n\n      return {\n        sasUrl,\n        expiresOn\n      };\n    } catch (error) {\n      console.error('Failed to generate SAS URL for container:'",
      "tokens": 0,
      "firstFile": {
        "name": "lib/services/azure-blob-storage.ts",
        "start": 403,
        "end": 419,
        "startLoc": {
          "line": 403,
          "column": 7,
          "position": 2956
        },
        "endLoc": {
          "line": 419,
          "column": 44,
          "position": 3075
        }
      },
      "secondFile": {
        "name": "lib/services/azure-blob-storage.ts",
        "start": 181,
        "end": 197,
        "startLoc": {
          "line": 181,
          "column": 7,
          "position": 1310
        },
        "endLoc": {
          "line": 197,
          "column": 30,
          "position": 1429
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": "(testName: string, variant: string, userId?: string): Promise<void> {\n    await this.trackEvent({\n      name: 'ABTestParticipation',\n      properties: {\n        testName,\n        variant,\n        userId: userId || 'anonymous',\n        timestamp: new Date().toISOString()\n      }\n    });\n  }\n\n  /**\n   * Track conversion events\n   */\n  async trackConversion(conversionType: string, value?: number, userId?: string, properties?: { [key: string]: string }): Promise<void> {\n    await this.trackEvent({\n      name: 'Conversion',\n      properties: {\n        conversionType,\n        userId: userId || 'anonymous',\n        timestamp: new Date().toISOString(),\n        ...properties\n      },\n      metrics",
      "tokens": 0,
      "firstFile": {
        "name": "lib/services/azure-application-insights-service.ts",
        "start": 443,
        "end": 467,
        "startLoc": {
          "line": 443,
          "column": 25,
          "position": 3120
        },
        "endLoc": {
          "line": 467,
          "column": 8,
          "position": 3331
        }
      },
      "secondFile": {
        "name": "lib/utils/telemetry.ts",
        "start": 477,
        "end": 501,
        "startLoc": {
          "line": 477,
          "column": 12,
          "position": 3814
        },
        "endLoc": {
          "line": 501,
          "column": 13,
          "position": 4025
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "this.cache.has(cacheKey)) {\n      const cached = this.cache.get(cacheKey)!;\n      if (Date.now() - cached.timestamp < cached.ttl) {\n        return cached.value;\n      } else {\n        this.cache.delete(cacheKey);\n      }\n    }\n\n    try {\n      // Get feature flag configuration",
      "tokens": 0,
      "firstFile": {
        "name": "lib/services/azure-app-config-service.ts",
        "start": 194,
        "end": 204,
        "startLoc": {
          "line": 194,
          "column": 2,
          "position": 1717
        },
        "endLoc": {
          "line": 204,
          "column": 34,
          "position": 1811
        }
      },
      "secondFile": {
        "name": "lib/services/azure-app-config-service.ts",
        "start": 78,
        "end": 88,
        "startLoc": {
          "line": 78,
          "column": 2,
          "position": 650
        },
        "endLoc": {
          "line": 88,
          "column": 6,
          "position": 744
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "private hashUserId(userId: string): number {\n    let hash = 0;\n    for (let i = 0; i < userId.length; i++) {\n      const char = userId.charCodeAt(i);\n      hash = ((hash << 5) - hash) + char;\n      hash = hash & hash; // Convert to 32-bit integer\n    }\n    return Math.abs(hash);\n  }\n\n  /**\n   * Health check\n   */",
      "tokens": 0,
      "firstFile": {
        "name": "lib/services/azure-app-config-service.ts",
        "start": 429,
        "end": 441,
        "startLoc": {
          "line": 429,
          "column": 3,
          "position": 3608
        },
        "endLoc": {
          "line": 441,
          "column": 6,
          "position": 3733
        }
      },
      "secondFile": {
        "name": "lib/services/user-targeting.ts",
        "start": 21,
        "end": 34,
        "startLoc": {
          "line": 21,
          "column": 3,
          "position": 118
        },
        "endLoc": {
          "line": 34,
          "column": 6,
          "position": 243
        }
      }
    },
    {
      "format": "typescript",
      "lines": 23,
      "fragment": "?: string;\n}\n\nexport interface Project {\n  name: string;\n  description: string;\n  technologies?: string[];\n  url?: string;\n  github?: string;\n  startDate?: string;\n  endDate?: string;\n}\n\nexport interface Certification {\n  name: string;\n  issuer: string;\n  date?: string;\n  expiryDate?: string;\n  credentialId?: string;\n  url?: string;\n}\n\nexport interface InterviewQuestionGenerationOptions",
      "tokens": 0,
      "firstFile": {
        "name": "lib/services/azure-ai-service.ts",
        "start": 43,
        "end": 65,
        "startLoc": {
          "line": 43,
          "column": 12,
          "position": 331
        },
        "endLoc": {
          "line": 65,
          "column": 35,
          "position": 468
        }
      },
      "secondFile": {
        "name": "lib/services/azure-form-recognizer.ts",
        "start": 46,
        "end": 68,
        "startLoc": {
          "line": 46,
          "column": 9,
          "position": 344
        },
        "endLoc": {
          "line": 68,
          "column": 9,
          "position": 481
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": "{\n  score: number;\n  yearsRequired: number;\n  yearsCandidate: number;\n  yearsMatch: 'exceeds' | 'meets' | 'below';\n  industryMatch: {\n    score: number;\n    relevantIndustries: string[];\n    transferableExperience: string[];\n  };\n  roleSimilarity: {\n    score: number;\n    similarRoles: string[];\n    levelMatch: string;\n  };\n}\n\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "lib/services/ats-optimization-service.ts",
        "start": 169,
        "end": 186,
        "startLoc": {
          "line": 169,
          "column": 2,
          "position": 1088
        },
        "endLoc": {
          "line": 186,
          "column": 7,
          "position": 1197
        }
      },
      "secondFile": {
        "name": "lib/firebase/schema/resume-schema.ts",
        "start": 214,
        "end": 229,
        "startLoc": {
          "line": 214,
          "column": 2,
          "position": 1531
        },
        "endLoc": {
          "line": 229,
          "column": 2,
          "position": 1639
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": "{\n  private static appInsights?: ApplicationInsights;\n\n  static initialize(instrumentationKey?: string) {\n    if (instrumentationKey && typeof window !== 'undefined') {\n      this.appInsights = new ApplicationInsights({\n        config: {\n          instrumentationKey,\n          enableAutoRouteTracking: false,\n        }\n      });\n      this.appInsights.loadAppInsights();\n    }\n  }\n\n  /**\n   * Global error handler middleware for Next.js API routes\n   */",
      "tokens": 0,
      "firstFile": {
        "name": "lib/middleware/error-handler.ts",
        "start": 23,
        "end": 40,
        "startLoc": {
          "line": 23,
          "column": 2,
          "position": 165
        },
        "endLoc": {
          "line": 40,
          "column": 6,
          "position": 269
        }
      },
      "secondFile": {
        "name": "lib/utils/retry-with-backoff.ts",
        "start": 23,
        "end": 40,
        "startLoc": {
          "line": 23,
          "column": 2,
          "position": 183
        },
        "endLoc": {
          "line": 40,
          "column": 6,
          "position": 287
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ">(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    if (!interviewId) {\n      setLoading(false);\n      return;\n    }\n\n    // Mock feedback loading",
      "tokens": 0,
      "firstFile": {
        "name": "lib/hooks/useRealtimeFirestore.ts",
        "start": 231,
        "end": 241,
        "startLoc": {
          "line": 231,
          "column": 4,
          "position": 1568
        },
        "endLoc": {
          "line": 241,
          "column": 25,
          "position": 1654
        }
      },
      "secondFile": {
        "name": "lib/hooks/useRealtimeFirestore.ts",
        "start": 41,
        "end": 51,
        "startLoc": {
          "line": 41,
          "column": 5,
          "position": 221
        },
        "endLoc": {
          "line": 51,
          "column": 25,
          "position": 307
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "(interviewId: string) {\n  const [interview, setInterview] = useState<Interview | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    // Mock loading behavior",
      "tokens": 0,
      "firstFile": {
        "name": "lib/hooks/useFirestore.ts",
        "start": 26,
        "end": 32,
        "startLoc": {
          "line": 26,
          "column": 13,
          "position": 92
        },
        "endLoc": {
          "line": 32,
          "column": 25,
          "position": 181
        }
      },
      "secondFile": {
        "name": "lib/hooks/useRealtimeFirestore.ts",
        "start": 40,
        "end": 46,
        "startLoc": {
          "line": 40,
          "column": 21,
          "position": 193
        },
        "endLoc": {
          "line": 46,
          "column": 3,
          "position": 282
        }
      }
    },
    {
      "format": "javascript",
      "lines": 7,
      "fragment": "const uint8Frame = new Uint8Array(frame.length * 2);\n        for (let i = 0; i < frame.length; i++) {\n          const sample = frame[i];\n          uint8Frame[i * 2] = sample & 0xFF;         // Low byte\n          uint8Frame[i * 2 + 1] = (sample >> 8) & 0xFF; // High byte\n        }\n        yield",
      "tokens": 0,
      "firstFile": {
        "name": "lib/audio/micCapture.js",
        "start": 115,
        "end": 121,
        "startLoc": {
          "line": 115,
          "column": 9,
          "position": 852
        },
        "endLoc": {
          "line": 121,
          "column": 6,
          "position": 969
        }
      },
      "secondFile": {
        "name": "lib/audio/__tests__/micCapture.simple.test.js",
        "start": 143,
        "end": 150,
        "startLoc": {
          "line": 143,
          "column": 7,
          "position": 1151
        },
        "endLoc": {
          "line": 150,
          "column": 7,
          "position": 1270
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ");\n        \n        // Extract number from response\n        const scoreMatch = response.trim().match(/\\d+/);\n        if (!scoreMatch) {\n          throw new Error('Could not extract relevancy score from response');\n        }\n        \n        const score = parseInt(scoreMatch[0], 10);\n        return Math.max(0, Math.min(100, score)); // Ensure score is between 0-100\n      },",
      "tokens": 0,
      "firstFile": {
        "name": "lib/ai/azureOpenAI.ts",
        "start": 113,
        "end": 123,
        "startLoc": {
          "line": 113,
          "column": 21,
          "position": 807
        },
        "endLoc": {
          "line": 123,
          "column": 2,
          "position": 905
        }
      },
      "secondFile": {
        "name": "lib/services/azure-openai-enhanced.ts",
        "start": 217,
        "end": 231,
        "startLoc": {
          "line": 217,
          "column": 12,
          "position": 1398
        },
        "endLoc": {
          "line": 231,
          "column": 6,
          "position": 1499
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "(\n    resumeText: string,\n    jobDescription: string,\n    options: { userId?: string } = {}\n  ): Promise<AzureAIResponse<string>> {\n    await this.initialize();\n\n    const startTime = Date.now();\n\n    try {\n      const service = this.availableServices.enhanced ? enhancedAzureOpenAIService : azureOpenAIService;\n      \n      const coverLetter",
      "tokens": 0,
      "firstFile": {
        "name": "lib/ai/azure-ai.ts",
        "start": 337,
        "end": 349,
        "startLoc": {
          "line": 337,
          "column": 20,
          "position": 2483
        },
        "endLoc": {
          "line": 349,
          "column": 12,
          "position": 2589
        }
      },
      "secondFile": {
        "name": "lib/ai/azure-ai.ts",
        "start": 292,
        "end": 304,
        "startLoc": {
          "line": 292,
          "column": 13,
          "position": 2105
        },
        "endLoc": {
          "line": 304,
          "column": 16,
          "position": 2211
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "(token: string): Promise<AuthResult> {\n  try {\n    const result = await verifyToken(token);\n    return {\n      success: result.valid,\n      user: result.user || null,\n      error: result.error\n    };\n  } catch (error) {\n    return {\n      success: false,\n      user: null,\n      error: error instanceof Error ? error.message : 'Authentication failed'",
      "tokens": 0,
      "firstFile": {
        "name": "lib/actions/auth.action.ts",
        "start": 170,
        "end": 182,
        "startLoc": {
          "line": 170,
          "column": 7,
          "position": 1212
        },
        "endLoc": {
          "line": 182,
          "column": 24,
          "position": 1334
        }
      },
      "secondFile": {
        "name": "lib/middleware/authMiddleware.ts",
        "start": 19,
        "end": 31,
        "startLoc": {
          "line": 19,
          "column": 20,
          "position": 35
        },
        "endLoc": {
          "line": 31,
          "column": 28,
          "position": 157
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ");\n    const client = createKeyVaultClient();\n\n    // Helper function to suppress expected 404 errors for optional secrets\n    const getOptionalSecret = (name: string) => \n      client.getSecret(name).catch(err => {\n        if (err.statusCode !== 404) {\n          console.warn(`⚠️ Unexpected error fetching optional secret '${name}':`, err.message);\n        }\n        return null;\n      });\n\n    // Fetch all secrets (some are optional)",
      "tokens": 0,
      "firstFile": {
        "name": "lib/azure-config.ts",
        "start": 86,
        "end": 98,
        "startLoc": {
          "line": 86,
          "column": 46,
          "position": 515
        },
        "endLoc": {
          "line": 98,
          "column": 41,
          "position": 616
        }
      },
      "secondFile": {
        "name": "lib/azure-ai-foundry/config/foundry-config.ts",
        "start": 142,
        "end": 154,
        "startLoc": {
          "line": 142,
          "column": 63,
          "position": 725
        },
        "endLoc": {
          "line": 154,
          "column": 34,
          "position": 826
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": "export async function getUserFromSession(sessionCookie: string): Promise<AuthResult> {\n  try {\n    const user = await getUserFromSessionCookie(sessionCookie);\n    \n    return {\n      success: !!user,\n      user: user,\n      error: user ? undefined : 'Session verification failed'\n    };\n  } catch (error) {\n    return {\n      success: false,\n      user: null,\n      error: error instanceof Error ? error.message : 'Session verification failed'\n    };\n  }\n}\n\n/**\n * Extract user session from various sources\n */",
      "tokens": 0,
      "firstFile": {
        "name": "lib/auth-unified.ts",
        "start": 96,
        "end": 116,
        "startLoc": {
          "line": 96,
          "column": 1,
          "position": 471
        },
        "endLoc": {
          "line": 116,
          "column": 4,
          "position": 614
        }
      },
      "secondFile": {
        "name": "lib/middleware/authMiddleware-unified.ts",
        "start": 142,
        "end": 162,
        "startLoc": {
          "line": 142,
          "column": 1,
          "position": 622
        },
        "endLoc": {
          "line": 162,
          "column": 4,
          "position": 765
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "// Concatenate all chunks for analysis\n    const totalLength = audioChunks.reduce((acc, chunk) => acc + chunk.length, 0);\n    const combinedAudio = new Float32Array(totalLength);\n    let offset = 0;\n    \n    for (const chunk of audioChunks) {\n        combinedAudio.set(chunk, offset);\n        offset += chunk.length;\n    }\n    \n    // Trim the combined audio",
      "tokens": 0,
      "firstFile": {
        "name": "lib/audio-utils.ts",
        "start": 61,
        "end": 71,
        "startLoc": {
          "line": 61,
          "column": 5,
          "position": 464
        },
        "endLoc": {
          "line": 71,
          "column": 27,
          "position": 569
        }
      },
      "secondFile": {
        "name": "lib/voice/audio-utils.ts",
        "start": 56,
        "end": 66,
        "startLoc": {
          "line": 56,
          "column": 3,
          "position": 339
        },
        "endLoc": {
          "line": 66,
          "column": 4,
          "position": 444
        }
      }
    }
  ]
}