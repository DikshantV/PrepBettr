{"version":3,"names":["cov_7v84alcm7","actualCoverage","CosmosClient","s","require","cosmosClient","getCosmosClient","f","b","connectionString","process","env","AZURE_COSMOS_DB_CONNECTION_STRING","PLAN_LIMITS","free","interviews","count","limit","resumeTailor","autoApply","premium","pro","module","exports","context","documents","startTime","Date","now","length","log","client","database","usageContainer","container","processedUsers","document","userId","id","plan","newPlan","resource","currentUsage","item","read","newPlanLimits","timestamp","toISOString","usageDocument","previousPlan","lastReset","updatedAt","createdAt","items","upsert","push","oldPlan","resetAt","usageError","code","create","error","duration","map","u","join","processedCount","totalDocuments","changes"],"sources":["index.js"],"sourcesContent":["const { CosmosClient } = require('@azure/cosmos');\n\n// Initialize Cosmos client\nlet cosmosClient;\n\nfunction getCosmosClient() {\n  if (!cosmosClient) {\n    const connectionString = process.env.AZURE_COSMOS_DB_CONNECTION_STRING;\n    cosmosClient = new CosmosClient(connectionString);\n  }\n  return cosmosClient;\n}\n\n// Plan limits configuration\nconst PLAN_LIMITS = {\n  free: {\n    interviews: { count: 0, limit: 3 },\n    resumeTailor: { count: 0, limit: 2 },\n    autoApply: { count: 0, limit: 1 }\n  },\n  premium: {\n    interviews: { count: 0, limit: -1 },\n    resumeTailor: { count: 0, limit: -1 },\n    autoApply: { count: 0, limit: -1 }\n  },\n  pro: {\n    interviews: { count: 0, limit: -1 },\n    resumeTailor: { count: 0, limit: -1 },\n    autoApply: { count: 0, limit: -1 }\n  }\n};\n\nmodule.exports = async function (context, documents) {\n  const startTime = Date.now();\n  \n  if (!documents || documents.length === 0) {\n    context.log('No documents to process');\n    return;\n  }\n\n  const client = getCosmosClient();\n  const database = client.database('PrepBettrDB');\n  const usageContainer = database.container('usage');\n  \n  const processedUsers = [];\n\n  try {\n    for (const document of documents) {\n      // Check if this is a plan change by looking at the operation type and changes\n      const userId = document.id;\n      \n      // Azure Cosmos DB doesn't provide \"before/after\" like Firestore\n      // We need to detect plan changes differently\n      if (document.plan && userId) {\n        const newPlan = document.plan;\n        \n        // Get current usage data to check if plan actually changed\n        try {\n          const { resource: currentUsage } = await usageContainer.item(userId, userId).read();\n          \n          // If user doesn't have usage record or plan is different, reset usage\n          if (!currentUsage || !currentUsage.plan || currentUsage.plan !== newPlan) {\n            const newPlanLimits = PLAN_LIMITS[newPlan] || PLAN_LIMITS.free;\n            const timestamp = new Date().toISOString();\n            \n            const usageDocument = {\n              id: userId,\n              userId: userId,\n              plan: newPlan,\n              previousPlan: currentUsage?.plan || 'free',\n              ...newPlanLimits,\n              lastReset: timestamp,\n              updatedAt: timestamp,\n              createdAt: currentUsage?.createdAt || timestamp\n            };\n            \n            // Upsert the usage document\n            await usageContainer.items.upsert(usageDocument);\n            \n            processedUsers.push({\n              userId,\n              oldPlan: currentUsage?.plan || 'free',\n              newPlan,\n              resetAt: timestamp\n            });\n            \n            context.log(`Usage counters reset for user: ${userId}, plan changed from ${currentUsage?.plan || 'free'} to ${newPlan}`);\n          }\n        } catch (usageError) {\n          // If usage document doesn't exist, create it\n          if (usageError.code === 404) {\n            const newPlanLimits = PLAN_LIMITS[newPlan] || PLAN_LIMITS.free;\n            const timestamp = new Date().toISOString();\n            \n            const usageDocument = {\n              id: userId,\n              userId: userId,\n              plan: newPlan,\n              previousPlan: 'free',\n              ...newPlanLimits,\n              lastReset: timestamp,\n              updatedAt: timestamp,\n              createdAt: timestamp\n            };\n            \n            await usageContainer.items.create(usageDocument);\n            \n            processedUsers.push({\n              userId,\n              oldPlan: 'free',\n              newPlan,\n              resetAt: timestamp\n            });\n            \n            context.log(`Initial usage counters created for user: ${userId}, plan: ${newPlan}`);\n          } else {\n            context.log.error(`Error processing usage for user ${userId}:`, usageError);\n          }\n        }\n      }\n    }\n\n    const duration = Date.now() - startTime;\n    context.log(`Processed ${processedUsers.length} plan changes in ${duration}ms:`, \n      processedUsers.map(u => `${u.userId}: ${u.oldPlan} â†’ ${u.newPlan}`).join(', '));\n\n    // Return summary for monitoring\n    return {\n      processedCount: processedUsers.length,\n      totalDocuments: documents.length,\n      duration,\n      changes: processedUsers\n    };\n\n  } catch (error) {\n    const duration = Date.now() - startTime;\n    context.log.error(`Error processing plan changes (${duration}ms):`, error);\n    throw error;\n  }\n};\n"],"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","ignoreList":[]}