7e0c9473afc5e82d328ef77e7d055efb
"use strict";

// lib/utils/telemetry-stub.ts
// Temporary telemetry stub to allow testing without server-only dependencies
/* istanbul ignore next */
function cov_1ck2s712bx() {
  var path = "/Users/dikshantvashistha/PrepBettr/lib/utils/telemetry-stub.ts";
  var hash = "a1eff03d37a4fffbd133241437f7b301b1eceb5a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dikshantvashistha/PrepBettr/lib/utils/telemetry-stub.ts",
    statementMap: {
      "0": {
        start: {
          line: 4,
          column: 0
        },
        end: {
          line: 4,
          column: 62
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 27
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 35
        }
      },
      "3": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 54
        }
      },
      "4": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 13,
          column: 19
        }
      },
      "5": {
        start: {
          line: 13,
          column: 12
        },
        end: {
          line: 13,
          column: 19
        }
      },
      "6": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 75
        }
      },
      "7": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 34
        }
      },
      "8": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 71
        }
      },
      "9": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 61
        }
      },
      "10": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 92
        }
      },
      "11": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 87
        }
      },
      "12": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 82
        }
      },
      "13": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 99
        }
      },
      "14": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 111
        }
      },
      "15": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 98
        }
      },
      "16": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 94
        }
      },
      "17": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 102
        }
      },
      "18": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 48,
          column: 86
        }
      },
      "19": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 51,
          column: 86
        }
      },
      "20": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 54,
          column: 84
        }
      },
      "21": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 54
        }
      },
      "22": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 60,
          column: 80
        }
      },
      "23": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 63,
          column: 94
        }
      },
      "24": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 66,
          column: 51
        }
      },
      "25": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 69,
          column: 20
        }
      },
      "26": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 72,
          column: 20
        }
      },
      "27": {
        start: {
          line: 76,
          column: 0
        },
        end: {
          line: 76,
          column: 47
        }
      },
      "28": {
        start: {
          line: 77,
          column: 0
        },
        end: {
          line: 77,
          column: 36
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        },
        loc: {
          start: {
            line: 7,
            column: 18
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 11,
            column: 4
          },
          end: {
            line: 11,
            column: 5
          }
        },
        loc: {
          start: {
            line: 11,
            column: 23
          },
          end: {
            line: 16,
            column: 5
          }
        },
        line: 11
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 17,
            column: 5
          }
        },
        loc: {
          start: {
            line: 17,
            column: 34
          },
          end: {
            line: 19,
            column: 5
          }
        },
        line: 17
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 20,
            column: 5
          }
        },
        loc: {
          start: {
            line: 20,
            column: 28
          },
          end: {
            line: 22,
            column: 5
          }
        },
        line: 20
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 23,
            column: 5
          }
        },
        loc: {
          start: {
            line: 23,
            column: 34
          },
          end: {
            line: 25,
            column: 5
          }
        },
        line: 23
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 26,
            column: 5
          }
        },
        loc: {
          start: {
            line: 26,
            column: 61
          },
          end: {
            line: 28,
            column: 5
          }
        },
        line: 26
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        },
        loc: {
          start: {
            line: 29,
            column: 30
          },
          end: {
            line: 31,
            column: 5
          }
        },
        line: 29
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        },
        loc: {
          start: {
            line: 32,
            column: 69
          },
          end: {
            line: 34,
            column: 5
          }
        },
        line: 32
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        },
        loc: {
          start: {
            line: 35,
            column: 88
          },
          end: {
            line: 37,
            column: 5
          }
        },
        line: 35
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        },
        loc: {
          start: {
            line: 38,
            column: 72
          },
          end: {
            line: 40,
            column: 5
          }
        },
        line: 38
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 41,
            column: 5
          }
        },
        loc: {
          start: {
            line: 41,
            column: 69
          },
          end: {
            line: 43,
            column: 5
          }
        },
        line: 41
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        },
        loc: {
          start: {
            line: 44,
            column: 69
          },
          end: {
            line: 46,
            column: 5
          }
        },
        line: 44
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 47,
            column: 4
          },
          end: {
            line: 47,
            column: 5
          }
        },
        loc: {
          start: {
            line: 47,
            column: 59
          },
          end: {
            line: 49,
            column: 5
          }
        },
        line: 47
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 50,
            column: 4
          },
          end: {
            line: 50,
            column: 5
          }
        },
        loc: {
          start: {
            line: 50,
            column: 32
          },
          end: {
            line: 52,
            column: 5
          }
        },
        line: 50
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 53,
            column: 4
          },
          end: {
            line: 53,
            column: 5
          }
        },
        loc: {
          start: {
            line: 53,
            column: 45
          },
          end: {
            line: 55,
            column: 5
          }
        },
        line: 53
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 56,
            column: 4
          },
          end: {
            line: 56,
            column: 5
          }
        },
        loc: {
          start: {
            line: 56,
            column: 22
          },
          end: {
            line: 58,
            column: 5
          }
        },
        line: 56
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 59,
            column: 4
          },
          end: {
            line: 59,
            column: 5
          }
        },
        loc: {
          start: {
            line: 59,
            column: 49
          },
          end: {
            line: 61,
            column: 5
          }
        },
        line: 59
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 62,
            column: 4
          },
          end: {
            line: 62,
            column: 5
          }
        },
        loc: {
          start: {
            line: 62,
            column: 69
          },
          end: {
            line: 64,
            column: 5
          }
        },
        line: 62
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 65,
            column: 4
          },
          end: {
            line: 65,
            column: 5
          }
        },
        loc: {
          start: {
            line: 65,
            column: 18
          },
          end: {
            line: 67,
            column: 5
          }
        },
        line: 65
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 68,
            column: 4
          },
          end: {
            line: 68,
            column: 5
          }
        },
        loc: {
          start: {
            line: 68,
            column: 21
          },
          end: {
            line: 70,
            column: 5
          }
        },
        line: 68
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 71,
            column: 4
          },
          end: {
            line: 71,
            column: 5
          }
        },
        loc: {
          start: {
            line: 71,
            column: 21
          },
          end: {
            line: 73,
            column: 5
          }
        },
        line: 71
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 12,
            column: 8
          },
          end: {
            line: 13,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 12,
            column: 8
          },
          end: {
            line: 13,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 12
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0
    },
    b: {
      "0": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/dikshantvashistha/PrepBettr/lib/utils/telemetry-stub.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/dikshantvashistha/PrepBettr/lib/utils/telemetry-stub.ts"],
      sourcesContent: ["// lib/utils/telemetry-stub.ts\n// Temporary telemetry stub to allow testing without server-only dependencies\n\nexport interface TelemetryPageView {\n  name: string;\n  uri?: string;\n  isLoggedIn?: boolean;\n  userId?: string;\n  properties?: { [key: string]: string };\n  measurements?: { [key: string]: number };\n}\n\nexport interface TelemetryEvent {\n  name: string;\n  properties?: { [key: string]: string };\n  measurements?: { [key: string]: number };\n}\n\nexport interface TelemetryUserAction {\n  action: string;\n  feature: string;\n  location?: string;\n  userId?: string;\n  properties?: { [key: string]: string };\n}\n\nexport interface TelemetryCustomMetric {\n  name: string;\n  value: number;\n  properties?: { [key: string]: string };\n}\n\nexport interface TelemetryError {\n  error: Error;\n  userId?: string;\n  context?: { [key: string]: string };\n}\n\nclass TelemetryStubService {\n  private isInitialized = false;\n  private isClient = typeof window !== 'undefined';\n\n  async initialize(): Promise<void> {\n    if (this.isInitialized) return;\n    \n    console.log('\uD83D\uDCCA Telemetry stub initialized (no actual telemetry)');\n    this.isInitialized = true;\n  }\n\n  async trackPageView(pageView: TelemetryPageView): Promise<void> {\n    console.log(`\uD83D\uDCCA [STUB] Page view: ${pageView.name}`, pageView);\n  }\n\n  async trackEvent(event: TelemetryEvent): Promise<void> {\n    console.log(`\uD83D\uDCCA [STUB] Event: ${event.name}`, event);\n  }\n\n  async trackUserAction(action: TelemetryUserAction): Promise<void> {\n    console.log(`\uD83D\uDCCA [STUB] User action: ${action.action} on ${action.feature}`, action);\n  }\n\n  async trackFeatureUsage(featureName: string, userId?: string, properties?: { [key: string]: string }): Promise<void> {\n    console.log(`\uD83D\uDCCA [STUB] Feature usage: ${featureName}`, { userId, properties });\n  }\n\n  async trackMetric(metric: TelemetryCustomMetric): Promise<void> {\n    console.log(`\uD83D\uDCC8 [STUB] Metric: ${metric.name} = ${metric.value}`, metric);\n  }\n\n  async trackBusinessMetric(metricName: string, value: number, userId?: string, properties?: { [key: string]: string }): Promise<void> {\n    console.log(`\uD83D\uDCBC [STUB] Business metric: ${metricName} = ${value}`, { userId, properties });\n  }\n\n  async trackInterviewCompletion(userId: string, interviewId: string, questionCount: number, duration: number, score?: number): Promise<void> {\n    console.log(`\uD83C\uDFAF [STUB] Interview completed:`, { userId, interviewId, questionCount, duration, score });\n  }\n\n  async trackResumeUpload(userId: string, fileSize: number, mimeType: string, processingTime: number): Promise<void> {\n    console.log(`\uD83D\uDCC4 [STUB] Resume uploaded:`, { userId, fileSize, mimeType, processingTime });\n  }\n\n  async trackFormSubmission(formName: string, userId?: string, success?: boolean, properties?: { [key: string]: string }): Promise<void> {\n    console.log(`\uD83D\uDCDD [STUB] Form submitted: ${formName}`, { userId, success, properties });\n  }\n\n  async trackButtonClick(buttonName: string, location: string, userId?: string, properties?: { [key: string]: string }): Promise<void> {\n    console.log(`\uD83D\uDD18 [STUB] Button clicked: ${buttonName} at ${location}`, { userId, properties });\n  }\n\n  async trackSubscription(userId: string, action: 'upgrade' | 'downgrade' | 'cancel', plan: string, revenue?: number): Promise<void> {\n    console.log(`\uD83D\uDCB3 [STUB] Subscription ${action}: ${plan}`, { userId, revenue });\n  }\n\n  async trackError(errorInfo: TelemetryError): Promise<void> {\n    console.log(`\uD83D\uDEA8 [STUB] Error tracked: ${errorInfo.error.message}`, errorInfo);\n  }\n\n  async setUser(userId: string, email?: string, properties?: { [key: string]: string }): Promise<void> {\n    console.log(`\uD83D\uDC64 [STUB] User context set: ${userId}`, { email, properties });\n  }\n\n  async clearUser(): Promise<void> {\n    console.log('\uD83D\uDC64 [STUB] User context cleared');\n  }\n\n  async trackABTest(testName: string, variant: string, userId?: string): Promise<void> {\n    console.log(`\uD83E\uDDEA [STUB] A/B test: ${testName} = ${variant}`, { userId });\n  }\n\n  async trackConversion(conversionType: string, value?: number, userId?: string, properties?: { [key: string]: string }): Promise<void> {\n    console.log(`\uD83C\uDFAF [STUB] Conversion: ${conversionType}`, { value, userId, properties });\n  }\n\n  async flush(): Promise<void> {\n    console.log('\uD83D\uDEBF [STUB] Telemetry flushed');\n  }\n\n  getReactPlugin(): any {\n    return null;\n  }\n\n  getAppInsights(): any {\n    return null;\n  }\n}\n\n// Export singleton instance\nexport const telemetry = new TelemetryStubService();\nexport default telemetry;\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a1eff03d37a4fffbd133241437f7b301b1eceb5a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1ck2s712bx = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1ck2s712bx();
cov_1ck2s712bx().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1ck2s712bx().s[1]++;
exports.telemetry = void 0;
class TelemetryStubService {
  constructor() {
    /* istanbul ignore next */
    cov_1ck2s712bx().f[0]++;
    cov_1ck2s712bx().s[2]++;
    this.isInitialized = false;
    /* istanbul ignore next */
    cov_1ck2s712bx().s[3]++;
    this.isClient = typeof window !== 'undefined';
  }
  async initialize() {
    /* istanbul ignore next */
    cov_1ck2s712bx().f[1]++;
    cov_1ck2s712bx().s[4]++;
    if (this.isInitialized) {
      /* istanbul ignore next */
      cov_1ck2s712bx().b[0][0]++;
      cov_1ck2s712bx().s[5]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1ck2s712bx().b[0][1]++;
    }
    cov_1ck2s712bx().s[6]++;
    console.log('📊 Telemetry stub initialized (no actual telemetry)');
    /* istanbul ignore next */
    cov_1ck2s712bx().s[7]++;
    this.isInitialized = true;
  }
  async trackPageView(pageView) {
    /* istanbul ignore next */
    cov_1ck2s712bx().f[2]++;
    cov_1ck2s712bx().s[8]++;
    console.log(`📊 [STUB] Page view: ${pageView.name}`, pageView);
  }
  async trackEvent(event) {
    /* istanbul ignore next */
    cov_1ck2s712bx().f[3]++;
    cov_1ck2s712bx().s[9]++;
    console.log(`📊 [STUB] Event: ${event.name}`, event);
  }
  async trackUserAction(action) {
    /* istanbul ignore next */
    cov_1ck2s712bx().f[4]++;
    cov_1ck2s712bx().s[10]++;
    console.log(`📊 [STUB] User action: ${action.action} on ${action.feature}`, action);
  }
  async trackFeatureUsage(featureName, userId, properties) {
    /* istanbul ignore next */
    cov_1ck2s712bx().f[5]++;
    cov_1ck2s712bx().s[11]++;
    console.log(`📊 [STUB] Feature usage: ${featureName}`, {
      userId,
      properties
    });
  }
  async trackMetric(metric) {
    /* istanbul ignore next */
    cov_1ck2s712bx().f[6]++;
    cov_1ck2s712bx().s[12]++;
    console.log(`📈 [STUB] Metric: ${metric.name} = ${metric.value}`, metric);
  }
  async trackBusinessMetric(metricName, value, userId, properties) {
    /* istanbul ignore next */
    cov_1ck2s712bx().f[7]++;
    cov_1ck2s712bx().s[13]++;
    console.log(`💼 [STUB] Business metric: ${metricName} = ${value}`, {
      userId,
      properties
    });
  }
  async trackInterviewCompletion(userId, interviewId, questionCount, duration, score) {
    /* istanbul ignore next */
    cov_1ck2s712bx().f[8]++;
    cov_1ck2s712bx().s[14]++;
    console.log(`🎯 [STUB] Interview completed:`, {
      userId,
      interviewId,
      questionCount,
      duration,
      score
    });
  }
  async trackResumeUpload(userId, fileSize, mimeType, processingTime) {
    /* istanbul ignore next */
    cov_1ck2s712bx().f[9]++;
    cov_1ck2s712bx().s[15]++;
    console.log(`📄 [STUB] Resume uploaded:`, {
      userId,
      fileSize,
      mimeType,
      processingTime
    });
  }
  async trackFormSubmission(formName, userId, success, properties) {
    /* istanbul ignore next */
    cov_1ck2s712bx().f[10]++;
    cov_1ck2s712bx().s[16]++;
    console.log(`📝 [STUB] Form submitted: ${formName}`, {
      userId,
      success,
      properties
    });
  }
  async trackButtonClick(buttonName, location, userId, properties) {
    /* istanbul ignore next */
    cov_1ck2s712bx().f[11]++;
    cov_1ck2s712bx().s[17]++;
    console.log(`🔘 [STUB] Button clicked: ${buttonName} at ${location}`, {
      userId,
      properties
    });
  }
  async trackSubscription(userId, action, plan, revenue) {
    /* istanbul ignore next */
    cov_1ck2s712bx().f[12]++;
    cov_1ck2s712bx().s[18]++;
    console.log(`💳 [STUB] Subscription ${action}: ${plan}`, {
      userId,
      revenue
    });
  }
  async trackError(errorInfo) {
    /* istanbul ignore next */
    cov_1ck2s712bx().f[13]++;
    cov_1ck2s712bx().s[19]++;
    console.log(`🚨 [STUB] Error tracked: ${errorInfo.error.message}`, errorInfo);
  }
  async setUser(userId, email, properties) {
    /* istanbul ignore next */
    cov_1ck2s712bx().f[14]++;
    cov_1ck2s712bx().s[20]++;
    console.log(`👤 [STUB] User context set: ${userId}`, {
      email,
      properties
    });
  }
  async clearUser() {
    /* istanbul ignore next */
    cov_1ck2s712bx().f[15]++;
    cov_1ck2s712bx().s[21]++;
    console.log('👤 [STUB] User context cleared');
  }
  async trackABTest(testName, variant, userId) {
    /* istanbul ignore next */
    cov_1ck2s712bx().f[16]++;
    cov_1ck2s712bx().s[22]++;
    console.log(`🧪 [STUB] A/B test: ${testName} = ${variant}`, {
      userId
    });
  }
  async trackConversion(conversionType, value, userId, properties) {
    /* istanbul ignore next */
    cov_1ck2s712bx().f[17]++;
    cov_1ck2s712bx().s[23]++;
    console.log(`🎯 [STUB] Conversion: ${conversionType}`, {
      value,
      userId,
      properties
    });
  }
  async flush() {
    /* istanbul ignore next */
    cov_1ck2s712bx().f[18]++;
    cov_1ck2s712bx().s[24]++;
    console.log('🚿 [STUB] Telemetry flushed');
  }
  getReactPlugin() {
    /* istanbul ignore next */
    cov_1ck2s712bx().f[19]++;
    cov_1ck2s712bx().s[25]++;
    return null;
  }
  getAppInsights() {
    /* istanbul ignore next */
    cov_1ck2s712bx().f[20]++;
    cov_1ck2s712bx().s[26]++;
    return null;
  }
}
// Export singleton instance
/* istanbul ignore next */
cov_1ck2s712bx().s[27]++;
exports.telemetry = new TelemetryStubService();
/* istanbul ignore next */
cov_1ck2s712bx().s[28]++;
exports.default = exports.telemetry;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,