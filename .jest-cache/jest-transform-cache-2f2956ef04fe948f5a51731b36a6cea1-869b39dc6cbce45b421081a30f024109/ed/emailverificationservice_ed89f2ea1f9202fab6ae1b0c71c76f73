eb86500602879f0424a26f0e65475227
"use strict";

// lib/services/email-verification-service.ts
/* istanbul ignore next */
function cov_25dljz3t49() {
  var path = "/Users/dikshantvashistha/PrepBettr/lib/services/email-verification-service.ts";
  var hash = "6fcbf0a653b8138b0b19490d9b5db02493ea5619";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dikshantvashistha/PrepBettr/lib/services/email-verification-service.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "1": {
        start: {
          line: 4,
          column: 0
        },
        end: {
          line: 4,
          column: 77
        }
      },
      "2": {
        start: {
          line: 5,
          column: 16
        },
        end: {
          line: 5,
          column: 47
        }
      },
      "3": {
        start: {
          line: 6,
          column: 20
        },
        end: {
          line: 6,
          column: 55
        }
      },
      "4": {
        start: {
          line: 7,
          column: 17
        },
        end: {
          line: 7,
          column: 34
        }
      },
      "5": {
        start: {
          line: 8,
          column: 26
        },
        end: {
          line: 8,
          column: 54
        }
      },
      "6": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 24
        }
      },
      "7": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 16,
          column: 9
        }
      },
      "8": {
        start: {
          line: 15,
          column: 12
        },
        end: {
          line: 15,
          column: 62
        }
      },
      "9": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 24
        }
      },
      "10": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 86,
          column: 9
        }
      },
      "11": {
        start: {
          line: 25,
          column: 26
        },
        end: {
          line: 25,
          column: 71
        }
      },
      "12": {
        start: {
          line: 27,
          column: 30
        },
        end: {
          line: 27,
          column: 40
        }
      },
      "13": {
        start: {
          line: 28,
          column: 12
        },
        end: {
          line: 28,
          column: 58
        }
      },
      "14": {
        start: {
          line: 30,
          column: 37
        },
        end: {
          line: 38,
          column: 13
        }
      },
      "15": {
        start: {
          line: 40,
          column: 23
        },
        end: {
          line: 40,
          column: 41
        }
      },
      "16": {
        start: {
          line: 41,
          column: 12
        },
        end: {
          line: 41,
          column: 77
        }
      },
      "17": {
        start: {
          line: 43,
          column: 28
        },
        end: {
          line: 43,
          column: 116
        }
      },
      "18": {
        start: {
          line: 44,
          column: 36
        },
        end: {
          line: 44,
          column: 85
        }
      },
      "19": {
        start: {
          line: 46,
          column: 33
        },
        end: {
          line: 60,
          column: 7
        }
      },
      "20": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 66,
          column: 15
        }
      },
      "21": {
        start: {
          line: 67,
          column: 39
        },
        end: {
          line: 71,
          column: 14
        }
      },
      "22": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 73,
          column: 39
        }
      },
      "23": {
        start: {
          line: 73,
          column: 16
        },
        end: {
          line: 73,
          column: 39
        }
      },
      "24": {
        start: {
          line: 74,
          column: 12
        },
        end: {
          line: 74,
          column: 82
        }
      },
      "25": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 78,
          column: 14
        }
      },
      "26": {
        start: {
          line: 81,
          column: 12
        },
        end: {
          line: 81,
          column: 70
        }
      },
      "27": {
        start: {
          line: 82,
          column: 12
        },
        end: {
          line: 85,
          column: 14
        }
      },
      "28": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 149,
          column: 9
        }
      },
      "29": {
        start: {
          line: 95,
          column: 23
        },
        end: {
          line: 95,
          column: 41
        }
      },
      "30": {
        start: {
          line: 96,
          column: 41
        },
        end: {
          line: 101,
          column: 22
        }
      },
      "31": {
        start: {
          line: 102,
          column: 12
        },
        end: {
          line: 107,
          column: 13
        }
      },
      "32": {
        start: {
          line: 103,
          column: 16
        },
        end: {
          line: 106,
          column: 18
        }
      },
      "33": {
        start: {
          line: 108,
          column: 36
        },
        end: {
          line: 108,
          column: 64
        }
      },
      "34": {
        start: {
          line: 109,
          column: 37
        },
        end: {
          line: 109,
          column: 200
        }
      },
      "35": {
        start: {
          line: 111,
          column: 12
        },
        end: {
          line: 116,
          column: 13
        }
      },
      "36": {
        start: {
          line: 112,
          column: 16
        },
        end: {
          line: 115,
          column: 18
        }
      },
      "37": {
        start: {
          line: 118,
          column: 12
        },
        end: {
          line: 123,
          column: 13
        }
      },
      "38": {
        start: {
          line: 119,
          column: 16
        },
        end: {
          line: 122,
          column: 18
        }
      },
      "39": {
        start: {
          line: 125,
          column: 26
        },
        end: {
          line: 125,
          column: 36
        }
      },
      "40": {
        start: {
          line: 126,
          column: 12
        },
        end: {
          line: 129,
          column: 15
        }
      },
      "41": {
        start: {
          line: 131,
          column: 28
        },
        end: {
          line: 131,
          column: 79
        }
      },
      "42": {
        start: {
          line: 132,
          column: 12
        },
        end: {
          line: 135,
          column: 15
        }
      },
      "43": {
        start: {
          line: 136,
          column: 12
        },
        end: {
          line: 136,
          column: 33
        }
      },
      "44": {
        start: {
          line: 137,
          column: 12
        },
        end: {
          line: 137,
          column: 78
        }
      },
      "45": {
        start: {
          line: 138,
          column: 12
        },
        end: {
          line: 141,
          column: 14
        }
      },
      "46": {
        start: {
          line: 144,
          column: 12
        },
        end: {
          line: 144,
          column: 59
        }
      },
      "47": {
        start: {
          line: 145,
          column: 12
        },
        end: {
          line: 148,
          column: 14
        }
      },
      "48": {
        start: {
          line: 155,
          column: 8
        },
        end: {
          line: 167,
          column: 9
        }
      },
      "49": {
        start: {
          line: 156,
          column: 23
        },
        end: {
          line: 156,
          column: 41
        }
      },
      "50": {
        start: {
          line: 157,
          column: 28
        },
        end: {
          line: 157,
          column: 74
        }
      },
      "51": {
        start: {
          line: 158,
          column: 12
        },
        end: {
          line: 160,
          column: 13
        }
      },
      "52": {
        start: {
          line: 159,
          column: 16
        },
        end: {
          line: 159,
          column: 29
        }
      },
      "53": {
        start: {
          line: 161,
          column: 29
        },
        end: {
          line: 161,
          column: 43
        }
      },
      "54": {
        start: {
          line: 162,
          column: 12
        },
        end: {
          line: 162,
          column: 105
        }
      },
      "55": {
        start: {
          line: 165,
          column: 12
        },
        end: {
          line: 165,
          column: 71
        }
      },
      "56": {
        start: {
          line: 166,
          column: 12
        },
        end: {
          line: 166,
          column: 25
        }
      },
      "57": {
        start: {
          line: 173,
          column: 8
        },
        end: {
          line: 210,
          column: 9
        }
      },
      "58": {
        start: {
          line: 175,
          column: 23
        },
        end: {
          line: 175,
          column: 41
        }
      },
      "59": {
        start: {
          line: 176,
          column: 28
        },
        end: {
          line: 176,
          column: 74
        }
      },
      "60": {
        start: {
          line: 177,
          column: 12
        },
        end: {
          line: 182,
          column: 13
        }
      },
      "61": {
        start: {
          line: 178,
          column: 16
        },
        end: {
          line: 181,
          column: 18
        }
      },
      "62": {
        start: {
          line: 183,
          column: 29
        },
        end: {
          line: 183,
          column: 43
        }
      },
      "63": {
        start: {
          line: 184,
          column: 12
        },
        end: {
          line: 189,
          column: 13
        }
      },
      "64": {
        start: {
          line: 185,
          column: 16
        },
        end: {
          line: 188,
          column: 18
        }
      },
      "65": {
        start: {
          line: 191,
          column: 43
        },
        end: {
          line: 195,
          column: 22
        }
      },
      "66": {
        start: {
          line: 196,
          column: 26
        },
        end: {
          line: 196,
          column: 36
        }
      },
      "67": {
        start: {
          line: 197,
          column: 12
        },
        end: {
          line: 199,
          column: 15
        }
      },
      "68": {
        start: {
          line: 198,
          column: 16
        },
        end: {
          line: 198,
          column: 38
        }
      },
      "69": {
        start: {
          line: 200,
          column: 12
        },
        end: {
          line: 200,
          column: 33
        }
      },
      "70": {
        start: {
          line: 202,
          column: 12
        },
        end: {
          line: 202,
          column: 195
        }
      },
      "71": {
        start: {
          line: 205,
          column: 12
        },
        end: {
          line: 205,
          column: 72
        }
      },
      "72": {
        start: {
          line: 206,
          column: 12
        },
        end: {
          line: 209,
          column: 14
        }
      },
      "73": {
        start: {
          line: 216,
          column: 8
        },
        end: {
          line: 249,
          column: 9
        }
      },
      "74": {
        start: {
          line: 218,
          column: 23
        },
        end: {
          line: 218,
          column: 41
        }
      },
      "75": {
        start: {
          line: 219,
          column: 28
        },
        end: {
          line: 219,
          column: 74
        }
      },
      "76": {
        start: {
          line: 220,
          column: 12
        },
        end: {
          line: 222,
          column: 13
        }
      },
      "77": {
        start: {
          line: 221,
          column: 16
        },
        end: {
          line: 221,
          column: 71
        }
      },
      "78": {
        start: {
          line: 223,
          column: 29
        },
        end: {
          line: 223,
          column: 43
        }
      },
      "79": {
        start: {
          line: 224,
          column: 29
        },
        end: {
          line: 224,
          column: 114
        }
      },
      "80": {
        start: {
          line: 225,
          column: 12
        },
        end: {
          line: 231,
          column: 13
        }
      },
      "81": {
        start: {
          line: 226,
          column: 16
        },
        end: {
          line: 230,
          column: 18
        }
      },
      "82": {
        start: {
          line: 233,
          column: 36
        },
        end: {
          line: 239,
          column: 22
        }
      },
      "83": {
        start: {
          line: 240,
          column: 12
        },
        end: {
          line: 244,
          column: 14
        }
      },
      "84": {
        start: {
          line: 247,
          column: 12
        },
        end: {
          line: 247,
          column: 71
        }
      },
      "85": {
        start: {
          line: 248,
          column: 12
        },
        end: {
          line: 248,
          column: 67
        }
      },
      "86": {
        start: {
          line: 255,
          column: 8
        },
        end: {
          line: 276,
          column: 9
        }
      },
      "87": {
        start: {
          line: 256,
          column: 23
        },
        end: {
          line: 256,
          column: 41
        }
      },
      "88": {
        start: {
          line: 257,
          column: 36
        },
        end: {
          line: 261,
          column: 22
        }
      },
      "89": {
        start: {
          line: 262,
          column: 12
        },
        end: {
          line: 264,
          column: 13
        }
      },
      "90": {
        start: {
          line: 263,
          column: 16
        },
        end: {
          line: 263,
          column: 38
        }
      },
      "91": {
        start: {
          line: 265,
          column: 26
        },
        end: {
          line: 265,
          column: 36
        }
      },
      "92": {
        start: {
          line: 266,
          column: 12
        },
        end: {
          line: 268,
          column: 15
        }
      },
      "93": {
        start: {
          line: 267,
          column: 16
        },
        end: {
          line: 267,
          column: 38
        }
      },
      "94": {
        start: {
          line: 269,
          column: 12
        },
        end: {
          line: 269,
          column: 33
        }
      },
      "95": {
        start: {
          line: 270,
          column: 12
        },
        end: {
          line: 270,
          column: 97
        }
      },
      "96": {
        start: {
          line: 271,
          column: 12
        },
        end: {
          line: 271,
          column: 60
        }
      },
      "97": {
        start: {
          line: 274,
          column: 12
        },
        end: {
          line: 274,
          column: 70
        }
      },
      "98": {
        start: {
          line: 275,
          column: 12
        },
        end: {
          line: 275,
          column: 34
        }
      },
      "99": {
        start: {
          line: 279,
          column: 0
        },
        end: {
          line: 279,
          column: 60
        }
      },
      "100": {
        start: {
          line: 281,
          column: 0
        },
        end: {
          line: 281,
          column: 66
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 5
          }
        },
        loc: {
          start: {
            line: 10,
            column: 18
          },
          end: {
            line: 12,
            column: 5
          }
        },
        line: 10
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 18
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 57
          },
          end: {
            line: 87,
            column: 5
          }
        },
        line: 22
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 91,
            column: 4
          },
          end: {
            line: 91,
            column: 5
          }
        },
        loc: {
          start: {
            line: 91,
            column: 29
          },
          end: {
            line: 150,
            column: 5
          }
        },
        line: 91
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 154,
            column: 4
          },
          end: {
            line: 154,
            column: 5
          }
        },
        loc: {
          start: {
            line: 154,
            column: 34
          },
          end: {
            line: 168,
            column: 5
          }
        },
        line: 154
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 172,
            column: 4
          },
          end: {
            line: 172,
            column: 5
          }
        },
        loc: {
          start: {
            line: 172,
            column: 42
          },
          end: {
            line: 211,
            column: 5
          }
        },
        line: 172
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 197,
            column: 48
          },
          end: {
            line: 197,
            column: 49
          }
        },
        loc: {
          start: {
            line: 197,
            column: 57
          },
          end: {
            line: 199,
            column: 13
          }
        },
        line: 197
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 215,
            column: 4
          },
          end: {
            line: 215,
            column: 5
          }
        },
        loc: {
          start: {
            line: 215,
            column: 40
          },
          end: {
            line: 250,
            column: 5
          }
        },
        line: 215
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 254,
            column: 4
          },
          end: {
            line: 254,
            column: 5
          }
        },
        loc: {
          start: {
            line: 254,
            column: 33
          },
          end: {
            line: 277,
            column: 5
          }
        },
        line: 254
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 266,
            column: 41
          },
          end: {
            line: 266,
            column: 42
          }
        },
        loc: {
          start: {
            line: 266,
            column: 50
          },
          end: {
            line: 268,
            column: 13
          }
        },
        line: 266
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 14,
            column: 8
          },
          end: {
            line: 16,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 14,
            column: 8
          },
          end: {
            line: 16,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 14
      },
      "1": {
        loc: {
          start: {
            line: 43,
            column: 28
          },
          end: {
            line: 43,
            column: 116
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 43,
            column: 28
          },
          end: {
            line: 43,
            column: 52
          }
        }, {
          start: {
            line: 43,
            column: 56
          },
          end: {
            line: 43,
            column: 89
          }
        }, {
          start: {
            line: 43,
            column: 93
          },
          end: {
            line: 43,
            column: 116
          }
        }],
        line: 43
      },
      "2": {
        loc: {
          start: {
            line: 47,
            column: 15
          },
          end: {
            line: 47,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 47,
            column: 15
          },
          end: {
            line: 47,
            column: 23
          }
        }, {
          start: {
            line: 47,
            column: 27
          },
          end: {
            line: 47,
            column: 33
          }
        }],
        line: 47
      },
      "3": {
        loc: {
          start: {
            line: 72,
            column: 12
          },
          end: {
            line: 73,
            column: 39
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 72,
            column: 12
          },
          end: {
            line: 73,
            column: 39
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 72
      },
      "4": {
        loc: {
          start: {
            line: 84,
            column: 23
          },
          end: {
            line: 84,
            column: 99
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 84,
            column: 48
          },
          end: {
            line: 84,
            column: 61
          }
        }, {
          start: {
            line: 84,
            column: 64
          },
          end: {
            line: 84,
            column: 99
          }
        }],
        line: 84
      },
      "5": {
        loc: {
          start: {
            line: 102,
            column: 12
          },
          end: {
            line: 107,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 102,
            column: 12
          },
          end: {
            line: 107,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 102
      },
      "6": {
        loc: {
          start: {
            line: 102,
            column: 16
          },
          end: {
            line: 102,
            column: 114
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 102,
            column: 16
          },
          end: {
            line: 102,
            column: 42
          }
        }, {
          start: {
            line: 102,
            column: 46
          },
          end: {
            line: 102,
            column: 72
          }
        }, {
          start: {
            line: 102,
            column: 76
          },
          end: {
            line: 102,
            column: 114
          }
        }],
        line: 102
      },
      "7": {
        loc: {
          start: {
            line: 109,
            column: 37
          },
          end: {
            line: 109,
            column: 200
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 109,
            column: 38
          },
          end: {
            line: 109,
            column: 193
          }
        }, {
          start: {
            line: 109,
            column: 198
          },
          end: {
            line: 109,
            column: 200
          }
        }],
        line: 109
      },
      "8": {
        loc: {
          start: {
            line: 109,
            column: 38
          },
          end: {
            line: 109,
            column: 193
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 109,
            column: 160
          },
          end: {
            line: 109,
            column: 166
          }
        }, {
          start: {
            line: 109,
            column: 169
          },
          end: {
            line: 109,
            column: 193
          }
        }],
        line: 109
      },
      "9": {
        loc: {
          start: {
            line: 109,
            column: 38
          },
          end: {
            line: 109,
            column: 157
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 109,
            column: 38
          },
          end: {
            line: 109,
            column: 140
          }
        }, {
          start: {
            line: 109,
            column: 144
          },
          end: {
            line: 109,
            column: 157
          }
        }],
        line: 109
      },
      "10": {
        loc: {
          start: {
            line: 109,
            column: 44
          },
          end: {
            line: 109,
            column: 130
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 109,
            column: 101
          },
          end: {
            line: 109,
            column: 107
          }
        }, {
          start: {
            line: 109,
            column: 110
          },
          end: {
            line: 109,
            column: 130
          }
        }],
        line: 109
      },
      "11": {
        loc: {
          start: {
            line: 109,
            column: 44
          },
          end: {
            line: 109,
            column: 98
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 109,
            column: 44
          },
          end: {
            line: 109,
            column: 68
          }
        }, {
          start: {
            line: 109,
            column: 72
          },
          end: {
            line: 109,
            column: 98
          }
        }],
        line: 109
      },
      "12": {
        loc: {
          start: {
            line: 111,
            column: 12
          },
          end: {
            line: 116,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 111,
            column: 12
          },
          end: {
            line: 116,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 111
      },
      "13": {
        loc: {
          start: {
            line: 111,
            column: 16
          },
          end: {
            line: 111,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 111,
            column: 16
          },
          end: {
            line: 111,
            column: 33
          }
        }, {
          start: {
            line: 111,
            column: 37
          },
          end: {
            line: 111,
            column: 61
          }
        }],
        line: 111
      },
      "14": {
        loc: {
          start: {
            line: 118,
            column: 12
          },
          end: {
            line: 123,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 118,
            column: 12
          },
          end: {
            line: 123,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 118
      },
      "15": {
        loc: {
          start: {
            line: 147,
            column: 23
          },
          end: {
            line: 147,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 147,
            column: 48
          },
          end: {
            line: 147,
            column: 61
          }
        }, {
          start: {
            line: 147,
            column: 64
          },
          end: {
            line: 147,
            column: 88
          }
        }],
        line: 147
      },
      "16": {
        loc: {
          start: {
            line: 158,
            column: 12
          },
          end: {
            line: 160,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 158,
            column: 12
          },
          end: {
            line: 160,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 158
      },
      "17": {
        loc: {
          start: {
            line: 162,
            column: 20
          },
          end: {
            line: 162,
            column: 94
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 162,
            column: 63
          },
          end: {
            line: 162,
            column: 69
          }
        }, {
          start: {
            line: 162,
            column: 72
          },
          end: {
            line: 162,
            column: 94
          }
        }],
        line: 162
      },
      "18": {
        loc: {
          start: {
            line: 162,
            column: 20
          },
          end: {
            line: 162,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 162,
            column: 20
          },
          end: {
            line: 162,
            column: 37
          }
        }, {
          start: {
            line: 162,
            column: 41
          },
          end: {
            line: 162,
            column: 60
          }
        }],
        line: 162
      },
      "19": {
        loc: {
          start: {
            line: 177,
            column: 12
          },
          end: {
            line: 182,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 177,
            column: 12
          },
          end: {
            line: 182,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 177
      },
      "20": {
        loc: {
          start: {
            line: 184,
            column: 12
          },
          end: {
            line: 189,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 184,
            column: 12
          },
          end: {
            line: 189,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 184
      },
      "21": {
        loc: {
          start: {
            line: 184,
            column: 17
          },
          end: {
            line: 184,
            column: 91
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 184,
            column: 60
          },
          end: {
            line: 184,
            column: 66
          }
        }, {
          start: {
            line: 184,
            column: 69
          },
          end: {
            line: 184,
            column: 91
          }
        }],
        line: 184
      },
      "22": {
        loc: {
          start: {
            line: 184,
            column: 17
          },
          end: {
            line: 184,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 184,
            column: 17
          },
          end: {
            line: 184,
            column: 34
          }
        }, {
          start: {
            line: 184,
            column: 38
          },
          end: {
            line: 184,
            column: 57
          }
        }],
        line: 184
      },
      "23": {
        loc: {
          start: {
            line: 202,
            column: 60
          },
          end: {
            line: 202,
            column: 126
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 202,
            column: 103
          },
          end: {
            line: 202,
            column: 109
          }
        }, {
          start: {
            line: 202,
            column: 112
          },
          end: {
            line: 202,
            column: 126
          }
        }],
        line: 202
      },
      "24": {
        loc: {
          start: {
            line: 202,
            column: 60
          },
          end: {
            line: 202,
            column: 100
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 202,
            column: 60
          },
          end: {
            line: 202,
            column: 77
          }
        }, {
          start: {
            line: 202,
            column: 81
          },
          end: {
            line: 202,
            column: 100
          }
        }],
        line: 202
      },
      "25": {
        loc: {
          start: {
            line: 202,
            column: 128
          },
          end: {
            line: 202,
            column: 193
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 202,
            column: 171
          },
          end: {
            line: 202,
            column: 177
          }
        }, {
          start: {
            line: 202,
            column: 180
          },
          end: {
            line: 202,
            column: 193
          }
        }],
        line: 202
      },
      "26": {
        loc: {
          start: {
            line: 202,
            column: 128
          },
          end: {
            line: 202,
            column: 168
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 202,
            column: 128
          },
          end: {
            line: 202,
            column: 145
          }
        }, {
          start: {
            line: 202,
            column: 149
          },
          end: {
            line: 202,
            column: 168
          }
        }],
        line: 202
      },
      "27": {
        loc: {
          start: {
            line: 208,
            column: 23
          },
          end: {
            line: 208,
            column: 101
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 208,
            column: 48
          },
          end: {
            line: 208,
            column: 61
          }
        }, {
          start: {
            line: 208,
            column: 64
          },
          end: {
            line: 208,
            column: 101
          }
        }],
        line: 208
      },
      "28": {
        loc: {
          start: {
            line: 220,
            column: 12
          },
          end: {
            line: 222,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 220,
            column: 12
          },
          end: {
            line: 222,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 220
      },
      "29": {
        loc: {
          start: {
            line: 224,
            column: 30
          },
          end: {
            line: 224,
            column: 104
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 224,
            column: 73
          },
          end: {
            line: 224,
            column: 79
          }
        }, {
          start: {
            line: 224,
            column: 82
          },
          end: {
            line: 224,
            column: 104
          }
        }],
        line: 224
      },
      "30": {
        loc: {
          start: {
            line: 224,
            column: 30
          },
          end: {
            line: 224,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 224,
            column: 30
          },
          end: {
            line: 224,
            column: 47
          }
        }, {
          start: {
            line: 224,
            column: 51
          },
          end: {
            line: 224,
            column: 70
          }
        }],
        line: 224
      },
      "31": {
        loc: {
          start: {
            line: 225,
            column: 12
          },
          end: {
            line: 231,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 225,
            column: 12
          },
          end: {
            line: 231,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 225
      },
      "32": {
        loc: {
          start: {
            line: 229,
            column: 27
          },
          end: {
            line: 229,
            column: 93
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 229,
            column: 70
          },
          end: {
            line: 229,
            column: 76
          }
        }, {
          start: {
            line: 229,
            column: 79
          },
          end: {
            line: 229,
            column: 93
          }
        }],
        line: 229
      },
      "33": {
        loc: {
          start: {
            line: 229,
            column: 27
          },
          end: {
            line: 229,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 229,
            column: 27
          },
          end: {
            line: 229,
            column: 44
          }
        }, {
          start: {
            line: 229,
            column: 48
          },
          end: {
            line: 229,
            column: 67
          }
        }],
        line: 229
      },
      "34": {
        loc: {
          start: {
            line: 243,
            column: 23
          },
          end: {
            line: 243,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 243,
            column: 66
          },
          end: {
            line: 243,
            column: 72
          }
        }, {
          start: {
            line: 243,
            column: 75
          },
          end: {
            line: 243,
            column: 89
          }
        }],
        line: 243
      },
      "35": {
        loc: {
          start: {
            line: 243,
            column: 23
          },
          end: {
            line: 243,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 243,
            column: 23
          },
          end: {
            line: 243,
            column: 40
          }
        }, {
          start: {
            line: 243,
            column: 44
          },
          end: {
            line: 243,
            column: 63
          }
        }],
        line: 243
      },
      "36": {
        loc: {
          start: {
            line: 262,
            column: 12
          },
          end: {
            line: 264,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 262,
            column: 12
          },
          end: {
            line: 264,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 262
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/dikshantvashistha/PrepBettr/lib/services/email-verification-service.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/dikshantvashistha/PrepBettr/lib/services/email-verification-service.ts"],
      sourcesContent: ["// lib/services/email-verification-service.ts\n\nimport { getAdminFirestore } from '@/lib/firebase/admin';\nimport { FieldValue } from 'firebase-admin/firestore';\nimport { EmailVerification } from '@/types/subscription';\nimport { randomBytes } from 'crypto';\nimport { awsSESService } from './aws-ses-service';\n\nexport class EmailVerificationService {\n  private _db: Awaited<ReturnType<typeof getAdminFirestore>> | null = null;\n  \n  private async getDb() {\n    if (!this._db) {\n      this._db = await getAdminFirestore();\n    }\n    return this._db;\n  }\n\n  /**\n   * Generate and send email verification token\n   */\n  async sendVerificationEmail(\n    userId: string, \n    email: string, \n    userName?: string\n  ): Promise<{ success: boolean; token?: string; error?: string }> {\n    try {\n      // Generate secure verification token\n      const token = randomBytes(32).toString('hex');\n      \n      // Set expiry to 24 hours from now\n      const expiresAt = new Date();\n      expiresAt.setHours(expiresAt.getHours() + 24);\n\n      // Create verification record\n      const verificationData: Omit<EmailVerification, 'id'> = {\n        userId,\n        email,\n        token,\n        verified: false,\n        createdAt: new Date(),\n        verifiedAt: null,\n        expiresAt\n      };\n\n      // Store in database\n      const db = await this.getDb();\n      await db.collection('email_verifications').add(verificationData);\n\n      // Create verification URL\n      const baseUrl = process.env.NEXTAUTH_URL || process.env.AZURE_APP_SERVICE_URL || 'http://localhost:3000';\n      const verificationUrl = `${baseUrl}/api/auth/verify-email?token=${token}`;\n\n      // Email content\n      const emailContent = `\n        Dear ${userName || 'User'},\n\n        Please verify your email address to complete your account setup and enable premium features.\n\n        Click the link below to verify your email:\n        ${verificationUrl}\n\n        This link will expire in 24 hours.\n\n        If you didn't create an account with PrepBettr, you can safely ignore this email.\n\n        Best regards,\n        The PrepBettr Team\n      `;\n\n      console.log('Email verification to be sent:', {\n        to: email,\n        subject: 'Verify your PrepBettr account',\n        content: emailContent,\n        verificationUrl\n      });\n\n      const { success, error } = await awsSESService.sendEmail({\n        to: email,\n        subject: 'Verify your PrepBettr account',\n        html: emailContent\n      });\n\n      if (!success) throw new Error(error);\n\n      console.log(`Email verification sent to ${email} for user ${userId}`);\n\n      return { \n        success: true, \n        token \n      };\n\n    } catch (error) {\n      console.error('Error sending verification email:', error);\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Failed to send verification email'\n      };\n    }\n  }\n\n  /**\n   * Verify email using token\n   */\n  async verifyEmail(token: string): Promise<{ success: boolean; userId?: string; error?: string }> {\n    try {\n      // Find verification record\n      const db = await this.getDb();\n      const verificationSnapshot = await db\n        .collection('email_verifications')\n        .where('token', '==', token)\n        .where('verified', '==', false)\n        .limit(1)\n        .get();\n\n      if (verificationSnapshot.empty || !verificationSnapshot.docs || verificationSnapshot.docs.length === 0) {\n        return {\n          success: false,\n          error: 'Invalid or expired verification token'\n        };\n      }\n\n      const verificationDoc = verificationSnapshot.docs[0];\n      const verificationData = (verificationDoc as any)?.data?.() as EmailVerification || {};\n      \n      // Handle mock case where data might be empty\n      if (!verificationData || !verificationData.userId) {\n        return {\n          success: false,\n          error: 'Invalid verification data - this may be expected in development mode'\n        };\n      }\n\n      // Check if token has expired\n      if (verificationData.expiresAt < new Date()) {\n        return {\n          success: false,\n          error: 'Verification token has expired'\n        };\n      }\n\n      // Update verification record\n      const batch = db.batch();\n\n      batch.update((verificationDoc as any).ref, {\n        verified: true,\n        verifiedAt: FieldValue.serverTimestamp()\n      });\n\n      // Update user's email verification status\n      const userDoc = db.collection('users').doc(verificationData.userId);\n      batch.update(userDoc, {\n        emailVerified: true,\n        updatedAt: FieldValue.serverTimestamp()\n      });\n\n      await batch.commit();\n\n      console.log(`Email verified for user ${verificationData.userId}`);\n\n      return {\n        success: true,\n        userId: verificationData.userId\n      };\n\n    } catch (error) {\n      console.error('Error verifying email:', error);\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Failed to verify email'\n      };\n    }\n  }\n\n  /**\n   * Check if user's email is verified\n   */\n  async isEmailVerified(userId: string): Promise<boolean> {\n    try {\n      const db = await this.getDb();\n      const userDoc = await db.collection('users').doc(userId).get();\n      \n      if (!userDoc.exists) {\n        return false;\n      }\n\n      const userData = userDoc.data() as any;\n      return userData?.emailVerified === true;\n\n    } catch (error) {\n      console.error('Error checking email verification:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Resend verification email\n   */\n  async resendVerificationEmail(\n    userId: string\n  ): Promise<{ success: boolean; error?: string }> {\n    try {\n      // Get user data\n      const db = await this.getDb();\n      const userDoc = await db.collection('users').doc(userId).get();\n      \n      if (!userDoc.exists) {\n        return {\n          success: false,\n          error: 'User not found'\n        };\n      }\n\n      const userData = userDoc.data() as any;\n      \n      if (userData?.emailVerified === true) {\n        return {\n          success: false,\n          error: 'Email is already verified'\n        };\n      }\n\n      // Invalidate any existing unverified tokens for this user\n      const existingTokensSnapshot = await db\n        .collection('email_verifications')\n        .where('userId', '==', userId)\n        .where('verified', '==', false)\n        .get();\n\n      const batch = db.batch();\n      existingTokensSnapshot.docs.forEach((doc: any) => {\n        batch.delete(doc.ref);\n      });\n\n      await batch.commit();\n\n      // Send new verification email\n      return await this.sendVerificationEmail(\n        userId, \n        userData?.email, \n        userData?.name\n      );\n\n    } catch (error) {\n      console.error('Error resending verification email:', error);\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Failed to resend verification email'\n      };\n    }\n  }\n\n  /**\n   * Get verification status for user\n   */\n  async getVerificationStatus(userId: string): Promise<{\n    verified: boolean;\n    pendingVerification: boolean;\n    email?: string;\n  }> {\n    try {\n      // Check user's verified status\n      const db = await this.getDb();\n      const userDoc = await db.collection('users').doc(userId).get();\n      \n      if (!userDoc.exists) {\n        return { verified: false, pendingVerification: false };\n      }\n\n      const userData = userDoc.data() as any;\n      const verified = userData?.emailVerified === true;\n\n      if (verified) {\n        return { \n          verified: true, \n          pendingVerification: false,\n          email: userData?.email\n        };\n      }\n\n      // Check if there are pending verifications\n      const pendingSnapshot = await db\n        .collection('email_verifications')\n        .where('userId', '==', userId)\n        .where('verified', '==', false)\n        .where('expiresAt', '>', new Date())\n        .limit(1)\n        .get();\n\n      return {\n        verified: false,\n        pendingVerification: !pendingSnapshot.empty,\n        email: userData?.email\n      };\n\n    } catch (error) {\n      console.error('Error getting verification status:', error);\n      return { verified: false, pendingVerification: false };\n    }\n  }\n\n  /**\n   * Clean up expired verification tokens\n   */\n  async cleanupExpiredTokens(): Promise<{ deleted: number }> {\n    try {\n      const db = await this.getDb();\n      const expiredSnapshot = await db\n        .collection('email_verifications')\n        .where('expiresAt', '<', new Date())\n        .where('verified', '==', false)\n        .get();\n\n      if (expiredSnapshot.empty) {\n        return { deleted: 0 };\n      }\n\n      const batch = db.batch();\n      expiredSnapshot.docs.forEach((doc: any) => {\n        batch.delete(doc.ref);\n      });\n\n      await batch.commit();\n\n      console.log(`Cleaned up ${expiredSnapshot.docs.length} expired verification tokens`);\n\n      return { deleted: expiredSnapshot.docs.length };\n\n    } catch (error) {\n      console.error('Error cleaning up expired tokens:', error);\n      return { deleted: 0 };\n    }\n  }\n}\n\n// Export singleton instance\nexport const emailVerificationService = new EmailVerificationService();\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "6fcbf0a653b8138b0b19490d9b5db02493ea5619"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_25dljz3t49 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_25dljz3t49();
cov_25dljz3t49().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_25dljz3t49().s[1]++;
exports.emailVerificationService = exports.EmailVerificationService = void 0;
const admin_1 =
/* istanbul ignore next */
(cov_25dljz3t49().s[2]++, require("@/lib/firebase/admin"));
const firestore_1 =
/* istanbul ignore next */
(cov_25dljz3t49().s[3]++, require("firebase-admin/firestore"));
const crypto_1 =
/* istanbul ignore next */
(cov_25dljz3t49().s[4]++, require("crypto"));
const aws_ses_service_1 =
/* istanbul ignore next */
(cov_25dljz3t49().s[5]++, require("./aws-ses-service"));
class EmailVerificationService {
  constructor() {
    /* istanbul ignore next */
    cov_25dljz3t49().f[0]++;
    cov_25dljz3t49().s[6]++;
    this._db = null;
  }
  async getDb() {
    /* istanbul ignore next */
    cov_25dljz3t49().f[1]++;
    cov_25dljz3t49().s[7]++;
    if (!this._db) {
      /* istanbul ignore next */
      cov_25dljz3t49().b[0][0]++;
      cov_25dljz3t49().s[8]++;
      this._db = await (0, admin_1.getAdminFirestore)();
    } else
    /* istanbul ignore next */
    {
      cov_25dljz3t49().b[0][1]++;
    }
    cov_25dljz3t49().s[9]++;
    return this._db;
  }
  /**
   * Generate and send email verification token
   */
  async sendVerificationEmail(userId, email, userName) {
    /* istanbul ignore next */
    cov_25dljz3t49().f[2]++;
    cov_25dljz3t49().s[10]++;
    try {
      // Generate secure verification token
      const token =
      /* istanbul ignore next */
      (cov_25dljz3t49().s[11]++, (0, crypto_1.randomBytes)(32).toString('hex'));
      // Set expiry to 24 hours from now
      const expiresAt =
      /* istanbul ignore next */
      (cov_25dljz3t49().s[12]++, new Date());
      /* istanbul ignore next */
      cov_25dljz3t49().s[13]++;
      expiresAt.setHours(expiresAt.getHours() + 24);
      // Create verification record
      const verificationData =
      /* istanbul ignore next */
      (cov_25dljz3t49().s[14]++, {
        userId,
        email,
        token,
        verified: false,
        createdAt: new Date(),
        verifiedAt: null,
        expiresAt
      });
      // Store in database
      const db =
      /* istanbul ignore next */
      (cov_25dljz3t49().s[15]++, await this.getDb());
      /* istanbul ignore next */
      cov_25dljz3t49().s[16]++;
      await db.collection('email_verifications').add(verificationData);
      // Create verification URL
      const baseUrl =
      /* istanbul ignore next */
      (cov_25dljz3t49().s[17]++,
      /* istanbul ignore next */
      (cov_25dljz3t49().b[1][0]++, process.env.NEXTAUTH_URL) ||
      /* istanbul ignore next */
      (cov_25dljz3t49().b[1][1]++, process.env.AZURE_APP_SERVICE_URL) ||
      /* istanbul ignore next */
      (cov_25dljz3t49().b[1][2]++, 'http://localhost:3000'));
      const verificationUrl =
      /* istanbul ignore next */
      (cov_25dljz3t49().s[18]++, `${baseUrl}/api/auth/verify-email?token=${token}`);
      // Email content
      const emailContent =
      /* istanbul ignore next */
      (cov_25dljz3t49().s[19]++, `
        Dear ${
      /* istanbul ignore next */
      (cov_25dljz3t49().b[2][0]++, userName) ||
      /* istanbul ignore next */
      (cov_25dljz3t49().b[2][1]++, 'User')},

        Please verify your email address to complete your account setup and enable premium features.

        Click the link below to verify your email:
        ${verificationUrl}

        This link will expire in 24 hours.

        If you didn't create an account with PrepBettr, you can safely ignore this email.

        Best regards,
        The PrepBettr Team
      `);
      /* istanbul ignore next */
      cov_25dljz3t49().s[20]++;
      console.log('Email verification to be sent:', {
        to: email,
        subject: 'Verify your PrepBettr account',
        content: emailContent,
        verificationUrl
      });
      const {
        success,
        error
      } =
      /* istanbul ignore next */
      (cov_25dljz3t49().s[21]++, await aws_ses_service_1.awsSESService.sendEmail({
        to: email,
        subject: 'Verify your PrepBettr account',
        html: emailContent
      }));
      /* istanbul ignore next */
      cov_25dljz3t49().s[22]++;
      if (!success) {
        /* istanbul ignore next */
        cov_25dljz3t49().b[3][0]++;
        cov_25dljz3t49().s[23]++;
        throw new Error(error);
      } else
      /* istanbul ignore next */
      {
        cov_25dljz3t49().b[3][1]++;
      }
      cov_25dljz3t49().s[24]++;
      console.log(`Email verification sent to ${email} for user ${userId}`);
      /* istanbul ignore next */
      cov_25dljz3t49().s[25]++;
      return {
        success: true,
        token
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_25dljz3t49().s[26]++;
      console.error('Error sending verification email:', error);
      /* istanbul ignore next */
      cov_25dljz3t49().s[27]++;
      return {
        success: false,
        error: error instanceof Error ?
        /* istanbul ignore next */
        (cov_25dljz3t49().b[4][0]++, error.message) :
        /* istanbul ignore next */
        (cov_25dljz3t49().b[4][1]++, 'Failed to send verification email')
      };
    }
  }
  /**
   * Verify email using token
   */
  async verifyEmail(token) {
    /* istanbul ignore next */
    cov_25dljz3t49().f[3]++;
    var _a;
    /* istanbul ignore next */
    cov_25dljz3t49().s[28]++;
    try {
      // Find verification record
      const db =
      /* istanbul ignore next */
      (cov_25dljz3t49().s[29]++, await this.getDb());
      const verificationSnapshot =
      /* istanbul ignore next */
      (cov_25dljz3t49().s[30]++, await db.collection('email_verifications').where('token', '==', token).where('verified', '==', false).limit(1).get());
      /* istanbul ignore next */
      cov_25dljz3t49().s[31]++;
      if (
      /* istanbul ignore next */
      (cov_25dljz3t49().b[6][0]++, verificationSnapshot.empty) ||
      /* istanbul ignore next */
      (cov_25dljz3t49().b[6][1]++, !verificationSnapshot.docs) ||
      /* istanbul ignore next */
      (cov_25dljz3t49().b[6][2]++, verificationSnapshot.docs.length === 0)) {
        /* istanbul ignore next */
        cov_25dljz3t49().b[5][0]++;
        cov_25dljz3t49().s[32]++;
        return {
          success: false,
          error: 'Invalid or expired verification token'
        };
      } else
      /* istanbul ignore next */
      {
        cov_25dljz3t49().b[5][1]++;
      }
      const verificationDoc =
      /* istanbul ignore next */
      (cov_25dljz3t49().s[33]++, verificationSnapshot.docs[0]);
      const verificationData =
      /* istanbul ignore next */
      (cov_25dljz3t49().s[34]++,
      /* istanbul ignore next */
      (cov_25dljz3t49().b[7][0]++,
      /* istanbul ignore next */
      (cov_25dljz3t49().b[9][0]++, (_a =
      /* istanbul ignore next */
      (cov_25dljz3t49().b[11][0]++, verificationDoc === null) ||
      /* istanbul ignore next */
      (cov_25dljz3t49().b[11][1]++, verificationDoc === void 0) ?
      /* istanbul ignore next */
      (cov_25dljz3t49().b[10][0]++, void 0) :
      /* istanbul ignore next */
      (cov_25dljz3t49().b[10][1]++, verificationDoc.data)) === null) ||
      /* istanbul ignore next */
      (cov_25dljz3t49().b[9][1]++, _a === void 0) ?
      /* istanbul ignore next */
      (cov_25dljz3t49().b[8][0]++, void 0) :
      /* istanbul ignore next */
      (cov_25dljz3t49().b[8][1]++, _a.call(verificationDoc))) ||
      /* istanbul ignore next */
      (cov_25dljz3t49().b[7][1]++, {}));
      // Handle mock case where data might be empty
      /* istanbul ignore next */
      cov_25dljz3t49().s[35]++;
      if (
      /* istanbul ignore next */
      (cov_25dljz3t49().b[13][0]++, !verificationData) ||
      /* istanbul ignore next */
      (cov_25dljz3t49().b[13][1]++, !verificationData.userId)) {
        /* istanbul ignore next */
        cov_25dljz3t49().b[12][0]++;
        cov_25dljz3t49().s[36]++;
        return {
          success: false,
          error: 'Invalid verification data - this may be expected in development mode'
        };
      } else
      /* istanbul ignore next */
      {
        cov_25dljz3t49().b[12][1]++;
      }
      // Check if token has expired
      cov_25dljz3t49().s[37]++;
      if (verificationData.expiresAt < new Date()) {
        /* istanbul ignore next */
        cov_25dljz3t49().b[14][0]++;
        cov_25dljz3t49().s[38]++;
        return {
          success: false,
          error: 'Verification token has expired'
        };
      } else
      /* istanbul ignore next */
      {
        cov_25dljz3t49().b[14][1]++;
      }
      // Update verification record
      const batch =
      /* istanbul ignore next */
      (cov_25dljz3t49().s[39]++, db.batch());
      /* istanbul ignore next */
      cov_25dljz3t49().s[40]++;
      batch.update(verificationDoc.ref, {
        verified: true,
        verifiedAt: firestore_1.FieldValue.serverTimestamp()
      });
      // Update user's email verification status
      const userDoc =
      /* istanbul ignore next */
      (cov_25dljz3t49().s[41]++, db.collection('users').doc(verificationData.userId));
      /* istanbul ignore next */
      cov_25dljz3t49().s[42]++;
      batch.update(userDoc, {
        emailVerified: true,
        updatedAt: firestore_1.FieldValue.serverTimestamp()
      });
      /* istanbul ignore next */
      cov_25dljz3t49().s[43]++;
      await batch.commit();
      /* istanbul ignore next */
      cov_25dljz3t49().s[44]++;
      console.log(`Email verified for user ${verificationData.userId}`);
      /* istanbul ignore next */
      cov_25dljz3t49().s[45]++;
      return {
        success: true,
        userId: verificationData.userId
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_25dljz3t49().s[46]++;
      console.error('Error verifying email:', error);
      /* istanbul ignore next */
      cov_25dljz3t49().s[47]++;
      return {
        success: false,
        error: error instanceof Error ?
        /* istanbul ignore next */
        (cov_25dljz3t49().b[15][0]++, error.message) :
        /* istanbul ignore next */
        (cov_25dljz3t49().b[15][1]++, 'Failed to verify email')
      };
    }
  }
  /**
   * Check if user's email is verified
   */
  async isEmailVerified(userId) {
    /* istanbul ignore next */
    cov_25dljz3t49().f[4]++;
    cov_25dljz3t49().s[48]++;
    try {
      const db =
      /* istanbul ignore next */
      (cov_25dljz3t49().s[49]++, await this.getDb());
      const userDoc =
      /* istanbul ignore next */
      (cov_25dljz3t49().s[50]++, await db.collection('users').doc(userId).get());
      /* istanbul ignore next */
      cov_25dljz3t49().s[51]++;
      if (!userDoc.exists) {
        /* istanbul ignore next */
        cov_25dljz3t49().b[16][0]++;
        cov_25dljz3t49().s[52]++;
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_25dljz3t49().b[16][1]++;
      }
      const userData =
      /* istanbul ignore next */
      (cov_25dljz3t49().s[53]++, userDoc.data());
      /* istanbul ignore next */
      cov_25dljz3t49().s[54]++;
      return (
      /* istanbul ignore next */
      (cov_25dljz3t49().b[18][0]++, userData === null) ||
      /* istanbul ignore next */
      (cov_25dljz3t49().b[18][1]++, userData === void 0) ?
      /* istanbul ignore next */
      (cov_25dljz3t49().b[17][0]++, void 0) :
      /* istanbul ignore next */
      (cov_25dljz3t49().b[17][1]++, userData.emailVerified)) === true;
    } catch (error) {
      /* istanbul ignore next */
      cov_25dljz3t49().s[55]++;
      console.error('Error checking email verification:', error);
      /* istanbul ignore next */
      cov_25dljz3t49().s[56]++;
      return false;
    }
  }
  /**
   * Resend verification email
   */
  async resendVerificationEmail(userId) {
    /* istanbul ignore next */
    cov_25dljz3t49().f[5]++;
    cov_25dljz3t49().s[57]++;
    try {
      // Get user data
      const db =
      /* istanbul ignore next */
      (cov_25dljz3t49().s[58]++, await this.getDb());
      const userDoc =
      /* istanbul ignore next */
      (cov_25dljz3t49().s[59]++, await db.collection('users').doc(userId).get());
      /* istanbul ignore next */
      cov_25dljz3t49().s[60]++;
      if (!userDoc.exists) {
        /* istanbul ignore next */
        cov_25dljz3t49().b[19][0]++;
        cov_25dljz3t49().s[61]++;
        return {
          success: false,
          error: 'User not found'
        };
      } else
      /* istanbul ignore next */
      {
        cov_25dljz3t49().b[19][1]++;
      }
      const userData =
      /* istanbul ignore next */
      (cov_25dljz3t49().s[62]++, userDoc.data());
      /* istanbul ignore next */
      cov_25dljz3t49().s[63]++;
      if ((
      /* istanbul ignore next */
      (cov_25dljz3t49().b[22][0]++, userData === null) ||
      /* istanbul ignore next */
      (cov_25dljz3t49().b[22][1]++, userData === void 0) ?
      /* istanbul ignore next */
      (cov_25dljz3t49().b[21][0]++, void 0) :
      /* istanbul ignore next */
      (cov_25dljz3t49().b[21][1]++, userData.emailVerified)) === true) {
        /* istanbul ignore next */
        cov_25dljz3t49().b[20][0]++;
        cov_25dljz3t49().s[64]++;
        return {
          success: false,
          error: 'Email is already verified'
        };
      } else
      /* istanbul ignore next */
      {
        cov_25dljz3t49().b[20][1]++;
      }
      // Invalidate any existing unverified tokens for this user
      const existingTokensSnapshot =
      /* istanbul ignore next */
      (cov_25dljz3t49().s[65]++, await db.collection('email_verifications').where('userId', '==', userId).where('verified', '==', false).get());
      const batch =
      /* istanbul ignore next */
      (cov_25dljz3t49().s[66]++, db.batch());
      /* istanbul ignore next */
      cov_25dljz3t49().s[67]++;
      existingTokensSnapshot.docs.forEach(doc => {
        /* istanbul ignore next */
        cov_25dljz3t49().f[6]++;
        cov_25dljz3t49().s[68]++;
        batch.delete(doc.ref);
      });
      /* istanbul ignore next */
      cov_25dljz3t49().s[69]++;
      await batch.commit();
      // Send new verification email
      /* istanbul ignore next */
      cov_25dljz3t49().s[70]++;
      return await this.sendVerificationEmail(userId,
      /* istanbul ignore next */
      (cov_25dljz3t49().b[24][0]++, userData === null) ||
      /* istanbul ignore next */
      (cov_25dljz3t49().b[24][1]++, userData === void 0) ?
      /* istanbul ignore next */
      (cov_25dljz3t49().b[23][0]++, void 0) :
      /* istanbul ignore next */
      (cov_25dljz3t49().b[23][1]++, userData.email),
      /* istanbul ignore next */
      (cov_25dljz3t49().b[26][0]++, userData === null) ||
      /* istanbul ignore next */
      (cov_25dljz3t49().b[26][1]++, userData === void 0) ?
      /* istanbul ignore next */
      (cov_25dljz3t49().b[25][0]++, void 0) :
      /* istanbul ignore next */
      (cov_25dljz3t49().b[25][1]++, userData.name));
    } catch (error) {
      /* istanbul ignore next */
      cov_25dljz3t49().s[71]++;
      console.error('Error resending verification email:', error);
      /* istanbul ignore next */
      cov_25dljz3t49().s[72]++;
      return {
        success: false,
        error: error instanceof Error ?
        /* istanbul ignore next */
        (cov_25dljz3t49().b[27][0]++, error.message) :
        /* istanbul ignore next */
        (cov_25dljz3t49().b[27][1]++, 'Failed to resend verification email')
      };
    }
  }
  /**
   * Get verification status for user
   */
  async getVerificationStatus(userId) {
    /* istanbul ignore next */
    cov_25dljz3t49().f[7]++;
    cov_25dljz3t49().s[73]++;
    try {
      // Check user's verified status
      const db =
      /* istanbul ignore next */
      (cov_25dljz3t49().s[74]++, await this.getDb());
      const userDoc =
      /* istanbul ignore next */
      (cov_25dljz3t49().s[75]++, await db.collection('users').doc(userId).get());
      /* istanbul ignore next */
      cov_25dljz3t49().s[76]++;
      if (!userDoc.exists) {
        /* istanbul ignore next */
        cov_25dljz3t49().b[28][0]++;
        cov_25dljz3t49().s[77]++;
        return {
          verified: false,
          pendingVerification: false
        };
      } else
      /* istanbul ignore next */
      {
        cov_25dljz3t49().b[28][1]++;
      }
      const userData =
      /* istanbul ignore next */
      (cov_25dljz3t49().s[78]++, userDoc.data());
      const verified =
      /* istanbul ignore next */
      (cov_25dljz3t49().s[79]++, (
      /* istanbul ignore next */
      (cov_25dljz3t49().b[30][0]++, userData === null) ||
      /* istanbul ignore next */
      (cov_25dljz3t49().b[30][1]++, userData === void 0) ?
      /* istanbul ignore next */
      (cov_25dljz3t49().b[29][0]++, void 0) :
      /* istanbul ignore next */
      (cov_25dljz3t49().b[29][1]++, userData.emailVerified)) === true);
      /* istanbul ignore next */
      cov_25dljz3t49().s[80]++;
      if (verified) {
        /* istanbul ignore next */
        cov_25dljz3t49().b[31][0]++;
        cov_25dljz3t49().s[81]++;
        return {
          verified: true,
          pendingVerification: false,
          email:
          /* istanbul ignore next */
          (cov_25dljz3t49().b[33][0]++, userData === null) ||
          /* istanbul ignore next */
          (cov_25dljz3t49().b[33][1]++, userData === void 0) ?
          /* istanbul ignore next */
          (cov_25dljz3t49().b[32][0]++, void 0) :
          /* istanbul ignore next */
          (cov_25dljz3t49().b[32][1]++, userData.email)
        };
      } else
      /* istanbul ignore next */
      {
        cov_25dljz3t49().b[31][1]++;
      }
      // Check if there are pending verifications
      const pendingSnapshot =
      /* istanbul ignore next */
      (cov_25dljz3t49().s[82]++, await db.collection('email_verifications').where('userId', '==', userId).where('verified', '==', false).where('expiresAt', '>', new Date()).limit(1).get());
      /* istanbul ignore next */
      cov_25dljz3t49().s[83]++;
      return {
        verified: false,
        pendingVerification: !pendingSnapshot.empty,
        email:
        /* istanbul ignore next */
        (cov_25dljz3t49().b[35][0]++, userData === null) ||
        /* istanbul ignore next */
        (cov_25dljz3t49().b[35][1]++, userData === void 0) ?
        /* istanbul ignore next */
        (cov_25dljz3t49().b[34][0]++, void 0) :
        /* istanbul ignore next */
        (cov_25dljz3t49().b[34][1]++, userData.email)
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_25dljz3t49().s[84]++;
      console.error('Error getting verification status:', error);
      /* istanbul ignore next */
      cov_25dljz3t49().s[85]++;
      return {
        verified: false,
        pendingVerification: false
      };
    }
  }
  /**
   * Clean up expired verification tokens
   */
  async cleanupExpiredTokens() {
    /* istanbul ignore next */
    cov_25dljz3t49().f[8]++;
    cov_25dljz3t49().s[86]++;
    try {
      const db =
      /* istanbul ignore next */
      (cov_25dljz3t49().s[87]++, await this.getDb());
      const expiredSnapshot =
      /* istanbul ignore next */
      (cov_25dljz3t49().s[88]++, await db.collection('email_verifications').where('expiresAt', '<', new Date()).where('verified', '==', false).get());
      /* istanbul ignore next */
      cov_25dljz3t49().s[89]++;
      if (expiredSnapshot.empty) {
        /* istanbul ignore next */
        cov_25dljz3t49().b[36][0]++;
        cov_25dljz3t49().s[90]++;
        return {
          deleted: 0
        };
      } else
      /* istanbul ignore next */
      {
        cov_25dljz3t49().b[36][1]++;
      }
      const batch =
      /* istanbul ignore next */
      (cov_25dljz3t49().s[91]++, db.batch());
      /* istanbul ignore next */
      cov_25dljz3t49().s[92]++;
      expiredSnapshot.docs.forEach(doc => {
        /* istanbul ignore next */
        cov_25dljz3t49().f[9]++;
        cov_25dljz3t49().s[93]++;
        batch.delete(doc.ref);
      });
      /* istanbul ignore next */
      cov_25dljz3t49().s[94]++;
      await batch.commit();
      /* istanbul ignore next */
      cov_25dljz3t49().s[95]++;
      console.log(`Cleaned up ${expiredSnapshot.docs.length} expired verification tokens`);
      /* istanbul ignore next */
      cov_25dljz3t49().s[96]++;
      return {
        deleted: expiredSnapshot.docs.length
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_25dljz3t49().s[97]++;
      console.error('Error cleaning up expired tokens:', error);
      /* istanbul ignore next */
      cov_25dljz3t49().s[98]++;
      return {
        deleted: 0
      };
    }
  }
}
/* istanbul ignore next */
cov_25dljz3t49().s[99]++;
exports.EmailVerificationService = EmailVerificationService;
// Export singleton instance
/* istanbul ignore next */
cov_25dljz3t49().s[100]++;
exports.emailVerificationService = new EmailVerificationService();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,