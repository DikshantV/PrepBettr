d211f1e1eb6571f8e95d9a044c636974
"use strict";

/**
 * Legacy voice types for API compatibility
 *
 * NOTE: This file only provides types for backward compatibility with existing API routes.
 * The actual voice processing is now handled by Azure AI Foundry Live Voice API.
 * Client-side audio functions have been removed and consolidated into the new Agent component.
 */
/* istanbul ignore next */
function cov_22e8bkvwiy() {
  var path = "/Users/dikshantvashistha/PrepBettr/lib/voice/azure-adapters-legacy-backup.ts";
  var hash = "d71b530b67f901312465cf811df3c70ca378b439";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dikshantvashistha/PrepBettr/lib/voice/azure-adapters-legacy-backup.ts",
    statementMap: {
      "0": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 62
        }
      },
      "1": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 10,
          column: 233
        }
      },
      "2": {
        start: {
          line: 12,
          column: 18
        },
        end: {
          line: 19,
          column: 1
        }
      },
      "3": {
        start: {
          line: 13,
          column: 4
        },
        end: {
          line: 18,
          column: 5
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 26
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 20
        }
      },
      "6": {
        start: {
          line: 20,
          column: 15
        },
        end: {
          line: 30,
          column: 1
        }
      },
      "7": {
        start: {
          line: 22,
          column: 41
        },
        end: {
          line: 22,
          column: 93
        }
      },
      "8": {
        start: {
          line: 23,
          column: 42
        },
        end: {
          line: 23,
          column: 95
        }
      },
      "9": {
        start: {
          line: 25,
          column: 25
        },
        end: {
          line: 25,
          column: 67
        }
      },
      "10": {
        start: {
          line: 26,
          column: 33
        },
        end: {
          line: 26,
          column: 83
        }
      },
      "11": {
        start: {
          line: 28,
          column: 30
        },
        end: {
          line: 28,
          column: 71
        }
      },
      "12": {
        start: {
          line: 31,
          column: 23
        },
        end: {
          line: 33,
          column: 1
        }
      },
      "13": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 32,
          column: 89
        }
      },
      "14": {
        start: {
          line: 34,
          column: 30
        },
        end: {
          line: 34,
          column: 44
        }
      },
      "15": {
        start: {
          line: 34,
          column: 40
        },
        end: {
          line: 34,
          column: 44
        }
      },
      "16": {
        start: {
          line: 35,
          column: 28
        },
        end: {
          line: 35,
          column: 42
        }
      },
      "17": {
        start: {
          line: 35,
          column: 38
        },
        end: {
          line: 35,
          column: 42
        }
      },
      "18": {
        start: {
          line: 36,
          column: 24
        },
        end: {
          line: 36,
          column: 43
        }
      },
      "19": {
        start: {
          line: 40,
          column: 21
        },
        end: {
          line: 65,
          column: 1
        }
      },
      "20": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 64,
          column: 28
        }
      },
      "21": {
        start: {
          line: 43,
          column: 25
        },
        end: {
          line: 43,
          column: 39
        }
      },
      "22": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 44,
          column: 61
        }
      },
      "23": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 48,
          column: 11
        }
      },
      "24": {
        start: {
          line: 49,
          column: 25
        },
        end: {
          line: 52,
          column: 10
        }
      },
      "25": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 55,
          column: 9
        }
      },
      "26": {
        start: {
          line: 54,
          column: 12
        },
        end: {
          line: 54,
          column: 61
        }
      },
      "27": {
        start: {
          line: 56,
          column: 23
        },
        end: {
          line: 56,
          column: 44
        }
      },
      "28": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 59,
          column: 11
        }
      },
      "29": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 62,
          column: 9
        }
      },
      "30": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 61,
          column: 74
        }
      },
      "31": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 63,
          column: 27
        }
      },
      "32": {
        start: {
          line: 66,
          column: 0
        },
        end: {
          line: 66,
          column: 36
        }
      },
      "33": {
        start: {
          line: 70,
          column: 26
        },
        end: {
          line: 92,
          column: 1
        }
      },
      "34": {
        start: {
          line: 72,
          column: 4
        },
        end: {
          line: 72,
          column: 79
        }
      },
      "35": {
        start: {
          line: 73,
          column: 21
        },
        end: {
          line: 82,
          column: 6
        }
      },
      "36": {
        start: {
          line: 83,
          column: 4
        },
        end: {
          line: 85,
          column: 5
        }
      },
      "37": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 84,
          column: 61
        }
      },
      "38": {
        start: {
          line: 86,
          column: 17
        },
        end: {
          line: 86,
          column: 38
        }
      },
      "39": {
        start: {
          line: 87,
          column: 4
        },
        end: {
          line: 90,
          column: 7
        }
      },
      "40": {
        start: {
          line: 91,
          column: 4
        },
        end: {
          line: 91,
          column: 16
        }
      },
      "41": {
        start: {
          line: 93,
          column: 0
        },
        end: {
          line: 93,
          column: 46
        }
      },
      "42": {
        start: {
          line: 97,
          column: 28
        },
        end: {
          line: 157,
          column: 1
        }
      },
      "43": {
        start: {
          line: 99,
          column: 4
        },
        end: {
          line: 102,
          column: 7
        }
      },
      "44": {
        start: {
          line: 103,
          column: 4
        },
        end: {
          line: 106,
          column: 7
        }
      },
      "45": {
        start: {
          line: 107,
          column: 4
        },
        end: {
          line: 156,
          column: 5
        }
      },
      "46": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 108,
          column: 97
        }
      },
      "47": {
        start: {
          line: 109,
          column: 25
        },
        end: {
          line: 118,
          column: 10
        }
      },
      "48": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 123,
          column: 11
        }
      },
      "49": {
        start: {
          line: 124,
          column: 8
        },
        end: {
          line: 132,
          column: 9
        }
      },
      "50": {
        start: {
          line: 125,
          column: 30
        },
        end: {
          line: 125,
          column: 51
        }
      },
      "51": {
        start: {
          line: 126,
          column: 12
        },
        end: {
          line: 130,
          column: 15
        }
      },
      "52": {
        start: {
          line: 131,
          column: 12
        },
        end: {
          line: 131,
          column: 67
        }
      },
      "53": {
        start: {
          line: 133,
          column: 21
        },
        end: {
          line: 133,
          column: 42
        }
      },
      "54": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 140,
          column: 11
        }
      },
      "55": {
        start: {
          line: 141,
          column: 8
        },
        end: {
          line: 146,
          column: 11
        }
      },
      "56": {
        start: {
          line: 147,
          column: 8
        },
        end: {
          line: 147,
          column: 20
        }
      },
      "57": {
        start: {
          line: 150,
          column: 8
        },
        end: {
          line: 154,
          column: 11
        }
      },
      "58": {
        start: {
          line: 155,
          column: 8
        },
        end: {
          line: 155,
          column: 20
        }
      },
      "59": {
        start: {
          line: 158,
          column: 0
        },
        end: {
          line: 158,
          column: 50
        }
      },
      "60": {
        start: {
          line: 162,
          column: 24
        },
        end: {
          line: 190,
          column: 1
        }
      },
      "61": {
        start: {
          line: 163,
          column: 4
        },
        end: {
          line: 189,
          column: 5
        }
      },
      "62": {
        start: {
          line: 164,
          column: 8
        },
        end: {
          line: 164,
          column: 85
        }
      },
      "63": {
        start: {
          line: 165,
          column: 25
        },
        end: {
          line: 173,
          column: 10
        }
      },
      "64": {
        start: {
          line: 174,
          column: 8
        },
        end: {
          line: 184,
          column: 9
        }
      },
      "65": {
        start: {
          line: 175,
          column: 25
        },
        end: {
          line: 175,
          column: 46
        }
      },
      "66": {
        start: {
          line: 176,
          column: 12
        },
        end: {
          line: 178,
          column: 15
        }
      },
      "67": {
        start: {
          line: 179,
          column: 12
        },
        end: {
          line: 179,
          column: 24
        }
      },
      "68": {
        start: {
          line: 182,
          column: 12
        },
        end: {
          line: 182,
          column: 93
        }
      },
      "69": {
        start: {
          line: 183,
          column: 12
        },
        end: {
          line: 183,
          column: 22
        }
      },
      "70": {
        start: {
          line: 187,
          column: 8
        },
        end: {
          line: 187,
          column: 125
        }
      },
      "71": {
        start: {
          line: 188,
          column: 8
        },
        end: {
          line: 188,
          column: 18
        }
      },
      "72": {
        start: {
          line: 191,
          column: 0
        },
        end: {
          line: 191,
          column: 42
        }
      },
      "73": {
        start: {
          line: 195,
          column: 21
        },
        end: {
          line: 263,
          column: 1
        }
      },
      "74": {
        start: {
          line: 196,
          column: 4
        },
        end: {
          line: 262,
          column: 28
        }
      },
      "75": {
        start: {
          line: 198,
          column: 30
        },
        end: {
          line: 198,
          column: 57
        }
      },
      "76": {
        start: {
          line: 199,
          column: 8
        },
        end: {
          line: 204,
          column: 11
        }
      },
      "77": {
        start: {
          line: 205,
          column: 25
        },
        end: {
          line: 214,
          column: 10
        }
      },
      "78": {
        start: {
          line: 215,
          column: 8
        },
        end: {
          line: 217,
          column: 9
        }
      },
      "79": {
        start: {
          line: 216,
          column: 12
        },
        end: {
          line: 216,
          column: 61
        }
      },
      "80": {
        start: {
          line: 219,
          column: 8
        },
        end: {
          line: 261,
          column: 9
        }
      },
      "81": {
        start: {
          line: 220,
          column: 27
        },
        end: {
          line: 220,
          column: 52
        }
      },
      "82": {
        start: {
          line: 221,
          column: 27
        },
        end: {
          line: 221,
          column: 29
        }
      },
      "83": {
        start: {
          line: 222,
          column: 12
        },
        end: {
          line: 251,
          column: 13
        }
      },
      "84": {
        start: {
          line: 223,
          column: 16
        },
        end: {
          line: 232,
          column: 17
        }
      },
      "85": {
        start: {
          line: 224,
          column: 44
        },
        end: {
          line: 224,
          column: 63
        }
      },
      "86": {
        start: {
          line: 225,
          column: 20
        },
        end: {
          line: 226,
          column: 30
        }
      },
      "87": {
        start: {
          line: 226,
          column: 24
        },
        end: {
          line: 226,
          column: 30
        }
      },
      "88": {
        start: {
          line: 227,
          column: 20
        },
        end: {
          line: 227,
          column: 39
        }
      },
      "89": {
        start: {
          line: 229,
          column: 20
        },
        end: {
          line: 231,
          column: 21
        }
      },
      "90": {
        start: {
          line: 230,
          column: 24
        },
        end: {
          line: 230,
          column: 115
        }
      },
      "91": {
        start: {
          line: 234,
          column: 36
        },
        end: {
          line: 234,
          column: 88
        }
      },
      "92": {
        start: {
          line: 234,
          column: 66
        },
        end: {
          line: 234,
          column: 84
        }
      },
      "93": {
        start: {
          line: 235,
          column: 33
        },
        end: {
          line: 235,
          column: 60
        }
      },
      "94": {
        start: {
          line: 236,
          column: 29
        },
        end: {
          line: 236,
          column: 30
        }
      },
      "95": {
        start: {
          line: 237,
          column: 16
        },
        end: {
          line: 240,
          column: 19
        }
      },
      "96": {
        start: {
          line: 238,
          column: 20
        },
        end: {
          line: 238,
          column: 48
        }
      },
      "97": {
        start: {
          line: 239,
          column: 20
        },
        end: {
          line: 239,
          column: 43
        }
      },
      "98": {
        start: {
          line: 241,
          column: 34
        },
        end: {
          line: 241,
          column: 77
        }
      },
      "99": {
        start: {
          line: 242,
          column: 16
        },
        end: {
          line: 246,
          column: 19
        }
      },
      "100": {
        start: {
          line: 247,
          column: 16
        },
        end: {
          line: 247,
          column: 33
        }
      },
      "101": {
        start: {
          line: 250,
          column: 16
        },
        end: {
          line: 250,
          column: 37
        }
      },
      "102": {
        start: {
          line: 255,
          column: 30
        },
        end: {
          line: 255,
          column: 51
        }
      },
      "103": {
        start: {
          line: 256,
          column: 12
        },
        end: {
          line: 259,
          column: 15
        }
      },
      "104": {
        start: {
          line: 260,
          column: 12
        },
        end: {
          line: 260,
          column: 29
        }
      },
      "105": {
        start: {
          line: 264,
          column: 0
        },
        end: {
          line: 264,
          column: 36
        }
      },
      "106": {
        start: {
          line: 268,
          column: 23
        },
        end: {
          line: 331,
          column: 1
        }
      },
      "107": {
        start: {
          line: 269,
          column: 4
        },
        end: {
          line: 273,
          column: 7
        }
      },
      "108": {
        start: {
          line: 274,
          column: 4
        },
        end: {
          line: 330,
          column: 5
        }
      },
      "109": {
        start: {
          line: 276,
          column: 8
        },
        end: {
          line: 279,
          column: 9
        }
      },
      "110": {
        start: {
          line: 277,
          column: 12
        },
        end: {
          line: 277,
          column: 67
        }
      },
      "111": {
        start: {
          line: 278,
          column: 12
        },
        end: {
          line: 278,
          column: 22
        }
      },
      "112": {
        start: {
          line: 280,
          column: 8
        },
        end: {
          line: 280,
          column: 93
        }
      },
      "113": {
        start: {
          line: 282,
          column: 26
        },
        end: {
          line: 282,
          column: 63
        }
      },
      "114": {
        start: {
          line: 283,
          column: 8
        },
        end: {
          line: 285,
          column: 9
        }
      },
      "115": {
        start: {
          line: 284,
          column: 12
        },
        end: {
          line: 284,
          column: 69
        }
      },
      "116": {
        start: {
          line: 286,
          column: 8
        },
        end: {
          line: 289,
          column: 11
        }
      },
      "117": {
        start: {
          line: 291,
          column: 8
        },
        end: {
          line: 291,
          column: 43
        }
      },
      "118": {
        start: {
          line: 292,
          column: 8
        },
        end: {
          line: 292,
          column: 63
        }
      },
      "119": {
        start: {
          line: 293,
          column: 8
        },
        end: {
          line: 293,
          column: 59
        }
      },
      "120": {
        start: {
          line: 295,
          column: 8
        },
        end: {
          line: 298,
          column: 9
        }
      },
      "121": {
        start: {
          line: 296,
          column: 12
        },
        end: {
          line: 296,
          column: 70
        }
      },
      "122": {
        start: {
          line: 297,
          column: 12
        },
        end: {
          line: 297,
          column: 25
        }
      },
      "123": {
        start: {
          line: 299,
          column: 8
        },
        end: {
          line: 299,
          column: 75
        }
      },
      "124": {
        start: {
          line: 302,
          column: 8
        },
        end: {
          line: 302,
          column: 81
        }
      },
      "125": {
        start: {
          line: 303,
          column: 27
        },
        end: {
          line: 303,
          column: 83
        }
      },
      "126": {
        start: {
          line: 304,
          column: 8
        },
        end: {
          line: 304,
          column: 80
        }
      },
      "127": {
        start: {
          line: 306,
          column: 8
        },
        end: {
          line: 329,
          column: 9
        }
      },
      "128": {
        start: {
          line: 308,
          column: 12
        },
        end: {
          line: 310,
          column: 13
        }
      },
      "129": {
        start: {
          line: 309,
          column: 16
        },
        end: {
          line: 309,
          column: 26
        }
      },
      "130": {
        start: {
          line: 311,
          column: 31
        },
        end: {
          line: 311,
          column: 53
        }
      },
      "131": {
        start: {
          line: 312,
          column: 36
        },
        end: {
          line: 312,
          column: 68
        }
      },
      "132": {
        start: {
          line: 313,
          column: 12
        },
        end: {
          line: 316,
          column: 15
        }
      },
      "133": {
        start: {
          line: 317,
          column: 12
        },
        end: {
          line: 317,
          column: 79
        }
      },
      "134": {
        start: {
          line: 317,
          column: 41
        },
        end: {
          line: 317,
          column: 77
        }
      },
      "135": {
        start: {
          line: 318,
          column: 12
        },
        end: {
          line: 320,
          column: 13
        }
      },
      "136": {
        start: {
          line: 319,
          column: 16
        },
        end: {
          line: 319,
          column: 29
        }
      },
      "137": {
        start: {
          line: 321,
          column: 12
        },
        end: {
          line: 321,
          column: 68
        }
      },
      "138": {
        start: {
          line: 324,
          column: 12
        },
        end: {
          line: 324,
          column: 79
        }
      },
      "139": {
        start: {
          line: 326,
          column: 12
        },
        end: {
          line: 328,
          column: 13
        }
      },
      "140": {
        start: {
          line: 327,
          column: 16
        },
        end: {
          line: 327,
          column: 29
        }
      },
      "141": {
        start: {
          line: 332,
          column: 0
        },
        end: {
          line: 332,
          column: 40
        }
      },
      "142": {
        start: {
          line: 336,
          column: 26
        },
        end: {
          line: 363,
          column: 1
        }
      },
      "143": {
        start: {
          line: 337,
          column: 4
        },
        end: {
          line: 362,
          column: 7
        }
      },
      "144": {
        start: {
          line: 338,
          column: 8
        },
        end: {
          line: 361,
          column: 9
        }
      },
      "145": {
        start: {
          line: 340,
          column: 26
        },
        end: {
          line: 340,
          column: 37
        }
      },
      "146": {
        start: {
          line: 341,
          column: 29
        },
        end: {
          line: 341,
          column: 59
        }
      },
      "147": {
        start: {
          line: 342,
          column: 12
        },
        end: {
          line: 342,
          column: 33
        }
      },
      "148": {
        start: {
          line: 343,
          column: 12
        },
        end: {
          line: 343,
          column: 35
        }
      },
      "149": {
        start: {
          line: 345,
          column: 12
        },
        end: {
          line: 348,
          column: 15
        }
      },
      "150": {
        start: {
          line: 346,
          column: 16
        },
        end: {
          line: 346,
          column: 46
        }
      },
      "151": {
        start: {
          line: 347,
          column: 16
        },
        end: {
          line: 347,
          column: 26
        }
      },
      "152": {
        start: {
          line: 349,
          column: 12
        },
        end: {
          line: 352,
          column: 15
        }
      },
      "153": {
        start: {
          line: 350,
          column: 16
        },
        end: {
          line: 350,
          column: 46
        }
      },
      "154": {
        start: {
          line: 351,
          column: 16
        },
        end: {
          line: 351,
          column: 96
        }
      },
      "155": {
        start: {
          line: 354,
          column: 12
        },
        end: {
          line: 357,
          column: 15
        }
      },
      "156": {
        start: {
          line: 355,
          column: 16
        },
        end: {
          line: 355,
          column: 46
        }
      },
      "157": {
        start: {
          line: 356,
          column: 16
        },
        end: {
          line: 356,
          column: 92
        }
      },
      "158": {
        start: {
          line: 360,
          column: 12
        },
        end: {
          line: 360,
          column: 111
        }
      },
      "159": {
        start: {
          line: 367,
          column: 36
        },
        end: {
          line: 383,
          column: 1
        }
      },
      "160": {
        start: {
          line: 368,
          column: 4
        },
        end: {
          line: 380,
          column: 5
        }
      },
      "161": {
        start: {
          line: 369,
          column: 8
        },
        end: {
          line: 379,
          column: 9
        }
      },
      "162": {
        start: {
          line: 370,
          column: 12
        },
        end: {
          line: 370,
          column: 72
        }
      },
      "163": {
        start: {
          line: 371,
          column: 12
        },
        end: {
          line: 371,
          column: 45
        }
      },
      "164": {
        start: {
          line: 372,
          column: 12
        },
        end: {
          line: 372,
          column: 66
        }
      },
      "165": {
        start: {
          line: 373,
          column: 12
        },
        end: {
          line: 373,
          column: 81
        }
      },
      "166": {
        start: {
          line: 374,
          column: 12
        },
        end: {
          line: 374,
          column: 19
        }
      },
      "167": {
        start: {
          line: 377,
          column: 12
        },
        end: {
          line: 377,
          column: 135
        }
      },
      "168": {
        start: {
          line: 382,
          column: 4
        },
        end: {
          line: 382,
          column: 82
        }
      },
      "169": {
        start: {
          line: 384,
          column: 0
        },
        end: {
          line: 384,
          column: 66
        }
      },
      "170": {
        start: {
          line: 388,
          column: 31
        },
        end: {
          line: 440,
          column: 1
        }
      },
      "171": {
        start: {
          line: 389,
          column: 4
        },
        end: {
          line: 439,
          column: 5
        }
      },
      "172": {
        start: {
          line: 391,
          column: 21
        },
        end: {
          line: 391,
          column: 75
        }
      },
      "173": {
        start: {
          line: 393,
          column: 28
        },
        end: {
          line: 393,
          column: 69
        }
      },
      "174": {
        start: {
          line: 394,
          column: 26
        },
        end: {
          line: 394,
          column: 70
        }
      },
      "175": {
        start: {
          line: 396,
          column: 8
        },
        end: {
          line: 401,
          column: 9
        }
      },
      "176": {
        start: {
          line: 397,
          column: 12
        },
        end: {
          line: 397,
          column: 119
        }
      },
      "177": {
        start: {
          line: 400,
          column: 12
        },
        end: {
          line: 400,
          column: 90
        }
      },
      "178": {
        start: {
          line: 402,
          column: 8
        },
        end: {
          line: 407,
          column: 10
        }
      },
      "179": {
        start: {
          line: 410,
          column: 29
        },
        end: {
          line: 410,
          column: 92
        }
      },
      "180": {
        start: {
          line: 411,
          column: 8
        },
        end: {
          line: 415,
          column: 11
        }
      },
      "181": {
        start: {
          line: 417,
          column: 8
        },
        end: {
          line: 417,
          column: 88
        }
      },
      "182": {
        start: {
          line: 419,
          column: 36
        },
        end: {
          line: 419,
          column: 77
        }
      },
      "183": {
        start: {
          line: 420,
          column: 34
        },
        end: {
          line: 423,
          column: 9
        }
      },
      "184": {
        start: {
          line: 425,
          column: 8
        },
        end: {
          line: 432,
          column: 9
        }
      },
      "185": {
        start: {
          line: 426,
          column: 12
        },
        end: {
          line: 426,
          column: 103
        }
      },
      "186": {
        start: {
          line: 429,
          column: 12
        },
        end: {
          line: 429,
          column: 85
        }
      },
      "187": {
        start: {
          line: 430,
          column: 12
        },
        end: {
          line: 431,
          column: 29
        }
      },
      "188": {
        start: {
          line: 431,
          column: 16
        },
        end: {
          line: 431,
          column: 29
        }
      },
      "189": {
        start: {
          line: 433,
          column: 8
        },
        end: {
          line: 438,
          column: 10
        }
      },
      "190": {
        start: {
          line: 441,
          column: 0
        },
        end: {
          line: 441,
          column: 56
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 12,
            column: 18
          },
          end: {
            line: 12,
            column: 19
          }
        },
        loc: {
          start: {
            line: 12,
            column: 47
          },
          end: {
            line: 19,
            column: 1
          }
        },
        line: 12
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 22,
            column: 17
          },
          end: {
            line: 22,
            column: 18
          }
        },
        loc: {
          start: {
            line: 22,
            column: 41
          },
          end: {
            line: 22,
            column: 93
          }
        },
        line: 22
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 23,
            column: 18
          },
          end: {
            line: 23,
            column: 19
          }
        },
        loc: {
          start: {
            line: 23,
            column: 42
          },
          end: {
            line: 23,
            column: 95
          }
        },
        line: 23
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 25,
            column: 10
          },
          end: {
            line: 25,
            column: 11
          }
        },
        loc: {
          start: {
            line: 25,
            column: 25
          },
          end: {
            line: 25,
            column: 67
          }
        },
        line: 25
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 26,
            column: 11
          },
          end: {
            line: 26,
            column: 12
          }
        },
        loc: {
          start: {
            line: 26,
            column: 33
          },
          end: {
            line: 26,
            column: 83
          }
        },
        line: 26
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 28,
            column: 15
          },
          end: {
            line: 28,
            column: 16
          }
        },
        loc: {
          start: {
            line: 28,
            column: 30
          },
          end: {
            line: 28,
            column: 71
          }
        },
        line: 28
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 31,
            column: 23
          },
          end: {
            line: 31,
            column: 24
          }
        },
        loc: {
          start: {
            line: 31,
            column: 48
          },
          end: {
            line: 33,
            column: 1
          }
        },
        line: 31
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 34,
            column: 30
          },
          end: {
            line: 34,
            column: 31
          }
        },
        loc: {
          start: {
            line: 34,
            column: 40
          },
          end: {
            line: 34,
            column: 44
          }
        },
        line: 34
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 35,
            column: 28
          },
          end: {
            line: 35,
            column: 29
          }
        },
        loc: {
          start: {
            line: 35,
            column: 38
          },
          end: {
            line: 35,
            column: 42
          }
        },
        line: 35
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 36,
            column: 24
          },
          end: {
            line: 36,
            column: 25
          }
        },
        loc: {
          start: {
            line: 36,
            column: 40
          },
          end: {
            line: 36,
            column: 43
          }
        },
        line: 36
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 40,
            column: 21
          },
          end: {
            line: 40,
            column: 22
          }
        },
        loc: {
          start: {
            line: 40,
            column: 42
          },
          end: {
            line: 65,
            column: 1
          }
        },
        line: 40
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 41,
            column: 21
          },
          end: {
            line: 41,
            column: 22
          }
        },
        loc: {
          start: {
            line: 41,
            column: 33
          },
          end: {
            line: 64,
            column: 5
          }
        },
        line: 41
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 70,
            column: 26
          },
          end: {
            line: 70,
            column: 27
          }
        },
        loc: {
          start: {
            line: 70,
            column: 54
          },
          end: {
            line: 92,
            column: 1
          }
        },
        line: 70
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 97,
            column: 28
          },
          end: {
            line: 97,
            column: 29
          }
        },
        loc: {
          start: {
            line: 97,
            column: 54
          },
          end: {
            line: 157,
            column: 1
          }
        },
        line: 97
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 162,
            column: 24
          },
          end: {
            line: 162,
            column: 25
          }
        },
        loc: {
          start: {
            line: 162,
            column: 36
          },
          end: {
            line: 190,
            column: 1
          }
        },
        line: 162
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 195,
            column: 21
          },
          end: {
            line: 195,
            column: 22
          }
        },
        loc: {
          start: {
            line: 195,
            column: 46
          },
          end: {
            line: 263,
            column: 1
          }
        },
        line: 195
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 196,
            column: 21
          },
          end: {
            line: 196,
            column: 22
          }
        },
        loc: {
          start: {
            line: 196,
            column: 33
          },
          end: {
            line: 262,
            column: 5
          }
        },
        line: 196
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 234,
            column: 50
          },
          end: {
            line: 234,
            column: 51
          }
        },
        loc: {
          start: {
            line: 234,
            column: 66
          },
          end: {
            line: 234,
            column: 84
          }
        },
        line: 234
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 237,
            column: 31
          },
          end: {
            line: 237,
            column: 32
          }
        },
        loc: {
          start: {
            line: 237,
            column: 40
          },
          end: {
            line: 240,
            column: 17
          }
        },
        line: 237
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 268,
            column: 23
          },
          end: {
            line: 268,
            column: 24
          }
        },
        loc: {
          start: {
            line: 268,
            column: 69
          },
          end: {
            line: 331,
            column: 1
          }
        },
        line: 268
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 317,
            column: 30
          },
          end: {
            line: 317,
            column: 31
          }
        },
        loc: {
          start: {
            line: 317,
            column: 41
          },
          end: {
            line: 317,
            column: 77
          }
        },
        line: 317
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 336,
            column: 26
          },
          end: {
            line: 336,
            column: 27
          }
        },
        loc: {
          start: {
            line: 336,
            column: 47
          },
          end: {
            line: 363,
            column: 1
          }
        },
        line: 336
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 337,
            column: 23
          },
          end: {
            line: 337,
            column: 24
          }
        },
        loc: {
          start: {
            line: 337,
            column: 44
          },
          end: {
            line: 362,
            column: 5
          }
        },
        line: 337
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 345,
            column: 44
          },
          end: {
            line: 345,
            column: 45
          }
        },
        loc: {
          start: {
            line: 345,
            column: 50
          },
          end: {
            line: 348,
            column: 13
          }
        },
        line: 345
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 349,
            column: 44
          },
          end: {
            line: 349,
            column: 45
          }
        },
        loc: {
          start: {
            line: 349,
            column: 55
          },
          end: {
            line: 352,
            column: 13
          }
        },
        line: 349
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 354,
            column: 31
          },
          end: {
            line: 354,
            column: 32
          }
        },
        loc: {
          start: {
            line: 354,
            column: 42
          },
          end: {
            line: 357,
            column: 13
          }
        },
        line: 354
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 367,
            column: 36
          },
          end: {
            line: 367,
            column: 37
          }
        },
        loc: {
          start: {
            line: 367,
            column: 101
          },
          end: {
            line: 383,
            column: 1
          }
        },
        line: 367
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 388,
            column: 31
          },
          end: {
            line: 388,
            column: 32
          }
        },
        loc: {
          start: {
            line: 388,
            column: 87
          },
          end: {
            line: 440,
            column: 1
          }
        },
        line: 388
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 53,
            column: 8
          },
          end: {
            line: 55,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 53,
            column: 8
          },
          end: {
            line: 55,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 53
      },
      "1": {
        loc: {
          start: {
            line: 58,
            column: 24
          },
          end: {
            line: 58,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 58,
            column: 71
          },
          end: {
            line: 58,
            column: 77
          }
        }, {
          start: {
            line: 58,
            column: 80
          },
          end: {
            line: 58,
            column: 89
          }
        }],
        line: 58
      },
      "2": {
        loc: {
          start: {
            line: 58,
            column: 24
          },
          end: {
            line: 58,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 58,
            column: 24
          },
          end: {
            line: 58,
            column: 51
          }
        }, {
          start: {
            line: 58,
            column: 55
          },
          end: {
            line: 58,
            column: 68
          }
        }],
        line: 58
      },
      "3": {
        loc: {
          start: {
            line: 60,
            column: 8
          },
          end: {
            line: 62,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 60,
            column: 8
          },
          end: {
            line: 62,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 60
      },
      "4": {
        loc: {
          start: {
            line: 83,
            column: 4
          },
          end: {
            line: 85,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 83,
            column: 4
          },
          end: {
            line: 85,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 83
      },
      "5": {
        loc: {
          start: {
            line: 89,
            column: 23
          },
          end: {
            line: 89,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 89,
            column: 71
          },
          end: {
            line: 89,
            column: 77
          }
        }, {
          start: {
            line: 89,
            column: 80
          },
          end: {
            line: 89,
            column: 89
          }
        }],
        line: 89
      },
      "6": {
        loc: {
          start: {
            line: 89,
            column: 23
          },
          end: {
            line: 89,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 89,
            column: 23
          },
          end: {
            line: 89,
            column: 51
          }
        }, {
          start: {
            line: 89,
            column: 55
          },
          end: {
            line: 89,
            column: 68
          }
        }],
        line: 89
      },
      "7": {
        loc: {
          start: {
            line: 124,
            column: 8
          },
          end: {
            line: 132,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 124,
            column: 8
          },
          end: {
            line: 132,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 124
      },
      "8": {
        loc: {
          start: {
            line: 136,
            column: 27
          },
          end: {
            line: 136,
            column: 93
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 136,
            column: 75
          },
          end: {
            line: 136,
            column: 81
          }
        }, {
          start: {
            line: 136,
            column: 84
          },
          end: {
            line: 136,
            column: 93
          }
        }],
        line: 136
      },
      "9": {
        loc: {
          start: {
            line: 136,
            column: 27
          },
          end: {
            line: 136,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 136,
            column: 27
          },
          end: {
            line: 136,
            column: 55
          }
        }, {
          start: {
            line: 136,
            column: 59
          },
          end: {
            line: 136,
            column: 72
          }
        }],
        line: 136
      },
      "10": {
        loc: {
          start: {
            line: 143,
            column: 27
          },
          end: {
            line: 143,
            column: 93
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 143,
            column: 75
          },
          end: {
            line: 143,
            column: 81
          }
        }, {
          start: {
            line: 143,
            column: 84
          },
          end: {
            line: 143,
            column: 93
          }
        }],
        line: 143
      },
      "11": {
        loc: {
          start: {
            line: 143,
            column: 27
          },
          end: {
            line: 143,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 143,
            column: 27
          },
          end: {
            line: 143,
            column: 55
          }
        }, {
          start: {
            line: 143,
            column: 59
          },
          end: {
            line: 143,
            column: 72
          }
        }],
        line: 143
      },
      "12": {
        loc: {
          start: {
            line: 151,
            column: 23
          },
          end: {
            line: 151,
            column: 85
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 151,
            column: 48
          },
          end: {
            line: 151,
            column: 70
          }
        }, {
          start: {
            line: 151,
            column: 73
          },
          end: {
            line: 151,
            column: 85
          }
        }],
        line: 151
      },
      "13": {
        loc: {
          start: {
            line: 152,
            column: 26
          },
          end: {
            line: 152,
            column: 80
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 152,
            column: 51
          },
          end: {
            line: 152,
            column: 64
          }
        }, {
          start: {
            line: 152,
            column: 67
          },
          end: {
            line: 152,
            column: 80
          }
        }],
        line: 152
      },
      "14": {
        loc: {
          start: {
            line: 153,
            column: 19
          },
          end: {
            line: 153,
            column: 67
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 153,
            column: 44
          },
          end: {
            line: 153,
            column: 55
          }
        }, {
          start: {
            line: 153,
            column: 58
          },
          end: {
            line: 153,
            column: 67
          }
        }],
        line: 153
      },
      "15": {
        loc: {
          start: {
            line: 174,
            column: 8
          },
          end: {
            line: 184,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 174,
            column: 8
          },
          end: {
            line: 184,
            column: 9
          }
        }, {
          start: {
            line: 181,
            column: 13
          },
          end: {
            line: 184,
            column: 9
          }
        }],
        line: 174
      },
      "16": {
        loc: {
          start: {
            line: 187,
            column: 67
          },
          end: {
            line: 187,
            column: 121
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 187,
            column: 92
          },
          end: {
            line: 187,
            column: 105
          }
        }, {
          start: {
            line: 187,
            column: 108
          },
          end: {
            line: 187,
            column: 121
          }
        }],
        line: 187
      },
      "17": {
        loc: {
          start: {
            line: 203,
            column: 23
          },
          end: {
            line: 203,
            column: 101
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 203,
            column: 24
          },
          end: {
            line: 203,
            column: 91
          }
        }, {
          start: {
            line: 203,
            column: 96
          },
          end: {
            line: 203,
            column: 101
          }
        }],
        line: 203
      },
      "18": {
        loc: {
          start: {
            line: 203,
            column: 24
          },
          end: {
            line: 203,
            column: 91
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 203,
            column: 65
          },
          end: {
            line: 203,
            column: 71
          }
        }, {
          start: {
            line: 203,
            column: 74
          },
          end: {
            line: 203,
            column: 91
          }
        }],
        line: 203
      },
      "19": {
        loc: {
          start: {
            line: 203,
            column: 24
          },
          end: {
            line: 203,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 203,
            column: 24
          },
          end: {
            line: 203,
            column: 40
          }
        }, {
          start: {
            line: 203,
            column: 44
          },
          end: {
            line: 203,
            column: 62
          }
        }],
        line: 203
      },
      "20": {
        loc: {
          start: {
            line: 212,
            column: 27
          },
          end: {
            line: 212,
            column: 105
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 212,
            column: 28
          },
          end: {
            line: 212,
            column: 95
          }
        }, {
          start: {
            line: 212,
            column: 100
          },
          end: {
            line: 212,
            column: 105
          }
        }],
        line: 212
      },
      "21": {
        loc: {
          start: {
            line: 212,
            column: 28
          },
          end: {
            line: 212,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 212,
            column: 69
          },
          end: {
            line: 212,
            column: 75
          }
        }, {
          start: {
            line: 212,
            column: 78
          },
          end: {
            line: 212,
            column: 95
          }
        }],
        line: 212
      },
      "22": {
        loc: {
          start: {
            line: 212,
            column: 28
          },
          end: {
            line: 212,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 212,
            column: 28
          },
          end: {
            line: 212,
            column: 44
          }
        }, {
          start: {
            line: 212,
            column: 48
          },
          end: {
            line: 212,
            column: 66
          }
        }],
        line: 212
      },
      "23": {
        loc: {
          start: {
            line: 215,
            column: 8
          },
          end: {
            line: 217,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 215,
            column: 8
          },
          end: {
            line: 217,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 215
      },
      "24": {
        loc: {
          start: {
            line: 219,
            column: 8
          },
          end: {
            line: 261,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 219,
            column: 8
          },
          end: {
            line: 261,
            column: 9
          }
        }, {
          start: {
            line: 253,
            column: 13
          },
          end: {
            line: 261,
            column: 9
          }
        }],
        line: 219
      },
      "25": {
        loc: {
          start: {
            line: 219,
            column: 12
          },
          end: {
            line: 219,
            column: 117
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 219,
            column: 13
          },
          end: {
            line: 219,
            column: 80
          }
        }, {
          start: {
            line: 219,
            column: 85
          },
          end: {
            line: 219,
            column: 100
          }
        }, {
          start: {
            line: 219,
            column: 104
          },
          end: {
            line: 219,
            column: 117
          }
        }],
        line: 219
      },
      "26": {
        loc: {
          start: {
            line: 219,
            column: 13
          },
          end: {
            line: 219,
            column: 80
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 219,
            column: 54
          },
          end: {
            line: 219,
            column: 60
          }
        }, {
          start: {
            line: 219,
            column: 63
          },
          end: {
            line: 219,
            column: 80
          }
        }],
        line: 219
      },
      "27": {
        loc: {
          start: {
            line: 219,
            column: 13
          },
          end: {
            line: 219,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 219,
            column: 13
          },
          end: {
            line: 219,
            column: 29
          }
        }, {
          start: {
            line: 219,
            column: 33
          },
          end: {
            line: 219,
            column: 51
          }
        }],
        line: 219
      },
      "28": {
        loc: {
          start: {
            line: 225,
            column: 20
          },
          end: {
            line: 226,
            column: 30
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 225,
            column: 20
          },
          end: {
            line: 226,
            column: 30
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 225
      },
      "29": {
        loc: {
          start: {
            line: 229,
            column: 20
          },
          end: {
            line: 231,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 229,
            column: 20
          },
          end: {
            line: 231,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 229
      },
      "30": {
        loc: {
          start: {
            line: 276,
            column: 8
          },
          end: {
            line: 279,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 276,
            column: 8
          },
          end: {
            line: 279,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 276
      },
      "31": {
        loc: {
          start: {
            line: 283,
            column: 8
          },
          end: {
            line: 285,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 283,
            column: 8
          },
          end: {
            line: 285,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 283
      },
      "32": {
        loc: {
          start: {
            line: 283,
            column: 12
          },
          end: {
            line: 283,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 283,
            column: 12
          },
          end: {
            line: 283,
            column: 22
          }
        }, {
          start: {
            line: 283,
            column: 26
          },
          end: {
            line: 283,
            column: 46
          }
        }],
        line: 283
      },
      "33": {
        loc: {
          start: {
            line: 287,
            column: 44
          },
          end: {
            line: 287,
            column: 74
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 287,
            column: 64
          },
          end: {
            line: 287,
            column: 69
          }
        }, {
          start: {
            line: 287,
            column: 72
          },
          end: {
            line: 287,
            column: 74
          }
        }],
        line: 287
      },
      "34": {
        loc: {
          start: {
            line: 295,
            column: 8
          },
          end: {
            line: 298,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 295,
            column: 8
          },
          end: {
            line: 298,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 295
      },
      "35": {
        loc: {
          start: {
            line: 303,
            column: 27
          },
          end: {
            line: 303,
            column: 83
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 303,
            column: 52
          },
          end: {
            line: 303,
            column: 57
          }
        }, {
          start: {
            line: 303,
            column: 60
          },
          end: {
            line: 303,
            column: 83
          }
        }],
        line: 303
      },
      "36": {
        loc: {
          start: {
            line: 308,
            column: 12
          },
          end: {
            line: 310,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 308,
            column: 12
          },
          end: {
            line: 310,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 308
      },
      "37": {
        loc: {
          start: {
            line: 318,
            column: 12
          },
          end: {
            line: 320,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 318,
            column: 12
          },
          end: {
            line: 320,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 318
      },
      "38": {
        loc: {
          start: {
            line: 326,
            column: 12
          },
          end: {
            line: 328,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 326,
            column: 12
          },
          end: {
            line: 328,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 326
      },
      "39": {
        loc: {
          start: {
            line: 351,
            column: 59
          },
          end: {
            line: 351,
            column: 91
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 351,
            column: 59
          },
          end: {
            line: 351,
            column: 72
          }
        }, {
          start: {
            line: 351,
            column: 76
          },
          end: {
            line: 351,
            column: 91
          }
        }],
        line: 351
      },
      "40": {
        loc: {
          start: {
            line: 356,
            column: 55
          },
          end: {
            line: 356,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 356,
            column: 55
          },
          end: {
            line: 356,
            column: 68
          }
        }, {
          start: {
            line: 356,
            column: 72
          },
          end: {
            line: 356,
            column: 87
          }
        }],
        line: 356
      },
      "41": {
        loc: {
          start: {
            line: 360,
            column: 52
          },
          end: {
            line: 360,
            column: 106
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 360,
            column: 77
          },
          end: {
            line: 360,
            column: 90
          }
        }, {
          start: {
            line: 360,
            column: 93
          },
          end: {
            line: 360,
            column: 106
          }
        }],
        line: 360
      },
      "42": {
        loc: {
          start: {
            line: 368,
            column: 4
          },
          end: {
            line: 380,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 368,
            column: 4
          },
          end: {
            line: 380,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 368
      },
      "43": {
        loc: {
          start: {
            line: 370,
            column: 12
          },
          end: {
            line: 370,
            column: 71
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 370,
            column: 53
          },
          end: {
            line: 370,
            column: 59
          }
        }, {
          start: {
            line: 370,
            column: 62
          },
          end: {
            line: 370,
            column: 71
          }
        }],
        line: 370
      },
      "44": {
        loc: {
          start: {
            line: 370,
            column: 12
          },
          end: {
            line: 370,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 370,
            column: 12
          },
          end: {
            line: 370,
            column: 28
          }
        }, {
          start: {
            line: 370,
            column: 32
          },
          end: {
            line: 370,
            column: 50
          }
        }],
        line: 370
      },
      "45": {
        loc: {
          start: {
            line: 373,
            column: 12
          },
          end: {
            line: 373,
            column: 80
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 373,
            column: 59
          },
          end: {
            line: 373,
            column: 65
          }
        }, {
          start: {
            line: 373,
            column: 68
          },
          end: {
            line: 373,
            column: 80
          }
        }],
        line: 373
      },
      "46": {
        loc: {
          start: {
            line: 373,
            column: 12
          },
          end: {
            line: 373,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 373,
            column: 12
          },
          end: {
            line: 373,
            column: 31
          }
        }, {
          start: {
            line: 373,
            column: 35
          },
          end: {
            line: 373,
            column: 56
          }
        }],
        line: 373
      },
      "47": {
        loc: {
          start: {
            line: 377,
            column: 77
          },
          end: {
            line: 377,
            column: 131
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 377,
            column: 102
          },
          end: {
            line: 377,
            column: 115
          }
        }, {
          start: {
            line: 377,
            column: 118
          },
          end: {
            line: 377,
            column: 131
          }
        }],
        line: 377
      },
      "48": {
        loc: {
          start: {
            line: 396,
            column: 8
          },
          end: {
            line: 401,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 396,
            column: 8
          },
          end: {
            line: 401,
            column: 9
          }
        }, {
          start: {
            line: 399,
            column: 13
          },
          end: {
            line: 401,
            column: 9
          }
        }],
        line: 396
      },
      "49": {
        loc: {
          start: {
            line: 396,
            column: 12
          },
          end: {
            line: 396,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 396,
            column: 12
          },
          end: {
            line: 396,
            column: 25
          }
        }, {
          start: {
            line: 396,
            column: 29
          },
          end: {
            line: 396,
            column: 64
          }
        }],
        line: 396
      },
      "50": {
        loc: {
          start: {
            line: 410,
            column: 29
          },
          end: {
            line: 410,
            column: 92
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 410,
            column: 54
          },
          end: {
            line: 410,
            column: 59
          }
        }, {
          start: {
            line: 410,
            column: 62
          },
          end: {
            line: 410,
            column: 92
          }
        }],
        line: 410
      },
      "51": {
        loc: {
          start: {
            line: 430,
            column: 12
          },
          end: {
            line: 431,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 430,
            column: 12
          },
          end: {
            line: 431,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 430
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/dikshantvashistha/PrepBettr/lib/voice/azure-adapters-legacy-backup.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/dikshantvashistha/PrepBettr/lib/voice/azure-adapters-legacy-backup.ts"],
      sourcesContent: ["/**\n * Legacy voice types for API compatibility\n * \n * NOTE: This file only provides types for backward compatibility with existing API routes.\n * The actual voice processing is now handled by Azure AI Foundry Live Voice API.\n * Client-side audio functions have been removed and consolidated into the new Agent component.\n */\n\n// Stub functions for legacy backup compatibility\nconst withRetry = async (fn: () => Promise<any>, retries?: number, name?: string) => {\n  try {\n    return await fn();\n  } catch (error) {\n    throw error; // Simplified - no retry logic in stub\n  }\n};\n\nconst logger = {\n  api: {\n    request: (path: string, method: string, data?: any) => console.log(`[LEGACY STUB] ${method} ${path}`, data),\n    response: (path: string, status: number, data?: any) => console.log(`[LEGACY STUB] Response ${status}`, data)\n  },\n  warn: (msg: string, data?: any) => console.warn(`[LEGACY STUB] ${msg}`, data),\n  error: (msg: string, error: any, data?: any) => console.error(`[LEGACY STUB] ${msg}`, error, data),\n  audio: {\n    speak: (msg: string, data?: any) => console.log(`[LEGACY STUB] ${msg}`, data)\n  }\n};\n\nconst handleApiError = (response: Response, operation: string) => {\n  return new Error(`[LEGACY STUB] ${operation} failed with status ${response.status}`);\n};\n\nconst sanitizeInterviewText = (text: string) => text; // No-op for stub\nconst validateAudioBuffer = (data: any) => true; // Always valid for stub  \nconst playAudioBuffer = async (data: any) => { /* No-op stub */ };\n\n// Stub types for legacy compatibility\ninterface SavedMessage {\n  role: 'user' | 'assistant';\n  content: string;\n}\n\nexport interface InterviewContext {\n  userName: string;\n  questions?: string[];\n  type: string;\n  userId: string;\n  interviewId?: string;\n  feedbackId?: string;\n  resumeInfo?: {\n    hasResume: boolean;\n    candidateName?: string;\n    summary?: string;\n    skills?: string;\n    experience?: string;\n    education?: string;\n    yearsOfExperience?: number;\n  };\n}\n\nexport interface ConversationResponse {\n  message: string;\n  questionNumber?: number;\n  isComplete?: boolean;\n  hasAudio?: boolean;\n  audioData?: number[] | Uint8Array;\n}\n\n/**\n * Speech-to-Text adapter with retry logic\n */\nexport const speechToText = async (audioBlob: Blob): Promise<string> => {\n  return withRetry(async () => {\n    const formData = new FormData();\n    formData.append('audio', audioBlob, 'recording.wav');\n\n    logger.api.request('/api/voice/stream', 'POST', { \n      size: audioBlob.size,\n      type: audioBlob.type \n    });\n    \n    const response = await fetch('/api/voice/stream', {\n      method: 'POST',\n      body: formData,\n    });\n\n    if (!response.ok) {\n      throw handleApiError(response, 'Speech-to-text');\n    }\n\n    const result = await response.json();\n    logger.api.response('/api/voice/stream', response.status, { \n      textLength: result.text?.length \n    });\n\n    if (result.text === undefined) {\n      throw new Error('Speech-to-text response missing text field');\n    }\n\n    return result.text;\n  }, 3, 'Speech-to-text');\n};\n\n/**\n * Start conversation adapter\n */\nexport const startConversation = async (\n  interviewContext: InterviewContext\n): Promise<ConversationResponse> => {\n  logger.api.request('/api/voice/conversation', 'POST', { action: 'start' });\n\n  const response = await fetch('/api/voice/conversation', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      action: \"start\",\n      interviewContext\n    }),\n  });\n\n  if (!response.ok) {\n    throw handleApiError(response, 'Start conversation');\n  }\n\n  const data = await response.json();\n  logger.api.response('/api/voice/conversation', response.status, { \n    hasAudio: !!data.hasAudio,\n    messageLength: data.message?.length \n  });\n\n  return data;\n};\n\n/**\n * Process conversation turn adapter  \n */\nexport const processConversation = async (\n  userTranscript: string\n): Promise<ConversationResponse> => {\n  console.log('\uD83E\uDDEA [PROCESS CONVERSATION] Starting with transcript:', {\n    length: userTranscript.length,\n    preview: userTranscript.substring(0, 100) + '...'\n  });\n  \n  logger.api.request('/api/voice/conversation', 'POST', { \n    action: 'process',\n    transcriptLength: userTranscript.length \n  });\n\n  try {\n    console.log('\uD83C\uDF0D [PROCESS CONVERSATION] Making fetch request to /api/voice/conversation');\n    \n    const response = await fetch('/api/voice/conversation', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        action: \"process\",\n        userTranscript,\n      }),\n    });\n\n    console.log('\uD83C\uDF0D [PROCESS CONVERSATION] Got response:', {\n      status: response.status,\n      statusText: response.statusText,\n      ok: response.ok\n    });\n\n    if (!response.ok) {\n      const errorText = await response.text();\n      console.error('\u274C [PROCESS CONVERSATION] API error response:', {\n        status: response.status,\n        statusText: response.statusText,\n        errorBody: errorText.substring(0, 500) + '...'\n      });\n      throw handleApiError(response, 'Process conversation');\n    }\n\n    const data = await response.json();\n    console.log('\u2705 [PROCESS CONVERSATION] Successfully parsed JSON response:', {\n      hasMessage: !!data.message,\n      messageLength: data.message?.length,\n      questionNumber: data.questionNumber,\n      isComplete: data.isComplete,\n      hasAudio: data.hasAudio\n    });\n    \n    logger.api.response('/api/voice/conversation', response.status, {\n      hasAudio: !!data.hasAudio,\n      messageLength: data.message?.length,\n      questionNumber: data.questionNumber,\n      isComplete: data.isComplete\n    });\n\n    return data;\n  } catch (error) {\n    console.error('\u274C [PROCESS CONVERSATION] Network or parsing error:', {\n      errorType: error instanceof Error ? error.constructor.name : typeof error,\n      errorMessage: error instanceof Error ? error.message : String(error),\n      stack: error instanceof Error ? error.stack : undefined\n    });\n    throw error;\n  }\n};\n\n/**\n * End conversation adapter\n */\nexport const endConversation = async (): Promise<{ summary?: string }> => {\n  try {\n    logger.api.request('/api/voice/conversation', 'POST', { action: 'summary' });\n\n    const response = await fetch('/api/voice/conversation', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        action: \"summary\",\n      }),\n    });\n\n    if (response.ok) {\n      const data = await response.json();\n      logger.api.response('/api/voice/conversation', response.status, {\n        hasSummary: !!data.summary\n      });\n      return data;\n    } else {\n      logger.warn('Failed to generate interview summary', { status: response.status });\n      return {};\n    }\n  } catch (error) {\n    logger.warn('Error generating interview summary', { error: error instanceof Error ? error.message : String(error) });\n    return {};\n  }\n};\n\n/**\n * Text-to-Speech adapter with streaming support\n */\nexport const textToSpeech = async (\n  text: string, \n  options?: { streaming?: boolean; onChunk?: (chunk: ArrayBuffer) => void }\n): Promise<Blob> => {\n  return withRetry(async () => {\n    // Sanitize text to remove Markdown formatting before TTS\n    const sanitizedText = sanitizeInterviewText(text);\n    \n    logger.api.request('/api/voice/tts', 'POST', { \n      originalLength: text.length,\n      sanitizedLength: sanitizedText.length,\n      hadMarkdown: text !== sanitizedText,\n      streaming: options?.streaming || false\n    });\n\n    const response = await fetch('/api/voice/tts', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ \n        text: sanitizedText,\n        streaming: options?.streaming || false \n      }),\n    });\n\n    if (!response.ok) {\n      throw handleApiError(response, 'Text-to-speech');\n    }\n\n    // Handle streaming response if requested\n    if (options?.streaming && options.onChunk && response.body) {\n      const reader = response.body.getReader();\n      const chunks: Uint8Array[] = [];\n      \n      try {\n        while (true) {\n          const { done, value } = await reader.read();\n          if (done) break;\n          \n          chunks.push(value);\n          \n          // Convert chunk to ArrayBuffer and send to callback\n          if (options.onChunk) {\n            options.onChunk(value.buffer.slice(value.byteOffset, value.byteOffset + value.byteLength));\n          }\n        }\n        \n        // Combine all chunks into final blob\n        const totalLength = chunks.reduce((sum, chunk) => sum + chunk.length, 0);\n        const combined = new Uint8Array(totalLength);\n        let offset = 0;\n        chunks.forEach(chunk => {\n          combined.set(chunk, offset);\n          offset += chunk.length;\n        });\n        \n        const audioBlob = new Blob([combined], { type: 'audio/wav' });\n        logger.api.response('/api/voice/tts', response.status, { \n          blobSize: audioBlob.size,\n          chunksReceived: chunks.length,\n          streaming: true\n        });\n        \n        return audioBlob;\n        \n      } finally {\n        reader.releaseLock();\n      }\n    } else {\n      // Standard non-streaming response\n      const audioBlob = await response.blob();\n      logger.api.response('/api/voice/tts', response.status, { \n        blobSize: audioBlob.size,\n        streaming: false \n      });\n      \n      return audioBlob;\n    }\n  }, 2, 'Text-to-speech');\n};\n\n/**\n * Play AI response using real Azure TTS with fallback handling\n */\nexport const playAIResponse = async (\n  text: string,\n  onStart?: () => void,\n  onComplete?: () => void,\n  onError?: (error: Error) => void\n): Promise<void> => {\n  console.log('\uD83C\uDFAF [AZURE TTS] playAIResponse called', { \n    textLength: text.length, \n    hasOnStart: !!onStart,\n    hasOnComplete: !!onComplete \n  });\n  \n  try {\n    // Call onStart callback\n    if (onStart) {\n      console.log('\uD83C\uDFAF [AZURE TTS] Calling onStart callback');\n      onStart();\n    }\n    \n    logger.audio.speak('Playing AI response via Azure TTS', { textLength: text.length });\n    \n    // Get audio from Azure TTS\n    const audioBlob = await textToSpeech(text);\n    \n    if (!audioBlob || audioBlob.size === 0) {\n      throw new Error('Empty audio response from TTS service');\n    }\n    \n    console.log('\uD83D\uDD0A [AZURE TTS] Playing audio', { \n      text: text.substring(0, 150) + (text.length > 150 ? '...' : ''),\n      audioSize: audioBlob.size\n    });\n    \n    // Play the audio using Web Audio API\n    await playAudioFromBlob(audioBlob);\n    \n    console.log('\uD83D\uDD0A [AZURE TTS] Audio playback completed');\n    logger.audio.speak('Azure TTS playback completed');\n    \n    // Call onComplete callback\n    if (onComplete) {\n      console.log('\uD83C\uDFAF [AZURE TTS] Calling onComplete callback');\n      onComplete();\n    }\n    \n    console.log('\uD83C\uDFAF [AZURE TTS] playAIResponse finished successfully');\n  } catch (error) {\n    console.warn('\uD83D\uDD0A [AZURE TTS] TTS service unavailable, using mock audio');\n    const audioError = error instanceof Error ? error : new Error('TTS failed');\n    logger.warn('Azure TTS not available, using fallback audio simulation');\n    \n    // Fallback to mock TTS timing simulation\n    try {\n      // Call onStart if not already called\n      if (onStart) {\n        onStart();\n      }\n      \n      const wordsCount = text.split(' ').length;\n      const readingDuration = Math.max(2500, wordsCount * 120); // 120ms per word, minimum 2.5 seconds\n      \n      console.log('\uD83D\uDD0A [FALLBACK] Using audio simulation', { \n        wordsCount,\n        duration: readingDuration + 'ms'\n      });\n      \n      await new Promise(resolve => setTimeout(resolve, readingDuration));\n      \n      if (onComplete) {\n        onComplete();\n      }\n      \n      console.log('\uD83D\uDD0A [FALLBACK] Audio simulation completed');\n    } catch (fallbackError) {\n      logger.warn('Fallback audio simulation failed, continuing anyway');\n      // Always call onComplete to prevent conversation from hanging\n      if (onComplete) {\n        onComplete();\n      }\n    }\n  }\n};\n\n/**\n * Play audio from blob using Web Audio API\n */\nconst playAudioFromBlob = async (audioBlob: Blob): Promise<void> => {\n  return new Promise((resolve, reject) => {\n    try {\n      // Create audio element for playback\n      const audio = new Audio();\n      const audioUrl = URL.createObjectURL(audioBlob);\n      \n      audio.src = audioUrl;\n      audio.preload = 'auto';\n      \n      // Set up event listeners\n      audio.addEventListener('ended', () => {\n        URL.revokeObjectURL(audioUrl);\n        resolve();\n      });\n      \n      audio.addEventListener('error', (error) => {\n        URL.revokeObjectURL(audioUrl);\n        reject(new Error(`Audio playback failed: ${error.message || 'Unknown error'}`));\n      });\n      \n      // Start playback\n      audio.play().catch((error) => {\n        URL.revokeObjectURL(audioUrl);\n        reject(new Error(`Audio play failed: ${error.message || 'Unknown error'}`));\n      });\n      \n    } catch (error) {\n      reject(new Error(`Audio setup failed: ${error instanceof Error ? error.message : String(error)}`));\n    }\n  });\n};\n\n/**\n * Play direct audio buffer with TTS fallback\n */\nexport const playDirectAudioWithFallback = async (\n  audioData: number[] | Uint8Array,\n  fallbackText: string,\n  onStart?: () => void,\n  onComplete?: () => void,\n  onError?: (error: Error) => void\n): Promise<void> => {\n  if (validateAudioBuffer(audioData)) {\n    try {\n      onStart?.();\n      await playAudioBuffer(audioData);\n      logger.audio.speak('Direct audio playback completed');\n      onComplete?.();\n      return;\n    } catch (error) {\n      logger.warn('Direct audio failed, falling back to TTS', { error: error instanceof Error ? error.message : String(error) });\n      // Fall through to TTS fallback\n    }\n  }\n\n  // TTS fallback\n  await playAIResponse(fallbackText, onStart, onComplete, onError);\n};\n\n/**\n * Combined conversation processing with audio playback\n */\nexport const processAndPlayResponse = async (\n  userTranscript: string,\n  onStart?: () => void,\n  onComplete?: () => void,\n  onError?: (error: Error) => void\n): Promise<{\n  userMessage: SavedMessage;\n  aiMessage: SavedMessage;\n  questionNumber?: number;\n  isComplete?: boolean;\n}> => {\n  try {\n    // Process conversation\n    const data = await processConversation(userTranscript);\n    \n    // Create message objects\n    const userMessage: SavedMessage = { role: \"user\", content: userTranscript };\n    const aiMessage: SavedMessage = { role: \"assistant\", content: data.message };\n\n    // Play response audio\n    if (data.hasAudio && validateAudioBuffer(data.audioData)) {\n      await playDirectAudioWithFallback(\n        data.audioData!,\n        data.message,\n        onStart,\n        onComplete,\n        onError\n      );\n    } else {\n      await playAIResponse(data.message, onStart, onComplete, onError);\n    }\n\n    return {\n      userMessage,\n      aiMessage,\n      questionNumber: data.questionNumber,\n      isComplete: data.isComplete\n    };\n  } catch (error) {\n    const processError = error instanceof Error ? error : new Error('Processing failed');\n    logger.error('Conversation processing failed', processError, {\n      userTranscript: userTranscript.substring(0, 100),\n      errorType: processError.name,\n      errorMessage: processError.message\n    });\n    \n    // Don't throw the error, instead provide fallback behavior\n    console.warn('\uD83D\uDD04 Conversation processing failed, attempting graceful recovery');\n    \n    // Create fallback response to prevent conversation from breaking\n    const fallbackUserMessage: SavedMessage = { role: \"user\", content: userTranscript };\n    const fallbackAIMessage: SavedMessage = { \n      role: \"assistant\", \n      content: \"I apologize, I'm having some technical difficulties. Could you please repeat that or try rephrasing your response?\" \n    };\n    \n    // Try to play the fallback response\n    try {\n      await playAIResponse(fallbackAIMessage.content, onStart, onComplete, onError);\n    } catch (audioError) {\n      console.warn('\uD83D\uDD0A Fallback audio also failed, calling completion anyway');\n      if (onComplete) onComplete();\n    }\n    \n    return {\n      userMessage: fallbackUserMessage,\n      aiMessage: fallbackAIMessage,\n      questionNumber: undefined,\n      isComplete: false\n    };\n  }\n};\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d71b530b67f901312465cf811df3c70ca378b439"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_22e8bkvwiy = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_22e8bkvwiy();
cov_22e8bkvwiy().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_22e8bkvwiy().s[1]++;
exports.processAndPlayResponse = exports.playDirectAudioWithFallback = exports.playAIResponse = exports.textToSpeech = exports.endConversation = exports.processConversation = exports.startConversation = exports.speechToText = void 0;
// Stub functions for legacy backup compatibility
/* istanbul ignore next */
cov_22e8bkvwiy().s[2]++;
const withRetry = async (fn, retries, name) => {
  /* istanbul ignore next */
  cov_22e8bkvwiy().f[0]++;
  cov_22e8bkvwiy().s[3]++;
  try {
    /* istanbul ignore next */
    cov_22e8bkvwiy().s[4]++;
    return await fn();
  } catch (error) {
    /* istanbul ignore next */
    cov_22e8bkvwiy().s[5]++;
    throw error; // Simplified - no retry logic in stub
  }
};
const logger =
/* istanbul ignore next */
(cov_22e8bkvwiy().s[6]++, {
  api: {
    request: (path, method, data) => {
      /* istanbul ignore next */
      cov_22e8bkvwiy().f[1]++;
      cov_22e8bkvwiy().s[7]++;
      return console.log(`[LEGACY STUB] ${method} ${path}`, data);
    },
    response: (path, status, data) => {
      /* istanbul ignore next */
      cov_22e8bkvwiy().f[2]++;
      cov_22e8bkvwiy().s[8]++;
      return console.log(`[LEGACY STUB] Response ${status}`, data);
    }
  },
  warn: (msg, data) => {
    /* istanbul ignore next */
    cov_22e8bkvwiy().f[3]++;
    cov_22e8bkvwiy().s[9]++;
    return console.warn(`[LEGACY STUB] ${msg}`, data);
  },
  error: (msg, error, data) => {
    /* istanbul ignore next */
    cov_22e8bkvwiy().f[4]++;
    cov_22e8bkvwiy().s[10]++;
    return console.error(`[LEGACY STUB] ${msg}`, error, data);
  },
  audio: {
    speak: (msg, data) => {
      /* istanbul ignore next */
      cov_22e8bkvwiy().f[5]++;
      cov_22e8bkvwiy().s[11]++;
      return console.log(`[LEGACY STUB] ${msg}`, data);
    }
  }
});
/* istanbul ignore next */
cov_22e8bkvwiy().s[12]++;
const handleApiError = (response, operation) => {
  /* istanbul ignore next */
  cov_22e8bkvwiy().f[6]++;
  cov_22e8bkvwiy().s[13]++;
  return new Error(`[LEGACY STUB] ${operation} failed with status ${response.status}`);
};
/* istanbul ignore next */
cov_22e8bkvwiy().s[14]++;
const sanitizeInterviewText = text => {
  /* istanbul ignore next */
  cov_22e8bkvwiy().f[7]++;
  cov_22e8bkvwiy().s[15]++;
  return text;
}; // No-op for stub
/* istanbul ignore next */
cov_22e8bkvwiy().s[16]++;
const validateAudioBuffer = data => {
  /* istanbul ignore next */
  cov_22e8bkvwiy().f[8]++;
  cov_22e8bkvwiy().s[17]++;
  return true;
}; // Always valid for stub  
/* istanbul ignore next */
cov_22e8bkvwiy().s[18]++;
const playAudioBuffer = async data => {
  /* istanbul ignore next */
  cov_22e8bkvwiy().f[9]++;
};
/**
 * Speech-to-Text adapter with retry logic
 */
/* istanbul ignore next */
cov_22e8bkvwiy().s[19]++;
const speechToText = async audioBlob => {
  /* istanbul ignore next */
  cov_22e8bkvwiy().f[10]++;
  cov_22e8bkvwiy().s[20]++;
  return withRetry(async () => {
    /* istanbul ignore next */
    cov_22e8bkvwiy().f[11]++;
    var _a;
    const formData =
    /* istanbul ignore next */
    (cov_22e8bkvwiy().s[21]++, new FormData());
    /* istanbul ignore next */
    cov_22e8bkvwiy().s[22]++;
    formData.append('audio', audioBlob, 'recording.wav');
    /* istanbul ignore next */
    cov_22e8bkvwiy().s[23]++;
    logger.api.request('/api/voice/stream', 'POST', {
      size: audioBlob.size,
      type: audioBlob.type
    });
    const response =
    /* istanbul ignore next */
    (cov_22e8bkvwiy().s[24]++, await fetch('/api/voice/stream', {
      method: 'POST',
      body: formData
    }));
    /* istanbul ignore next */
    cov_22e8bkvwiy().s[25]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_22e8bkvwiy().b[0][0]++;
      cov_22e8bkvwiy().s[26]++;
      throw handleApiError(response, 'Speech-to-text');
    } else
    /* istanbul ignore next */
    {
      cov_22e8bkvwiy().b[0][1]++;
    }
    const result =
    /* istanbul ignore next */
    (cov_22e8bkvwiy().s[27]++, await response.json());
    /* istanbul ignore next */
    cov_22e8bkvwiy().s[28]++;
    logger.api.response('/api/voice/stream', response.status, {
      textLength:
      /* istanbul ignore next */
      (cov_22e8bkvwiy().b[2][0]++, (_a = result.text) === null) ||
      /* istanbul ignore next */
      (cov_22e8bkvwiy().b[2][1]++, _a === void 0) ?
      /* istanbul ignore next */
      (cov_22e8bkvwiy().b[1][0]++, void 0) :
      /* istanbul ignore next */
      (cov_22e8bkvwiy().b[1][1]++, _a.length)
    });
    /* istanbul ignore next */
    cov_22e8bkvwiy().s[29]++;
    if (result.text === undefined) {
      /* istanbul ignore next */
      cov_22e8bkvwiy().b[3][0]++;
      cov_22e8bkvwiy().s[30]++;
      throw new Error('Speech-to-text response missing text field');
    } else
    /* istanbul ignore next */
    {
      cov_22e8bkvwiy().b[3][1]++;
    }
    cov_22e8bkvwiy().s[31]++;
    return result.text;
  }, 3, 'Speech-to-text');
};
/* istanbul ignore next */
cov_22e8bkvwiy().s[32]++;
exports.speechToText = speechToText;
/**
 * Start conversation adapter
 */
/* istanbul ignore next */
cov_22e8bkvwiy().s[33]++;
const startConversation = async interviewContext => {
  /* istanbul ignore next */
  cov_22e8bkvwiy().f[12]++;
  var _a;
  /* istanbul ignore next */
  cov_22e8bkvwiy().s[34]++;
  logger.api.request('/api/voice/conversation', 'POST', {
    action: 'start'
  });
  const response =
  /* istanbul ignore next */
  (cov_22e8bkvwiy().s[35]++, await fetch('/api/voice/conversation', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json'
    },
    body: JSON.stringify({
      action: "start",
      interviewContext
    })
  }));
  /* istanbul ignore next */
  cov_22e8bkvwiy().s[36]++;
  if (!response.ok) {
    /* istanbul ignore next */
    cov_22e8bkvwiy().b[4][0]++;
    cov_22e8bkvwiy().s[37]++;
    throw handleApiError(response, 'Start conversation');
  } else
  /* istanbul ignore next */
  {
    cov_22e8bkvwiy().b[4][1]++;
  }
  const data =
  /* istanbul ignore next */
  (cov_22e8bkvwiy().s[38]++, await response.json());
  /* istanbul ignore next */
  cov_22e8bkvwiy().s[39]++;
  logger.api.response('/api/voice/conversation', response.status, {
    hasAudio: !!data.hasAudio,
    messageLength:
    /* istanbul ignore next */
    (cov_22e8bkvwiy().b[6][0]++, (_a = data.message) === null) ||
    /* istanbul ignore next */
    (cov_22e8bkvwiy().b[6][1]++, _a === void 0) ?
    /* istanbul ignore next */
    (cov_22e8bkvwiy().b[5][0]++, void 0) :
    /* istanbul ignore next */
    (cov_22e8bkvwiy().b[5][1]++, _a.length)
  });
  /* istanbul ignore next */
  cov_22e8bkvwiy().s[40]++;
  return data;
};
/* istanbul ignore next */
cov_22e8bkvwiy().s[41]++;
exports.startConversation = startConversation;
/**
 * Process conversation turn adapter
 */
/* istanbul ignore next */
cov_22e8bkvwiy().s[42]++;
const processConversation = async userTranscript => {
  /* istanbul ignore next */
  cov_22e8bkvwiy().f[13]++;
  var _a, _b;
  /* istanbul ignore next */
  cov_22e8bkvwiy().s[43]++;
  console.log('🧪 [PROCESS CONVERSATION] Starting with transcript:', {
    length: userTranscript.length,
    preview: userTranscript.substring(0, 100) + '...'
  });
  /* istanbul ignore next */
  cov_22e8bkvwiy().s[44]++;
  logger.api.request('/api/voice/conversation', 'POST', {
    action: 'process',
    transcriptLength: userTranscript.length
  });
  /* istanbul ignore next */
  cov_22e8bkvwiy().s[45]++;
  try {
    /* istanbul ignore next */
    cov_22e8bkvwiy().s[46]++;
    console.log('🌍 [PROCESS CONVERSATION] Making fetch request to /api/voice/conversation');
    const response =
    /* istanbul ignore next */
    (cov_22e8bkvwiy().s[47]++, await fetch('/api/voice/conversation', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        action: "process",
        userTranscript
      })
    }));
    /* istanbul ignore next */
    cov_22e8bkvwiy().s[48]++;
    console.log('🌍 [PROCESS CONVERSATION] Got response:', {
      status: response.status,
      statusText: response.statusText,
      ok: response.ok
    });
    /* istanbul ignore next */
    cov_22e8bkvwiy().s[49]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_22e8bkvwiy().b[7][0]++;
      const errorText =
      /* istanbul ignore next */
      (cov_22e8bkvwiy().s[50]++, await response.text());
      /* istanbul ignore next */
      cov_22e8bkvwiy().s[51]++;
      console.error('❌ [PROCESS CONVERSATION] API error response:', {
        status: response.status,
        statusText: response.statusText,
        errorBody: errorText.substring(0, 500) + '...'
      });
      /* istanbul ignore next */
      cov_22e8bkvwiy().s[52]++;
      throw handleApiError(response, 'Process conversation');
    } else
    /* istanbul ignore next */
    {
      cov_22e8bkvwiy().b[7][1]++;
    }
    const data =
    /* istanbul ignore next */
    (cov_22e8bkvwiy().s[53]++, await response.json());
    /* istanbul ignore next */
    cov_22e8bkvwiy().s[54]++;
    console.log('✅ [PROCESS CONVERSATION] Successfully parsed JSON response:', {
      hasMessage: !!data.message,
      messageLength:
      /* istanbul ignore next */
      (cov_22e8bkvwiy().b[9][0]++, (_a = data.message) === null) ||
      /* istanbul ignore next */
      (cov_22e8bkvwiy().b[9][1]++, _a === void 0) ?
      /* istanbul ignore next */
      (cov_22e8bkvwiy().b[8][0]++, void 0) :
      /* istanbul ignore next */
      (cov_22e8bkvwiy().b[8][1]++, _a.length),
      questionNumber: data.questionNumber,
      isComplete: data.isComplete,
      hasAudio: data.hasAudio
    });
    /* istanbul ignore next */
    cov_22e8bkvwiy().s[55]++;
    logger.api.response('/api/voice/conversation', response.status, {
      hasAudio: !!data.hasAudio,
      messageLength:
      /* istanbul ignore next */
      (cov_22e8bkvwiy().b[11][0]++, (_b = data.message) === null) ||
      /* istanbul ignore next */
      (cov_22e8bkvwiy().b[11][1]++, _b === void 0) ?
      /* istanbul ignore next */
      (cov_22e8bkvwiy().b[10][0]++, void 0) :
      /* istanbul ignore next */
      (cov_22e8bkvwiy().b[10][1]++, _b.length),
      questionNumber: data.questionNumber,
      isComplete: data.isComplete
    });
    /* istanbul ignore next */
    cov_22e8bkvwiy().s[56]++;
    return data;
  } catch (error) {
    /* istanbul ignore next */
    cov_22e8bkvwiy().s[57]++;
    console.error('❌ [PROCESS CONVERSATION] Network or parsing error:', {
      errorType: error instanceof Error ?
      /* istanbul ignore next */
      (cov_22e8bkvwiy().b[12][0]++, error.constructor.name) :
      /* istanbul ignore next */
      (cov_22e8bkvwiy().b[12][1]++, typeof error),
      errorMessage: error instanceof Error ?
      /* istanbul ignore next */
      (cov_22e8bkvwiy().b[13][0]++, error.message) :
      /* istanbul ignore next */
      (cov_22e8bkvwiy().b[13][1]++, String(error)),
      stack: error instanceof Error ?
      /* istanbul ignore next */
      (cov_22e8bkvwiy().b[14][0]++, error.stack) :
      /* istanbul ignore next */
      (cov_22e8bkvwiy().b[14][1]++, undefined)
    });
    /* istanbul ignore next */
    cov_22e8bkvwiy().s[58]++;
    throw error;
  }
};
/* istanbul ignore next */
cov_22e8bkvwiy().s[59]++;
exports.processConversation = processConversation;
/**
 * End conversation adapter
 */
/* istanbul ignore next */
cov_22e8bkvwiy().s[60]++;
const endConversation = async () => {
  /* istanbul ignore next */
  cov_22e8bkvwiy().f[14]++;
  cov_22e8bkvwiy().s[61]++;
  try {
    /* istanbul ignore next */
    cov_22e8bkvwiy().s[62]++;
    logger.api.request('/api/voice/conversation', 'POST', {
      action: 'summary'
    });
    const response =
    /* istanbul ignore next */
    (cov_22e8bkvwiy().s[63]++, await fetch('/api/voice/conversation', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        action: "summary"
      })
    }));
    /* istanbul ignore next */
    cov_22e8bkvwiy().s[64]++;
    if (response.ok) {
      /* istanbul ignore next */
      cov_22e8bkvwiy().b[15][0]++;
      const data =
      /* istanbul ignore next */
      (cov_22e8bkvwiy().s[65]++, await response.json());
      /* istanbul ignore next */
      cov_22e8bkvwiy().s[66]++;
      logger.api.response('/api/voice/conversation', response.status, {
        hasSummary: !!data.summary
      });
      /* istanbul ignore next */
      cov_22e8bkvwiy().s[67]++;
      return data;
    } else {
      /* istanbul ignore next */
      cov_22e8bkvwiy().b[15][1]++;
      cov_22e8bkvwiy().s[68]++;
      logger.warn('Failed to generate interview summary', {
        status: response.status
      });
      /* istanbul ignore next */
      cov_22e8bkvwiy().s[69]++;
      return {};
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_22e8bkvwiy().s[70]++;
    logger.warn('Error generating interview summary', {
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_22e8bkvwiy().b[16][0]++, error.message) :
      /* istanbul ignore next */
      (cov_22e8bkvwiy().b[16][1]++, String(error))
    });
    /* istanbul ignore next */
    cov_22e8bkvwiy().s[71]++;
    return {};
  }
};
/* istanbul ignore next */
cov_22e8bkvwiy().s[72]++;
exports.endConversation = endConversation;
/**
 * Text-to-Speech adapter with streaming support
 */
/* istanbul ignore next */
cov_22e8bkvwiy().s[73]++;
const textToSpeech = async (text, options) => {
  /* istanbul ignore next */
  cov_22e8bkvwiy().f[15]++;
  cov_22e8bkvwiy().s[74]++;
  return withRetry(async () => {
    /* istanbul ignore next */
    cov_22e8bkvwiy().f[16]++;
    // Sanitize text to remove Markdown formatting before TTS
    const sanitizedText =
    /* istanbul ignore next */
    (cov_22e8bkvwiy().s[75]++, sanitizeInterviewText(text));
    /* istanbul ignore next */
    cov_22e8bkvwiy().s[76]++;
    logger.api.request('/api/voice/tts', 'POST', {
      originalLength: text.length,
      sanitizedLength: sanitizedText.length,
      hadMarkdown: text !== sanitizedText,
      streaming:
      /* istanbul ignore next */
      (cov_22e8bkvwiy().b[17][0]++,
      /* istanbul ignore next */
      (cov_22e8bkvwiy().b[19][0]++, options === null) ||
      /* istanbul ignore next */
      (cov_22e8bkvwiy().b[19][1]++, options === void 0) ?
      /* istanbul ignore next */
      (cov_22e8bkvwiy().b[18][0]++, void 0) :
      /* istanbul ignore next */
      (cov_22e8bkvwiy().b[18][1]++, options.streaming)) ||
      /* istanbul ignore next */
      (cov_22e8bkvwiy().b[17][1]++, false)
    });
    const response =
    /* istanbul ignore next */
    (cov_22e8bkvwiy().s[77]++, await fetch('/api/voice/tts', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        text: sanitizedText,
        streaming:
        /* istanbul ignore next */
        (cov_22e8bkvwiy().b[20][0]++,
        /* istanbul ignore next */
        (cov_22e8bkvwiy().b[22][0]++, options === null) ||
        /* istanbul ignore next */
        (cov_22e8bkvwiy().b[22][1]++, options === void 0) ?
        /* istanbul ignore next */
        (cov_22e8bkvwiy().b[21][0]++, void 0) :
        /* istanbul ignore next */
        (cov_22e8bkvwiy().b[21][1]++, options.streaming)) ||
        /* istanbul ignore next */
        (cov_22e8bkvwiy().b[20][1]++, false)
      })
    }));
    /* istanbul ignore next */
    cov_22e8bkvwiy().s[78]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_22e8bkvwiy().b[23][0]++;
      cov_22e8bkvwiy().s[79]++;
      throw handleApiError(response, 'Text-to-speech');
    } else
    /* istanbul ignore next */
    {
      cov_22e8bkvwiy().b[23][1]++;
    }
    // Handle streaming response if requested
    cov_22e8bkvwiy().s[80]++;
    if (
    /* istanbul ignore next */
    (cov_22e8bkvwiy().b[25][0]++,
    /* istanbul ignore next */
    (cov_22e8bkvwiy().b[27][0]++, options === null) ||
    /* istanbul ignore next */
    (cov_22e8bkvwiy().b[27][1]++, options === void 0) ?
    /* istanbul ignore next */
    (cov_22e8bkvwiy().b[26][0]++, void 0) :
    /* istanbul ignore next */
    (cov_22e8bkvwiy().b[26][1]++, options.streaming)) &&
    /* istanbul ignore next */
    (cov_22e8bkvwiy().b[25][1]++, options.onChunk) &&
    /* istanbul ignore next */
    (cov_22e8bkvwiy().b[25][2]++, response.body)) {
      /* istanbul ignore next */
      cov_22e8bkvwiy().b[24][0]++;
      const reader =
      /* istanbul ignore next */
      (cov_22e8bkvwiy().s[81]++, response.body.getReader());
      const chunks =
      /* istanbul ignore next */
      (cov_22e8bkvwiy().s[82]++, []);
      /* istanbul ignore next */
      cov_22e8bkvwiy().s[83]++;
      try {
        /* istanbul ignore next */
        cov_22e8bkvwiy().s[84]++;
        while (true) {
          const {
            done,
            value
          } =
          /* istanbul ignore next */
          (cov_22e8bkvwiy().s[85]++, await reader.read());
          /* istanbul ignore next */
          cov_22e8bkvwiy().s[86]++;
          if (done) {
            /* istanbul ignore next */
            cov_22e8bkvwiy().b[28][0]++;
            cov_22e8bkvwiy().s[87]++;
            break;
          } else
          /* istanbul ignore next */
          {
            cov_22e8bkvwiy().b[28][1]++;
          }
          cov_22e8bkvwiy().s[88]++;
          chunks.push(value);
          // Convert chunk to ArrayBuffer and send to callback
          /* istanbul ignore next */
          cov_22e8bkvwiy().s[89]++;
          if (options.onChunk) {
            /* istanbul ignore next */
            cov_22e8bkvwiy().b[29][0]++;
            cov_22e8bkvwiy().s[90]++;
            options.onChunk(value.buffer.slice(value.byteOffset, value.byteOffset + value.byteLength));
          } else
          /* istanbul ignore next */
          {
            cov_22e8bkvwiy().b[29][1]++;
          }
        }
        // Combine all chunks into final blob
        const totalLength =
        /* istanbul ignore next */
        (cov_22e8bkvwiy().s[91]++, chunks.reduce((sum, chunk) => {
          /* istanbul ignore next */
          cov_22e8bkvwiy().f[17]++;
          cov_22e8bkvwiy().s[92]++;
          return sum + chunk.length;
        }, 0));
        const combined =
        /* istanbul ignore next */
        (cov_22e8bkvwiy().s[93]++, new Uint8Array(totalLength));
        let offset =
        /* istanbul ignore next */
        (cov_22e8bkvwiy().s[94]++, 0);
        /* istanbul ignore next */
        cov_22e8bkvwiy().s[95]++;
        chunks.forEach(chunk => {
          /* istanbul ignore next */
          cov_22e8bkvwiy().f[18]++;
          cov_22e8bkvwiy().s[96]++;
          combined.set(chunk, offset);
          /* istanbul ignore next */
          cov_22e8bkvwiy().s[97]++;
          offset += chunk.length;
        });
        const audioBlob =
        /* istanbul ignore next */
        (cov_22e8bkvwiy().s[98]++, new Blob([combined], {
          type: 'audio/wav'
        }));
        /* istanbul ignore next */
        cov_22e8bkvwiy().s[99]++;
        logger.api.response('/api/voice/tts', response.status, {
          blobSize: audioBlob.size,
          chunksReceived: chunks.length,
          streaming: true
        });
        /* istanbul ignore next */
        cov_22e8bkvwiy().s[100]++;
        return audioBlob;
      } finally {
        /* istanbul ignore next */
        cov_22e8bkvwiy().s[101]++;
        reader.releaseLock();
      }
    } else {
      /* istanbul ignore next */
      cov_22e8bkvwiy().b[24][1]++;
      // Standard non-streaming response
      const audioBlob =
      /* istanbul ignore next */
      (cov_22e8bkvwiy().s[102]++, await response.blob());
      /* istanbul ignore next */
      cov_22e8bkvwiy().s[103]++;
      logger.api.response('/api/voice/tts', response.status, {
        blobSize: audioBlob.size,
        streaming: false
      });
      /* istanbul ignore next */
      cov_22e8bkvwiy().s[104]++;
      return audioBlob;
    }
  }, 2, 'Text-to-speech');
};
/* istanbul ignore next */
cov_22e8bkvwiy().s[105]++;
exports.textToSpeech = textToSpeech;
/**
 * Play AI response using real Azure TTS with fallback handling
 */
/* istanbul ignore next */
cov_22e8bkvwiy().s[106]++;
const playAIResponse = async (text, onStart, onComplete, onError) => {
  /* istanbul ignore next */
  cov_22e8bkvwiy().f[19]++;
  cov_22e8bkvwiy().s[107]++;
  console.log('🎯 [AZURE TTS] playAIResponse called', {
    textLength: text.length,
    hasOnStart: !!onStart,
    hasOnComplete: !!onComplete
  });
  /* istanbul ignore next */
  cov_22e8bkvwiy().s[108]++;
  try {
    /* istanbul ignore next */
    cov_22e8bkvwiy().s[109]++;
    // Call onStart callback
    if (onStart) {
      /* istanbul ignore next */
      cov_22e8bkvwiy().b[30][0]++;
      cov_22e8bkvwiy().s[110]++;
      console.log('🎯 [AZURE TTS] Calling onStart callback');
      /* istanbul ignore next */
      cov_22e8bkvwiy().s[111]++;
      onStart();
    } else
    /* istanbul ignore next */
    {
      cov_22e8bkvwiy().b[30][1]++;
    }
    cov_22e8bkvwiy().s[112]++;
    logger.audio.speak('Playing AI response via Azure TTS', {
      textLength: text.length
    });
    // Get audio from Azure TTS
    const audioBlob =
    /* istanbul ignore next */
    (cov_22e8bkvwiy().s[113]++, await (0, exports.textToSpeech)(text));
    /* istanbul ignore next */
    cov_22e8bkvwiy().s[114]++;
    if (
    /* istanbul ignore next */
    (cov_22e8bkvwiy().b[32][0]++, !audioBlob) ||
    /* istanbul ignore next */
    (cov_22e8bkvwiy().b[32][1]++, audioBlob.size === 0)) {
      /* istanbul ignore next */
      cov_22e8bkvwiy().b[31][0]++;
      cov_22e8bkvwiy().s[115]++;
      throw new Error('Empty audio response from TTS service');
    } else
    /* istanbul ignore next */
    {
      cov_22e8bkvwiy().b[31][1]++;
    }
    cov_22e8bkvwiy().s[116]++;
    console.log('🔊 [AZURE TTS] Playing audio', {
      text: text.substring(0, 150) + (text.length > 150 ?
      /* istanbul ignore next */
      (cov_22e8bkvwiy().b[33][0]++, '...') :
      /* istanbul ignore next */
      (cov_22e8bkvwiy().b[33][1]++, '')),
      audioSize: audioBlob.size
    });
    // Play the audio using Web Audio API
    /* istanbul ignore next */
    cov_22e8bkvwiy().s[117]++;
    await playAudioFromBlob(audioBlob);
    /* istanbul ignore next */
    cov_22e8bkvwiy().s[118]++;
    console.log('🔊 [AZURE TTS] Audio playback completed');
    /* istanbul ignore next */
    cov_22e8bkvwiy().s[119]++;
    logger.audio.speak('Azure TTS playback completed');
    // Call onComplete callback
    /* istanbul ignore next */
    cov_22e8bkvwiy().s[120]++;
    if (onComplete) {
      /* istanbul ignore next */
      cov_22e8bkvwiy().b[34][0]++;
      cov_22e8bkvwiy().s[121]++;
      console.log('🎯 [AZURE TTS] Calling onComplete callback');
      /* istanbul ignore next */
      cov_22e8bkvwiy().s[122]++;
      onComplete();
    } else
    /* istanbul ignore next */
    {
      cov_22e8bkvwiy().b[34][1]++;
    }
    cov_22e8bkvwiy().s[123]++;
    console.log('🎯 [AZURE TTS] playAIResponse finished successfully');
  } catch (error) {
    /* istanbul ignore next */
    cov_22e8bkvwiy().s[124]++;
    console.warn('🔊 [AZURE TTS] TTS service unavailable, using mock audio');
    const audioError =
    /* istanbul ignore next */
    (cov_22e8bkvwiy().s[125]++, error instanceof Error ?
    /* istanbul ignore next */
    (cov_22e8bkvwiy().b[35][0]++, error) :
    /* istanbul ignore next */
    (cov_22e8bkvwiy().b[35][1]++, new Error('TTS failed')));
    /* istanbul ignore next */
    cov_22e8bkvwiy().s[126]++;
    logger.warn('Azure TTS not available, using fallback audio simulation');
    // Fallback to mock TTS timing simulation
    /* istanbul ignore next */
    cov_22e8bkvwiy().s[127]++;
    try {
      /* istanbul ignore next */
      cov_22e8bkvwiy().s[128]++;
      // Call onStart if not already called
      if (onStart) {
        /* istanbul ignore next */
        cov_22e8bkvwiy().b[36][0]++;
        cov_22e8bkvwiy().s[129]++;
        onStart();
      } else
      /* istanbul ignore next */
      {
        cov_22e8bkvwiy().b[36][1]++;
      }
      const wordsCount =
      /* istanbul ignore next */
      (cov_22e8bkvwiy().s[130]++, text.split(' ').length);
      const readingDuration =
      /* istanbul ignore next */
      (cov_22e8bkvwiy().s[131]++, Math.max(2500, wordsCount * 120)); // 120ms per word, minimum 2.5 seconds
      /* istanbul ignore next */
      cov_22e8bkvwiy().s[132]++;
      console.log('🔊 [FALLBACK] Using audio simulation', {
        wordsCount,
        duration: readingDuration + 'ms'
      });
      /* istanbul ignore next */
      cov_22e8bkvwiy().s[133]++;
      await new Promise(resolve => {
        /* istanbul ignore next */
        cov_22e8bkvwiy().f[20]++;
        cov_22e8bkvwiy().s[134]++;
        return setTimeout(resolve, readingDuration);
      });
      /* istanbul ignore next */
      cov_22e8bkvwiy().s[135]++;
      if (onComplete) {
        /* istanbul ignore next */
        cov_22e8bkvwiy().b[37][0]++;
        cov_22e8bkvwiy().s[136]++;
        onComplete();
      } else
      /* istanbul ignore next */
      {
        cov_22e8bkvwiy().b[37][1]++;
      }
      cov_22e8bkvwiy().s[137]++;
      console.log('🔊 [FALLBACK] Audio simulation completed');
    } catch (fallbackError) {
      /* istanbul ignore next */
      cov_22e8bkvwiy().s[138]++;
      logger.warn('Fallback audio simulation failed, continuing anyway');
      // Always call onComplete to prevent conversation from hanging
      /* istanbul ignore next */
      cov_22e8bkvwiy().s[139]++;
      if (onComplete) {
        /* istanbul ignore next */
        cov_22e8bkvwiy().b[38][0]++;
        cov_22e8bkvwiy().s[140]++;
        onComplete();
      } else
      /* istanbul ignore next */
      {
        cov_22e8bkvwiy().b[38][1]++;
      }
    }
  }
};
/* istanbul ignore next */
cov_22e8bkvwiy().s[141]++;
exports.playAIResponse = playAIResponse;
/**
 * Play audio from blob using Web Audio API
 */
/* istanbul ignore next */
cov_22e8bkvwiy().s[142]++;
const playAudioFromBlob = async audioBlob => {
  /* istanbul ignore next */
  cov_22e8bkvwiy().f[21]++;
  cov_22e8bkvwiy().s[143]++;
  return new Promise((resolve, reject) => {
    /* istanbul ignore next */
    cov_22e8bkvwiy().f[22]++;
    cov_22e8bkvwiy().s[144]++;
    try {
      // Create audio element for playback
      const audio =
      /* istanbul ignore next */
      (cov_22e8bkvwiy().s[145]++, new Audio());
      const audioUrl =
      /* istanbul ignore next */
      (cov_22e8bkvwiy().s[146]++, URL.createObjectURL(audioBlob));
      /* istanbul ignore next */
      cov_22e8bkvwiy().s[147]++;
      audio.src = audioUrl;
      /* istanbul ignore next */
      cov_22e8bkvwiy().s[148]++;
      audio.preload = 'auto';
      // Set up event listeners
      /* istanbul ignore next */
      cov_22e8bkvwiy().s[149]++;
      audio.addEventListener('ended', () => {
        /* istanbul ignore next */
        cov_22e8bkvwiy().f[23]++;
        cov_22e8bkvwiy().s[150]++;
        URL.revokeObjectURL(audioUrl);
        /* istanbul ignore next */
        cov_22e8bkvwiy().s[151]++;
        resolve();
      });
      /* istanbul ignore next */
      cov_22e8bkvwiy().s[152]++;
      audio.addEventListener('error', error => {
        /* istanbul ignore next */
        cov_22e8bkvwiy().f[24]++;
        cov_22e8bkvwiy().s[153]++;
        URL.revokeObjectURL(audioUrl);
        /* istanbul ignore next */
        cov_22e8bkvwiy().s[154]++;
        reject(new Error(`Audio playback failed: ${
        /* istanbul ignore next */
        (cov_22e8bkvwiy().b[39][0]++, error.message) ||
        /* istanbul ignore next */
        (cov_22e8bkvwiy().b[39][1]++, 'Unknown error')}`));
      });
      // Start playback
      /* istanbul ignore next */
      cov_22e8bkvwiy().s[155]++;
      audio.play().catch(error => {
        /* istanbul ignore next */
        cov_22e8bkvwiy().f[25]++;
        cov_22e8bkvwiy().s[156]++;
        URL.revokeObjectURL(audioUrl);
        /* istanbul ignore next */
        cov_22e8bkvwiy().s[157]++;
        reject(new Error(`Audio play failed: ${
        /* istanbul ignore next */
        (cov_22e8bkvwiy().b[40][0]++, error.message) ||
        /* istanbul ignore next */
        (cov_22e8bkvwiy().b[40][1]++, 'Unknown error')}`));
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_22e8bkvwiy().s[158]++;
      reject(new Error(`Audio setup failed: ${error instanceof Error ?
      /* istanbul ignore next */
      (cov_22e8bkvwiy().b[41][0]++, error.message) :
      /* istanbul ignore next */
      (cov_22e8bkvwiy().b[41][1]++, String(error))}`));
    }
  });
};
/**
 * Play direct audio buffer with TTS fallback
 */
/* istanbul ignore next */
cov_22e8bkvwiy().s[159]++;
const playDirectAudioWithFallback = async (audioData, fallbackText, onStart, onComplete, onError) => {
  /* istanbul ignore next */
  cov_22e8bkvwiy().f[26]++;
  cov_22e8bkvwiy().s[160]++;
  if (validateAudioBuffer(audioData)) {
    /* istanbul ignore next */
    cov_22e8bkvwiy().b[42][0]++;
    cov_22e8bkvwiy().s[161]++;
    try {
      /* istanbul ignore next */
      cov_22e8bkvwiy().s[162]++;
      /* istanbul ignore next */
      (cov_22e8bkvwiy().b[44][0]++, onStart === null) ||
      /* istanbul ignore next */
      (cov_22e8bkvwiy().b[44][1]++, onStart === void 0) ?
      /* istanbul ignore next */
      (cov_22e8bkvwiy().b[43][0]++, void 0) :
      /* istanbul ignore next */
      (cov_22e8bkvwiy().b[43][1]++, onStart());
      /* istanbul ignore next */
      cov_22e8bkvwiy().s[163]++;
      await playAudioBuffer(audioData);
      /* istanbul ignore next */
      cov_22e8bkvwiy().s[164]++;
      logger.audio.speak('Direct audio playback completed');
      /* istanbul ignore next */
      cov_22e8bkvwiy().s[165]++;
      /* istanbul ignore next */
      (cov_22e8bkvwiy().b[46][0]++, onComplete === null) ||
      /* istanbul ignore next */
      (cov_22e8bkvwiy().b[46][1]++, onComplete === void 0) ?
      /* istanbul ignore next */
      (cov_22e8bkvwiy().b[45][0]++, void 0) :
      /* istanbul ignore next */
      (cov_22e8bkvwiy().b[45][1]++, onComplete());
      /* istanbul ignore next */
      cov_22e8bkvwiy().s[166]++;
      return;
    } catch (error) {
      /* istanbul ignore next */
      cov_22e8bkvwiy().s[167]++;
      logger.warn('Direct audio failed, falling back to TTS', {
        error: error instanceof Error ?
        /* istanbul ignore next */
        (cov_22e8bkvwiy().b[47][0]++, error.message) :
        /* istanbul ignore next */
        (cov_22e8bkvwiy().b[47][1]++, String(error))
      });
      // Fall through to TTS fallback
    }
  } else
  /* istanbul ignore next */
  {
    cov_22e8bkvwiy().b[42][1]++;
  }
  // TTS fallback
  cov_22e8bkvwiy().s[168]++;
  await (0, exports.playAIResponse)(fallbackText, onStart, onComplete, onError);
};
/* istanbul ignore next */
cov_22e8bkvwiy().s[169]++;
exports.playDirectAudioWithFallback = playDirectAudioWithFallback;
/**
 * Combined conversation processing with audio playback
 */
/* istanbul ignore next */
cov_22e8bkvwiy().s[170]++;
const processAndPlayResponse = async (userTranscript, onStart, onComplete, onError) => {
  /* istanbul ignore next */
  cov_22e8bkvwiy().f[27]++;
  cov_22e8bkvwiy().s[171]++;
  try {
    // Process conversation
    const data =
    /* istanbul ignore next */
    (cov_22e8bkvwiy().s[172]++, await (0, exports.processConversation)(userTranscript));
    // Create message objects
    const userMessage =
    /* istanbul ignore next */
    (cov_22e8bkvwiy().s[173]++, {
      role: "user",
      content: userTranscript
    });
    const aiMessage =
    /* istanbul ignore next */
    (cov_22e8bkvwiy().s[174]++, {
      role: "assistant",
      content: data.message
    });
    // Play response audio
    /* istanbul ignore next */
    cov_22e8bkvwiy().s[175]++;
    if (
    /* istanbul ignore next */
    (cov_22e8bkvwiy().b[49][0]++, data.hasAudio) &&
    /* istanbul ignore next */
    (cov_22e8bkvwiy().b[49][1]++, validateAudioBuffer(data.audioData))) {
      /* istanbul ignore next */
      cov_22e8bkvwiy().b[48][0]++;
      cov_22e8bkvwiy().s[176]++;
      await (0, exports.playDirectAudioWithFallback)(data.audioData, data.message, onStart, onComplete, onError);
    } else {
      /* istanbul ignore next */
      cov_22e8bkvwiy().b[48][1]++;
      cov_22e8bkvwiy().s[177]++;
      await (0, exports.playAIResponse)(data.message, onStart, onComplete, onError);
    }
    /* istanbul ignore next */
    cov_22e8bkvwiy().s[178]++;
    return {
      userMessage,
      aiMessage,
      questionNumber: data.questionNumber,
      isComplete: data.isComplete
    };
  } catch (error) {
    const processError =
    /* istanbul ignore next */
    (cov_22e8bkvwiy().s[179]++, error instanceof Error ?
    /* istanbul ignore next */
    (cov_22e8bkvwiy().b[50][0]++, error) :
    /* istanbul ignore next */
    (cov_22e8bkvwiy().b[50][1]++, new Error('Processing failed')));
    /* istanbul ignore next */
    cov_22e8bkvwiy().s[180]++;
    logger.error('Conversation processing failed', processError, {
      userTranscript: userTranscript.substring(0, 100),
      errorType: processError.name,
      errorMessage: processError.message
    });
    // Don't throw the error, instead provide fallback behavior
    /* istanbul ignore next */
    cov_22e8bkvwiy().s[181]++;
    console.warn('🔄 Conversation processing failed, attempting graceful recovery');
    // Create fallback response to prevent conversation from breaking
    const fallbackUserMessage =
    /* istanbul ignore next */
    (cov_22e8bkvwiy().s[182]++, {
      role: "user",
      content: userTranscript
    });
    const fallbackAIMessage =
    /* istanbul ignore next */
    (cov_22e8bkvwiy().s[183]++, {
      role: "assistant",
      content: "I apologize, I'm having some technical difficulties. Could you please repeat that or try rephrasing your response?"
    });
    // Try to play the fallback response
    /* istanbul ignore next */
    cov_22e8bkvwiy().s[184]++;
    try {
      /* istanbul ignore next */
      cov_22e8bkvwiy().s[185]++;
      await (0, exports.playAIResponse)(fallbackAIMessage.content, onStart, onComplete, onError);
    } catch (audioError) {
      /* istanbul ignore next */
      cov_22e8bkvwiy().s[186]++;
      console.warn('🔊 Fallback audio also failed, calling completion anyway');
      /* istanbul ignore next */
      cov_22e8bkvwiy().s[187]++;
      if (onComplete) {
        /* istanbul ignore next */
        cov_22e8bkvwiy().b[51][0]++;
        cov_22e8bkvwiy().s[188]++;
        onComplete();
      } else
      /* istanbul ignore next */
      {
        cov_22e8bkvwiy().b[51][1]++;
      }
    }
    /* istanbul ignore next */
    cov_22e8bkvwiy().s[189]++;
    return {
      userMessage: fallbackUserMessage,
      aiMessage: fallbackAIMessage,
      questionNumber: undefined,
      isComplete: false
    };
  }
};
/* istanbul ignore next */
cov_22e8bkvwiy().s[190]++;
exports.processAndPlayResponse = processAndPlayResponse;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMjJlOGJrdndpeSIsInBhdGgiLCJoYXNoIiwiZ2xvYmFsIiwiRnVuY3Rpb24iLCJnY3YiLCJjb3ZlcmFnZURhdGEiLCJzdGF0ZW1lbnRNYXAiLCJzdGFydCIsImxpbmUiLCJjb2x1bW4iLCJlbmQiLCJmbk1hcCIsIm5hbWUiLCJkZWNsIiwibG9jIiwiYnJhbmNoTWFwIiwidHlwZSIsImxvY2F0aW9ucyIsInVuZGVmaW5lZCIsInMiLCJmIiwiYiIsImlucHV0U291cmNlTWFwIiwiZmlsZSIsIm1hcHBpbmdzIiwibmFtZXMiLCJzb3VyY2VzIiwic291cmNlc0NvbnRlbnQiLCJ2ZXJzaW9uIiwiX2NvdmVyYWdlU2NoZW1hIiwiY292ZXJhZ2UiLCJhY3R1YWxDb3ZlcmFnZSIsIndpdGhSZXRyeSIsImZuIiwicmV0cmllcyIsImVycm9yIiwibG9nZ2VyIiwiYXBpIiwicmVxdWVzdCIsIm1ldGhvZCIsImRhdGEiLCJjb25zb2xlIiwibG9nIiwicmVzcG9uc2UiLCJzdGF0dXMiLCJ3YXJuIiwibXNnIiwiYXVkaW8iLCJzcGVhayIsImhhbmRsZUFwaUVycm9yIiwib3BlcmF0aW9uIiwiRXJyb3IiLCJzYW5pdGl6ZUludGVydmlld1RleHQiLCJ0ZXh0IiwidmFsaWRhdGVBdWRpb0J1ZmZlciIsInBsYXlBdWRpb0J1ZmZlciIsInNwZWVjaFRvVGV4dCIsImF1ZGlvQmxvYiIsImZvcm1EYXRhIiwiRm9ybURhdGEiLCJhcHBlbmQiLCJzaXplIiwiZmV0Y2giLCJib2R5Iiwib2siLCJyZXN1bHQiLCJqc29uIiwidGV4dExlbmd0aCIsIl9hIiwibGVuZ3RoIiwiZXhwb3J0cyIsInN0YXJ0Q29udmVyc2F0aW9uIiwiaW50ZXJ2aWV3Q29udGV4dCIsImFjdGlvbiIsImhlYWRlcnMiLCJKU09OIiwic3RyaW5naWZ5IiwiaGFzQXVkaW8iLCJtZXNzYWdlTGVuZ3RoIiwibWVzc2FnZSIsInByb2Nlc3NDb252ZXJzYXRpb24iLCJ1c2VyVHJhbnNjcmlwdCIsInByZXZpZXciLCJzdWJzdHJpbmciLCJ0cmFuc2NyaXB0TGVuZ3RoIiwic3RhdHVzVGV4dCIsImVycm9yVGV4dCIsImVycm9yQm9keSIsImhhc01lc3NhZ2UiLCJxdWVzdGlvbk51bWJlciIsImlzQ29tcGxldGUiLCJfYiIsImVycm9yVHlwZSIsImNvbnN0cnVjdG9yIiwiZXJyb3JNZXNzYWdlIiwiU3RyaW5nIiwic3RhY2siLCJlbmRDb252ZXJzYXRpb24iLCJoYXNTdW1tYXJ5Iiwic3VtbWFyeSIsInRleHRUb1NwZWVjaCIsIm9wdGlvbnMiLCJzYW5pdGl6ZWRUZXh0Iiwib3JpZ2luYWxMZW5ndGgiLCJzYW5pdGl6ZWRMZW5ndGgiLCJoYWRNYXJrZG93biIsInN0cmVhbWluZyIsIm9uQ2h1bmsiLCJyZWFkZXIiLCJnZXRSZWFkZXIiLCJjaHVua3MiLCJkb25lIiwidmFsdWUiLCJyZWFkIiwicHVzaCIsImJ1ZmZlciIsInNsaWNlIiwiYnl0ZU9mZnNldCIsImJ5dGVMZW5ndGgiLCJ0b3RhbExlbmd0aCIsInJlZHVjZSIsInN1bSIsImNodW5rIiwiY29tYmluZWQiLCJVaW50OEFycmF5Iiwib2Zmc2V0IiwiZm9yRWFjaCIsInNldCIsIkJsb2IiLCJibG9iU2l6ZSIsImNodW5rc1JlY2VpdmVkIiwicmVsZWFzZUxvY2siLCJibG9iIiwicGxheUFJUmVzcG9uc2UiLCJvblN0YXJ0Iiwib25Db21wbGV0ZSIsIm9uRXJyb3IiLCJoYXNPblN0YXJ0IiwiaGFzT25Db21wbGV0ZSIsImF1ZGlvU2l6ZSIsInBsYXlBdWRpb0Zyb21CbG9iIiwiYXVkaW9FcnJvciIsIndvcmRzQ291bnQiLCJzcGxpdCIsInJlYWRpbmdEdXJhdGlvbiIsIk1hdGgiLCJtYXgiLCJkdXJhdGlvbiIsIlByb21pc2UiLCJyZXNvbHZlIiwic2V0VGltZW91dCIsImZhbGxiYWNrRXJyb3IiLCJyZWplY3QiLCJBdWRpbyIsImF1ZGlvVXJsIiwiVVJMIiwiY3JlYXRlT2JqZWN0VVJMIiwic3JjIiwicHJlbG9hZCIsImFkZEV2ZW50TGlzdGVuZXIiLCJyZXZva2VPYmplY3RVUkwiLCJwbGF5IiwiY2F0Y2giLCJwbGF5RGlyZWN0QXVkaW9XaXRoRmFsbGJhY2siLCJhdWRpb0RhdGEiLCJmYWxsYmFja1RleHQiLCJwcm9jZXNzQW5kUGxheVJlc3BvbnNlIiwidXNlck1lc3NhZ2UiLCJyb2xlIiwiY29udGVudCIsImFpTWVzc2FnZSIsInByb2Nlc3NFcnJvciIsImZhbGxiYWNrVXNlck1lc3NhZ2UiLCJmYWxsYmFja0FJTWVzc2FnZSJdLCJzb3VyY2VzIjpbIi9Vc2Vycy9kaWtzaGFudHZhc2hpc3RoYS9QcmVwQmV0dHIvbGliL3ZvaWNlL2F6dXJlLWFkYXB0ZXJzLWxlZ2FjeS1iYWNrdXAudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBMZWdhY3kgdm9pY2UgdHlwZXMgZm9yIEFQSSBjb21wYXRpYmlsaXR5XG4gKiBcbiAqIE5PVEU6IFRoaXMgZmlsZSBvbmx5IHByb3ZpZGVzIHR5cGVzIGZvciBiYWNrd2FyZCBjb21wYXRpYmlsaXR5IHdpdGggZXhpc3RpbmcgQVBJIHJvdXRlcy5cbiAqIFRoZSBhY3R1YWwgdm9pY2UgcHJvY2Vzc2luZyBpcyBub3cgaGFuZGxlZCBieSBBenVyZSBBSSBGb3VuZHJ5IExpdmUgVm9pY2UgQVBJLlxuICogQ2xpZW50LXNpZGUgYXVkaW8gZnVuY3Rpb25zIGhhdmUgYmVlbiByZW1vdmVkIGFuZCBjb25zb2xpZGF0ZWQgaW50byB0aGUgbmV3IEFnZW50IGNvbXBvbmVudC5cbiAqL1xuXG4vLyBTdHViIGZ1bmN0aW9ucyBmb3IgbGVnYWN5IGJhY2t1cCBjb21wYXRpYmlsaXR5XG5jb25zdCB3aXRoUmV0cnkgPSBhc3luYyAoZm46ICgpID0+IFByb21pc2U8YW55PiwgcmV0cmllcz86IG51bWJlciwgbmFtZT86IHN0cmluZykgPT4ge1xuICB0cnkge1xuICAgIHJldHVybiBhd2FpdCBmbigpO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIHRocm93IGVycm9yOyAvLyBTaW1wbGlmaWVkIC0gbm8gcmV0cnkgbG9naWMgaW4gc3R1YlxuICB9XG59O1xuXG5jb25zdCBsb2dnZXIgPSB7XG4gIGFwaToge1xuICAgIHJlcXVlc3Q6IChwYXRoOiBzdHJpbmcsIG1ldGhvZDogc3RyaW5nLCBkYXRhPzogYW55KSA9PiBjb25zb2xlLmxvZyhgW0xFR0FDWSBTVFVCXSAke21ldGhvZH0gJHtwYXRofWAsIGRhdGEpLFxuICAgIHJlc3BvbnNlOiAocGF0aDogc3RyaW5nLCBzdGF0dXM6IG51bWJlciwgZGF0YT86IGFueSkgPT4gY29uc29sZS5sb2coYFtMRUdBQ1kgU1RVQl0gUmVzcG9uc2UgJHtzdGF0dXN9YCwgZGF0YSlcbiAgfSxcbiAgd2FybjogKG1zZzogc3RyaW5nLCBkYXRhPzogYW55KSA9PiBjb25zb2xlLndhcm4oYFtMRUdBQ1kgU1RVQl0gJHttc2d9YCwgZGF0YSksXG4gIGVycm9yOiAobXNnOiBzdHJpbmcsIGVycm9yOiBhbnksIGRhdGE/OiBhbnkpID0+IGNvbnNvbGUuZXJyb3IoYFtMRUdBQ1kgU1RVQl0gJHttc2d9YCwgZXJyb3IsIGRhdGEpLFxuICBhdWRpbzoge1xuICAgIHNwZWFrOiAobXNnOiBzdHJpbmcsIGRhdGE/OiBhbnkpID0+IGNvbnNvbGUubG9nKGBbTEVHQUNZIFNUVUJdICR7bXNnfWAsIGRhdGEpXG4gIH1cbn07XG5cbmNvbnN0IGhhbmRsZUFwaUVycm9yID0gKHJlc3BvbnNlOiBSZXNwb25zZSwgb3BlcmF0aW9uOiBzdHJpbmcpID0+IHtcbiAgcmV0dXJuIG5ldyBFcnJvcihgW0xFR0FDWSBTVFVCXSAke29wZXJhdGlvbn0gZmFpbGVkIHdpdGggc3RhdHVzICR7cmVzcG9uc2Uuc3RhdHVzfWApO1xufTtcblxuY29uc3Qgc2FuaXRpemVJbnRlcnZpZXdUZXh0ID0gKHRleHQ6IHN0cmluZykgPT4gdGV4dDsgLy8gTm8tb3AgZm9yIHN0dWJcbmNvbnN0IHZhbGlkYXRlQXVkaW9CdWZmZXIgPSAoZGF0YTogYW55KSA9PiB0cnVlOyAvLyBBbHdheXMgdmFsaWQgZm9yIHN0dWIgIFxuY29uc3QgcGxheUF1ZGlvQnVmZmVyID0gYXN5bmMgKGRhdGE6IGFueSkgPT4geyAvKiBOby1vcCBzdHViICovIH07XG5cbi8vIFN0dWIgdHlwZXMgZm9yIGxlZ2FjeSBjb21wYXRpYmlsaXR5XG5pbnRlcmZhY2UgU2F2ZWRNZXNzYWdlIHtcbiAgcm9sZTogJ3VzZXInIHwgJ2Fzc2lzdGFudCc7XG4gIGNvbnRlbnQ6IHN0cmluZztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBJbnRlcnZpZXdDb250ZXh0IHtcbiAgdXNlck5hbWU6IHN0cmluZztcbiAgcXVlc3Rpb25zPzogc3RyaW5nW107XG4gIHR5cGU6IHN0cmluZztcbiAgdXNlcklkOiBzdHJpbmc7XG4gIGludGVydmlld0lkPzogc3RyaW5nO1xuICBmZWVkYmFja0lkPzogc3RyaW5nO1xuICByZXN1bWVJbmZvPzoge1xuICAgIGhhc1Jlc3VtZTogYm9vbGVhbjtcbiAgICBjYW5kaWRhdGVOYW1lPzogc3RyaW5nO1xuICAgIHN1bW1hcnk/OiBzdHJpbmc7XG4gICAgc2tpbGxzPzogc3RyaW5nO1xuICAgIGV4cGVyaWVuY2U/OiBzdHJpbmc7XG4gICAgZWR1Y2F0aW9uPzogc3RyaW5nO1xuICAgIHllYXJzT2ZFeHBlcmllbmNlPzogbnVtYmVyO1xuICB9O1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIENvbnZlcnNhdGlvblJlc3BvbnNlIHtcbiAgbWVzc2FnZTogc3RyaW5nO1xuICBxdWVzdGlvbk51bWJlcj86IG51bWJlcjtcbiAgaXNDb21wbGV0ZT86IGJvb2xlYW47XG4gIGhhc0F1ZGlvPzogYm9vbGVhbjtcbiAgYXVkaW9EYXRhPzogbnVtYmVyW10gfCBVaW50OEFycmF5O1xufVxuXG4vKipcbiAqIFNwZWVjaC10by1UZXh0IGFkYXB0ZXIgd2l0aCByZXRyeSBsb2dpY1xuICovXG5leHBvcnQgY29uc3Qgc3BlZWNoVG9UZXh0ID0gYXN5bmMgKGF1ZGlvQmxvYjogQmxvYik6IFByb21pc2U8c3RyaW5nPiA9PiB7XG4gIHJldHVybiB3aXRoUmV0cnkoYXN5bmMgKCkgPT4ge1xuICAgIGNvbnN0IGZvcm1EYXRhID0gbmV3IEZvcm1EYXRhKCk7XG4gICAgZm9ybURhdGEuYXBwZW5kKCdhdWRpbycsIGF1ZGlvQmxvYiwgJ3JlY29yZGluZy53YXYnKTtcblxuICAgIGxvZ2dlci5hcGkucmVxdWVzdCgnL2FwaS92b2ljZS9zdHJlYW0nLCAnUE9TVCcsIHsgXG4gICAgICBzaXplOiBhdWRpb0Jsb2Iuc2l6ZSxcbiAgICAgIHR5cGU6IGF1ZGlvQmxvYi50eXBlIFxuICAgIH0pO1xuICAgIFxuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goJy9hcGkvdm9pY2Uvc3RyZWFtJywge1xuICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgICBib2R5OiBmb3JtRGF0YSxcbiAgICB9KTtcblxuICAgIGlmICghcmVzcG9uc2Uub2spIHtcbiAgICAgIHRocm93IGhhbmRsZUFwaUVycm9yKHJlc3BvbnNlLCAnU3BlZWNoLXRvLXRleHQnKTtcbiAgICB9XG5cbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG4gICAgbG9nZ2VyLmFwaS5yZXNwb25zZSgnL2FwaS92b2ljZS9zdHJlYW0nLCByZXNwb25zZS5zdGF0dXMsIHsgXG4gICAgICB0ZXh0TGVuZ3RoOiByZXN1bHQudGV4dD8ubGVuZ3RoIFxuICAgIH0pO1xuXG4gICAgaWYgKHJlc3VsdC50ZXh0ID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignU3BlZWNoLXRvLXRleHQgcmVzcG9uc2UgbWlzc2luZyB0ZXh0IGZpZWxkJyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHJlc3VsdC50ZXh0O1xuICB9LCAzLCAnU3BlZWNoLXRvLXRleHQnKTtcbn07XG5cbi8qKlxuICogU3RhcnQgY29udmVyc2F0aW9uIGFkYXB0ZXJcbiAqL1xuZXhwb3J0IGNvbnN0IHN0YXJ0Q29udmVyc2F0aW9uID0gYXN5bmMgKFxuICBpbnRlcnZpZXdDb250ZXh0OiBJbnRlcnZpZXdDb250ZXh0XG4pOiBQcm9taXNlPENvbnZlcnNhdGlvblJlc3BvbnNlPiA9PiB7XG4gIGxvZ2dlci5hcGkucmVxdWVzdCgnL2FwaS92b2ljZS9jb252ZXJzYXRpb24nLCAnUE9TVCcsIHsgYWN0aW9uOiAnc3RhcnQnIH0pO1xuXG4gIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goJy9hcGkvdm9pY2UvY29udmVyc2F0aW9uJywge1xuICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgIGhlYWRlcnM6IHtcbiAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXG4gICAgfSxcbiAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICBhY3Rpb246IFwic3RhcnRcIixcbiAgICAgIGludGVydmlld0NvbnRleHRcbiAgICB9KSxcbiAgfSk7XG5cbiAgaWYgKCFyZXNwb25zZS5vaykge1xuICAgIHRocm93IGhhbmRsZUFwaUVycm9yKHJlc3BvbnNlLCAnU3RhcnQgY29udmVyc2F0aW9uJyk7XG4gIH1cblxuICBjb25zdCBkYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuICBsb2dnZXIuYXBpLnJlc3BvbnNlKCcvYXBpL3ZvaWNlL2NvbnZlcnNhdGlvbicsIHJlc3BvbnNlLnN0YXR1cywgeyBcbiAgICBoYXNBdWRpbzogISFkYXRhLmhhc0F1ZGlvLFxuICAgIG1lc3NhZ2VMZW5ndGg6IGRhdGEubWVzc2FnZT8ubGVuZ3RoIFxuICB9KTtcblxuICByZXR1cm4gZGF0YTtcbn07XG5cbi8qKlxuICogUHJvY2VzcyBjb252ZXJzYXRpb24gdHVybiBhZGFwdGVyICBcbiAqL1xuZXhwb3J0IGNvbnN0IHByb2Nlc3NDb252ZXJzYXRpb24gPSBhc3luYyAoXG4gIHVzZXJUcmFuc2NyaXB0OiBzdHJpbmdcbik6IFByb21pc2U8Q29udmVyc2F0aW9uUmVzcG9uc2U+ID0+IHtcbiAgY29uc29sZS5sb2coJ/Cfp6ogW1BST0NFU1MgQ09OVkVSU0FUSU9OXSBTdGFydGluZyB3aXRoIHRyYW5zY3JpcHQ6Jywge1xuICAgIGxlbmd0aDogdXNlclRyYW5zY3JpcHQubGVuZ3RoLFxuICAgIHByZXZpZXc6IHVzZXJUcmFuc2NyaXB0LnN1YnN0cmluZygwLCAxMDApICsgJy4uLidcbiAgfSk7XG4gIFxuICBsb2dnZXIuYXBpLnJlcXVlc3QoJy9hcGkvdm9pY2UvY29udmVyc2F0aW9uJywgJ1BPU1QnLCB7IFxuICAgIGFjdGlvbjogJ3Byb2Nlc3MnLFxuICAgIHRyYW5zY3JpcHRMZW5ndGg6IHVzZXJUcmFuc2NyaXB0Lmxlbmd0aCBcbiAgfSk7XG5cbiAgdHJ5IHtcbiAgICBjb25zb2xlLmxvZygn8J+MjSBbUFJPQ0VTUyBDT05WRVJTQVRJT05dIE1ha2luZyBmZXRjaCByZXF1ZXN0IHRvIC9hcGkvdm9pY2UvY29udmVyc2F0aW9uJyk7XG4gICAgXG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCgnL2FwaS92b2ljZS9jb252ZXJzYXRpb24nLCB7XG4gICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgIH0sXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgIGFjdGlvbjogXCJwcm9jZXNzXCIsXG4gICAgICAgIHVzZXJUcmFuc2NyaXB0LFxuICAgICAgfSksXG4gICAgfSk7XG5cbiAgICBjb25zb2xlLmxvZygn8J+MjSBbUFJPQ0VTUyBDT05WRVJTQVRJT05dIEdvdCByZXNwb25zZTonLCB7XG4gICAgICBzdGF0dXM6IHJlc3BvbnNlLnN0YXR1cyxcbiAgICAgIHN0YXR1c1RleHQ6IHJlc3BvbnNlLnN0YXR1c1RleHQsXG4gICAgICBvazogcmVzcG9uc2Uub2tcbiAgICB9KTtcblxuICAgIGlmICghcmVzcG9uc2Uub2spIHtcbiAgICAgIGNvbnN0IGVycm9yVGV4dCA9IGF3YWl0IHJlc3BvbnNlLnRleHQoKTtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ+KdjCBbUFJPQ0VTUyBDT05WRVJTQVRJT05dIEFQSSBlcnJvciByZXNwb25zZTonLCB7XG4gICAgICAgIHN0YXR1czogcmVzcG9uc2Uuc3RhdHVzLFxuICAgICAgICBzdGF0dXNUZXh0OiByZXNwb25zZS5zdGF0dXNUZXh0LFxuICAgICAgICBlcnJvckJvZHk6IGVycm9yVGV4dC5zdWJzdHJpbmcoMCwgNTAwKSArICcuLi4nXG4gICAgICB9KTtcbiAgICAgIHRocm93IGhhbmRsZUFwaUVycm9yKHJlc3BvbnNlLCAnUHJvY2VzcyBjb252ZXJzYXRpb24nKTtcbiAgICB9XG5cbiAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuICAgIGNvbnNvbGUubG9nKCfinIUgW1BST0NFU1MgQ09OVkVSU0FUSU9OXSBTdWNjZXNzZnVsbHkgcGFyc2VkIEpTT04gcmVzcG9uc2U6Jywge1xuICAgICAgaGFzTWVzc2FnZTogISFkYXRhLm1lc3NhZ2UsXG4gICAgICBtZXNzYWdlTGVuZ3RoOiBkYXRhLm1lc3NhZ2U/Lmxlbmd0aCxcbiAgICAgIHF1ZXN0aW9uTnVtYmVyOiBkYXRhLnF1ZXN0aW9uTnVtYmVyLFxuICAgICAgaXNDb21wbGV0ZTogZGF0YS5pc0NvbXBsZXRlLFxuICAgICAgaGFzQXVkaW86IGRhdGEuaGFzQXVkaW9cbiAgICB9KTtcbiAgICBcbiAgICBsb2dnZXIuYXBpLnJlc3BvbnNlKCcvYXBpL3ZvaWNlL2NvbnZlcnNhdGlvbicsIHJlc3BvbnNlLnN0YXR1cywge1xuICAgICAgaGFzQXVkaW86ICEhZGF0YS5oYXNBdWRpbyxcbiAgICAgIG1lc3NhZ2VMZW5ndGg6IGRhdGEubWVzc2FnZT8ubGVuZ3RoLFxuICAgICAgcXVlc3Rpb25OdW1iZXI6IGRhdGEucXVlc3Rpb25OdW1iZXIsXG4gICAgICBpc0NvbXBsZXRlOiBkYXRhLmlzQ29tcGxldGVcbiAgICB9KTtcblxuICAgIHJldHVybiBkYXRhO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ+KdjCBbUFJPQ0VTUyBDT05WRVJTQVRJT05dIE5ldHdvcmsgb3IgcGFyc2luZyBlcnJvcjonLCB7XG4gICAgICBlcnJvclR5cGU6IGVycm9yIGluc3RhbmNlb2YgRXJyb3IgPyBlcnJvci5jb25zdHJ1Y3Rvci5uYW1lIDogdHlwZW9mIGVycm9yLFxuICAgICAgZXJyb3JNZXNzYWdlOiBlcnJvciBpbnN0YW5jZW9mIEVycm9yID8gZXJyb3IubWVzc2FnZSA6IFN0cmluZyhlcnJvciksXG4gICAgICBzdGFjazogZXJyb3IgaW5zdGFuY2VvZiBFcnJvciA/IGVycm9yLnN0YWNrIDogdW5kZWZpbmVkXG4gICAgfSk7XG4gICAgdGhyb3cgZXJyb3I7XG4gIH1cbn07XG5cbi8qKlxuICogRW5kIGNvbnZlcnNhdGlvbiBhZGFwdGVyXG4gKi9cbmV4cG9ydCBjb25zdCBlbmRDb252ZXJzYXRpb24gPSBhc3luYyAoKTogUHJvbWlzZTx7IHN1bW1hcnk/OiBzdHJpbmcgfT4gPT4ge1xuICB0cnkge1xuICAgIGxvZ2dlci5hcGkucmVxdWVzdCgnL2FwaS92b2ljZS9jb252ZXJzYXRpb24nLCAnUE9TVCcsIHsgYWN0aW9uOiAnc3VtbWFyeScgfSk7XG5cbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKCcvYXBpL3ZvaWNlL2NvbnZlcnNhdGlvbicsIHtcbiAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgaGVhZGVyczoge1xuICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgICAgfSxcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgYWN0aW9uOiBcInN1bW1hcnlcIixcbiAgICAgIH0pLFxuICAgIH0pO1xuXG4gICAgaWYgKHJlc3BvbnNlLm9rKSB7XG4gICAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuICAgICAgbG9nZ2VyLmFwaS5yZXNwb25zZSgnL2FwaS92b2ljZS9jb252ZXJzYXRpb24nLCByZXNwb25zZS5zdGF0dXMsIHtcbiAgICAgICAgaGFzU3VtbWFyeTogISFkYXRhLnN1bW1hcnlcbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIGRhdGE7XG4gICAgfSBlbHNlIHtcbiAgICAgIGxvZ2dlci53YXJuKCdGYWlsZWQgdG8gZ2VuZXJhdGUgaW50ZXJ2aWV3IHN1bW1hcnknLCB7IHN0YXR1czogcmVzcG9uc2Uuc3RhdHVzIH0pO1xuICAgICAgcmV0dXJuIHt9O1xuICAgIH1cbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBsb2dnZXIud2FybignRXJyb3IgZ2VuZXJhdGluZyBpbnRlcnZpZXcgc3VtbWFyeScsIHsgZXJyb3I6IGVycm9yIGluc3RhbmNlb2YgRXJyb3IgPyBlcnJvci5tZXNzYWdlIDogU3RyaW5nKGVycm9yKSB9KTtcbiAgICByZXR1cm4ge307XG4gIH1cbn07XG5cbi8qKlxuICogVGV4dC10by1TcGVlY2ggYWRhcHRlciB3aXRoIHN0cmVhbWluZyBzdXBwb3J0XG4gKi9cbmV4cG9ydCBjb25zdCB0ZXh0VG9TcGVlY2ggPSBhc3luYyAoXG4gIHRleHQ6IHN0cmluZywgXG4gIG9wdGlvbnM/OiB7IHN0cmVhbWluZz86IGJvb2xlYW47IG9uQ2h1bms/OiAoY2h1bms6IEFycmF5QnVmZmVyKSA9PiB2b2lkIH1cbik6IFByb21pc2U8QmxvYj4gPT4ge1xuICByZXR1cm4gd2l0aFJldHJ5KGFzeW5jICgpID0+IHtcbiAgICAvLyBTYW5pdGl6ZSB0ZXh0IHRvIHJlbW92ZSBNYXJrZG93biBmb3JtYXR0aW5nIGJlZm9yZSBUVFNcbiAgICBjb25zdCBzYW5pdGl6ZWRUZXh0ID0gc2FuaXRpemVJbnRlcnZpZXdUZXh0KHRleHQpO1xuICAgIFxuICAgIGxvZ2dlci5hcGkucmVxdWVzdCgnL2FwaS92b2ljZS90dHMnLCAnUE9TVCcsIHsgXG4gICAgICBvcmlnaW5hbExlbmd0aDogdGV4dC5sZW5ndGgsXG4gICAgICBzYW5pdGl6ZWRMZW5ndGg6IHNhbml0aXplZFRleHQubGVuZ3RoLFxuICAgICAgaGFkTWFya2Rvd246IHRleHQgIT09IHNhbml0aXplZFRleHQsXG4gICAgICBzdHJlYW1pbmc6IG9wdGlvbnM/LnN0cmVhbWluZyB8fCBmYWxzZVxuICAgIH0pO1xuXG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCgnL2FwaS92b2ljZS90dHMnLCB7XG4gICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgIH0sXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7IFxuICAgICAgICB0ZXh0OiBzYW5pdGl6ZWRUZXh0LFxuICAgICAgICBzdHJlYW1pbmc6IG9wdGlvbnM/LnN0cmVhbWluZyB8fCBmYWxzZSBcbiAgICAgIH0pLFxuICAgIH0pO1xuXG4gICAgaWYgKCFyZXNwb25zZS5vaykge1xuICAgICAgdGhyb3cgaGFuZGxlQXBpRXJyb3IocmVzcG9uc2UsICdUZXh0LXRvLXNwZWVjaCcpO1xuICAgIH1cblxuICAgIC8vIEhhbmRsZSBzdHJlYW1pbmcgcmVzcG9uc2UgaWYgcmVxdWVzdGVkXG4gICAgaWYgKG9wdGlvbnM/LnN0cmVhbWluZyAmJiBvcHRpb25zLm9uQ2h1bmsgJiYgcmVzcG9uc2UuYm9keSkge1xuICAgICAgY29uc3QgcmVhZGVyID0gcmVzcG9uc2UuYm9keS5nZXRSZWFkZXIoKTtcbiAgICAgIGNvbnN0IGNodW5rczogVWludDhBcnJheVtdID0gW107XG4gICAgICBcbiAgICAgIHRyeSB7XG4gICAgICAgIHdoaWxlICh0cnVlKSB7XG4gICAgICAgICAgY29uc3QgeyBkb25lLCB2YWx1ZSB9ID0gYXdhaXQgcmVhZGVyLnJlYWQoKTtcbiAgICAgICAgICBpZiAoZG9uZSkgYnJlYWs7XG4gICAgICAgICAgXG4gICAgICAgICAgY2h1bmtzLnB1c2godmFsdWUpO1xuICAgICAgICAgIFxuICAgICAgICAgIC8vIENvbnZlcnQgY2h1bmsgdG8gQXJyYXlCdWZmZXIgYW5kIHNlbmQgdG8gY2FsbGJhY2tcbiAgICAgICAgICBpZiAob3B0aW9ucy5vbkNodW5rKSB7XG4gICAgICAgICAgICBvcHRpb25zLm9uQ2h1bmsodmFsdWUuYnVmZmVyLnNsaWNlKHZhbHVlLmJ5dGVPZmZzZXQsIHZhbHVlLmJ5dGVPZmZzZXQgKyB2YWx1ZS5ieXRlTGVuZ3RoKSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAvLyBDb21iaW5lIGFsbCBjaHVua3MgaW50byBmaW5hbCBibG9iXG4gICAgICAgIGNvbnN0IHRvdGFsTGVuZ3RoID0gY2h1bmtzLnJlZHVjZSgoc3VtLCBjaHVuaykgPT4gc3VtICsgY2h1bmsubGVuZ3RoLCAwKTtcbiAgICAgICAgY29uc3QgY29tYmluZWQgPSBuZXcgVWludDhBcnJheSh0b3RhbExlbmd0aCk7XG4gICAgICAgIGxldCBvZmZzZXQgPSAwO1xuICAgICAgICBjaHVua3MuZm9yRWFjaChjaHVuayA9PiB7XG4gICAgICAgICAgY29tYmluZWQuc2V0KGNodW5rLCBvZmZzZXQpO1xuICAgICAgICAgIG9mZnNldCArPSBjaHVuay5sZW5ndGg7XG4gICAgICAgIH0pO1xuICAgICAgICBcbiAgICAgICAgY29uc3QgYXVkaW9CbG9iID0gbmV3IEJsb2IoW2NvbWJpbmVkXSwgeyB0eXBlOiAnYXVkaW8vd2F2JyB9KTtcbiAgICAgICAgbG9nZ2VyLmFwaS5yZXNwb25zZSgnL2FwaS92b2ljZS90dHMnLCByZXNwb25zZS5zdGF0dXMsIHsgXG4gICAgICAgICAgYmxvYlNpemU6IGF1ZGlvQmxvYi5zaXplLFxuICAgICAgICAgIGNodW5rc1JlY2VpdmVkOiBjaHVua3MubGVuZ3RoLFxuICAgICAgICAgIHN0cmVhbWluZzogdHJ1ZVxuICAgICAgICB9KTtcbiAgICAgICAgXG4gICAgICAgIHJldHVybiBhdWRpb0Jsb2I7XG4gICAgICAgIFxuICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAgcmVhZGVyLnJlbGVhc2VMb2NrKCk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIFN0YW5kYXJkIG5vbi1zdHJlYW1pbmcgcmVzcG9uc2VcbiAgICAgIGNvbnN0IGF1ZGlvQmxvYiA9IGF3YWl0IHJlc3BvbnNlLmJsb2IoKTtcbiAgICAgIGxvZ2dlci5hcGkucmVzcG9uc2UoJy9hcGkvdm9pY2UvdHRzJywgcmVzcG9uc2Uuc3RhdHVzLCB7IFxuICAgICAgICBibG9iU2l6ZTogYXVkaW9CbG9iLnNpemUsXG4gICAgICAgIHN0cmVhbWluZzogZmFsc2UgXG4gICAgICB9KTtcbiAgICAgIFxuICAgICAgcmV0dXJuIGF1ZGlvQmxvYjtcbiAgICB9XG4gIH0sIDIsICdUZXh0LXRvLXNwZWVjaCcpO1xufTtcblxuLyoqXG4gKiBQbGF5IEFJIHJlc3BvbnNlIHVzaW5nIHJlYWwgQXp1cmUgVFRTIHdpdGggZmFsbGJhY2sgaGFuZGxpbmdcbiAqL1xuZXhwb3J0IGNvbnN0IHBsYXlBSVJlc3BvbnNlID0gYXN5bmMgKFxuICB0ZXh0OiBzdHJpbmcsXG4gIG9uU3RhcnQ/OiAoKSA9PiB2b2lkLFxuICBvbkNvbXBsZXRlPzogKCkgPT4gdm9pZCxcbiAgb25FcnJvcj86IChlcnJvcjogRXJyb3IpID0+IHZvaWRcbik6IFByb21pc2U8dm9pZD4gPT4ge1xuICBjb25zb2xlLmxvZygn8J+OryBbQVpVUkUgVFRTXSBwbGF5QUlSZXNwb25zZSBjYWxsZWQnLCB7IFxuICAgIHRleHRMZW5ndGg6IHRleHQubGVuZ3RoLCBcbiAgICBoYXNPblN0YXJ0OiAhIW9uU3RhcnQsXG4gICAgaGFzT25Db21wbGV0ZTogISFvbkNvbXBsZXRlIFxuICB9KTtcbiAgXG4gIHRyeSB7XG4gICAgLy8gQ2FsbCBvblN0YXJ0IGNhbGxiYWNrXG4gICAgaWYgKG9uU3RhcnQpIHtcbiAgICAgIGNvbnNvbGUubG9nKCfwn46vIFtBWlVSRSBUVFNdIENhbGxpbmcgb25TdGFydCBjYWxsYmFjaycpO1xuICAgICAgb25TdGFydCgpO1xuICAgIH1cbiAgICBcbiAgICBsb2dnZXIuYXVkaW8uc3BlYWsoJ1BsYXlpbmcgQUkgcmVzcG9uc2UgdmlhIEF6dXJlIFRUUycsIHsgdGV4dExlbmd0aDogdGV4dC5sZW5ndGggfSk7XG4gICAgXG4gICAgLy8gR2V0IGF1ZGlvIGZyb20gQXp1cmUgVFRTXG4gICAgY29uc3QgYXVkaW9CbG9iID0gYXdhaXQgdGV4dFRvU3BlZWNoKHRleHQpO1xuICAgIFxuICAgIGlmICghYXVkaW9CbG9iIHx8IGF1ZGlvQmxvYi5zaXplID09PSAwKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0VtcHR5IGF1ZGlvIHJlc3BvbnNlIGZyb20gVFRTIHNlcnZpY2UnKTtcbiAgICB9XG4gICAgXG4gICAgY29uc29sZS5sb2coJ/CflIogW0FaVVJFIFRUU10gUGxheWluZyBhdWRpbycsIHsgXG4gICAgICB0ZXh0OiB0ZXh0LnN1YnN0cmluZygwLCAxNTApICsgKHRleHQubGVuZ3RoID4gMTUwID8gJy4uLicgOiAnJyksXG4gICAgICBhdWRpb1NpemU6IGF1ZGlvQmxvYi5zaXplXG4gICAgfSk7XG4gICAgXG4gICAgLy8gUGxheSB0aGUgYXVkaW8gdXNpbmcgV2ViIEF1ZGlvIEFQSVxuICAgIGF3YWl0IHBsYXlBdWRpb0Zyb21CbG9iKGF1ZGlvQmxvYik7XG4gICAgXG4gICAgY29uc29sZS5sb2coJ/CflIogW0FaVVJFIFRUU10gQXVkaW8gcGxheWJhY2sgY29tcGxldGVkJyk7XG4gICAgbG9nZ2VyLmF1ZGlvLnNwZWFrKCdBenVyZSBUVFMgcGxheWJhY2sgY29tcGxldGVkJyk7XG4gICAgXG4gICAgLy8gQ2FsbCBvbkNvbXBsZXRlIGNhbGxiYWNrXG4gICAgaWYgKG9uQ29tcGxldGUpIHtcbiAgICAgIGNvbnNvbGUubG9nKCfwn46vIFtBWlVSRSBUVFNdIENhbGxpbmcgb25Db21wbGV0ZSBjYWxsYmFjaycpO1xuICAgICAgb25Db21wbGV0ZSgpO1xuICAgIH1cbiAgICBcbiAgICBjb25zb2xlLmxvZygn8J+OryBbQVpVUkUgVFRTXSBwbGF5QUlSZXNwb25zZSBmaW5pc2hlZCBzdWNjZXNzZnVsbHknKTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLndhcm4oJ/CflIogW0FaVVJFIFRUU10gVFRTIHNlcnZpY2UgdW5hdmFpbGFibGUsIHVzaW5nIG1vY2sgYXVkaW8nKTtcbiAgICBjb25zdCBhdWRpb0Vycm9yID0gZXJyb3IgaW5zdGFuY2VvZiBFcnJvciA/IGVycm9yIDogbmV3IEVycm9yKCdUVFMgZmFpbGVkJyk7XG4gICAgbG9nZ2VyLndhcm4oJ0F6dXJlIFRUUyBub3QgYXZhaWxhYmxlLCB1c2luZyBmYWxsYmFjayBhdWRpbyBzaW11bGF0aW9uJyk7XG4gICAgXG4gICAgLy8gRmFsbGJhY2sgdG8gbW9jayBUVFMgdGltaW5nIHNpbXVsYXRpb25cbiAgICB0cnkge1xuICAgICAgLy8gQ2FsbCBvblN0YXJ0IGlmIG5vdCBhbHJlYWR5IGNhbGxlZFxuICAgICAgaWYgKG9uU3RhcnQpIHtcbiAgICAgICAgb25TdGFydCgpO1xuICAgICAgfVxuICAgICAgXG4gICAgICBjb25zdCB3b3Jkc0NvdW50ID0gdGV4dC5zcGxpdCgnICcpLmxlbmd0aDtcbiAgICAgIGNvbnN0IHJlYWRpbmdEdXJhdGlvbiA9IE1hdGgubWF4KDI1MDAsIHdvcmRzQ291bnQgKiAxMjApOyAvLyAxMjBtcyBwZXIgd29yZCwgbWluaW11bSAyLjUgc2Vjb25kc1xuICAgICAgXG4gICAgICBjb25zb2xlLmxvZygn8J+UiiBbRkFMTEJBQ0tdIFVzaW5nIGF1ZGlvIHNpbXVsYXRpb24nLCB7IFxuICAgICAgICB3b3Jkc0NvdW50LFxuICAgICAgICBkdXJhdGlvbjogcmVhZGluZ0R1cmF0aW9uICsgJ21zJ1xuICAgICAgfSk7XG4gICAgICBcbiAgICAgIGF3YWl0IG5ldyBQcm9taXNlKHJlc29sdmUgPT4gc2V0VGltZW91dChyZXNvbHZlLCByZWFkaW5nRHVyYXRpb24pKTtcbiAgICAgIFxuICAgICAgaWYgKG9uQ29tcGxldGUpIHtcbiAgICAgICAgb25Db21wbGV0ZSgpO1xuICAgICAgfVxuICAgICAgXG4gICAgICBjb25zb2xlLmxvZygn8J+UiiBbRkFMTEJBQ0tdIEF1ZGlvIHNpbXVsYXRpb24gY29tcGxldGVkJyk7XG4gICAgfSBjYXRjaCAoZmFsbGJhY2tFcnJvcikge1xuICAgICAgbG9nZ2VyLndhcm4oJ0ZhbGxiYWNrIGF1ZGlvIHNpbXVsYXRpb24gZmFpbGVkLCBjb250aW51aW5nIGFueXdheScpO1xuICAgICAgLy8gQWx3YXlzIGNhbGwgb25Db21wbGV0ZSB0byBwcmV2ZW50IGNvbnZlcnNhdGlvbiBmcm9tIGhhbmdpbmdcbiAgICAgIGlmIChvbkNvbXBsZXRlKSB7XG4gICAgICAgIG9uQ29tcGxldGUoKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn07XG5cbi8qKlxuICogUGxheSBhdWRpbyBmcm9tIGJsb2IgdXNpbmcgV2ViIEF1ZGlvIEFQSVxuICovXG5jb25zdCBwbGF5QXVkaW9Gcm9tQmxvYiA9IGFzeW5jIChhdWRpb0Jsb2I6IEJsb2IpOiBQcm9taXNlPHZvaWQ+ID0+IHtcbiAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICB0cnkge1xuICAgICAgLy8gQ3JlYXRlIGF1ZGlvIGVsZW1lbnQgZm9yIHBsYXliYWNrXG4gICAgICBjb25zdCBhdWRpbyA9IG5ldyBBdWRpbygpO1xuICAgICAgY29uc3QgYXVkaW9VcmwgPSBVUkwuY3JlYXRlT2JqZWN0VVJMKGF1ZGlvQmxvYik7XG4gICAgICBcbiAgICAgIGF1ZGlvLnNyYyA9IGF1ZGlvVXJsO1xuICAgICAgYXVkaW8ucHJlbG9hZCA9ICdhdXRvJztcbiAgICAgIFxuICAgICAgLy8gU2V0IHVwIGV2ZW50IGxpc3RlbmVyc1xuICAgICAgYXVkaW8uYWRkRXZlbnRMaXN0ZW5lcignZW5kZWQnLCAoKSA9PiB7XG4gICAgICAgIFVSTC5yZXZva2VPYmplY3RVUkwoYXVkaW9VcmwpO1xuICAgICAgICByZXNvbHZlKCk7XG4gICAgICB9KTtcbiAgICAgIFxuICAgICAgYXVkaW8uYWRkRXZlbnRMaXN0ZW5lcignZXJyb3InLCAoZXJyb3IpID0+IHtcbiAgICAgICAgVVJMLnJldm9rZU9iamVjdFVSTChhdWRpb1VybCk7XG4gICAgICAgIHJlamVjdChuZXcgRXJyb3IoYEF1ZGlvIHBsYXliYWNrIGZhaWxlZDogJHtlcnJvci5tZXNzYWdlIHx8ICdVbmtub3duIGVycm9yJ31gKSk7XG4gICAgICB9KTtcbiAgICAgIFxuICAgICAgLy8gU3RhcnQgcGxheWJhY2tcbiAgICAgIGF1ZGlvLnBsYXkoKS5jYXRjaCgoZXJyb3IpID0+IHtcbiAgICAgICAgVVJMLnJldm9rZU9iamVjdFVSTChhdWRpb1VybCk7XG4gICAgICAgIHJlamVjdChuZXcgRXJyb3IoYEF1ZGlvIHBsYXkgZmFpbGVkOiAke2Vycm9yLm1lc3NhZ2UgfHwgJ1Vua25vd24gZXJyb3InfWApKTtcbiAgICAgIH0pO1xuICAgICAgXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIHJlamVjdChuZXcgRXJyb3IoYEF1ZGlvIHNldHVwIGZhaWxlZDogJHtlcnJvciBpbnN0YW5jZW9mIEVycm9yID8gZXJyb3IubWVzc2FnZSA6IFN0cmluZyhlcnJvcil9YCkpO1xuICAgIH1cbiAgfSk7XG59O1xuXG4vKipcbiAqIFBsYXkgZGlyZWN0IGF1ZGlvIGJ1ZmZlciB3aXRoIFRUUyBmYWxsYmFja1xuICovXG5leHBvcnQgY29uc3QgcGxheURpcmVjdEF1ZGlvV2l0aEZhbGxiYWNrID0gYXN5bmMgKFxuICBhdWRpb0RhdGE6IG51bWJlcltdIHwgVWludDhBcnJheSxcbiAgZmFsbGJhY2tUZXh0OiBzdHJpbmcsXG4gIG9uU3RhcnQ/OiAoKSA9PiB2b2lkLFxuICBvbkNvbXBsZXRlPzogKCkgPT4gdm9pZCxcbiAgb25FcnJvcj86IChlcnJvcjogRXJyb3IpID0+IHZvaWRcbik6IFByb21pc2U8dm9pZD4gPT4ge1xuICBpZiAodmFsaWRhdGVBdWRpb0J1ZmZlcihhdWRpb0RhdGEpKSB7XG4gICAgdHJ5IHtcbiAgICAgIG9uU3RhcnQ/LigpO1xuICAgICAgYXdhaXQgcGxheUF1ZGlvQnVmZmVyKGF1ZGlvRGF0YSk7XG4gICAgICBsb2dnZXIuYXVkaW8uc3BlYWsoJ0RpcmVjdCBhdWRpbyBwbGF5YmFjayBjb21wbGV0ZWQnKTtcbiAgICAgIG9uQ29tcGxldGU/LigpO1xuICAgICAgcmV0dXJuO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBsb2dnZXIud2FybignRGlyZWN0IGF1ZGlvIGZhaWxlZCwgZmFsbGluZyBiYWNrIHRvIFRUUycsIHsgZXJyb3I6IGVycm9yIGluc3RhbmNlb2YgRXJyb3IgPyBlcnJvci5tZXNzYWdlIDogU3RyaW5nKGVycm9yKSB9KTtcbiAgICAgIC8vIEZhbGwgdGhyb3VnaCB0byBUVFMgZmFsbGJhY2tcbiAgICB9XG4gIH1cblxuICAvLyBUVFMgZmFsbGJhY2tcbiAgYXdhaXQgcGxheUFJUmVzcG9uc2UoZmFsbGJhY2tUZXh0LCBvblN0YXJ0LCBvbkNvbXBsZXRlLCBvbkVycm9yKTtcbn07XG5cbi8qKlxuICogQ29tYmluZWQgY29udmVyc2F0aW9uIHByb2Nlc3Npbmcgd2l0aCBhdWRpbyBwbGF5YmFja1xuICovXG5leHBvcnQgY29uc3QgcHJvY2Vzc0FuZFBsYXlSZXNwb25zZSA9IGFzeW5jIChcbiAgdXNlclRyYW5zY3JpcHQ6IHN0cmluZyxcbiAgb25TdGFydD86ICgpID0+IHZvaWQsXG4gIG9uQ29tcGxldGU/OiAoKSA9PiB2b2lkLFxuICBvbkVycm9yPzogKGVycm9yOiBFcnJvcikgPT4gdm9pZFxuKTogUHJvbWlzZTx7XG4gIHVzZXJNZXNzYWdlOiBTYXZlZE1lc3NhZ2U7XG4gIGFpTWVzc2FnZTogU2F2ZWRNZXNzYWdlO1xuICBxdWVzdGlvbk51bWJlcj86IG51bWJlcjtcbiAgaXNDb21wbGV0ZT86IGJvb2xlYW47XG59PiA9PiB7XG4gIHRyeSB7XG4gICAgLy8gUHJvY2VzcyBjb252ZXJzYXRpb25cbiAgICBjb25zdCBkYXRhID0gYXdhaXQgcHJvY2Vzc0NvbnZlcnNhdGlvbih1c2VyVHJhbnNjcmlwdCk7XG4gICAgXG4gICAgLy8gQ3JlYXRlIG1lc3NhZ2Ugb2JqZWN0c1xuICAgIGNvbnN0IHVzZXJNZXNzYWdlOiBTYXZlZE1lc3NhZ2UgPSB7IHJvbGU6IFwidXNlclwiLCBjb250ZW50OiB1c2VyVHJhbnNjcmlwdCB9O1xuICAgIGNvbnN0IGFpTWVzc2FnZTogU2F2ZWRNZXNzYWdlID0geyByb2xlOiBcImFzc2lzdGFudFwiLCBjb250ZW50OiBkYXRhLm1lc3NhZ2UgfTtcblxuICAgIC8vIFBsYXkgcmVzcG9uc2UgYXVkaW9cbiAgICBpZiAoZGF0YS5oYXNBdWRpbyAmJiB2YWxpZGF0ZUF1ZGlvQnVmZmVyKGRhdGEuYXVkaW9EYXRhKSkge1xuICAgICAgYXdhaXQgcGxheURpcmVjdEF1ZGlvV2l0aEZhbGxiYWNrKFxuICAgICAgICBkYXRhLmF1ZGlvRGF0YSEsXG4gICAgICAgIGRhdGEubWVzc2FnZSxcbiAgICAgICAgb25TdGFydCxcbiAgICAgICAgb25Db21wbGV0ZSxcbiAgICAgICAgb25FcnJvclxuICAgICAgKTtcbiAgICB9IGVsc2Uge1xuICAgICAgYXdhaXQgcGxheUFJUmVzcG9uc2UoZGF0YS5tZXNzYWdlLCBvblN0YXJ0LCBvbkNvbXBsZXRlLCBvbkVycm9yKTtcbiAgICB9XG5cbiAgICByZXR1cm4ge1xuICAgICAgdXNlck1lc3NhZ2UsXG4gICAgICBhaU1lc3NhZ2UsXG4gICAgICBxdWVzdGlvbk51bWJlcjogZGF0YS5xdWVzdGlvbk51bWJlcixcbiAgICAgIGlzQ29tcGxldGU6IGRhdGEuaXNDb21wbGV0ZVxuICAgIH07XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc3QgcHJvY2Vzc0Vycm9yID0gZXJyb3IgaW5zdGFuY2VvZiBFcnJvciA/IGVycm9yIDogbmV3IEVycm9yKCdQcm9jZXNzaW5nIGZhaWxlZCcpO1xuICAgIGxvZ2dlci5lcnJvcignQ29udmVyc2F0aW9uIHByb2Nlc3NpbmcgZmFpbGVkJywgcHJvY2Vzc0Vycm9yLCB7XG4gICAgICB1c2VyVHJhbnNjcmlwdDogdXNlclRyYW5zY3JpcHQuc3Vic3RyaW5nKDAsIDEwMCksXG4gICAgICBlcnJvclR5cGU6IHByb2Nlc3NFcnJvci5uYW1lLFxuICAgICAgZXJyb3JNZXNzYWdlOiBwcm9jZXNzRXJyb3IubWVzc2FnZVxuICAgIH0pO1xuICAgIFxuICAgIC8vIERvbid0IHRocm93IHRoZSBlcnJvciwgaW5zdGVhZCBwcm92aWRlIGZhbGxiYWNrIGJlaGF2aW9yXG4gICAgY29uc29sZS53YXJuKCfwn5SEIENvbnZlcnNhdGlvbiBwcm9jZXNzaW5nIGZhaWxlZCwgYXR0ZW1wdGluZyBncmFjZWZ1bCByZWNvdmVyeScpO1xuICAgIFxuICAgIC8vIENyZWF0ZSBmYWxsYmFjayByZXNwb25zZSB0byBwcmV2ZW50IGNvbnZlcnNhdGlvbiBmcm9tIGJyZWFraW5nXG4gICAgY29uc3QgZmFsbGJhY2tVc2VyTWVzc2FnZTogU2F2ZWRNZXNzYWdlID0geyByb2xlOiBcInVzZXJcIiwgY29udGVudDogdXNlclRyYW5zY3JpcHQgfTtcbiAgICBjb25zdCBmYWxsYmFja0FJTWVzc2FnZTogU2F2ZWRNZXNzYWdlID0geyBcbiAgICAgIHJvbGU6IFwiYXNzaXN0YW50XCIsIFxuICAgICAgY29udGVudDogXCJJIGFwb2xvZ2l6ZSwgSSdtIGhhdmluZyBzb21lIHRlY2huaWNhbCBkaWZmaWN1bHRpZXMuIENvdWxkIHlvdSBwbGVhc2UgcmVwZWF0IHRoYXQgb3IgdHJ5IHJlcGhyYXNpbmcgeW91ciByZXNwb25zZT9cIiBcbiAgICB9O1xuICAgIFxuICAgIC8vIFRyeSB0byBwbGF5IHRoZSBmYWxsYmFjayByZXNwb25zZVxuICAgIHRyeSB7XG4gICAgICBhd2FpdCBwbGF5QUlSZXNwb25zZShmYWxsYmFja0FJTWVzc2FnZS5jb250ZW50LCBvblN0YXJ0LCBvbkNvbXBsZXRlLCBvbkVycm9yKTtcbiAgICB9IGNhdGNoIChhdWRpb0Vycm9yKSB7XG4gICAgICBjb25zb2xlLndhcm4oJ/CflIogRmFsbGJhY2sgYXVkaW8gYWxzbyBmYWlsZWQsIGNhbGxpbmcgY29tcGxldGlvbiBhbnl3YXknKTtcbiAgICAgIGlmIChvbkNvbXBsZXRlKSBvbkNvbXBsZXRlKCk7XG4gICAgfVxuICAgIFxuICAgIHJldHVybiB7XG4gICAgICB1c2VyTWVzc2FnZTogZmFsbGJhY2tVc2VyTWVzc2FnZSxcbiAgICAgIGFpTWVzc2FnZTogZmFsbGJhY2tBSU1lc3NhZ2UsXG4gICAgICBxdWVzdGlvbk51bWJlcjogdW5kZWZpbmVkLFxuICAgICAgaXNDb21wbGV0ZTogZmFsc2VcbiAgICB9O1xuICB9XG59O1xuIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7Ozs7O0FBQUE7QUFBQSxTQUFBQSxlQUFBO0VBQUEsSUFBQUMsSUFBQTtFQUFBLElBQUFDLElBQUE7RUFBQSxJQUFBQyxNQUFBLE9BQUFDLFFBQUE7RUFBQSxJQUFBQyxHQUFBO0VBQUEsSUFBQUMsWUFBQTtJQUFBTCxJQUFBO0lBQUFNLFlBQUE7TUFBQTtRQUFBQyxLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO0lBQUE7SUFBQUUsS0FBQTtNQUFBO1FBQUFDLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtJQUFBO0lBQUFPLFNBQUE7TUFBQTtRQUFBRCxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7SUFBQTtJQUFBVyxDQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtJQUFBO0lBQUFDLENBQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtJQUFBO0lBQUFDLENBQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtJQUFBO0lBQUFDLGNBQUE7TUFBQUMsSUFBQTtNQUFBQyxRQUFBO01BQUFDLEtBQUE7TUFBQUMsT0FBQTtNQUFBQyxjQUFBO01BQUFDLE9BQUE7SUFBQTtJQUFBQyxlQUFBO0lBQUE1QixJQUFBO0VBQUE7RUFBQSxJQUFBNkIsUUFBQSxHQUFBNUIsTUFBQSxDQUFBRSxHQUFBLE1BQUFGLE1BQUEsQ0FBQUUsR0FBQTtFQUFBLEtBQUEwQixRQUFBLENBQUE5QixJQUFBLEtBQUE4QixR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QyxFQUFFLEdBQUcsQ0FBQztNQUNoRFMsU0FBUyxFQUFFK0UsWUFBWSxDQUFDL0osSUFBSTtNQUM1QmtGLFlBQVksRUFBRTZFLFlBQVksQ0FBQzVGO0tBQzVCLENBQUM7SUFFRjtJQUFBO0lBQUFoRixjQUFBLEdBQUFvQixDQUFBO0lBQ0FzQixPQUFPLENBQUNJLElBQUksQ0FBQyxpRUFBaUUsQ0FBQztJQUUvRTtJQUNBLE1BQU0rSCxtQkFBbUI7SUFBQTtJQUFBLENBQUE3SyxjQUFBLEdBQUFvQixDQUFBLFNBQWlCO01BQUVxSixJQUFJLEVBQUUsTUFBTTtNQUFFQyxPQUFPLEVBQUV4RjtJQUFjLENBQUU7SUFDbkYsTUFBTTRGLGlCQUFpQjtJQUFBO0lBQUEsQ0FBQTlLLGNBQUEsR0FBQW9CLENBQUEsU0FBaUI7TUFDdENxSixJQUFJLEVBQUUsV0FBVztNQUNqQkMsT0FBTyxFQUFFO0tBQ1Y7SUFFRDtJQUFBO0lBQUExSyxjQUFBLEdBQUFvQixDQUFBO0lBQ0EsSUFBSTtNQUFBO01BQUFwQixjQUFBLEdBQUFvQixDQUFBO01BQ0YsTUFBTSxJQUFBbUQsT0FBQSxDQUFBK0QsY0FBYyxFQUFDd0MsaUJBQWlCLENBQUNKLE9BQU8sRUFBRW5DLE9BQU8sRUFBRUMsVUFBVSxFQUFFQyxPQUFPLENBQUM7SUFDL0UsQ0FBQyxDQUFDLE9BQU9LLFVBQVUsRUFBRTtNQUFBO01BQUE5SSxjQUFBLEdBQUFvQixDQUFBO01BQ25Cc0IsT0FBTyxDQUFDSSxJQUFJLENBQUMsMERBQTBELENBQUM7TUFBQztNQUFBOUMsY0FBQSxHQUFBb0IsQ0FBQTtNQUN6RSxJQUFJb0gsVUFBVSxFQUFFO1FBQUE7UUFBQXhJLGNBQUEsR0FBQXNCLENBQUE7UUFBQXRCLGNBQUEsR0FBQW9CLENBQUE7UUFBQW9ILFVBQVUsRUFBRTtNQUFBLENBQUM7TUFBQTtNQUFBO1FBQUF4SSxjQUFBLEdBQUFzQixDQUFBO01BQUE7SUFDL0I7SUFBQztJQUFBdEIsY0FBQSxHQUFBb0IsQ0FBQTtJQUVELE9BQU87TUFDTG9KLFdBQVcsRUFBRUssbUJBQW1CO01BQ2hDRixTQUFTLEVBQUVHLGlCQUFpQjtNQUM1QnBGLGNBQWMsRUFBRXZFLFNBQVM7TUFDekJ3RSxVQUFVLEVBQUU7S0FDYjtFQUNIO0FBQ0YsQ0FBQztBQUFDO0FBQUEzRixjQUFBLEdBQUFvQixDQUFBO0FBdkVXbUQsT0FBQSxDQUFBZ0csc0JBQXNCLEdBQUFBLHNCQUFBIiwiaWdub3JlTGlzdCI6W119