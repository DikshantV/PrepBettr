d60cc2172c918a05c7a7ac6122d94c77
"use strict";

/**
 * Azure AI Foundry Environment Configuration
 *
 * Provides a getEnv() utility function that fetches Azure AI Foundry configuration
 * from Azure Key Vault with environment variable fallback.
 * Follows the existing pattern from the project's foundry-config.ts.
 */
/* istanbul ignore next */
function cov_2l0ixxzlr5() {
  var path = "/Users/dikshantvashistha/PrepBettr/lib/azure-ai-foundry/voice/foundry-environment.ts";
  var hash = "5ce75edcdd1ff3ee8016267ca89daf46dab0fa62";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dikshantvashistha/PrepBettr/lib/azure-ai-foundry/voice/foundry-environment.ts",
    statementMap: {
      "0": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 62
        }
      },
      "1": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 10,
          column: 24
        }
      },
      "2": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 54
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 50
        }
      },
      "4": {
        start: {
          line: 13,
          column: 25
        },
        end: {
          line: 13,
          column: 60
        }
      },
      "5": {
        start: {
          line: 17,
          column: 24
        },
        end: {
          line: 17,
          column: 28
        }
      },
      "6": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 28,
          column: 5
        }
      },
      "7": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 33
        }
      },
      "8": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 72,
          column: 5
        }
      },
      "9": {
        start: {
          line: 31,
          column: 30
        },
        end: {
          line: 31,
          column: 88
        }
      },
      "10": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 40,
          column: 10
        }
      },
      "11": {
        start: {
          line: 42,
          column: 31
        },
        end: {
          line: 44,
          column: 9
        }
      },
      "12": {
        start: {
          line: 45,
          column: 30
        },
        end: {
          line: 45,
          column: 87
        }
      },
      "13": {
        start: {
          line: 45,
          column: 61
        },
        end: {
          line: 45,
          column: 86
        }
      },
      "14": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 48,
          column: 9
        }
      },
      "15": {
        start: {
          line: 47,
          column: 12
        },
        end: {
          line: 47,
          column: 114
        }
      },
      "16": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 82
        }
      },
      "17": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 33
        }
      },
      "18": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 53,
          column: 87
        }
      },
      "19": {
        start: {
          line: 55,
          column: 31
        },
        end: {
          line: 63,
          column: 9
        }
      },
      "20": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 68,
          column: 9
        }
      },
      "21": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 67,
          column: 84
        }
      },
      "22": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 69,
          column: 43
        }
      },
      "23": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 70,
          column: 95
        }
      },
      "24": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 71,
          column: 33
        }
      },
      "25": {
        start: {
          line: 78,
          column: 4
        },
        end: {
          line: 78,
          column: 29
        }
      },
      "26": {
        start: {
          line: 84,
          column: 19
        },
        end: {
          line: 84,
          column: 21
        }
      },
      "27": {
        start: {
          line: 85,
          column: 4
        },
        end: {
          line: 90,
          column: 5
        }
      },
      "28": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 86,
          column: 40
        }
      },
      "29": {
        start: {
          line: 88,
          column: 9
        },
        end: {
          line: 90,
          column: 5
        }
      },
      "30": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 89,
          column: 47
        }
      },
      "31": {
        start: {
          line: 91,
          column: 4
        },
        end: {
          line: 93,
          column: 5
        }
      },
      "32": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 92,
          column: 39
        }
      },
      "33": {
        start: {
          line: 94,
          column: 4
        },
        end: {
          line: 96,
          column: 5
        }
      },
      "34": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 95,
          column: 42
        }
      },
      "35": {
        start: {
          line: 97,
          column: 4
        },
        end: {
          line: 99,
          column: 5
        }
      },
      "36": {
        start: {
          line: 98,
          column: 8
        },
        end: {
          line: 98,
          column: 38
        }
      },
      "37": {
        start: {
          line: 100,
          column: 4
        },
        end: {
          line: 103,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "getEnv",
        decl: {
          start: {
            line: 25,
            column: 15
          },
          end: {
            line: 25,
            column: 21
          }
        },
        loc: {
          start: {
            line: 25,
            column: 44
          },
          end: {
            line: 73,
            column: 1
          }
        },
        line: 25
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 45,
            column: 52
          },
          end: {
            line: 45,
            column: 53
          }
        },
        loc: {
          start: {
            line: 45,
            column: 61
          },
          end: {
            line: 45,
            column: 86
          }
        },
        line: 45
      },
      "2": {
        name: "clearVoiceConfigCache",
        decl: {
          start: {
            line: 77,
            column: 9
          },
          end: {
            line: 77,
            column: 30
          }
        },
        loc: {
          start: {
            line: 77,
            column: 33
          },
          end: {
            line: 79,
            column: 1
          }
        },
        line: 77
      },
      "3": {
        name: "validateVoiceConfig",
        decl: {
          start: {
            line: 83,
            column: 9
          },
          end: {
            line: 83,
            column: 28
          }
        },
        loc: {
          start: {
            line: 83,
            column: 37
          },
          end: {
            line: 104,
            column: 1
          }
        },
        line: 83
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 25,
            column: 22
          },
          end: {
            line: 25,
            column: 42
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 25,
            column: 37
          },
          end: {
            line: 25,
            column: 42
          }
        }],
        line: 25
      },
      "1": {
        loc: {
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 28,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 28,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 26
      },
      "2": {
        loc: {
          start: {
            line: 26,
            column: 8
          },
          end: {
            line: 26,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 26,
            column: 8
          },
          end: {
            line: 26,
            column: 25
          }
        }, {
          start: {
            line: 26,
            column: 29
          },
          end: {
            line: 26,
            column: 42
          }
        }],
        line: 26
      },
      "3": {
        loc: {
          start: {
            line: 39,
            column: 28
          },
          end: {
            line: 39,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 39,
            column: 28
          },
          end: {
            line: 39,
            column: 69
          }
        }, {
          start: {
            line: 39,
            column: 73
          },
          end: {
            line: 39,
            column: 81
          }
        }],
        line: 39
      },
      "4": {
        loc: {
          start: {
            line: 46,
            column: 8
          },
          end: {
            line: 48,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 46,
            column: 8
          },
          end: {
            line: 48,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 46
      },
      "5": {
        loc: {
          start: {
            line: 56,
            column: 22
          },
          end: {
            line: 56,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 56,
            column: 22
          },
          end: {
            line: 56,
            column: 56
          }
        }, {
          start: {
            line: 56,
            column: 60
          },
          end: {
            line: 56,
            column: 62
          }
        }],
        line: 56
      },
      "6": {
        loc: {
          start: {
            line: 57,
            column: 20
          },
          end: {
            line: 57,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 57,
            column: 20
          },
          end: {
            line: 57,
            column: 53
          }
        }, {
          start: {
            line: 57,
            column: 57
          },
          end: {
            line: 57,
            column: 59
          }
        }],
        line: 57
      },
      "7": {
        loc: {
          start: {
            line: 58,
            column: 23
          },
          end: {
            line: 58,
            column: 91
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 58,
            column: 23
          },
          end: {
            line: 58,
            column: 59
          }
        }, {
          start: {
            line: 58,
            column: 63
          },
          end: {
            line: 58,
            column: 91
          }
        }],
        line: 58
      },
      "8": {
        loc: {
          start: {
            line: 59,
            column: 20
          },
          end: {
            line: 59,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 59,
            column: 20
          },
          end: {
            line: 59,
            column: 52
          }
        }, {
          start: {
            line: 59,
            column: 56
          },
          end: {
            line: 59,
            column: 64
          }
        }],
        line: 59
      },
      "9": {
        loc: {
          start: {
            line: 60,
            column: 24
          },
          end: {
            line: 60,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 60,
            column: 24
          },
          end: {
            line: 60,
            column: 61
          }
        }, {
          start: {
            line: 60,
            column: 65
          },
          end: {
            line: 60,
            column: 67
          }
        }],
        line: 60
      },
      "10": {
        loc: {
          start: {
            line: 61,
            column: 27
          },
          end: {
            line: 61,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 61,
            column: 27
          },
          end: {
            line: 61,
            column: 67
          }
        }, {
          start: {
            line: 61,
            column: 71
          },
          end: {
            line: 61,
            column: 88
          }
        }],
        line: 61
      },
      "11": {
        loc: {
          start: {
            line: 62,
            column: 28
          },
          end: {
            line: 62,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 62,
            column: 28
          },
          end: {
            line: 62,
            column: 69
          }
        }, {
          start: {
            line: 62,
            column: 73
          },
          end: {
            line: 62,
            column: 81
          }
        }],
        line: 62
      },
      "12": {
        loc: {
          start: {
            line: 65,
            column: 8
          },
          end: {
            line: 68,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 65,
            column: 8
          },
          end: {
            line: 68,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 65
      },
      "13": {
        loc: {
          start: {
            line: 65,
            column: 12
          },
          end: {
            line: 65,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 65,
            column: 12
          },
          end: {
            line: 65,
            column: 36
          }
        }, {
          start: {
            line: 65,
            column: 40
          },
          end: {
            line: 65,
            column: 62
          }
        }],
        line: 65
      },
      "14": {
        loc: {
          start: {
            line: 85,
            column: 4
          },
          end: {
            line: 90,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 85,
            column: 4
          },
          end: {
            line: 90,
            column: 5
          }
        }, {
          start: {
            line: 88,
            column: 9
          },
          end: {
            line: 90,
            column: 5
          }
        }],
        line: 85
      },
      "15": {
        loc: {
          start: {
            line: 88,
            column: 9
          },
          end: {
            line: 90,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 88,
            column: 9
          },
          end: {
            line: 90,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 88
      },
      "16": {
        loc: {
          start: {
            line: 91,
            column: 4
          },
          end: {
            line: 93,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 91,
            column: 4
          },
          end: {
            line: 93,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 91
      },
      "17": {
        loc: {
          start: {
            line: 94,
            column: 4
          },
          end: {
            line: 96,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 94,
            column: 4
          },
          end: {
            line: 96,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 94
      },
      "18": {
        loc: {
          start: {
            line: 97,
            column: 4
          },
          end: {
            line: 99,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 97,
            column: 4
          },
          end: {
            line: 99,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 97
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/dikshantvashistha/PrepBettr/lib/azure-ai-foundry/voice/foundry-environment.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/dikshantvashistha/PrepBettr/lib/azure-ai-foundry/voice/foundry-environment.ts"],
      sourcesContent: ["/**\n * Azure AI Foundry Environment Configuration\n * \n * Provides a getEnv() utility function that fetches Azure AI Foundry configuration\n * from Azure Key Vault with environment variable fallback.\n * Follows the existing pattern from the project's foundry-config.ts.\n */\n\nimport { getFoundryConfig, type FoundryConfig } from '../config/foundry-config';\n\n/**\n * Interface for environment variables needed by the voice client\n */\nexport interface VoiceEnvironmentConfig {\n  endpoint: string;\n  apiKey: string;\n  projectId: string;\n  region: string;\n  resourceId: string;\n  resourceGroup: string;\n  deploymentName?: string;\n}\n\n/**\n * Cache for environment configuration to avoid repeated Azure Key Vault calls\n */\nlet cachedVoiceConfig: VoiceEnvironmentConfig | null = null;\n\n/**\n * Get environment configuration for voice services\n * Uses Azure Key Vault with environment variable fallback\n * \n * @param forceRefresh - Force refresh the cached configuration\n * @returns Promise<VoiceEnvironmentConfig>\n */\nexport async function getEnv(forceRefresh: boolean = false): Promise<VoiceEnvironmentConfig> {\n  if (cachedVoiceConfig && !forceRefresh) {\n    return cachedVoiceConfig;\n  }\n\n  try {\n    // Use existing foundry config which already handles Key Vault + env fallback\n    const foundryConfig: FoundryConfig = await getFoundryConfig(forceRefresh);\n    \n    cachedVoiceConfig = {\n      endpoint: foundryConfig.endpoint,\n      apiKey: foundryConfig.apiKey,\n      projectId: foundryConfig.projectId,\n      region: foundryConfig.region,\n      resourceId: foundryConfig.resourceId,\n      resourceGroup: foundryConfig.resourceGroup,\n      deploymentName: process.env.AZURE_FOUNDRY_DEPLOYMENT_NAME || 'gpt-4o'\n    };\n\n    // Validate required fields for voice client\n    const requiredFields: (keyof VoiceEnvironmentConfig)[] = [\n      'endpoint', 'apiKey', 'projectId', 'region'\n    ];\n    \n    const missingFields = requiredFields.filter(\n      field => !cachedVoiceConfig![field]\n    );\n\n    if (missingFields.length > 0) {\n      throw new Error(\n        `Missing required Azure AI Foundry voice configuration: ${missingFields.join(', ')}`\n      );\n    }\n\n    console.log('\u2705 Azure AI Foundry voice configuration loaded successfully');\n    return cachedVoiceConfig;\n\n  } catch (error) {\n    console.error('\u274C Failed to load Azure AI Foundry voice configuration:', error);\n    \n    // Fallback: try direct environment variables as last resort\n    const fallbackConfig: VoiceEnvironmentConfig = {\n      endpoint: process.env.AZURE_FOUNDRY_ENDPOINT || '',\n      apiKey: process.env.AZURE_FOUNDRY_API_KEY || '',\n      projectId: process.env.AZURE_FOUNDRY_PROJECT_ID || 'prepbettr-interview-agents',\n      region: process.env.AZURE_FOUNDRY_REGION || 'eastus',\n      resourceId: process.env.AZURE_FOUNDRY_RESOURCE_ID || '',\n      resourceGroup: process.env.AZURE_FOUNDRY_RESOURCE_GROUP || 'PrepBettr_group',\n      deploymentName: process.env.AZURE_FOUNDRY_DEPLOYMENT_NAME || 'gpt-4o'\n    };\n\n    // Final validation\n    if (!fallbackConfig.endpoint || !fallbackConfig.apiKey) {\n      throw new Error(\n        'Critical Azure AI Foundry voice configuration missing. ' +\n        'Ensure AZURE_FOUNDRY_ENDPOINT and AZURE_FOUNDRY_API_KEY are set.'\n      );\n    }\n\n    cachedVoiceConfig = fallbackConfig;\n    console.warn('\u26A0\uFE0F Using fallback environment configuration for Azure AI Foundry voice');\n    return cachedVoiceConfig;\n  }\n}\n\n/**\n * Clear cached configuration (useful for testing)\n */\nexport function clearVoiceConfigCache(): void {\n  cachedVoiceConfig = null;\n}\n\n/**\n * Validate voice environment configuration\n */\nexport function validateVoiceConfig(config: VoiceEnvironmentConfig): { isValid: boolean; errors: string[] } {\n  const errors: string[] = [];\n\n  if (!config.endpoint) {\n    errors.push('Missing endpoint');\n  } else if (!config.endpoint.startsWith('https://')) {\n    errors.push('Endpoint must use HTTPS');\n  }\n\n  if (!config.apiKey) {\n    errors.push('Missing API key');\n  }\n\n  if (!config.projectId) {\n    errors.push('Missing project ID');\n  }\n\n  if (!config.region) {\n    errors.push('Missing region');\n  }\n\n  return {\n    isValid: errors.length === 0,\n    errors\n  };\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "5ce75edcdd1ff3ee8016267ca89daf46dab0fa62"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2l0ixxzlr5 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2l0ixxzlr5();
cov_2l0ixxzlr5().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2l0ixxzlr5().s[1]++;
exports.getEnv = getEnv;
/* istanbul ignore next */
cov_2l0ixxzlr5().s[2]++;
exports.clearVoiceConfigCache = clearVoiceConfigCache;
/* istanbul ignore next */
cov_2l0ixxzlr5().s[3]++;
exports.validateVoiceConfig = validateVoiceConfig;
const foundry_config_1 =
/* istanbul ignore next */
(cov_2l0ixxzlr5().s[4]++, require("../config/foundry-config"));
/**
 * Cache for environment configuration to avoid repeated Azure Key Vault calls
 */
let cachedVoiceConfig =
/* istanbul ignore next */
(cov_2l0ixxzlr5().s[5]++, null);
/**
 * Get environment configuration for voice services
 * Uses Azure Key Vault with environment variable fallback
 *
 * @param forceRefresh - Force refresh the cached configuration
 * @returns Promise<VoiceEnvironmentConfig>
 */
async function getEnv(forceRefresh =
/* istanbul ignore next */
(cov_2l0ixxzlr5().b[0][0]++, false)) {
  /* istanbul ignore next */
  cov_2l0ixxzlr5().f[0]++;
  cov_2l0ixxzlr5().s[6]++;
  if (
  /* istanbul ignore next */
  (cov_2l0ixxzlr5().b[2][0]++, cachedVoiceConfig) &&
  /* istanbul ignore next */
  (cov_2l0ixxzlr5().b[2][1]++, !forceRefresh)) {
    /* istanbul ignore next */
    cov_2l0ixxzlr5().b[1][0]++;
    cov_2l0ixxzlr5().s[7]++;
    return cachedVoiceConfig;
  } else
  /* istanbul ignore next */
  {
    cov_2l0ixxzlr5().b[1][1]++;
  }
  cov_2l0ixxzlr5().s[8]++;
  try {
    // Use existing foundry config which already handles Key Vault + env fallback
    const foundryConfig =
    /* istanbul ignore next */
    (cov_2l0ixxzlr5().s[9]++, await (0, foundry_config_1.getFoundryConfig)(forceRefresh));
    /* istanbul ignore next */
    cov_2l0ixxzlr5().s[10]++;
    cachedVoiceConfig = {
      endpoint: foundryConfig.endpoint,
      apiKey: foundryConfig.apiKey,
      projectId: foundryConfig.projectId,
      region: foundryConfig.region,
      resourceId: foundryConfig.resourceId,
      resourceGroup: foundryConfig.resourceGroup,
      deploymentName:
      /* istanbul ignore next */
      (cov_2l0ixxzlr5().b[3][0]++, process.env.AZURE_FOUNDRY_DEPLOYMENT_NAME) ||
      /* istanbul ignore next */
      (cov_2l0ixxzlr5().b[3][1]++, 'gpt-4o')
    };
    // Validate required fields for voice client
    const requiredFields =
    /* istanbul ignore next */
    (cov_2l0ixxzlr5().s[11]++, ['endpoint', 'apiKey', 'projectId', 'region']);
    const missingFields =
    /* istanbul ignore next */
    (cov_2l0ixxzlr5().s[12]++, requiredFields.filter(field => {
      /* istanbul ignore next */
      cov_2l0ixxzlr5().f[1]++;
      cov_2l0ixxzlr5().s[13]++;
      return !cachedVoiceConfig[field];
    }));
    /* istanbul ignore next */
    cov_2l0ixxzlr5().s[14]++;
    if (missingFields.length > 0) {
      /* istanbul ignore next */
      cov_2l0ixxzlr5().b[4][0]++;
      cov_2l0ixxzlr5().s[15]++;
      throw new Error(`Missing required Azure AI Foundry voice configuration: ${missingFields.join(', ')}`);
    } else
    /* istanbul ignore next */
    {
      cov_2l0ixxzlr5().b[4][1]++;
    }
    cov_2l0ixxzlr5().s[16]++;
    console.log('✅ Azure AI Foundry voice configuration loaded successfully');
    /* istanbul ignore next */
    cov_2l0ixxzlr5().s[17]++;
    return cachedVoiceConfig;
  } catch (error) {
    /* istanbul ignore next */
    cov_2l0ixxzlr5().s[18]++;
    console.error('❌ Failed to load Azure AI Foundry voice configuration:', error);
    // Fallback: try direct environment variables as last resort
    const fallbackConfig =
    /* istanbul ignore next */
    (cov_2l0ixxzlr5().s[19]++, {
      endpoint:
      /* istanbul ignore next */
      (cov_2l0ixxzlr5().b[5][0]++, process.env.AZURE_FOUNDRY_ENDPOINT) ||
      /* istanbul ignore next */
      (cov_2l0ixxzlr5().b[5][1]++, ''),
      apiKey:
      /* istanbul ignore next */
      (cov_2l0ixxzlr5().b[6][0]++, process.env.AZURE_FOUNDRY_API_KEY) ||
      /* istanbul ignore next */
      (cov_2l0ixxzlr5().b[6][1]++, ''),
      projectId:
      /* istanbul ignore next */
      (cov_2l0ixxzlr5().b[7][0]++, process.env.AZURE_FOUNDRY_PROJECT_ID) ||
      /* istanbul ignore next */
      (cov_2l0ixxzlr5().b[7][1]++, 'prepbettr-interview-agents'),
      region:
      /* istanbul ignore next */
      (cov_2l0ixxzlr5().b[8][0]++, process.env.AZURE_FOUNDRY_REGION) ||
      /* istanbul ignore next */
      (cov_2l0ixxzlr5().b[8][1]++, 'eastus'),
      resourceId:
      /* istanbul ignore next */
      (cov_2l0ixxzlr5().b[9][0]++, process.env.AZURE_FOUNDRY_RESOURCE_ID) ||
      /* istanbul ignore next */
      (cov_2l0ixxzlr5().b[9][1]++, ''),
      resourceGroup:
      /* istanbul ignore next */
      (cov_2l0ixxzlr5().b[10][0]++, process.env.AZURE_FOUNDRY_RESOURCE_GROUP) ||
      /* istanbul ignore next */
      (cov_2l0ixxzlr5().b[10][1]++, 'PrepBettr_group'),
      deploymentName:
      /* istanbul ignore next */
      (cov_2l0ixxzlr5().b[11][0]++, process.env.AZURE_FOUNDRY_DEPLOYMENT_NAME) ||
      /* istanbul ignore next */
      (cov_2l0ixxzlr5().b[11][1]++, 'gpt-4o')
    });
    // Final validation
    /* istanbul ignore next */
    cov_2l0ixxzlr5().s[20]++;
    if (
    /* istanbul ignore next */
    (cov_2l0ixxzlr5().b[13][0]++, !fallbackConfig.endpoint) ||
    /* istanbul ignore next */
    (cov_2l0ixxzlr5().b[13][1]++, !fallbackConfig.apiKey)) {
      /* istanbul ignore next */
      cov_2l0ixxzlr5().b[12][0]++;
      cov_2l0ixxzlr5().s[21]++;
      throw new Error('Critical Azure AI Foundry voice configuration missing. ' + 'Ensure AZURE_FOUNDRY_ENDPOINT and AZURE_FOUNDRY_API_KEY are set.');
    } else
    /* istanbul ignore next */
    {
      cov_2l0ixxzlr5().b[12][1]++;
    }
    cov_2l0ixxzlr5().s[22]++;
    cachedVoiceConfig = fallbackConfig;
    /* istanbul ignore next */
    cov_2l0ixxzlr5().s[23]++;
    console.warn('⚠️ Using fallback environment configuration for Azure AI Foundry voice');
    /* istanbul ignore next */
    cov_2l0ixxzlr5().s[24]++;
    return cachedVoiceConfig;
  }
}
/**
 * Clear cached configuration (useful for testing)
 */
function clearVoiceConfigCache() {
  /* istanbul ignore next */
  cov_2l0ixxzlr5().f[2]++;
  cov_2l0ixxzlr5().s[25]++;
  cachedVoiceConfig = null;
}
/**
 * Validate voice environment configuration
 */
function validateVoiceConfig(config) {
  /* istanbul ignore next */
  cov_2l0ixxzlr5().f[3]++;
  const errors =
  /* istanbul ignore next */
  (cov_2l0ixxzlr5().s[26]++, []);
  /* istanbul ignore next */
  cov_2l0ixxzlr5().s[27]++;
  if (!config.endpoint) {
    /* istanbul ignore next */
    cov_2l0ixxzlr5().b[14][0]++;
    cov_2l0ixxzlr5().s[28]++;
    errors.push('Missing endpoint');
  } else {
    /* istanbul ignore next */
    cov_2l0ixxzlr5().b[14][1]++;
    cov_2l0ixxzlr5().s[29]++;
    if (!config.endpoint.startsWith('https://')) {
      /* istanbul ignore next */
      cov_2l0ixxzlr5().b[15][0]++;
      cov_2l0ixxzlr5().s[30]++;
      errors.push('Endpoint must use HTTPS');
    } else
    /* istanbul ignore next */
    {
      cov_2l0ixxzlr5().b[15][1]++;
    }
  }
  /* istanbul ignore next */
  cov_2l0ixxzlr5().s[31]++;
  if (!config.apiKey) {
    /* istanbul ignore next */
    cov_2l0ixxzlr5().b[16][0]++;
    cov_2l0ixxzlr5().s[32]++;
    errors.push('Missing API key');
  } else
  /* istanbul ignore next */
  {
    cov_2l0ixxzlr5().b[16][1]++;
  }
  cov_2l0ixxzlr5().s[33]++;
  if (!config.projectId) {
    /* istanbul ignore next */
    cov_2l0ixxzlr5().b[17][0]++;
    cov_2l0ixxzlr5().s[34]++;
    errors.push('Missing project ID');
  } else
  /* istanbul ignore next */
  {
    cov_2l0ixxzlr5().b[17][1]++;
  }
  cov_2l0ixxzlr5().s[35]++;
  if (!config.region) {
    /* istanbul ignore next */
    cov_2l0ixxzlr5().b[18][0]++;
    cov_2l0ixxzlr5().s[36]++;
    errors.push('Missing region');
  } else
  /* istanbul ignore next */
  {
    cov_2l0ixxzlr5().b[18][1]++;
  }
  cov_2l0ixxzlr5().s[37]++;
  return {
    isValid: errors.length === 0,
    errors
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,