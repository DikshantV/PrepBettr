b2430d6f411a5b50f229e23a04079869
"use strict";

// lib/services/sendgrid-service.ts
/* istanbul ignore next */
function cov_51eclg1su() {
  var path = "/Users/dikshantvashistha/PrepBettr/lib/services/sendgrid-service.ts";
  var hash = "376840b7e215b0b0dc961a7c00897c2e726e8417";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dikshantvashistha/PrepBettr/lib/services/sendgrid-service.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 22
        },
        end: {
          line: 5,
          column: 1
        }
      },
      "1": {
        start: {
          line: 4,
          column: 4
        },
        end: {
          line: 4,
          column: 62
        }
      },
      "2": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 62
        }
      },
      "3": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 7,
          column: 83
        }
      },
      "4": {
        start: {
          line: 8,
          column: 15
        },
        end: {
          line: 8,
          column: 57
        }
      },
      "5": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 35
        }
      },
      "6": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 91
        }
      },
      "7": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 34
        }
      },
      "8": {
        start: {
          line: 16,
          column: 23
        },
        end: {
          line: 16,
          column: 51
        }
      },
      "9": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 20,
          column: 9
        }
      },
      "10": {
        start: {
          line: 18,
          column: 12
        },
        end: {
          line: 18,
          column: 93
        }
      },
      "11": {
        start: {
          line: 19,
          column: 12
        },
        end: {
          line: 19,
          column: 19
        }
      },
      "12": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 28,
          column: 9
        }
      },
      "13": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 22,
          column: 45
        }
      },
      "14": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 23,
          column: 38
        }
      },
      "15": {
        start: {
          line: 24,
          column: 12
        },
        end: {
          line: 24,
          column: 69
        }
      },
      "16": {
        start: {
          line: 27,
          column: 12
        },
        end: {
          line: 27,
          column: 67
        }
      },
      "17": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 40,
          column: 9
        }
      },
      "18": {
        start: {
          line: 36,
          column: 12
        },
        end: {
          line: 39,
          column: 14
        }
      },
      "19": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 120,
          column: 9
        }
      },
      "20": {
        start: {
          line: 42,
          column: 111
        },
        end: {
          line: 42,
          column: 117
        }
      },
      "21": {
        start: {
          line: 44,
          column: 12
        },
        end: {
          line: 49,
          column: 13
        }
      },
      "22": {
        start: {
          line: 45,
          column: 16
        },
        end: {
          line: 48,
          column: 18
        }
      },
      "23": {
        start: {
          line: 51,
          column: 31
        },
        end: {
          line: 51,
          column: 60
        }
      },
      "24": {
        start: {
          line: 53,
          column: 31
        },
        end: {
          line: 53,
          column: 59
        }
      },
      "25": {
        start: {
          line: 54,
          column: 34
        },
        end: {
          line: 54,
          column: 85
        }
      },
      "26": {
        start: {
          line: 54,
          column: 61
        },
        end: {
          line: 54,
          column: 84
        }
      },
      "27": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 60,
          column: 13
        }
      },
      "28": {
        start: {
          line: 56,
          column: 16
        },
        end: {
          line: 59,
          column: 18
        }
      },
      "29": {
        start: {
          line: 62,
          column: 29
        },
        end: {
          line: 62,
          column: 196
        }
      },
      "30": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 77,
          column: 13
        }
      },
      "31": {
        start: {
          line: 65,
          column: 16
        },
        end: {
          line: 65,
          column: 49
        }
      },
      "32": {
        start: {
          line: 66,
          column: 16
        },
        end: {
          line: 68,
          column: 17
        }
      },
      "33": {
        start: {
          line: 67,
          column: 20
        },
        end: {
          line: 67,
          column: 71
        }
      },
      "34": {
        start: {
          line: 71,
          column: 16
        },
        end: {
          line: 73,
          column: 17
        }
      },
      "35": {
        start: {
          line: 72,
          column: 20
        },
        end: {
          line: 72,
          column: 41
        }
      },
      "36": {
        start: {
          line: 74,
          column: 16
        },
        end: {
          line: 76,
          column: 17
        }
      },
      "37": {
        start: {
          line: 75,
          column: 20
        },
        end: {
          line: 75,
          column: 41
        }
      },
      "38": {
        start: {
          line: 78,
          column: 31
        },
        end: {
          line: 78,
          column: 66
        }
      },
      "39": {
        start: {
          line: 79,
          column: 12
        },
        end: {
          line: 79,
          column: 124
        }
      },
      "40": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 83,
          column: 14
        }
      },
      "41": {
        start: {
          line: 86,
          column: 12
        },
        end: {
          line: 86,
          column: 70
        }
      },
      "42": {
        start: {
          line: 87,
          column: 31
        },
        end: {
          line: 87,
          column: 53
        }
      },
      "43": {
        start: {
          line: 89,
          column: 12
        },
        end: {
          line: 115,
          column: 13
        }
      },
      "44": {
        start: {
          line: 90,
          column: 45
        },
        end: {
          line: 90,
          column: 59
        }
      },
      "45": {
        start: {
          line: 91,
          column: 16
        },
        end: {
          line: 91,
          column: 93
        }
      },
      "46": {
        start: {
          line: 93,
          column: 16
        },
        end: {
          line: 111,
          column: 17
        }
      },
      "47": {
        start: {
          line: 95,
          column: 24
        },
        end: {
          line: 95,
          column: 78
        }
      },
      "48": {
        start: {
          line: 96,
          column: 24
        },
        end: {
          line: 96,
          column: 30
        }
      },
      "49": {
        start: {
          line: 98,
          column: 24
        },
        end: {
          line: 98,
          column: 79
        }
      },
      "50": {
        start: {
          line: 99,
          column: 24
        },
        end: {
          line: 99,
          column: 30
        }
      },
      "51": {
        start: {
          line: 101,
          column: 24
        },
        end: {
          line: 101,
          column: 78
        }
      },
      "52": {
        start: {
          line: 102,
          column: 24
        },
        end: {
          line: 102,
          column: 30
        }
      },
      "53": {
        start: {
          line: 104,
          column: 24
        },
        end: {
          line: 104,
          column: 65
        }
      },
      "54": {
        start: {
          line: 105,
          column: 24
        },
        end: {
          line: 105,
          column: 30
        }
      },
      "55": {
        start: {
          line: 107,
          column: 24
        },
        end: {
          line: 107,
          column: 61
        }
      },
      "56": {
        start: {
          line: 108,
          column: 24
        },
        end: {
          line: 108,
          column: 30
        }
      },
      "57": {
        start: {
          line: 110,
          column: 24
        },
        end: {
          line: 110,
          column: 242
        }
      },
      "58": {
        start: {
          line: 113,
          column: 17
        },
        end: {
          line: 115,
          column: 13
        }
      },
      "59": {
        start: {
          line: 114,
          column: 16
        },
        end: {
          line: 114,
          column: 45
        }
      },
      "60": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 119,
          column: 14
        }
      },
      "61": {
        start: {
          line: 126,
          column: 24
        },
        end: {
          line: 131,
          column: 9
        }
      },
      "62": {
        start: {
          line: 133,
          column: 26
        },
        end: {
          line: 133,
          column: 30
        }
      },
      "63": {
        start: {
          line: 134,
          column: 24
        },
        end: {
          line: 134,
          column: 26
        }
      },
      "64": {
        start: {
          line: 135,
          column: 8
        },
        end: {
          line: 137,
          column: 9
        }
      },
      "65": {
        start: {
          line: 135,
          column: 21
        },
        end: {
          line: 135,
          column: 22
        }
      },
      "66": {
        start: {
          line: 136,
          column: 12
        },
        end: {
          line: 136,
          column: 61
        }
      },
      "67": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 164,
          column: 9
        }
      },
      "68": {
        start: {
          line: 139,
          column: 12
        },
        end: {
          line: 163,
          column: 13
        }
      },
      "69": {
        start: {
          line: 140,
          column: 36
        },
        end: {
          line: 148,
          column: 17
        }
      },
      "70": {
        start: {
          line: 149,
          column: 31
        },
        end: {
          line: 149,
          column: 64
        }
      },
      "71": {
        start: {
          line: 150,
          column: 16
        },
        end: {
          line: 157,
          column: 17
        }
      },
      "72": {
        start: {
          line: 151,
          column: 20
        },
        end: {
          line: 151,
          column: 49
        }
      },
      "73": {
        start: {
          line: 154,
          column: 20
        },
        end: {
          line: 154,
          column: 50
        }
      },
      "74": {
        start: {
          line: 155,
          column: 20
        },
        end: {
          line: 155,
          column: 73
        }
      },
      "75": {
        start: {
          line: 156,
          column: 20
        },
        end: {
          line: 156,
          column: 44
        }
      },
      "76": {
        start: {
          line: 160,
          column: 16
        },
        end: {
          line: 160,
          column: 46
        }
      },
      "77": {
        start: {
          line: 161,
          column: 16
        },
        end: {
          line: 161,
          column: 94
        }
      },
      "78": {
        start: {
          line: 162,
          column: 16
        },
        end: {
          line: 162,
          column: 40
        }
      },
      "79": {
        start: {
          line: 165,
          column: 8
        },
        end: {
          line: 165,
          column: 23
        }
      },
      "80": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 193,
          column: 9
        }
      },
      "81": {
        start: {
          line: 175,
          column: 12
        },
        end: {
          line: 175,
          column: 126
        }
      },
      "82": {
        start: {
          line: 177,
          column: 12
        },
        end: {
          line: 180,
          column: 13
        }
      },
      "83": {
        start: {
          line: 178,
          column: 16
        },
        end: {
          line: 178,
          column: 95
        }
      },
      "84": {
        start: {
          line: 179,
          column: 16
        },
        end: {
          line: 179,
          column: 41
        }
      },
      "85": {
        start: {
          line: 182,
          column: 12
        },
        end: {
          line: 185,
          column: 14
        }
      },
      "86": {
        start: {
          line: 188,
          column: 12
        },
        end: {
          line: 188,
          column: 67
        }
      },
      "87": {
        start: {
          line: 189,
          column: 12
        },
        end: {
          line: 192,
          column: 14
        }
      },
      "88": {
        start: {
          line: 199,
          column: 8
        },
        end: {
          line: 204,
          column: 9
        }
      },
      "89": {
        start: {
          line: 200,
          column: 12
        },
        end: {
          line: 203,
          column: 14
        }
      },
      "90": {
        start: {
          line: 205,
          column: 8
        },
        end: {
          line: 232,
          column: 9
        }
      },
      "91": {
        start: {
          line: 208,
          column: 31
        },
        end: {
          line: 213,
          column: 14
        }
      },
      "92": {
        start: {
          line: 216,
          column: 12
        },
        end: {
          line: 219,
          column: 13
        }
      },
      "93": {
        start: {
          line: 217,
          column: 16
        },
        end: {
          line: 217,
          column: 97
        }
      },
      "94": {
        start: {
          line: 218,
          column: 16
        },
        end: {
          line: 218,
          column: 41
        }
      },
      "95": {
        start: {
          line: 220,
          column: 12
        },
        end: {
          line: 220,
          column: 72
        }
      },
      "96": {
        start: {
          line: 221,
          column: 12
        },
        end: {
          line: 224,
          column: 14
        }
      },
      "97": {
        start: {
          line: 227,
          column: 12
        },
        end: {
          line: 227,
          column: 69
        }
      },
      "98": {
        start: {
          line: 228,
          column: 12
        },
        end: {
          line: 231,
          column: 14
        }
      },
      "99": {
        start: {
          line: 238,
          column: 8
        },
        end: {
          line: 246,
          column: 11
        }
      },
      "100": {
        start: {
          line: 252,
          column: 8
        },
        end: {
          line: 270,
          column: 9
        }
      },
      "101": {
        start: {
          line: 255,
          column: 12
        },
        end: {
          line: 255,
          column: 83
        }
      },
      "102": {
        start: {
          line: 256,
          column: 12
        },
        end: {
          line: 263,
          column: 14
        }
      },
      "103": {
        start: {
          line: 266,
          column: 12
        },
        end: {
          line: 269,
          column: 14
        }
      },
      "104": {
        start: {
          line: 273,
          column: 0
        },
        end: {
          line: 273,
          column: 42
        }
      },
      "105": {
        start: {
          line: 275,
          column: 0
        },
        end: {
          line: 275,
          column: 48
        }
      },
      "106": {
        start: {
          line: 277,
          column: 0
        },
        end: {
          line: 277,
          column: 48
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 3,
            column: 56
          },
          end: {
            line: 3,
            column: 57
          }
        },
        loc: {
          start: {
            line: 3,
            column: 71
          },
          end: {
            line: 5,
            column: 1
          }
        },
        line: 3
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 5
          }
        },
        loc: {
          start: {
            line: 10,
            column: 18
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 10
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 25
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        },
        loc: {
          start: {
            line: 33,
            column: 28
          },
          end: {
            line: 121,
            column: 5
          }
        },
        line: 33
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 54,
            column: 52
          },
          end: {
            line: 54,
            column: 53
          }
        },
        loc: {
          start: {
            line: 54,
            column: 61
          },
          end: {
            line: 54,
            column: 84
          }
        },
        line: 54
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 125,
            column: 4
          },
          end: {
            line: 125,
            column: 5
          }
        },
        loc: {
          start: {
            line: 125,
            column: 96
          },
          end: {
            line: 166,
            column: 5
          }
        },
        line: 125
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 171,
            column: 4
          },
          end: {
            line: 171,
            column: 5
          }
        },
        loc: {
          start: {
            line: 171,
            column: 36
          },
          end: {
            line: 194,
            column: 5
          }
        },
        line: 171
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 198,
            column: 4
          },
          end: {
            line: 198,
            column: 5
          }
        },
        loc: {
          start: {
            line: 198,
            column: 27
          },
          end: {
            line: 233,
            column: 5
          }
        },
        line: 198
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 237,
            column: 4
          },
          end: {
            line: 237,
            column: 5
          }
        },
        loc: {
          start: {
            line: 237,
            column: 96
          },
          end: {
            line: 247,
            column: 5
          }
        },
        line: 237
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 251,
            column: 4
          },
          end: {
            line: 251,
            column: 5
          }
        },
        loc: {
          start: {
            line: 251,
            column: 21
          },
          end: {
            line: 271,
            column: 5
          }
        },
        line: 251
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 3,
            column: 22
          },
          end: {
            line: 5,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 23
          },
          end: {
            line: 3,
            column: 27
          }
        }, {
          start: {
            line: 3,
            column: 31
          },
          end: {
            line: 3,
            column: 51
          }
        }, {
          start: {
            line: 3,
            column: 56
          },
          end: {
            line: 5,
            column: 1
          }
        }],
        line: 3
      },
      "1": {
        loc: {
          start: {
            line: 4,
            column: 11
          },
          end: {
            line: 4,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 4,
            column: 37
          },
          end: {
            line: 4,
            column: 40
          }
        }, {
          start: {
            line: 4,
            column: 43
          },
          end: {
            line: 4,
            column: 61
          }
        }],
        line: 4
      },
      "2": {
        loc: {
          start: {
            line: 4,
            column: 12
          },
          end: {
            line: 4,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 12
          },
          end: {
            line: 4,
            column: 15
          }
        }, {
          start: {
            line: 4,
            column: 19
          },
          end: {
            line: 4,
            column: 33
          }
        }],
        line: 4
      },
      "3": {
        loc: {
          start: {
            line: 12,
            column: 32
          },
          end: {
            line: 12,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 12,
            column: 32
          },
          end: {
            line: 12,
            column: 63
          }
        }, {
          start: {
            line: 12,
            column: 67
          },
          end: {
            line: 12,
            column: 90
          }
        }],
        line: 12
      },
      "4": {
        loc: {
          start: {
            line: 17,
            column: 8
          },
          end: {
            line: 20,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 17,
            column: 8
          },
          end: {
            line: 20,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 17
      },
      "5": {
        loc: {
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 40,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 40,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 35
      },
      "6": {
        loc: {
          start: {
            line: 44,
            column: 12
          },
          end: {
            line: 49,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 12
          },
          end: {
            line: 49,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 44
      },
      "7": {
        loc: {
          start: {
            line: 44,
            column: 16
          },
          end: {
            line: 44,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 44,
            column: 16
          },
          end: {
            line: 44,
            column: 21
          }
        }, {
          start: {
            line: 44,
            column: 25
          },
          end: {
            line: 44,
            column: 30
          }
        }, {
          start: {
            line: 44,
            column: 34
          },
          end: {
            line: 44,
            column: 45
          }
        }],
        line: 44
      },
      "8": {
        loc: {
          start: {
            line: 51,
            column: 31
          },
          end: {
            line: 51,
            column: 60
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 51,
            column: 51
          },
          end: {
            line: 51,
            column: 53
          }
        }, {
          start: {
            line: 51,
            column: 56
          },
          end: {
            line: 51,
            column: 60
          }
        }],
        line: 51
      },
      "9": {
        loc: {
          start: {
            line: 55,
            column: 12
          },
          end: {
            line: 60,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 12
          },
          end: {
            line: 60,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 55
      },
      "10": {
        loc: {
          start: {
            line: 62,
            column: 65
          },
          end: {
            line: 62,
            column: 94
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 62,
            column: 65
          },
          end: {
            line: 62,
            column: 69
          }
        }, {
          start: {
            line: 62,
            column: 73
          },
          end: {
            line: 62,
            column: 94
          }
        }],
        line: 62
      },
      "11": {
        loc: {
          start: {
            line: 62,
            column: 133
          },
          end: {
            line: 62,
            column: 161
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 62,
            column: 133
          },
          end: {
            line: 62,
            column: 143
          }
        }, {
          start: {
            line: 62,
            column: 147
          },
          end: {
            line: 62,
            column: 161
          }
        }],
        line: 62
      },
      "12": {
        loc: {
          start: {
            line: 62,
            column: 166
          },
          end: {
            line: 62,
            column: 194
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 62,
            column: 166
          },
          end: {
            line: 62,
            column: 176
          }
        }, {
          start: {
            line: 62,
            column: 180
          },
          end: {
            line: 62,
            column: 194
          }
        }],
        line: 62
      },
      "13": {
        loc: {
          start: {
            line: 64,
            column: 12
          },
          end: {
            line: 77,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 64,
            column: 12
          },
          end: {
            line: 77,
            column: 13
          }
        }, {
          start: {
            line: 70,
            column: 17
          },
          end: {
            line: 77,
            column: 13
          }
        }],
        line: 64
      },
      "14": {
        loc: {
          start: {
            line: 66,
            column: 16
          },
          end: {
            line: 68,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 66,
            column: 16
          },
          end: {
            line: 68,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 66
      },
      "15": {
        loc: {
          start: {
            line: 71,
            column: 16
          },
          end: {
            line: 73,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 71,
            column: 16
          },
          end: {
            line: 73,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 71
      },
      "16": {
        loc: {
          start: {
            line: 74,
            column: 16
          },
          end: {
            line: 76,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 74,
            column: 16
          },
          end: {
            line: 76,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 74
      },
      "17": {
        loc: {
          start: {
            line: 82,
            column: 27
          },
          end: {
            line: 82,
            column: 142
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 82,
            column: 27
          },
          end: {
            line: 82,
            column: 59
          }
        }, {
          start: {
            line: 82,
            column: 64
          },
          end: {
            line: 82,
            column: 141
          }
        }],
        line: 82
      },
      "18": {
        loc: {
          start: {
            line: 82,
            column: 64
          },
          end: {
            line: 82,
            column: 141
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 82,
            column: 119
          },
          end: {
            line: 82,
            column: 125
          }
        }, {
          start: {
            line: 82,
            column: 128
          },
          end: {
            line: 82,
            column: 141
          }
        }],
        line: 82
      },
      "19": {
        loc: {
          start: {
            line: 82,
            column: 64
          },
          end: {
            line: 82,
            column: 116
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 82,
            column: 64
          },
          end: {
            line: 82,
            column: 99
          }
        }, {
          start: {
            line: 82,
            column: 103
          },
          end: {
            line: 82,
            column: 116
          }
        }],
        line: 82
      },
      "20": {
        loc: {
          start: {
            line: 89,
            column: 12
          },
          end: {
            line: 115,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 89,
            column: 12
          },
          end: {
            line: 115,
            column: 13
          }
        }, {
          start: {
            line: 113,
            column: 17
          },
          end: {
            line: 115,
            column: 13
          }
        }],
        line: 89
      },
      "21": {
        loc: {
          start: {
            line: 93,
            column: 16
          },
          end: {
            line: 111,
            column: 17
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 94,
            column: 20
          },
          end: {
            line: 96,
            column: 30
          }
        }, {
          start: {
            line: 97,
            column: 20
          },
          end: {
            line: 99,
            column: 30
          }
        }, {
          start: {
            line: 100,
            column: 20
          },
          end: {
            line: 102,
            column: 30
          }
        }, {
          start: {
            line: 103,
            column: 20
          },
          end: {
            line: 105,
            column: 30
          }
        }, {
          start: {
            line: 106,
            column: 20
          },
          end: {
            line: 108,
            column: 30
          }
        }, {
          start: {
            line: 109,
            column: 20
          },
          end: {
            line: 110,
            column: 242
          }
        }],
        line: 93
      },
      "22": {
        loc: {
          start: {
            line: 110,
            column: 58
          },
          end: {
            line: 110,
            column: 239
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 110,
            column: 59
          },
          end: {
            line: 110,
            column: 219
          }
        }, {
          start: {
            line: 110,
            column: 224
          },
          end: {
            line: 110,
            column: 239
          }
        }],
        line: 110
      },
      "23": {
        loc: {
          start: {
            line: 110,
            column: 59
          },
          end: {
            line: 110,
            column: 219
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 110,
            column: 200
          },
          end: {
            line: 110,
            column: 206
          }
        }, {
          start: {
            line: 110,
            column: 209
          },
          end: {
            line: 110,
            column: 219
          }
        }],
        line: 110
      },
      "24": {
        loc: {
          start: {
            line: 110,
            column: 59
          },
          end: {
            line: 110,
            column: 197
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 110,
            column: 59
          },
          end: {
            line: 110,
            column: 180
          }
        }, {
          start: {
            line: 110,
            column: 184
          },
          end: {
            line: 110,
            column: 197
          }
        }],
        line: 110
      },
      "25": {
        loc: {
          start: {
            line: 110,
            column: 65
          },
          end: {
            line: 110,
            column: 170
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 110,
            column: 156
          },
          end: {
            line: 110,
            column: 162
          }
        }, {
          start: {
            line: 110,
            column: 165
          },
          end: {
            line: 110,
            column: 170
          }
        }],
        line: 110
      },
      "26": {
        loc: {
          start: {
            line: 110,
            column: 65
          },
          end: {
            line: 110,
            column: 153
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 110,
            column: 65
          },
          end: {
            line: 110,
            column: 136
          }
        }, {
          start: {
            line: 110,
            column: 140
          },
          end: {
            line: 110,
            column: 153
          }
        }],
        line: 110
      },
      "27": {
        loc: {
          start: {
            line: 110,
            column: 71
          },
          end: {
            line: 110,
            column: 126
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 110,
            column: 106
          },
          end: {
            line: 110,
            column: 112
          }
        }, {
          start: {
            line: 110,
            column: 115
          },
          end: {
            line: 110,
            column: 126
          }
        }],
        line: 110
      },
      "28": {
        loc: {
          start: {
            line: 110,
            column: 71
          },
          end: {
            line: 110,
            column: 103
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 110,
            column: 71
          },
          end: {
            line: 110,
            column: 84
          }
        }, {
          start: {
            line: 110,
            column: 88
          },
          end: {
            line: 110,
            column: 103
          }
        }],
        line: 110
      },
      "29": {
        loc: {
          start: {
            line: 113,
            column: 17
          },
          end: {
            line: 115,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 113,
            column: 17
          },
          end: {
            line: 115,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 113
      },
      "30": {
        loc: {
          start: {
            line: 150,
            column: 16
          },
          end: {
            line: 157,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 150,
            column: 16
          },
          end: {
            line: 157,
            column: 17
          }
        }, {
          start: {
            line: 153,
            column: 21
          },
          end: {
            line: 157,
            column: 17
          }
        }],
        line: 150
      },
      "31": {
        loc: {
          start: {
            line: 155,
            column: 40
          },
          end: {
            line: 155,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 155,
            column: 40
          },
          end: {
            line: 155,
            column: 52
          }
        }, {
          start: {
            line: 155,
            column: 56
          },
          end: {
            line: 155,
            column: 71
          }
        }],
        line: 155
      },
      "32": {
        loc: {
          start: {
            line: 161,
            column: 36
          },
          end: {
            line: 161,
            column: 92
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 161,
            column: 61
          },
          end: {
            line: 161,
            column: 74
          }
        }, {
          start: {
            line: 161,
            column: 77
          },
          end: {
            line: 161,
            column: 92
          }
        }],
        line: 161
      },
      "33": {
        loc: {
          start: {
            line: 177,
            column: 12
          },
          end: {
            line: 180,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 177,
            column: 12
          },
          end: {
            line: 180,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 177
      },
      "34": {
        loc: {
          start: {
            line: 191,
            column: 23
          },
          end: {
            line: 191,
            column: 96
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 191,
            column: 48
          },
          end: {
            line: 191,
            column: 61
          }
        }, {
          start: {
            line: 191,
            column: 64
          },
          end: {
            line: 191,
            column: 96
          }
        }],
        line: 191
      },
      "35": {
        loc: {
          start: {
            line: 199,
            column: 8
          },
          end: {
            line: 204,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 199,
            column: 8
          },
          end: {
            line: 204,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 199
      },
      "36": {
        loc: {
          start: {
            line: 216,
            column: 12
          },
          end: {
            line: 219,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 216,
            column: 12
          },
          end: {
            line: 219,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 216
      },
      "37": {
        loc: {
          start: {
            line: 216,
            column: 16
          },
          end: {
            line: 216,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 216,
            column: 16
          },
          end: {
            line: 216,
            column: 32
          }
        }, {
          start: {
            line: 216,
            column: 36
          },
          end: {
            line: 216,
            column: 78
          }
        }],
        line: 216
      },
      "38": {
        loc: {
          start: {
            line: 230,
            column: 23
          },
          end: {
            line: 230,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 230,
            column: 48
          },
          end: {
            line: 230,
            column: 61
          }
        }, {
          start: {
            line: 230,
            column: 64
          },
          end: {
            line: 230,
            column: 88
          }
        }],
        line: 230
      },
      "39": {
        loc: {
          start: {
            line: 268,
            column: 23
          },
          end: {
            line: 268,
            column: 85
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 268,
            column: 48
          },
          end: {
            line: 268,
            column: 61
          }
        }, {
          start: {
            line: 268,
            column: 64
          },
          end: {
            line: 268,
            column: 85
          }
        }],
        line: 268
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0, 0, 0, 0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/dikshantvashistha/PrepBettr/lib/services/sendgrid-service.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/dikshantvashistha/PrepBettr/lib/services/sendgrid-service.ts"],
      sourcesContent: ["// lib/services/sendgrid-service.ts\n\nimport sgMail from '@sendgrid/mail';\nimport { MailDataRequired, MailData } from '@sendgrid/helpers/classes/mail';\n\nexport interface EmailParams {\n  to: string | string[];\n  subject: string;\n  html?: string;\n  text?: string;\n  from?: string;\n  templateId?: string;\n  dynamicTemplateData?: Record<string, any>;\n  categories?: string[];\n  customArgs?: Record<string, string>;\n}\n\nexport class SendGridService {\n  private defaultFromEmail: string;\n  private isInitialized: boolean = false;\n\n  constructor() {\n    this.defaultFromEmail = process.env.SENDGRID_FROM_EMAIL || 'contact@prepbettr.com';\n    this.initializeSendGrid();\n  }\n\n  private initializeSendGrid() {\n    const apiKey = process.env.SENDGRID_API_KEY;\n    \n    if (!apiKey) {\n      console.warn('SENDGRID_API_KEY not found. Email functionality will be limited.');\n      return;\n    }\n\n    try {\n      sgMail.setApiKey(apiKey);\n      this.isInitialized = true;\n      console.log('SendGrid service initialized successfully');\n    } catch (error) {\n      console.error('Failed to initialize SendGrid:', error);\n    }\n  }\n\n  /**\n   * Send a single email using SendGrid\n   */\n  async sendEmail(params: EmailParams): Promise<{ success: boolean; messageId?: string; error?: string }> {\n    if (!this.isInitialized) {\n      return {\n        success: false,\n        error: 'SendGrid service not initialized. Check SENDGRID_API_KEY.'\n      };\n    }\n\n    try {\n      const { to, subject, html, text, from, templateId, dynamicTemplateData, categories, customArgs } = params;\n\n      // Ensure we have either HTML/text content or a template\n      if (!html && !text && !templateId) {\n        return {\n          success: false,\n          error: 'Either HTML/text content or templateId must be provided'\n        };\n      }\n\n      // Convert single recipient to array for consistent handling\n      const recipients = Array.isArray(to) ? to : [to];\n\n      // Validate email addresses\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      const invalidEmails = recipients.filter(email => !emailRegex.test(email));\n      if (invalidEmails.length > 0) {\n        return {\n          success: false,\n          error: `Invalid email addresses: ${invalidEmails.join(', ')}`\n        };\n      }\n\n      // Build email data\n      const mailData: MailData = {\n        from: from || this.defaultFromEmail,\n        to: recipients,\n        subject: subject,\n        ...(categories && { categories }),\n        ...(customArgs && { customArgs }),\n      };\n\n      // Add content based on what's provided\n      if (templateId) {\n        mailData.templateId = templateId;\n        if (dynamicTemplateData) {\n          mailData.dynamicTemplateData = dynamicTemplateData;\n        }\n      } else {\n        if (html) {\n          mailData.html = html;\n        }\n        if (text) {\n          mailData.text = text;\n        }\n      }\n\n      const [response] = await sgMail.send(mailData as MailDataRequired);\n\n      console.log(`Email sent successfully via SendGrid to ${recipients.join(', ')}. Status: ${response.statusCode}`);\n\n      return {\n        success: true,\n        messageId: response.headers['x-message-id'] || response.statusCode?.toString(),\n      };\n\n    } catch (error: any) {\n      console.error('Error sending email via SendGrid:', error);\n      \n      let errorMessage = 'Failed to send email';\n      \n      // Handle SendGrid specific errors\n      if (error.response) {\n        const { statusCode, body } = error.response;\n        errorMessage = `SendGrid API error (${statusCode}): ${JSON.stringify(body)}`;\n        \n        // Handle specific error codes\n        switch (statusCode) {\n          case 400:\n            errorMessage = 'Bad request - check email parameters';\n            break;\n          case 401:\n            errorMessage = 'Unauthorized - check SendGrid API key';\n            break;\n          case 403:\n            errorMessage = 'Forbidden - insufficient permissions';\n            break;\n          case 413:\n            errorMessage = 'Email content too large';\n            break;\n          case 429:\n            errorMessage = 'Rate limit exceeded';\n            break;\n          default:\n            errorMessage = `SendGrid error: ${body?.errors?.[0]?.message || 'Unknown error'}`;\n        }\n      } else if (error.message) {\n        errorMessage = error.message;\n      }\n\n      return {\n        success: false,\n        error: errorMessage,\n      };\n    }\n  }\n\n  /**\n   * Send bulk emails (SendGrid supports up to 1000 personalizations per request)\n   */\n  async sendBulkEmail(\n    recipients: string[],\n    subject: string,\n    html?: string,\n    text?: string,\n    from?: string,\n    templateId?: string,\n    dynamicTemplateData?: Record<string, any>\n  ): Promise<{ success: boolean; sent: number; failed: string[]; errors: string[] }> {\n    const results = {\n      success: true,\n      sent: 0,\n      failed: [] as string[],\n      errors: [] as string[],\n    };\n\n    // SendGrid allows up to 1000 personalizations per request\n    const batchSize = 1000;\n    const batches = [];\n\n    for (let i = 0; i < recipients.length; i += batchSize) {\n      batches.push(recipients.slice(i, i + batchSize));\n    }\n\n    for (const batch of batches) {\n      try {\n        const emailParams: EmailParams = {\n          to: batch,\n          subject,\n          html,\n          text,\n          from,\n          templateId,\n          dynamicTemplateData\n        };\n\n        const result = await this.sendEmail(emailParams);\n\n        if (result.success) {\n          results.sent += batch.length;\n        } else {\n          results.failed.push(...batch);\n          results.errors.push(result.error || 'Unknown error');\n          results.success = false;\n        }\n      } catch (error) {\n        results.failed.push(...batch);\n        results.errors.push(error instanceof Error ? error.message : 'Unknown error');\n        results.success = false;\n      }\n    }\n\n    return results;\n  }\n\n  /**\n   * Verify an email address with SendGrid (for sender verification)\n   * Note: SendGrid handles verification differently than SES\n   */\n  async verifyEmailAddress(email: string): Promise<{ success: boolean; error?: string }> {\n    try {\n      // SendGrid doesn't require email verification in the same way as SES\n      // This is handled through sender authentication and domain verification\n      console.log(`Email verification requested for ${email}. Ensure sender authentication is configured in SendGrid.`);\n      \n      // For development/testing, we can simulate verification\n      if (process.env.NODE_ENV === 'development') {\n        console.log(`Simulated verification success for ${email} in development mode`);\n        return { success: true };\n      }\n\n      // In production, sender verification should be handled via SendGrid dashboard\n      return { \n        success: true,\n        error: 'Sender verification should be configured in SendGrid dashboard'\n      };\n    } catch (error) {\n      console.error('Error with email verification:', error);\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Failed to verify email address',\n      };\n    }\n  }\n\n  /**\n   * Check if SendGrid is properly configured\n   */\n  async testConnection(): Promise<{ success: boolean; error?: string }> {\n    if (!this.isInitialized) {\n      return {\n        success: false,\n        error: 'SendGrid service not initialized. Check SENDGRID_API_KEY.'\n      };\n    }\n\n    try {\n      // Test connection by attempting to send a test email to a test address\n      // In a real implementation, you might want to use SendGrid's API to check account status\n      const testResult = await this.sendEmail({\n        to: 'test@example.com',\n        subject: 'SendGrid Connection Test',\n        text: 'This is a connection test. This email should not be delivered.',\n        html: '<p>This is a connection test. This email should not be delivered.</p>'\n      });\n\n      // Even if the test email \"fails\" due to invalid recipient, \n      // a successful API response indicates the connection is working\n      if (testResult.error && testResult.error.includes('Invalid email')) {\n        console.log('SendGrid connection test successful (invalid test email expected)');\n        return { success: true };\n      }\n\n      console.log('SendGrid connection test result:', testResult);\n      \n      return { \n        success: true,\n        error: testResult.error \n      };\n    } catch (error) {\n      console.error('SendGrid connection test failed:', error);\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Connection test failed',\n      };\n    }\n  }\n\n  /**\n   * Send email using SendGrid template\n   */\n  async sendTemplatedEmail(\n    to: string | string[],\n    templateId: string,\n    dynamicTemplateData: Record<string, any>,\n    from?: string,\n    categories?: string[],\n    customArgs?: Record<string, string>\n  ): Promise<{ success: boolean; messageId?: string; error?: string }> {\n    return this.sendEmail({\n      to,\n      subject: '', // Subject is defined in the template\n      templateId,\n      dynamicTemplateData,\n      from,\n      categories,\n      customArgs\n    });\n  }\n\n  /**\n   * Get service statistics (placeholder - SendGrid stats require separate API calls)\n   */\n  async getStats(): Promise<{ success: boolean; stats?: any; error?: string }> {\n    try {\n      // This would require additional SendGrid API calls to get statistics\n      // For now, return success without detailed stats\n      console.log('SendGrid statistics require separate API implementation');\n      \n      return {\n        success: true,\n        stats: {\n          service: 'SendGrid',\n          initialized: this.isInitialized,\n          message: 'Statistics available through SendGrid dashboard'\n        }\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Failed to get stats'\n      };\n    }\n  }\n}\n\n// Export singleton instance\nexport const sendGridService = new SendGridService();\n\n// Export with the same name as the old AWS SES service for easy replacement\nexport const awsSESService = sendGridService;"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "376840b7e215b0b0dc961a7c00897c2e726e8417"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_51eclg1su = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_51eclg1su();
var __importDefault =
/* istanbul ignore next */
(cov_51eclg1su().s[0]++,
/* istanbul ignore next */
(cov_51eclg1su().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_51eclg1su().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_51eclg1su().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_51eclg1su().f[0]++;
  cov_51eclg1su().s[1]++;
  return /* istanbul ignore next */(cov_51eclg1su().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_51eclg1su().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_51eclg1su().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_51eclg1su().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_51eclg1su().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_51eclg1su().s[3]++;
exports.awsSESService = exports.sendGridService = exports.SendGridService = void 0;
const mail_1 =
/* istanbul ignore next */
(cov_51eclg1su().s[4]++, __importDefault(require("@sendgrid/mail")));
class SendGridService {
  constructor() {
    /* istanbul ignore next */
    cov_51eclg1su().f[1]++;
    cov_51eclg1su().s[5]++;
    this.isInitialized = false;
    /* istanbul ignore next */
    cov_51eclg1su().s[6]++;
    this.defaultFromEmail =
    /* istanbul ignore next */
    (cov_51eclg1su().b[3][0]++, process.env.SENDGRID_FROM_EMAIL) ||
    /* istanbul ignore next */
    (cov_51eclg1su().b[3][1]++, 'contact@prepbettr.com');
    /* istanbul ignore next */
    cov_51eclg1su().s[7]++;
    this.initializeSendGrid();
  }
  initializeSendGrid() {
    /* istanbul ignore next */
    cov_51eclg1su().f[2]++;
    const apiKey =
    /* istanbul ignore next */
    (cov_51eclg1su().s[8]++, process.env.SENDGRID_API_KEY);
    /* istanbul ignore next */
    cov_51eclg1su().s[9]++;
    if (!apiKey) {
      /* istanbul ignore next */
      cov_51eclg1su().b[4][0]++;
      cov_51eclg1su().s[10]++;
      console.warn('SENDGRID_API_KEY not found. Email functionality will be limited.');
      /* istanbul ignore next */
      cov_51eclg1su().s[11]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_51eclg1su().b[4][1]++;
    }
    cov_51eclg1su().s[12]++;
    try {
      /* istanbul ignore next */
      cov_51eclg1su().s[13]++;
      mail_1.default.setApiKey(apiKey);
      /* istanbul ignore next */
      cov_51eclg1su().s[14]++;
      this.isInitialized = true;
      /* istanbul ignore next */
      cov_51eclg1su().s[15]++;
      console.log('SendGrid service initialized successfully');
    } catch (error) {
      /* istanbul ignore next */
      cov_51eclg1su().s[16]++;
      console.error('Failed to initialize SendGrid:', error);
    }
  }
  /**
   * Send a single email using SendGrid
   */
  async sendEmail(params) {
    /* istanbul ignore next */
    cov_51eclg1su().f[3]++;
    var _a, _b, _c;
    /* istanbul ignore next */
    cov_51eclg1su().s[17]++;
    if (!this.isInitialized) {
      /* istanbul ignore next */
      cov_51eclg1su().b[5][0]++;
      cov_51eclg1su().s[18]++;
      return {
        success: false,
        error: 'SendGrid service not initialized. Check SENDGRID_API_KEY.'
      };
    } else
    /* istanbul ignore next */
    {
      cov_51eclg1su().b[5][1]++;
    }
    cov_51eclg1su().s[19]++;
    try {
      const {
        to,
        subject,
        html,
        text,
        from,
        templateId,
        dynamicTemplateData,
        categories,
        customArgs
      } =
      /* istanbul ignore next */
      (cov_51eclg1su().s[20]++, params);
      // Ensure we have either HTML/text content or a template
      /* istanbul ignore next */
      cov_51eclg1su().s[21]++;
      if (
      /* istanbul ignore next */
      (cov_51eclg1su().b[7][0]++, !html) &&
      /* istanbul ignore next */
      (cov_51eclg1su().b[7][1]++, !text) &&
      /* istanbul ignore next */
      (cov_51eclg1su().b[7][2]++, !templateId)) {
        /* istanbul ignore next */
        cov_51eclg1su().b[6][0]++;
        cov_51eclg1su().s[22]++;
        return {
          success: false,
          error: 'Either HTML/text content or templateId must be provided'
        };
      } else
      /* istanbul ignore next */
      {
        cov_51eclg1su().b[6][1]++;
      }
      // Convert single recipient to array for consistent handling
      const recipients =
      /* istanbul ignore next */
      (cov_51eclg1su().s[23]++, Array.isArray(to) ?
      /* istanbul ignore next */
      (cov_51eclg1su().b[8][0]++, to) :
      /* istanbul ignore next */
      (cov_51eclg1su().b[8][1]++, [to]));
      // Validate email addresses
      const emailRegex =
      /* istanbul ignore next */
      (cov_51eclg1su().s[24]++, /^[^\s@]+@[^\s@]+\.[^\s@]+$/);
      const invalidEmails =
      /* istanbul ignore next */
      (cov_51eclg1su().s[25]++, recipients.filter(email => {
        /* istanbul ignore next */
        cov_51eclg1su().f[4]++;
        cov_51eclg1su().s[26]++;
        return !emailRegex.test(email);
      }));
      /* istanbul ignore next */
      cov_51eclg1su().s[27]++;
      if (invalidEmails.length > 0) {
        /* istanbul ignore next */
        cov_51eclg1su().b[9][0]++;
        cov_51eclg1su().s[28]++;
        return {
          success: false,
          error: `Invalid email addresses: ${invalidEmails.join(', ')}`
        };
      } else
      /* istanbul ignore next */
      {
        cov_51eclg1su().b[9][1]++;
      }
      // Build email data
      const mailData =
      /* istanbul ignore next */
      (cov_51eclg1su().s[29]++, Object.assign(Object.assign({
        from:
        /* istanbul ignore next */
        (cov_51eclg1su().b[10][0]++, from) ||
        /* istanbul ignore next */
        (cov_51eclg1su().b[10][1]++, this.defaultFromEmail),
        to: recipients,
        subject: subject
      },
      /* istanbul ignore next */
      (cov_51eclg1su().b[11][0]++, categories) &&
      /* istanbul ignore next */
      (cov_51eclg1su().b[11][1]++, {
        categories
      })),
      /* istanbul ignore next */
      (cov_51eclg1su().b[12][0]++, customArgs) &&
      /* istanbul ignore next */
      (cov_51eclg1su().b[12][1]++, {
        customArgs
      })));
      // Add content based on what's provided
      /* istanbul ignore next */
      cov_51eclg1su().s[30]++;
      if (templateId) {
        /* istanbul ignore next */
        cov_51eclg1su().b[13][0]++;
        cov_51eclg1su().s[31]++;
        mailData.templateId = templateId;
        /* istanbul ignore next */
        cov_51eclg1su().s[32]++;
        if (dynamicTemplateData) {
          /* istanbul ignore next */
          cov_51eclg1su().b[14][0]++;
          cov_51eclg1su().s[33]++;
          mailData.dynamicTemplateData = dynamicTemplateData;
        } else
        /* istanbul ignore next */
        {
          cov_51eclg1su().b[14][1]++;
        }
      } else {
        /* istanbul ignore next */
        cov_51eclg1su().b[13][1]++;
        cov_51eclg1su().s[34]++;
        if (html) {
          /* istanbul ignore next */
          cov_51eclg1su().b[15][0]++;
          cov_51eclg1su().s[35]++;
          mailData.html = html;
        } else
        /* istanbul ignore next */
        {
          cov_51eclg1su().b[15][1]++;
        }
        cov_51eclg1su().s[36]++;
        if (text) {
          /* istanbul ignore next */
          cov_51eclg1su().b[16][0]++;
          cov_51eclg1su().s[37]++;
          mailData.text = text;
        } else
        /* istanbul ignore next */
        {
          cov_51eclg1su().b[16][1]++;
        }
      }
      const [response] =
      /* istanbul ignore next */
      (cov_51eclg1su().s[38]++, await mail_1.default.send(mailData));
      /* istanbul ignore next */
      cov_51eclg1su().s[39]++;
      console.log(`Email sent successfully via SendGrid to ${recipients.join(', ')}. Status: ${response.statusCode}`);
      /* istanbul ignore next */
      cov_51eclg1su().s[40]++;
      return {
        success: true,
        messageId:
        /* istanbul ignore next */
        (cov_51eclg1su().b[17][0]++, response.headers['x-message-id']) ||
        /* istanbul ignore next */
        (cov_51eclg1su().b[17][1]++,
        /* istanbul ignore next */
        (cov_51eclg1su().b[19][0]++, (_a = response.statusCode) === null) ||
        /* istanbul ignore next */
        (cov_51eclg1su().b[19][1]++, _a === void 0) ?
        /* istanbul ignore next */
        (cov_51eclg1su().b[18][0]++, void 0) :
        /* istanbul ignore next */
        (cov_51eclg1su().b[18][1]++, _a.toString()))
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_51eclg1su().s[41]++;
      console.error('Error sending email via SendGrid:', error);
      let errorMessage =
      /* istanbul ignore next */
      (cov_51eclg1su().s[42]++, 'Failed to send email');
      // Handle SendGrid specific errors
      /* istanbul ignore next */
      cov_51eclg1su().s[43]++;
      if (error.response) {
        /* istanbul ignore next */
        cov_51eclg1su().b[20][0]++;
        const {
          statusCode,
          body
        } =
        /* istanbul ignore next */
        (cov_51eclg1su().s[44]++, error.response);
        /* istanbul ignore next */
        cov_51eclg1su().s[45]++;
        errorMessage = `SendGrid API error (${statusCode}): ${JSON.stringify(body)}`;
        // Handle specific error codes
        /* istanbul ignore next */
        cov_51eclg1su().s[46]++;
        switch (statusCode) {
          case 400:
            /* istanbul ignore next */
            cov_51eclg1su().b[21][0]++;
            cov_51eclg1su().s[47]++;
            errorMessage = 'Bad request - check email parameters';
            /* istanbul ignore next */
            cov_51eclg1su().s[48]++;
            break;
          case 401:
            /* istanbul ignore next */
            cov_51eclg1su().b[21][1]++;
            cov_51eclg1su().s[49]++;
            errorMessage = 'Unauthorized - check SendGrid API key';
            /* istanbul ignore next */
            cov_51eclg1su().s[50]++;
            break;
          case 403:
            /* istanbul ignore next */
            cov_51eclg1su().b[21][2]++;
            cov_51eclg1su().s[51]++;
            errorMessage = 'Forbidden - insufficient permissions';
            /* istanbul ignore next */
            cov_51eclg1su().s[52]++;
            break;
          case 413:
            /* istanbul ignore next */
            cov_51eclg1su().b[21][3]++;
            cov_51eclg1su().s[53]++;
            errorMessage = 'Email content too large';
            /* istanbul ignore next */
            cov_51eclg1su().s[54]++;
            break;
          case 429:
            /* istanbul ignore next */
            cov_51eclg1su().b[21][4]++;
            cov_51eclg1su().s[55]++;
            errorMessage = 'Rate limit exceeded';
            /* istanbul ignore next */
            cov_51eclg1su().s[56]++;
            break;
          default:
            /* istanbul ignore next */
            cov_51eclg1su().b[21][5]++;
            cov_51eclg1su().s[57]++;
            errorMessage = `SendGrid error: ${
            /* istanbul ignore next */
            (cov_51eclg1su().b[22][0]++,
            /* istanbul ignore next */
            (cov_51eclg1su().b[24][0]++, (_c =
            /* istanbul ignore next */
            (cov_51eclg1su().b[26][0]++, (_b =
            /* istanbul ignore next */
            (cov_51eclg1su().b[28][0]++, body === null) ||
            /* istanbul ignore next */
            (cov_51eclg1su().b[28][1]++, body === void 0) ?
            /* istanbul ignore next */
            (cov_51eclg1su().b[27][0]++, void 0) :
            /* istanbul ignore next */
            (cov_51eclg1su().b[27][1]++, body.errors)) === null) ||
            /* istanbul ignore next */
            (cov_51eclg1su().b[26][1]++, _b === void 0) ?
            /* istanbul ignore next */
            (cov_51eclg1su().b[25][0]++, void 0) :
            /* istanbul ignore next */
            (cov_51eclg1su().b[25][1]++, _b[0])) === null) ||
            /* istanbul ignore next */
            (cov_51eclg1su().b[24][1]++, _c === void 0) ?
            /* istanbul ignore next */
            (cov_51eclg1su().b[23][0]++, void 0) :
            /* istanbul ignore next */
            (cov_51eclg1su().b[23][1]++, _c.message)) ||
            /* istanbul ignore next */
            (cov_51eclg1su().b[22][1]++, 'Unknown error')}`;
        }
      } else {
        /* istanbul ignore next */
        cov_51eclg1su().b[20][1]++;
        cov_51eclg1su().s[58]++;
        if (error.message) {
          /* istanbul ignore next */
          cov_51eclg1su().b[29][0]++;
          cov_51eclg1su().s[59]++;
          errorMessage = error.message;
        } else
        /* istanbul ignore next */
        {
          cov_51eclg1su().b[29][1]++;
        }
      }
      /* istanbul ignore next */
      cov_51eclg1su().s[60]++;
      return {
        success: false,
        error: errorMessage
      };
    }
  }
  /**
   * Send bulk emails (SendGrid supports up to 1000 personalizations per request)
   */
  async sendBulkEmail(recipients, subject, html, text, from, templateId, dynamicTemplateData) {
    /* istanbul ignore next */
    cov_51eclg1su().f[5]++;
    const results =
    /* istanbul ignore next */
    (cov_51eclg1su().s[61]++, {
      success: true,
      sent: 0,
      failed: [],
      errors: []
    });
    // SendGrid allows up to 1000 personalizations per request
    const batchSize =
    /* istanbul ignore next */
    (cov_51eclg1su().s[62]++, 1000);
    const batches =
    /* istanbul ignore next */
    (cov_51eclg1su().s[63]++, []);
    /* istanbul ignore next */
    cov_51eclg1su().s[64]++;
    for (let i =
    /* istanbul ignore next */
    (cov_51eclg1su().s[65]++, 0); i < recipients.length; i += batchSize) {
      /* istanbul ignore next */
      cov_51eclg1su().s[66]++;
      batches.push(recipients.slice(i, i + batchSize));
    }
    /* istanbul ignore next */
    cov_51eclg1su().s[67]++;
    for (const batch of batches) {
      /* istanbul ignore next */
      cov_51eclg1su().s[68]++;
      try {
        const emailParams =
        /* istanbul ignore next */
        (cov_51eclg1su().s[69]++, {
          to: batch,
          subject,
          html,
          text,
          from,
          templateId,
          dynamicTemplateData
        });
        const result =
        /* istanbul ignore next */
        (cov_51eclg1su().s[70]++, await this.sendEmail(emailParams));
        /* istanbul ignore next */
        cov_51eclg1su().s[71]++;
        if (result.success) {
          /* istanbul ignore next */
          cov_51eclg1su().b[30][0]++;
          cov_51eclg1su().s[72]++;
          results.sent += batch.length;
        } else {
          /* istanbul ignore next */
          cov_51eclg1su().b[30][1]++;
          cov_51eclg1su().s[73]++;
          results.failed.push(...batch);
          /* istanbul ignore next */
          cov_51eclg1su().s[74]++;
          results.errors.push(
          /* istanbul ignore next */
          (cov_51eclg1su().b[31][0]++, result.error) ||
          /* istanbul ignore next */
          (cov_51eclg1su().b[31][1]++, 'Unknown error'));
          /* istanbul ignore next */
          cov_51eclg1su().s[75]++;
          results.success = false;
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_51eclg1su().s[76]++;
        results.failed.push(...batch);
        /* istanbul ignore next */
        cov_51eclg1su().s[77]++;
        results.errors.push(error instanceof Error ?
        /* istanbul ignore next */
        (cov_51eclg1su().b[32][0]++, error.message) :
        /* istanbul ignore next */
        (cov_51eclg1su().b[32][1]++, 'Unknown error'));
        /* istanbul ignore next */
        cov_51eclg1su().s[78]++;
        results.success = false;
      }
    }
    /* istanbul ignore next */
    cov_51eclg1su().s[79]++;
    return results;
  }
  /**
   * Verify an email address with SendGrid (for sender verification)
   * Note: SendGrid handles verification differently than SES
   */
  async verifyEmailAddress(email) {
    /* istanbul ignore next */
    cov_51eclg1su().f[6]++;
    cov_51eclg1su().s[80]++;
    try {
      /* istanbul ignore next */
      cov_51eclg1su().s[81]++;
      // SendGrid doesn't require email verification in the same way as SES
      // This is handled through sender authentication and domain verification
      console.log(`Email verification requested for ${email}. Ensure sender authentication is configured in SendGrid.`);
      // For development/testing, we can simulate verification
      /* istanbul ignore next */
      cov_51eclg1su().s[82]++;
      if (process.env.NODE_ENV === 'development') {
        /* istanbul ignore next */
        cov_51eclg1su().b[33][0]++;
        cov_51eclg1su().s[83]++;
        console.log(`Simulated verification success for ${email} in development mode`);
        /* istanbul ignore next */
        cov_51eclg1su().s[84]++;
        return {
          success: true
        };
      } else
      /* istanbul ignore next */
      {
        cov_51eclg1su().b[33][1]++;
      }
      // In production, sender verification should be handled via SendGrid dashboard
      cov_51eclg1su().s[85]++;
      return {
        success: true,
        error: 'Sender verification should be configured in SendGrid dashboard'
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_51eclg1su().s[86]++;
      console.error('Error with email verification:', error);
      /* istanbul ignore next */
      cov_51eclg1su().s[87]++;
      return {
        success: false,
        error: error instanceof Error ?
        /* istanbul ignore next */
        (cov_51eclg1su().b[34][0]++, error.message) :
        /* istanbul ignore next */
        (cov_51eclg1su().b[34][1]++, 'Failed to verify email address')
      };
    }
  }
  /**
   * Check if SendGrid is properly configured
   */
  async testConnection() {
    /* istanbul ignore next */
    cov_51eclg1su().f[7]++;
    cov_51eclg1su().s[88]++;
    if (!this.isInitialized) {
      /* istanbul ignore next */
      cov_51eclg1su().b[35][0]++;
      cov_51eclg1su().s[89]++;
      return {
        success: false,
        error: 'SendGrid service not initialized. Check SENDGRID_API_KEY.'
      };
    } else
    /* istanbul ignore next */
    {
      cov_51eclg1su().b[35][1]++;
    }
    cov_51eclg1su().s[90]++;
    try {
      // Test connection by attempting to send a test email to a test address
      // In a real implementation, you might want to use SendGrid's API to check account status
      const testResult =
      /* istanbul ignore next */
      (cov_51eclg1su().s[91]++, await this.sendEmail({
        to: 'test@example.com',
        subject: 'SendGrid Connection Test',
        text: 'This is a connection test. This email should not be delivered.',
        html: '<p>This is a connection test. This email should not be delivered.</p>'
      }));
      // Even if the test email "fails" due to invalid recipient, 
      // a successful API response indicates the connection is working
      /* istanbul ignore next */
      cov_51eclg1su().s[92]++;
      if (
      /* istanbul ignore next */
      (cov_51eclg1su().b[37][0]++, testResult.error) &&
      /* istanbul ignore next */
      (cov_51eclg1su().b[37][1]++, testResult.error.includes('Invalid email'))) {
        /* istanbul ignore next */
        cov_51eclg1su().b[36][0]++;
        cov_51eclg1su().s[93]++;
        console.log('SendGrid connection test successful (invalid test email expected)');
        /* istanbul ignore next */
        cov_51eclg1su().s[94]++;
        return {
          success: true
        };
      } else
      /* istanbul ignore next */
      {
        cov_51eclg1su().b[36][1]++;
      }
      cov_51eclg1su().s[95]++;
      console.log('SendGrid connection test result:', testResult);
      /* istanbul ignore next */
      cov_51eclg1su().s[96]++;
      return {
        success: true,
        error: testResult.error
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_51eclg1su().s[97]++;
      console.error('SendGrid connection test failed:', error);
      /* istanbul ignore next */
      cov_51eclg1su().s[98]++;
      return {
        success: false,
        error: error instanceof Error ?
        /* istanbul ignore next */
        (cov_51eclg1su().b[38][0]++, error.message) :
        /* istanbul ignore next */
        (cov_51eclg1su().b[38][1]++, 'Connection test failed')
      };
    }
  }
  /**
   * Send email using SendGrid template
   */
  async sendTemplatedEmail(to, templateId, dynamicTemplateData, from, categories, customArgs) {
    /* istanbul ignore next */
    cov_51eclg1su().f[8]++;
    cov_51eclg1su().s[99]++;
    return this.sendEmail({
      to,
      subject: '',
      // Subject is defined in the template
      templateId,
      dynamicTemplateData,
      from,
      categories,
      customArgs
    });
  }
  /**
   * Get service statistics (placeholder - SendGrid stats require separate API calls)
   */
  async getStats() {
    /* istanbul ignore next */
    cov_51eclg1su().f[9]++;
    cov_51eclg1su().s[100]++;
    try {
      /* istanbul ignore next */
      cov_51eclg1su().s[101]++;
      // This would require additional SendGrid API calls to get statistics
      // For now, return success without detailed stats
      console.log('SendGrid statistics require separate API implementation');
      /* istanbul ignore next */
      cov_51eclg1su().s[102]++;
      return {
        success: true,
        stats: {
          service: 'SendGrid',
          initialized: this.isInitialized,
          message: 'Statistics available through SendGrid dashboard'
        }
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_51eclg1su().s[103]++;
      return {
        success: false,
        error: error instanceof Error ?
        /* istanbul ignore next */
        (cov_51eclg1su().b[39][0]++, error.message) :
        /* istanbul ignore next */
        (cov_51eclg1su().b[39][1]++, 'Failed to get stats')
      };
    }
  }
}
/* istanbul ignore next */
cov_51eclg1su().s[104]++;
exports.SendGridService = SendGridService;
// Export singleton instance
/* istanbul ignore next */
cov_51eclg1su().s[105]++;
exports.sendGridService = new SendGridService();
// Export with the same name as the old AWS SES service for easy replacement
/* istanbul ignore next */
cov_51eclg1su().s[106]++;
exports.awsSESService = exports.sendGridService;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,