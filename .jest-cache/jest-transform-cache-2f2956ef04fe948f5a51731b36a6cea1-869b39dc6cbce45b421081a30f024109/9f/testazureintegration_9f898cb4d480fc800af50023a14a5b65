0b1a953023307578bcf30f0d513df761
#!/usr/bin/env node

/**
 * Azure Integration Test
 * 
 * This script tests Azure Key Vault and App Configuration connectivity
 * for local development and debugging.
 */
/* istanbul ignore next */
function cov_8dl4opglr() {
  var path = "/Users/dikshantvashistha/PrepBettr/azure/test-azure-integration.js";
  var hash = "6fdf6d6deec6a687591297cbd5e8ad995c4907ac";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dikshantvashistha/PrepBettr/azure/test-azure-integration.js",
    statementMap: {
      "0": {
        start: {
          line: 10,
          column: 74
        },
        end: {
          line: 10,
          column: 106
        }
      },
      "1": {
        start: {
          line: 11,
          column: 32
        },
        end: {
          line: 11,
          column: 68
        }
      },
      "2": {
        start: {
          line: 14,
          column: 2
        },
        end: {
          line: 14,
          column: 46
        }
      },
      "3": {
        start: {
          line: 15,
          column: 2
        },
        end: {
          line: 15,
          column: 31
        }
      },
      "4": {
        start: {
          line: 16,
          column: 2
        },
        end: {
          line: 16,
          column: 16
        }
      },
      "5": {
        start: {
          line: 19,
          column: 2
        },
        end: {
          line: 19,
          column: 61
        }
      },
      "6": {
        start: {
          line: 20,
          column: 2
        },
        end: {
          line: 36,
          column: 3
        }
      },
      "7": {
        start: {
          line: 21,
          column: 20
        },
        end: {
          line: 21,
          column: 45
        }
      },
      "8": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 22,
          column: 60
        }
      },
      "9": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 23,
          column: 74
        }
      },
      "10": {
        start: {
          line: 26,
          column: 21
        },
        end: {
          line: 26,
          column: 75
        }
      },
      "11": {
        start: {
          line: 27,
          column: 20
        },
        end: {
          line: 27,
          column: 57
        }
      },
      "12": {
        start: {
          line: 27,
          column: 43
        },
        end: {
          line: 27,
          column: 56
        }
      },
      "13": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 33,
          column: 5
        }
      },
      "14": {
        start: {
          line: 30,
          column: 6
        },
        end: {
          line: 30,
          column: 71
        }
      },
      "15": {
        start: {
          line: 32,
          column: 6
        },
        end: {
          line: 32,
          column: 56
        }
      },
      "16": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 35,
          column: 59
        }
      },
      "17": {
        start: {
          line: 38,
          column: 2
        },
        end: {
          line: 38,
          column: 16
        }
      },
      "18": {
        start: {
          line: 41,
          column: 2
        },
        end: {
          line: 41,
          column: 59
        }
      },
      "19": {
        start: {
          line: 42,
          column: 2
        },
        end: {
          line: 53,
          column: 3
        }
      },
      "20": {
        start: {
          line: 43,
          column: 4
        },
        end: {
          line: 43,
          column: 39
        }
      },
      "21": {
        start: {
          line: 44,
          column: 19
        },
        end: {
          line: 44,
          column: 35
        }
      },
      "22": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 45,
          column: 58
        }
      },
      "23": {
        start: {
          line: 46,
          column: 4
        },
        end: {
          line: 50,
          column: 6
        }
      },
      "24": {
        start: {
          line: 48,
          column: 31
        },
        end: {
          line: 48,
          column: 61
        }
      },
      "25": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 52,
          column: 71
        }
      },
      "26": {
        start: {
          line: 55,
          column: 2
        },
        end: {
          line: 55,
          column: 16
        }
      },
      "27": {
        start: {
          line: 58,
          column: 2
        },
        end: {
          line: 58,
          column: 56
        }
      },
      "28": {
        start: {
          line: 59,
          column: 2
        },
        end: {
          line: 72,
          column: 3
        }
      },
      "29": {
        start: {
          line: 60,
          column: 29
        },
        end: {
          line: 60,
          column: 50
        }
      },
      "30": {
        start: {
          line: 61,
          column: 19
        },
        end: {
          line: 61,
          column: 62
        }
      },
      "31": {
        start: {
          line: 63,
          column: 4
        },
        end: {
          line: 69,
          column: 5
        }
      },
      "32": {
        start: {
          line: 64,
          column: 6
        },
        end: {
          line: 64,
          column: 64
        }
      },
      "33": {
        start: {
          line: 65,
          column: 6
        },
        end: {
          line: 65,
          column: 82
        }
      },
      "34": {
        start: {
          line: 66,
          column: 6
        },
        end: {
          line: 66,
          column: 88
        }
      },
      "35": {
        start: {
          line: 68,
          column: 6
        },
        end: {
          line: 68,
          column: 74
        }
      },
      "36": {
        start: {
          line: 71,
          column: 4
        },
        end: {
          line: 71,
          column: 67
        }
      },
      "37": {
        start: {
          line: 74,
          column: 2
        },
        end: {
          line: 74,
          column: 16
        }
      },
      "38": {
        start: {
          line: 77,
          column: 2
        },
        end: {
          line: 77,
          column: 51
        }
      },
      "39": {
        start: {
          line: 78,
          column: 2
        },
        end: {
          line: 89,
          column: 3
        }
      },
      "40": {
        start: {
          line: 79,
          column: 20
        },
        end: {
          line: 79,
          column: 45
        }
      },
      "41": {
        start: {
          line: 80,
          column: 4
        },
        end: {
          line: 86,
          column: 5
        }
      },
      "42": {
        start: {
          line: 81,
          column: 6
        },
        end: {
          line: 81,
          column: 52
        }
      },
      "43": {
        start: {
          line: 82,
          column: 6
        },
        end: {
          line: 82,
          column: 65
        }
      },
      "44": {
        start: {
          line: 83,
          column: 6
        },
        end: {
          line: 83,
          column: 69
        }
      },
      "45": {
        start: {
          line: 85,
          column: 6
        },
        end: {
          line: 85,
          column: 50
        }
      },
      "46": {
        start: {
          line: 88,
          column: 4
        },
        end: {
          line: 88,
          column: 56
        }
      },
      "47": {
        start: {
          line: 91,
          column: 2
        },
        end: {
          line: 91,
          column: 16
        }
      },
      "48": {
        start: {
          line: 92,
          column: 2
        },
        end: {
          line: 92,
          column: 53
        }
      },
      "49": {
        start: {
          line: 96,
          column: 0
        },
        end: {
          line: 98,
          column: 1
        }
      },
      "50": {
        start: {
          line: 97,
          column: 2
        },
        end: {
          line: 97,
          column: 46
        }
      },
      "51": {
        start: {
          line: 100,
          column: 0
        },
        end: {
          line: 100,
          column: 42
        }
      }
    },
    fnMap: {
      "0": {
        name: "testAzureIntegration",
        decl: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 13,
            column: 35
          }
        },
        loc: {
          start: {
            line: 13,
            column: 38
          },
          end: {
            line: 93,
            column: 1
          }
        },
        line: 13
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 27,
            column: 36
          },
          end: {
            line: 27,
            column: 37
          }
        },
        loc: {
          start: {
            line: 27,
            column: 43
          },
          end: {
            line: 27,
            column: 56
          }
        },
        line: 27
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 48,
            column: 13
          },
          end: {
            line: 48,
            column: 14
          }
        },
        loc: {
          start: {
            line: 48,
            column: 31
          },
          end: {
            line: 48,
            column: 61
          }
        },
        line: 48
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        }, {
          start: {
            line: 31,
            column: 11
          },
          end: {
            line: 33,
            column: 5
          }
        }],
        line: 29
      },
      "1": {
        loc: {
          start: {
            line: 48,
            column: 42
          },
          end: {
            line: 48,
            column: 59
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 48,
            column: 50
          },
          end: {
            line: 48,
            column: 53
          }
        }, {
          start: {
            line: 48,
            column: 56
          },
          end: {
            line: 48,
            column: 59
          }
        }],
        line: 48
      },
      "2": {
        loc: {
          start: {
            line: 63,
            column: 4
          },
          end: {
            line: 69,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 63,
            column: 4
          },
          end: {
            line: 69,
            column: 5
          }
        }, {
          start: {
            line: 67,
            column: 11
          },
          end: {
            line: 69,
            column: 5
          }
        }],
        line: 63
      },
      "3": {
        loc: {
          start: {
            line: 80,
            column: 4
          },
          end: {
            line: 86,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 80,
            column: 4
          },
          end: {
            line: 86,
            column: 5
          }
        }, {
          start: {
            line: 84,
            column: 11
          },
          end: {
            line: 86,
            column: 5
          }
        }],
        line: 80
      },
      "4": {
        loc: {
          start: {
            line: 80,
            column: 8
          },
          end: {
            line: 80,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 80,
            column: 8
          },
          end: {
            line: 80,
            column: 30
          }
        }, {
          start: {
            line: 80,
            column: 34
          },
          end: {
            line: 80,
            column: 61
          }
        }],
        line: 80
      },
      "5": {
        loc: {
          start: {
            line: 96,
            column: 0
          },
          end: {
            line: 98,
            column: 1
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 96,
            column: 0
          },
          end: {
            line: 98,
            column: 1
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 96
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0]
    },
    inputSourceMap: null,
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "6fdf6d6deec6a687591297cbd5e8ad995c4907ac"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_8dl4opglr = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_8dl4opglr();
const {
  fetchAzureSecrets,
  getAzureConfig,
  initializeAzureEnvironment
} =
/* istanbul ignore next */
(cov_8dl4opglr().s[0]++, require('./lib/azure-config.ts'));
const {
  getAppConfigService
} =
/* istanbul ignore next */
(cov_8dl4opglr().s[1]++, require('./lib/azure-app-config.ts'));
async function testAzureIntegration() {
  /* istanbul ignore next */
  cov_8dl4opglr().f[0]++;
  cov_8dl4opglr().s[2]++;
  console.log('🧪 Testing Azure Integration');
  /* istanbul ignore next */
  cov_8dl4opglr().s[3]++;
  console.log('='.repeat(50));
  /* istanbul ignore next */
  cov_8dl4opglr().s[4]++;
  console.log();

  // Test 1: Key Vault Secrets
  /* istanbul ignore next */
  cov_8dl4opglr().s[5]++;
  console.log('1️⃣ Testing Azure Key Vault connectivity...');
  /* istanbul ignore next */
  cov_8dl4opglr().s[6]++;
  try {
    const secrets =
    /* istanbul ignore next */
    (cov_8dl4opglr().s[7]++, await fetchAzureSecrets());
    /* istanbul ignore next */
    cov_8dl4opglr().s[8]++;
    console.log('✅ Key Vault secrets fetched successfully');
    /* istanbul ignore next */
    cov_8dl4opglr().s[9]++;
    console.log('   Available secrets:', Object.keys(secrets).join(', '));

    // Validate required secrets
    const required =
    /* istanbul ignore next */
    (cov_8dl4opglr().s[10]++, ['speechKey', 'azureOpenAIKey', 'azureOpenAIEndpoint']);
    const missing =
    /* istanbul ignore next */
    (cov_8dl4opglr().s[11]++, required.filter(key => {
      /* istanbul ignore next */
      cov_8dl4opglr().f[1]++;
      cov_8dl4opglr().s[12]++;
      return !secrets[key];
    }));
    /* istanbul ignore next */
    cov_8dl4opglr().s[13]++;
    if (missing.length > 0) {
      /* istanbul ignore next */
      cov_8dl4opglr().b[0][0]++;
      cov_8dl4opglr().s[14]++;
      console.log('⚠️  Missing required secrets:', missing.join(', '));
    } else {
      /* istanbul ignore next */
      cov_8dl4opglr().b[0][1]++;
      cov_8dl4opglr().s[15]++;
      console.log('✅ All required secrets are present');
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_8dl4opglr().s[16]++;
    console.log('❌ Key Vault test failed:', error.message);
  }
  /* istanbul ignore next */
  cov_8dl4opglr().s[17]++;
  console.log();

  // Test 2: Environment Initialization
  /* istanbul ignore next */
  cov_8dl4opglr().s[18]++;
  console.log('2️⃣ Testing environment initialization...');
  /* istanbul ignore next */
  cov_8dl4opglr().s[19]++;
  try {
    /* istanbul ignore next */
    cov_8dl4opglr().s[20]++;
    await initializeAzureEnvironment();
    const config =
    /* istanbul ignore next */
    (cov_8dl4opglr().s[21]++, getAzureConfig());
    /* istanbul ignore next */
    cov_8dl4opglr().s[22]++;
    console.log('✅ Environment initialized successfully');
    /* istanbul ignore next */
    cov_8dl4opglr().s[23]++;
    console.log('   Environment status:', Object.entries(config.environment).map(([key, value]) => {
      /* istanbul ignore next */
      cov_8dl4opglr().f[2]++;
      cov_8dl4opglr().s[24]++;
      return `${key}: ${value ?
      /* istanbul ignore next */
      (cov_8dl4opglr().b[1][0]++, '✅') :
      /* istanbul ignore next */
      (cov_8dl4opglr().b[1][1]++, '❌')}`;
    }).join(', '));
  } catch (error) {
    /* istanbul ignore next */
    cov_8dl4opglr().s[25]++;
    console.log('❌ Environment initialization failed:', error.message);
  }
  /* istanbul ignore next */
  cov_8dl4opglr().s[26]++;
  console.log();

  // Test 3: App Configuration
  /* istanbul ignore next */
  cov_8dl4opglr().s[27]++;
  console.log('3️⃣ Testing Azure App Configuration...');
  /* istanbul ignore next */
  cov_8dl4opglr().s[28]++;
  try {
    const appConfigService =
    /* istanbul ignore next */
    (cov_8dl4opglr().s[29]++, getAppConfigService());
    const config =
    /* istanbul ignore next */
    (cov_8dl4opglr().s[30]++, await appConfigService.fetchConfiguration());
    /* istanbul ignore next */
    cov_8dl4opglr().s[31]++;
    if (config) {
      /* istanbul ignore next */
      cov_8dl4opglr().b[2][0]++;
      cov_8dl4opglr().s[32]++;
      console.log('✅ App Configuration connected successfully');
      /* istanbul ignore next */
      cov_8dl4opglr().s[33]++;
      console.log(`   Loaded ${Object.keys(config.values).length} config values`);
      /* istanbul ignore next */
      cov_8dl4opglr().s[34]++;
      console.log(`   Loaded ${Object.keys(config.featureFlags).length} feature flags`);
    } else {
      /* istanbul ignore next */
      cov_8dl4opglr().b[2][1]++;
      cov_8dl4opglr().s[35]++;
      console.log('⚠️  App Configuration not available (using fallback)');
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_8dl4opglr().s[36]++;
    console.log('❌ App Configuration test failed:', error.message);
  }
  /* istanbul ignore next */
  cov_8dl4opglr().s[37]++;
  console.log();

  // Test 4: OpenAI Integration Test
  /* istanbul ignore next */
  cov_8dl4opglr().s[38]++;
  console.log('4️⃣ Testing OpenAI integration...');
  /* istanbul ignore next */
  cov_8dl4opglr().s[39]++;
  try {
    const secrets =
    /* istanbul ignore next */
    (cov_8dl4opglr().s[40]++, await fetchAzureSecrets());
    /* istanbul ignore next */
    cov_8dl4opglr().s[41]++;
    if (
    /* istanbul ignore next */
    (cov_8dl4opglr().b[4][0]++, secrets.azureOpenAIKey) &&
    /* istanbul ignore next */
    (cov_8dl4opglr().b[4][1]++, secrets.azureOpenAIEndpoint)) {
      /* istanbul ignore next */
      cov_8dl4opglr().b[3][0]++;
      cov_8dl4opglr().s[42]++;
      console.log('✅ OpenAI credentials available');
      /* istanbul ignore next */
      cov_8dl4opglr().s[43]++;
      console.log(`   Endpoint: ${secrets.azureOpenAIEndpoint}`);
      /* istanbul ignore next */
      cov_8dl4opglr().s[44]++;
      console.log(`   Deployment: ${secrets.azureOpenAIDeployment}`);
    } else {
      /* istanbul ignore next */
      cov_8dl4opglr().b[3][1]++;
      cov_8dl4opglr().s[45]++;
      console.log('❌ OpenAI credentials missing');
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_8dl4opglr().s[46]++;
    console.log('❌ OpenAI test failed:', error.message);
  }
  /* istanbul ignore next */
  cov_8dl4opglr().s[47]++;
  console.log();
  /* istanbul ignore next */
  cov_8dl4opglr().s[48]++;
  console.log('🏁 Azure integration test completed');
}

// Run the test
/* istanbul ignore next */
cov_8dl4opglr().s[49]++;
if (require.main === module) {
  /* istanbul ignore next */
  cov_8dl4opglr().b[5][0]++;
  cov_8dl4opglr().s[50]++;
  testAzureIntegration().catch(console.error);
} else
/* istanbul ignore next */
{
  cov_8dl4opglr().b[5][1]++;
}
cov_8dl4opglr().s[51]++;
module.exports = {
  testAzureIntegration
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,