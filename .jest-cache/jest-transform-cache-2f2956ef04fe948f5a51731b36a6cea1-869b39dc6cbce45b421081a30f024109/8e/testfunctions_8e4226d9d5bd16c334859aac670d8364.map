{"version":3,"names":["cov_4how1h5ve","actualCoverage","https","s","require","BASE_URL","AZURE_FUNCTION_KEY","process","env","b","console","error","exit","VOICE_SERVICE_URL","testData","start","action","interviewContext","type","position","company","difficulty","userId","status","makeRequest","url","data","f","Promise","resolve","reject","postData","JSON","stringify","options","method","headers","Buffer","byteLength","req","request","res","responseData","on","chunk","parsedData","parse","statusCode","write","end","testFunctions","log","statusResponse","startResponse","sessionId","processData","userTranscript","processResponse","summaryData","summaryResponse"],"sources":["test-functions.js"],"sourcesContent":["const https = require('https');\n\n// Azure Function URLs\nconst BASE_URL = 'https://prepbettr-voiceagent-functions.azurewebsites.net/api';\nconst AZURE_FUNCTION_KEY = process.env.AZURE_FUNCTION_KEY;\n\nif (!AZURE_FUNCTION_KEY) {\n    console.error('‚ùå AZURE_FUNCTION_KEY environment variable is not set');\n    process.exit(1);\n}\n\nconst VOICE_SERVICE_URL = `${BASE_URL}/httptrigger1?code=${AZURE_FUNCTION_KEY}`;\n\n// Test data\nconst testData = {\n    start: {\n        action: 'start',\n        interviewContext: {\n            type: 'technical',\n            position: 'Software Engineer',\n            company: 'PrepBettr',\n            difficulty: 'medium'\n        },\n        userId: 'test-user-123'\n    },\n    status: {\n        action: 'status'\n    }\n};\n\nfunction makeRequest(url, data) {\n    return new Promise((resolve, reject) => {\n        const postData = JSON.stringify(data);\n        \n        const options = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Content-Length': Buffer.byteLength(postData)\n            }\n        };\n\n        const req = https.request(url, options, (res) => {\n            let responseData = '';\n            \n            res.on('data', (chunk) => {\n                responseData += chunk;\n            });\n            \n            res.on('end', () => {\n                try {\n                    const parsedData = JSON.parse(responseData);\n                    resolve({\n                        status: res.statusCode,\n                        data: parsedData\n                    });\n                } catch (error) {\n                    resolve({\n                        status: res.statusCode,\n                        data: responseData\n                    });\n                }\n            });\n        });\n\n        req.on('error', (error) => {\n            reject(error);\n        });\n\n        req.write(postData);\n        req.end();\n    });\n}\n\nasync function testFunctions() {\n    console.log('üß™ Testing Azure Functions...\\n');\n\n    try {\n        // Test 1: Status check\n        console.log('1. Testing status endpoint...');\n        const statusResponse = await makeRequest(VOICE_SERVICE_URL, testData.status);\n        console.log(`   Status: ${statusResponse.status}`);\n        console.log(`   Response:`, JSON.stringify(statusResponse.data, null, 2));\n        console.log('');\n\n        // Test 2: Start conversation\n        console.log('2. Testing start conversation...');\n        const startResponse = await makeRequest(VOICE_SERVICE_URL, testData.start);\n        console.log(`   Status: ${startResponse.status}`);\n        console.log(`   Response:`, JSON.stringify(startResponse.data, null, 2));\n        console.log('');\n\n        if (startResponse.data && startResponse.data.sessionId) {\n            // Test 3: Process user response\n            console.log('3. Testing process user response...');\n            const processData = {\n                action: 'process',\n                sessionId: startResponse.data.sessionId,\n                userTranscript: 'I have experience with JavaScript, Python, and React. I worked on several web applications.'\n            };\n            \n            const processResponse = await makeRequest(VOICE_SERVICE_URL, processData);\n            console.log(`   Status: ${processResponse.status}`);\n            console.log(`   Response:`, JSON.stringify(processResponse.data, null, 2));\n            console.log('');\n\n            // Test 4: Get summary\n            console.log('4. Testing interview summary...');\n            const summaryData = {\n                action: 'summary',\n                sessionId: startResponse.data.sessionId\n            };\n            \n            const summaryResponse = await makeRequest(VOICE_SERVICE_URL, summaryData);\n            console.log(`   Status: ${summaryResponse.status}`);\n            console.log(`   Response:`, JSON.stringify(summaryResponse.data, null, 2));\n            console.log('');\n        }\n\n        console.log('‚úÖ Function tests completed!');\n        \n    } catch (error) {\n        console.error('‚ùå Test failed:', error);\n    }\n}\n\n// Run tests\ntestFunctions();\n"],"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","ignoreList":[]}