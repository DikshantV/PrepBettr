940d7272121b3d647175e03c97516a8c
/* istanbul ignore next */
function cov_1khoy7aw45() {
  var path = "/Users/dikshantvashistha/PrepBettr/azure/jobSearchWorker/index.js";
  var hash = "aad804b54a0932f2e75f50f377989db98042e3b1";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dikshantvashistha/PrepBettr/azure/jobSearchWorker/index.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 16
        },
        end: {
          line: 1,
          column: 43
        }
      },
      "1": {
        start: {
          line: 2,
          column: 21
        },
        end: {
          line: 2,
          column: 61
        }
      },
      "2": {
        start: {
          line: 3,
          column: 25
        },
        end: {
          line: 3,
          column: 67
        }
      },
      "3": {
        start: {
          line: 4,
          column: 15
        },
        end: {
          line: 4,
          column: 32
        }
      },
      "4": {
        start: {
          line: 5,
          column: 30
        },
        end: {
          line: 5,
          column: 60
        }
      },
      "5": {
        start: {
          line: 6,
          column: 23
        },
        end: {
          line: 6,
          column: 38
        }
      },
      "6": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 15,
          column: 1
        }
      },
      "7": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 11,
          column: 68
        }
      },
      "8": {
        start: {
          line: 13,
          column: 4
        },
        end: {
          line: 13,
          column: 71
        }
      },
      "9": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 31
        }
      },
      "10": {
        start: {
          line: 18,
          column: 24
        },
        end: {
          line: 18,
          column: 28
        }
      },
      "11": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 26,
          column: 5
        }
      },
      "12": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 33
        }
      },
      "13": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 50,
          column: 5
        }
      },
      "14": {
        start: {
          line: 29,
          column: 24
        },
        end: {
          line: 29,
          column: 49
        }
      },
      "15": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 34,
          column: 9
        }
      },
      "16": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 32,
          column: 86
        }
      },
      "17": {
        start: {
          line: 33,
          column: 12
        },
        end: {
          line: 33,
          column: 24
        }
      },
      "18": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 43,
          column: 11
        }
      },
      "19": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 79
        }
      },
      "20": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 46,
          column: 33
        }
      },
      "21": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 48,
          column: 76
        }
      },
      "22": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 20
        }
      },
      "23": {
        start: {
          line: 54,
          column: 0
        },
        end: {
          line: 133,
          column: 3
        }
      },
      "24": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 58,
          column: 75
        }
      },
      "25": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 131,
          column: 9
        }
      },
      "26": {
        start: {
          line: 61,
          column: 31
        },
        end: {
          line: 61,
          column: 96
        }
      },
      "27": {
        start: {
          line: 62,
          column: 104
        },
        end: {
          line: 62,
          column: 114
        }
      },
      "28": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 68,
          column: 14
        }
      },
      "29": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 73,
          column: 13
        }
      },
      "30": {
        start: {
          line: 72,
          column: 16
        },
        end: {
          line: 72,
          column: 94
        }
      },
      "31": {
        start: {
          line: 76,
          column: 32
        },
        end: {
          line: 76,
          column: 60
        }
      },
      "32": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 79,
          column: 13
        }
      },
      "33": {
        start: {
          line: 78,
          column: 16
        },
        end: {
          line: 78,
          column: 77
        }
      },
      "34": {
        start: {
          line: 82,
          column: 34
        },
        end: {
          line: 82,
          column: 80
        }
      },
      "35": {
        start: {
          line: 84,
          column: 12
        },
        end: {
          line: 91,
          column: 13
        }
      },
      "36": {
        start: {
          line: 85,
          column: 16
        },
        end: {
          line: 89,
          column: 18
        }
      },
      "37": {
        start: {
          line: 90,
          column: 16
        },
        end: {
          line: 90,
          column: 23
        }
      },
      "38": {
        start: {
          line: 94,
          column: 38
        },
        end: {
          line: 94,
          column: 101
        }
      },
      "39": {
        start: {
          line: 97,
          column: 33
        },
        end: {
          line: 99,
          column: 13
        }
      },
      "40": {
        start: {
          line: 98,
          column: 16
        },
        end: {
          line: 98,
          column: 67
        }
      },
      "41": {
        start: {
          line: 102,
          column: 12
        },
        end: {
          line: 106,
          column: 15
        }
      },
      "42": {
        start: {
          line: 109,
          column: 12
        },
        end: {
          line: 111,
          column: 13
        }
      },
      "43": {
        start: {
          line: 110,
          column: 16
        },
        end: {
          line: 110,
          column: 106
        }
      },
      "44": {
        start: {
          line: 114,
          column: 12
        },
        end: {
          line: 114,
          column: 60
        }
      },
      "45": {
        start: {
          line: 117,
          column: 12
        },
        end: {
          line: 117,
          column: 71
        }
      },
      "46": {
        start: {
          line: 119,
          column: 12
        },
        end: {
          line: 119,
          column: 124
        }
      },
      "47": {
        start: {
          line: 122,
          column: 12
        },
        end: {
          line: 122,
          column: 63
        }
      },
      "48": {
        start: {
          line: 123,
          column: 12
        },
        end: {
          line: 127,
          column: 14
        }
      },
      "49": {
        start: {
          line: 130,
          column: 12
        },
        end: {
          line: 130,
          column: 24
        }
      },
      "50": {
        start: {
          line: 139,
          column: 20
        },
        end: {
          line: 139,
          column: 22
        }
      },
      "51": {
        start: {
          line: 140,
          column: 28
        },
        end: {
          line: 140,
          column: 30
        }
      },
      "52": {
        start: {
          line: 141,
          column: 21
        },
        end: {
          line: 141,
          column: 47
        }
      },
      "53": {
        start: {
          line: 143,
          column: 4
        },
        end: {
          line: 193,
          column: 5
        }
      },
      "54": {
        start: {
          line: 145,
          column: 8
        },
        end: {
          line: 162,
          column: 9
        }
      },
      "55": {
        start: {
          line: 146,
          column: 12
        },
        end: {
          line: 161,
          column: 13
        }
      },
      "56": {
        start: {
          line: 147,
          column: 16
        },
        end: {
          line: 147,
          column: 67
        }
      },
      "57": {
        start: {
          line: 148,
          column: 41
        },
        end: {
          line: 148,
          column: 62
        }
      },
      "58": {
        start: {
          line: 150,
          column: 16
        },
        end: {
          line: 157,
          column: 17
        }
      },
      "59": {
        start: {
          line: 151,
          column: 43
        },
        end: {
          line: 151,
          column: 93
        }
      },
      "60": {
        start: {
          line: 152,
          column: 20
        },
        end: {
          line: 152,
          column: 52
        }
      },
      "61": {
        start: {
          line: 153,
          column: 20
        },
        end: {
          line: 153,
          column: 55
        }
      },
      "62": {
        start: {
          line: 154,
          column: 20
        },
        end: {
          line: 154,
          column: 89
        }
      },
      "63": {
        start: {
          line: 156,
          column: 20
        },
        end: {
          line: 156,
          column: 75
        }
      },
      "64": {
        start: {
          line: 159,
          column: 16
        },
        end: {
          line: 159,
          column: 76
        }
      },
      "65": {
        start: {
          line: 165,
          column: 8
        },
        end: {
          line: 170,
          column: 9
        }
      },
      "66": {
        start: {
          line: 166,
          column: 12
        },
        end: {
          line: 166,
          column: 60
        }
      },
      "67": {
        start: {
          line: 167,
          column: 33
        },
        end: {
          line: 167,
          column: 78
        }
      },
      "68": {
        start: {
          line: 168,
          column: 12
        },
        end: {
          line: 168,
          column: 42
        }
      },
      "69": {
        start: {
          line: 169,
          column: 12
        },
        end: {
          line: 169,
          column: 41
        }
      },
      "70": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 172,
          column: 92
        }
      },
      "71": {
        start: {
          line: 174,
          column: 8
        },
        end: {
          line: 179,
          column: 10
        }
      },
      "72": {
        start: {
          line: 182,
          column: 8
        },
        end: {
          line: 182,
          column: 64
        }
      },
      "73": {
        start: {
          line: 185,
          column: 8
        },
        end: {
          line: 185,
          column: 60
        }
      },
      "74": {
        start: {
          line: 186,
          column: 29
        },
        end: {
          line: 186,
          column: 74
        }
      },
      "75": {
        start: {
          line: 187,
          column: 8
        },
        end: {
          line: 192,
          column: 10
        }
      },
      "76": {
        start: {
          line: 200,
          column: 4
        },
        end: {
          line: 250,
          column: 7
        }
      },
      "77": {
        start: {
          line: 202,
          column: 8
        },
        end: {
          line: 208,
          column: 9
        }
      },
      "78": {
        start: {
          line: 203,
          column: 28
        },
        end: {
          line: 203,
          column: 106
        }
      },
      "79": {
        start: {
          line: 204,
          column: 31
        },
        end: {
          line: 206,
          column: 13
        }
      },
      "80": {
        start: {
          line: 205,
          column: 16
        },
        end: {
          line: 205,
          column: 55
        }
      },
      "81": {
        start: {
          line: 207,
          column: 12
        },
        end: {
          line: 207,
          column: 42
        }
      },
      "82": {
        start: {
          line: 207,
          column: 29
        },
        end: {
          line: 207,
          column: 42
        }
      },
      "83": {
        start: {
          line: 211,
          column: 8
        },
        end: {
          line: 217,
          column: 9
        }
      },
      "84": {
        start: {
          line: 212,
          column: 32
        },
        end: {
          line: 215,
          column: 13
        }
      },
      "85": {
        start: {
          line: 213,
          column: 16
        },
        end: {
          line: 214,
          column: 89
        }
      },
      "86": {
        start: {
          line: 216,
          column: 12
        },
        end: {
          line: 216,
          column: 43
        }
      },
      "87": {
        start: {
          line: 216,
          column: 30
        },
        end: {
          line: 216,
          column: 43
        }
      },
      "88": {
        start: {
          line: 220,
          column: 8
        },
        end: {
          line: 224,
          column: 9
        }
      },
      "89": {
        start: {
          line: 221,
          column: 12
        },
        end: {
          line: 223,
          column: 13
        }
      },
      "90": {
        start: {
          line: 222,
          column: 16
        },
        end: {
          line: 222,
          column: 29
        }
      },
      "91": {
        start: {
          line: 227,
          column: 8
        },
        end: {
          line: 231,
          column: 9
        }
      },
      "92": {
        start: {
          line: 228,
          column: 12
        },
        end: {
          line: 230,
          column: 13
        }
      },
      "93": {
        start: {
          line: 229,
          column: 16
        },
        end: {
          line: 229,
          column: 29
        }
      },
      "94": {
        start: {
          line: 234,
          column: 25
        },
        end: {
          line: 234,
          column: 119
        }
      },
      "95": {
        start: {
          line: 235,
          column: 8
        },
        end: {
          line: 247,
          column: 9
        }
      },
      "96": {
        start: {
          line: 236,
          column: 12
        },
        end: {
          line: 246,
          column: 13
        }
      },
      "97": {
        start: {
          line: 238,
          column: 20
        },
        end: {
          line: 238,
          column: 51
        }
      },
      "98": {
        start: {
          line: 238,
          column: 38
        },
        end: {
          line: 238,
          column: 51
        }
      },
      "99": {
        start: {
          line: 239,
          column: 20
        },
        end: {
          line: 239,
          column: 26
        }
      },
      "100": {
        start: {
          line: 241,
          column: 20
        },
        end: {
          line: 241,
          column: 51
        }
      },
      "101": {
        start: {
          line: 241,
          column: 38
        },
        end: {
          line: 241,
          column: 51
        }
      },
      "102": {
        start: {
          line: 242,
          column: 20
        },
        end: {
          line: 242,
          column: 26
        }
      },
      "103": {
        start: {
          line: 244,
          column: 20
        },
        end: {
          line: 244,
          column: 52
        }
      },
      "104": {
        start: {
          line: 244,
          column: 39
        },
        end: {
          line: 244,
          column: 52
        }
      },
      "105": {
        start: {
          line: 245,
          column: 20
        },
        end: {
          line: 245,
          column: 26
        }
      },
      "106": {
        start: {
          line: 249,
          column: 8
        },
        end: {
          line: 249,
          column: 20
        }
      },
      "107": {
        start: {
          line: 257,
          column: 30
        },
        end: {
          line: 257,
          column: 32
        }
      },
      "108": {
        start: {
          line: 259,
          column: 4
        },
        end: {
          line: 278,
          column: 5
        }
      },
      "109": {
        start: {
          line: 260,
          column: 8
        },
        end: {
          line: 277,
          column: 9
        }
      },
      "110": {
        start: {
          line: 261,
          column: 35
        },
        end: {
          line: 261,
          column: 80
        }
      },
      "111": {
        start: {
          line: 262,
          column: 12
        },
        end: {
          line: 267,
          column: 15
        }
      },
      "112": {
        start: {
          line: 269,
          column: 12
        },
        end: {
          line: 269,
          column: 83
        }
      },
      "113": {
        start: {
          line: 271,
          column: 12
        },
        end: {
          line: 276,
          column: 15
        }
      },
      "114": {
        start: {
          line: 280,
          column: 4
        },
        end: {
          line: 280,
          column: 95
        }
      },
      "115": {
        start: {
          line: 280,
          column: 44
        },
        end: {
          line: 280,
          column: 93
        }
      },
      "116": {
        start: {
          line: 287,
          column: 4
        },
        end: {
          line: 330,
          column: 5
        }
      },
      "117": {
        start: {
          line: 288,
          column: 23
        },
        end: {
          line: 288,
          column: 52
        }
      },
      "118": {
        start: {
          line: 290,
          column: 8
        },
        end: {
          line: 293,
          column: 9
        }
      },
      "119": {
        start: {
          line: 291,
          column: 12
        },
        end: {
          line: 291,
          column: 100
        }
      },
      "120": {
        start: {
          line: 292,
          column: 12
        },
        end: {
          line: 292,
          column: 71
        }
      },
      "121": {
        start: {
          line: 295,
          column: 23
        },
        end: {
          line: 314,
          column: 9
        }
      },
      "122": {
        start: {
          line: 304,
          column: 61
        },
        end: {
          line: 304,
          column: 96
        }
      },
      "123": {
        start: {
          line: 316,
          column: 27
        },
        end: {
          line: 321,
          column: 10
        }
      },
      "124": {
        start: {
          line: 323,
          column: 26
        },
        end: {
          line: 323,
          column: 79
        }
      },
      "125": {
        start: {
          line: 324,
          column: 22
        },
        end: {
          line: 324,
          column: 41
        }
      },
      "126": {
        start: {
          line: 326,
          column: 8
        },
        end: {
          line: 326,
          column: 69
        }
      },
      "127": {
        start: {
          line: 328,
          column: 8
        },
        end: {
          line: 328,
          column: 83
        }
      },
      "128": {
        start: {
          line: 329,
          column: 8
        },
        end: {
          line: 329,
          column: 67
        }
      },
      "129": {
        start: {
          line: 337,
          column: 20
        },
        end: {
          line: 337,
          column: 119
        }
      },
      "130": {
        start: {
          line: 338,
          column: 26
        },
        end: {
          line: 338,
          column: 106
        }
      },
      "131": {
        start: {
          line: 338,
          column: 62
        },
        end: {
          line: 338,
          column: 99
        }
      },
      "132": {
        start: {
          line: 339,
          column: 4
        },
        end: {
          line: 339,
          column: 90
        }
      },
      "133": {
        start: {
          line: 346,
          column: 4
        },
        end: {
          line: 346,
          column: 52
        }
      },
      "134": {
        start: {
          line: 346,
          column: 42
        },
        end: {
          line: 346,
          column: 52
        }
      },
      "135": {
        start: {
          line: 348,
          column: 20
        },
        end: {
          line: 348,
          column: 97
        }
      },
      "136": {
        start: {
          line: 349,
          column: 4
        },
        end: {
          line: 351,
          column: 6
        }
      },
      "137": {
        start: {
          line: 350,
          column: 8
        },
        end: {
          line: 350,
          column: 45
        }
      },
      "138": {
        start: {
          line: 358,
          column: 4
        },
        end: {
          line: 358,
          column: 52
        }
      },
      "139": {
        start: {
          line: 358,
          column: 42
        },
        end: {
          line: 358,
          column: 52
        }
      },
      "140": {
        start: {
          line: 360,
          column: 28
        },
        end: {
          line: 360,
          column: 64
        }
      },
      "141": {
        start: {
          line: 360,
          column: 48
        },
        end: {
          line: 360,
          column: 63
        }
      },
      "142": {
        start: {
          line: 361,
          column: 4
        },
        end: {
          line: 363,
          column: 6
        }
      },
      "143": {
        start: {
          line: 362,
          column: 8
        },
        end: {
          line: 362,
          column: 73
        }
      },
      "144": {
        start: {
          line: 362,
          column: 39
        },
        end: {
          line: 362,
          column: 72
        }
      },
      "145": {
        start: {
          line: 370,
          column: 4
        },
        end: {
          line: 428,
          column: 5
        }
      },
      "146": {
        start: {
          line: 372,
          column: 34
        },
        end: {
          line: 372,
          column: 72
        }
      },
      "147": {
        start: {
          line: 373,
          column: 36
        },
        end: {
          line: 373,
          column: 66
        }
      },
      "148": {
        start: {
          line: 375,
          column: 8
        },
        end: {
          line: 382,
          column: 9
        }
      },
      "149": {
        start: {
          line: 376,
          column: 12
        },
        end: {
          line: 380,
          column: 14
        }
      },
      "150": {
        start: {
          line: 381,
          column: 12
        },
        end: {
          line: 381,
          column: 19
        }
      },
      "151": {
        start: {
          line: 385,
          column: 30
        },
        end: {
          line: 387,
          column: 41
        }
      },
      "152": {
        start: {
          line: 386,
          column: 12
        },
        end: {
          line: 386,
          column: 52
        }
      },
      "153": {
        start: {
          line: 389,
          column: 8
        },
        end: {
          line: 389,
          column: 113
        }
      },
      "154": {
        start: {
          line: 392,
          column: 8
        },
        end: {
          line: 417,
          column: 9
        }
      },
      "155": {
        start: {
          line: 393,
          column: 12
        },
        end: {
          line: 416,
          column: 13
        }
      },
      "156": {
        start: {
          line: 394,
          column: 43
        },
        end: {
          line: 401,
          column: 17
        }
      },
      "157": {
        start: {
          line: 403,
          column: 16
        },
        end: {
          line: 409,
          column: 18
        }
      },
      "158": {
        start: {
          line: 411,
          column: 16
        },
        end: {
          line: 411,
          column: 77
        }
      },
      "159": {
        start: {
          line: 413,
          column: 16
        },
        end: {
          line: 413,
          column: 89
        }
      },
      "160": {
        start: {
          line: 415,
          column: 16
        },
        end: {
          line: 415,
          column: 84
        }
      },
      "161": {
        start: {
          line: 419,
          column: 8
        },
        end: {
          line: 423,
          column: 10
        }
      },
      "162": {
        start: {
          line: 426,
          column: 8
        },
        end: {
          line: 426,
          column: 61
        }
      },
      "163": {
        start: {
          line: 427,
          column: 8
        },
        end: {
          line: 427,
          column: 90
        }
      },
      "164": {
        start: {
          line: 435,
          column: 4
        },
        end: {
          line: 490,
          column: 6
        }
      },
      "165": {
        start: {
          line: 496,
          column: 4
        },
        end: {
          line: 506,
          column: 6
        }
      },
      "166": {
        start: {
          line: 511,
          column: 4
        },
        end: {
          line: 511,
          column: 41
        }
      },
      "167": {
        start: {
          line: 516,
          column: 4
        },
        end: {
          line: 516,
          column: 78
        }
      },
      "168": {
        start: {
          line: 517,
          column: 4
        },
        end: {
          line: 519,
          column: 7
        }
      },
      "169": {
        start: {
          line: 518,
          column: 8
        },
        end: {
          line: 518,
          column: 87
        }
      },
      "170": {
        start: {
          line: 526,
          column: 4
        },
        end: {
          line: 537,
          column: 5
        }
      },
      "171": {
        start: {
          line: 528,
          column: 47
        },
        end: {
          line: 528,
          column: 105
        }
      },
      "172": {
        start: {
          line: 531,
          column: 8
        },
        end: {
          line: 531,
          column: 76
        }
      },
      "173": {
        start: {
          line: 533,
          column: 8
        },
        end: {
          line: 533,
          column: 102
        }
      },
      "174": {
        start: {
          line: 535,
          column: 8
        },
        end: {
          line: 535,
          column: 76
        }
      }
    },
    fnMap: {
      "0": {
        name: "initializeAzureOpenAI",
        decl: {
          start: {
            line: 23,
            column: 15
          },
          end: {
            line: 23,
            column: 36
          }
        },
        loc: {
          start: {
            line: 23,
            column: 39
          },
          end: {
            line: 51,
            column: 1
          }
        },
        line: 23
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 57,
            column: 13
          },
          end: {
            line: 57,
            column: 14
          }
        },
        loc: {
          start: {
            line: 57,
            column: 43
          },
          end: {
            line: 132,
            column: 5
          }
        },
        line: 57
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 97,
            column: 58
          },
          end: {
            line: 97,
            column: 59
          }
        },
        loc: {
          start: {
            line: 98,
            column: 16
          },
          end: {
            line: 98,
            column: 67
          }
        },
        line: 98
      },
      "3": {
        name: "searchJobsAcrossPortals",
        decl: {
          start: {
            line: 138,
            column: 15
          },
          end: {
            line: 138,
            column: 38
          }
        },
        loc: {
          start: {
            line: 138,
            column: 56
          },
          end: {
            line: 194,
            column: 1
          }
        },
        line: 138
      },
      "4": {
        name: "filterJobsBySearchCriteria",
        decl: {
          start: {
            line: 199,
            column: 9
          },
          end: {
            line: 199,
            column: 35
          }
        },
        loc: {
          start: {
            line: 199,
            column: 51
          },
          end: {
            line: 251,
            column: 1
          }
        },
        line: 199
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 200,
            column: 23
          },
          end: {
            line: 200,
            column: 24
          }
        },
        loc: {
          start: {
            line: 200,
            column: 30
          },
          end: {
            line: 250,
            column: 5
          }
        },
        line: 200
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 204,
            column: 53
          },
          end: {
            line: 204,
            column: 54
          }
        },
        loc: {
          start: {
            line: 205,
            column: 16
          },
          end: {
            line: 205,
            column: 55
          }
        },
        line: 205
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 212,
            column: 55
          },
          end: {
            line: 212,
            column: 56
          }
        },
        loc: {
          start: {
            line: 213,
            column: 16
          },
          end: {
            line: 214,
            column: 89
          }
        },
        line: 213
      },
      "8": {
        name: "calculateRelevancyScores",
        decl: {
          start: {
            line: 256,
            column: 15
          },
          end: {
            line: 256,
            column: 39
          }
        },
        loc: {
          start: {
            line: 256,
            column: 59
          },
          end: {
            line: 281,
            column: 1
          }
        },
        line: 256
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 280,
            column: 34
          },
          end: {
            line: 280,
            column: 35
          }
        },
        loc: {
          start: {
            line: 280,
            column: 44
          },
          end: {
            line: 280,
            column: 93
          }
        },
        line: 280
      },
      "10": {
        name: "calculateJobRelevancy",
        decl: {
          start: {
            line: 286,
            column: 15
          },
          end: {
            line: 286,
            column: 36
          }
        },
        loc: {
          start: {
            line: 286,
            column: 62
          },
          end: {
            line: 331,
            column: 1
          }
        },
        line: 286
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 304,
            column: 54
          },
          end: {
            line: 304,
            column: 55
          }
        },
        loc: {
          start: {
            line: 304,
            column: 61
          },
          end: {
            line: 304,
            column: 96
          }
        },
        line: 304
      },
      "12": {
        name: "calculateFallbackRelevancy",
        decl: {
          start: {
            line: 336,
            column: 9
          },
          end: {
            line: 336,
            column: 35
          }
        },
        loc: {
          start: {
            line: 336,
            column: 61
          },
          end: {
            line: 340,
            column: 1
          }
        },
        line: 336
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 338,
            column: 53
          },
          end: {
            line: 338,
            column: 54
          }
        },
        loc: {
          start: {
            line: 338,
            column: 62
          },
          end: {
            line: 338,
            column: 99
          }
        },
        line: 338
      },
      "14": {
        name: "getMatchedSkills",
        decl: {
          start: {
            line: 345,
            column: 9
          },
          end: {
            line: 345,
            column: 25
          }
        },
        loc: {
          start: {
            line: 345,
            column: 43
          },
          end: {
            line: 352,
            column: 1
          }
        },
        line: 345
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 349,
            column: 29
          },
          end: {
            line: 349,
            column: 30
          }
        },
        loc: {
          start: {
            line: 350,
            column: 8
          },
          end: {
            line: 350,
            column: 45
          }
        },
        line: 350
      },
      "16": {
        name: "getMissingSkills",
        decl: {
          start: {
            line: 357,
            column: 9
          },
          end: {
            line: 357,
            column: 25
          }
        },
        loc: {
          start: {
            line: 357,
            column: 43
          },
          end: {
            line: 364,
            column: 1
          }
        },
        line: 357
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 360,
            column: 43
          },
          end: {
            line: 360,
            column: 44
          }
        },
        loc: {
          start: {
            line: 360,
            column: 48
          },
          end: {
            line: 360,
            column: 63
          }
        },
        line: 360
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 361,
            column: 35
          },
          end: {
            line: 361,
            column: 36
          }
        },
        loc: {
          start: {
            line: 362,
            column: 8
          },
          end: {
            line: 362,
            column: 73
          }
        },
        line: 362
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 362,
            column: 30
          },
          end: {
            line: 362,
            column: 31
          }
        },
        loc: {
          start: {
            line: 362,
            column: 39
          },
          end: {
            line: 362,
            column: 72
          }
        },
        line: 362
      },
      "20": {
        name: "processAutoApply",
        decl: {
          start: {
            line: 369,
            column: 15
          },
          end: {
            line: 369,
            column: 31
          }
        },
        loc: {
          start: {
            line: 369,
            column: 99
          },
          end: {
            line: 429,
            column: 1
          }
        },
        line: 369
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 385,
            column: 50
          },
          end: {
            line: 385,
            column: 51
          }
        },
        loc: {
          start: {
            line: 386,
            column: 12
          },
          end: {
            line: 386,
            column: 52
          }
        },
        line: 386
      },
      "22": {
        name: "getMockJobListings",
        decl: {
          start: {
            line: 434,
            column: 15
          },
          end: {
            line: 434,
            column: 33
          }
        },
        loc: {
          start: {
            line: 434,
            column: 36
          },
          end: {
            line: 491,
            column: 1
          }
        },
        line: 434
      },
      "23": {
        name: "getUserProfile",
        decl: {
          start: {
            line: 495,
            column: 15
          },
          end: {
            line: 495,
            column: 29
          }
        },
        loc: {
          start: {
            line: 495,
            column: 38
          },
          end: {
            line: 507,
            column: 1
          }
        },
        line: 495
      },
      "24": {
        name: "getTodayApplicationCount",
        decl: {
          start: {
            line: 509,
            column: 15
          },
          end: {
            line: 509,
            column: 39
          }
        },
        loc: {
          start: {
            line: 509,
            column: 48
          },
          end: {
            line: 512,
            column: 1
          }
        },
        line: 509
      },
      "25": {
        name: "storeDiscoveredJobs",
        decl: {
          start: {
            line: 514,
            column: 15
          },
          end: {
            line: 514,
            column: 34
          }
        },
        loc: {
          start: {
            line: 514,
            column: 49
          },
          end: {
            line: 520,
            column: 1
          }
        },
        line: 514
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 517,
            column: 17
          },
          end: {
            line: 517,
            column: 18
          }
        },
        loc: {
          start: {
            line: 517,
            column: 24
          },
          end: {
            line: 519,
            column: 5
          }
        },
        line: 517
      },
      "27": {
        name: "sendJobDiscoveredNotifications",
        decl: {
          start: {
            line: 525,
            column: 15
          },
          end: {
            line: 525,
            column: 45
          }
        },
        loc: {
          start: {
            line: 525,
            column: 60
          },
          end: {
            line: 538,
            column: 1
          }
        },
        line: 525
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 26,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 26,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 24
      },
      "1": {
        loc: {
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 34,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 34,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 31
      },
      "2": {
        loc: {
          start: {
            line: 31,
            column: 12
          },
          end: {
            line: 31,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 31,
            column: 12
          },
          end: {
            line: 31,
            column: 35
          }
        }, {
          start: {
            line: 31,
            column: 39
          },
          end: {
            line: 31,
            column: 67
          }
        }],
        line: 31
      },
      "3": {
        loc: {
          start: {
            line: 61,
            column: 31
          },
          end: {
            line: 61,
            column: 96
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 61,
            column: 63
          },
          end: {
            line: 61,
            column: 84
          }
        }, {
          start: {
            line: 61,
            column: 87
          },
          end: {
            line: 61,
            column: 96
          }
        }],
        line: 61
      },
      "4": {
        loc: {
          start: {
            line: 71,
            column: 12
          },
          end: {
            line: 73,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 71,
            column: 12
          },
          end: {
            line: 73,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 71
      },
      "5": {
        loc: {
          start: {
            line: 71,
            column: 16
          },
          end: {
            line: 71,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 71,
            column: 16
          },
          end: {
            line: 71,
            column: 23
          }
        }, {
          start: {
            line: 71,
            column: 27
          },
          end: {
            line: 71,
            column: 35
          }
        }],
        line: 71
      },
      "6": {
        loc: {
          start: {
            line: 77,
            column: 12
          },
          end: {
            line: 79,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 77,
            column: 12
          },
          end: {
            line: 79,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 77
      },
      "7": {
        loc: {
          start: {
            line: 84,
            column: 12
          },
          end: {
            line: 91,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 84,
            column: 12
          },
          end: {
            line: 91,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 84
      },
      "8": {
        loc: {
          start: {
            line: 109,
            column: 12
          },
          end: {
            line: 111,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 109,
            column: 12
          },
          end: {
            line: 111,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 109
      },
      "9": {
        loc: {
          start: {
            line: 109,
            column: 16
          },
          end: {
            line: 109,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 109,
            column: 16
          },
          end: {
            line: 109,
            column: 25
          }
        }, {
          start: {
            line: 109,
            column: 29
          },
          end: {
            line: 109,
            column: 52
          }
        }],
        line: 109
      },
      "10": {
        loc: {
          start: {
            line: 145,
            column: 8
          },
          end: {
            line: 162,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 145,
            column: 8
          },
          end: {
            line: 162,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 145
      },
      "11": {
        loc: {
          start: {
            line: 150,
            column: 16
          },
          end: {
            line: 157,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 150,
            column: 16
          },
          end: {
            line: 157,
            column: 17
          }
        }, {
          start: {
            line: 155,
            column: 23
          },
          end: {
            line: 157,
            column: 17
          }
        }],
        line: 150
      },
      "12": {
        loc: {
          start: {
            line: 165,
            column: 8
          },
          end: {
            line: 170,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 165,
            column: 8
          },
          end: {
            line: 170,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 165
      },
      "13": {
        loc: {
          start: {
            line: 202,
            column: 8
          },
          end: {
            line: 208,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 202,
            column: 8
          },
          end: {
            line: 208,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 202
      },
      "14": {
        loc: {
          start: {
            line: 202,
            column: 12
          },
          end: {
            line: 202,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 202,
            column: 12
          },
          end: {
            line: 202,
            column: 28
          }
        }, {
          start: {
            line: 202,
            column: 32
          },
          end: {
            line: 202,
            column: 59
          }
        }],
        line: 202
      },
      "15": {
        loc: {
          start: {
            line: 207,
            column: 12
          },
          end: {
            line: 207,
            column: 42
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 207,
            column: 12
          },
          end: {
            line: 207,
            column: 42
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 207
      },
      "16": {
        loc: {
          start: {
            line: 211,
            column: 8
          },
          end: {
            line: 217,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 211,
            column: 8
          },
          end: {
            line: 217,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 211
      },
      "17": {
        loc: {
          start: {
            line: 211,
            column: 12
          },
          end: {
            line: 211,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 211,
            column: 12
          },
          end: {
            line: 211,
            column: 29
          }
        }, {
          start: {
            line: 211,
            column: 33
          },
          end: {
            line: 211,
            column: 61
          }
        }],
        line: 211
      },
      "18": {
        loc: {
          start: {
            line: 213,
            column: 16
          },
          end: {
            line: 214,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 213,
            column: 16
          },
          end: {
            line: 213,
            column: 75
          }
        }, {
          start: {
            line: 214,
            column: 17
          },
          end: {
            line: 214,
            column: 52
          }
        }, {
          start: {
            line: 214,
            column: 56
          },
          end: {
            line: 214,
            column: 88
          }
        }],
        line: 213
      },
      "19": {
        loc: {
          start: {
            line: 216,
            column: 12
          },
          end: {
            line: 216,
            column: 43
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 216,
            column: 12
          },
          end: {
            line: 216,
            column: 43
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 216
      },
      "20": {
        loc: {
          start: {
            line: 220,
            column: 8
          },
          end: {
            line: 224,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 220,
            column: 8
          },
          end: {
            line: 224,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 220
      },
      "21": {
        loc: {
          start: {
            line: 220,
            column: 12
          },
          end: {
            line: 220,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 220,
            column: 12
          },
          end: {
            line: 220,
            column: 28
          }
        }, {
          start: {
            line: 220,
            column: 32
          },
          end: {
            line: 220,
            column: 59
          }
        }],
        line: 220
      },
      "22": {
        loc: {
          start: {
            line: 221,
            column: 12
          },
          end: {
            line: 223,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 221,
            column: 12
          },
          end: {
            line: 223,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 221
      },
      "23": {
        loc: {
          start: {
            line: 227,
            column: 8
          },
          end: {
            line: 231,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 227,
            column: 8
          },
          end: {
            line: 231,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 227
      },
      "24": {
        loc: {
          start: {
            line: 227,
            column: 12
          },
          end: {
            line: 227,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 227,
            column: 12
          },
          end: {
            line: 227,
            column: 36
          }
        }, {
          start: {
            line: 227,
            column: 40
          },
          end: {
            line: 227,
            column: 75
          }
        }],
        line: 227
      },
      "25": {
        loc: {
          start: {
            line: 228,
            column: 12
          },
          end: {
            line: 230,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 228,
            column: 12
          },
          end: {
            line: 230,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 228
      },
      "26": {
        loc: {
          start: {
            line: 235,
            column: 8
          },
          end: {
            line: 247,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 235,
            column: 8
          },
          end: {
            line: 247,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 235
      },
      "27": {
        loc: {
          start: {
            line: 236,
            column: 12
          },
          end: {
            line: 246,
            column: 13
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 237,
            column: 16
          },
          end: {
            line: 239,
            column: 26
          }
        }, {
          start: {
            line: 240,
            column: 16
          },
          end: {
            line: 242,
            column: 26
          }
        }, {
          start: {
            line: 243,
            column: 16
          },
          end: {
            line: 245,
            column: 26
          }
        }],
        line: 236
      },
      "28": {
        loc: {
          start: {
            line: 238,
            column: 20
          },
          end: {
            line: 238,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 238,
            column: 20
          },
          end: {
            line: 238,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 238
      },
      "29": {
        loc: {
          start: {
            line: 241,
            column: 20
          },
          end: {
            line: 241,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 241,
            column: 20
          },
          end: {
            line: 241,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 241
      },
      "30": {
        loc: {
          start: {
            line: 244,
            column: 20
          },
          end: {
            line: 244,
            column: 52
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 244,
            column: 20
          },
          end: {
            line: 244,
            column: 52
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 244
      },
      "31": {
        loc: {
          start: {
            line: 280,
            column: 45
          },
          end: {
            line: 280,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 280,
            column: 45
          },
          end: {
            line: 280,
            column: 61
          }
        }, {
          start: {
            line: 280,
            column: 65
          },
          end: {
            line: 280,
            column: 66
          }
        }],
        line: 280
      },
      "32": {
        loc: {
          start: {
            line: 280,
            column: 71
          },
          end: {
            line: 280,
            column: 92
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 280,
            column: 71
          },
          end: {
            line: 280,
            column: 87
          }
        }, {
          start: {
            line: 280,
            column: 91
          },
          end: {
            line: 280,
            column: 92
          }
        }],
        line: 280
      },
      "33": {
        loc: {
          start: {
            line: 290,
            column: 8
          },
          end: {
            line: 293,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 290,
            column: 8
          },
          end: {
            line: 293,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 290
      },
      "34": {
        loc: {
          start: {
            line: 323,
            column: 26
          },
          end: {
            line: 323,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 323,
            column: 26
          },
          end: {
            line: 323,
            column: 73
          }
        }, {
          start: {
            line: 323,
            column: 77
          },
          end: {
            line: 323,
            column: 79
          }
        }],
        line: 323
      },
      "35": {
        loc: {
          start: {
            line: 326,
            column: 15
          },
          end: {
            line: 326,
            column: 68
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 326,
            column: 30
          },
          end: {
            line: 326,
            column: 32
          }
        }, {
          start: {
            line: 326,
            column: 35
          },
          end: {
            line: 326,
            column: 68
          }
        }],
        line: 326
      },
      "36": {
        loc: {
          start: {
            line: 338,
            column: 26
          },
          end: {
            line: 338,
            column: 106
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 338,
            column: 26
          },
          end: {
            line: 338,
            column: 100
          }
        }, {
          start: {
            line: 338,
            column: 104
          },
          end: {
            line: 338,
            column: 106
          }
        }],
        line: 338
      },
      "37": {
        loc: {
          start: {
            line: 339,
            column: 49
          },
          end: {
            line: 339,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 339,
            column: 49
          },
          end: {
            line: 339,
            column: 75
          }
        }, {
          start: {
            line: 339,
            column: 79
          },
          end: {
            line: 339,
            column: 80
          }
        }],
        line: 339
      },
      "38": {
        loc: {
          start: {
            line: 346,
            column: 4
          },
          end: {
            line: 346,
            column: 52
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 346,
            column: 4
          },
          end: {
            line: 346,
            column: 52
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 346
      },
      "39": {
        loc: {
          start: {
            line: 346,
            column: 8
          },
          end: {
            line: 346,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 346,
            column: 8
          },
          end: {
            line: 346,
            column: 19
          }
        }, {
          start: {
            line: 346,
            column: 23
          },
          end: {
            line: 346,
            column: 40
          }
        }],
        line: 346
      },
      "40": {
        loc: {
          start: {
            line: 358,
            column: 4
          },
          end: {
            line: 358,
            column: 52
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 358,
            column: 4
          },
          end: {
            line: 358,
            column: 52
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 358
      },
      "41": {
        loc: {
          start: {
            line: 358,
            column: 8
          },
          end: {
            line: 358,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 358,
            column: 8
          },
          end: {
            line: 358,
            column: 19
          }
        }, {
          start: {
            line: 358,
            column: 23
          },
          end: {
            line: 358,
            column: 40
          }
        }],
        line: 358
      },
      "42": {
        loc: {
          start: {
            line: 375,
            column: 8
          },
          end: {
            line: 382,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 375,
            column: 8
          },
          end: {
            line: 382,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 375
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0]
    },
    inputSourceMap: null,
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "aad804b54a0932f2e75f50f377989db98042e3b1"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1khoy7aw45 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1khoy7aw45();
const {
  app
} =
/* istanbul ignore next */
(cov_1khoy7aw45().s[0]++, require('@azure/functions'));
const queueService =
/* istanbul ignore next */
(cov_1khoy7aw45().s[1]++, require('../lib/services/queue-service'));
const automationLogger =
/* istanbul ignore next */
(cov_1khoy7aw45().s[2]++, require('../lib/services/automation-logs'));
const OpenAI =
/* istanbul ignore next */
(cov_1khoy7aw45().s[3]++, require('openai'));
const {
  fetchAzureSecrets
} =
/* istanbul ignore next */
(cov_1khoy7aw45().s[4]++, require('../lib/azure-config'));
const {
  v4: uuidv4
} =
/* istanbul ignore next */
(cov_1khoy7aw45().s[5]++, require('uuid'));

// Import TheirStack portal
let getTheirStackPortal;
/* istanbul ignore next */
cov_1khoy7aw45().s[6]++;
try {
  /* istanbul ignore next */
  cov_1khoy7aw45().s[7]++;
  ({
    getTheirStackPortal
  } = require('../../portals/theirstack'));
} catch (error) {
  /* istanbul ignore next */
  cov_1khoy7aw45().s[8]++;
  console.warn('⚠️ TheirStack portal not available:', error.message);
  /* istanbul ignore next */
  cov_1khoy7aw45().s[9]++;
  getTheirStackPortal = null;
}

// Azure OpenAI client - will be initialized from Key Vault secrets
let azureOpenAIClient =
/* istanbul ignore next */
(cov_1khoy7aw45().s[10]++, null);

/**
 * Initialize Azure OpenAI client
 */
async function initializeAzureOpenAI() {
  /* istanbul ignore next */
  cov_1khoy7aw45().f[0]++;
  cov_1khoy7aw45().s[11]++;
  if (azureOpenAIClient) {
    /* istanbul ignore next */
    cov_1khoy7aw45().b[0][0]++;
    cov_1khoy7aw45().s[12]++;
    return azureOpenAIClient;
  } else
  /* istanbul ignore next */
  {
    cov_1khoy7aw45().b[0][1]++;
  }
  cov_1khoy7aw45().s[13]++;
  try {
    const secrets =
    /* istanbul ignore next */
    (cov_1khoy7aw45().s[14]++, await fetchAzureSecrets());
    /* istanbul ignore next */
    cov_1khoy7aw45().s[15]++;
    if (
    /* istanbul ignore next */
    (cov_1khoy7aw45().b[2][0]++, !secrets.azureOpenAIKey) ||
    /* istanbul ignore next */
    (cov_1khoy7aw45().b[2][1]++, !secrets.azureOpenAIEndpoint)) {
      /* istanbul ignore next */
      cov_1khoy7aw45().b[1][0]++;
      cov_1khoy7aw45().s[16]++;
      console.warn('⚠️ Azure OpenAI credentials not available, using fallback');
      /* istanbul ignore next */
      cov_1khoy7aw45().s[17]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_1khoy7aw45().b[1][1]++;
    }
    cov_1khoy7aw45().s[18]++;
    azureOpenAIClient = new OpenAI({
      apiKey: secrets.azureOpenAIKey,
      baseURL: `${secrets.azureOpenAIEndpoint}/openai/deployments/${secrets.azureOpenAIDeployment}`,
      defaultQuery: {
        'api-version': '2024-08-01-preview'
      },
      defaultHeaders: {
        'api-key': secrets.azureOpenAIKey
      }
    });
    /* istanbul ignore next */
    cov_1khoy7aw45().s[19]++;
    console.log('✅ Azure OpenAI client initialized for job search worker');
    /* istanbul ignore next */
    cov_1khoy7aw45().s[20]++;
    return azureOpenAIClient;
  } catch (error) {
    /* istanbul ignore next */
    cov_1khoy7aw45().s[21]++;
    console.error('❌ Failed to initialize Azure OpenAI client:', error);
    /* istanbul ignore next */
    cov_1khoy7aw45().s[22]++;
    return null;
  }
}

// Queue trigger function for processing job searches
/* istanbul ignore next */
cov_1khoy7aw45().s[23]++;
app.storageQueue('jobSearchWorker', {
  queueName: 'search-jobs',
  connection: 'AzureWebJobsStorage',
  handler: async (queueItem, context) => {
    /* istanbul ignore next */
    cov_1khoy7aw45().f[1]++;
    cov_1khoy7aw45().s[24]++;
    context.log('Job Search Worker processing queue item:', queueItem);
    /* istanbul ignore next */
    cov_1khoy7aw45().s[25]++;
    try {
      const searchData =
      /* istanbul ignore next */
      (cov_1khoy7aw45().s[26]++, typeof queueItem === 'string' ?
      /* istanbul ignore next */
      (cov_1khoy7aw45().b[3][0]++, JSON.parse(queueItem)) :
      /* istanbul ignore next */
      (cov_1khoy7aw45().b[3][1]++, queueItem));
      const {
        userId,
        filters,
        requestId,
        autoApply,
        autoApplyThreshold,
        dailyLimit,
        priority
      } =
      /* istanbul ignore next */
      (cov_1khoy7aw45().s[27]++, searchData);
      /* istanbul ignore next */
      cov_1khoy7aw45().s[28]++;
      await automationLogger.logInfo('job_search_processing_started', `Starting job search processing for user ${userId}`, {
        userId,
        requestId,
        autoApply,
        priority
      });

      // Validate user and search parameters
      /* istanbul ignore next */
      cov_1khoy7aw45().s[29]++;
      if (
      /* istanbul ignore next */
      (cov_1khoy7aw45().b[5][0]++, !userId) ||
      /* istanbul ignore next */
      (cov_1khoy7aw45().b[5][1]++, !filters)) {
        /* istanbul ignore next */
        cov_1khoy7aw45().b[4][0]++;
        cov_1khoy7aw45().s[30]++;
        throw new Error('Invalid search parameters: userId and filters are required');
      } else
      /* istanbul ignore next */
      {
        cov_1khoy7aw45().b[4][1]++;
      }

      // Get user profile for relevancy calculation
      const userProfile =
      /* istanbul ignore next */
      (cov_1khoy7aw45().s[31]++, await getUserProfile(userId));
      /* istanbul ignore next */
      cov_1khoy7aw45().s[32]++;
      if (!userProfile) {
        /* istanbul ignore next */
        cov_1khoy7aw45().b[6][0]++;
        cov_1khoy7aw45().s[33]++;
        throw new Error(`User profile not found for user ${userId}`);
      } else
      /* istanbul ignore next */
      {
        cov_1khoy7aw45().b[6][1]++;
      }

      // Perform job search across configured portals
      const searchResults =
      /* istanbul ignore next */
      (cov_1khoy7aw45().s[34]++, await searchJobsAcrossPortals(userId, filters));
      /* istanbul ignore next */
      cov_1khoy7aw45().s[35]++;
      if (searchResults.jobs.length === 0) {
        /* istanbul ignore next */
        cov_1khoy7aw45().b[7][0]++;
        cov_1khoy7aw45().s[36]++;
        await automationLogger.logInfo('job_search_no_results', 'No jobs found for search criteria', {
          userId,
          requestId,
          filters
        });
        /* istanbul ignore next */
        cov_1khoy7aw45().s[37]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1khoy7aw45().b[7][1]++;
      }

      // Calculate relevancy scores for found jobs
      const jobsWithRelevancy =
      /* istanbul ignore next */
      (cov_1khoy7aw45().s[38]++, await calculateRelevancyScores(searchResults.jobs, userProfile));

      // Filter jobs based on relevancy threshold
      const relevantJobs =
      /* istanbul ignore next */
      (cov_1khoy7aw45().s[39]++, jobsWithRelevancy.filter(job => {
        /* istanbul ignore next */
        cov_1khoy7aw45().f[2]++;
        cov_1khoy7aw45().s[40]++;
        return job.relevancyScore >= filters.minimumRelevancyScore;
      }));

      // Log search results
      /* istanbul ignore next */
      cov_1khoy7aw45().s[41]++;
      await automationLogger.logJobSearch(userId, filters, {
        jobs: relevantJobs,
        totalFound: searchResults.jobs.length,
        relevantCount: relevantJobs.length
      });

      // Process auto-apply if enabled
      /* istanbul ignore next */
      cov_1khoy7aw45().s[42]++;
      if (
      /* istanbul ignore next */
      (cov_1khoy7aw45().b[9][0]++, autoApply) &&
      /* istanbul ignore next */
      (cov_1khoy7aw45().b[9][1]++, relevantJobs.length > 0)) {
        /* istanbul ignore next */
        cov_1khoy7aw45().b[8][0]++;
        cov_1khoy7aw45().s[43]++;
        await processAutoApply(userId, relevantJobs, autoApplyThreshold, dailyLimit, userProfile);
      } else
      /* istanbul ignore next */
      {
        cov_1khoy7aw45().b[8][1]++;
      }

      // Store discovered jobs for user (TODO: implement proper storage)
      cov_1khoy7aw45().s[44]++;
      await storeDiscoveredJobs(userId, relevantJobs);

      // Send job discovered notifications
      /* istanbul ignore next */
      cov_1khoy7aw45().s[45]++;
      await sendJobDiscoveredNotifications(userId, relevantJobs);
      /* istanbul ignore next */
      cov_1khoy7aw45().s[46]++;
      context.log(`Successfully processed job search for user ${userId}: found ${relevantJobs.length} relevant jobs`);
    } catch (error) {
      /* istanbul ignore next */
      cov_1khoy7aw45().s[47]++;
      context.log('Error processing job search:', error);
      /* istanbul ignore next */
      cov_1khoy7aw45().s[48]++;
      await automationLogger.logError('job_search_processing_error', error, {
        queueItem
      });

      // Re-throw to trigger Azure Functions retry logic
      /* istanbul ignore next */
      cov_1khoy7aw45().s[49]++;
      throw error;
    }
  }
});

/**
 * Search for jobs across multiple portals
 */
async function searchJobsAcrossPortals(userId, filters) {
  /* istanbul ignore next */
  cov_1khoy7aw45().f[3]++;
  const allJobs =
  /* istanbul ignore next */
  (cov_1khoy7aw45().s[50]++, []);
  const searchedPortals =
  /* istanbul ignore next */
  (cov_1khoy7aw45().s[51]++, []);
  const mockJobs =
  /* istanbul ignore next */
  (cov_1khoy7aw45().s[52]++, await getMockJobListings()); // Fallback to mock data
  /* istanbul ignore next */
  cov_1khoy7aw45().s[53]++;
  try {
    /* istanbul ignore next */
    cov_1khoy7aw45().s[54]++;
    // Try TheirStack portal first
    if (getTheirStackPortal) {
      /* istanbul ignore next */
      cov_1khoy7aw45().b[10][0]++;
      cov_1khoy7aw45().s[55]++;
      try {
        /* istanbul ignore next */
        cov_1khoy7aw45().s[56]++;
        console.log('🔍 Searching TheirStack for jobs...');
        const theirStackPortal =
        /* istanbul ignore next */
        (cov_1khoy7aw45().s[57]++, getTheirStackPortal());
        /* istanbul ignore next */
        cov_1khoy7aw45().s[58]++;
        if (theirStackPortal.isConfigured()) {
          /* istanbul ignore next */
          cov_1khoy7aw45().b[11][0]++;
          const theirStackJobs =
          /* istanbul ignore next */
          (cov_1khoy7aw45().s[59]++, await theirStackPortal.searchJobs(userId, filters));
          /* istanbul ignore next */
          cov_1khoy7aw45().s[60]++;
          allJobs.push(...theirStackJobs);
          /* istanbul ignore next */
          cov_1khoy7aw45().s[61]++;
          searchedPortals.push('TheirStack');
          /* istanbul ignore next */
          cov_1khoy7aw45().s[62]++;
          console.log(`✅ Found ${theirStackJobs.length} jobs from TheirStack`);
        } else {
          /* istanbul ignore next */
          cov_1khoy7aw45().b[11][1]++;
          cov_1khoy7aw45().s[63]++;
          console.warn('⚠️ TheirStack not configured, skipping');
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_1khoy7aw45().s[64]++;
        console.error('❌ TheirStack search failed:', error.message);
        // Continue to fallback options
      }
    } else
    /* istanbul ignore next */
    {
      cov_1khoy7aw45().b[10][1]++;
    }

    // If TheirStack didn't return enough jobs or failed, use mock data as fallback
    cov_1khoy7aw45().s[65]++;
    if (allJobs.length === 0) {
      /* istanbul ignore next */
      cov_1khoy7aw45().b[12][0]++;
      cov_1khoy7aw45().s[66]++;
      console.log('🔄 Falling back to mock job data');
      const filteredJobs =
      /* istanbul ignore next */
      (cov_1khoy7aw45().s[67]++, filterJobsBySearchCriteria(mockJobs, filters));
      /* istanbul ignore next */
      cov_1khoy7aw45().s[68]++;
      allJobs.push(...filteredJobs);
      /* istanbul ignore next */
      cov_1khoy7aw45().s[69]++;
      searchedPortals.push('Mock');
    } else
    /* istanbul ignore next */
    {
      cov_1khoy7aw45().b[12][1]++;
    }
    cov_1khoy7aw45().s[70]++;
    console.log(`Found ${allJobs.length} total jobs across portals for user ${userId}`);
    /* istanbul ignore next */
    cov_1khoy7aw45().s[71]++;
    return {
      jobs: allJobs,
      totalCount: allJobs.length,
      searchedPortals,
      searchedAt: new Date().toISOString()
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_1khoy7aw45().s[72]++;
    console.error('Error searching across portals:', error);

    // Final fallback to mock data
    /* istanbul ignore next */
    cov_1khoy7aw45().s[73]++;
    console.log('🔄 Using mock data as final fallback');
    const fallbackJobs =
    /* istanbul ignore next */
    (cov_1khoy7aw45().s[74]++, filterJobsBySearchCriteria(mockJobs, filters));
    /* istanbul ignore next */
    cov_1khoy7aw45().s[75]++;
    return {
      jobs: fallbackJobs,
      totalCount: fallbackJobs.length,
      searchedPortals: ['Mock (Fallback)'],
      searchedAt: new Date().toISOString()
    };
  }
}

/**
 * Filter jobs based on search criteria
 */
function filterJobsBySearchCriteria(jobs, filters) {
  /* istanbul ignore next */
  cov_1khoy7aw45().f[4]++;
  cov_1khoy7aw45().s[76]++;
  return jobs.filter(job => {
    /* istanbul ignore next */
    cov_1khoy7aw45().f[5]++;
    cov_1khoy7aw45().s[77]++;
    // Keywords filtering
    if (
    /* istanbul ignore next */
    (cov_1khoy7aw45().b[14][0]++, filters.keywords) &&
    /* istanbul ignore next */
    (cov_1khoy7aw45().b[14][1]++, filters.keywords.length > 0)) {
      /* istanbul ignore next */
      cov_1khoy7aw45().b[13][0]++;
      const jobText =
      /* istanbul ignore next */
      (cov_1khoy7aw45().s[78]++, `${job.title} ${job.description} ${job.requirements?.join(' ')}`.toLowerCase());
      const hasKeyword =
      /* istanbul ignore next */
      (cov_1khoy7aw45().s[79]++, filters.keywords.some(keyword => {
        /* istanbul ignore next */
        cov_1khoy7aw45().f[6]++;
        cov_1khoy7aw45().s[80]++;
        return jobText.includes(keyword.toLowerCase());
      }));
      /* istanbul ignore next */
      cov_1khoy7aw45().s[81]++;
      if (!hasKeyword) {
        /* istanbul ignore next */
        cov_1khoy7aw45().b[15][0]++;
        cov_1khoy7aw45().s[82]++;
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_1khoy7aw45().b[15][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1khoy7aw45().b[13][1]++;
    }

    // Location filtering
    cov_1khoy7aw45().s[83]++;
    if (
    /* istanbul ignore next */
    (cov_1khoy7aw45().b[17][0]++, filters.locations) &&
    /* istanbul ignore next */
    (cov_1khoy7aw45().b[17][1]++, filters.locations.length > 0)) {
      /* istanbul ignore next */
      cov_1khoy7aw45().b[16][0]++;
      const hasLocation =
      /* istanbul ignore next */
      (cov_1khoy7aw45().s[84]++, filters.locations.some(location => {
        /* istanbul ignore next */
        cov_1khoy7aw45().f[7]++;
        cov_1khoy7aw45().s[85]++;
        return /* istanbul ignore next */(cov_1khoy7aw45().b[18][0]++, job.location.toLowerCase().includes(location.toLowerCase())) ||
        /* istanbul ignore next */
        (cov_1khoy7aw45().b[18][1]++, location.toLowerCase() === 'remote') &&
        /* istanbul ignore next */
        (cov_1khoy7aw45().b[18][2]++, job.workArrangement === 'remote');
      }));
      /* istanbul ignore next */
      cov_1khoy7aw45().s[86]++;
      if (!hasLocation) {
        /* istanbul ignore next */
        cov_1khoy7aw45().b[19][0]++;
        cov_1khoy7aw45().s[87]++;
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_1khoy7aw45().b[19][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1khoy7aw45().b[16][1]++;
    }

    // Job type filtering
    cov_1khoy7aw45().s[88]++;
    if (
    /* istanbul ignore next */
    (cov_1khoy7aw45().b[21][0]++, filters.jobTypes) &&
    /* istanbul ignore next */
    (cov_1khoy7aw45().b[21][1]++, filters.jobTypes.length > 0)) {
      /* istanbul ignore next */
      cov_1khoy7aw45().b[20][0]++;
      cov_1khoy7aw45().s[89]++;
      if (!filters.jobTypes.includes(job.jobType)) {
        /* istanbul ignore next */
        cov_1khoy7aw45().b[22][0]++;
        cov_1khoy7aw45().s[90]++;
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_1khoy7aw45().b[22][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1khoy7aw45().b[20][1]++;
    }

    // Work arrangement filtering
    cov_1khoy7aw45().s[91]++;
    if (
    /* istanbul ignore next */
    (cov_1khoy7aw45().b[24][0]++, filters.workArrangements) &&
    /* istanbul ignore next */
    (cov_1khoy7aw45().b[24][1]++, filters.workArrangements.length > 0)) {
      /* istanbul ignore next */
      cov_1khoy7aw45().b[23][0]++;
      cov_1khoy7aw45().s[92]++;
      if (!filters.workArrangements.includes(job.workArrangement)) {
        /* istanbul ignore next */
        cov_1khoy7aw45().b[25][0]++;
        cov_1khoy7aw45().s[93]++;
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_1khoy7aw45().b[25][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1khoy7aw45().b[23][1]++;
    }

    // Date filtering
    const daysDiff =
    /* istanbul ignore next */
    (cov_1khoy7aw45().s[94]++, Math.ceil((new Date().getTime() - new Date(job.postedDate).getTime()) / (1000 * 60 * 60 * 24)));
    /* istanbul ignore next */
    cov_1khoy7aw45().s[95]++;
    if (filters.datePosted) {
      /* istanbul ignore next */
      cov_1khoy7aw45().b[26][0]++;
      cov_1khoy7aw45().s[96]++;
      switch (filters.datePosted) {
        case 'past-24-hours':
          /* istanbul ignore next */
          cov_1khoy7aw45().b[27][0]++;
          cov_1khoy7aw45().s[97]++;
          if (daysDiff > 1) {
            /* istanbul ignore next */
            cov_1khoy7aw45().b[28][0]++;
            cov_1khoy7aw45().s[98]++;
            return false;
          } else
          /* istanbul ignore next */
          {
            cov_1khoy7aw45().b[28][1]++;
          }
          cov_1khoy7aw45().s[99]++;
          break;
        case 'past-week':
          /* istanbul ignore next */
          cov_1khoy7aw45().b[27][1]++;
          cov_1khoy7aw45().s[100]++;
          if (daysDiff > 7) {
            /* istanbul ignore next */
            cov_1khoy7aw45().b[29][0]++;
            cov_1khoy7aw45().s[101]++;
            return false;
          } else
          /* istanbul ignore next */
          {
            cov_1khoy7aw45().b[29][1]++;
          }
          cov_1khoy7aw45().s[102]++;
          break;
        case 'past-month':
          /* istanbul ignore next */
          cov_1khoy7aw45().b[27][2]++;
          cov_1khoy7aw45().s[103]++;
          if (daysDiff > 30) {
            /* istanbul ignore next */
            cov_1khoy7aw45().b[30][0]++;
            cov_1khoy7aw45().s[104]++;
            return false;
          } else
          /* istanbul ignore next */
          {
            cov_1khoy7aw45().b[30][1]++;
          }
          cov_1khoy7aw45().s[105]++;
          break;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1khoy7aw45().b[26][1]++;
    }
    cov_1khoy7aw45().s[106]++;
    return true;
  });
}

/**
 * Calculate relevancy scores for jobs using AI
 */
async function calculateRelevancyScores(jobs, userProfile) {
  /* istanbul ignore next */
  cov_1khoy7aw45().f[8]++;
  const jobsWithRelevancy =
  /* istanbul ignore next */
  (cov_1khoy7aw45().s[107]++, []);
  /* istanbul ignore next */
  cov_1khoy7aw45().s[108]++;
  for (const job of jobs) {
    /* istanbul ignore next */
    cov_1khoy7aw45().s[109]++;
    try {
      const relevancyScore =
      /* istanbul ignore next */
      (cov_1khoy7aw45().s[110]++, await calculateJobRelevancy(job, userProfile));
      /* istanbul ignore next */
      cov_1khoy7aw45().s[111]++;
      jobsWithRelevancy.push({
        ...job,
        relevancyScore,
        matchedSkills: getMatchedSkills(job, userProfile.skills),
        missingSkills: getMissingSkills(job, userProfile.skills)
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1khoy7aw45().s[112]++;
      console.error(`Error calculating relevancy for job ${job.id}:`, error);
      // Add job with default relevancy
      /* istanbul ignore next */
      cov_1khoy7aw45().s[113]++;
      jobsWithRelevancy.push({
        ...job,
        relevancyScore: 50,
        matchedSkills: [],
        missingSkills: []
      });
    }
  }
  /* istanbul ignore next */
  cov_1khoy7aw45().s[114]++;
  return jobsWithRelevancy.sort((a, b) => {
    /* istanbul ignore next */
    cov_1khoy7aw45().f[9]++;
    cov_1khoy7aw45().s[115]++;
    return (
    /* istanbul ignore next */
    (cov_1khoy7aw45().b[31][0]++, b.relevancyScore) ||
    /* istanbul ignore next */
    (cov_1khoy7aw45().b[31][1]++, 0)) - (
    /* istanbul ignore next */
    (cov_1khoy7aw45().b[32][0]++, a.relevancyScore) ||
    /* istanbul ignore next */
    (cov_1khoy7aw45().b[32][1]++, 0));
  });
}

/**
 * Calculate job relevancy using AI
 */
async function calculateJobRelevancy(jobListing, userProfile) {
  /* istanbul ignore next */
  cov_1khoy7aw45().f[10]++;
  cov_1khoy7aw45().s[116]++;
  try {
    const client =
    /* istanbul ignore next */
    (cov_1khoy7aw45().s[117]++, await initializeAzureOpenAI());
    /* istanbul ignore next */
    cov_1khoy7aw45().s[118]++;
    if (!client) {
      /* istanbul ignore next */
      cov_1khoy7aw45().b[33][0]++;
      cov_1khoy7aw45().s[119]++;
      console.warn('Azure OpenAI client not available, using fallback relevancy calculation');
      /* istanbul ignore next */
      cov_1khoy7aw45().s[120]++;
      return calculateFallbackRelevancy(jobListing, userProfile);
    } else
    /* istanbul ignore next */
    {
      cov_1khoy7aw45().b[33][1]++;
    }
    const prompt =
    /* istanbul ignore next */
    (cov_1khoy7aw45().s[121]++, `
            Analyze the relevancy between this job posting and the candidate's profile:
            
            JOB TITLE: ${jobListing.title}
            JOB DESCRIPTION: ${jobListing.description}
            REQUIREMENTS: ${jobListing.requirements?.join(', ')}
            
            CANDIDATE PROFILE:
            Skills: ${userProfile.skills?.join(', ')}
            Experience: ${userProfile.experience?.map(exp => {
      /* istanbul ignore next */
      cov_1khoy7aw45().f[11]++;
      cov_1khoy7aw45().s[122]++;
      return `${exp.position} at ${exp.company}`;
    }).join(', ')}
            Target Roles: ${userProfile.targetRoles?.join(', ')}
            
            Calculate a relevancy score from 0-100 based on:
            1. Skills match (40% weight)
            2. Role alignment (30% weight) 
            3. Experience level match (20% weight)
            4. Job requirements match (10% weight)
            
            Return only a number between 0-100.
        `);
    const completion =
    /* istanbul ignore next */
    (cov_1khoy7aw45().s[123]++, await client.chat.completions.create({
      model: 'gpt-35-turbo',
      // Using gpt-35-turbo for quick relevancy scoring
      messages: [{
        role: 'user',
        content: prompt
      }],
      temperature: 0.1,
      max_tokens: 50
    }));
    const scoreText =
    /* istanbul ignore next */
    (cov_1khoy7aw45().s[124]++,
    /* istanbul ignore next */
    (cov_1khoy7aw45().b[34][0]++, completion.choices[0]?.message?.content?.trim()) ||
    /* istanbul ignore next */
    (cov_1khoy7aw45().b[34][1]++, ''));
    const score =
    /* istanbul ignore next */
    (cov_1khoy7aw45().s[125]++, parseInt(scoreText));
    /* istanbul ignore next */
    cov_1khoy7aw45().s[126]++;
    return isNaN(score) ?
    /* istanbul ignore next */
    (cov_1khoy7aw45().b[35][0]++, 50) :
    /* istanbul ignore next */
    (cov_1khoy7aw45().b[35][1]++, Math.max(0, Math.min(100, score)));
  } catch (error) {
    /* istanbul ignore next */
    cov_1khoy7aw45().s[127]++;
    console.error('Error calculating job relevancy with Azure OpenAI:', error);
    /* istanbul ignore next */
    cov_1khoy7aw45().s[128]++;
    return calculateFallbackRelevancy(jobListing, userProfile);
  }
}

/**
 * Fallback relevancy calculation using keyword matching
 */
function calculateFallbackRelevancy(jobListing, userProfile) {
  /* istanbul ignore next */
  cov_1khoy7aw45().f[12]++;
  const jobText =
  /* istanbul ignore next */
  (cov_1khoy7aw45().s[129]++, `${jobListing.title} ${jobListing.description} ${jobListing.requirements?.join(' ')}`.toLowerCase());
  const matchedSkills =
  /* istanbul ignore next */
  (cov_1khoy7aw45().s[130]++,
  /* istanbul ignore next */
  (cov_1khoy7aw45().b[36][0]++, userProfile.skills?.filter(skill => {
    /* istanbul ignore next */
    cov_1khoy7aw45().f[13]++;
    cov_1khoy7aw45().s[131]++;
    return jobText.includes(skill.toLowerCase());
  })) ||
  /* istanbul ignore next */
  (cov_1khoy7aw45().b[36][1]++, []));
  /* istanbul ignore next */
  cov_1khoy7aw45().s[132]++;
  return Math.min(90, matchedSkills.length / (
  /* istanbul ignore next */
  (cov_1khoy7aw45().b[37][0]++, userProfile.skills?.length) ||
  /* istanbul ignore next */
  (cov_1khoy7aw45().b[37][1]++, 1)) * 100);
}

/**
 * Get matched skills between job and user profile
 */
function getMatchedSkills(job, userSkills) {
  /* istanbul ignore next */
  cov_1khoy7aw45().f[14]++;
  cov_1khoy7aw45().s[133]++;
  if (
  /* istanbul ignore next */
  (cov_1khoy7aw45().b[39][0]++, !userSkills) ||
  /* istanbul ignore next */
  (cov_1khoy7aw45().b[39][1]++, !job.requirements)) {
    /* istanbul ignore next */
    cov_1khoy7aw45().b[38][0]++;
    cov_1khoy7aw45().s[134]++;
    return [];
  } else
  /* istanbul ignore next */
  {
    cov_1khoy7aw45().b[38][1]++;
  }
  const jobText =
  /* istanbul ignore next */
  (cov_1khoy7aw45().s[135]++, `${job.title} ${job.description} ${job.requirements.join(' ')}`.toLowerCase());
  /* istanbul ignore next */
  cov_1khoy7aw45().s[136]++;
  return userSkills.filter(skill => {
    /* istanbul ignore next */
    cov_1khoy7aw45().f[15]++;
    cov_1khoy7aw45().s[137]++;
    return jobText.includes(skill.toLowerCase());
  });
}

/**
 * Get missing skills from job requirements
 */
function getMissingSkills(job, userSkills) {
  /* istanbul ignore next */
  cov_1khoy7aw45().f[16]++;
  cov_1khoy7aw45().s[138]++;
  if (
  /* istanbul ignore next */
  (cov_1khoy7aw45().b[41][0]++, !userSkills) ||
  /* istanbul ignore next */
  (cov_1khoy7aw45().b[41][1]++, !job.requirements)) {
    /* istanbul ignore next */
    cov_1khoy7aw45().b[40][0]++;
    cov_1khoy7aw45().s[139]++;
    return [];
  } else
  /* istanbul ignore next */
  {
    cov_1khoy7aw45().b[40][1]++;
  }
  const userSkillsLower =
  /* istanbul ignore next */
  (cov_1khoy7aw45().s[140]++, userSkills.map(s => {
    /* istanbul ignore next */
    cov_1khoy7aw45().f[17]++;
    cov_1khoy7aw45().s[141]++;
    return s.toLowerCase();
  }));
  /* istanbul ignore next */
  cov_1khoy7aw45().s[142]++;
  return job.requirements.filter(req => {
    /* istanbul ignore next */
    cov_1khoy7aw45().f[18]++;
    cov_1khoy7aw45().s[143]++;
    return !userSkillsLower.some(skill => {
      /* istanbul ignore next */
      cov_1khoy7aw45().f[19]++;
      cov_1khoy7aw45().s[144]++;
      return req.toLowerCase().includes(skill);
    });
  });
}

/**
 * Process auto-apply for relevant jobs
 */
async function processAutoApply(userId, relevantJobs, autoApplyThreshold, dailyLimit, userProfile) {
  /* istanbul ignore next */
  cov_1khoy7aw45().f[20]++;
  cov_1khoy7aw45().s[145]++;
  try {
    // Check current application count for today
    const todayApplications =
    /* istanbul ignore next */
    (cov_1khoy7aw45().s[146]++, await getTodayApplicationCount(userId));
    let remainingApplications =
    /* istanbul ignore next */
    (cov_1khoy7aw45().s[147]++, dailyLimit - todayApplications);
    /* istanbul ignore next */
    cov_1khoy7aw45().s[148]++;
    if (remainingApplications <= 0) {
      /* istanbul ignore next */
      cov_1khoy7aw45().b[42][0]++;
      cov_1khoy7aw45().s[149]++;
      await automationLogger.logWarning('auto_apply_daily_limit_reached', `Daily application limit reached (${dailyLimit})`, {
        userId,
        todayApplications,
        dailyLimit
      });
      /* istanbul ignore next */
      cov_1khoy7aw45().s[150]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1khoy7aw45().b[42][1]++;
    }

    // Filter jobs that meet auto-apply threshold
    const autoApplyJobs =
    /* istanbul ignore next */
    (cov_1khoy7aw45().s[151]++, relevantJobs.filter(job => {
      /* istanbul ignore next */
      cov_1khoy7aw45().f[21]++;
      cov_1khoy7aw45().s[152]++;
      return job.relevancyScore >= autoApplyThreshold;
    }).slice(0, remainingApplications)); // Limit to remaining daily applications
    /* istanbul ignore next */
    cov_1khoy7aw45().s[153]++;
    console.log(`Processing ${autoApplyJobs.length} jobs for auto-apply (threshold: ${autoApplyThreshold})`);

    // Queue applications for processing
    /* istanbul ignore next */
    cov_1khoy7aw45().s[154]++;
    for (const job of autoApplyJobs) {
      /* istanbul ignore next */
      cov_1khoy7aw45().s[155]++;
      try {
        const applicationMessage =
        /* istanbul ignore next */
        (cov_1khoy7aw45().s[156]++, {
          userId,
          jobId: job.id,
          jobListing: job,
          requestId: uuidv4(),
          autoApply: true,
          queuedAt: new Date().toISOString()
        });
        /* istanbul ignore next */
        cov_1khoy7aw45().s[157]++;
        await queueService.addMessage(queueService.queues.PROCESS_APPLICATIONS, applicationMessage, {
          visibilityTimeout: Math.floor(Math.random() * 120) + 30 // Random delay 30-150 seconds
        });
        /* istanbul ignore next */
        cov_1khoy7aw45().s[158]++;
        await automationLogger.logJobDiscovered(userId, job.id, job);
        /* istanbul ignore next */
        cov_1khoy7aw45().s[159]++;
        console.log(`Queued auto-apply for job: ${job.title} at ${job.company}`);
      } catch (error) {
        /* istanbul ignore next */
        cov_1khoy7aw45().s[160]++;
        console.error(`Error queuing auto-apply for job ${job.id}:`, error);
      }
    }
    /* istanbul ignore next */
    cov_1khoy7aw45().s[161]++;
    await automationLogger.logInfo('auto_apply_jobs_queued', `${autoApplyJobs.length} jobs queued for auto-apply`, {
      userId,
      queuedJobs: autoApplyJobs.length,
      threshold: autoApplyThreshold
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1khoy7aw45().s[162]++;
    console.error('Error processing auto-apply:', error);
    /* istanbul ignore next */
    cov_1khoy7aw45().s[163]++;
    await automationLogger.logError('auto_apply_processing_error', error, {
      userId
    });
  }
}

/**
 * Get mock job listings for demonstration
 */
async function getMockJobListings() {
  /* istanbul ignore next */
  cov_1khoy7aw45().f[22]++;
  cov_1khoy7aw45().s[164]++;
  return [{
    id: uuidv4(),
    title: 'Senior React Developer',
    company: 'TechFlow Solutions',
    location: 'San Francisco, CA',
    salary: {
      min: 130000,
      max: 170000,
      currency: 'USD',
      period: 'yearly'
    },
    jobType: 'full-time',
    workArrangement: 'hybrid',
    description: 'Join our growing team to build next-generation web applications using React, TypeScript, and modern development practices.',
    requirements: ['React', 'TypeScript', 'JavaScript', 'Redux', 'Jest'],
    responsibilities: ['Lead frontend architecture', 'Mentor developers', 'Code review'],
    postedDate: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000).toISOString(),
    // 1 day ago
    jobPortal: {
      name: 'LinkedIn',
      logo: '/icons/linkedin.svg',
      website: 'https://linkedin.com',
      supportsAutoApply: true
    },
    originalUrl: 'https://linkedin.com/jobs/react-dev-123',
    applicationStatus: 'discovered',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString()
  }, {
    id: uuidv4(),
    title: 'Full Stack Engineer',
    company: 'InnovateCorp',
    location: 'Remote',
    salary: {
      min: 110000,
      max: 150000,
      currency: 'USD',
      period: 'yearly'
    },
    jobType: 'full-time',
    workArrangement: 'remote',
    description: 'We are looking for a versatile Full Stack Engineer to work on our SaaS platform using React and Node.js.',
    requirements: ['React', 'Node.js', 'PostgreSQL', 'AWS', 'Docker'],
    responsibilities: ['Develop full-stack features', 'Design APIs', 'Database optimization'],
    postedDate: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000).toISOString(),
    // 2 days ago
    jobPortal: {
      name: 'Indeed',
      logo: '/icons/indeed.svg',
      website: 'https://indeed.com',
      supportsAutoApply: true
    },
    originalUrl: 'https://indeed.com/jobs/fullstack-456',
    applicationStatus: 'discovered',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString()
  }, {
    id: uuidv4(),
    title: 'Frontend Developer',
    company: 'StartupXYZ',
    location: 'New York, NY',
    salary: {
      min: 90000,
      max: 120000,
      currency: 'USD',
      period: 'yearly'
    },
    jobType: 'full-time',
    workArrangement: 'onsite',
    description: 'Join our early-stage startup to build innovative web applications with React and modern tools.',
    requirements: ['React', 'JavaScript', 'CSS', 'Git'],
    responsibilities: ['Build responsive web apps', 'Collaborate with designers', 'Optimize performance'],
    postedDate: new Date(Date.now() - 3 * 24 * 60 * 60 * 1000).toISOString(),
    // 3 days ago
    jobPortal: {
      name: 'AngelList',
      logo: '/icons/angellist.svg',
      website: 'https://angel.co',
      supportsAutoApply: true
    },
    originalUrl: 'https://angel.co/jobs/frontend-789',
    applicationStatus: 'discovered',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString()
  }];
}

// Utility functions (TODO: Implement with proper data storage)

async function getUserProfile(userId) {
  /* istanbul ignore next */
  cov_1khoy7aw45().f[23]++;
  cov_1khoy7aw45().s[165]++;
  return {
    id: userId,
    name: 'John Doe',
    email: 'john.doe@example.com',
    skills: ['JavaScript', 'React', 'TypeScript', 'Node.js', 'Python'],
    experience: [{
      position: 'Frontend Developer',
      company: 'Tech Corp',
      technologies: ['React', 'TypeScript']
    }],
    targetRoles: ['Frontend Developer', 'Full Stack Developer'],
    summary: 'Experienced frontend developer with expertise in React applications'
  };
}
async function getTodayApplicationCount(userId) {
  /* istanbul ignore next */
  cov_1khoy7aw45().f[24]++;
  cov_1khoy7aw45().s[166]++;
  // TODO: Query database for today's applications
  return Math.floor(Math.random() * 2); // Mock count (0-1)
}
async function storeDiscoveredJobs(userId, jobs) {
  /* istanbul ignore next */
  cov_1khoy7aw45().f[25]++;
  cov_1khoy7aw45().s[167]++;
  // TODO: Store discovered jobs in database (Firestore, etc.)
  console.log(`Storing ${jobs.length} discovered jobs for user ${userId}:`);
  /* istanbul ignore next */
  cov_1khoy7aw45().s[168]++;
  jobs.forEach(job => {
    /* istanbul ignore next */
    cov_1khoy7aw45().f[26]++;
    cov_1khoy7aw45().s[169]++;
    console.log(`- ${job.title} at ${job.company} (Score: ${job.relevancyScore})`);
  });
}

/**
 * Send job discovered notifications
 */
async function sendJobDiscoveredNotifications(userId, jobs) {
  /* istanbul ignore next */
  cov_1khoy7aw45().f[27]++;
  cov_1khoy7aw45().s[170]++;
  try {
    // Import notification integration service
    const {
      jobNotificationIntegration
    } =
    /* istanbul ignore next */
    (cov_1khoy7aw45().s[171]++, require('../../lib/services/job-notification-integration'));

    // Send job discovered notifications
    /* istanbul ignore next */
    cov_1khoy7aw45().s[172]++;
    await jobNotificationIntegration.notifyJobsDiscovered(userId, jobs);
    /* istanbul ignore next */
    cov_1khoy7aw45().s[173]++;
    console.log(`Job discovered notifications processed for user ${userId}: ${jobs.length} jobs`);
  } catch (error) {
    /* istanbul ignore next */
    cov_1khoy7aw45().s[174]++;
    console.error('Error sending job discovered notifications:', error);
    // Don't throw error here to avoid breaking the job search workflow
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,