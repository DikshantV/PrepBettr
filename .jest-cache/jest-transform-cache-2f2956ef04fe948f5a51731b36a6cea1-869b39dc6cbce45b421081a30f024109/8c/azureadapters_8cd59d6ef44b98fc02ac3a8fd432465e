46bb576d3f3482d9ba434a79a365bdc0
"use strict";

/**
 * Azure API adapters for speech and conversation services
 * Isolates API calls while maintaining existing signatures
 */
/* istanbul ignore next */
function cov_7hrnpdyri() {
  var path = "/Users/dikshantvashistha/PrepBettr/lib/voice/azure-adapters.ts";
  var hash = "63c73f10fdf43a14eca30a0b36949f998e6aa3ab";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dikshantvashistha/PrepBettr/lib/voice/azure-adapters.ts",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 62
        }
      },
      "1": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 7,
          column: 233
        }
      },
      "2": {
        start: {
          line: 8,
          column: 17
        },
        end: {
          line: 8,
          column: 43
        }
      },
      "3": {
        start: {
          line: 9,
          column: 22
        },
        end: {
          line: 9,
          column: 53
        }
      },
      "4": {
        start: {
          line: 10,
          column: 24
        },
        end: {
          line: 10,
          column: 57
        }
      },
      "5": {
        start: {
          line: 14,
          column: 21
        },
        end: {
          line: 39,
          column: 1
        }
      },
      "6": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 38,
          column: 28
        }
      },
      "7": {
        start: {
          line: 17,
          column: 25
        },
        end: {
          line: 17,
          column: 39
        }
      },
      "8": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 61
        }
      },
      "9": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 22,
          column: 11
        }
      },
      "10": {
        start: {
          line: 23,
          column: 25
        },
        end: {
          line: 26,
          column: 10
        }
      },
      "11": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 29,
          column: 9
        }
      },
      "12": {
        start: {
          line: 28,
          column: 12
        },
        end: {
          line: 28,
          column: 80
        }
      },
      "13": {
        start: {
          line: 30,
          column: 23
        },
        end: {
          line: 30,
          column: 44
        }
      },
      "14": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 33,
          column: 11
        }
      },
      "15": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 36,
          column: 9
        }
      },
      "16": {
        start: {
          line: 35,
          column: 12
        },
        end: {
          line: 35,
          column: 74
        }
      },
      "17": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 27
        }
      },
      "18": {
        start: {
          line: 40,
          column: 0
        },
        end: {
          line: 40,
          column: 36
        }
      },
      "19": {
        start: {
          line: 44,
          column: 26
        },
        end: {
          line: 66,
          column: 1
        }
      },
      "20": {
        start: {
          line: 46,
          column: 4
        },
        end: {
          line: 46,
          column: 88
        }
      },
      "21": {
        start: {
          line: 47,
          column: 21
        },
        end: {
          line: 56,
          column: 6
        }
      },
      "22": {
        start: {
          line: 57,
          column: 4
        },
        end: {
          line: 59,
          column: 5
        }
      },
      "23": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 58,
          column: 80
        }
      },
      "24": {
        start: {
          line: 60,
          column: 17
        },
        end: {
          line: 60,
          column: 38
        }
      },
      "25": {
        start: {
          line: 61,
          column: 4
        },
        end: {
          line: 64,
          column: 7
        }
      },
      "26": {
        start: {
          line: 65,
          column: 4
        },
        end: {
          line: 65,
          column: 16
        }
      },
      "27": {
        start: {
          line: 67,
          column: 0
        },
        end: {
          line: 67,
          column: 46
        }
      },
      "28": {
        start: {
          line: 71,
          column: 28
        },
        end: {
          line: 131,
          column: 1
        }
      },
      "29": {
        start: {
          line: 73,
          column: 4
        },
        end: {
          line: 76,
          column: 7
        }
      },
      "30": {
        start: {
          line: 77,
          column: 4
        },
        end: {
          line: 80,
          column: 7
        }
      },
      "31": {
        start: {
          line: 81,
          column: 4
        },
        end: {
          line: 130,
          column: 5
        }
      },
      "32": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 82,
          column: 97
        }
      },
      "33": {
        start: {
          line: 83,
          column: 25
        },
        end: {
          line: 92,
          column: 10
        }
      },
      "34": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 97,
          column: 11
        }
      },
      "35": {
        start: {
          line: 98,
          column: 8
        },
        end: {
          line: 106,
          column: 9
        }
      },
      "36": {
        start: {
          line: 99,
          column: 30
        },
        end: {
          line: 99,
          column: 51
        }
      },
      "37": {
        start: {
          line: 100,
          column: 12
        },
        end: {
          line: 104,
          column: 15
        }
      },
      "38": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 105,
          column: 86
        }
      },
      "39": {
        start: {
          line: 107,
          column: 21
        },
        end: {
          line: 107,
          column: 42
        }
      },
      "40": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 114,
          column: 11
        }
      },
      "41": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 120,
          column: 11
        }
      },
      "42": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 121,
          column: 20
        }
      },
      "43": {
        start: {
          line: 124,
          column: 8
        },
        end: {
          line: 128,
          column: 11
        }
      },
      "44": {
        start: {
          line: 129,
          column: 8
        },
        end: {
          line: 129,
          column: 20
        }
      },
      "45": {
        start: {
          line: 132,
          column: 0
        },
        end: {
          line: 132,
          column: 50
        }
      },
      "46": {
        start: {
          line: 136,
          column: 24
        },
        end: {
          line: 164,
          column: 1
        }
      },
      "47": {
        start: {
          line: 137,
          column: 4
        },
        end: {
          line: 163,
          column: 5
        }
      },
      "48": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 138,
          column: 94
        }
      },
      "49": {
        start: {
          line: 139,
          column: 25
        },
        end: {
          line: 147,
          column: 10
        }
      },
      "50": {
        start: {
          line: 148,
          column: 8
        },
        end: {
          line: 158,
          column: 9
        }
      },
      "51": {
        start: {
          line: 149,
          column: 25
        },
        end: {
          line: 149,
          column: 46
        }
      },
      "52": {
        start: {
          line: 150,
          column: 12
        },
        end: {
          line: 152,
          column: 15
        }
      },
      "53": {
        start: {
          line: 153,
          column: 12
        },
        end: {
          line: 153,
          column: 24
        }
      },
      "54": {
        start: {
          line: 156,
          column: 12
        },
        end: {
          line: 156,
          column: 102
        }
      },
      "55": {
        start: {
          line: 157,
          column: 12
        },
        end: {
          line: 157,
          column: 22
        }
      },
      "56": {
        start: {
          line: 161,
          column: 8
        },
        end: {
          line: 161,
          column: 134
        }
      },
      "57": {
        start: {
          line: 162,
          column: 8
        },
        end: {
          line: 162,
          column: 18
        }
      },
      "58": {
        start: {
          line: 165,
          column: 0
        },
        end: {
          line: 165,
          column: 42
        }
      },
      "59": {
        start: {
          line: 169,
          column: 21
        },
        end: {
          line: 188,
          column: 1
        }
      },
      "60": {
        start: {
          line: 170,
          column: 4
        },
        end: {
          line: 187,
          column: 28
        }
      },
      "61": {
        start: {
          line: 171,
          column: 8
        },
        end: {
          line: 171,
          column: 91
        }
      },
      "62": {
        start: {
          line: 172,
          column: 25
        },
        end: {
          line: 178,
          column: 10
        }
      },
      "63": {
        start: {
          line: 179,
          column: 8
        },
        end: {
          line: 181,
          column: 9
        }
      },
      "64": {
        start: {
          line: 180,
          column: 12
        },
        end: {
          line: 180,
          column: 80
        }
      },
      "65": {
        start: {
          line: 182,
          column: 26
        },
        end: {
          line: 182,
          column: 47
        }
      },
      "66": {
        start: {
          line: 183,
          column: 8
        },
        end: {
          line: 185,
          column: 11
        }
      },
      "67": {
        start: {
          line: 186,
          column: 8
        },
        end: {
          line: 186,
          column: 25
        }
      },
      "68": {
        start: {
          line: 189,
          column: 0
        },
        end: {
          line: 189,
          column: 36
        }
      },
      "69": {
        start: {
          line: 193,
          column: 23
        },
        end: {
          line: 256,
          column: 1
        }
      },
      "70": {
        start: {
          line: 194,
          column: 4
        },
        end: {
          line: 198,
          column: 7
        }
      },
      "71": {
        start: {
          line: 199,
          column: 4
        },
        end: {
          line: 255,
          column: 5
        }
      },
      "72": {
        start: {
          line: 201,
          column: 8
        },
        end: {
          line: 204,
          column: 9
        }
      },
      "73": {
        start: {
          line: 202,
          column: 12
        },
        end: {
          line: 202,
          column: 67
        }
      },
      "74": {
        start: {
          line: 203,
          column: 12
        },
        end: {
          line: 203,
          column: 22
        }
      },
      "75": {
        start: {
          line: 205,
          column: 8
        },
        end: {
          line: 205,
          column: 102
        }
      },
      "76": {
        start: {
          line: 207,
          column: 26
        },
        end: {
          line: 207,
          column: 63
        }
      },
      "77": {
        start: {
          line: 208,
          column: 8
        },
        end: {
          line: 210,
          column: 9
        }
      },
      "78": {
        start: {
          line: 209,
          column: 12
        },
        end: {
          line: 209,
          column: 69
        }
      },
      "79": {
        start: {
          line: 211,
          column: 8
        },
        end: {
          line: 214,
          column: 11
        }
      },
      "80": {
        start: {
          line: 216,
          column: 8
        },
        end: {
          line: 216,
          column: 43
        }
      },
      "81": {
        start: {
          line: 217,
          column: 8
        },
        end: {
          line: 217,
          column: 63
        }
      },
      "82": {
        start: {
          line: 218,
          column: 8
        },
        end: {
          line: 218,
          column: 68
        }
      },
      "83": {
        start: {
          line: 220,
          column: 8
        },
        end: {
          line: 223,
          column: 9
        }
      },
      "84": {
        start: {
          line: 221,
          column: 12
        },
        end: {
          line: 221,
          column: 70
        }
      },
      "85": {
        start: {
          line: 222,
          column: 12
        },
        end: {
          line: 222,
          column: 25
        }
      },
      "86": {
        start: {
          line: 224,
          column: 8
        },
        end: {
          line: 224,
          column: 75
        }
      },
      "87": {
        start: {
          line: 227,
          column: 8
        },
        end: {
          line: 227,
          column: 81
        }
      },
      "88": {
        start: {
          line: 228,
          column: 27
        },
        end: {
          line: 228,
          column: 83
        }
      },
      "89": {
        start: {
          line: 229,
          column: 8
        },
        end: {
          line: 229,
          column: 89
        }
      },
      "90": {
        start: {
          line: 231,
          column: 8
        },
        end: {
          line: 254,
          column: 9
        }
      },
      "91": {
        start: {
          line: 233,
          column: 12
        },
        end: {
          line: 235,
          column: 13
        }
      },
      "92": {
        start: {
          line: 234,
          column: 16
        },
        end: {
          line: 234,
          column: 26
        }
      },
      "93": {
        start: {
          line: 236,
          column: 31
        },
        end: {
          line: 236,
          column: 53
        }
      },
      "94": {
        start: {
          line: 237,
          column: 36
        },
        end: {
          line: 237,
          column: 68
        }
      },
      "95": {
        start: {
          line: 238,
          column: 12
        },
        end: {
          line: 241,
          column: 15
        }
      },
      "96": {
        start: {
          line: 242,
          column: 12
        },
        end: {
          line: 242,
          column: 79
        }
      },
      "97": {
        start: {
          line: 242,
          column: 41
        },
        end: {
          line: 242,
          column: 77
        }
      },
      "98": {
        start: {
          line: 243,
          column: 12
        },
        end: {
          line: 245,
          column: 13
        }
      },
      "99": {
        start: {
          line: 244,
          column: 16
        },
        end: {
          line: 244,
          column: 29
        }
      },
      "100": {
        start: {
          line: 246,
          column: 12
        },
        end: {
          line: 246,
          column: 68
        }
      },
      "101": {
        start: {
          line: 249,
          column: 12
        },
        end: {
          line: 249,
          column: 88
        }
      },
      "102": {
        start: {
          line: 251,
          column: 12
        },
        end: {
          line: 253,
          column: 13
        }
      },
      "103": {
        start: {
          line: 252,
          column: 16
        },
        end: {
          line: 252,
          column: 29
        }
      },
      "104": {
        start: {
          line: 257,
          column: 0
        },
        end: {
          line: 257,
          column: 40
        }
      },
      "105": {
        start: {
          line: 261,
          column: 26
        },
        end: {
          line: 288,
          column: 1
        }
      },
      "106": {
        start: {
          line: 262,
          column: 4
        },
        end: {
          line: 287,
          column: 7
        }
      },
      "107": {
        start: {
          line: 263,
          column: 8
        },
        end: {
          line: 286,
          column: 9
        }
      },
      "108": {
        start: {
          line: 265,
          column: 26
        },
        end: {
          line: 265,
          column: 37
        }
      },
      "109": {
        start: {
          line: 266,
          column: 29
        },
        end: {
          line: 266,
          column: 59
        }
      },
      "110": {
        start: {
          line: 267,
          column: 12
        },
        end: {
          line: 267,
          column: 33
        }
      },
      "111": {
        start: {
          line: 268,
          column: 12
        },
        end: {
          line: 268,
          column: 35
        }
      },
      "112": {
        start: {
          line: 270,
          column: 12
        },
        end: {
          line: 273,
          column: 15
        }
      },
      "113": {
        start: {
          line: 271,
          column: 16
        },
        end: {
          line: 271,
          column: 46
        }
      },
      "114": {
        start: {
          line: 272,
          column: 16
        },
        end: {
          line: 272,
          column: 26
        }
      },
      "115": {
        start: {
          line: 274,
          column: 12
        },
        end: {
          line: 277,
          column: 15
        }
      },
      "116": {
        start: {
          line: 275,
          column: 16
        },
        end: {
          line: 275,
          column: 46
        }
      },
      "117": {
        start: {
          line: 276,
          column: 16
        },
        end: {
          line: 276,
          column: 96
        }
      },
      "118": {
        start: {
          line: 279,
          column: 12
        },
        end: {
          line: 282,
          column: 15
        }
      },
      "119": {
        start: {
          line: 280,
          column: 16
        },
        end: {
          line: 280,
          column: 46
        }
      },
      "120": {
        start: {
          line: 281,
          column: 16
        },
        end: {
          line: 281,
          column: 92
        }
      },
      "121": {
        start: {
          line: 285,
          column: 12
        },
        end: {
          line: 285,
          column: 111
        }
      },
      "122": {
        start: {
          line: 292,
          column: 36
        },
        end: {
          line: 308,
          column: 1
        }
      },
      "123": {
        start: {
          line: 293,
          column: 4
        },
        end: {
          line: 305,
          column: 5
        }
      },
      "124": {
        start: {
          line: 294,
          column: 8
        },
        end: {
          line: 304,
          column: 9
        }
      },
      "125": {
        start: {
          line: 295,
          column: 12
        },
        end: {
          line: 295,
          column: 72
        }
      },
      "126": {
        start: {
          line: 296,
          column: 12
        },
        end: {
          line: 296,
          column: 66
        }
      },
      "127": {
        start: {
          line: 297,
          column: 12
        },
        end: {
          line: 297,
          column: 75
        }
      },
      "128": {
        start: {
          line: 298,
          column: 12
        },
        end: {
          line: 298,
          column: 81
        }
      },
      "129": {
        start: {
          line: 299,
          column: 12
        },
        end: {
          line: 299,
          column: 19
        }
      },
      "130": {
        start: {
          line: 302,
          column: 12
        },
        end: {
          line: 302,
          column: 144
        }
      },
      "131": {
        start: {
          line: 307,
          column: 4
        },
        end: {
          line: 307,
          column: 82
        }
      },
      "132": {
        start: {
          line: 309,
          column: 0
        },
        end: {
          line: 309,
          column: 66
        }
      },
      "133": {
        start: {
          line: 313,
          column: 31
        },
        end: {
          line: 365,
          column: 1
        }
      },
      "134": {
        start: {
          line: 314,
          column: 4
        },
        end: {
          line: 364,
          column: 5
        }
      },
      "135": {
        start: {
          line: 316,
          column: 21
        },
        end: {
          line: 316,
          column: 75
        }
      },
      "136": {
        start: {
          line: 318,
          column: 28
        },
        end: {
          line: 318,
          column: 69
        }
      },
      "137": {
        start: {
          line: 319,
          column: 26
        },
        end: {
          line: 319,
          column: 70
        }
      },
      "138": {
        start: {
          line: 321,
          column: 8
        },
        end: {
          line: 326,
          column: 9
        }
      },
      "139": {
        start: {
          line: 322,
          column: 12
        },
        end: {
          line: 322,
          column: 119
        }
      },
      "140": {
        start: {
          line: 325,
          column: 12
        },
        end: {
          line: 325,
          column: 90
        }
      },
      "141": {
        start: {
          line: 327,
          column: 8
        },
        end: {
          line: 332,
          column: 10
        }
      },
      "142": {
        start: {
          line: 335,
          column: 29
        },
        end: {
          line: 335,
          column: 92
        }
      },
      "143": {
        start: {
          line: 336,
          column: 8
        },
        end: {
          line: 340,
          column: 11
        }
      },
      "144": {
        start: {
          line: 342,
          column: 8
        },
        end: {
          line: 342,
          column: 88
        }
      },
      "145": {
        start: {
          line: 344,
          column: 36
        },
        end: {
          line: 344,
          column: 77
        }
      },
      "146": {
        start: {
          line: 345,
          column: 34
        },
        end: {
          line: 348,
          column: 9
        }
      },
      "147": {
        start: {
          line: 350,
          column: 8
        },
        end: {
          line: 357,
          column: 9
        }
      },
      "148": {
        start: {
          line: 351,
          column: 12
        },
        end: {
          line: 351,
          column: 103
        }
      },
      "149": {
        start: {
          line: 354,
          column: 12
        },
        end: {
          line: 354,
          column: 85
        }
      },
      "150": {
        start: {
          line: 355,
          column: 12
        },
        end: {
          line: 356,
          column: 29
        }
      },
      "151": {
        start: {
          line: 356,
          column: 16
        },
        end: {
          line: 356,
          column: 29
        }
      },
      "152": {
        start: {
          line: 358,
          column: 8
        },
        end: {
          line: 363,
          column: 10
        }
      },
      "153": {
        start: {
          line: 366,
          column: 0
        },
        end: {
          line: 366,
          column: 56
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 14,
            column: 21
          },
          end: {
            line: 14,
            column: 22
          }
        },
        loc: {
          start: {
            line: 14,
            column: 42
          },
          end: {
            line: 39,
            column: 1
          }
        },
        line: 14
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 15,
            column: 40
          },
          end: {
            line: 15,
            column: 41
          }
        },
        loc: {
          start: {
            line: 15,
            column: 52
          },
          end: {
            line: 38,
            column: 5
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 44,
            column: 26
          },
          end: {
            line: 44,
            column: 27
          }
        },
        loc: {
          start: {
            line: 44,
            column: 54
          },
          end: {
            line: 66,
            column: 1
          }
        },
        line: 44
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 71,
            column: 28
          },
          end: {
            line: 71,
            column: 29
          }
        },
        loc: {
          start: {
            line: 71,
            column: 54
          },
          end: {
            line: 131,
            column: 1
          }
        },
        line: 71
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 136,
            column: 24
          },
          end: {
            line: 136,
            column: 25
          }
        },
        loc: {
          start: {
            line: 136,
            column: 36
          },
          end: {
            line: 164,
            column: 1
          }
        },
        line: 136
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 169,
            column: 21
          },
          end: {
            line: 169,
            column: 22
          }
        },
        loc: {
          start: {
            line: 169,
            column: 37
          },
          end: {
            line: 188,
            column: 1
          }
        },
        line: 169
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 170,
            column: 40
          },
          end: {
            line: 170,
            column: 41
          }
        },
        loc: {
          start: {
            line: 170,
            column: 52
          },
          end: {
            line: 187,
            column: 5
          }
        },
        line: 170
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 193,
            column: 23
          },
          end: {
            line: 193,
            column: 24
          }
        },
        loc: {
          start: {
            line: 193,
            column: 69
          },
          end: {
            line: 256,
            column: 1
          }
        },
        line: 193
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 242,
            column: 30
          },
          end: {
            line: 242,
            column: 31
          }
        },
        loc: {
          start: {
            line: 242,
            column: 41
          },
          end: {
            line: 242,
            column: 77
          }
        },
        line: 242
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 261,
            column: 26
          },
          end: {
            line: 261,
            column: 27
          }
        },
        loc: {
          start: {
            line: 261,
            column: 47
          },
          end: {
            line: 288,
            column: 1
          }
        },
        line: 261
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 262,
            column: 23
          },
          end: {
            line: 262,
            column: 24
          }
        },
        loc: {
          start: {
            line: 262,
            column: 44
          },
          end: {
            line: 287,
            column: 5
          }
        },
        line: 262
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 270,
            column: 44
          },
          end: {
            line: 270,
            column: 45
          }
        },
        loc: {
          start: {
            line: 270,
            column: 50
          },
          end: {
            line: 273,
            column: 13
          }
        },
        line: 270
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 274,
            column: 44
          },
          end: {
            line: 274,
            column: 45
          }
        },
        loc: {
          start: {
            line: 274,
            column: 55
          },
          end: {
            line: 277,
            column: 13
          }
        },
        line: 274
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 279,
            column: 31
          },
          end: {
            line: 279,
            column: 32
          }
        },
        loc: {
          start: {
            line: 279,
            column: 42
          },
          end: {
            line: 282,
            column: 13
          }
        },
        line: 279
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 292,
            column: 36
          },
          end: {
            line: 292,
            column: 37
          }
        },
        loc: {
          start: {
            line: 292,
            column: 101
          },
          end: {
            line: 308,
            column: 1
          }
        },
        line: 292
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 313,
            column: 31
          },
          end: {
            line: 313,
            column: 32
          }
        },
        loc: {
          start: {
            line: 313,
            column: 87
          },
          end: {
            line: 365,
            column: 1
          }
        },
        line: 313
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 29,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 29,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 27
      },
      "1": {
        loc: {
          start: {
            line: 32,
            column: 24
          },
          end: {
            line: 32,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 32,
            column: 71
          },
          end: {
            line: 32,
            column: 77
          }
        }, {
          start: {
            line: 32,
            column: 80
          },
          end: {
            line: 32,
            column: 89
          }
        }],
        line: 32
      },
      "2": {
        loc: {
          start: {
            line: 32,
            column: 24
          },
          end: {
            line: 32,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 32,
            column: 24
          },
          end: {
            line: 32,
            column: 51
          }
        }, {
          start: {
            line: 32,
            column: 55
          },
          end: {
            line: 32,
            column: 68
          }
        }],
        line: 32
      },
      "3": {
        loc: {
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 36,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 36,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 34
      },
      "4": {
        loc: {
          start: {
            line: 57,
            column: 4
          },
          end: {
            line: 59,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 4
          },
          end: {
            line: 59,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 57
      },
      "5": {
        loc: {
          start: {
            line: 63,
            column: 23
          },
          end: {
            line: 63,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 63,
            column: 71
          },
          end: {
            line: 63,
            column: 77
          }
        }, {
          start: {
            line: 63,
            column: 80
          },
          end: {
            line: 63,
            column: 89
          }
        }],
        line: 63
      },
      "6": {
        loc: {
          start: {
            line: 63,
            column: 23
          },
          end: {
            line: 63,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 63,
            column: 23
          },
          end: {
            line: 63,
            column: 51
          }
        }, {
          start: {
            line: 63,
            column: 55
          },
          end: {
            line: 63,
            column: 68
          }
        }],
        line: 63
      },
      "7": {
        loc: {
          start: {
            line: 98,
            column: 8
          },
          end: {
            line: 106,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 98,
            column: 8
          },
          end: {
            line: 106,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 98
      },
      "8": {
        loc: {
          start: {
            line: 110,
            column: 27
          },
          end: {
            line: 110,
            column: 93
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 110,
            column: 75
          },
          end: {
            line: 110,
            column: 81
          }
        }, {
          start: {
            line: 110,
            column: 84
          },
          end: {
            line: 110,
            column: 93
          }
        }],
        line: 110
      },
      "9": {
        loc: {
          start: {
            line: 110,
            column: 27
          },
          end: {
            line: 110,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 110,
            column: 27
          },
          end: {
            line: 110,
            column: 55
          }
        }, {
          start: {
            line: 110,
            column: 59
          },
          end: {
            line: 110,
            column: 72
          }
        }],
        line: 110
      },
      "10": {
        loc: {
          start: {
            line: 117,
            column: 27
          },
          end: {
            line: 117,
            column: 93
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 117,
            column: 75
          },
          end: {
            line: 117,
            column: 81
          }
        }, {
          start: {
            line: 117,
            column: 84
          },
          end: {
            line: 117,
            column: 93
          }
        }],
        line: 117
      },
      "11": {
        loc: {
          start: {
            line: 117,
            column: 27
          },
          end: {
            line: 117,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 117,
            column: 27
          },
          end: {
            line: 117,
            column: 55
          }
        }, {
          start: {
            line: 117,
            column: 59
          },
          end: {
            line: 117,
            column: 72
          }
        }],
        line: 117
      },
      "12": {
        loc: {
          start: {
            line: 125,
            column: 23
          },
          end: {
            line: 125,
            column: 85
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 125,
            column: 48
          },
          end: {
            line: 125,
            column: 70
          }
        }, {
          start: {
            line: 125,
            column: 73
          },
          end: {
            line: 125,
            column: 85
          }
        }],
        line: 125
      },
      "13": {
        loc: {
          start: {
            line: 126,
            column: 26
          },
          end: {
            line: 126,
            column: 80
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 126,
            column: 51
          },
          end: {
            line: 126,
            column: 64
          }
        }, {
          start: {
            line: 126,
            column: 67
          },
          end: {
            line: 126,
            column: 80
          }
        }],
        line: 126
      },
      "14": {
        loc: {
          start: {
            line: 127,
            column: 19
          },
          end: {
            line: 127,
            column: 67
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 127,
            column: 44
          },
          end: {
            line: 127,
            column: 55
          }
        }, {
          start: {
            line: 127,
            column: 58
          },
          end: {
            line: 127,
            column: 67
          }
        }],
        line: 127
      },
      "15": {
        loc: {
          start: {
            line: 148,
            column: 8
          },
          end: {
            line: 158,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 148,
            column: 8
          },
          end: {
            line: 158,
            column: 9
          }
        }, {
          start: {
            line: 155,
            column: 13
          },
          end: {
            line: 158,
            column: 9
          }
        }],
        line: 148
      },
      "16": {
        loc: {
          start: {
            line: 161,
            column: 76
          },
          end: {
            line: 161,
            column: 130
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 161,
            column: 101
          },
          end: {
            line: 161,
            column: 114
          }
        }, {
          start: {
            line: 161,
            column: 117
          },
          end: {
            line: 161,
            column: 130
          }
        }],
        line: 161
      },
      "17": {
        loc: {
          start: {
            line: 179,
            column: 8
          },
          end: {
            line: 181,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 179,
            column: 8
          },
          end: {
            line: 181,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 179
      },
      "18": {
        loc: {
          start: {
            line: 201,
            column: 8
          },
          end: {
            line: 204,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 201,
            column: 8
          },
          end: {
            line: 204,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 201
      },
      "19": {
        loc: {
          start: {
            line: 208,
            column: 8
          },
          end: {
            line: 210,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 208,
            column: 8
          },
          end: {
            line: 210,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 208
      },
      "20": {
        loc: {
          start: {
            line: 208,
            column: 12
          },
          end: {
            line: 208,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 208,
            column: 12
          },
          end: {
            line: 208,
            column: 22
          }
        }, {
          start: {
            line: 208,
            column: 26
          },
          end: {
            line: 208,
            column: 46
          }
        }],
        line: 208
      },
      "21": {
        loc: {
          start: {
            line: 212,
            column: 44
          },
          end: {
            line: 212,
            column: 74
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 212,
            column: 64
          },
          end: {
            line: 212,
            column: 69
          }
        }, {
          start: {
            line: 212,
            column: 72
          },
          end: {
            line: 212,
            column: 74
          }
        }],
        line: 212
      },
      "22": {
        loc: {
          start: {
            line: 220,
            column: 8
          },
          end: {
            line: 223,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 220,
            column: 8
          },
          end: {
            line: 223,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 220
      },
      "23": {
        loc: {
          start: {
            line: 228,
            column: 27
          },
          end: {
            line: 228,
            column: 83
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 228,
            column: 52
          },
          end: {
            line: 228,
            column: 57
          }
        }, {
          start: {
            line: 228,
            column: 60
          },
          end: {
            line: 228,
            column: 83
          }
        }],
        line: 228
      },
      "24": {
        loc: {
          start: {
            line: 233,
            column: 12
          },
          end: {
            line: 235,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 233,
            column: 12
          },
          end: {
            line: 235,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 233
      },
      "25": {
        loc: {
          start: {
            line: 243,
            column: 12
          },
          end: {
            line: 245,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 243,
            column: 12
          },
          end: {
            line: 245,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 243
      },
      "26": {
        loc: {
          start: {
            line: 251,
            column: 12
          },
          end: {
            line: 253,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 251,
            column: 12
          },
          end: {
            line: 253,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 251
      },
      "27": {
        loc: {
          start: {
            line: 276,
            column: 59
          },
          end: {
            line: 276,
            column: 91
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 276,
            column: 59
          },
          end: {
            line: 276,
            column: 72
          }
        }, {
          start: {
            line: 276,
            column: 76
          },
          end: {
            line: 276,
            column: 91
          }
        }],
        line: 276
      },
      "28": {
        loc: {
          start: {
            line: 281,
            column: 55
          },
          end: {
            line: 281,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 281,
            column: 55
          },
          end: {
            line: 281,
            column: 68
          }
        }, {
          start: {
            line: 281,
            column: 72
          },
          end: {
            line: 281,
            column: 87
          }
        }],
        line: 281
      },
      "29": {
        loc: {
          start: {
            line: 285,
            column: 52
          },
          end: {
            line: 285,
            column: 106
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 285,
            column: 77
          },
          end: {
            line: 285,
            column: 90
          }
        }, {
          start: {
            line: 285,
            column: 93
          },
          end: {
            line: 285,
            column: 106
          }
        }],
        line: 285
      },
      "30": {
        loc: {
          start: {
            line: 293,
            column: 4
          },
          end: {
            line: 305,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 293,
            column: 4
          },
          end: {
            line: 305,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 293
      },
      "31": {
        loc: {
          start: {
            line: 295,
            column: 12
          },
          end: {
            line: 295,
            column: 71
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 295,
            column: 53
          },
          end: {
            line: 295,
            column: 59
          }
        }, {
          start: {
            line: 295,
            column: 62
          },
          end: {
            line: 295,
            column: 71
          }
        }],
        line: 295
      },
      "32": {
        loc: {
          start: {
            line: 295,
            column: 12
          },
          end: {
            line: 295,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 295,
            column: 12
          },
          end: {
            line: 295,
            column: 28
          }
        }, {
          start: {
            line: 295,
            column: 32
          },
          end: {
            line: 295,
            column: 50
          }
        }],
        line: 295
      },
      "33": {
        loc: {
          start: {
            line: 298,
            column: 12
          },
          end: {
            line: 298,
            column: 80
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 298,
            column: 59
          },
          end: {
            line: 298,
            column: 65
          }
        }, {
          start: {
            line: 298,
            column: 68
          },
          end: {
            line: 298,
            column: 80
          }
        }],
        line: 298
      },
      "34": {
        loc: {
          start: {
            line: 298,
            column: 12
          },
          end: {
            line: 298,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 298,
            column: 12
          },
          end: {
            line: 298,
            column: 31
          }
        }, {
          start: {
            line: 298,
            column: 35
          },
          end: {
            line: 298,
            column: 56
          }
        }],
        line: 298
      },
      "35": {
        loc: {
          start: {
            line: 302,
            column: 86
          },
          end: {
            line: 302,
            column: 140
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 302,
            column: 111
          },
          end: {
            line: 302,
            column: 124
          }
        }, {
          start: {
            line: 302,
            column: 127
          },
          end: {
            line: 302,
            column: 140
          }
        }],
        line: 302
      },
      "36": {
        loc: {
          start: {
            line: 321,
            column: 8
          },
          end: {
            line: 326,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 321,
            column: 8
          },
          end: {
            line: 326,
            column: 9
          }
        }, {
          start: {
            line: 324,
            column: 13
          },
          end: {
            line: 326,
            column: 9
          }
        }],
        line: 321
      },
      "37": {
        loc: {
          start: {
            line: 321,
            column: 12
          },
          end: {
            line: 321,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 321,
            column: 12
          },
          end: {
            line: 321,
            column: 25
          }
        }, {
          start: {
            line: 321,
            column: 29
          },
          end: {
            line: 321,
            column: 85
          }
        }],
        line: 321
      },
      "38": {
        loc: {
          start: {
            line: 335,
            column: 29
          },
          end: {
            line: 335,
            column: 92
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 335,
            column: 54
          },
          end: {
            line: 335,
            column: 59
          }
        }, {
          start: {
            line: 335,
            column: 62
          },
          end: {
            line: 335,
            column: 92
          }
        }],
        line: 335
      },
      "39": {
        loc: {
          start: {
            line: 355,
            column: 12
          },
          end: {
            line: 356,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 355,
            column: 12
          },
          end: {
            line: 356,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 355
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/dikshantvashistha/PrepBettr/lib/voice/azure-adapters.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/dikshantvashistha/PrepBettr/lib/voice/azure-adapters.ts"],
      sourcesContent: ["/**\n * Azure API adapters for speech and conversation services\n * Isolates API calls while maintaining existing signatures\n */\n\nimport { logger } from '../utils/logger';\nimport { withRetry, handleApiError, showErrorNotification } from '../utils/error-utils';\nimport { validateAudioBuffer, playAudioBuffer } from '../utils/audio-helpers';\nimport { SavedMessage, ConversationProcessResponse } from '@/lib/types/voice';\n\nexport interface InterviewContext {\n  userName: string;\n  questions?: string[];\n  type: string;\n  userId: string;\n  interviewId?: string;\n  feedbackId?: string;\n  resumeInfo?: {\n    hasResume: boolean;\n    candidateName?: string;\n    summary?: string;\n    skills?: string;\n    experience?: string;\n    education?: string;\n    yearsOfExperience?: number;\n  };\n}\n\nexport interface ConversationResponse {\n  message: string;\n  questionNumber?: number;\n  isComplete?: boolean;\n  hasAudio?: boolean;\n  audioData?: number[] | Uint8Array;\n}\n\n/**\n * Speech-to-Text adapter with retry logic\n */\nexport const speechToText = async (audioBlob: Blob): Promise<string> => {\n  return withRetry(async () => {\n    const formData = new FormData();\n    formData.append('audio', audioBlob, 'recording.wav');\n\n    logger.api.request('/api/voice/stream', 'POST', { \n      size: audioBlob.size,\n      type: audioBlob.type \n    });\n    \n    const response = await fetch('/api/voice/stream', {\n      method: 'POST',\n      body: formData,\n    });\n\n    if (!response.ok) {\n      throw handleApiError(response, 'Speech-to-text');\n    }\n\n    const result = await response.json();\n    logger.api.response('/api/voice/stream', response.status, { \n      textLength: result.text?.length \n    });\n\n    if (result.text === undefined) {\n      throw new Error('Speech-to-text response missing text field');\n    }\n\n    return result.text;\n  }, 3, 'Speech-to-text');\n};\n\n/**\n * Start conversation adapter\n */\nexport const startConversation = async (\n  interviewContext: InterviewContext\n): Promise<ConversationResponse> => {\n  logger.api.request('/api/voice/conversation', 'POST', { action: 'start' });\n\n  const response = await fetch('/api/voice/conversation', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      action: \"start\",\n      interviewContext\n    }),\n  });\n\n  if (!response.ok) {\n    throw handleApiError(response, 'Start conversation');\n  }\n\n  const data = await response.json();\n  logger.api.response('/api/voice/conversation', response.status, { \n    hasAudio: !!data.hasAudio,\n    messageLength: data.message?.length \n  });\n\n  return data;\n};\n\n/**\n * Process conversation turn adapter  \n */\nexport const processConversation = async (\n  userTranscript: string\n): Promise<ConversationResponse> => {\n  console.log('\uD83E\uDDEA [PROCESS CONVERSATION] Starting with transcript:', {\n    length: userTranscript.length,\n    preview: userTranscript.substring(0, 100) + '...'\n  });\n  \n  logger.api.request('/api/voice/conversation', 'POST', { \n    action: 'process',\n    transcriptLength: userTranscript.length \n  });\n\n  try {\n    console.log('\uD83C\uDF0D [PROCESS CONVERSATION] Making fetch request to /api/voice/conversation');\n    \n    const response = await fetch('/api/voice/conversation', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        action: \"process\",\n        userTranscript,\n      }),\n    });\n\n    console.log('\uD83C\uDF0D [PROCESS CONVERSATION] Got response:', {\n      status: response.status,\n      statusText: response.statusText,\n      ok: response.ok\n    });\n\n    if (!response.ok) {\n      const errorText = await response.text();\n      console.error('\u274C [PROCESS CONVERSATION] API error response:', {\n        status: response.status,\n        statusText: response.statusText,\n        errorBody: errorText.substring(0, 500) + '...'\n      });\n      throw handleApiError(response, 'Process conversation');\n    }\n\n    const data = await response.json();\n    console.log('\u2705 [PROCESS CONVERSATION] Successfully parsed JSON response:', {\n      hasMessage: !!data.message,\n      messageLength: data.message?.length,\n      questionNumber: data.questionNumber,\n      isComplete: data.isComplete,\n      hasAudio: data.hasAudio\n    });\n    \n    logger.api.response('/api/voice/conversation', response.status, {\n      hasAudio: !!data.hasAudio,\n      messageLength: data.message?.length,\n      questionNumber: data.questionNumber,\n      isComplete: data.isComplete\n    });\n\n    return data;\n  } catch (error) {\n    console.error('\u274C [PROCESS CONVERSATION] Network or parsing error:', {\n      errorType: error instanceof Error ? error.constructor.name : typeof error,\n      errorMessage: error instanceof Error ? error.message : String(error),\n      stack: error instanceof Error ? error.stack : undefined\n    });\n    throw error;\n  }\n};\n\n/**\n * End conversation adapter\n */\nexport const endConversation = async (): Promise<{ summary?: string }> => {\n  try {\n    logger.api.request('/api/voice/conversation', 'POST', { action: 'summary' });\n\n    const response = await fetch('/api/voice/conversation', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        action: \"summary\",\n      }),\n    });\n\n    if (response.ok) {\n      const data = await response.json();\n      logger.api.response('/api/voice/conversation', response.status, {\n        hasSummary: !!data.summary\n      });\n      return data;\n    } else {\n      logger.warn('Failed to generate interview summary', { status: response.status });\n      return {};\n    }\n  } catch (error) {\n    logger.warn('Error generating interview summary', { error: error instanceof Error ? error.message : String(error) });\n    return {};\n  }\n};\n\n/**\n * Text-to-Speech adapter\n */\nexport const textToSpeech = async (text: string): Promise<Blob> => {\n  return withRetry(async () => {\n    logger.api.request('/api/voice/tts', 'POST', { textLength: text.length });\n\n    const response = await fetch('/api/voice/tts', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ text }),\n    });\n\n    if (!response.ok) {\n      throw handleApiError(response, 'Text-to-speech');\n    }\n\n    const audioBlob = await response.blob();\n    logger.api.response('/api/voice/tts', response.status, { \n      blobSize: audioBlob.size \n    });\n\n    return audioBlob;\n  }, 2, 'Text-to-speech');\n};\n\n/**\n * Play AI response using real Azure TTS with fallback handling\n */\nexport const playAIResponse = async (\n  text: string,\n  onStart?: () => void,\n  onComplete?: () => void,\n  onError?: (error: Error) => void\n): Promise<void> => {\n  console.log('\uD83C\uDFAF [AZURE TTS] playAIResponse called', { \n    textLength: text.length, \n    hasOnStart: !!onStart,\n    hasOnComplete: !!onComplete \n  });\n  \n  try {\n    // Call onStart callback\n    if (onStart) {\n      console.log('\uD83C\uDFAF [AZURE TTS] Calling onStart callback');\n      onStart();\n    }\n    \n    logger.audio.speak('Playing AI response via Azure TTS', { textLength: text.length });\n    \n    // Get audio from Azure TTS\n    const audioBlob = await textToSpeech(text);\n    \n    if (!audioBlob || audioBlob.size === 0) {\n      throw new Error('Empty audio response from TTS service');\n    }\n    \n    console.log('\uD83D\uDD0A [AZURE TTS] Playing audio', { \n      text: text.substring(0, 150) + (text.length > 150 ? '...' : ''),\n      audioSize: audioBlob.size\n    });\n    \n    // Play the audio using Web Audio API\n    await playAudioFromBlob(audioBlob);\n    \n    console.log('\uD83D\uDD0A [AZURE TTS] Audio playback completed');\n    logger.audio.speak('Azure TTS playback completed');\n    \n    // Call onComplete callback\n    if (onComplete) {\n      console.log('\uD83C\uDFAF [AZURE TTS] Calling onComplete callback');\n      onComplete();\n    }\n    \n    console.log('\uD83C\uDFAF [AZURE TTS] playAIResponse finished successfully');\n  } catch (error) {\n    console.warn('\uD83D\uDD0A [AZURE TTS] TTS service unavailable, using mock audio');\n    const audioError = error instanceof Error ? error : new Error('TTS failed');\n    logger.warn('Azure TTS not available, using fallback audio simulation');\n    \n    // Fallback to mock TTS timing simulation\n    try {\n      // Call onStart if not already called\n      if (onStart) {\n        onStart();\n      }\n      \n      const wordsCount = text.split(' ').length;\n      const readingDuration = Math.max(2500, wordsCount * 120); // 120ms per word, minimum 2.5 seconds\n      \n      console.log('\uD83D\uDD0A [FALLBACK] Using audio simulation', { \n        wordsCount,\n        duration: readingDuration + 'ms'\n      });\n      \n      await new Promise(resolve => setTimeout(resolve, readingDuration));\n      \n      if (onComplete) {\n        onComplete();\n      }\n      \n      console.log('\uD83D\uDD0A [FALLBACK] Audio simulation completed');\n    } catch (fallbackError) {\n      logger.warn('Fallback audio simulation failed, continuing anyway');\n      // Always call onComplete to prevent conversation from hanging\n      if (onComplete) {\n        onComplete();\n      }\n    }\n  }\n};\n\n/**\n * Play audio from blob using Web Audio API\n */\nconst playAudioFromBlob = async (audioBlob: Blob): Promise<void> => {\n  return new Promise((resolve, reject) => {\n    try {\n      // Create audio element for playback\n      const audio = new Audio();\n      const audioUrl = URL.createObjectURL(audioBlob);\n      \n      audio.src = audioUrl;\n      audio.preload = 'auto';\n      \n      // Set up event listeners\n      audio.addEventListener('ended', () => {\n        URL.revokeObjectURL(audioUrl);\n        resolve();\n      });\n      \n      audio.addEventListener('error', (error) => {\n        URL.revokeObjectURL(audioUrl);\n        reject(new Error(`Audio playback failed: ${error.message || 'Unknown error'}`));\n      });\n      \n      // Start playback\n      audio.play().catch((error) => {\n        URL.revokeObjectURL(audioUrl);\n        reject(new Error(`Audio play failed: ${error.message || 'Unknown error'}`));\n      });\n      \n    } catch (error) {\n      reject(new Error(`Audio setup failed: ${error instanceof Error ? error.message : String(error)}`));\n    }\n  });\n};\n\n/**\n * Play direct audio buffer with TTS fallback\n */\nexport const playDirectAudioWithFallback = async (\n  audioData: number[] | Uint8Array,\n  fallbackText: string,\n  onStart?: () => void,\n  onComplete?: () => void,\n  onError?: (error: Error) => void\n): Promise<void> => {\n  if (validateAudioBuffer(audioData)) {\n    try {\n      onStart?.();\n      await playAudioBuffer(audioData);\n      logger.audio.speak('Direct audio playback completed');\n      onComplete?.();\n      return;\n    } catch (error) {\n      logger.warn('Direct audio failed, falling back to TTS', { error: error instanceof Error ? error.message : String(error) });\n      // Fall through to TTS fallback\n    }\n  }\n\n  // TTS fallback\n  await playAIResponse(fallbackText, onStart, onComplete, onError);\n};\n\n/**\n * Combined conversation processing with audio playback\n */\nexport const processAndPlayResponse = async (\n  userTranscript: string,\n  onStart?: () => void,\n  onComplete?: () => void,\n  onError?: (error: Error) => void\n): Promise<{\n  userMessage: SavedMessage;\n  aiMessage: SavedMessage;\n  questionNumber?: number;\n  isComplete?: boolean;\n}> => {\n  try {\n    // Process conversation\n    const data = await processConversation(userTranscript);\n    \n    // Create message objects\n    const userMessage: SavedMessage = { role: \"user\", content: userTranscript };\n    const aiMessage: SavedMessage = { role: \"assistant\", content: data.message };\n\n    // Play response audio\n    if (data.hasAudio && validateAudioBuffer(data.audioData)) {\n      await playDirectAudioWithFallback(\n        data.audioData!,\n        data.message,\n        onStart,\n        onComplete,\n        onError\n      );\n    } else {\n      await playAIResponse(data.message, onStart, onComplete, onError);\n    }\n\n    return {\n      userMessage,\n      aiMessage,\n      questionNumber: data.questionNumber,\n      isComplete: data.isComplete\n    };\n  } catch (error) {\n    const processError = error instanceof Error ? error : new Error('Processing failed');\n    logger.error('Conversation processing failed', processError, {\n      userTranscript: userTranscript.substring(0, 100),\n      errorType: processError.name,\n      errorMessage: processError.message\n    });\n    \n    // Don't throw the error, instead provide fallback behavior\n    console.warn('\uD83D\uDD04 Conversation processing failed, attempting graceful recovery');\n    \n    // Create fallback response to prevent conversation from breaking\n    const fallbackUserMessage: SavedMessage = { role: \"user\", content: userTranscript };\n    const fallbackAIMessage: SavedMessage = { \n      role: \"assistant\", \n      content: \"I apologize, I'm having some technical difficulties. Could you please repeat that or try rephrasing your response?\" \n    };\n    \n    // Try to play the fallback response\n    try {\n      await playAIResponse(fallbackAIMessage.content, onStart, onComplete, onError);\n    } catch (audioError) {\n      console.warn('\uD83D\uDD0A Fallback audio also failed, calling completion anyway');\n      if (onComplete) onComplete();\n    }\n    \n    return {\n      userMessage: fallbackUserMessage,\n      aiMessage: fallbackAIMessage,\n      questionNumber: undefined,\n      isComplete: false\n    };\n  }\n};\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "63c73f10fdf43a14eca30a0b36949f998e6aa3ab"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_7hrnpdyri = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_7hrnpdyri();
cov_7hrnpdyri().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_7hrnpdyri().s[1]++;
exports.processAndPlayResponse = exports.playDirectAudioWithFallback = exports.playAIResponse = exports.textToSpeech = exports.endConversation = exports.processConversation = exports.startConversation = exports.speechToText = void 0;
const logger_1 =
/* istanbul ignore next */
(cov_7hrnpdyri().s[2]++, require("../utils/logger"));
const error_utils_1 =
/* istanbul ignore next */
(cov_7hrnpdyri().s[3]++, require("../utils/error-utils"));
const audio_helpers_1 =
/* istanbul ignore next */
(cov_7hrnpdyri().s[4]++, require("../utils/audio-helpers"));
/**
 * Speech-to-Text adapter with retry logic
 */
/* istanbul ignore next */
cov_7hrnpdyri().s[5]++;
const speechToText = async audioBlob => {
  /* istanbul ignore next */
  cov_7hrnpdyri().f[0]++;
  cov_7hrnpdyri().s[6]++;
  return (0, error_utils_1.withRetry)(async () => {
    /* istanbul ignore next */
    cov_7hrnpdyri().f[1]++;
    var _a;
    const formData =
    /* istanbul ignore next */
    (cov_7hrnpdyri().s[7]++, new FormData());
    /* istanbul ignore next */
    cov_7hrnpdyri().s[8]++;
    formData.append('audio', audioBlob, 'recording.wav');
    /* istanbul ignore next */
    cov_7hrnpdyri().s[9]++;
    logger_1.logger.api.request('/api/voice/stream', 'POST', {
      size: audioBlob.size,
      type: audioBlob.type
    });
    const response =
    /* istanbul ignore next */
    (cov_7hrnpdyri().s[10]++, await fetch('/api/voice/stream', {
      method: 'POST',
      body: formData
    }));
    /* istanbul ignore next */
    cov_7hrnpdyri().s[11]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_7hrnpdyri().b[0][0]++;
      cov_7hrnpdyri().s[12]++;
      throw (0, error_utils_1.handleApiError)(response, 'Speech-to-text');
    } else
    /* istanbul ignore next */
    {
      cov_7hrnpdyri().b[0][1]++;
    }
    const result =
    /* istanbul ignore next */
    (cov_7hrnpdyri().s[13]++, await response.json());
    /* istanbul ignore next */
    cov_7hrnpdyri().s[14]++;
    logger_1.logger.api.response('/api/voice/stream', response.status, {
      textLength:
      /* istanbul ignore next */
      (cov_7hrnpdyri().b[2][0]++, (_a = result.text) === null) ||
      /* istanbul ignore next */
      (cov_7hrnpdyri().b[2][1]++, _a === void 0) ?
      /* istanbul ignore next */
      (cov_7hrnpdyri().b[1][0]++, void 0) :
      /* istanbul ignore next */
      (cov_7hrnpdyri().b[1][1]++, _a.length)
    });
    /* istanbul ignore next */
    cov_7hrnpdyri().s[15]++;
    if (result.text === undefined) {
      /* istanbul ignore next */
      cov_7hrnpdyri().b[3][0]++;
      cov_7hrnpdyri().s[16]++;
      throw new Error('Speech-to-text response missing text field');
    } else
    /* istanbul ignore next */
    {
      cov_7hrnpdyri().b[3][1]++;
    }
    cov_7hrnpdyri().s[17]++;
    return result.text;
  }, 3, 'Speech-to-text');
};
/* istanbul ignore next */
cov_7hrnpdyri().s[18]++;
exports.speechToText = speechToText;
/**
 * Start conversation adapter
 */
/* istanbul ignore next */
cov_7hrnpdyri().s[19]++;
const startConversation = async interviewContext => {
  /* istanbul ignore next */
  cov_7hrnpdyri().f[2]++;
  var _a;
  /* istanbul ignore next */
  cov_7hrnpdyri().s[20]++;
  logger_1.logger.api.request('/api/voice/conversation', 'POST', {
    action: 'start'
  });
  const response =
  /* istanbul ignore next */
  (cov_7hrnpdyri().s[21]++, await fetch('/api/voice/conversation', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json'
    },
    body: JSON.stringify({
      action: "start",
      interviewContext
    })
  }));
  /* istanbul ignore next */
  cov_7hrnpdyri().s[22]++;
  if (!response.ok) {
    /* istanbul ignore next */
    cov_7hrnpdyri().b[4][0]++;
    cov_7hrnpdyri().s[23]++;
    throw (0, error_utils_1.handleApiError)(response, 'Start conversation');
  } else
  /* istanbul ignore next */
  {
    cov_7hrnpdyri().b[4][1]++;
  }
  const data =
  /* istanbul ignore next */
  (cov_7hrnpdyri().s[24]++, await response.json());
  /* istanbul ignore next */
  cov_7hrnpdyri().s[25]++;
  logger_1.logger.api.response('/api/voice/conversation', response.status, {
    hasAudio: !!data.hasAudio,
    messageLength:
    /* istanbul ignore next */
    (cov_7hrnpdyri().b[6][0]++, (_a = data.message) === null) ||
    /* istanbul ignore next */
    (cov_7hrnpdyri().b[6][1]++, _a === void 0) ?
    /* istanbul ignore next */
    (cov_7hrnpdyri().b[5][0]++, void 0) :
    /* istanbul ignore next */
    (cov_7hrnpdyri().b[5][1]++, _a.length)
  });
  /* istanbul ignore next */
  cov_7hrnpdyri().s[26]++;
  return data;
};
/* istanbul ignore next */
cov_7hrnpdyri().s[27]++;
exports.startConversation = startConversation;
/**
 * Process conversation turn adapter
 */
/* istanbul ignore next */
cov_7hrnpdyri().s[28]++;
const processConversation = async userTranscript => {
  /* istanbul ignore next */
  cov_7hrnpdyri().f[3]++;
  var _a, _b;
  /* istanbul ignore next */
  cov_7hrnpdyri().s[29]++;
  console.log('🧪 [PROCESS CONVERSATION] Starting with transcript:', {
    length: userTranscript.length,
    preview: userTranscript.substring(0, 100) + '...'
  });
  /* istanbul ignore next */
  cov_7hrnpdyri().s[30]++;
  logger_1.logger.api.request('/api/voice/conversation', 'POST', {
    action: 'process',
    transcriptLength: userTranscript.length
  });
  /* istanbul ignore next */
  cov_7hrnpdyri().s[31]++;
  try {
    /* istanbul ignore next */
    cov_7hrnpdyri().s[32]++;
    console.log('🌍 [PROCESS CONVERSATION] Making fetch request to /api/voice/conversation');
    const response =
    /* istanbul ignore next */
    (cov_7hrnpdyri().s[33]++, await fetch('/api/voice/conversation', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        action: "process",
        userTranscript
      })
    }));
    /* istanbul ignore next */
    cov_7hrnpdyri().s[34]++;
    console.log('🌍 [PROCESS CONVERSATION] Got response:', {
      status: response.status,
      statusText: response.statusText,
      ok: response.ok
    });
    /* istanbul ignore next */
    cov_7hrnpdyri().s[35]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_7hrnpdyri().b[7][0]++;
      const errorText =
      /* istanbul ignore next */
      (cov_7hrnpdyri().s[36]++, await response.text());
      /* istanbul ignore next */
      cov_7hrnpdyri().s[37]++;
      console.error('❌ [PROCESS CONVERSATION] API error response:', {
        status: response.status,
        statusText: response.statusText,
        errorBody: errorText.substring(0, 500) + '...'
      });
      /* istanbul ignore next */
      cov_7hrnpdyri().s[38]++;
      throw (0, error_utils_1.handleApiError)(response, 'Process conversation');
    } else
    /* istanbul ignore next */
    {
      cov_7hrnpdyri().b[7][1]++;
    }
    const data =
    /* istanbul ignore next */
    (cov_7hrnpdyri().s[39]++, await response.json());
    /* istanbul ignore next */
    cov_7hrnpdyri().s[40]++;
    console.log('✅ [PROCESS CONVERSATION] Successfully parsed JSON response:', {
      hasMessage: !!data.message,
      messageLength:
      /* istanbul ignore next */
      (cov_7hrnpdyri().b[9][0]++, (_a = data.message) === null) ||
      /* istanbul ignore next */
      (cov_7hrnpdyri().b[9][1]++, _a === void 0) ?
      /* istanbul ignore next */
      (cov_7hrnpdyri().b[8][0]++, void 0) :
      /* istanbul ignore next */
      (cov_7hrnpdyri().b[8][1]++, _a.length),
      questionNumber: data.questionNumber,
      isComplete: data.isComplete,
      hasAudio: data.hasAudio
    });
    /* istanbul ignore next */
    cov_7hrnpdyri().s[41]++;
    logger_1.logger.api.response('/api/voice/conversation', response.status, {
      hasAudio: !!data.hasAudio,
      messageLength:
      /* istanbul ignore next */
      (cov_7hrnpdyri().b[11][0]++, (_b = data.message) === null) ||
      /* istanbul ignore next */
      (cov_7hrnpdyri().b[11][1]++, _b === void 0) ?
      /* istanbul ignore next */
      (cov_7hrnpdyri().b[10][0]++, void 0) :
      /* istanbul ignore next */
      (cov_7hrnpdyri().b[10][1]++, _b.length),
      questionNumber: data.questionNumber,
      isComplete: data.isComplete
    });
    /* istanbul ignore next */
    cov_7hrnpdyri().s[42]++;
    return data;
  } catch (error) {
    /* istanbul ignore next */
    cov_7hrnpdyri().s[43]++;
    console.error('❌ [PROCESS CONVERSATION] Network or parsing error:', {
      errorType: error instanceof Error ?
      /* istanbul ignore next */
      (cov_7hrnpdyri().b[12][0]++, error.constructor.name) :
      /* istanbul ignore next */
      (cov_7hrnpdyri().b[12][1]++, typeof error),
      errorMessage: error instanceof Error ?
      /* istanbul ignore next */
      (cov_7hrnpdyri().b[13][0]++, error.message) :
      /* istanbul ignore next */
      (cov_7hrnpdyri().b[13][1]++, String(error)),
      stack: error instanceof Error ?
      /* istanbul ignore next */
      (cov_7hrnpdyri().b[14][0]++, error.stack) :
      /* istanbul ignore next */
      (cov_7hrnpdyri().b[14][1]++, undefined)
    });
    /* istanbul ignore next */
    cov_7hrnpdyri().s[44]++;
    throw error;
  }
};
/* istanbul ignore next */
cov_7hrnpdyri().s[45]++;
exports.processConversation = processConversation;
/**
 * End conversation adapter
 */
/* istanbul ignore next */
cov_7hrnpdyri().s[46]++;
const endConversation = async () => {
  /* istanbul ignore next */
  cov_7hrnpdyri().f[4]++;
  cov_7hrnpdyri().s[47]++;
  try {
    /* istanbul ignore next */
    cov_7hrnpdyri().s[48]++;
    logger_1.logger.api.request('/api/voice/conversation', 'POST', {
      action: 'summary'
    });
    const response =
    /* istanbul ignore next */
    (cov_7hrnpdyri().s[49]++, await fetch('/api/voice/conversation', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        action: "summary"
      })
    }));
    /* istanbul ignore next */
    cov_7hrnpdyri().s[50]++;
    if (response.ok) {
      /* istanbul ignore next */
      cov_7hrnpdyri().b[15][0]++;
      const data =
      /* istanbul ignore next */
      (cov_7hrnpdyri().s[51]++, await response.json());
      /* istanbul ignore next */
      cov_7hrnpdyri().s[52]++;
      logger_1.logger.api.response('/api/voice/conversation', response.status, {
        hasSummary: !!data.summary
      });
      /* istanbul ignore next */
      cov_7hrnpdyri().s[53]++;
      return data;
    } else {
      /* istanbul ignore next */
      cov_7hrnpdyri().b[15][1]++;
      cov_7hrnpdyri().s[54]++;
      logger_1.logger.warn('Failed to generate interview summary', {
        status: response.status
      });
      /* istanbul ignore next */
      cov_7hrnpdyri().s[55]++;
      return {};
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_7hrnpdyri().s[56]++;
    logger_1.logger.warn('Error generating interview summary', {
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_7hrnpdyri().b[16][0]++, error.message) :
      /* istanbul ignore next */
      (cov_7hrnpdyri().b[16][1]++, String(error))
    });
    /* istanbul ignore next */
    cov_7hrnpdyri().s[57]++;
    return {};
  }
};
/* istanbul ignore next */
cov_7hrnpdyri().s[58]++;
exports.endConversation = endConversation;
/**
 * Text-to-Speech adapter
 */
/* istanbul ignore next */
cov_7hrnpdyri().s[59]++;
const textToSpeech = async text => {
  /* istanbul ignore next */
  cov_7hrnpdyri().f[5]++;
  cov_7hrnpdyri().s[60]++;
  return (0, error_utils_1.withRetry)(async () => {
    /* istanbul ignore next */
    cov_7hrnpdyri().f[6]++;
    cov_7hrnpdyri().s[61]++;
    logger_1.logger.api.request('/api/voice/tts', 'POST', {
      textLength: text.length
    });
    const response =
    /* istanbul ignore next */
    (cov_7hrnpdyri().s[62]++, await fetch('/api/voice/tts', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        text
      })
    }));
    /* istanbul ignore next */
    cov_7hrnpdyri().s[63]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_7hrnpdyri().b[17][0]++;
      cov_7hrnpdyri().s[64]++;
      throw (0, error_utils_1.handleApiError)(response, 'Text-to-speech');
    } else
    /* istanbul ignore next */
    {
      cov_7hrnpdyri().b[17][1]++;
    }
    const audioBlob =
    /* istanbul ignore next */
    (cov_7hrnpdyri().s[65]++, await response.blob());
    /* istanbul ignore next */
    cov_7hrnpdyri().s[66]++;
    logger_1.logger.api.response('/api/voice/tts', response.status, {
      blobSize: audioBlob.size
    });
    /* istanbul ignore next */
    cov_7hrnpdyri().s[67]++;
    return audioBlob;
  }, 2, 'Text-to-speech');
};
/* istanbul ignore next */
cov_7hrnpdyri().s[68]++;
exports.textToSpeech = textToSpeech;
/**
 * Play AI response using real Azure TTS with fallback handling
 */
/* istanbul ignore next */
cov_7hrnpdyri().s[69]++;
const playAIResponse = async (text, onStart, onComplete, onError) => {
  /* istanbul ignore next */
  cov_7hrnpdyri().f[7]++;
  cov_7hrnpdyri().s[70]++;
  console.log('🎯 [AZURE TTS] playAIResponse called', {
    textLength: text.length,
    hasOnStart: !!onStart,
    hasOnComplete: !!onComplete
  });
  /* istanbul ignore next */
  cov_7hrnpdyri().s[71]++;
  try {
    /* istanbul ignore next */
    cov_7hrnpdyri().s[72]++;
    // Call onStart callback
    if (onStart) {
      /* istanbul ignore next */
      cov_7hrnpdyri().b[18][0]++;
      cov_7hrnpdyri().s[73]++;
      console.log('🎯 [AZURE TTS] Calling onStart callback');
      /* istanbul ignore next */
      cov_7hrnpdyri().s[74]++;
      onStart();
    } else
    /* istanbul ignore next */
    {
      cov_7hrnpdyri().b[18][1]++;
    }
    cov_7hrnpdyri().s[75]++;
    logger_1.logger.audio.speak('Playing AI response via Azure TTS', {
      textLength: text.length
    });
    // Get audio from Azure TTS
    const audioBlob =
    /* istanbul ignore next */
    (cov_7hrnpdyri().s[76]++, await (0, exports.textToSpeech)(text));
    /* istanbul ignore next */
    cov_7hrnpdyri().s[77]++;
    if (
    /* istanbul ignore next */
    (cov_7hrnpdyri().b[20][0]++, !audioBlob) ||
    /* istanbul ignore next */
    (cov_7hrnpdyri().b[20][1]++, audioBlob.size === 0)) {
      /* istanbul ignore next */
      cov_7hrnpdyri().b[19][0]++;
      cov_7hrnpdyri().s[78]++;
      throw new Error('Empty audio response from TTS service');
    } else
    /* istanbul ignore next */
    {
      cov_7hrnpdyri().b[19][1]++;
    }
    cov_7hrnpdyri().s[79]++;
    console.log('🔊 [AZURE TTS] Playing audio', {
      text: text.substring(0, 150) + (text.length > 150 ?
      /* istanbul ignore next */
      (cov_7hrnpdyri().b[21][0]++, '...') :
      /* istanbul ignore next */
      (cov_7hrnpdyri().b[21][1]++, '')),
      audioSize: audioBlob.size
    });
    // Play the audio using Web Audio API
    /* istanbul ignore next */
    cov_7hrnpdyri().s[80]++;
    await playAudioFromBlob(audioBlob);
    /* istanbul ignore next */
    cov_7hrnpdyri().s[81]++;
    console.log('🔊 [AZURE TTS] Audio playback completed');
    /* istanbul ignore next */
    cov_7hrnpdyri().s[82]++;
    logger_1.logger.audio.speak('Azure TTS playback completed');
    // Call onComplete callback
    /* istanbul ignore next */
    cov_7hrnpdyri().s[83]++;
    if (onComplete) {
      /* istanbul ignore next */
      cov_7hrnpdyri().b[22][0]++;
      cov_7hrnpdyri().s[84]++;
      console.log('🎯 [AZURE TTS] Calling onComplete callback');
      /* istanbul ignore next */
      cov_7hrnpdyri().s[85]++;
      onComplete();
    } else
    /* istanbul ignore next */
    {
      cov_7hrnpdyri().b[22][1]++;
    }
    cov_7hrnpdyri().s[86]++;
    console.log('🎯 [AZURE TTS] playAIResponse finished successfully');
  } catch (error) {
    /* istanbul ignore next */
    cov_7hrnpdyri().s[87]++;
    console.warn('🔊 [AZURE TTS] TTS service unavailable, using mock audio');
    const audioError =
    /* istanbul ignore next */
    (cov_7hrnpdyri().s[88]++, error instanceof Error ?
    /* istanbul ignore next */
    (cov_7hrnpdyri().b[23][0]++, error) :
    /* istanbul ignore next */
    (cov_7hrnpdyri().b[23][1]++, new Error('TTS failed')));
    /* istanbul ignore next */
    cov_7hrnpdyri().s[89]++;
    logger_1.logger.warn('Azure TTS not available, using fallback audio simulation');
    // Fallback to mock TTS timing simulation
    /* istanbul ignore next */
    cov_7hrnpdyri().s[90]++;
    try {
      /* istanbul ignore next */
      cov_7hrnpdyri().s[91]++;
      // Call onStart if not already called
      if (onStart) {
        /* istanbul ignore next */
        cov_7hrnpdyri().b[24][0]++;
        cov_7hrnpdyri().s[92]++;
        onStart();
      } else
      /* istanbul ignore next */
      {
        cov_7hrnpdyri().b[24][1]++;
      }
      const wordsCount =
      /* istanbul ignore next */
      (cov_7hrnpdyri().s[93]++, text.split(' ').length);
      const readingDuration =
      /* istanbul ignore next */
      (cov_7hrnpdyri().s[94]++, Math.max(2500, wordsCount * 120)); // 120ms per word, minimum 2.5 seconds
      /* istanbul ignore next */
      cov_7hrnpdyri().s[95]++;
      console.log('🔊 [FALLBACK] Using audio simulation', {
        wordsCount,
        duration: readingDuration + 'ms'
      });
      /* istanbul ignore next */
      cov_7hrnpdyri().s[96]++;
      await new Promise(resolve => {
        /* istanbul ignore next */
        cov_7hrnpdyri().f[8]++;
        cov_7hrnpdyri().s[97]++;
        return setTimeout(resolve, readingDuration);
      });
      /* istanbul ignore next */
      cov_7hrnpdyri().s[98]++;
      if (onComplete) {
        /* istanbul ignore next */
        cov_7hrnpdyri().b[25][0]++;
        cov_7hrnpdyri().s[99]++;
        onComplete();
      } else
      /* istanbul ignore next */
      {
        cov_7hrnpdyri().b[25][1]++;
      }
      cov_7hrnpdyri().s[100]++;
      console.log('🔊 [FALLBACK] Audio simulation completed');
    } catch (fallbackError) {
      /* istanbul ignore next */
      cov_7hrnpdyri().s[101]++;
      logger_1.logger.warn('Fallback audio simulation failed, continuing anyway');
      // Always call onComplete to prevent conversation from hanging
      /* istanbul ignore next */
      cov_7hrnpdyri().s[102]++;
      if (onComplete) {
        /* istanbul ignore next */
        cov_7hrnpdyri().b[26][0]++;
        cov_7hrnpdyri().s[103]++;
        onComplete();
      } else
      /* istanbul ignore next */
      {
        cov_7hrnpdyri().b[26][1]++;
      }
    }
  }
};
/* istanbul ignore next */
cov_7hrnpdyri().s[104]++;
exports.playAIResponse = playAIResponse;
/**
 * Play audio from blob using Web Audio API
 */
/* istanbul ignore next */
cov_7hrnpdyri().s[105]++;
const playAudioFromBlob = async audioBlob => {
  /* istanbul ignore next */
  cov_7hrnpdyri().f[9]++;
  cov_7hrnpdyri().s[106]++;
  return new Promise((resolve, reject) => {
    /* istanbul ignore next */
    cov_7hrnpdyri().f[10]++;
    cov_7hrnpdyri().s[107]++;
    try {
      // Create audio element for playback
      const audio =
      /* istanbul ignore next */
      (cov_7hrnpdyri().s[108]++, new Audio());
      const audioUrl =
      /* istanbul ignore next */
      (cov_7hrnpdyri().s[109]++, URL.createObjectURL(audioBlob));
      /* istanbul ignore next */
      cov_7hrnpdyri().s[110]++;
      audio.src = audioUrl;
      /* istanbul ignore next */
      cov_7hrnpdyri().s[111]++;
      audio.preload = 'auto';
      // Set up event listeners
      /* istanbul ignore next */
      cov_7hrnpdyri().s[112]++;
      audio.addEventListener('ended', () => {
        /* istanbul ignore next */
        cov_7hrnpdyri().f[11]++;
        cov_7hrnpdyri().s[113]++;
        URL.revokeObjectURL(audioUrl);
        /* istanbul ignore next */
        cov_7hrnpdyri().s[114]++;
        resolve();
      });
      /* istanbul ignore next */
      cov_7hrnpdyri().s[115]++;
      audio.addEventListener('error', error => {
        /* istanbul ignore next */
        cov_7hrnpdyri().f[12]++;
        cov_7hrnpdyri().s[116]++;
        URL.revokeObjectURL(audioUrl);
        /* istanbul ignore next */
        cov_7hrnpdyri().s[117]++;
        reject(new Error(`Audio playback failed: ${
        /* istanbul ignore next */
        (cov_7hrnpdyri().b[27][0]++, error.message) ||
        /* istanbul ignore next */
        (cov_7hrnpdyri().b[27][1]++, 'Unknown error')}`));
      });
      // Start playback
      /* istanbul ignore next */
      cov_7hrnpdyri().s[118]++;
      audio.play().catch(error => {
        /* istanbul ignore next */
        cov_7hrnpdyri().f[13]++;
        cov_7hrnpdyri().s[119]++;
        URL.revokeObjectURL(audioUrl);
        /* istanbul ignore next */
        cov_7hrnpdyri().s[120]++;
        reject(new Error(`Audio play failed: ${
        /* istanbul ignore next */
        (cov_7hrnpdyri().b[28][0]++, error.message) ||
        /* istanbul ignore next */
        (cov_7hrnpdyri().b[28][1]++, 'Unknown error')}`));
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_7hrnpdyri().s[121]++;
      reject(new Error(`Audio setup failed: ${error instanceof Error ?
      /* istanbul ignore next */
      (cov_7hrnpdyri().b[29][0]++, error.message) :
      /* istanbul ignore next */
      (cov_7hrnpdyri().b[29][1]++, String(error))}`));
    }
  });
};
/**
 * Play direct audio buffer with TTS fallback
 */
/* istanbul ignore next */
cov_7hrnpdyri().s[122]++;
const playDirectAudioWithFallback = async (audioData, fallbackText, onStart, onComplete, onError) => {
  /* istanbul ignore next */
  cov_7hrnpdyri().f[14]++;
  cov_7hrnpdyri().s[123]++;
  if ((0, audio_helpers_1.validateAudioBuffer)(audioData)) {
    /* istanbul ignore next */
    cov_7hrnpdyri().b[30][0]++;
    cov_7hrnpdyri().s[124]++;
    try {
      /* istanbul ignore next */
      cov_7hrnpdyri().s[125]++;
      /* istanbul ignore next */
      (cov_7hrnpdyri().b[32][0]++, onStart === null) ||
      /* istanbul ignore next */
      (cov_7hrnpdyri().b[32][1]++, onStart === void 0) ?
      /* istanbul ignore next */
      (cov_7hrnpdyri().b[31][0]++, void 0) :
      /* istanbul ignore next */
      (cov_7hrnpdyri().b[31][1]++, onStart());
      /* istanbul ignore next */
      cov_7hrnpdyri().s[126]++;
      await (0, audio_helpers_1.playAudioBuffer)(audioData);
      /* istanbul ignore next */
      cov_7hrnpdyri().s[127]++;
      logger_1.logger.audio.speak('Direct audio playback completed');
      /* istanbul ignore next */
      cov_7hrnpdyri().s[128]++;
      /* istanbul ignore next */
      (cov_7hrnpdyri().b[34][0]++, onComplete === null) ||
      /* istanbul ignore next */
      (cov_7hrnpdyri().b[34][1]++, onComplete === void 0) ?
      /* istanbul ignore next */
      (cov_7hrnpdyri().b[33][0]++, void 0) :
      /* istanbul ignore next */
      (cov_7hrnpdyri().b[33][1]++, onComplete());
      /* istanbul ignore next */
      cov_7hrnpdyri().s[129]++;
      return;
    } catch (error) {
      /* istanbul ignore next */
      cov_7hrnpdyri().s[130]++;
      logger_1.logger.warn('Direct audio failed, falling back to TTS', {
        error: error instanceof Error ?
        /* istanbul ignore next */
        (cov_7hrnpdyri().b[35][0]++, error.message) :
        /* istanbul ignore next */
        (cov_7hrnpdyri().b[35][1]++, String(error))
      });
      // Fall through to TTS fallback
    }
  } else
  /* istanbul ignore next */
  {
    cov_7hrnpdyri().b[30][1]++;
  }
  // TTS fallback
  cov_7hrnpdyri().s[131]++;
  await (0, exports.playAIResponse)(fallbackText, onStart, onComplete, onError);
};
/* istanbul ignore next */
cov_7hrnpdyri().s[132]++;
exports.playDirectAudioWithFallback = playDirectAudioWithFallback;
/**
 * Combined conversation processing with audio playback
 */
/* istanbul ignore next */
cov_7hrnpdyri().s[133]++;
const processAndPlayResponse = async (userTranscript, onStart, onComplete, onError) => {
  /* istanbul ignore next */
  cov_7hrnpdyri().f[15]++;
  cov_7hrnpdyri().s[134]++;
  try {
    // Process conversation
    const data =
    /* istanbul ignore next */
    (cov_7hrnpdyri().s[135]++, await (0, exports.processConversation)(userTranscript));
    // Create message objects
    const userMessage =
    /* istanbul ignore next */
    (cov_7hrnpdyri().s[136]++, {
      role: "user",
      content: userTranscript
    });
    const aiMessage =
    /* istanbul ignore next */
    (cov_7hrnpdyri().s[137]++, {
      role: "assistant",
      content: data.message
    });
    // Play response audio
    /* istanbul ignore next */
    cov_7hrnpdyri().s[138]++;
    if (
    /* istanbul ignore next */
    (cov_7hrnpdyri().b[37][0]++, data.hasAudio) &&
    /* istanbul ignore next */
    (cov_7hrnpdyri().b[37][1]++, (0, audio_helpers_1.validateAudioBuffer)(data.audioData))) {
      /* istanbul ignore next */
      cov_7hrnpdyri().b[36][0]++;
      cov_7hrnpdyri().s[139]++;
      await (0, exports.playDirectAudioWithFallback)(data.audioData, data.message, onStart, onComplete, onError);
    } else {
      /* istanbul ignore next */
      cov_7hrnpdyri().b[36][1]++;
      cov_7hrnpdyri().s[140]++;
      await (0, exports.playAIResponse)(data.message, onStart, onComplete, onError);
    }
    /* istanbul ignore next */
    cov_7hrnpdyri().s[141]++;
    return {
      userMessage,
      aiMessage,
      questionNumber: data.questionNumber,
      isComplete: data.isComplete
    };
  } catch (error) {
    const processError =
    /* istanbul ignore next */
    (cov_7hrnpdyri().s[142]++, error instanceof Error ?
    /* istanbul ignore next */
    (cov_7hrnpdyri().b[38][0]++, error) :
    /* istanbul ignore next */
    (cov_7hrnpdyri().b[38][1]++, new Error('Processing failed')));
    /* istanbul ignore next */
    cov_7hrnpdyri().s[143]++;
    logger_1.logger.error('Conversation processing failed', processError, {
      userTranscript: userTranscript.substring(0, 100),
      errorType: processError.name,
      errorMessage: processError.message
    });
    // Don't throw the error, instead provide fallback behavior
    /* istanbul ignore next */
    cov_7hrnpdyri().s[144]++;
    console.warn('🔄 Conversation processing failed, attempting graceful recovery');
    // Create fallback response to prevent conversation from breaking
    const fallbackUserMessage =
    /* istanbul ignore next */
    (cov_7hrnpdyri().s[145]++, {
      role: "user",
      content: userTranscript
    });
    const fallbackAIMessage =
    /* istanbul ignore next */
    (cov_7hrnpdyri().s[146]++, {
      role: "assistant",
      content: "I apologize, I'm having some technical difficulties. Could you please repeat that or try rephrasing your response?"
    });
    // Try to play the fallback response
    /* istanbul ignore next */
    cov_7hrnpdyri().s[147]++;
    try {
      /* istanbul ignore next */
      cov_7hrnpdyri().s[148]++;
      await (0, exports.playAIResponse)(fallbackAIMessage.content, onStart, onComplete, onError);
    } catch (audioError) {
      /* istanbul ignore next */
      cov_7hrnpdyri().s[149]++;
      console.warn('🔊 Fallback audio also failed, calling completion anyway');
      /* istanbul ignore next */
      cov_7hrnpdyri().s[150]++;
      if (onComplete) {
        /* istanbul ignore next */
        cov_7hrnpdyri().b[39][0]++;
        cov_7hrnpdyri().s[151]++;
        onComplete();
      } else
      /* istanbul ignore next */
      {
        cov_7hrnpdyri().b[39][1]++;
      }
    }
    /* istanbul ignore next */
    cov_7hrnpdyri().s[152]++;
    return {
      userMessage: fallbackUserMessage,
      aiMessage: fallbackAIMessage,
      questionNumber: undefined,
      isComplete: false
    };
  }
};
/* istanbul ignore next */
cov_7hrnpdyri().s[153]++;
exports.processAndPlayResponse = processAndPlayResponse;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,