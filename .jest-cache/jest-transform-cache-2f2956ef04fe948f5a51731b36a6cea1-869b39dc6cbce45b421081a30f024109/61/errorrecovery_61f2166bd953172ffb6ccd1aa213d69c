3acf396c882ee3d7a1d7cbf8c7712217
"use strict";

/**
 * Advanced error recovery and network resilience for voice interviews
 */
/* istanbul ignore next */
function cov_ynnkr5ueo() {
  var path = "/Users/dikshantvashistha/PrepBettr/lib/voice/error-recovery.ts";
  var hash = "a015d64ab35106fd28361997c99c7db81e2bc7eb";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dikshantvashistha/PrepBettr/lib/voice/error-recovery.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 74
        }
      },
      "2": {
        start: {
          line: 7,
          column: 17
        },
        end: {
          line: 7,
          column: 43
        }
      },
      "3": {
        start: {
          line: 10,
          column: 8
        },
        end: {
          line: 10,
          column: 31
        }
      },
      "4": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 39
        }
      },
      "5": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 17,
          column: 10
        }
      },
      "6": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 40
        }
      },
      "7": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 126
        }
      },
      "8": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 37
        }
      },
      "9": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 41,
          column: 9
        }
      },
      "10": {
        start: {
          line: 29,
          column: 12
        },
        end: {
          line: 33,
          column: 15
        }
      },
      "11": {
        start: {
          line: 30,
          column: 16
        },
        end: {
          line: 30,
          column: 68
        }
      },
      "12": {
        start: {
          line: 31,
          column: 16
        },
        end: {
          line: 31,
          column: 54
        }
      },
      "13": {
        start: {
          line: 32,
          column: 16
        },
        end: {
          line: 32,
          column: 43
        }
      },
      "14": {
        start: {
          line: 34,
          column: 12
        },
        end: {
          line: 38,
          column: 15
        }
      },
      "15": {
        start: {
          line: 35,
          column: 16
        },
        end: {
          line: 35,
          column: 88
        }
      },
      "16": {
        start: {
          line: 36,
          column: 16
        },
        end: {
          line: 36,
          column: 55
        }
      },
      "17": {
        start: {
          line: 37,
          column: 16
        },
        end: {
          line: 37,
          column: 41
        }
      },
      "18": {
        start: {
          line: 40,
          column: 12
        },
        end: {
          line: 40,
          column: 81
        }
      },
      "19": {
        start: {
          line: 47,
          column: 29
        },
        end: {
          line: 47,
          column: 61
        }
      },
      "20": {
        start: {
          line: 48,
          column: 24
        },
        end: {
          line: 48,
          column: 28
        }
      },
      "21": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 78,
          column: 9
        }
      },
      "22": {
        start: {
          line: 49,
          column: 27
        },
        end: {
          line: 49,
          column: 28
        }
      },
      "23": {
        start: {
          line: 50,
          column: 12
        },
        end: {
          line: 77,
          column: 13
        }
      },
      "24": {
        start: {
          line: 52,
          column: 16
        },
        end: {
          line: 54,
          column: 17
        }
      },
      "25": {
        start: {
          line: 53,
          column: 20
        },
        end: {
          line: 53,
          column: 75
        }
      },
      "26": {
        start: {
          line: 55,
          column: 31
        },
        end: {
          line: 55,
          column: 48
        }
      },
      "27": {
        start: {
          line: 57,
          column: 16
        },
        end: {
          line: 57,
          column: 56
        }
      },
      "28": {
        start: {
          line: 58,
          column: 16
        },
        end: {
          line: 58,
          column: 66
        }
      },
      "29": {
        start: {
          line: 59,
          column: 16
        },
        end: {
          line: 59,
          column: 30
        }
      },
      "30": {
        start: {
          line: 62,
          column: 16
        },
        end: {
          line: 62,
          column: 86
        }
      },
      "31": {
        start: {
          line: 63,
          column: 16
        },
        end: {
          line: 67,
          column: 19
        }
      },
      "32": {
        start: {
          line: 69,
          column: 16
        },
        end: {
          line: 69,
          column: 76
        }
      },
      "33": {
        start: {
          line: 71,
          column: 16
        },
        end: {
          line: 73,
          column: 17
        }
      },
      "34": {
        start: {
          line: 72,
          column: 20
        },
        end: {
          line: 72,
          column: 26
        }
      },
      "35": {
        start: {
          line: 75,
          column: 30
        },
        end: {
          line: 75,
          column: 90
        }
      },
      "36": {
        start: {
          line: 76,
          column: 16
        },
        end: {
          line: 76,
          column: 40
        }
      },
      "37": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 88,
          column: 9
        }
      },
      "38": {
        start: {
          line: 81,
          column: 12
        },
        end: {
          line: 87,
          column: 13
        }
      },
      "39": {
        start: {
          line: 82,
          column: 16
        },
        end: {
          line: 82,
          column: 81
        }
      },
      "40": {
        start: {
          line: 83,
          column: 16
        },
        end: {
          line: 83,
          column: 40
        }
      },
      "41": {
        start: {
          line: 86,
          column: 16
        },
        end: {
          line: 86,
          column: 166
        }
      },
      "42": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 90,
          column: 59
        }
      },
      "43": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 91,
          column: 106
        }
      },
      "44": {
        start: {
          line: 98,
          column: 30
        },
        end: {
          line: 98,
          column: 36
        }
      },
      "45": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 101,
          column: 9
        }
      },
      "46": {
        start: {
          line: 100,
          column: 12
        },
        end: {
          line: 100,
          column: 40
        }
      },
      "47": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 111,
          column: 9
        }
      },
      "48": {
        start: {
          line: 103,
          column: 12
        },
        end: {
          line: 103,
          column: 58
        }
      },
      "49": {
        start: {
          line: 104,
          column: 12
        },
        end: {
          line: 104,
          column: 97
        }
      },
      "50": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 110,
          column: 13
        }
      },
      "51": {
        start: {
          line: 107,
          column: 16
        },
        end: {
          line: 109,
          column: 20
        }
      },
      "52": {
        start: {
          line: 117,
          column: 29
        },
        end: {
          line: 117,
          column: 56
        }
      },
      "53": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 137,
          column: 9
        }
      },
      "54": {
        start: {
          line: 120,
          column: 12
        },
        end: {
          line: 120,
          column: 57
        }
      },
      "55": {
        start: {
          line: 123,
          column: 13
        },
        end: {
          line: 137,
          column: 9
        }
      },
      "56": {
        start: {
          line: 124,
          column: 12
        },
        end: {
          line: 124,
          column: 58
        }
      },
      "57": {
        start: {
          line: 127,
          column: 13
        },
        end: {
          line: 137,
          column: 9
        }
      },
      "58": {
        start: {
          line: 128,
          column: 12
        },
        end: {
          line: 128,
          column: 57
        }
      },
      "59": {
        start: {
          line: 131,
          column: 13
        },
        end: {
          line: 137,
          column: 9
        }
      },
      "60": {
        start: {
          line: 132,
          column: 12
        },
        end: {
          line: 132,
          column: 58
        }
      },
      "61": {
        start: {
          line: 135,
          column: 13
        },
        end: {
          line: 137,
          column: 9
        }
      },
      "62": {
        start: {
          line: 136,
          column: 12
        },
        end: {
          line: 136,
          column: 58
        }
      },
      "63": {
        start: {
          line: 143,
          column: 8
        },
        end: {
          line: 143,
          column: 39
        }
      },
      "64": {
        start: {
          line: 145,
          column: 8
        },
        end: {
          line: 149,
          column: 11
        }
      },
      "65": {
        start: {
          line: 146,
          column: 12
        },
        end: {
          line: 148,
          column: 13
        }
      },
      "66": {
        start: {
          line: 147,
          column: 16
        },
        end: {
          line: 147,
          column: 61
        }
      },
      "67": {
        start: {
          line: 150,
          column: 8
        },
        end: {
          line: 150,
          column: 101
        }
      },
      "68": {
        start: {
          line: 156,
          column: 8
        },
        end: {
          line: 157,
          column: 19
        }
      },
      "69": {
        start: {
          line: 157,
          column: 12
        },
        end: {
          line: 157,
          column: 19
        }
      },
      "70": {
        start: {
          line: 158,
          column: 29
        },
        end: {
          line: 162,
          column: 9
        }
      },
      "71": {
        start: {
          line: 163,
          column: 8
        },
        end: {
          line: 163,
          column: 47
        }
      },
      "72": {
        start: {
          line: 169,
          column: 8
        },
        end: {
          line: 175,
          column: 9
        }
      },
      "73": {
        start: {
          line: 170,
          column: 29
        },
        end: {
          line: 170,
          column: 69
        }
      },
      "74": {
        start: {
          line: 171,
          column: 12
        },
        end: {
          line: 171,
          column: 83
        }
      },
      "75": {
        start: {
          line: 174,
          column: 12
        },
        end: {
          line: 174,
          column: 57
        }
      },
      "76": {
        start: {
          line: 181,
          column: 8
        },
        end: {
          line: 181,
          column: 53
        }
      },
      "77": {
        start: {
          line: 187,
          column: 8
        },
        end: {
          line: 187,
          column: 102
        }
      },
      "78": {
        start: {
          line: 193,
          column: 8
        },
        end: {
          line: 195,
          column: 9
        }
      },
      "79": {
        start: {
          line: 194,
          column: 12
        },
        end: {
          line: 194,
          column: 100
        }
      },
      "80": {
        start: {
          line: 196,
          column: 30
        },
        end: {
          line: 196,
          column: 57
        }
      },
      "81": {
        start: {
          line: 197,
          column: 8
        },
        end: {
          line: 213,
          column: 9
        }
      },
      "82": {
        start: {
          line: 199,
          column: 16
        },
        end: {
          line: 208,
          column: 17
        }
      },
      "83": {
        start: {
          line: 201,
          column: 24
        },
        end: {
          line: 201,
          column: 115
        }
      },
      "84": {
        start: {
          line: 203,
          column: 24
        },
        end: {
          line: 203,
          column: 103
        }
      },
      "85": {
        start: {
          line: 205,
          column: 24
        },
        end: {
          line: 205,
          column: 104
        }
      },
      "86": {
        start: {
          line: 207,
          column: 24
        },
        end: {
          line: 207,
          column: 96
        }
      },
      "87": {
        start: {
          line: 210,
          column: 16
        },
        end: {
          line: 210,
          column: 103
        }
      },
      "88": {
        start: {
          line: 212,
          column: 16
        },
        end: {
          line: 212,
          column: 138
        }
      },
      "89": {
        start: {
          line: 219,
          column: 8
        },
        end: {
          line: 219,
          column: 63
        }
      },
      "90": {
        start: {
          line: 219,
          column: 38
        },
        end: {
          line: 219,
          column: 61
        }
      },
      "91": {
        start: {
          line: 225,
          column: 8
        },
        end: {
          line: 225,
          column: 35
        }
      },
      "92": {
        start: {
          line: 226,
          column: 8
        },
        end: {
          line: 231,
          column: 10
        }
      },
      "93": {
        start: {
          line: 232,
          column: 8
        },
        end: {
          line: 232,
          column: 40
        }
      },
      "94": {
        start: {
          line: 233,
          column: 8
        },
        end: {
          line: 233,
          column: 60
        }
      },
      "95": {
        start: {
          line: 236,
          column: 0
        },
        end: {
          line: 236,
          column: 66
        }
      },
      "96": {
        start: {
          line: 238,
          column: 0
        },
        end: {
          line: 238,
          column: 63
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 5
          }
        },
        loc: {
          start: {
            line: 9,
            column: 30
          },
          end: {
            line: 22,
            column: 5
          }
        },
        line: 9
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 26,
            column: 5
          }
        },
        loc: {
          start: {
            line: 26,
            column: 28
          },
          end: {
            line: 42,
            column: 5
          }
        },
        line: 26
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 29,
            column: 46
          },
          end: {
            line: 29,
            column: 47
          }
        },
        loc: {
          start: {
            line: 29,
            column: 52
          },
          end: {
            line: 33,
            column: 13
          }
        },
        line: 29
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 34,
            column: 47
          },
          end: {
            line: 34,
            column: 48
          }
        },
        loc: {
          start: {
            line: 34,
            column: 53
          },
          end: {
            line: 38,
            column: 13
          }
        },
        line: 34
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 46,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        },
        loc: {
          start: {
            line: 46,
            column: 61
          },
          end: {
            line: 92,
            column: 5
          }
        },
        line: 46
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 96,
            column: 4
          },
          end: {
            line: 96,
            column: 5
          }
        },
        loc: {
          start: {
            line: 96,
            column: 41
          },
          end: {
            line: 112,
            column: 5
          }
        },
        line: 96
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 116,
            column: 4
          },
          end: {
            line: 116,
            column: 5
          }
        },
        loc: {
          start: {
            line: 116,
            column: 49
          },
          end: {
            line: 138,
            column: 5
          }
        },
        line: 116
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 142,
            column: 4
          },
          end: {
            line: 142,
            column: 5
          }
        },
        loc: {
          start: {
            line: 142,
            column: 24
          },
          end: {
            line: 151,
            column: 5
          }
        },
        line: 142
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 145,
            column: 48
          },
          end: {
            line: 145,
            column: 49
          }
        },
        loc: {
          start: {
            line: 145,
            column: 59
          },
          end: {
            line: 149,
            column: 9
          }
        },
        line: 145
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 155,
            column: 4
          },
          end: {
            line: 155,
            column: 5
          }
        },
        loc: {
          start: {
            line: 155,
            column: 32
          },
          end: {
            line: 164,
            column: 5
          }
        },
        line: 155
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 168,
            column: 4
          },
          end: {
            line: 168,
            column: 5
          }
        },
        loc: {
          start: {
            line: 168,
            column: 48
          },
          end: {
            line: 176,
            column: 5
          }
        },
        line: 168
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 180,
            column: 4
          },
          end: {
            line: 180,
            column: 5
          }
        },
        loc: {
          start: {
            line: 180,
            column: 23
          },
          end: {
            line: 182,
            column: 5
          }
        },
        line: 180
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 186,
            column: 4
          },
          end: {
            line: 186,
            column: 5
          }
        },
        loc: {
          start: {
            line: 186,
            column: 32
          },
          end: {
            line: 188,
            column: 5
          }
        },
        line: 186
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 192,
            column: 4
          },
          end: {
            line: 192,
            column: 5
          }
        },
        loc: {
          start: {
            line: 192,
            column: 48
          },
          end: {
            line: 214,
            column: 5
          }
        },
        line: 192
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 218,
            column: 4
          },
          end: {
            line: 218,
            column: 5
          }
        },
        loc: {
          start: {
            line: 218,
            column: 14
          },
          end: {
            line: 220,
            column: 5
          }
        },
        line: 218
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 219,
            column: 27
          },
          end: {
            line: 219,
            column: 28
          }
        },
        loc: {
          start: {
            line: 219,
            column: 38
          },
          end: {
            line: 219,
            column: 61
          }
        },
        line: 219
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 224,
            column: 4
          },
          end: {
            line: 224,
            column: 5
          }
        },
        loc: {
          start: {
            line: 224,
            column: 12
          },
          end: {
            line: 234,
            column: 5
          }
        },
        line: 224
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 9,
            column: 16
          },
          end: {
            line: 9,
            column: 28
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 9,
            column: 26
          },
          end: {
            line: 9,
            column: 28
          }
        }],
        line: 9
      },
      "1": {
        loc: {
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 41,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 41,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 27
      },
      "2": {
        loc: {
          start: {
            line: 40,
            column: 41
          },
          end: {
            line: 40,
            column: 80
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 40,
            column: 60
          },
          end: {
            line: 40,
            column: 68
          }
        }, {
          start: {
            line: 40,
            column: 71
          },
          end: {
            line: 40,
            column: 80
          }
        }],
        line: 40
      },
      "3": {
        loc: {
          start: {
            line: 49,
            column: 42
          },
          end: {
            line: 49,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 49,
            column: 42
          },
          end: {
            line: 49,
            column: 65
          }
        }, {
          start: {
            line: 49,
            column: 69
          },
          end: {
            line: 49,
            column: 70
          }
        }],
        line: 49
      },
      "4": {
        loc: {
          start: {
            line: 52,
            column: 16
          },
          end: {
            line: 54,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 16
          },
          end: {
            line: 54,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      },
      "5": {
        loc: {
          start: {
            line: 52,
            column: 20
          },
          end: {
            line: 52,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 52,
            column: 20
          },
          end: {
            line: 52,
            column: 60
          }
        }, {
          start: {
            line: 52,
            column: 64
          },
          end: {
            line: 52,
            column: 87
          }
        }],
        line: 52
      },
      "6": {
        loc: {
          start: {
            line: 62,
            column: 28
          },
          end: {
            line: 62,
            column: 85
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 62,
            column: 53
          },
          end: {
            line: 62,
            column: 58
          }
        }, {
          start: {
            line: 62,
            column: 61
          },
          end: {
            line: 62,
            column: 85
          }
        }],
        line: 62
      },
      "7": {
        loc: {
          start: {
            line: 71,
            column: 16
          },
          end: {
            line: 73,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 71,
            column: 16
          },
          end: {
            line: 73,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 71
      },
      "8": {
        loc: {
          start: {
            line: 75,
            column: 31
          },
          end: {
            line: 75,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 75,
            column: 31
          },
          end: {
            line: 75,
            column: 54
          }
        }, {
          start: {
            line: 75,
            column: 58
          },
          end: {
            line: 75,
            column: 62
          }
        }],
        line: 75
      },
      "9": {
        loc: {
          start: {
            line: 80,
            column: 8
          },
          end: {
            line: 88,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 80,
            column: 8
          },
          end: {
            line: 88,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 80
      },
      "10": {
        loc: {
          start: {
            line: 80,
            column: 12
          },
          end: {
            line: 80,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 80,
            column: 12
          },
          end: {
            line: 80,
            column: 20
          }
        }, {
          start: {
            line: 80,
            column: 24
          },
          end: {
            line: 80,
            column: 52
          }
        }],
        line: 80
      },
      "11": {
        loc: {
          start: {
            line: 86,
            column: 83
          },
          end: {
            line: 86,
            column: 164
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 86,
            column: 116
          },
          end: {
            line: 86,
            column: 129
          }
        }, {
          start: {
            line: 86,
            column: 132
          },
          end: {
            line: 86,
            column: 164
          }
        }],
        line: 86
      },
      "12": {
        loc: {
          start: {
            line: 91,
            column: 14
          },
          end: {
            line: 91,
            column: 105
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 91,
            column: 14
          },
          end: {
            line: 91,
            column: 23
          }
        }, {
          start: {
            line: 91,
            column: 27
          },
          end: {
            line: 91,
            column: 105
          }
        }],
        line: 91
      },
      "13": {
        loc: {
          start: {
            line: 99,
            column: 8
          },
          end: {
            line: 101,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 99,
            column: 8
          },
          end: {
            line: 101,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 99
      },
      "14": {
        loc: {
          start: {
            line: 99,
            column: 12
          },
          end: {
            line: 99,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 99,
            column: 12
          },
          end: {
            line: 99,
            column: 33
          }
        }, {
          start: {
            line: 99,
            column: 37
          },
          end: {
            line: 99,
            column: 58
          }
        }],
        line: 99
      },
      "15": {
        loc: {
          start: {
            line: 102,
            column: 8
          },
          end: {
            line: 111,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 102,
            column: 8
          },
          end: {
            line: 111,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 102
      },
      "16": {
        loc: {
          start: {
            line: 106,
            column: 12
          },
          end: {
            line: 110,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 106,
            column: 12
          },
          end: {
            line: 110,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 106
      },
      "17": {
        loc: {
          start: {
            line: 119,
            column: 8
          },
          end: {
            line: 137,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 119,
            column: 8
          },
          end: {
            line: 137,
            column: 9
          }
        }, {
          start: {
            line: 123,
            column: 13
          },
          end: {
            line: 137,
            column: 9
          }
        }],
        line: 119
      },
      "18": {
        loc: {
          start: {
            line: 119,
            column: 12
          },
          end: {
            line: 119,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 119,
            column: 12
          },
          end: {
            line: 119,
            column: 44
          }
        }, {
          start: {
            line: 119,
            column: 48
          },
          end: {
            line: 119,
            column: 78
          }
        }],
        line: 119
      },
      "19": {
        loc: {
          start: {
            line: 123,
            column: 13
          },
          end: {
            line: 137,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 123,
            column: 13
          },
          end: {
            line: 137,
            column: 9
          }
        }, {
          start: {
            line: 127,
            column: 13
          },
          end: {
            line: 137,
            column: 9
          }
        }],
        line: 123
      },
      "20": {
        loc: {
          start: {
            line: 123,
            column: 17
          },
          end: {
            line: 123,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 123,
            column: 17
          },
          end: {
            line: 123,
            column: 47
          }
        }, {
          start: {
            line: 123,
            column: 51
          },
          end: {
            line: 123,
            column: 86
          }
        }],
        line: 123
      },
      "21": {
        loc: {
          start: {
            line: 127,
            column: 13
          },
          end: {
            line: 137,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 127,
            column: 13
          },
          end: {
            line: 137,
            column: 9
          }
        }, {
          start: {
            line: 131,
            column: 13
          },
          end: {
            line: 137,
            column: 9
          }
        }],
        line: 127
      },
      "22": {
        loc: {
          start: {
            line: 127,
            column: 17
          },
          end: {
            line: 127,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 127,
            column: 17
          },
          end: {
            line: 127,
            column: 46
          }
        }, {
          start: {
            line: 127,
            column: 50
          },
          end: {
            line: 127,
            column: 87
          }
        }],
        line: 127
      },
      "23": {
        loc: {
          start: {
            line: 131,
            column: 13
          },
          end: {
            line: 137,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 131,
            column: 13
          },
          end: {
            line: 137,
            column: 9
          }
        }, {
          start: {
            line: 135,
            column: 13
          },
          end: {
            line: 137,
            column: 9
          }
        }],
        line: 131
      },
      "24": {
        loc: {
          start: {
            line: 135,
            column: 13
          },
          end: {
            line: 137,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 135,
            column: 13
          },
          end: {
            line: 137,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 135
      },
      "25": {
        loc: {
          start: {
            line: 135,
            column: 17
          },
          end: {
            line: 135,
            column: 109
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 135,
            column: 17
          },
          end: {
            line: 135,
            column: 45
          }
        }, {
          start: {
            line: 135,
            column: 49
          },
          end: {
            line: 135,
            column: 77
          }
        }, {
          start: {
            line: 135,
            column: 81
          },
          end: {
            line: 135,
            column: 109
          }
        }],
        line: 135
      },
      "26": {
        loc: {
          start: {
            line: 146,
            column: 12
          },
          end: {
            line: 148,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 146,
            column: 12
          },
          end: {
            line: 148,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 146
      },
      "27": {
        loc: {
          start: {
            line: 156,
            column: 8
          },
          end: {
            line: 157,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 156,
            column: 8
          },
          end: {
            line: 157,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 156
      },
      "28": {
        loc: {
          start: {
            line: 171,
            column: 46
          },
          end: {
            line: 171,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 171,
            column: 60
          },
          end: {
            line: 171,
            column: 68
          }
        }, {
          start: {
            line: 171,
            column: 71
          },
          end: {
            line: 171,
            column: 81
          }
        }],
        line: 171
      },
      "29": {
        loc: {
          start: {
            line: 187,
            column: 15
          },
          end: {
            line: 187,
            column: 101
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 187,
            column: 15
          },
          end: {
            line: 187,
            column: 55
          }
        }, {
          start: {
            line: 187,
            column: 59
          },
          end: {
            line: 187,
            column: 101
          }
        }],
        line: 187
      },
      "30": {
        loc: {
          start: {
            line: 193,
            column: 8
          },
          end: {
            line: 195,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 193,
            column: 8
          },
          end: {
            line: 195,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 193
      },
      "31": {
        loc: {
          start: {
            line: 197,
            column: 8
          },
          end: {
            line: 213,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 198,
            column: 12
          },
          end: {
            line: 208,
            column: 17
          }
        }, {
          start: {
            line: 209,
            column: 12
          },
          end: {
            line: 210,
            column: 103
          }
        }, {
          start: {
            line: 211,
            column: 12
          },
          end: {
            line: 212,
            column: 138
          }
        }],
        line: 197
      },
      "32": {
        loc: {
          start: {
            line: 199,
            column: 16
          },
          end: {
            line: 208,
            column: 17
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 200,
            column: 20
          },
          end: {
            line: 201,
            column: 115
          }
        }, {
          start: {
            line: 202,
            column: 20
          },
          end: {
            line: 203,
            column: 103
          }
        }, {
          start: {
            line: 204,
            column: 20
          },
          end: {
            line: 205,
            column: 104
          }
        }, {
          start: {
            line: 206,
            column: 20
          },
          end: {
            line: 207,
            column: 96
          }
        }],
        line: 199
      },
      "33": {
        loc: {
          start: {
            line: 212,
            column: 23
          },
          end: {
            line: 212,
            column: 137
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 212,
            column: 24
          },
          end: {
            line: 212,
            column: 83
          }
        }, {
          start: {
            line: 212,
            column: 88
          },
          end: {
            line: 212,
            column: 137
          }
        }],
        line: 212
      },
      "34": {
        loc: {
          start: {
            line: 212,
            column: 24
          },
          end: {
            line: 212,
            column: 83
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 212,
            column: 61
          },
          end: {
            line: 212,
            column: 67
          }
        }, {
          start: {
            line: 212,
            column: 70
          },
          end: {
            line: 212,
            column: 83
          }
        }],
        line: 212
      },
      "35": {
        loc: {
          start: {
            line: 212,
            column: 24
          },
          end: {
            line: 212,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 212,
            column: 24
          },
          end: {
            line: 212,
            column: 38
          }
        }, {
          start: {
            line: 212,
            column: 42
          },
          end: {
            line: 212,
            column: 58
          }
        }],
        line: 212
      },
      "36": {
        loc: {
          start: {
            line: 230,
            column: 21
          },
          end: {
            line: 230,
            column: 116
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 230,
            column: 96
          },
          end: {
            line: 230,
            column: 104
          }
        }, {
          start: {
            line: 230,
            column: 107
          },
          end: {
            line: 230,
            column: 116
          }
        }],
        line: 230
      },
      "37": {
        loc: {
          start: {
            line: 230,
            column: 22
          },
          end: {
            line: 230,
            column: 92
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 230,
            column: 67
          },
          end: {
            line: 230,
            column: 73
          }
        }, {
          start: {
            line: 230,
            column: 76
          },
          end: {
            line: 230,
            column: 92
          }
        }],
        line: 230
      },
      "38": {
        loc: {
          start: {
            line: 230,
            column: 22
          },
          end: {
            line: 230,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 230,
            column: 22
          },
          end: {
            line: 230,
            column: 40
          }
        }, {
          start: {
            line: 230,
            column: 44
          },
          end: {
            line: 230,
            column: 64
          }
        }],
        line: 230
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0, 0],
      "32": [0, 0, 0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/dikshantvashistha/PrepBettr/lib/voice/error-recovery.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/dikshantvashistha/PrepBettr/lib/voice/error-recovery.ts"],
      sourcesContent: ["/**\n * Advanced error recovery and network resilience for voice interviews\n */\n\nimport { logger } from '../utils/logger';\n\nexport interface ErrorRecoveryOptions {\n  maxRetries?: number;\n  retryDelay?: number;\n  fallbackEnabled?: boolean;\n  offlineMode?: boolean;\n}\n\nexport interface ServiceHealth {\n  speechToText: 'online' | 'degraded' | 'offline';\n  textToSpeech: 'online' | 'degraded' | 'offline';\n  openAI: 'online' | 'degraded' | 'offline';\n  network: 'online' | 'offline';\n}\n\nexport class VoiceInterviewErrorRecovery {\n  private retryAttempts: Map<string, number> = new Map();\n  private serviceHealth: ServiceHealth = {\n    speechToText: 'online',\n    textToSpeech: 'online',\n    openAI: 'online',\n    network: 'online'\n  };\n  private offlineModeEnabled = false;\n\n  constructor(private options: ErrorRecoveryOptions = {}) {\n    this.options = {\n      maxRetries: 3,\n      retryDelay: 1000,\n      fallbackEnabled: true,\n      offlineMode: false,\n      ...options\n    };\n\n    // Monitor network status\n    this.initNetworkMonitoring();\n  }\n\n  /**\n   * Initialize network connectivity monitoring\n   */\n  private initNetworkMonitoring(): void {\n    if (typeof window !== 'undefined') {\n      // Monitor online/offline events\n      window.addEventListener('online', () => {\n        logger.info('Network connection restored');\n        this.serviceHealth.network = 'online';\n        this.checkServicesHealth();\n      });\n\n      window.addEventListener('offline', () => {\n        logger.warn('Network connection lost - entering offline mode');\n        this.serviceHealth.network = 'offline';\n        this.enableOfflineMode();\n      });\n\n      // Initial network status\n      this.serviceHealth.network = navigator.onLine ? 'online' : 'offline';\n    }\n  }\n\n  /**\n   * Handle API errors with intelligent retry and fallback\n   */\n  async handleApiError<T>(\n    operation: () => Promise<T>,\n    operationType: keyof ServiceHealth,\n    fallback?: () => Promise<T>\n  ): Promise<T> {\n    const operationKey = `${operationType}-${Date.now()}`;\n    let lastError: Error | null = null;\n\n    for (let attempt = 1; attempt <= (this.options.maxRetries || 3); attempt++) {\n      try {\n        // Check if we should attempt the operation\n        if (this.serviceHealth.network === 'offline' && this.offlineModeEnabled) {\n          throw new Error('Service unavailable in offline mode');\n        }\n\n        const result = await operation();\n        \n        // Success - reset retry count and update service health\n        this.retryAttempts.delete(operationKey);\n        this.updateServiceHealth(operationType, 'online');\n        \n        return result;\n\n      } catch (error) {\n        lastError = error instanceof Error ? error : new Error(String(error));\n        \n        logger.error(`${operationType} attempt ${attempt} failed`, {\n          error: lastError.message,\n          attempt,\n          maxRetries: this.options.maxRetries\n        });\n\n        // Update service health based on error type\n        this.updateServiceHealthFromError(operationType, lastError);\n\n        // If this was the last attempt, break out of loop\n        if (attempt === this.options.maxRetries) {\n          break;\n        }\n\n        // Calculate exponential backoff delay\n        const delay = (this.options.retryDelay || 1000) * Math.pow(2, attempt - 1);\n        await this.sleep(delay);\n      }\n    }\n\n    // All retries failed - attempt fallback if available\n    if (fallback && this.options.fallbackEnabled) {\n      try {\n        logger.info(`Attempting fallback for ${operationType}`);\n        return await fallback();\n      } catch (fallbackError) {\n        logger.error(`Fallback also failed for ${operationType}`, fallbackError instanceof Error ? fallbackError : new Error(String(fallbackError)));\n      }\n    }\n\n    // Final failure\n    this.updateServiceHealth(operationType, 'offline');\n    throw lastError || new Error(`${operationType} failed after ${this.options.maxRetries} attempts`);\n  }\n\n  /**\n   * Update service health status\n   */\n  private updateServiceHealth(service: keyof ServiceHealth, status: ServiceHealth[keyof ServiceHealth]): void {\n    // Validate status for network service (only accepts online/offline)\n    let validatedStatus = status;\n    if (service === 'network' && status === 'degraded') {\n      validatedStatus = 'offline'; // Degrade network service to offline\n    }\n    \n    if (this.serviceHealth[service] !== validatedStatus) {\n      (this.serviceHealth as any)[service] = validatedStatus;\n      logger.info(`Service health updated`, { service, status: validatedStatus });\n      \n      // Emit custom event for UI updates\n      if (typeof window !== 'undefined') {\n        window.dispatchEvent(new CustomEvent('serviceHealthChanged', {\n          detail: { service, status: validatedStatus, allServices: this.serviceHealth }\n        }));\n      }\n    }\n  }\n\n  /**\n   * Update service health based on error characteristics\n   */\n  private updateServiceHealthFromError(service: keyof ServiceHealth, error: Error): void {\n    const errorMessage = error.message.toLowerCase();\n    \n    // Network-related errors\n    if (errorMessage.includes('network') || errorMessage.includes('fetch')) {\n      this.updateServiceHealth(service, 'offline');\n    }\n    // Rate limiting or quota errors\n    else if (errorMessage.includes('quota') || errorMessage.includes('rate limit')) {\n      this.updateServiceHealth(service, 'degraded');\n    }\n    // Authentication errors\n    else if (errorMessage.includes('auth') || errorMessage.includes('unauthorized')) {\n      this.updateServiceHealth(service, 'offline');\n    }\n    // Timeout errors\n    else if (errorMessage.includes('timeout')) {\n      this.updateServiceHealth(service, 'degraded');\n    }\n    // Generic service unavailable\n    else if (errorMessage.includes('503') || errorMessage.includes('502') || errorMessage.includes('504')) {\n      this.updateServiceHealth(service, 'degraded');\n    }\n  }\n\n  /**\n   * Enable offline mode with graceful degradation\n   */\n  private enableOfflineMode(): void {\n    this.offlineModeEnabled = true;\n    \n    // Update all service statuses\n    Object.keys(this.serviceHealth).forEach(service => {\n      if (service !== 'network') {\n        this.updateServiceHealth(service as keyof ServiceHealth, 'offline');\n      }\n    });\n\n    logger.info('Offline mode enabled - voice interviews will use fallback mechanisms');\n  }\n\n  /**\n   * Check health of all services after network restoration\n   */\n  private async checkServicesHealth(): Promise<void> {\n    if (this.serviceHealth.network === 'offline') return;\n\n    const healthChecks = [\n      this.checkServiceHealth('speechToText', '/api/voice/stream'),\n      this.checkServiceHealth('textToSpeech', '/api/voice/tts'),\n      this.checkServiceHealth('openAI', '/api/voice/conversation')\n    ];\n\n    await Promise.allSettled(healthChecks);\n  }\n\n  /**\n   * Check individual service health\n   */\n  private async checkServiceHealth(service: keyof ServiceHealth, endpoint: string): Promise<void> {\n    try {\n      const response = await fetch(endpoint, { method: 'GET' });\n      this.updateServiceHealth(service, response.ok ? 'online' : 'degraded');\n    } catch {\n      this.updateServiceHealth(service, 'offline');\n    }\n  }\n\n  /**\n   * Get current service health status\n   */\n  getServiceHealth(): ServiceHealth {\n    return { ...this.serviceHealth };\n  }\n\n  /**\n   * Check if a service is available\n   */\n  isServiceAvailable(service: keyof ServiceHealth): boolean {\n    return this.serviceHealth[service] === 'online' || this.serviceHealth[service] === 'degraded';\n  }\n\n  /**\n   * Get user-friendly error message\n   */\n  getUserFriendlyErrorMessage(service: keyof ServiceHealth, error?: Error): string {\n    if (this.serviceHealth.network === 'offline') {\n      return 'You appear to be offline. Please check your internet connection and try again.';\n    }\n\n    const serviceHealth = this.serviceHealth[service];\n    \n    switch (serviceHealth) {\n      case 'offline':\n        switch (service) {\n          case 'speechToText':\n            return 'Speech recognition is currently unavailable. You can type your responses instead.';\n          case 'textToSpeech':\n            return 'Audio playback is unavailable. You can read the AI responses as text.';\n          case 'openAI':\n            return 'The AI interviewer is temporarily unavailable. Please try again later.';\n          default:\n            return 'This service is currently unavailable. Please try again later.';\n        }\n      \n      case 'degraded':\n        return 'Service is experiencing high demand. Response times may be slower than usual.';\n        \n      default:\n        return error?.message || 'An unexpected error occurred. Please try again.';\n    }\n  }\n\n  /**\n   * Sleep utility for retry delays\n   */\n  private sleep(ms: number): Promise<void> {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n\n  /**\n   * Reset all error counters and health status\n   */\n  reset(): void {\n    this.retryAttempts.clear();\n    this.serviceHealth = {\n      speechToText: 'online',\n      textToSpeech: 'online',\n      openAI: 'online',\n      network: navigator?.onLine ? 'online' : 'offline'\n    };\n    this.offlineModeEnabled = false;\n    \n    logger.info('Error recovery system reset');\n  }\n}\n\n// Export singleton instance\nexport const voiceErrorRecovery = new VoiceInterviewErrorRecovery();\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a015d64ab35106fd28361997c99c7db81e2bc7eb"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_ynnkr5ueo = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_ynnkr5ueo();
cov_ynnkr5ueo().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_ynnkr5ueo().s[1]++;
exports.voiceErrorRecovery = exports.VoiceInterviewErrorRecovery = void 0;
const logger_1 =
/* istanbul ignore next */
(cov_ynnkr5ueo().s[2]++, require("../utils/logger"));
class VoiceInterviewErrorRecovery {
  constructor(options =
  /* istanbul ignore next */
  (cov_ynnkr5ueo().b[0][0]++, {})) {
    /* istanbul ignore next */
    cov_ynnkr5ueo().f[0]++;
    cov_ynnkr5ueo().s[3]++;
    this.options = options;
    /* istanbul ignore next */
    cov_ynnkr5ueo().s[4]++;
    this.retryAttempts = new Map();
    /* istanbul ignore next */
    cov_ynnkr5ueo().s[5]++;
    this.serviceHealth = {
      speechToText: 'online',
      textToSpeech: 'online',
      openAI: 'online',
      network: 'online'
    };
    /* istanbul ignore next */
    cov_ynnkr5ueo().s[6]++;
    this.offlineModeEnabled = false;
    /* istanbul ignore next */
    cov_ynnkr5ueo().s[7]++;
    this.options = Object.assign({
      maxRetries: 3,
      retryDelay: 1000,
      fallbackEnabled: true,
      offlineMode: false
    }, options);
    // Monitor network status
    /* istanbul ignore next */
    cov_ynnkr5ueo().s[8]++;
    this.initNetworkMonitoring();
  }
  /**
   * Initialize network connectivity monitoring
   */
  initNetworkMonitoring() {
    /* istanbul ignore next */
    cov_ynnkr5ueo().f[1]++;
    cov_ynnkr5ueo().s[9]++;
    if (typeof window !== 'undefined') {
      /* istanbul ignore next */
      cov_ynnkr5ueo().b[1][0]++;
      cov_ynnkr5ueo().s[10]++;
      // Monitor online/offline events
      window.addEventListener('online', () => {
        /* istanbul ignore next */
        cov_ynnkr5ueo().f[2]++;
        cov_ynnkr5ueo().s[11]++;
        logger_1.logger.info('Network connection restored');
        /* istanbul ignore next */
        cov_ynnkr5ueo().s[12]++;
        this.serviceHealth.network = 'online';
        /* istanbul ignore next */
        cov_ynnkr5ueo().s[13]++;
        this.checkServicesHealth();
      });
      /* istanbul ignore next */
      cov_ynnkr5ueo().s[14]++;
      window.addEventListener('offline', () => {
        /* istanbul ignore next */
        cov_ynnkr5ueo().f[3]++;
        cov_ynnkr5ueo().s[15]++;
        logger_1.logger.warn('Network connection lost - entering offline mode');
        /* istanbul ignore next */
        cov_ynnkr5ueo().s[16]++;
        this.serviceHealth.network = 'offline';
        /* istanbul ignore next */
        cov_ynnkr5ueo().s[17]++;
        this.enableOfflineMode();
      });
      // Initial network status
      /* istanbul ignore next */
      cov_ynnkr5ueo().s[18]++;
      this.serviceHealth.network = navigator.onLine ?
      /* istanbul ignore next */
      (cov_ynnkr5ueo().b[2][0]++, 'online') :
      /* istanbul ignore next */
      (cov_ynnkr5ueo().b[2][1]++, 'offline');
    } else
    /* istanbul ignore next */
    {
      cov_ynnkr5ueo().b[1][1]++;
    }
  }
  /**
   * Handle API errors with intelligent retry and fallback
   */
  async handleApiError(operation, operationType, fallback) {
    /* istanbul ignore next */
    cov_ynnkr5ueo().f[4]++;
    const operationKey =
    /* istanbul ignore next */
    (cov_ynnkr5ueo().s[19]++, `${operationType}-${Date.now()}`);
    let lastError =
    /* istanbul ignore next */
    (cov_ynnkr5ueo().s[20]++, null);
    /* istanbul ignore next */
    cov_ynnkr5ueo().s[21]++;
    for (let attempt =
    /* istanbul ignore next */
    (cov_ynnkr5ueo().s[22]++, 1); attempt <= (
    /* istanbul ignore next */
    (cov_ynnkr5ueo().b[3][0]++, this.options.maxRetries) ||
    /* istanbul ignore next */
    (cov_ynnkr5ueo().b[3][1]++, 3)); attempt++) {
      /* istanbul ignore next */
      cov_ynnkr5ueo().s[23]++;
      try {
        /* istanbul ignore next */
        cov_ynnkr5ueo().s[24]++;
        // Check if we should attempt the operation
        if (
        /* istanbul ignore next */
        (cov_ynnkr5ueo().b[5][0]++, this.serviceHealth.network === 'offline') &&
        /* istanbul ignore next */
        (cov_ynnkr5ueo().b[5][1]++, this.offlineModeEnabled)) {
          /* istanbul ignore next */
          cov_ynnkr5ueo().b[4][0]++;
          cov_ynnkr5ueo().s[25]++;
          throw new Error('Service unavailable in offline mode');
        } else
        /* istanbul ignore next */
        {
          cov_ynnkr5ueo().b[4][1]++;
        }
        const result =
        /* istanbul ignore next */
        (cov_ynnkr5ueo().s[26]++, await operation());
        // Success - reset retry count and update service health
        /* istanbul ignore next */
        cov_ynnkr5ueo().s[27]++;
        this.retryAttempts.delete(operationKey);
        /* istanbul ignore next */
        cov_ynnkr5ueo().s[28]++;
        this.updateServiceHealth(operationType, 'online');
        /* istanbul ignore next */
        cov_ynnkr5ueo().s[29]++;
        return result;
      } catch (error) {
        /* istanbul ignore next */
        cov_ynnkr5ueo().s[30]++;
        lastError = error instanceof Error ?
        /* istanbul ignore next */
        (cov_ynnkr5ueo().b[6][0]++, error) :
        /* istanbul ignore next */
        (cov_ynnkr5ueo().b[6][1]++, new Error(String(error)));
        /* istanbul ignore next */
        cov_ynnkr5ueo().s[31]++;
        logger_1.logger.error(`${operationType} attempt ${attempt} failed`, {
          error: lastError.message,
          attempt,
          maxRetries: this.options.maxRetries
        });
        // Update service health based on error type
        /* istanbul ignore next */
        cov_ynnkr5ueo().s[32]++;
        this.updateServiceHealthFromError(operationType, lastError);
        // If this was the last attempt, break out of loop
        /* istanbul ignore next */
        cov_ynnkr5ueo().s[33]++;
        if (attempt === this.options.maxRetries) {
          /* istanbul ignore next */
          cov_ynnkr5ueo().b[7][0]++;
          cov_ynnkr5ueo().s[34]++;
          break;
        } else
        /* istanbul ignore next */
        {
          cov_ynnkr5ueo().b[7][1]++;
        }
        // Calculate exponential backoff delay
        const delay =
        /* istanbul ignore next */
        (cov_ynnkr5ueo().s[35]++, (
        /* istanbul ignore next */
        (cov_ynnkr5ueo().b[8][0]++, this.options.retryDelay) ||
        /* istanbul ignore next */
        (cov_ynnkr5ueo().b[8][1]++, 1000)) * Math.pow(2, attempt - 1));
        /* istanbul ignore next */
        cov_ynnkr5ueo().s[36]++;
        await this.sleep(delay);
      }
    }
    // All retries failed - attempt fallback if available
    /* istanbul ignore next */
    cov_ynnkr5ueo().s[37]++;
    if (
    /* istanbul ignore next */
    (cov_ynnkr5ueo().b[10][0]++, fallback) &&
    /* istanbul ignore next */
    (cov_ynnkr5ueo().b[10][1]++, this.options.fallbackEnabled)) {
      /* istanbul ignore next */
      cov_ynnkr5ueo().b[9][0]++;
      cov_ynnkr5ueo().s[38]++;
      try {
        /* istanbul ignore next */
        cov_ynnkr5ueo().s[39]++;
        logger_1.logger.info(`Attempting fallback for ${operationType}`);
        /* istanbul ignore next */
        cov_ynnkr5ueo().s[40]++;
        return await fallback();
      } catch (fallbackError) {
        /* istanbul ignore next */
        cov_ynnkr5ueo().s[41]++;
        logger_1.logger.error(`Fallback also failed for ${operationType}`, fallbackError instanceof Error ?
        /* istanbul ignore next */
        (cov_ynnkr5ueo().b[11][0]++, fallbackError) :
        /* istanbul ignore next */
        (cov_ynnkr5ueo().b[11][1]++, new Error(String(fallbackError))));
      }
    } else
    /* istanbul ignore next */
    {
      cov_ynnkr5ueo().b[9][1]++;
    }
    // Final failure
    cov_ynnkr5ueo().s[42]++;
    this.updateServiceHealth(operationType, 'offline');
    /* istanbul ignore next */
    cov_ynnkr5ueo().s[43]++;
    throw /* istanbul ignore next */(cov_ynnkr5ueo().b[12][0]++, lastError) ||
    /* istanbul ignore next */
    (cov_ynnkr5ueo().b[12][1]++, new Error(`${operationType} failed after ${this.options.maxRetries} attempts`));
  }
  /**
   * Update service health status
   */
  updateServiceHealth(service, status) {
    /* istanbul ignore next */
    cov_ynnkr5ueo().f[5]++;
    // Validate status for network service (only accepts online/offline)
    let validatedStatus =
    /* istanbul ignore next */
    (cov_ynnkr5ueo().s[44]++, status);
    /* istanbul ignore next */
    cov_ynnkr5ueo().s[45]++;
    if (
    /* istanbul ignore next */
    (cov_ynnkr5ueo().b[14][0]++, service === 'network') &&
    /* istanbul ignore next */
    (cov_ynnkr5ueo().b[14][1]++, status === 'degraded')) {
      /* istanbul ignore next */
      cov_ynnkr5ueo().b[13][0]++;
      cov_ynnkr5ueo().s[46]++;
      validatedStatus = 'offline'; // Degrade network service to offline
    } else
    /* istanbul ignore next */
    {
      cov_ynnkr5ueo().b[13][1]++;
    }
    cov_ynnkr5ueo().s[47]++;
    if (this.serviceHealth[service] !== validatedStatus) {
      /* istanbul ignore next */
      cov_ynnkr5ueo().b[15][0]++;
      cov_ynnkr5ueo().s[48]++;
      this.serviceHealth[service] = validatedStatus;
      /* istanbul ignore next */
      cov_ynnkr5ueo().s[49]++;
      logger_1.logger.info(`Service health updated`, {
        service,
        status: validatedStatus
      });
      // Emit custom event for UI updates
      /* istanbul ignore next */
      cov_ynnkr5ueo().s[50]++;
      if (typeof window !== 'undefined') {
        /* istanbul ignore next */
        cov_ynnkr5ueo().b[16][0]++;
        cov_ynnkr5ueo().s[51]++;
        window.dispatchEvent(new CustomEvent('serviceHealthChanged', {
          detail: {
            service,
            status: validatedStatus,
            allServices: this.serviceHealth
          }
        }));
      } else
      /* istanbul ignore next */
      {
        cov_ynnkr5ueo().b[16][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_ynnkr5ueo().b[15][1]++;
    }
  }
  /**
   * Update service health based on error characteristics
   */
  updateServiceHealthFromError(service, error) {
    /* istanbul ignore next */
    cov_ynnkr5ueo().f[6]++;
    const errorMessage =
    /* istanbul ignore next */
    (cov_ynnkr5ueo().s[52]++, error.message.toLowerCase());
    // Network-related errors
    /* istanbul ignore next */
    cov_ynnkr5ueo().s[53]++;
    if (
    /* istanbul ignore next */
    (cov_ynnkr5ueo().b[18][0]++, errorMessage.includes('network')) ||
    /* istanbul ignore next */
    (cov_ynnkr5ueo().b[18][1]++, errorMessage.includes('fetch'))) {
      /* istanbul ignore next */
      cov_ynnkr5ueo().b[17][0]++;
      cov_ynnkr5ueo().s[54]++;
      this.updateServiceHealth(service, 'offline');
    }
    // Rate limiting or quota errors
    else {
      /* istanbul ignore next */
      cov_ynnkr5ueo().b[17][1]++;
      cov_ynnkr5ueo().s[55]++;
      if (
      /* istanbul ignore next */
      (cov_ynnkr5ueo().b[20][0]++, errorMessage.includes('quota')) ||
      /* istanbul ignore next */
      (cov_ynnkr5ueo().b[20][1]++, errorMessage.includes('rate limit'))) {
        /* istanbul ignore next */
        cov_ynnkr5ueo().b[19][0]++;
        cov_ynnkr5ueo().s[56]++;
        this.updateServiceHealth(service, 'degraded');
      }
      // Authentication errors
      else {
        /* istanbul ignore next */
        cov_ynnkr5ueo().b[19][1]++;
        cov_ynnkr5ueo().s[57]++;
        if (
        /* istanbul ignore next */
        (cov_ynnkr5ueo().b[22][0]++, errorMessage.includes('auth')) ||
        /* istanbul ignore next */
        (cov_ynnkr5ueo().b[22][1]++, errorMessage.includes('unauthorized'))) {
          /* istanbul ignore next */
          cov_ynnkr5ueo().b[21][0]++;
          cov_ynnkr5ueo().s[58]++;
          this.updateServiceHealth(service, 'offline');
        }
        // Timeout errors
        else {
          /* istanbul ignore next */
          cov_ynnkr5ueo().b[21][1]++;
          cov_ynnkr5ueo().s[59]++;
          if (errorMessage.includes('timeout')) {
            /* istanbul ignore next */
            cov_ynnkr5ueo().b[23][0]++;
            cov_ynnkr5ueo().s[60]++;
            this.updateServiceHealth(service, 'degraded');
          }
          // Generic service unavailable
          else {
            /* istanbul ignore next */
            cov_ynnkr5ueo().b[23][1]++;
            cov_ynnkr5ueo().s[61]++;
            if (
            /* istanbul ignore next */
            (cov_ynnkr5ueo().b[25][0]++, errorMessage.includes('503')) ||
            /* istanbul ignore next */
            (cov_ynnkr5ueo().b[25][1]++, errorMessage.includes('502')) ||
            /* istanbul ignore next */
            (cov_ynnkr5ueo().b[25][2]++, errorMessage.includes('504'))) {
              /* istanbul ignore next */
              cov_ynnkr5ueo().b[24][0]++;
              cov_ynnkr5ueo().s[62]++;
              this.updateServiceHealth(service, 'degraded');
            } else
            /* istanbul ignore next */
            {
              cov_ynnkr5ueo().b[24][1]++;
            }
          }
        }
      }
    }
  }
  /**
   * Enable offline mode with graceful degradation
   */
  enableOfflineMode() {
    /* istanbul ignore next */
    cov_ynnkr5ueo().f[7]++;
    cov_ynnkr5ueo().s[63]++;
    this.offlineModeEnabled = true;
    // Update all service statuses
    /* istanbul ignore next */
    cov_ynnkr5ueo().s[64]++;
    Object.keys(this.serviceHealth).forEach(service => {
      /* istanbul ignore next */
      cov_ynnkr5ueo().f[8]++;
      cov_ynnkr5ueo().s[65]++;
      if (service !== 'network') {
        /* istanbul ignore next */
        cov_ynnkr5ueo().b[26][0]++;
        cov_ynnkr5ueo().s[66]++;
        this.updateServiceHealth(service, 'offline');
      } else
      /* istanbul ignore next */
      {
        cov_ynnkr5ueo().b[26][1]++;
      }
    });
    /* istanbul ignore next */
    cov_ynnkr5ueo().s[67]++;
    logger_1.logger.info('Offline mode enabled - voice interviews will use fallback mechanisms');
  }
  /**
   * Check health of all services after network restoration
   */
  async checkServicesHealth() {
    /* istanbul ignore next */
    cov_ynnkr5ueo().f[9]++;
    cov_ynnkr5ueo().s[68]++;
    if (this.serviceHealth.network === 'offline') {
      /* istanbul ignore next */
      cov_ynnkr5ueo().b[27][0]++;
      cov_ynnkr5ueo().s[69]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_ynnkr5ueo().b[27][1]++;
    }
    const healthChecks =
    /* istanbul ignore next */
    (cov_ynnkr5ueo().s[70]++, [this.checkServiceHealth('speechToText', '/api/voice/stream'), this.checkServiceHealth('textToSpeech', '/api/voice/tts'), this.checkServiceHealth('openAI', '/api/voice/conversation')]);
    /* istanbul ignore next */
    cov_ynnkr5ueo().s[71]++;
    await Promise.allSettled(healthChecks);
  }
  /**
   * Check individual service health
   */
  async checkServiceHealth(service, endpoint) {
    /* istanbul ignore next */
    cov_ynnkr5ueo().f[10]++;
    cov_ynnkr5ueo().s[72]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_ynnkr5ueo().s[73]++, await fetch(endpoint, {
        method: 'GET'
      }));
      /* istanbul ignore next */
      cov_ynnkr5ueo().s[74]++;
      this.updateServiceHealth(service, response.ok ?
      /* istanbul ignore next */
      (cov_ynnkr5ueo().b[28][0]++, 'online') :
      /* istanbul ignore next */
      (cov_ynnkr5ueo().b[28][1]++, 'degraded'));
    } catch (_a) {
      /* istanbul ignore next */
      cov_ynnkr5ueo().s[75]++;
      this.updateServiceHealth(service, 'offline');
    }
  }
  /**
   * Get current service health status
   */
  getServiceHealth() {
    /* istanbul ignore next */
    cov_ynnkr5ueo().f[11]++;
    cov_ynnkr5ueo().s[76]++;
    return Object.assign({}, this.serviceHealth);
  }
  /**
   * Check if a service is available
   */
  isServiceAvailable(service) {
    /* istanbul ignore next */
    cov_ynnkr5ueo().f[12]++;
    cov_ynnkr5ueo().s[77]++;
    return /* istanbul ignore next */(cov_ynnkr5ueo().b[29][0]++, this.serviceHealth[service] === 'online') ||
    /* istanbul ignore next */
    (cov_ynnkr5ueo().b[29][1]++, this.serviceHealth[service] === 'degraded');
  }
  /**
   * Get user-friendly error message
   */
  getUserFriendlyErrorMessage(service, error) {
    /* istanbul ignore next */
    cov_ynnkr5ueo().f[13]++;
    cov_ynnkr5ueo().s[78]++;
    if (this.serviceHealth.network === 'offline') {
      /* istanbul ignore next */
      cov_ynnkr5ueo().b[30][0]++;
      cov_ynnkr5ueo().s[79]++;
      return 'You appear to be offline. Please check your internet connection and try again.';
    } else
    /* istanbul ignore next */
    {
      cov_ynnkr5ueo().b[30][1]++;
    }
    const serviceHealth =
    /* istanbul ignore next */
    (cov_ynnkr5ueo().s[80]++, this.serviceHealth[service]);
    /* istanbul ignore next */
    cov_ynnkr5ueo().s[81]++;
    switch (serviceHealth) {
      case 'offline':
        /* istanbul ignore next */
        cov_ynnkr5ueo().b[31][0]++;
        cov_ynnkr5ueo().s[82]++;
        switch (service) {
          case 'speechToText':
            /* istanbul ignore next */
            cov_ynnkr5ueo().b[32][0]++;
            cov_ynnkr5ueo().s[83]++;
            return 'Speech recognition is currently unavailable. You can type your responses instead.';
          case 'textToSpeech':
            /* istanbul ignore next */
            cov_ynnkr5ueo().b[32][1]++;
            cov_ynnkr5ueo().s[84]++;
            return 'Audio playback is unavailable. You can read the AI responses as text.';
          case 'openAI':
            /* istanbul ignore next */
            cov_ynnkr5ueo().b[32][2]++;
            cov_ynnkr5ueo().s[85]++;
            return 'The AI interviewer is temporarily unavailable. Please try again later.';
          default:
            /* istanbul ignore next */
            cov_ynnkr5ueo().b[32][3]++;
            cov_ynnkr5ueo().s[86]++;
            return 'This service is currently unavailable. Please try again later.';
        }
      case 'degraded':
        /* istanbul ignore next */
        cov_ynnkr5ueo().b[31][1]++;
        cov_ynnkr5ueo().s[87]++;
        return 'Service is experiencing high demand. Response times may be slower than usual.';
      default:
        /* istanbul ignore next */
        cov_ynnkr5ueo().b[31][2]++;
        cov_ynnkr5ueo().s[88]++;
        return /* istanbul ignore next */(cov_ynnkr5ueo().b[33][0]++,
        /* istanbul ignore next */
        (cov_ynnkr5ueo().b[35][0]++, error === null) ||
        /* istanbul ignore next */
        (cov_ynnkr5ueo().b[35][1]++, error === void 0) ?
        /* istanbul ignore next */
        (cov_ynnkr5ueo().b[34][0]++, void 0) :
        /* istanbul ignore next */
        (cov_ynnkr5ueo().b[34][1]++, error.message)) ||
        /* istanbul ignore next */
        (cov_ynnkr5ueo().b[33][1]++, 'An unexpected error occurred. Please try again.');
    }
  }
  /**
   * Sleep utility for retry delays
   */
  sleep(ms) {
    /* istanbul ignore next */
    cov_ynnkr5ueo().f[14]++;
    cov_ynnkr5ueo().s[89]++;
    return new Promise(resolve => {
      /* istanbul ignore next */
      cov_ynnkr5ueo().f[15]++;
      cov_ynnkr5ueo().s[90]++;
      return setTimeout(resolve, ms);
    });
  }
  /**
   * Reset all error counters and health status
   */
  reset() {
    /* istanbul ignore next */
    cov_ynnkr5ueo().f[16]++;
    cov_ynnkr5ueo().s[91]++;
    this.retryAttempts.clear();
    /* istanbul ignore next */
    cov_ynnkr5ueo().s[92]++;
    this.serviceHealth = {
      speechToText: 'online',
      textToSpeech: 'online',
      openAI: 'online',
      network: (
      /* istanbul ignore next */
      (cov_ynnkr5ueo().b[38][0]++, navigator === null) ||
      /* istanbul ignore next */
      (cov_ynnkr5ueo().b[38][1]++, navigator === void 0) ?
      /* istanbul ignore next */
      (cov_ynnkr5ueo().b[37][0]++, void 0) :
      /* istanbul ignore next */
      (cov_ynnkr5ueo().b[37][1]++, navigator.onLine)) ?
      /* istanbul ignore next */
      (cov_ynnkr5ueo().b[36][0]++, 'online') :
      /* istanbul ignore next */
      (cov_ynnkr5ueo().b[36][1]++, 'offline')
    };
    /* istanbul ignore next */
    cov_ynnkr5ueo().s[93]++;
    this.offlineModeEnabled = false;
    /* istanbul ignore next */
    cov_ynnkr5ueo().s[94]++;
    logger_1.logger.info('Error recovery system reset');
  }
}
/* istanbul ignore next */
cov_ynnkr5ueo().s[95]++;
exports.VoiceInterviewErrorRecovery = VoiceInterviewErrorRecovery;
// Export singleton instance
/* istanbul ignore next */
cov_ynnkr5ueo().s[96]++;
exports.voiceErrorRecovery = new VoiceInterviewErrorRecovery();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,