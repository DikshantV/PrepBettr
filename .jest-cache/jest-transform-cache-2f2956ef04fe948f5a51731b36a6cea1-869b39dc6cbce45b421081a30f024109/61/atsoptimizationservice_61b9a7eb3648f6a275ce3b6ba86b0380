bf3e754f7ae08e4c97cefa007f000050
"use strict";

/**
 * ATS Optimization Service
 *
 * Provides comprehensive ATS (Applicant Tracking System) analysis including:
 * - Keyword density analysis and optimization
 * - Skills normalization using industry taxonomies (O*NET, ESCO, SFIA)
 * - Job matching using semantic similarity with embeddings
 * - ATS scoring and recommendations
 */
/* istanbul ignore next */
function cov_147c59ekq0() {
  var path = "/Users/dikshantvashistha/PrepBettr/lib/services/ats-optimization-service.ts";
  var hash = "f9df41a9c964d8c40cd3c6d292dc308a10e98090";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dikshantvashistha/PrepBettr/lib/services/ats-optimization-service.ts",
    statementMap: {
      "0": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 62
        }
      },
      "1": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 40
        }
      },
      "2": {
        start: {
          line: 13,
          column: 17
        },
        end: {
          line: 13,
          column: 34
        }
      },
      "3": {
        start: {
          line: 14,
          column: 28
        },
        end: {
          line: 14,
          column: 87
        }
      },
      "4": {
        start: {
          line: 15,
          column: 29
        },
        end: {
          line: 15,
          column: 75
        }
      },
      "5": {
        start: {
          line: 17,
          column: 28
        },
        end: {
          line: 39,
          column: 1
        }
      },
      "6": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 27
        }
      },
      "7": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 32
        }
      },
      "8": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 65,
          column: 9
        }
      },
      "9": {
        start: {
          line: 48,
          column: 36
        },
        end: {
          line: 48,
          column: 83
        }
      },
      "10": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 49,
          column: 41
        }
      },
      "11": {
        start: {
          line: 50,
          column: 12
        },
        end: {
          line: 50,
          column: 42
        }
      },
      "12": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 51,
          column: 71
        }
      },
      "13": {
        start: {
          line: 54,
          column: 12
        },
        end: {
          line: 54,
          column: 91
        }
      },
      "14": {
        start: {
          line: 56,
          column: 12
        },
        end: {
          line: 64,
          column: 13
        }
      },
      "15": {
        start: {
          line: 57,
          column: 16
        },
        end: {
          line: 59,
          column: 19
        }
      },
      "16": {
        start: {
          line: 60,
          column: 16
        },
        end: {
          line: 60,
          column: 74
        }
      },
      "17": {
        start: {
          line: 63,
          column: 16
        },
        end: {
          line: 63,
          column: 80
        }
      },
      "18": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 73,
          column: 9
        }
      },
      "19": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 72,
          column: 42
        }
      },
      "20": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 110,
          column: 9
        }
      },
      "21": {
        start: {
          line: 75,
          column: 27
        },
        end: {
          line: 79,
          column: 14
        }
      },
      "22": {
        start: {
          line: 80,
          column: 31
        },
        end: {
          line: 94,
          column: 14
        }
      },
      "23": {
        start: {
          line: 95,
          column: 29
        },
        end: {
          line: 95,
          column: 66
        }
      },
      "24": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 98,
          column: 13
        }
      },
      "25": {
        start: {
          line: 97,
          column: 16
        },
        end: {
          line: 97,
          column: 63
        }
      },
      "26": {
        start: {
          line: 100,
          column: 35
        },
        end: {
          line: 100,
          column: 55
        }
      },
      "27": {
        start: {
          line: 102,
          column: 12
        },
        end: {
          line: 104,
          column: 13
        }
      },
      "28": {
        start: {
          line: 103,
          column: 16
        },
        end: {
          line: 103,
          column: 161
        }
      },
      "29": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 105,
          column: 34
        }
      },
      "30": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 108,
          column: 57
        }
      },
      "31": {
        start: {
          line: 109,
          column: 12
        },
        end: {
          line: 109,
          column: 112
        }
      },
      "32": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 118,
          column: 9
        }
      },
      "33": {
        start: {
          line: 117,
          column: 12
        },
        end: {
          line: 117,
          column: 42
        }
      },
      "34": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 154,
          column: 9
        }
      },
      "35": {
        start: {
          line: 120,
          column: 27
        },
        end: {
          line: 124,
          column: 14
        }
      },
      "36": {
        start: {
          line: 125,
          column: 31
        },
        end: {
          line: 139,
          column: 14
        }
      },
      "37": {
        start: {
          line: 140,
          column: 29
        },
        end: {
          line: 140,
          column: 66
        }
      },
      "38": {
        start: {
          line: 141,
          column: 12
        },
        end: {
          line: 143,
          column: 13
        }
      },
      "39": {
        start: {
          line: 142,
          column: 16
        },
        end: {
          line: 142,
          column: 63
        }
      },
      "40": {
        start: {
          line: 144,
          column: 40
        },
        end: {
          line: 144,
          column: 60
        }
      },
      "41": {
        start: {
          line: 146,
          column: 12
        },
        end: {
          line: 148,
          column: 13
        }
      },
      "42": {
        start: {
          line: 147,
          column: 16
        },
        end: {
          line: 147,
          column: 155
        }
      },
      "43": {
        start: {
          line: 149,
          column: 12
        },
        end: {
          line: 149,
          column: 39
        }
      },
      "44": {
        start: {
          line: 152,
          column: 12
        },
        end: {
          line: 152,
          column: 65
        }
      },
      "45": {
        start: {
          line: 153,
          column: 12
        },
        end: {
          line: 153,
          column: 120
        }
      },
      "46": {
        start: {
          line: 160,
          column: 8
        },
        end: {
          line: 162,
          column: 9
        }
      },
      "47": {
        start: {
          line: 161,
          column: 12
        },
        end: {
          line: 161,
          column: 42
        }
      },
      "48": {
        start: {
          line: 163,
          column: 8
        },
        end: {
          line: 203,
          column: 9
        }
      },
      "49": {
        start: {
          line: 165,
          column: 36
        },
        end: {
          line: 165,
          column: 77
        }
      },
      "50": {
        start: {
          line: 166,
          column: 33
        },
        end: {
          line: 166,
          column: 86
        }
      },
      "51": {
        start: {
          line: 167,
          column: 39
        },
        end: {
          line: 167,
          column: 100
        }
      },
      "52": {
        start: {
          line: 168,
          column: 27
        },
        end: {
          line: 173,
          column: 14
        }
      },
      "53": {
        start: {
          line: 174,
          column: 31
        },
        end: {
          line: 188,
          column: 14
        }
      },
      "54": {
        start: {
          line: 189,
          column: 29
        },
        end: {
          line: 189,
          column: 66
        }
      },
      "55": {
        start: {
          line: 190,
          column: 12
        },
        end: {
          line: 192,
          column: 13
        }
      },
      "56": {
        start: {
          line: 191,
          column: 16
        },
        end: {
          line: 191,
          column: 63
        }
      },
      "57": {
        start: {
          line: 193,
          column: 32
        },
        end: {
          line: 193,
          column: 52
        }
      },
      "58": {
        start: {
          line: 195,
          column: 12
        },
        end: {
          line: 195,
          column: 129
        }
      },
      "59": {
        start: {
          line: 197,
          column: 12
        },
        end: {
          line: 197,
          column: 104
        }
      },
      "60": {
        start: {
          line: 198,
          column: 12
        },
        end: {
          line: 198,
          column: 31
        }
      },
      "61": {
        start: {
          line: 201,
          column: 12
        },
        end: {
          line: 201,
          column: 66
        }
      },
      "62": {
        start: {
          line: 202,
          column: 12
        },
        end: {
          line: 202,
          column: 121
        }
      },
      "63": {
        start: {
          line: 209,
          column: 28
        },
        end: {
          line: 209,
          column: 65
        }
      },
      "64": {
        start: {
          line: 210,
          column: 27
        },
        end: {
          line: 210,
          column: 45
        }
      },
      "65": {
        start: {
          line: 211,
          column: 24
        },
        end: {
          line: 211,
          column: 26
        }
      },
      "66": {
        start: {
          line: 212,
          column: 24
        },
        end: {
          line: 212,
          column: 26
        }
      },
      "67": {
        start: {
          line: 213,
          column: 8
        },
        end: {
          line: 235,
          column: 9
        }
      },
      "68": {
        start: {
          line: 214,
          column: 33
        },
        end: {
          line: 214,
          column: 54
        }
      },
      "69": {
        start: {
          line: 215,
          column: 33
        },
        end: {
          line: 215,
          column: 58
        }
      },
      "70": {
        start: {
          line: 216,
          column: 12
        },
        end: {
          line: 234,
          column: 13
        }
      },
      "71": {
        start: {
          line: 218,
          column: 16
        },
        end: {
          line: 223,
          column: 17
        }
      },
      "72": {
        start: {
          line: 219,
          column: 20
        },
        end: {
          line: 219,
          column: 42
        }
      },
      "73": {
        start: {
          line: 222,
          column: 20
        },
        end: {
          line: 222,
          column: 42
        }
      },
      "74": {
        start: {
          line: 227,
          column: 37
        },
        end: {
          line: 227,
          column: 79
        }
      },
      "75": {
        start: {
          line: 228,
          column: 16
        },
        end: {
          line: 233,
          column: 17
        }
      },
      "76": {
        start: {
          line: 229,
          column: 20
        },
        end: {
          line: 229,
          column: 42
        }
      },
      "77": {
        start: {
          line: 232,
          column: 20
        },
        end: {
          line: 232,
          column: 42
        }
      },
      "78": {
        start: {
          line: 236,
          column: 24
        },
        end: {
          line: 236,
          column: 51
        }
      },
      "79": {
        start: {
          line: 237,
          column: 8
        },
        end: {
          line: 237,
          column: 45
        }
      },
      "80": {
        start: {
          line: 245,
          column: 27
        },
        end: {
          line: 250,
          column: 19
        }
      },
      "81": {
        start: {
          line: 247,
          column: 89
        },
        end: {
          line: 247,
          column: 101
        }
      },
      "82": {
        start: {
          line: 248,
          column: 109
        },
        end: {
          line: 248,
          column: 338
        }
      },
      "83": {
        start: {
          line: 249,
          column: 94
        },
        end: {
          line: 249,
          column: 141
        }
      },
      "84": {
        start: {
          line: 251,
          column: 8
        },
        end: {
          line: 251,
          column: 55
        }
      },
      "85": {
        start: {
          line: 257,
          column: 8
        },
        end: {
          line: 257,
          column: 59
        }
      },
      "86": {
        start: {
          line: 263,
          column: 8
        },
        end: {
          line: 282,
          column: 9
        }
      },
      "87": {
        start: {
          line: 265,
          column: 12
        },
        end: {
          line: 276,
          column: 13
        }
      },
      "88": {
        start: {
          line: 266,
          column: 33
        },
        end: {
          line: 269,
          column: 18
        }
      },
      "89": {
        start: {
          line: 270,
          column: 16
        },
        end: {
          line: 270,
          column: 50
        }
      },
      "90": {
        start: {
          line: 274,
          column: 16
        },
        end: {
          line: 274,
          column: 88
        }
      },
      "91": {
        start: {
          line: 275,
          column: 16
        },
        end: {
          line: 275,
          column: 53
        }
      },
      "92": {
        start: {
          line: 279,
          column: 12
        },
        end: {
          line: 279,
          column: 61
        }
      },
      "93": {
        start: {
          line: 281,
          column: 12
        },
        end: {
          line: 281,
          column: 49
        }
      },
      "94": {
        start: {
          line: 289,
          column: 22
        },
        end: {
          line: 289,
          column: 53
        }
      },
      "95": {
        start: {
          line: 290,
          column: 23
        },
        end: {
          line: 290,
          column: 46
        }
      },
      "96": {
        start: {
          line: 292,
          column: 8
        },
        end: {
          line: 296,
          column: 11
        }
      },
      "97": {
        start: {
          line: 293,
          column: 25
        },
        end: {
          line: 293,
          column: 46
        }
      },
      "98": {
        start: {
          line: 294,
          column: 32
        },
        end: {
          line: 294,
          column: 53
        }
      },
      "99": {
        start: {
          line: 295,
          column: 12
        },
        end: {
          line: 295,
          column: 37
        }
      },
      "100": {
        start: {
          line: 298,
          column: 26
        },
        end: {
          line: 298,
          column: 84
        }
      },
      "101": {
        start: {
          line: 298,
          column: 64
        },
        end: {
          line: 298,
          column: 79
        }
      },
      "102": {
        start: {
          line: 299,
          column: 8
        },
        end: {
          line: 303,
          column: 9
        }
      },
      "103": {
        start: {
          line: 300,
          column: 12
        },
        end: {
          line: 302,
          column: 13
        }
      },
      "104": {
        start: {
          line: 300,
          column: 25
        },
        end: {
          line: 300,
          column: 26
        }
      },
      "105": {
        start: {
          line: 301,
          column: 16
        },
        end: {
          line: 301,
          column: 50
        }
      },
      "106": {
        start: {
          line: 304,
          column: 8
        },
        end: {
          line: 304,
          column: 22
        }
      },
      "107": {
        start: {
          line: 310,
          column: 19
        },
        end: {
          line: 310,
          column: 20
        }
      },
      "108": {
        start: {
          line: 311,
          column: 8
        },
        end: {
          line: 315,
          column: 9
        }
      },
      "109": {
        start: {
          line: 311,
          column: 21
        },
        end: {
          line: 311,
          column: 22
        }
      },
      "110": {
        start: {
          line: 312,
          column: 25
        },
        end: {
          line: 312,
          column: 42
        }
      },
      "111": {
        start: {
          line: 313,
          column: 12
        },
        end: {
          line: 313,
          column: 47
        }
      },
      "112": {
        start: {
          line: 314,
          column: 12
        },
        end: {
          line: 314,
          column: 31
        }
      },
      "113": {
        start: {
          line: 316,
          column: 8
        },
        end: {
          line: 316,
          column: 20
        }
      },
      "114": {
        start: {
          line: 322,
          column: 8
        },
        end: {
          line: 325,
          column: 9
        }
      },
      "115": {
        start: {
          line: 323,
          column: 12
        },
        end: {
          line: 323,
          column: 56
        }
      },
      "116": {
        start: {
          line: 324,
          column: 12
        },
        end: {
          line: 324,
          column: 21
        }
      },
      "117": {
        start: {
          line: 326,
          column: 25
        },
        end: {
          line: 326,
          column: 26
        }
      },
      "118": {
        start: {
          line: 327,
          column: 20
        },
        end: {
          line: 327,
          column: 21
        }
      },
      "119": {
        start: {
          line: 328,
          column: 20
        },
        end: {
          line: 328,
          column: 21
        }
      },
      "120": {
        start: {
          line: 329,
          column: 8
        },
        end: {
          line: 333,
          column: 9
        }
      },
      "121": {
        start: {
          line: 329,
          column: 21
        },
        end: {
          line: 329,
          column: 22
        }
      },
      "122": {
        start: {
          line: 330,
          column: 12
        },
        end: {
          line: 330,
          column: 50
        }
      },
      "123": {
        start: {
          line: 331,
          column: 12
        },
        end: {
          line: 331,
          column: 45
        }
      },
      "124": {
        start: {
          line: 332,
          column: 12
        },
        end: {
          line: 332,
          column: 45
        }
      },
      "125": {
        start: {
          line: 334,
          column: 26
        },
        end: {
          line: 334,
          column: 61
        }
      },
      "126": {
        start: {
          line: 335,
          column: 8
        },
        end: {
          line: 337,
          column: 9
        }
      },
      "127": {
        start: {
          line: 336,
          column: 12
        },
        end: {
          line: 336,
          column: 21
        }
      },
      "128": {
        start: {
          line: 338,
          column: 8
        },
        end: {
          line: 338,
          column: 38
        }
      },
      "129": {
        start: {
          line: 345,
          column: 28
        },
        end: {
          line: 345,
          column: 72
        }
      },
      "130": {
        start: {
          line: 347,
          column: 27
        },
        end: {
          line: 347,
          column: 53
        }
      },
      "131": {
        start: {
          line: 348,
          column: 31
        },
        end: {
          line: 348,
          column: 71
        }
      },
      "132": {
        start: {
          line: 350,
          column: 32
        },
        end: {
          line: 351,
          column: 73
        }
      },
      "133": {
        start: {
          line: 350,
          column: 62
        },
        end: {
          line: 351,
          column: 72
        }
      },
      "134": {
        start: {
          line: 350,
          column: 100
        },
        end: {
          line: 351,
          column: 71
        }
      },
      "135": {
        start: {
          line: 353,
          column: 34
        },
        end: {
          line: 354,
          column: 298
        }
      },
      "136": {
        start: {
          line: 353,
          column: 68
        },
        end: {
          line: 354,
          column: 297
        }
      },
      "137": {
        start: {
          line: 355,
          column: 8
        },
        end: {
          line: 355,
          column: 46
        }
      },
      "138": {
        start: {
          line: 362,
          column: 22
        },
        end: {
          line: 366,
          column: 44
        }
      },
      "139": {
        start: {
          line: 366,
          column: 28
        },
        end: {
          line: 366,
          column: 43
        }
      },
      "140": {
        start: {
          line: 368,
          column: 26
        },
        end: {
          line: 368,
          column: 28
        }
      },
      "141": {
        start: {
          line: 369,
          column: 8
        },
        end: {
          line: 371,
          column: 11
        }
      },
      "142": {
        start: {
          line: 370,
          column: 12
        },
        end: {
          line: 370,
          column: 57
        }
      },
      "143": {
        start: {
          line: 373,
          column: 24
        },
        end: {
          line: 373,
          column: 26
        }
      },
      "144": {
        start: {
          line: 374,
          column: 8
        },
        end: {
          line: 381,
          column: 9
        }
      },
      "145": {
        start: {
          line: 374,
          column: 21
        },
        end: {
          line: 374,
          column: 22
        }
      },
      "146": {
        start: {
          line: 375,
          column: 34
        },
        end: {
          line: 375,
          column: 63
        }
      },
      "147": {
        start: {
          line: 376,
          column: 12
        },
        end: {
          line: 376,
          column: 40
        }
      },
      "148": {
        start: {
          line: 377,
          column: 12
        },
        end: {
          line: 380,
          column: 13
        }
      },
      "149": {
        start: {
          line: 378,
          column: 40
        },
        end: {
          line: 378,
          column: 85
        }
      },
      "150": {
        start: {
          line: 379,
          column: 16
        },
        end: {
          line: 379,
          column: 46
        }
      },
      "151": {
        start: {
          line: 383,
          column: 28
        },
        end: {
          line: 383,
          column: 67
        }
      },
      "152": {
        start: {
          line: 385,
          column: 31
        },
        end: {
          line: 387,
          column: 26
        }
      },
      "153": {
        start: {
          line: 386,
          column: 28
        },
        end: {
          line: 386,
          column: 47
        }
      },
      "154": {
        start: {
          line: 388,
          column: 8
        },
        end: {
          line: 388,
          column: 30
        }
      },
      "155": {
        start: {
          line: 394,
          column: 29
        },
        end: {
          line: 394,
          column: 64
        }
      },
      "156": {
        start: {
          line: 395,
          column: 8
        },
        end: {
          line: 397,
          column: 9
        }
      },
      "157": {
        start: {
          line: 396,
          column: 12
        },
        end: {
          line: 396,
          column: 35
        }
      },
      "158": {
        start: {
          line: 399,
          column: 33
        },
        end: {
          line: 399,
          column: 35
        }
      },
      "159": {
        start: {
          line: 400,
          column: 27
        },
        end: {
          line: 400,
          column: 67
        }
      },
      "160": {
        start: {
          line: 402,
          column: 8
        },
        end: {
          line: 413,
          column: 11
        }
      },
      "161": {
        start: {
          line: 403,
          column: 12
        },
        end: {
          line: 412,
          column: 15
        }
      },
      "162": {
        start: {
          line: 404,
          column: 34
        },
        end: {
          line: 404,
          column: 76
        }
      },
      "163": {
        start: {
          line: 405,
          column: 16
        },
        end: {
          line: 411,
          column: 19
        }
      },
      "164": {
        start: {
          line: 414,
          column: 8
        },
        end: {
          line: 414,
          column: 159
        }
      },
      "165": {
        start: {
          line: 420,
          column: 29
        },
        end: {
          line: 420,
          column: 64
        }
      },
      "166": {
        start: {
          line: 421,
          column: 8
        },
        end: {
          line: 423,
          column: 9
        }
      },
      "167": {
        start: {
          line: 422,
          column: 12
        },
        end: {
          line: 422,
          column: 37
        }
      },
      "168": {
        start: {
          line: 424,
          column: 34
        },
        end: {
          line: 424,
          column: 68
        }
      },
      "169": {
        start: {
          line: 425,
          column: 28
        },
        end: {
          line: 425,
          column: 60
        }
      },
      "170": {
        start: {
          line: 425,
          column: 44
        },
        end: {
          line: 425,
          column: 59
        }
      },
      "171": {
        start: {
          line: 426,
          column: 28
        },
        end: {
          line: 427,
          column: 57
        }
      },
      "172": {
        start: {
          line: 426,
          column: 70
        },
        end: {
          line: 427,
          column: 56
        }
      },
      "173": {
        start: {
          line: 426,
          column: 96
        },
        end: {
          line: 427,
          column: 55
        }
      },
      "174": {
        start: {
          line: 428,
          column: 24
        },
        end: {
          line: 429,
          column: 57
        }
      },
      "175": {
        start: {
          line: 428,
          column: 66
        },
        end: {
          line: 429,
          column: 56
        }
      },
      "176": {
        start: {
          line: 428,
          column: 93
        },
        end: {
          line: 429,
          column: 55
        }
      },
      "177": {
        start: {
          line: 430,
          column: 8
        },
        end: {
          line: 430,
          column: 344
        }
      },
      "178": {
        start: {
          line: 437,
          column: 8
        },
        end: {
          line: 439,
          column: 9
        }
      },
      "179": {
        start: {
          line: 438,
          column: 12
        },
        end: {
          line: 438,
          column: 26
        }
      },
      "180": {
        start: {
          line: 441,
          column: 8
        },
        end: {
          line: 443,
          column: 9
        }
      },
      "181": {
        start: {
          line: 442,
          column: 12
        },
        end: {
          line: 442,
          column: 28
        }
      },
      "182": {
        start: {
          line: 445,
          column: 8
        },
        end: {
          line: 445,
          column: 21
        }
      },
      "183": {
        start: {
          line: 451,
          column: 36
        },
        end: {
          line: 451,
          column: 96
        }
      },
      "184": {
        start: {
          line: 452,
          column: 35
        },
        end: {
          line: 452,
          column: 73
        }
      },
      "185": {
        start: {
          line: 453,
          column: 8
        },
        end: {
          line: 455,
          column: 9
        }
      },
      "186": {
        start: {
          line: 454,
          column: 12
        },
        end: {
          line: 454,
          column: 31
        }
      },
      "187": {
        start: {
          line: 456,
          column: 8
        },
        end: {
          line: 458,
          column: 9
        }
      },
      "188": {
        start: {
          line: 457,
          column: 12
        },
        end: {
          line: 457,
          column: 30
        }
      },
      "189": {
        start: {
          line: 459,
          column: 8
        },
        end: {
          line: 459,
          column: 22
        }
      },
      "190": {
        start: {
          line: 466,
          column: 27
        },
        end: {
          line: 476,
          column: 9
        }
      },
      "191": {
        start: {
          line: 477,
          column: 8
        },
        end: {
          line: 477,
          column: 48
        }
      },
      "192": {
        start: {
          line: 481,
          column: 0
        },
        end: {
          line: 481,
          column: 62
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 41,
            column: 5
          }
        },
        loc: {
          start: {
            line: 41,
            column: 18
          },
          end: {
            line: 44,
            column: 5
          }
        },
        line: 41
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 45,
            column: 4
          },
          end: {
            line: 45,
            column: 5
          }
        },
        loc: {
          start: {
            line: 45,
            column: 29
          },
          end: {
            line: 66,
            column: 5
          }
        },
        line: 45
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 70,
            column: 4
          },
          end: {
            line: 70,
            column: 5
          }
        },
        loc: {
          start: {
            line: 70,
            column: 65
          },
          end: {
            line: 111,
            column: 5
          }
        },
        line: 70
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 115,
            column: 4
          },
          end: {
            line: 115,
            column: 5
          }
        },
        loc: {
          start: {
            line: 115,
            column: 67
          },
          end: {
            line: 155,
            column: 5
          }
        },
        line: 115
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 159,
            column: 4
          },
          end: {
            line: 159,
            column: 5
          }
        },
        loc: {
          start: {
            line: 159,
            column: 83
          },
          end: {
            line: 204,
            column: 5
          }
        },
        line: 159
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 208,
            column: 4
          },
          end: {
            line: 208,
            column: 5
          }
        },
        loc: {
          start: {
            line: 208,
            column: 62
          },
          end: {
            line: 238,
            column: 5
          }
        },
        line: 208
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 242,
            column: 4
          },
          end: {
            line: 242,
            column: 5
          }
        },
        loc: {
          start: {
            line: 242,
            column: 41
          },
          end: {
            line: 252,
            column: 5
          }
        },
        line: 242
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 247,
            column: 82
          },
          end: {
            line: 247,
            column: 83
          }
        },
        loc: {
          start: {
            line: 247,
            column: 89
          },
          end: {
            line: 247,
            column: 101
          }
        },
        line: 247
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 248,
            column: 86
          },
          end: {
            line: 248,
            column: 87
          }
        },
        loc: {
          start: {
            line: 248,
            column: 95
          },
          end: {
            line: 248,
            column: 340
          }
        },
        line: 248
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 249,
            column: 85
          },
          end: {
            line: 249,
            column: 86
          }
        },
        loc: {
          start: {
            line: 249,
            column: 94
          },
          end: {
            line: 249,
            column: 141
          }
        },
        line: 249
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 256,
            column: 4
          },
          end: {
            line: 256,
            column: 5
          }
        },
        loc: {
          start: {
            line: 256,
            column: 53
          },
          end: {
            line: 258,
            column: 5
          }
        },
        line: 256
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 262,
            column: 4
          },
          end: {
            line: 262,
            column: 5
          }
        },
        loc: {
          start: {
            line: 262,
            column: 33
          },
          end: {
            line: 283,
            column: 5
          }
        },
        line: 262
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 287,
            column: 4
          },
          end: {
            line: 287,
            column: 5
          }
        },
        loc: {
          start: {
            line: 287,
            column: 29
          },
          end: {
            line: 305,
            column: 5
          }
        },
        line: 287
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 292,
            column: 22
          },
          end: {
            line: 292,
            column: 23
          }
        },
        loc: {
          start: {
            line: 292,
            column: 39
          },
          end: {
            line: 296,
            column: 9
          }
        },
        line: 292
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 298,
            column: 50
          },
          end: {
            line: 298,
            column: 51
          }
        },
        loc: {
          start: {
            line: 298,
            column: 64
          },
          end: {
            line: 298,
            column: 79
          }
        },
        line: 298
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 309,
            column: 4
          },
          end: {
            line: 309,
            column: 5
          }
        },
        loc: {
          start: {
            line: 309,
            column: 20
          },
          end: {
            line: 317,
            column: 5
          }
        },
        line: 309
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 321,
            column: 4
          },
          end: {
            line: 321,
            column: 5
          }
        },
        loc: {
          start: {
            line: 321,
            column: 48
          },
          end: {
            line: 339,
            column: 5
          }
        },
        line: 321
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 343,
            column: 4
          },
          end: {
            line: 343,
            column: 5
          }
        },
        loc: {
          start: {
            line: 343,
            column: 61
          },
          end: {
            line: 356,
            column: 5
          }
        },
        line: 343
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 350,
            column: 51
          },
          end: {
            line: 350,
            column: 52
          }
        },
        loc: {
          start: {
            line: 350,
            column: 62
          },
          end: {
            line: 351,
            column: 72
          }
        },
        line: 350
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 350,
            column: 83
          },
          end: {
            line: 350,
            column: 84
          }
        },
        loc: {
          start: {
            line: 350,
            column: 100
          },
          end: {
            line: 351,
            column: 71
          }
        },
        line: 350
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 353,
            column: 57
          },
          end: {
            line: 353,
            column: 58
          }
        },
        loc: {
          start: {
            line: 353,
            column: 68
          },
          end: {
            line: 354,
            column: 297
          }
        },
        line: 353
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 360,
            column: 4
          },
          end: {
            line: 360,
            column: 5
          }
        },
        loc: {
          start: {
            line: 360,
            column: 34
          },
          end: {
            line: 389,
            column: 5
          }
        },
        line: 360
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 366,
            column: 20
          },
          end: {
            line: 366,
            column: 21
          }
        },
        loc: {
          start: {
            line: 366,
            column: 28
          },
          end: {
            line: 366,
            column: 43
          }
        },
        line: 366
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 369,
            column: 22
          },
          end: {
            line: 369,
            column: 23
          }
        },
        loc: {
          start: {
            line: 369,
            column: 30
          },
          end: {
            line: 371,
            column: 9
          }
        },
        line: 369
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 386,
            column: 18
          },
          end: {
            line: 386,
            column: 19
          }
        },
        loc: {
          start: {
            line: 386,
            column: 28
          },
          end: {
            line: 386,
            column: 47
          }
        },
        line: 386
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 393,
            column: 4
          },
          end: {
            line: 393,
            column: 5
          }
        },
        loc: {
          start: {
            line: 393,
            column: 78
          },
          end: {
            line: 415,
            column: 5
          }
        },
        line: 393
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 402,
            column: 45
          },
          end: {
            line: 402,
            column: 46
          }
        },
        loc: {
          start: {
            line: 402,
            column: 71
          },
          end: {
            line: 413,
            column: 9
          }
        },
        line: 402
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 403,
            column: 29
          },
          end: {
            line: 403,
            column: 30
          }
        },
        loc: {
          start: {
            line: 403,
            column: 40
          },
          end: {
            line: 412,
            column: 13
          }
        },
        line: 403
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 419,
            column: 4
          },
          end: {
            line: 419,
            column: 5
          }
        },
        loc: {
          start: {
            line: 419,
            column: 78
          },
          end: {
            line: 431,
            column: 5
          }
        },
        line: 419
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 425,
            column: 39
          },
          end: {
            line: 425,
            column: 40
          }
        },
        loc: {
          start: {
            line: 425,
            column: 44
          },
          end: {
            line: 425,
            column: 59
          }
        },
        line: 425
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 426,
            column: 53
          },
          end: {
            line: 426,
            column: 54
          }
        },
        loc: {
          start: {
            line: 426,
            column: 70
          },
          end: {
            line: 427,
            column: 56
          }
        },
        line: 426
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 426,
            column: 87
          },
          end: {
            line: 426,
            column: 88
          }
        },
        loc: {
          start: {
            line: 426,
            column: 96
          },
          end: {
            line: 427,
            column: 55
          }
        },
        line: 426
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 428,
            column: 49
          },
          end: {
            line: 428,
            column: 50
          }
        },
        loc: {
          start: {
            line: 428,
            column: 66
          },
          end: {
            line: 429,
            column: 56
          }
        },
        line: 428
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 428,
            column: 84
          },
          end: {
            line: 428,
            column: 85
          }
        },
        loc: {
          start: {
            line: 428,
            column: 93
          },
          end: {
            line: 429,
            column: 55
          }
        },
        line: 428
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 435,
            column: 4
          },
          end: {
            line: 435,
            column: 5
          }
        },
        loc: {
          start: {
            line: 435,
            column: 44
          },
          end: {
            line: 446,
            column: 5
          }
        },
        line: 435
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 450,
            column: 4
          },
          end: {
            line: 450,
            column: 5
          }
        },
        loc: {
          start: {
            line: 450,
            column: 30
          },
          end: {
            line: 460,
            column: 5
          }
        },
        line: 450
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 464,
            column: 4
          },
          end: {
            line: 464,
            column: 5
          }
        },
        loc: {
          start: {
            line: 464,
            column: 34
          },
          end: {
            line: 478,
            column: 5
          }
        },
        line: 464
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 56,
            column: 12
          },
          end: {
            line: 64,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 12
          },
          end: {
            line: 64,
            column: 13
          }
        }, {
          start: {
            line: 62,
            column: 17
          },
          end: {
            line: 64,
            column: 13
          }
        }],
        line: 56
      },
      "1": {
        loc: {
          start: {
            line: 71,
            column: 8
          },
          end: {
            line: 73,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 71,
            column: 8
          },
          end: {
            line: 73,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 71
      },
      "2": {
        loc: {
          start: {
            line: 81,
            column: 23
          },
          end: {
            line: 81,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 81,
            column: 23
          },
          end: {
            line: 81,
            column: 58
          }
        }, {
          start: {
            line: 81,
            column: 62
          },
          end: {
            line: 81,
            column: 69
          }
        }],
        line: 81
      },
      "3": {
        loc: {
          start: {
            line: 96,
            column: 12
          },
          end: {
            line: 98,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 96,
            column: 12
          },
          end: {
            line: 98,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 96
      },
      "4": {
        loc: {
          start: {
            line: 102,
            column: 12
          },
          end: {
            line: 104,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 102,
            column: 12
          },
          end: {
            line: 104,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 102
      },
      "5": {
        loc: {
          start: {
            line: 109,
            column: 52
          },
          end: {
            line: 109,
            column: 108
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 109,
            column: 77
          },
          end: {
            line: 109,
            column: 90
          }
        }, {
          start: {
            line: 109,
            column: 93
          },
          end: {
            line: 109,
            column: 108
          }
        }],
        line: 109
      },
      "6": {
        loc: {
          start: {
            line: 116,
            column: 8
          },
          end: {
            line: 118,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 116,
            column: 8
          },
          end: {
            line: 118,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 116
      },
      "7": {
        loc: {
          start: {
            line: 126,
            column: 23
          },
          end: {
            line: 126,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 126,
            column: 23
          },
          end: {
            line: 126,
            column: 58
          }
        }, {
          start: {
            line: 126,
            column: 62
          },
          end: {
            line: 126,
            column: 69
          }
        }],
        line: 126
      },
      "8": {
        loc: {
          start: {
            line: 141,
            column: 12
          },
          end: {
            line: 143,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 141,
            column: 12
          },
          end: {
            line: 143,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 141
      },
      "9": {
        loc: {
          start: {
            line: 146,
            column: 12
          },
          end: {
            line: 148,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 146,
            column: 12
          },
          end: {
            line: 148,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 146
      },
      "10": {
        loc: {
          start: {
            line: 146,
            column: 16
          },
          end: {
            line: 146,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 146,
            column: 16
          },
          end: {
            line: 146,
            column: 30
          }
        }, {
          start: {
            line: 146,
            column: 34
          },
          end: {
            line: 146,
            column: 69
          }
        }],
        line: 146
      },
      "11": {
        loc: {
          start: {
            line: 153,
            column: 60
          },
          end: {
            line: 153,
            column: 116
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 153,
            column: 85
          },
          end: {
            line: 153,
            column: 98
          }
        }, {
          start: {
            line: 153,
            column: 101
          },
          end: {
            line: 153,
            column: 116
          }
        }],
        line: 153
      },
      "12": {
        loc: {
          start: {
            line: 160,
            column: 8
          },
          end: {
            line: 162,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 160,
            column: 8
          },
          end: {
            line: 162,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 160
      },
      "13": {
        loc: {
          start: {
            line: 175,
            column: 23
          },
          end: {
            line: 175,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 175,
            column: 23
          },
          end: {
            line: 175,
            column: 58
          }
        }, {
          start: {
            line: 175,
            column: 62
          },
          end: {
            line: 175,
            column: 69
          }
        }],
        line: 175
      },
      "14": {
        loc: {
          start: {
            line: 190,
            column: 12
          },
          end: {
            line: 192,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 190,
            column: 12
          },
          end: {
            line: 192,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 190
      },
      "15": {
        loc: {
          start: {
            line: 202,
            column: 61
          },
          end: {
            line: 202,
            column: 117
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 202,
            column: 86
          },
          end: {
            line: 202,
            column: 99
          }
        }, {
          start: {
            line: 202,
            column: 102
          },
          end: {
            line: 202,
            column: 117
          }
        }],
        line: 202
      },
      "16": {
        loc: {
          start: {
            line: 216,
            column: 12
          },
          end: {
            line: 234,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 216,
            column: 12
          },
          end: {
            line: 234,
            column: 13
          }
        }, {
          start: {
            line: 225,
            column: 17
          },
          end: {
            line: 234,
            column: 13
          }
        }],
        line: 216
      },
      "17": {
        loc: {
          start: {
            line: 218,
            column: 16
          },
          end: {
            line: 223,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 218,
            column: 16
          },
          end: {
            line: 223,
            column: 17
          }
        }, {
          start: {
            line: 221,
            column: 21
          },
          end: {
            line: 223,
            column: 17
          }
        }],
        line: 218
      },
      "18": {
        loc: {
          start: {
            line: 228,
            column: 16
          },
          end: {
            line: 233,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 228,
            column: 16
          },
          end: {
            line: 233,
            column: 17
          }
        }, {
          start: {
            line: 231,
            column: 21
          },
          end: {
            line: 233,
            column: 17
          }
        }],
        line: 228
      },
      "19": {
        loc: {
          start: {
            line: 246,
            column: 12
          },
          end: {
            line: 246,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 246,
            column: 12
          },
          end: {
            line: 246,
            column: 30
          }
        }, {
          start: {
            line: 246,
            column: 34
          },
          end: {
            line: 246,
            column: 36
          }
        }],
        line: 246
      },
      "20": {
        loc: {
          start: {
            line: 247,
            column: 12
          },
          end: {
            line: 247,
            column: 119
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 247,
            column: 13
          },
          end: {
            line: 247,
            column: 112
          }
        }, {
          start: {
            line: 247,
            column: 117
          },
          end: {
            line: 247,
            column: 119
          }
        }],
        line: 247
      },
      "21": {
        loc: {
          start: {
            line: 247,
            column: 13
          },
          end: {
            line: 247,
            column: 112
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 247,
            column: 66
          },
          end: {
            line: 247,
            column: 72
          }
        }, {
          start: {
            line: 247,
            column: 75
          },
          end: {
            line: 247,
            column: 112
          }
        }],
        line: 247
      },
      "22": {
        loc: {
          start: {
            line: 247,
            column: 13
          },
          end: {
            line: 247,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 247,
            column: 13
          },
          end: {
            line: 247,
            column: 46
          }
        }, {
          start: {
            line: 247,
            column: 50
          },
          end: {
            line: 247,
            column: 63
          }
        }],
        line: 247
      },
      "23": {
        loc: {
          start: {
            line: 247,
            column: 89
          },
          end: {
            line: 247,
            column: 101
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 247,
            column: 89
          },
          end: {
            line: 247,
            column: 96
          }
        }, {
          start: {
            line: 247,
            column: 100
          },
          end: {
            line: 247,
            column: 101
          }
        }],
        line: 247
      },
      "24": {
        loc: {
          start: {
            line: 248,
            column: 12
          },
          end: {
            line: 248,
            column: 358
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 248,
            column: 13
          },
          end: {
            line: 248,
            column: 351
          }
        }, {
          start: {
            line: 248,
            column: 356
          },
          end: {
            line: 248,
            column: 358
          }
        }],
        line: 248
      },
      "25": {
        loc: {
          start: {
            line: 248,
            column: 13
          },
          end: {
            line: 248,
            column: 351
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 248,
            column: 70
          },
          end: {
            line: 248,
            column: 76
          }
        }, {
          start: {
            line: 248,
            column: 79
          },
          end: {
            line: 248,
            column: 351
          }
        }],
        line: 248
      },
      "26": {
        loc: {
          start: {
            line: 248,
            column: 13
          },
          end: {
            line: 248,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 248,
            column: 13
          },
          end: {
            line: 248,
            column: 50
          }
        }, {
          start: {
            line: 248,
            column: 54
          },
          end: {
            line: 248,
            column: 67
          }
        }],
        line: 248
      },
      "27": {
        loc: {
          start: {
            line: 248,
            column: 169
          },
          end: {
            line: 248,
            column: 250
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 248,
            column: 170
          },
          end: {
            line: 248,
            column: 243
          }
        }, {
          start: {
            line: 248,
            column: 248
          },
          end: {
            line: 248,
            column: 250
          }
        }],
        line: 248
      },
      "28": {
        loc: {
          start: {
            line: 248,
            column: 170
          },
          end: {
            line: 248,
            column: 243
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 248,
            column: 222
          },
          end: {
            line: 248,
            column: 228
          }
        }, {
          start: {
            line: 248,
            column: 231
          },
          end: {
            line: 248,
            column: 243
          }
        }],
        line: 248
      },
      "29": {
        loc: {
          start: {
            line: 248,
            column: 170
          },
          end: {
            line: 248,
            column: 219
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 248,
            column: 170
          },
          end: {
            line: 248,
            column: 202
          }
        }, {
          start: {
            line: 248,
            column: 206
          },
          end: {
            line: 248,
            column: 219
          }
        }],
        line: 248
      },
      "30": {
        loc: {
          start: {
            line: 248,
            column: 254
          },
          end: {
            line: 248,
            column: 335
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 248,
            column: 255
          },
          end: {
            line: 248,
            column: 328
          }
        }, {
          start: {
            line: 248,
            column: 333
          },
          end: {
            line: 248,
            column: 335
          }
        }],
        line: 248
      },
      "31": {
        loc: {
          start: {
            line: 248,
            column: 255
          },
          end: {
            line: 248,
            column: 328
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 248,
            column: 307
          },
          end: {
            line: 248,
            column: 313
          }
        }, {
          start: {
            line: 248,
            column: 316
          },
          end: {
            line: 248,
            column: 328
          }
        }],
        line: 248
      },
      "32": {
        loc: {
          start: {
            line: 248,
            column: 255
          },
          end: {
            line: 248,
            column: 304
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 248,
            column: 255
          },
          end: {
            line: 248,
            column: 287
          }
        }, {
          start: {
            line: 248,
            column: 291
          },
          end: {
            line: 248,
            column: 304
          }
        }],
        line: 248
      },
      "33": {
        loc: {
          start: {
            line: 249,
            column: 12
          },
          end: {
            line: 249,
            column: 159
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 249,
            column: 13
          },
          end: {
            line: 249,
            column: 152
          }
        }, {
          start: {
            line: 249,
            column: 157
          },
          end: {
            line: 249,
            column: 159
          }
        }],
        line: 249
      },
      "34": {
        loc: {
          start: {
            line: 249,
            column: 13
          },
          end: {
            line: 249,
            column: 152
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 249,
            column: 69
          },
          end: {
            line: 249,
            column: 75
          }
        }, {
          start: {
            line: 249,
            column: 78
          },
          end: {
            line: 249,
            column: 152
          }
        }],
        line: 249
      },
      "35": {
        loc: {
          start: {
            line: 249,
            column: 13
          },
          end: {
            line: 249,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 249,
            column: 13
          },
          end: {
            line: 249,
            column: 49
          }
        }, {
          start: {
            line: 249,
            column: 53
          },
          end: {
            line: 249,
            column: 66
          }
        }],
        line: 249
      },
      "36": {
        loc: {
          start: {
            line: 265,
            column: 12
          },
          end: {
            line: 276,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 265,
            column: 12
          },
          end: {
            line: 276,
            column: 13
          }
        }, {
          start: {
            line: 272,
            column: 17
          },
          end: {
            line: 276,
            column: 13
          }
        }],
        line: 265
      },
      "37": {
        loc: {
          start: {
            line: 265,
            column: 16
          },
          end: {
            line: 265,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 265,
            column: 16
          },
          end: {
            line: 265,
            column: 27
          }
        }, {
          start: {
            line: 265,
            column: 31
          },
          end: {
            line: 265,
            column: 58
          }
        }],
        line: 265
      },
      "38": {
        loc: {
          start: {
            line: 299,
            column: 8
          },
          end: {
            line: 303,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 299,
            column: 8
          },
          end: {
            line: 303,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 299
      },
      "39": {
        loc: {
          start: {
            line: 322,
            column: 8
          },
          end: {
            line: 325,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 322,
            column: 8
          },
          end: {
            line: 325,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 322
      },
      "40": {
        loc: {
          start: {
            line: 335,
            column: 8
          },
          end: {
            line: 337,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 335,
            column: 8
          },
          end: {
            line: 337,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 335
      },
      "41": {
        loc: {
          start: {
            line: 350,
            column: 100
          },
          end: {
            line: 351,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 350,
            column: 100
          },
          end: {
            line: 350,
            column: 159
          }
        }, {
          start: {
            line: 351,
            column: 12
          },
          end: {
            line: 351,
            column: 71
          }
        }],
        line: 350
      },
      "42": {
        loc: {
          start: {
            line: 353,
            column: 68
          },
          end: {
            line: 354,
            column: 297
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 353,
            column: 68
          },
          end: {
            line: 353,
            column: 86
          }
        }, {
          start: {
            line: 354,
            column: 12
          },
          end: {
            line: 354,
            column: 297
          }
        }],
        line: 353
      },
      "43": {
        loc: {
          start: {
            line: 370,
            column: 31
          },
          end: {
            line: 370,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 370,
            column: 31
          },
          end: {
            line: 370,
            column: 46
          }
        }, {
          start: {
            line: 370,
            column: 50
          },
          end: {
            line: 370,
            column: 51
          }
        }],
        line: 370
      },
      "44": {
        loc: {
          start: {
            line: 377,
            column: 12
          },
          end: {
            line: 380,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 377,
            column: 12
          },
          end: {
            line: 380,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 377
      },
      "45": {
        loc: {
          start: {
            line: 395,
            column: 8
          },
          end: {
            line: 397,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 395,
            column: 8
          },
          end: {
            line: 397,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 395
      },
      "46": {
        loc: {
          start: {
            line: 409,
            column: 31
          },
          end: {
            line: 409,
            column: 48
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 409,
            column: 43
          },
          end: {
            line: 409,
            column: 44
          }
        }, {
          start: {
            line: 409,
            column: 47
          },
          end: {
            line: 409,
            column: 48
          }
        }],
        line: 409
      },
      "47": {
        loc: {
          start: {
            line: 421,
            column: 8
          },
          end: {
            line: 423,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 421,
            column: 8
          },
          end: {
            line: 423,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 421
      },
      "48": {
        loc: {
          start: {
            line: 426,
            column: 96
          },
          end: {
            line: 427,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 426,
            column: 96
          },
          end: {
            line: 426,
            column: 139
          }
        }, {
          start: {
            line: 427,
            column: 12
          },
          end: {
            line: 427,
            column: 55
          }
        }],
        line: 426
      },
      "49": {
        loc: {
          start: {
            line: 428,
            column: 93
          },
          end: {
            line: 429,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 428,
            column: 93
          },
          end: {
            line: 428,
            column: 136
          }
        }, {
          start: {
            line: 429,
            column: 12
          },
          end: {
            line: 429,
            column: 55
          }
        }],
        line: 428
      },
      "50": {
        loc: {
          start: {
            line: 437,
            column: 8
          },
          end: {
            line: 439,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 437,
            column: 8
          },
          end: {
            line: 439,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 437
      },
      "51": {
        loc: {
          start: {
            line: 441,
            column: 8
          },
          end: {
            line: 443,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 441,
            column: 8
          },
          end: {
            line: 443,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 441
      },
      "52": {
        loc: {
          start: {
            line: 453,
            column: 8
          },
          end: {
            line: 455,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 453,
            column: 8
          },
          end: {
            line: 455,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 453
      },
      "53": {
        loc: {
          start: {
            line: 456,
            column: 8
          },
          end: {
            line: 458,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 456,
            column: 8
          },
          end: {
            line: 458,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 456
      },
      "54": {
        loc: {
          start: {
            line: 477,
            column: 15
          },
          end: {
            line: 477,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 477,
            column: 15
          },
          end: {
            line: 477,
            column: 34
          }
        }, {
          start: {
            line: 477,
            column: 38
          },
          end: {
            line: 477,
            column: 47
          }
        }],
        line: 477
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/dikshantvashistha/PrepBettr/lib/services/ats-optimization-service.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/dikshantvashistha/PrepBettr/lib/services/ats-optimization-service.ts"],
      sourcesContent: ["/**\n * ATS Optimization Service\n * \n * Provides comprehensive ATS (Applicant Tracking System) analysis including:\n * - Keyword density analysis and optimization\n * - Skills normalization using industry taxonomies (O*NET, ESCO, SFIA)\n * - Job matching using semantic similarity with embeddings\n * - ATS scoring and recommendations\n */\n\nimport { OpenAI } from 'openai';\nimport { MigrationOpenAIClient } from '@/lib/azure-ai-foundry/clients/migration-wrapper';\nimport { fetchAzureSecrets } from '@/azure/lib/azure-config';\nimport { \n  ATS_OPTIMIZATION_PROMPT,\n  SKILLS_NORMALIZATION_PROMPT,\n  JOB_MATCHING_PROMPT,\n  formatConditionalPrompt\n} from '@/prompts/resume/extraction-prompts';\n\n// Types for ATS analysis\nexport interface ATSAnalysisResult {\n  atsScore: number;\n  overallGrade: string;\n  analysis: {\n    keywordAnalysis: KeywordAnalysis;\n    formatAnalysis: FormatAnalysis;\n    structureAnalysis: StructureAnalysis;\n    contentAnalysis: ContentAnalysis;\n  };\n  prioritizedRecommendations: ATSRecommendation[];\n}\n\nexport interface KeywordAnalysis {\n  score: number;\n  totalKeywords: number;\n  matchedKeywords: string[];\n  missingKeywords: string[];\n  keywordDensity: number;\n  industryKeywords: IndustryKeyword[];\n  recommendations: string[];\n}\n\nexport interface IndustryKeyword {\n  keyword: string;\n  importance: 'critical' | 'high' | 'medium' | 'low';\n  category: 'technical' | 'soft' | 'industry' | 'role';\n  frequency: number;\n  variations: string[];\n}\n\nexport interface FormatAnalysis {\n  score: number;\n  issues: FormatIssue[];\n  strengths: string[];\n}\n\nexport interface FormatIssue {\n  type: 'critical' | 'warning' | 'suggestion';\n  issue: string;\n  solution: string;\n  impact: string;\n}\n\nexport interface StructureAnalysis {\n  score: number;\n  missingElements: string[];\n  presentElements: string[];\n  recommendations: string[];\n}\n\nexport interface ContentAnalysis {\n  score: number;\n  strengthAreas: string[];\n  improvementAreas: string[];\n  recommendations: string[];\n}\n\nexport interface ATSRecommendation {\n  priority: 'high' | 'medium' | 'low';\n  category: 'keywords' | 'formatting' | 'structure' | 'content';\n  recommendation: string;\n  implementation: string;\n  expectedImpact: string;\n  timeToImplement: string;\n}\n\n// Types for skills normalization\nexport interface SkillsNormalizationResult {\n  normalizedSkills: NormalizedSkill[];\n  skillCategories: SkillCategories;\n  industryAlignment: IndustryAlignment;\n}\n\nexport interface NormalizedSkill {\n  originalSkill: string;\n  normalizedSkill: string;\n  category: string;\n  subcategory: string;\n  proficiencyLevel: 'beginner' | 'intermediate' | 'advanced' | 'expert';\n  industryStandard: boolean;\n  frameworks: {\n    sfia?: string;\n    onet?: string;\n    esco?: string;\n  };\n  relatedSkills: string[];\n  marketDemand: 'high' | 'medium' | 'low';\n  salaryImpact: 'positive' | 'neutral' | 'negative';\n  learningPath: string[];\n}\n\nexport interface SkillCategories {\n  technical: string[];\n  soft: string[];\n  language: string[];\n  certification: string[];\n  tool: string[];\n}\n\nexport interface IndustryAlignment {\n  score: number;\n  wellAlignedSkills: string[];\n  missingIndustrySkills: string[];\n  emergingSkills: string[];\n  recommendations: string[];\n}\n\n// Types for job matching\nexport interface JobMatchResult {\n  overallMatchScore: number;\n  matchGrade: string;\n  analysis: {\n    skillsMatch: SkillsMatchAnalysis;\n    experienceMatch: ExperienceMatchAnalysis;\n    educationMatch: EducationMatchAnalysis;\n    culturalFit: CulturalFitAnalysis;\n  };\n  recommendations: JobMatchRecommendation[];\n  interviewPreparation: string[];\n  missingKeywords: string[];\n}\n\nexport interface SkillsMatchAnalysis {\n  score: number;\n  matchedSkills: MatchedSkill[];\n  missingSkills: MissingSkill[];\n  skillGapAnalysis: {\n    criticalGaps: string[];\n    niceToHaveGaps: string[];\n    strengthAreas: string[];\n  };\n}\n\nexport interface MatchedSkill {\n  skill: string;\n  resumeLevel: string;\n  requiredLevel: string;\n  match: 'exceeds' | 'meets' | 'below';\n}\n\nexport interface MissingSkill {\n  skill: string;\n  importance: 'high' | 'medium' | 'low';\n  canLearn: boolean;\n  timeToLearn: string;\n}\n\nexport interface ExperienceMatchAnalysis {\n  score: number;\n  yearsRequired: number;\n  yearsCandidate: number;\n  yearsMatch: 'exceeds' | 'meets' | 'below';\n  industryMatch: {\n    score: number;\n    relevantIndustries: string[];\n    transferableExperience: string[];\n  };\n  roleSimilarity: {\n    score: number;\n    similarRoles: string[];\n    levelMatch: string;\n  };\n}\n\nexport interface EducationMatchAnalysis {\n  score: number;\n  degreeMatch: boolean;\n  fieldRelevance: 'high' | 'medium' | 'low';\n  institutionPrestige: string;\n  additionalQualifications: string[];\n}\n\nexport interface CulturalFitAnalysis {\n  score: number;\n  indicators: string[];\n  concerns: string[];\n  strengths: string[];\n}\n\nexport interface JobMatchRecommendation {\n  category: 'skills' | 'experience' | 'education' | 'presentation';\n  priority: 'high' | 'medium' | 'low';\n  recommendation: string;\n  reasoning: string;\n  resources: string[];\n  timeframe: string;\n}\n\n// Industry taxonomy mappings\nconst INDUSTRY_TAXONOMIES = {\n  technology: {\n    frameworks: ['React', 'Angular', 'Vue.js', 'Node.js', 'Django', 'Spring'],\n    languages: ['JavaScript', 'Python', 'Java', 'TypeScript', 'Go', 'Rust'],\n    tools: ['Git', 'Docker', 'Kubernetes', 'AWS', 'Azure', 'Jenkins'],\n    concepts: ['Agile', 'DevOps', 'Microservices', 'API Design', 'Cloud Computing']\n  },\n  finance: {\n    regulations: ['SOX', 'GDPR', 'Basel III', 'IFRS', 'GAAP'],\n    tools: ['Excel', 'Bloomberg', 'SAP', 'Oracle', 'Tableau'],\n    concepts: ['Risk Management', 'Portfolio Management', 'Financial Modeling', 'Compliance']\n  },\n  healthcare: {\n    regulations: ['HIPAA', 'FDA', 'CLIA', 'Joint Commission'],\n    systems: ['Epic', 'Cerner', 'MEDITECH', 'Allscripts'],\n    concepts: ['Patient Care', 'Quality Assurance', 'Clinical Research', 'Healthcare Analytics']\n  },\n  marketing: {\n    platforms: ['Google Ads', 'Facebook Ads', 'LinkedIn', 'HubSpot', 'Salesforce'],\n    concepts: ['SEO', 'SEM', 'Content Marketing', 'Brand Management', 'Customer Acquisition'],\n    metrics: ['CTR', 'CAC', 'ROAS', 'LTV', 'Conversion Rate']\n  }\n};\n\nclass ATSOptimizationService {\n  private openai: OpenAI | MigrationOpenAIClient | null = null;\n\n  constructor() {\n    this.initializeOpenAI();\n  }\n\n  private async initializeOpenAI() {\n    try {\n      // Try Azure AI Foundry (Migration Client) first\n      const migrationClient = new MigrationOpenAIClient();\n      await migrationClient.init();\n      this.openai = migrationClient;\n      console.log('\u2705 ATS Service using Azure AI Foundry client');\n    } catch (error) {\n      console.warn('Azure AI Foundry not available, falling back to OpenAI:', error);\n      // Fallback to standard OpenAI\n      if (process.env.OPENAI_API_KEY) {\n        this.openai = new OpenAI({\n          apiKey: process.env.OPENAI_API_KEY,\n        });\n        console.log('\u2705 ATS Service using standard OpenAI client');\n      } else {\n        throw new Error('No AI service available for ATS optimization');\n      }\n    }\n  }\n\n  /**\n   * Perform comprehensive ATS analysis of a resume\n   */\n  async analyzeATS(\n    resumeData: any,\n    jobDescription?: string,\n    targetIndustry?: string\n  ): Promise<ATSAnalysisResult> {\n    if (!this.openai) {\n      await this.initializeOpenAI();\n    }\n\n    try {\n      const prompt = formatConditionalPrompt(ATS_OPTIMIZATION_PROMPT, {\n        RESUME_DATA: JSON.stringify(resumeData, null, 2),\n        jobDescription,\n        targetIndustry\n      });\n\n      const completion = await this.openai!.chat.completions.create({\n        model: process.env.AZURE_OPENAI_DEPLOYMENT || 'gpt-4',\n        messages: [\n          {\n            role: 'system',\n            content: 'You are an expert ATS (Applicant Tracking System) analyst. Provide detailed, actionable analysis to improve resume compatibility with ATS systems.'\n          },\n          {\n            role: 'user',\n            content: prompt\n          }\n        ],\n        temperature: 0.3, // Lower temperature for more consistent analysis\n        max_tokens: 4000,\n      });\n\n      const response = completion.choices[0].message.content;\n      if (!response) {\n        throw new Error('No response from AI service');\n      }\n\n      // Parse JSON response\n      const analysisResult = JSON.parse(response) as ATSAnalysisResult;\n\n      // Enhance with industry-specific analysis\n      if (targetIndustry) {\n        analysisResult.analysis.keywordAnalysis = await this.enhanceKeywordAnalysis(\n          analysisResult.analysis.keywordAnalysis,\n          resumeData,\n          targetIndustry\n        );\n      }\n\n      return analysisResult;\n    } catch (error) {\n      console.error('ATS analysis failed:', error);\n      throw new Error(`ATS analysis failed: ${error instanceof Error ? error.message : 'Unknown error'}`);\n    }\n  }\n\n  /**\n   * Normalize and categorize skills using industry taxonomies\n   */\n  async normalizeSkills(\n    skills: string[],\n    targetIndustry?: string,\n    experienceLevel?: string\n  ): Promise<SkillsNormalizationResult> {\n    if (!this.openai) {\n      await this.initializeOpenAI();\n    }\n\n    try {\n      const prompt = formatConditionalPrompt(SKILLS_NORMALIZATION_PROMPT, {\n        SKILLS_LIST: skills.join(', '),\n        TARGET_INDUSTRY: targetIndustry,\n        EXPERIENCE_LEVEL: experienceLevel\n      });\n\n      const completion = await this.openai!.chat.completions.create({\n        model: process.env.AZURE_OPENAI_DEPLOYMENT || 'gpt-4',\n        messages: [\n          {\n            role: 'system',\n            content: 'You are an expert in skills taxonomy and industry standards. Use established frameworks like O*NET, ESCO, and SFIA to normalize and categorize skills.'\n          },\n          {\n            role: 'user',\n            content: prompt\n          }\n        ],\n        temperature: 0.2,\n        max_tokens: 3000,\n      });\n\n      const response = completion.choices[0].message.content;\n      if (!response) {\n        throw new Error('No response from AI service');\n      }\n\n      const normalizationResult = JSON.parse(response) as SkillsNormalizationResult;\n\n      // Enhance with industry-specific mappings\n      if (targetIndustry && INDUSTRY_TAXONOMIES[targetIndustry as keyof typeof INDUSTRY_TAXONOMIES]) {\n        normalizationResult.industryAlignment = await this.enhanceIndustryAlignment(\n          normalizationResult.industryAlignment,\n          skills,\n          targetIndustry\n        );\n      }\n\n      return normalizationResult;\n    } catch (error) {\n      console.error('Skills normalization failed:', error);\n      throw new Error(`Skills normalization failed: ${error instanceof Error ? error.message : 'Unknown error'}`);\n    }\n  }\n\n  /**\n   * Perform job matching analysis using semantic similarity\n   */\n  async analyzeJobMatch(\n    resumeData: any,\n    jobDescription: string,\n    targetRole?: string,\n    experienceLevel?: string\n  ): Promise<JobMatchResult> {\n    if (!this.openai) {\n      await this.initializeOpenAI();\n    }\n\n    try {\n      // First, get semantic embeddings for similarity analysis\n      const resumeEmbedding = await this.getResumeEmbedding(resumeData);\n      const jobEmbedding = await this.getJobDescriptionEmbedding(jobDescription);\n      const semanticSimilarity = this.calculateCosineSimilarity(resumeEmbedding, jobEmbedding);\n\n      const prompt = formatConditionalPrompt(JOB_MATCHING_PROMPT, {\n        RESUME_DATA: JSON.stringify(resumeData, null, 2),\n        JOB_DESCRIPTION: jobDescription,\n        targetRole,\n        experienceLevel\n      });\n\n      const completion = await this.openai!.chat.completions.create({\n        model: process.env.AZURE_OPENAI_DEPLOYMENT || 'gpt-4',\n        messages: [\n          {\n            role: 'system',\n            content: 'You are an expert job matching analyst. Provide detailed analysis of how well a candidate matches a job description, including specific skill gaps and recommendations.'\n          },\n          {\n            role: 'user',\n            content: prompt\n          }\n        ],\n        temperature: 0.3,\n        max_tokens: 4000,\n      });\n\n      const response = completion.choices[0].message.content;\n      if (!response) {\n        throw new Error('No response from AI service');\n      }\n\n      const matchResult = JSON.parse(response) as JobMatchResult;\n\n      // Enhance overall score with semantic similarity\n      matchResult.overallMatchScore = Math.round(\n        (matchResult.overallMatchScore * 0.7) + (semanticSimilarity * 100 * 0.3)\n      );\n\n      // Extract missing keywords from job description\n      matchResult.missingKeywords = await this.extractMissingKeywords(resumeData, jobDescription);\n\n      return matchResult;\n    } catch (error) {\n      console.error('Job matching analysis failed:', error);\n      throw new Error(`Job matching analysis failed: ${error instanceof Error ? error.message : 'Unknown error'}`);\n    }\n  }\n\n  /**\n   * Calculate keyword density and relevance\n   */\n  async calculateKeywordDensity(\n    resumeText: string,\n    targetKeywords: string[]\n  ): Promise<{ density: number; matches: string[]; missing: string[] }> {\n    const resumeWords = resumeText.toLowerCase().split(/\\s+/);\n    const totalWords = resumeWords.length;\n    \n    const matches: string[] = [];\n    const missing: string[] = [];\n\n    for (const keyword of targetKeywords) {\n      const keywordLower = keyword.toLowerCase();\n      const keywordWords = keywordLower.split(/\\s+/);\n      \n      if (keywordWords.length === 1) {\n        // Single word keyword\n        if (resumeWords.includes(keywordLower)) {\n          matches.push(keyword);\n        } else {\n          missing.push(keyword);\n        }\n      } else {\n        // Multi-word keyword - check for phrase\n        const keywordRegex = new RegExp(keywordWords.join('\\\\s+'), 'i');\n        if (keywordRegex.test(resumeText)) {\n          matches.push(keyword);\n        } else {\n          missing.push(keyword);\n        }\n      }\n    }\n\n    const density = matches.length / totalWords;\n    return { density, matches, missing };\n  }\n\n  /**\n   * Get embedding representation of resume for semantic analysis\n   */\n  private async getResumeEmbedding(resumeData: any): Promise<number[]> {\n    // Create a text representation of key resume elements\n    const resumeText = [\n      resumeData.summary || '',\n      resumeData.skills?.map((s: any) => s.skill || s).join(' ') || '',\n      resumeData.experience?.map((exp: any) => \n        `${exp.position} ${exp.company} ${exp.description} ${exp.achievements?.join(' ') || ''} ${exp.technologies?.join(' ') || ''}`\n      ).join(' ') || '',\n      resumeData.education?.map((edu: any) => \n        `${edu.degree} ${edu.field} ${edu.institution}`\n      ).join(' ') || ''\n    ].join(' ');\n\n    return await this.getTextEmbedding(resumeText);\n  }\n\n  /**\n   * Get embedding representation of job description\n   */\n  private async getJobDescriptionEmbedding(jobDescription: string): Promise<number[]> {\n    return await this.getTextEmbedding(jobDescription);\n  }\n\n  /**\n   * Get text embedding using OpenAI's embedding API\n   */\n  private async getTextEmbedding(text: string): Promise<number[]> {\n    try {\n      // Check if embeddings API is available\n      if (this.openai && 'embeddings' in this.openai) {\n        const response = await (this.openai as any).embeddings.create({\n          model: 'text-embedding-ada-002',\n          input: text.slice(0, 8192), // Limit to avoid token limits\n        });\n        return response.data[0].embedding;\n      } else {\n        // Fallback: Use text-based similarity analysis\n        console.warn('Embeddings API not available, using text-based fallback');\n        return this.getTextBasedVector(text);\n      }\n    } catch (error) {\n      console.error('Failed to get embedding:', error);\n      // Return text-based vector as fallback\n      return this.getTextBasedVector(text);\n    }\n  }\n\n  /**\n   * Create a simple text-based vector representation\n   */\n  private getTextBasedVector(text: string): number[] {\n    // Simple text-based feature extraction\n    const words = text.toLowerCase().split(/\\s+/);\n    const vector = new Array(1536).fill(0);\n    \n    // Use word frequency and character patterns to create a pseudo-vector\n    words.forEach((word, index) => {\n      const hash = this.simpleHash(word);\n      const vectorIndex = Math.abs(hash) % 1536;\n      vector[vectorIndex] += 1;\n    });\n    \n    // Normalize the vector\n    const magnitude = Math.sqrt(vector.reduce((sum, val) => sum + val * val, 0));\n    if (magnitude > 0) {\n      for (let i = 0; i < vector.length; i++) {\n        vector[i] = vector[i] / magnitude;\n      }\n    }\n    \n    return vector;\n  }\n\n  /**\n   * Simple hash function for text\n   */\n  private simpleHash(str: string): number {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n      const char = str.charCodeAt(i);\n      hash = ((hash << 5) - hash) + char;\n      hash = hash & hash; // Convert to 32-bit integer\n    }\n    return hash;\n  }\n\n  /**\n   * Calculate cosine similarity between two vectors\n   */\n  private calculateCosineSimilarity(vector1: number[], vector2: number[]): number {\n    if (vector1.length !== vector2.length) {\n      console.warn('Vector lengths do not match');\n      return 0;\n    }\n\n    let dotProduct = 0;\n    let norm1 = 0;\n    let norm2 = 0;\n\n    for (let i = 0; i < vector1.length; i++) {\n      dotProduct += vector1[i] * vector2[i];\n      norm1 += vector1[i] * vector1[i];\n      norm2 += vector2[i] * vector2[i];\n    }\n\n    const magnitude = Math.sqrt(norm1) * Math.sqrt(norm2);\n    if (magnitude === 0) {\n      return 0;\n    }\n\n    return dotProduct / magnitude;\n  }\n\n  /**\n   * Extract missing keywords from job description that aren't in resume\n   */\n  private async extractMissingKeywords(resumeData: any, jobDescription: string): Promise<string[]> {\n    // Extract keywords from job description\n    const jobKeywords = this.extractKeywordsFromText(jobDescription);\n    \n    // Extract keywords from resume\n    const resumeText = JSON.stringify(resumeData);\n    const resumeKeywords = this.extractKeywordsFromText(resumeText);\n    \n    // Find missing keywords\n    const missingKeywords = jobKeywords.filter(keyword => \n      !resumeKeywords.some(resumeKeyword => \n        resumeKeyword.toLowerCase().includes(keyword.toLowerCase()) ||\n        keyword.toLowerCase().includes(resumeKeyword.toLowerCase())\n      )\n    );\n\n    // Filter to keep only important keywords (remove common words)\n    const importantKeywords = missingKeywords.filter(keyword => \n      keyword.length > 2 && \n      !['the', 'and', 'for', 'are', 'but', 'not', 'you', 'all', 'can', 'had', 'her', 'was', 'one', 'our', 'out', 'day', 'had', 'has', 'his', 'how', 'man', 'new', 'now', 'old', 'see', 'two', 'who', 'boy', 'did', 'its', 'let', 'put', 'say', 'she', 'too', 'use'].includes(keyword.toLowerCase())\n    );\n\n    return importantKeywords.slice(0, 20); // Limit to top 20 missing keywords\n  }\n\n  /**\n   * Extract keywords from text using simple NLP techniques\n   */\n  private extractKeywordsFromText(text: string): string[] {\n    // Remove common punctuation and split into words\n    const words = text\n      .toLowerCase()\n      .replace(/[^\\w\\s-]/g, ' ')\n      .split(/\\s+/)\n      .filter(word => word.length > 2);\n\n    // Count word frequency\n    const wordCount: { [key: string]: number } = {};\n    words.forEach(word => {\n      wordCount[word] = (wordCount[word] || 0) + 1;\n    });\n\n    // Extract phrases (2-3 word combinations)\n    const phrases: string[] = [];\n    for (let i = 0; i < words.length - 1; i++) {\n      const twoWordPhrase = `${words[i]} ${words[i + 1]}`;\n      phrases.push(twoWordPhrase);\n      \n      if (i < words.length - 2) {\n        const threeWordPhrase = `${words[i]} ${words[i + 1]} ${words[i + 2]}`;\n        phrases.push(threeWordPhrase);\n      }\n    }\n\n    // Combine single words and phrases, sort by frequency/importance\n    const allKeywords = [...Object.keys(wordCount), ...phrases];\n    \n    // Remove duplicates and sort by length (longer phrases first)\n    const uniqueKeywords = Array.from(new Set(allKeywords))\n      .sort((a, b) => b.length - a.length)\n      .slice(0, 100); // Limit to top 100 keywords\n\n    return uniqueKeywords;\n  }\n\n  /**\n   * Enhance keyword analysis with industry-specific terms\n   */\n  private async enhanceKeywordAnalysis(\n    keywordAnalysis: KeywordAnalysis,\n    resumeData: any,\n    targetIndustry: string\n  ): Promise<KeywordAnalysis> {\n    const industryData = INDUSTRY_TAXONOMIES[targetIndustry as keyof typeof INDUSTRY_TAXONOMIES];\n    \n    if (!industryData) {\n      return keywordAnalysis;\n    }\n\n    // Check for industry-specific keywords\n    const industryKeywords: IndustryKeyword[] = [];\n    const resumeText = JSON.stringify(resumeData).toLowerCase();\n\n    // Check technical frameworks/tools\n    Object.entries(industryData).forEach(([category, keywords]) => {\n      keywords.forEach(keyword => {\n        const isPresent = resumeText.includes(keyword.toLowerCase());\n        industryKeywords.push({\n          keyword,\n          importance: this.getKeywordImportance(keyword, category),\n          category: this.mapCategoryType(category),\n          frequency: isPresent ? 1 : 0,\n          variations: this.getKeywordVariations(keyword)\n        });\n      });\n    });\n\n    return {\n      ...keywordAnalysis,\n      industryKeywords,\n      totalKeywords: keywordAnalysis.totalKeywords + industryKeywords.length\n    };\n  }\n\n  /**\n   * Enhance industry alignment analysis\n   */\n  private async enhanceIndustryAlignment(\n    industryAlignment: IndustryAlignment,\n    skills: string[],\n    targetIndustry: string\n  ): Promise<IndustryAlignment> {\n    const industryData = INDUSTRY_TAXONOMIES[targetIndustry as keyof typeof INDUSTRY_TAXONOMIES];\n    \n    if (!industryData) {\n      return industryAlignment;\n    }\n\n    const allIndustrySkills = Object.values(industryData).flat();\n    const skillsLower = skills.map(s => s.toLowerCase());\n\n    const wellAligned = allIndustrySkills.filter(industrySkill =>\n      skillsLower.some(skill => \n        skill.includes(industrySkill.toLowerCase()) || \n        industrySkill.toLowerCase().includes(skill)\n      )\n    );\n\n    const missing = allIndustrySkills.filter(industrySkill =>\n      !skillsLower.some(skill => \n        skill.includes(industrySkill.toLowerCase()) || \n        industrySkill.toLowerCase().includes(skill)\n      )\n    );\n\n    return {\n      ...industryAlignment,\n      wellAlignedSkills: [...new Set([...industryAlignment.wellAlignedSkills, ...wellAligned])],\n      missingIndustrySkills: [...new Set([...industryAlignment.missingIndustrySkills, ...missing.slice(0, 10)])],\n      score: Math.round((wellAligned.length / allIndustrySkills.length) * 100)\n    };\n  }\n\n  /**\n   * Get keyword importance based on category and context\n   */\n  private getKeywordImportance(keyword: string, category: string): 'critical' | 'high' | 'medium' | 'low' {\n    // High-importance categories\n    if (['frameworks', 'languages', 'regulations'].includes(category)) {\n      return 'high';\n    }\n    \n    // Medium-importance categories\n    if (['tools', 'platforms'].includes(category)) {\n      return 'medium';\n    }\n    \n    // Default to low importance\n    return 'low';\n  }\n\n  /**\n   * Map category names to standard types\n   */\n  private mapCategoryType(category: string): 'technical' | 'soft' | 'industry' | 'role' {\n    const technicalCategories = ['frameworks', 'languages', 'tools', 'platforms', 'systems'];\n    const industryCategories = ['regulations', 'concepts', 'metrics'];\n    \n    if (technicalCategories.includes(category)) {\n      return 'technical';\n    }\n    \n    if (industryCategories.includes(category)) {\n      return 'industry';\n    }\n    \n    return 'role';\n  }\n\n  /**\n   * Get common variations of a keyword\n   */\n  private getKeywordVariations(keyword: string): string[] {\n    // Common variations and synonyms\n    const variations: { [key: string]: string[] } = {\n      'React': ['React.js', 'ReactJS', 'React JS'],\n      'Node.js': ['NodeJS', 'Node', 'Node JS'],\n      'JavaScript': ['JS', 'Javascript', 'ECMAScript'],\n      'TypeScript': ['TS', 'Typescript'],\n      'Python': ['py'],\n      'Docker': ['Containerization'],\n      'Kubernetes': ['K8s', 'K8S'],\n      'AWS': ['Amazon Web Services'],\n      'Azure': ['Microsoft Azure'],\n    };\n\n    return variations[keyword] || [keyword];\n  }\n}\n\n// Export singleton instance\nexport const atsOptimizationService = new ATSOptimizationService();\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f9df41a9c964d8c40cd3c6d292dc308a10e98090"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_147c59ekq0 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_147c59ekq0();
cov_147c59ekq0().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_147c59ekq0().s[1]++;
exports.atsOptimizationService = void 0;
const openai_1 =
/* istanbul ignore next */
(cov_147c59ekq0().s[2]++, require("openai"));
const migration_wrapper_1 =
/* istanbul ignore next */
(cov_147c59ekq0().s[3]++, require("@/lib/azure-ai-foundry/clients/migration-wrapper"));
const extraction_prompts_1 =
/* istanbul ignore next */
(cov_147c59ekq0().s[4]++, require("@/prompts/resume/extraction-prompts"));
// Industry taxonomy mappings
const INDUSTRY_TAXONOMIES =
/* istanbul ignore next */
(cov_147c59ekq0().s[5]++, {
  technology: {
    frameworks: ['React', 'Angular', 'Vue.js', 'Node.js', 'Django', 'Spring'],
    languages: ['JavaScript', 'Python', 'Java', 'TypeScript', 'Go', 'Rust'],
    tools: ['Git', 'Docker', 'Kubernetes', 'AWS', 'Azure', 'Jenkins'],
    concepts: ['Agile', 'DevOps', 'Microservices', 'API Design', 'Cloud Computing']
  },
  finance: {
    regulations: ['SOX', 'GDPR', 'Basel III', 'IFRS', 'GAAP'],
    tools: ['Excel', 'Bloomberg', 'SAP', 'Oracle', 'Tableau'],
    concepts: ['Risk Management', 'Portfolio Management', 'Financial Modeling', 'Compliance']
  },
  healthcare: {
    regulations: ['HIPAA', 'FDA', 'CLIA', 'Joint Commission'],
    systems: ['Epic', 'Cerner', 'MEDITECH', 'Allscripts'],
    concepts: ['Patient Care', 'Quality Assurance', 'Clinical Research', 'Healthcare Analytics']
  },
  marketing: {
    platforms: ['Google Ads', 'Facebook Ads', 'LinkedIn', 'HubSpot', 'Salesforce'],
    concepts: ['SEO', 'SEM', 'Content Marketing', 'Brand Management', 'Customer Acquisition'],
    metrics: ['CTR', 'CAC', 'ROAS', 'LTV', 'Conversion Rate']
  }
});
class ATSOptimizationService {
  constructor() {
    /* istanbul ignore next */
    cov_147c59ekq0().f[0]++;
    cov_147c59ekq0().s[6]++;
    this.openai = null;
    /* istanbul ignore next */
    cov_147c59ekq0().s[7]++;
    this.initializeOpenAI();
  }
  async initializeOpenAI() {
    /* istanbul ignore next */
    cov_147c59ekq0().f[1]++;
    cov_147c59ekq0().s[8]++;
    try {
      // Try Azure AI Foundry (Migration Client) first
      const migrationClient =
      /* istanbul ignore next */
      (cov_147c59ekq0().s[9]++, new migration_wrapper_1.MigrationOpenAIClient());
      /* istanbul ignore next */
      cov_147c59ekq0().s[10]++;
      await migrationClient.init();
      /* istanbul ignore next */
      cov_147c59ekq0().s[11]++;
      this.openai = migrationClient;
      /* istanbul ignore next */
      cov_147c59ekq0().s[12]++;
      console.log('✅ ATS Service using Azure AI Foundry client');
    } catch (error) {
      /* istanbul ignore next */
      cov_147c59ekq0().s[13]++;
      console.warn('Azure AI Foundry not available, falling back to OpenAI:', error);
      // Fallback to standard OpenAI
      /* istanbul ignore next */
      cov_147c59ekq0().s[14]++;
      if (process.env.OPENAI_API_KEY) {
        /* istanbul ignore next */
        cov_147c59ekq0().b[0][0]++;
        cov_147c59ekq0().s[15]++;
        this.openai = new openai_1.OpenAI({
          apiKey: process.env.OPENAI_API_KEY
        });
        /* istanbul ignore next */
        cov_147c59ekq0().s[16]++;
        console.log('✅ ATS Service using standard OpenAI client');
      } else {
        /* istanbul ignore next */
        cov_147c59ekq0().b[0][1]++;
        cov_147c59ekq0().s[17]++;
        throw new Error('No AI service available for ATS optimization');
      }
    }
  }
  /**
   * Perform comprehensive ATS analysis of a resume
   */
  async analyzeATS(resumeData, jobDescription, targetIndustry) {
    /* istanbul ignore next */
    cov_147c59ekq0().f[2]++;
    cov_147c59ekq0().s[18]++;
    if (!this.openai) {
      /* istanbul ignore next */
      cov_147c59ekq0().b[1][0]++;
      cov_147c59ekq0().s[19]++;
      await this.initializeOpenAI();
    } else
    /* istanbul ignore next */
    {
      cov_147c59ekq0().b[1][1]++;
    }
    cov_147c59ekq0().s[20]++;
    try {
      const prompt =
      /* istanbul ignore next */
      (cov_147c59ekq0().s[21]++, (0, extraction_prompts_1.formatConditionalPrompt)(extraction_prompts_1.ATS_OPTIMIZATION_PROMPT, {
        RESUME_DATA: JSON.stringify(resumeData, null, 2),
        jobDescription,
        targetIndustry
      }));
      const completion =
      /* istanbul ignore next */
      (cov_147c59ekq0().s[22]++, await this.openai.chat.completions.create({
        model:
        /* istanbul ignore next */
        (cov_147c59ekq0().b[2][0]++, process.env.AZURE_OPENAI_DEPLOYMENT) ||
        /* istanbul ignore next */
        (cov_147c59ekq0().b[2][1]++, 'gpt-4'),
        messages: [{
          role: 'system',
          content: 'You are an expert ATS (Applicant Tracking System) analyst. Provide detailed, actionable analysis to improve resume compatibility with ATS systems.'
        }, {
          role: 'user',
          content: prompt
        }],
        temperature: 0.3,
        // Lower temperature for more consistent analysis
        max_tokens: 4000
      }));
      const response =
      /* istanbul ignore next */
      (cov_147c59ekq0().s[23]++, completion.choices[0].message.content);
      /* istanbul ignore next */
      cov_147c59ekq0().s[24]++;
      if (!response) {
        /* istanbul ignore next */
        cov_147c59ekq0().b[3][0]++;
        cov_147c59ekq0().s[25]++;
        throw new Error('No response from AI service');
      } else
      /* istanbul ignore next */
      {
        cov_147c59ekq0().b[3][1]++;
      }
      // Parse JSON response
      const analysisResult =
      /* istanbul ignore next */
      (cov_147c59ekq0().s[26]++, JSON.parse(response));
      // Enhance with industry-specific analysis
      /* istanbul ignore next */
      cov_147c59ekq0().s[27]++;
      if (targetIndustry) {
        /* istanbul ignore next */
        cov_147c59ekq0().b[4][0]++;
        cov_147c59ekq0().s[28]++;
        analysisResult.analysis.keywordAnalysis = await this.enhanceKeywordAnalysis(analysisResult.analysis.keywordAnalysis, resumeData, targetIndustry);
      } else
      /* istanbul ignore next */
      {
        cov_147c59ekq0().b[4][1]++;
      }
      cov_147c59ekq0().s[29]++;
      return analysisResult;
    } catch (error) {
      /* istanbul ignore next */
      cov_147c59ekq0().s[30]++;
      console.error('ATS analysis failed:', error);
      /* istanbul ignore next */
      cov_147c59ekq0().s[31]++;
      throw new Error(`ATS analysis failed: ${error instanceof Error ?
      /* istanbul ignore next */
      (cov_147c59ekq0().b[5][0]++, error.message) :
      /* istanbul ignore next */
      (cov_147c59ekq0().b[5][1]++, 'Unknown error')}`);
    }
  }
  /**
   * Normalize and categorize skills using industry taxonomies
   */
  async normalizeSkills(skills, targetIndustry, experienceLevel) {
    /* istanbul ignore next */
    cov_147c59ekq0().f[3]++;
    cov_147c59ekq0().s[32]++;
    if (!this.openai) {
      /* istanbul ignore next */
      cov_147c59ekq0().b[6][0]++;
      cov_147c59ekq0().s[33]++;
      await this.initializeOpenAI();
    } else
    /* istanbul ignore next */
    {
      cov_147c59ekq0().b[6][1]++;
    }
    cov_147c59ekq0().s[34]++;
    try {
      const prompt =
      /* istanbul ignore next */
      (cov_147c59ekq0().s[35]++, (0, extraction_prompts_1.formatConditionalPrompt)(extraction_prompts_1.SKILLS_NORMALIZATION_PROMPT, {
        SKILLS_LIST: skills.join(', '),
        TARGET_INDUSTRY: targetIndustry,
        EXPERIENCE_LEVEL: experienceLevel
      }));
      const completion =
      /* istanbul ignore next */
      (cov_147c59ekq0().s[36]++, await this.openai.chat.completions.create({
        model:
        /* istanbul ignore next */
        (cov_147c59ekq0().b[7][0]++, process.env.AZURE_OPENAI_DEPLOYMENT) ||
        /* istanbul ignore next */
        (cov_147c59ekq0().b[7][1]++, 'gpt-4'),
        messages: [{
          role: 'system',
          content: 'You are an expert in skills taxonomy and industry standards. Use established frameworks like O*NET, ESCO, and SFIA to normalize and categorize skills.'
        }, {
          role: 'user',
          content: prompt
        }],
        temperature: 0.2,
        max_tokens: 3000
      }));
      const response =
      /* istanbul ignore next */
      (cov_147c59ekq0().s[37]++, completion.choices[0].message.content);
      /* istanbul ignore next */
      cov_147c59ekq0().s[38]++;
      if (!response) {
        /* istanbul ignore next */
        cov_147c59ekq0().b[8][0]++;
        cov_147c59ekq0().s[39]++;
        throw new Error('No response from AI service');
      } else
      /* istanbul ignore next */
      {
        cov_147c59ekq0().b[8][1]++;
      }
      const normalizationResult =
      /* istanbul ignore next */
      (cov_147c59ekq0().s[40]++, JSON.parse(response));
      // Enhance with industry-specific mappings
      /* istanbul ignore next */
      cov_147c59ekq0().s[41]++;
      if (
      /* istanbul ignore next */
      (cov_147c59ekq0().b[10][0]++, targetIndustry) &&
      /* istanbul ignore next */
      (cov_147c59ekq0().b[10][1]++, INDUSTRY_TAXONOMIES[targetIndustry])) {
        /* istanbul ignore next */
        cov_147c59ekq0().b[9][0]++;
        cov_147c59ekq0().s[42]++;
        normalizationResult.industryAlignment = await this.enhanceIndustryAlignment(normalizationResult.industryAlignment, skills, targetIndustry);
      } else
      /* istanbul ignore next */
      {
        cov_147c59ekq0().b[9][1]++;
      }
      cov_147c59ekq0().s[43]++;
      return normalizationResult;
    } catch (error) {
      /* istanbul ignore next */
      cov_147c59ekq0().s[44]++;
      console.error('Skills normalization failed:', error);
      /* istanbul ignore next */
      cov_147c59ekq0().s[45]++;
      throw new Error(`Skills normalization failed: ${error instanceof Error ?
      /* istanbul ignore next */
      (cov_147c59ekq0().b[11][0]++, error.message) :
      /* istanbul ignore next */
      (cov_147c59ekq0().b[11][1]++, 'Unknown error')}`);
    }
  }
  /**
   * Perform job matching analysis using semantic similarity
   */
  async analyzeJobMatch(resumeData, jobDescription, targetRole, experienceLevel) {
    /* istanbul ignore next */
    cov_147c59ekq0().f[4]++;
    cov_147c59ekq0().s[46]++;
    if (!this.openai) {
      /* istanbul ignore next */
      cov_147c59ekq0().b[12][0]++;
      cov_147c59ekq0().s[47]++;
      await this.initializeOpenAI();
    } else
    /* istanbul ignore next */
    {
      cov_147c59ekq0().b[12][1]++;
    }
    cov_147c59ekq0().s[48]++;
    try {
      // First, get semantic embeddings for similarity analysis
      const resumeEmbedding =
      /* istanbul ignore next */
      (cov_147c59ekq0().s[49]++, await this.getResumeEmbedding(resumeData));
      const jobEmbedding =
      /* istanbul ignore next */
      (cov_147c59ekq0().s[50]++, await this.getJobDescriptionEmbedding(jobDescription));
      const semanticSimilarity =
      /* istanbul ignore next */
      (cov_147c59ekq0().s[51]++, this.calculateCosineSimilarity(resumeEmbedding, jobEmbedding));
      const prompt =
      /* istanbul ignore next */
      (cov_147c59ekq0().s[52]++, (0, extraction_prompts_1.formatConditionalPrompt)(extraction_prompts_1.JOB_MATCHING_PROMPT, {
        RESUME_DATA: JSON.stringify(resumeData, null, 2),
        JOB_DESCRIPTION: jobDescription,
        targetRole,
        experienceLevel
      }));
      const completion =
      /* istanbul ignore next */
      (cov_147c59ekq0().s[53]++, await this.openai.chat.completions.create({
        model:
        /* istanbul ignore next */
        (cov_147c59ekq0().b[13][0]++, process.env.AZURE_OPENAI_DEPLOYMENT) ||
        /* istanbul ignore next */
        (cov_147c59ekq0().b[13][1]++, 'gpt-4'),
        messages: [{
          role: 'system',
          content: 'You are an expert job matching analyst. Provide detailed analysis of how well a candidate matches a job description, including specific skill gaps and recommendations.'
        }, {
          role: 'user',
          content: prompt
        }],
        temperature: 0.3,
        max_tokens: 4000
      }));
      const response =
      /* istanbul ignore next */
      (cov_147c59ekq0().s[54]++, completion.choices[0].message.content);
      /* istanbul ignore next */
      cov_147c59ekq0().s[55]++;
      if (!response) {
        /* istanbul ignore next */
        cov_147c59ekq0().b[14][0]++;
        cov_147c59ekq0().s[56]++;
        throw new Error('No response from AI service');
      } else
      /* istanbul ignore next */
      {
        cov_147c59ekq0().b[14][1]++;
      }
      const matchResult =
      /* istanbul ignore next */
      (cov_147c59ekq0().s[57]++, JSON.parse(response));
      // Enhance overall score with semantic similarity
      /* istanbul ignore next */
      cov_147c59ekq0().s[58]++;
      matchResult.overallMatchScore = Math.round(matchResult.overallMatchScore * 0.7 + semanticSimilarity * 100 * 0.3);
      // Extract missing keywords from job description
      /* istanbul ignore next */
      cov_147c59ekq0().s[59]++;
      matchResult.missingKeywords = await this.extractMissingKeywords(resumeData, jobDescription);
      /* istanbul ignore next */
      cov_147c59ekq0().s[60]++;
      return matchResult;
    } catch (error) {
      /* istanbul ignore next */
      cov_147c59ekq0().s[61]++;
      console.error('Job matching analysis failed:', error);
      /* istanbul ignore next */
      cov_147c59ekq0().s[62]++;
      throw new Error(`Job matching analysis failed: ${error instanceof Error ?
      /* istanbul ignore next */
      (cov_147c59ekq0().b[15][0]++, error.message) :
      /* istanbul ignore next */
      (cov_147c59ekq0().b[15][1]++, 'Unknown error')}`);
    }
  }
  /**
   * Calculate keyword density and relevance
   */
  async calculateKeywordDensity(resumeText, targetKeywords) {
    /* istanbul ignore next */
    cov_147c59ekq0().f[5]++;
    const resumeWords =
    /* istanbul ignore next */
    (cov_147c59ekq0().s[63]++, resumeText.toLowerCase().split(/\s+/));
    const totalWords =
    /* istanbul ignore next */
    (cov_147c59ekq0().s[64]++, resumeWords.length);
    const matches =
    /* istanbul ignore next */
    (cov_147c59ekq0().s[65]++, []);
    const missing =
    /* istanbul ignore next */
    (cov_147c59ekq0().s[66]++, []);
    /* istanbul ignore next */
    cov_147c59ekq0().s[67]++;
    for (const keyword of targetKeywords) {
      const keywordLower =
      /* istanbul ignore next */
      (cov_147c59ekq0().s[68]++, keyword.toLowerCase());
      const keywordWords =
      /* istanbul ignore next */
      (cov_147c59ekq0().s[69]++, keywordLower.split(/\s+/));
      /* istanbul ignore next */
      cov_147c59ekq0().s[70]++;
      if (keywordWords.length === 1) {
        /* istanbul ignore next */
        cov_147c59ekq0().b[16][0]++;
        cov_147c59ekq0().s[71]++;
        // Single word keyword
        if (resumeWords.includes(keywordLower)) {
          /* istanbul ignore next */
          cov_147c59ekq0().b[17][0]++;
          cov_147c59ekq0().s[72]++;
          matches.push(keyword);
        } else {
          /* istanbul ignore next */
          cov_147c59ekq0().b[17][1]++;
          cov_147c59ekq0().s[73]++;
          missing.push(keyword);
        }
      } else {
        /* istanbul ignore next */
        cov_147c59ekq0().b[16][1]++;
        // Multi-word keyword - check for phrase
        const keywordRegex =
        /* istanbul ignore next */
        (cov_147c59ekq0().s[74]++, new RegExp(keywordWords.join('\\s+'), 'i'));
        /* istanbul ignore next */
        cov_147c59ekq0().s[75]++;
        if (keywordRegex.test(resumeText)) {
          /* istanbul ignore next */
          cov_147c59ekq0().b[18][0]++;
          cov_147c59ekq0().s[76]++;
          matches.push(keyword);
        } else {
          /* istanbul ignore next */
          cov_147c59ekq0().b[18][1]++;
          cov_147c59ekq0().s[77]++;
          missing.push(keyword);
        }
      }
    }
    const density =
    /* istanbul ignore next */
    (cov_147c59ekq0().s[78]++, matches.length / totalWords);
    /* istanbul ignore next */
    cov_147c59ekq0().s[79]++;
    return {
      density,
      matches,
      missing
    };
  }
  /**
   * Get embedding representation of resume for semantic analysis
   */
  async getResumeEmbedding(resumeData) {
    /* istanbul ignore next */
    cov_147c59ekq0().f[6]++;
    var _a, _b, _c;
    // Create a text representation of key resume elements
    const resumeText =
    /* istanbul ignore next */
    (cov_147c59ekq0().s[80]++, [
    /* istanbul ignore next */
    (cov_147c59ekq0().b[19][0]++, resumeData.summary) ||
    /* istanbul ignore next */
    (cov_147c59ekq0().b[19][1]++, ''),
    /* istanbul ignore next */
    (cov_147c59ekq0().b[20][0]++,
    /* istanbul ignore next */
    (cov_147c59ekq0().b[22][0]++, (_a = resumeData.skills) === null) ||
    /* istanbul ignore next */
    (cov_147c59ekq0().b[22][1]++, _a === void 0) ?
    /* istanbul ignore next */
    (cov_147c59ekq0().b[21][0]++, void 0) :
    /* istanbul ignore next */
    (cov_147c59ekq0().b[21][1]++, _a.map(s => {
      /* istanbul ignore next */
      cov_147c59ekq0().f[7]++;
      cov_147c59ekq0().s[81]++;
      return /* istanbul ignore next */(cov_147c59ekq0().b[23][0]++, s.skill) ||
      /* istanbul ignore next */
      (cov_147c59ekq0().b[23][1]++, s);
    }).join(' '))) ||
    /* istanbul ignore next */
    (cov_147c59ekq0().b[20][1]++, ''),
    /* istanbul ignore next */
    (cov_147c59ekq0().b[24][0]++,
    /* istanbul ignore next */
    (cov_147c59ekq0().b[26][0]++, (_b = resumeData.experience) === null) ||
    /* istanbul ignore next */
    (cov_147c59ekq0().b[26][1]++, _b === void 0) ?
    /* istanbul ignore next */
    (cov_147c59ekq0().b[25][0]++, void 0) :
    /* istanbul ignore next */
    (cov_147c59ekq0().b[25][1]++, _b.map(exp => {
      /* istanbul ignore next */
      cov_147c59ekq0().f[8]++;
      var _a, _b;
      /* istanbul ignore next */
      cov_147c59ekq0().s[82]++;
      return `${exp.position} ${exp.company} ${exp.description} ${
      /* istanbul ignore next */
      (cov_147c59ekq0().b[27][0]++,
      /* istanbul ignore next */
      (cov_147c59ekq0().b[29][0]++, (_a = exp.achievements) === null) ||
      /* istanbul ignore next */
      (cov_147c59ekq0().b[29][1]++, _a === void 0) ?
      /* istanbul ignore next */
      (cov_147c59ekq0().b[28][0]++, void 0) :
      /* istanbul ignore next */
      (cov_147c59ekq0().b[28][1]++, _a.join(' '))) ||
      /* istanbul ignore next */
      (cov_147c59ekq0().b[27][1]++, '')} ${
      /* istanbul ignore next */
      (cov_147c59ekq0().b[30][0]++,
      /* istanbul ignore next */
      (cov_147c59ekq0().b[32][0]++, (_b = exp.technologies) === null) ||
      /* istanbul ignore next */
      (cov_147c59ekq0().b[32][1]++, _b === void 0) ?
      /* istanbul ignore next */
      (cov_147c59ekq0().b[31][0]++, void 0) :
      /* istanbul ignore next */
      (cov_147c59ekq0().b[31][1]++, _b.join(' '))) ||
      /* istanbul ignore next */
      (cov_147c59ekq0().b[30][1]++, '')}`;
    }).join(' '))) ||
    /* istanbul ignore next */
    (cov_147c59ekq0().b[24][1]++, ''),
    /* istanbul ignore next */
    (cov_147c59ekq0().b[33][0]++,
    /* istanbul ignore next */
    (cov_147c59ekq0().b[35][0]++, (_c = resumeData.education) === null) ||
    /* istanbul ignore next */
    (cov_147c59ekq0().b[35][1]++, _c === void 0) ?
    /* istanbul ignore next */
    (cov_147c59ekq0().b[34][0]++, void 0) :
    /* istanbul ignore next */
    (cov_147c59ekq0().b[34][1]++, _c.map(edu => {
      /* istanbul ignore next */
      cov_147c59ekq0().f[9]++;
      cov_147c59ekq0().s[83]++;
      return `${edu.degree} ${edu.field} ${edu.institution}`;
    }).join(' '))) ||
    /* istanbul ignore next */
    (cov_147c59ekq0().b[33][1]++, '')].join(' '));
    /* istanbul ignore next */
    cov_147c59ekq0().s[84]++;
    return await this.getTextEmbedding(resumeText);
  }
  /**
   * Get embedding representation of job description
   */
  async getJobDescriptionEmbedding(jobDescription) {
    /* istanbul ignore next */
    cov_147c59ekq0().f[10]++;
    cov_147c59ekq0().s[85]++;
    return await this.getTextEmbedding(jobDescription);
  }
  /**
   * Get text embedding using OpenAI's embedding API
   */
  async getTextEmbedding(text) {
    /* istanbul ignore next */
    cov_147c59ekq0().f[11]++;
    cov_147c59ekq0().s[86]++;
    try {
      /* istanbul ignore next */
      cov_147c59ekq0().s[87]++;
      // Check if embeddings API is available
      if (
      /* istanbul ignore next */
      (cov_147c59ekq0().b[37][0]++, this.openai) &&
      /* istanbul ignore next */
      (cov_147c59ekq0().b[37][1]++, 'embeddings' in this.openai)) {
        /* istanbul ignore next */
        cov_147c59ekq0().b[36][0]++;
        const response =
        /* istanbul ignore next */
        (cov_147c59ekq0().s[88]++, await this.openai.embeddings.create({
          model: 'text-embedding-ada-002',
          input: text.slice(0, 8192) // Limit to avoid token limits
        }));
        /* istanbul ignore next */
        cov_147c59ekq0().s[89]++;
        return response.data[0].embedding;
      } else {
        /* istanbul ignore next */
        cov_147c59ekq0().b[36][1]++;
        cov_147c59ekq0().s[90]++;
        // Fallback: Use text-based similarity analysis
        console.warn('Embeddings API not available, using text-based fallback');
        /* istanbul ignore next */
        cov_147c59ekq0().s[91]++;
        return this.getTextBasedVector(text);
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_147c59ekq0().s[92]++;
      console.error('Failed to get embedding:', error);
      // Return text-based vector as fallback
      /* istanbul ignore next */
      cov_147c59ekq0().s[93]++;
      return this.getTextBasedVector(text);
    }
  }
  /**
   * Create a simple text-based vector representation
   */
  getTextBasedVector(text) {
    /* istanbul ignore next */
    cov_147c59ekq0().f[12]++;
    // Simple text-based feature extraction
    const words =
    /* istanbul ignore next */
    (cov_147c59ekq0().s[94]++, text.toLowerCase().split(/\s+/));
    const vector =
    /* istanbul ignore next */
    (cov_147c59ekq0().s[95]++, new Array(1536).fill(0));
    // Use word frequency and character patterns to create a pseudo-vector
    /* istanbul ignore next */
    cov_147c59ekq0().s[96]++;
    words.forEach((word, index) => {
      /* istanbul ignore next */
      cov_147c59ekq0().f[13]++;
      const hash =
      /* istanbul ignore next */
      (cov_147c59ekq0().s[97]++, this.simpleHash(word));
      const vectorIndex =
      /* istanbul ignore next */
      (cov_147c59ekq0().s[98]++, Math.abs(hash) % 1536);
      /* istanbul ignore next */
      cov_147c59ekq0().s[99]++;
      vector[vectorIndex] += 1;
    });
    // Normalize the vector
    const magnitude =
    /* istanbul ignore next */
    (cov_147c59ekq0().s[100]++, Math.sqrt(vector.reduce((sum, val) => {
      /* istanbul ignore next */
      cov_147c59ekq0().f[14]++;
      cov_147c59ekq0().s[101]++;
      return sum + val * val;
    }, 0)));
    /* istanbul ignore next */
    cov_147c59ekq0().s[102]++;
    if (magnitude > 0) {
      /* istanbul ignore next */
      cov_147c59ekq0().b[38][0]++;
      cov_147c59ekq0().s[103]++;
      for (let i =
      /* istanbul ignore next */
      (cov_147c59ekq0().s[104]++, 0); i < vector.length; i++) {
        /* istanbul ignore next */
        cov_147c59ekq0().s[105]++;
        vector[i] = vector[i] / magnitude;
      }
    } else
    /* istanbul ignore next */
    {
      cov_147c59ekq0().b[38][1]++;
    }
    cov_147c59ekq0().s[106]++;
    return vector;
  }
  /**
   * Simple hash function for text
   */
  simpleHash(str) {
    /* istanbul ignore next */
    cov_147c59ekq0().f[15]++;
    let hash =
    /* istanbul ignore next */
    (cov_147c59ekq0().s[107]++, 0);
    /* istanbul ignore next */
    cov_147c59ekq0().s[108]++;
    for (let i =
    /* istanbul ignore next */
    (cov_147c59ekq0().s[109]++, 0); i < str.length; i++) {
      const char =
      /* istanbul ignore next */
      (cov_147c59ekq0().s[110]++, str.charCodeAt(i));
      /* istanbul ignore next */
      cov_147c59ekq0().s[111]++;
      hash = (hash << 5) - hash + char;
      /* istanbul ignore next */
      cov_147c59ekq0().s[112]++;
      hash = hash & hash; // Convert to 32-bit integer
    }
    /* istanbul ignore next */
    cov_147c59ekq0().s[113]++;
    return hash;
  }
  /**
   * Calculate cosine similarity between two vectors
   */
  calculateCosineSimilarity(vector1, vector2) {
    /* istanbul ignore next */
    cov_147c59ekq0().f[16]++;
    cov_147c59ekq0().s[114]++;
    if (vector1.length !== vector2.length) {
      /* istanbul ignore next */
      cov_147c59ekq0().b[39][0]++;
      cov_147c59ekq0().s[115]++;
      console.warn('Vector lengths do not match');
      /* istanbul ignore next */
      cov_147c59ekq0().s[116]++;
      return 0;
    } else
    /* istanbul ignore next */
    {
      cov_147c59ekq0().b[39][1]++;
    }
    let dotProduct =
    /* istanbul ignore next */
    (cov_147c59ekq0().s[117]++, 0);
    let norm1 =
    /* istanbul ignore next */
    (cov_147c59ekq0().s[118]++, 0);
    let norm2 =
    /* istanbul ignore next */
    (cov_147c59ekq0().s[119]++, 0);
    /* istanbul ignore next */
    cov_147c59ekq0().s[120]++;
    for (let i =
    /* istanbul ignore next */
    (cov_147c59ekq0().s[121]++, 0); i < vector1.length; i++) {
      /* istanbul ignore next */
      cov_147c59ekq0().s[122]++;
      dotProduct += vector1[i] * vector2[i];
      /* istanbul ignore next */
      cov_147c59ekq0().s[123]++;
      norm1 += vector1[i] * vector1[i];
      /* istanbul ignore next */
      cov_147c59ekq0().s[124]++;
      norm2 += vector2[i] * vector2[i];
    }
    const magnitude =
    /* istanbul ignore next */
    (cov_147c59ekq0().s[125]++, Math.sqrt(norm1) * Math.sqrt(norm2));
    /* istanbul ignore next */
    cov_147c59ekq0().s[126]++;
    if (magnitude === 0) {
      /* istanbul ignore next */
      cov_147c59ekq0().b[40][0]++;
      cov_147c59ekq0().s[127]++;
      return 0;
    } else
    /* istanbul ignore next */
    {
      cov_147c59ekq0().b[40][1]++;
    }
    cov_147c59ekq0().s[128]++;
    return dotProduct / magnitude;
  }
  /**
   * Extract missing keywords from job description that aren't in resume
   */
  async extractMissingKeywords(resumeData, jobDescription) {
    /* istanbul ignore next */
    cov_147c59ekq0().f[17]++;
    // Extract keywords from job description
    const jobKeywords =
    /* istanbul ignore next */
    (cov_147c59ekq0().s[129]++, this.extractKeywordsFromText(jobDescription));
    // Extract keywords from resume
    const resumeText =
    /* istanbul ignore next */
    (cov_147c59ekq0().s[130]++, JSON.stringify(resumeData));
    const resumeKeywords =
    /* istanbul ignore next */
    (cov_147c59ekq0().s[131]++, this.extractKeywordsFromText(resumeText));
    // Find missing keywords
    const missingKeywords =
    /* istanbul ignore next */
    (cov_147c59ekq0().s[132]++, jobKeywords.filter(keyword => {
      /* istanbul ignore next */
      cov_147c59ekq0().f[18]++;
      cov_147c59ekq0().s[133]++;
      return !resumeKeywords.some(resumeKeyword => {
        /* istanbul ignore next */
        cov_147c59ekq0().f[19]++;
        cov_147c59ekq0().s[134]++;
        return /* istanbul ignore next */(cov_147c59ekq0().b[41][0]++, resumeKeyword.toLowerCase().includes(keyword.toLowerCase())) ||
        /* istanbul ignore next */
        (cov_147c59ekq0().b[41][1]++, keyword.toLowerCase().includes(resumeKeyword.toLowerCase()));
      });
    }));
    // Filter to keep only important keywords (remove common words)
    const importantKeywords =
    /* istanbul ignore next */
    (cov_147c59ekq0().s[135]++, missingKeywords.filter(keyword => {
      /* istanbul ignore next */
      cov_147c59ekq0().f[20]++;
      cov_147c59ekq0().s[136]++;
      return /* istanbul ignore next */(cov_147c59ekq0().b[42][0]++, keyword.length > 2) &&
      /* istanbul ignore next */
      (cov_147c59ekq0().b[42][1]++, !['the', 'and', 'for', 'are', 'but', 'not', 'you', 'all', 'can', 'had', 'her', 'was', 'one', 'our', 'out', 'day', 'had', 'has', 'his', 'how', 'man', 'new', 'now', 'old', 'see', 'two', 'who', 'boy', 'did', 'its', 'let', 'put', 'say', 'she', 'too', 'use'].includes(keyword.toLowerCase()));
    }));
    /* istanbul ignore next */
    cov_147c59ekq0().s[137]++;
    return importantKeywords.slice(0, 20); // Limit to top 20 missing keywords
  }
  /**
   * Extract keywords from text using simple NLP techniques
   */
  extractKeywordsFromText(text) {
    /* istanbul ignore next */
    cov_147c59ekq0().f[21]++;
    // Remove common punctuation and split into words
    const words =
    /* istanbul ignore next */
    (cov_147c59ekq0().s[138]++, text.toLowerCase().replace(/[^\w\s-]/g, ' ').split(/\s+/).filter(word => {
      /* istanbul ignore next */
      cov_147c59ekq0().f[22]++;
      cov_147c59ekq0().s[139]++;
      return word.length > 2;
    }));
    // Count word frequency
    const wordCount =
    /* istanbul ignore next */
    (cov_147c59ekq0().s[140]++, {});
    /* istanbul ignore next */
    cov_147c59ekq0().s[141]++;
    words.forEach(word => {
      /* istanbul ignore next */
      cov_147c59ekq0().f[23]++;
      cov_147c59ekq0().s[142]++;
      wordCount[word] = (
      /* istanbul ignore next */
      (cov_147c59ekq0().b[43][0]++, wordCount[word]) ||
      /* istanbul ignore next */
      (cov_147c59ekq0().b[43][1]++, 0)) + 1;
    });
    // Extract phrases (2-3 word combinations)
    const phrases =
    /* istanbul ignore next */
    (cov_147c59ekq0().s[143]++, []);
    /* istanbul ignore next */
    cov_147c59ekq0().s[144]++;
    for (let i =
    /* istanbul ignore next */
    (cov_147c59ekq0().s[145]++, 0); i < words.length - 1; i++) {
      const twoWordPhrase =
      /* istanbul ignore next */
      (cov_147c59ekq0().s[146]++, `${words[i]} ${words[i + 1]}`);
      /* istanbul ignore next */
      cov_147c59ekq0().s[147]++;
      phrases.push(twoWordPhrase);
      /* istanbul ignore next */
      cov_147c59ekq0().s[148]++;
      if (i < words.length - 2) {
        /* istanbul ignore next */
        cov_147c59ekq0().b[44][0]++;
        const threeWordPhrase =
        /* istanbul ignore next */
        (cov_147c59ekq0().s[149]++, `${words[i]} ${words[i + 1]} ${words[i + 2]}`);
        /* istanbul ignore next */
        cov_147c59ekq0().s[150]++;
        phrases.push(threeWordPhrase);
      } else
      /* istanbul ignore next */
      {
        cov_147c59ekq0().b[44][1]++;
      }
    }
    // Combine single words and phrases, sort by frequency/importance
    const allKeywords =
    /* istanbul ignore next */
    (cov_147c59ekq0().s[151]++, [...Object.keys(wordCount), ...phrases]);
    // Remove duplicates and sort by length (longer phrases first)
    const uniqueKeywords =
    /* istanbul ignore next */
    (cov_147c59ekq0().s[152]++, Array.from(new Set(allKeywords)).sort((a, b) => {
      /* istanbul ignore next */
      cov_147c59ekq0().f[24]++;
      cov_147c59ekq0().s[153]++;
      return b.length - a.length;
    }).slice(0, 100)); // Limit to top 100 keywords
    /* istanbul ignore next */
    cov_147c59ekq0().s[154]++;
    return uniqueKeywords;
  }
  /**
   * Enhance keyword analysis with industry-specific terms
   */
  async enhanceKeywordAnalysis(keywordAnalysis, resumeData, targetIndustry) {
    /* istanbul ignore next */
    cov_147c59ekq0().f[25]++;
    const industryData =
    /* istanbul ignore next */
    (cov_147c59ekq0().s[155]++, INDUSTRY_TAXONOMIES[targetIndustry]);
    /* istanbul ignore next */
    cov_147c59ekq0().s[156]++;
    if (!industryData) {
      /* istanbul ignore next */
      cov_147c59ekq0().b[45][0]++;
      cov_147c59ekq0().s[157]++;
      return keywordAnalysis;
    } else
    /* istanbul ignore next */
    {
      cov_147c59ekq0().b[45][1]++;
    }
    // Check for industry-specific keywords
    const industryKeywords =
    /* istanbul ignore next */
    (cov_147c59ekq0().s[158]++, []);
    const resumeText =
    /* istanbul ignore next */
    (cov_147c59ekq0().s[159]++, JSON.stringify(resumeData).toLowerCase());
    // Check technical frameworks/tools
    /* istanbul ignore next */
    cov_147c59ekq0().s[160]++;
    Object.entries(industryData).forEach(([category, keywords]) => {
      /* istanbul ignore next */
      cov_147c59ekq0().f[26]++;
      cov_147c59ekq0().s[161]++;
      keywords.forEach(keyword => {
        /* istanbul ignore next */
        cov_147c59ekq0().f[27]++;
        const isPresent =
        /* istanbul ignore next */
        (cov_147c59ekq0().s[162]++, resumeText.includes(keyword.toLowerCase()));
        /* istanbul ignore next */
        cov_147c59ekq0().s[163]++;
        industryKeywords.push({
          keyword,
          importance: this.getKeywordImportance(keyword, category),
          category: this.mapCategoryType(category),
          frequency: isPresent ?
          /* istanbul ignore next */
          (cov_147c59ekq0().b[46][0]++, 1) :
          /* istanbul ignore next */
          (cov_147c59ekq0().b[46][1]++, 0),
          variations: this.getKeywordVariations(keyword)
        });
      });
    });
    /* istanbul ignore next */
    cov_147c59ekq0().s[164]++;
    return Object.assign(Object.assign({}, keywordAnalysis), {
      industryKeywords,
      totalKeywords: keywordAnalysis.totalKeywords + industryKeywords.length
    });
  }
  /**
   * Enhance industry alignment analysis
   */
  async enhanceIndustryAlignment(industryAlignment, skills, targetIndustry) {
    /* istanbul ignore next */
    cov_147c59ekq0().f[28]++;
    const industryData =
    /* istanbul ignore next */
    (cov_147c59ekq0().s[165]++, INDUSTRY_TAXONOMIES[targetIndustry]);
    /* istanbul ignore next */
    cov_147c59ekq0().s[166]++;
    if (!industryData) {
      /* istanbul ignore next */
      cov_147c59ekq0().b[47][0]++;
      cov_147c59ekq0().s[167]++;
      return industryAlignment;
    } else
    /* istanbul ignore next */
    {
      cov_147c59ekq0().b[47][1]++;
    }
    const allIndustrySkills =
    /* istanbul ignore next */
    (cov_147c59ekq0().s[168]++, Object.values(industryData).flat());
    const skillsLower =
    /* istanbul ignore next */
    (cov_147c59ekq0().s[169]++, skills.map(s => {
      /* istanbul ignore next */
      cov_147c59ekq0().f[29]++;
      cov_147c59ekq0().s[170]++;
      return s.toLowerCase();
    }));
    const wellAligned =
    /* istanbul ignore next */
    (cov_147c59ekq0().s[171]++, allIndustrySkills.filter(industrySkill => {
      /* istanbul ignore next */
      cov_147c59ekq0().f[30]++;
      cov_147c59ekq0().s[172]++;
      return skillsLower.some(skill => {
        /* istanbul ignore next */
        cov_147c59ekq0().f[31]++;
        cov_147c59ekq0().s[173]++;
        return /* istanbul ignore next */(cov_147c59ekq0().b[48][0]++, skill.includes(industrySkill.toLowerCase())) ||
        /* istanbul ignore next */
        (cov_147c59ekq0().b[48][1]++, industrySkill.toLowerCase().includes(skill));
      });
    }));
    const missing =
    /* istanbul ignore next */
    (cov_147c59ekq0().s[174]++, allIndustrySkills.filter(industrySkill => {
      /* istanbul ignore next */
      cov_147c59ekq0().f[32]++;
      cov_147c59ekq0().s[175]++;
      return !skillsLower.some(skill => {
        /* istanbul ignore next */
        cov_147c59ekq0().f[33]++;
        cov_147c59ekq0().s[176]++;
        return /* istanbul ignore next */(cov_147c59ekq0().b[49][0]++, skill.includes(industrySkill.toLowerCase())) ||
        /* istanbul ignore next */
        (cov_147c59ekq0().b[49][1]++, industrySkill.toLowerCase().includes(skill));
      });
    }));
    /* istanbul ignore next */
    cov_147c59ekq0().s[177]++;
    return Object.assign(Object.assign({}, industryAlignment), {
      wellAlignedSkills: [...new Set([...industryAlignment.wellAlignedSkills, ...wellAligned])],
      missingIndustrySkills: [...new Set([...industryAlignment.missingIndustrySkills, ...missing.slice(0, 10)])],
      score: Math.round(wellAligned.length / allIndustrySkills.length * 100)
    });
  }
  /**
   * Get keyword importance based on category and context
   */
  getKeywordImportance(keyword, category) {
    /* istanbul ignore next */
    cov_147c59ekq0().f[34]++;
    cov_147c59ekq0().s[178]++;
    // High-importance categories
    if (['frameworks', 'languages', 'regulations'].includes(category)) {
      /* istanbul ignore next */
      cov_147c59ekq0().b[50][0]++;
      cov_147c59ekq0().s[179]++;
      return 'high';
    } else
    /* istanbul ignore next */
    {
      cov_147c59ekq0().b[50][1]++;
    }
    // Medium-importance categories
    cov_147c59ekq0().s[180]++;
    if (['tools', 'platforms'].includes(category)) {
      /* istanbul ignore next */
      cov_147c59ekq0().b[51][0]++;
      cov_147c59ekq0().s[181]++;
      return 'medium';
    } else
    /* istanbul ignore next */
    {
      cov_147c59ekq0().b[51][1]++;
    }
    // Default to low importance
    cov_147c59ekq0().s[182]++;
    return 'low';
  }
  /**
   * Map category names to standard types
   */
  mapCategoryType(category) {
    /* istanbul ignore next */
    cov_147c59ekq0().f[35]++;
    const technicalCategories =
    /* istanbul ignore next */
    (cov_147c59ekq0().s[183]++, ['frameworks', 'languages', 'tools', 'platforms', 'systems']);
    const industryCategories =
    /* istanbul ignore next */
    (cov_147c59ekq0().s[184]++, ['regulations', 'concepts', 'metrics']);
    /* istanbul ignore next */
    cov_147c59ekq0().s[185]++;
    if (technicalCategories.includes(category)) {
      /* istanbul ignore next */
      cov_147c59ekq0().b[52][0]++;
      cov_147c59ekq0().s[186]++;
      return 'technical';
    } else
    /* istanbul ignore next */
    {
      cov_147c59ekq0().b[52][1]++;
    }
    cov_147c59ekq0().s[187]++;
    if (industryCategories.includes(category)) {
      /* istanbul ignore next */
      cov_147c59ekq0().b[53][0]++;
      cov_147c59ekq0().s[188]++;
      return 'industry';
    } else
    /* istanbul ignore next */
    {
      cov_147c59ekq0().b[53][1]++;
    }
    cov_147c59ekq0().s[189]++;
    return 'role';
  }
  /**
   * Get common variations of a keyword
   */
  getKeywordVariations(keyword) {
    /* istanbul ignore next */
    cov_147c59ekq0().f[36]++;
    // Common variations and synonyms
    const variations =
    /* istanbul ignore next */
    (cov_147c59ekq0().s[190]++, {
      'React': ['React.js', 'ReactJS', 'React JS'],
      'Node.js': ['NodeJS', 'Node', 'Node JS'],
      'JavaScript': ['JS', 'Javascript', 'ECMAScript'],
      'TypeScript': ['TS', 'Typescript'],
      'Python': ['py'],
      'Docker': ['Containerization'],
      'Kubernetes': ['K8s', 'K8S'],
      'AWS': ['Amazon Web Services'],
      'Azure': ['Microsoft Azure']
    });
    /* istanbul ignore next */
    cov_147c59ekq0().s[191]++;
    return /* istanbul ignore next */(cov_147c59ekq0().b[54][0]++, variations[keyword]) ||
    /* istanbul ignore next */
    (cov_147c59ekq0().b[54][1]++, [keyword]);
  }
}
// Export singleton instance
/* istanbul ignore next */
cov_147c59ekq0().s[192]++;
exports.atsOptimizationService = new ATSOptimizationService();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,