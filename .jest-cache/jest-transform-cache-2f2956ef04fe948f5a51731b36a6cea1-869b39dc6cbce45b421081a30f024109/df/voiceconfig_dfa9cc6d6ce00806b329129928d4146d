1b330551e1391e21c0c70d33f9c1aed9
"use strict";

/**
 * Voice System Configuration
 * Centralized configuration for optimized voice interaction parameters
 */
/* istanbul ignore next */
function cov_2mt8kqaspt() {
  var path = "/Users/dikshantvashistha/PrepBettr/lib/config/voice-config.ts";
  var hash = "2797252aa4221cf495b4d104bff483be3dd75b45";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dikshantvashistha/PrepBettr/lib/config/voice-config.ts",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 62
        }
      },
      "1": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 7,
          column: 165
        }
      },
      "2": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 56,
          column: 2
        }
      },
      "3": {
        start: {
          line: 60,
          column: 0
        },
        end: {
          line: 76,
          column: 2
        }
      },
      "4": {
        start: {
          line: 80,
          column: 0
        },
        end: {
          line: 99,
          column: 2
        }
      },
      "5": {
        start: {
          line: 103,
          column: 0
        },
        end: {
          line: 111,
          column: 2
        }
      },
      "6": {
        start: {
          line: 115,
          column: 0
        },
        end: {
          line: 121,
          column: 2
        }
      },
      "7": {
        start: {
          line: 122,
          column: 0
        },
        end: {
          line: 122,
          column: 49
        }
      }
    },
    fnMap: {},
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    f: {},
    b: {},
    inputSourceMap: {
      file: "/Users/dikshantvashistha/PrepBettr/lib/config/voice-config.ts",
      mappings: ";AAAA;;;GAGG;;;AA8CU,QAAA,sBAAsB,GAAgB;IACjD,MAAM,EAAE;QACN,WAAW,EAAE;YACX,QAAQ,EAAE,OAAO;YACjB,uBAAuB,EAAE,IAAI;YAC7B,mBAAmB,EAAE,IAAI;YACzB,4BAA4B,EAAE,IAAI;YAClC,iBAAiB,EAAE,IAAI;YACvB,qBAAqB,EAAE,IAAI;YAC3B,eAAe,EAAE,cAAc;SAChC;QACD,SAAS,EAAE;YACT,YAAY,EAAE,kBAAkB;YAChC,iBAAiB,EAAE;gBACjB,kBAAkB;gBAClB,iBAAiB;gBACjB,mBAAmB;gBACnB,mBAAmB;gBACnB,mBAAmB;aACpB;YACD,YAAY,EAAE,6BAA6B;YAC3C,WAAW,EAAE,KAAK;YAClB,YAAY,EAAE,KAAK;YACnB,WAAW,EAAE,IAAI;SAClB;KACF;IACD,MAAM,EAAE;QACN,YAAY,EAAE;YACZ,WAAW,EAAE,GAAG;YAChB,SAAS,EAAE,GAAG;YACd,IAAI,EAAE,GAAG;YACT,gBAAgB,EAAE,GAAG;YACrB,eAAe,EAAE,GAAG;YACpB,oBAAoB,EAAE,yBAAyB;SAChD;QACD,SAAS,EAAE;YACT,mBAAmB,EAAE,CAAC;YACtB,iBAAiB,EAAE,KAAK;YACxB,aAAa,EAAE,CAAC;SACjB;KACF;IACD,WAAW,EAAE;QACX,cAAc,EAAE,IAAI;QACpB,kBAAkB,EAAE,MAAM,EAAE,YAAY;QACxC,sBAAsB,EAAE,IAAI;QAC5B,cAAc,EAAE,KAAK,EAAE,wCAAwC;QAC/D,UAAU,EAAE,MAAM,EAAE,YAAY;KACjC;CACF,CAAC;AAEF;;GAEG;AACU,QAAA,qBAAqB,GAAG;IACnC,YAAY,EAAE;QACZ,YAAY,EAAE,8BAA8B;QAC5C,IAAI,EAAE,KAAK;QACX,UAAU,EAAE,IAAI;KACjB;IACD,QAAQ,EAAE;QACR,YAAY,EAAE,6BAA6B;QAC3C,IAAI,EAAE,KAAK;QACX,UAAU,EAAE,IAAI;KACjB;IACD,aAAa,EAAE;QACb,YAAY,EAAE,6BAA6B;QAC3C,IAAI,EAAE,KAAK;QACX,UAAU,EAAE,KAAK;KAClB;CACF,CAAC;AAEF;;GAEG;AACU,QAAA,sBAAsB,GAAG;IACpC,SAAS,EAAE;QACT,YAAY,EAAE,EAAE;QAChB,6BAA6B,EAAE,IAAI;QACnC,kBAAkB,EAAE,KAAK,EAAE,sCAAsC;QACjE,mBAAmB,EAAE,GAAG;KACzB;IACD,UAAU,EAAE;QACV,YAAY,EAAE,CAAC;QACf,mBAAmB,EAAE,IAAI;QACzB,+BAA+B,EAAE,IAAI;QACrC,mBAAmB,EAAE,GAAG;KACzB;IACD,OAAO,EAAE;QACP,YAAY,EAAE,CAAC;QACf,qBAAqB,EAAE,IAAI;QAC3B,iBAAiB,EAAE,IAAI;QACvB,mBAAmB,EAAE,GAAG;KACzB;CACF,CAAC;AAEF;;GAEG;AACU,QAAA,qBAAqB,GAAG;IACnC,UAAU,EAAE,CAAC;IACb,YAAY,EAAE,IAAI;IAClB,iBAAiB,EAAE,CAAC;IACpB,wBAAwB,EAAE,KAAK;IAC/B,sBAAsB,EAAE,KAAK;IAC7B,aAAa,EAAE,KAAK;IACpB,mBAAmB,EAAE,IAAI;CAC1B,CAAC;AAEF;;GAEG;AACU,QAAA,iBAAiB,GAAG;IAC/B,QAAQ,EAAE,MAAM;IAChB,wBAAwB,EAAE,IAAI;IAC9B,oBAAoB,EAAE,KAAK,EAAE,kBAAkB;IAC/C,mBAAmB,EAAE,IAAI;IACzB,eAAe,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,EAAE,WAAW;CAClD,CAAC;AAEF,kBAAe,8BAAsB,CAAC",
      names: [],
      sources: ["/Users/dikshantvashistha/PrepBettr/lib/config/voice-config.ts"],
      sourcesContent: ["/**\n * Voice System Configuration\n * Centralized configuration for optimized voice interaction parameters\n */\n\nexport interface VoiceConfig {\n  speech: {\n    recognition: {\n      language: string;\n      initialSilenceTimeoutMs: number;\n      endSilenceTimeoutMs: number;\n      segmentationSilenceTimeoutMs: number;\n      enableDiarization: boolean;\n      enableDetailedResults: boolean;\n      recognitionMode: string;\n    };\n    synthesis: {\n      defaultVoice: string;\n      alternativeVoices: string[];\n      outputFormat: string;\n      defaultRate: string;\n      defaultPitch: string;\n      ssmlEnabled: boolean;\n    };\n  };\n  openai: {\n    conversation: {\n      temperature: number;\n      maxTokens: number;\n      topP: number;\n      frequencyPenalty: number;\n      presencePenalty: number;\n      systemPromptTemplate: string;\n    };\n    interview: {\n      defaultMaxQuestions: number;\n      responseTimeoutMs: number;\n      retryAttempts: number;\n    };\n  };\n  performance: {\n    audioChunkSize: number;\n    maxAudioDurationMs: number;\n    enableAudioCompression: boolean;\n    cacheResponses: boolean;\n    cacheTtlMs: number;\n  };\n}\n\nexport const OPTIMIZED_VOICE_CONFIG: VoiceConfig = {\n  speech: {\n    recognition: {\n      language: 'en-US',\n      initialSilenceTimeoutMs: 5000,\n      endSilenceTimeoutMs: 2000,\n      segmentationSilenceTimeoutMs: 2000,\n      enableDiarization: true,\n      enableDetailedResults: true,\n      recognitionMode: 'CONVERSATION',\n    },\n    synthesis: {\n      defaultVoice: 'en-US-AriaNeural',\n      alternativeVoices: [\n        'en-US-SaraNeural',\n        'en-US-GuyNeural',\n        'en-US-JennyNeural',\n        'en-US-DavisNeural',\n        'en-US-AmberNeural'\n      ],\n      outputFormat: 'Audio24Khz48KBitRateMonoMp3',\n      defaultRate: '1.0',\n      defaultPitch: '0Hz',\n      ssmlEnabled: true,\n    },\n  },\n  openai: {\n    conversation: {\n      temperature: 0.7,\n      maxTokens: 200,\n      topP: 0.9,\n      frequencyPenalty: 0.1,\n      presencePenalty: 0.1,\n      systemPromptTemplate: 'enhanced_interviewer_v2',\n    },\n    interview: {\n      defaultMaxQuestions: 8,\n      responseTimeoutMs: 30000,\n      retryAttempts: 3,\n    },\n  },\n  performance: {\n    audioChunkSize: 4096,\n    maxAudioDurationMs: 300000, // 5 minutes\n    enableAudioCompression: true,\n    cacheResponses: false, // Disable for dynamic interview content\n    cacheTtlMs: 300000, // 5 minutes\n  },\n};\n\n/**\n * Voice quality presets for different scenarios\n */\nexport const VOICE_QUALITY_PRESETS = {\n  HIGH_QUALITY: {\n    outputFormat: 'Audio48Khz192KBitRateMonoMp3',\n    rate: '0.9',\n    enableSSML: true,\n  },\n  BALANCED: {\n    outputFormat: 'Audio24Khz48KBitRateMonoMp3',\n    rate: '1.0',\n    enableSSML: true,\n  },\n  FAST_RESPONSE: {\n    outputFormat: 'Audio16Khz32KBitRateMonoMp3',\n    rate: '1.1',\n    enableSSML: false,\n  },\n};\n\n/**\n * Interview type specific configurations\n */\nexport const INTERVIEW_TYPE_CONFIGS = {\n  technical: {\n    maxQuestions: 10,\n    questionComplexityProgression: true,\n    enableCodeSnippets: false, // For now, focus on verbal discussion\n    followUpProbability: 0.8,\n  },\n  behavioral: {\n    maxQuestions: 8,\n    starMethodPrompting: true,\n    emotionalIntelligenceAssessment: true,\n    followUpProbability: 0.9,\n  },\n  general: {\n    maxQuestions: 6,\n    personalityAssessment: true,\n    cultureAssessment: true,\n    followUpProbability: 0.7,\n  },\n};\n\n/**\n * Error handling and retry configurations\n */\nexport const ERROR_HANDLING_CONFIG = {\n  maxRetries: 3,\n  retryDelayMs: 1000,\n  backoffMultiplier: 2,\n  speechRecognitionTimeout: 30000,\n  speechSynthesisTimeout: 15000,\n  openaiTimeout: 30000,\n  gracefulDegradation: true,\n};\n\n/**\n * Monitoring and analytics configuration\n */\nexport const MONITORING_CONFIG = {\n  logLevel: 'info',\n  enablePerformanceMetrics: true,\n  enableUsageAnalytics: false, // Respect privacy\n  enableErrorTracking: true,\n  maxLogRetention: 24 * 60 * 60 * 1000, // 24 hours\n};\n\nexport default OPTIMIZED_VOICE_CONFIG;\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "2797252aa4221cf495b4d104bff483be3dd75b45"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2mt8kqaspt = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2mt8kqaspt();
cov_2mt8kqaspt().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2mt8kqaspt().s[1]++;
exports.MONITORING_CONFIG = exports.ERROR_HANDLING_CONFIG = exports.INTERVIEW_TYPE_CONFIGS = exports.VOICE_QUALITY_PRESETS = exports.OPTIMIZED_VOICE_CONFIG = void 0;
/* istanbul ignore next */
cov_2mt8kqaspt().s[2]++;
exports.OPTIMIZED_VOICE_CONFIG = {
  speech: {
    recognition: {
      language: 'en-US',
      initialSilenceTimeoutMs: 5000,
      endSilenceTimeoutMs: 2000,
      segmentationSilenceTimeoutMs: 2000,
      enableDiarization: true,
      enableDetailedResults: true,
      recognitionMode: 'CONVERSATION'
    },
    synthesis: {
      defaultVoice: 'en-US-AriaNeural',
      alternativeVoices: ['en-US-SaraNeural', 'en-US-GuyNeural', 'en-US-JennyNeural', 'en-US-DavisNeural', 'en-US-AmberNeural'],
      outputFormat: 'Audio24Khz48KBitRateMonoMp3',
      defaultRate: '1.0',
      defaultPitch: '0Hz',
      ssmlEnabled: true
    }
  },
  openai: {
    conversation: {
      temperature: 0.7,
      maxTokens: 200,
      topP: 0.9,
      frequencyPenalty: 0.1,
      presencePenalty: 0.1,
      systemPromptTemplate: 'enhanced_interviewer_v2'
    },
    interview: {
      defaultMaxQuestions: 8,
      responseTimeoutMs: 30000,
      retryAttempts: 3
    }
  },
  performance: {
    audioChunkSize: 4096,
    maxAudioDurationMs: 300000,
    // 5 minutes
    enableAudioCompression: true,
    cacheResponses: false,
    // Disable for dynamic interview content
    cacheTtlMs: 300000 // 5 minutes
  }
};
/**
 * Voice quality presets for different scenarios
 */
/* istanbul ignore next */
cov_2mt8kqaspt().s[3]++;
exports.VOICE_QUALITY_PRESETS = {
  HIGH_QUALITY: {
    outputFormat: 'Audio48Khz192KBitRateMonoMp3',
    rate: '0.9',
    enableSSML: true
  },
  BALANCED: {
    outputFormat: 'Audio24Khz48KBitRateMonoMp3',
    rate: '1.0',
    enableSSML: true
  },
  FAST_RESPONSE: {
    outputFormat: 'Audio16Khz32KBitRateMonoMp3',
    rate: '1.1',
    enableSSML: false
  }
};
/**
 * Interview type specific configurations
 */
/* istanbul ignore next */
cov_2mt8kqaspt().s[4]++;
exports.INTERVIEW_TYPE_CONFIGS = {
  technical: {
    maxQuestions: 10,
    questionComplexityProgression: true,
    enableCodeSnippets: false,
    // For now, focus on verbal discussion
    followUpProbability: 0.8
  },
  behavioral: {
    maxQuestions: 8,
    starMethodPrompting: true,
    emotionalIntelligenceAssessment: true,
    followUpProbability: 0.9
  },
  general: {
    maxQuestions: 6,
    personalityAssessment: true,
    cultureAssessment: true,
    followUpProbability: 0.7
  }
};
/**
 * Error handling and retry configurations
 */
/* istanbul ignore next */
cov_2mt8kqaspt().s[5]++;
exports.ERROR_HANDLING_CONFIG = {
  maxRetries: 3,
  retryDelayMs: 1000,
  backoffMultiplier: 2,
  speechRecognitionTimeout: 30000,
  speechSynthesisTimeout: 15000,
  openaiTimeout: 30000,
  gracefulDegradation: true
};
/**
 * Monitoring and analytics configuration
 */
/* istanbul ignore next */
cov_2mt8kqaspt().s[6]++;
exports.MONITORING_CONFIG = {
  logLevel: 'info',
  enablePerformanceMetrics: true,
  enableUsageAnalytics: false,
  // Respect privacy
  enableErrorTracking: true,
  maxLogRetention: 24 * 60 * 60 * 1000 // 24 hours
};
/* istanbul ignore next */
cov_2mt8kqaspt().s[7]++;
exports.default = exports.OPTIMIZED_VOICE_CONFIG;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,