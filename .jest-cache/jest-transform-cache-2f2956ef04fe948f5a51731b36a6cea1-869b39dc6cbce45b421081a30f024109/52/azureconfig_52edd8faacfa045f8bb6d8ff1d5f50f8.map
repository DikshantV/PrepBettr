{"version":3,"names":["cov_2gkmfq21ic","actualCoverage","s","exports","fetchAzureSecrets","initializeAzureEnvironment","getAzureConfig","identity_1","require","keyvault_secrets_1","AZURE_KEY_VAULT_URI","b","process","env","cachedSecrets","createKeyVaultClient","f","Error","credential","DefaultAzureCredential","SecretClient","error","console","log","client","secretsPromises","getSecret","catch","secretsResults","Promise","all","speechKey","speechEndpoint","azureOpenAIKey","azureOpenAIEndpoint","azureOpenAIDeployment","azureOpenAIGpt35","azureOpenAIGpt4o","storageAccountName","storageAccountKey","formRecognizerEndpoint","formRecognizerKey","sendgridApiKey","sendgridFromEmail","value","azureOpenAIGpt35Deployment","azureOpenAIGpt4oDeployment","azureStorageAccountName","azureStorageAccountKey","azureFormRecognizerEndpoint","azureFormRecognizerKey","processEnv","fallbackSecrets","warn","secrets","keyVaultUri","hasSecretsCache","environment","deployments","default","gpt35Turbo","gpt4o"],"sources":["/Users/dikshantvashistha/PrepBettr/azure/lib/azure-config.ts"],"sourcesContent":["import { DefaultAzureCredential } from '@azure/identity';\nimport { SecretClient } from '@azure/keyvault-secrets';\n\n// Azure Key Vault configuration\nconst AZURE_KEY_VAULT_URI = process.env.AZURE_KEY_VAULT_URI || 'https://prepbettr-keyvault-083.vault.azure.net/';\n\ninterface AzureSecrets {\n  speechKey: string;\n  speechEndpoint: string;\n  azureOpenAIKey: string;\n  azureOpenAIEndpoint: string;\n  azureOpenAIDeployment: string;\n  azureOpenAIGpt35Deployment?: string; // gpt-35-turbo deployment\n  azureOpenAIGpt4oDeployment?: string; // gpt-4o deployment\n  azureStorageAccountName?: string; // Azure Storage Account Name\n  azureStorageAccountKey?: string; // Azure Storage Account Key\n  azureFormRecognizerEndpoint?: string; // Azure Form Recognizer Endpoint\n  azureFormRecognizerKey?: string; // Azure Form Recognizer Key\n  sendgridApiKey?: string; // SendGrid API Key\n  sendgridFromEmail?: string; // SendGrid From Email\n}\n\nlet cachedSecrets: AzureSecrets | null = null;\n\n/**\n * Initialize Azure Key Vault client\n */\nfunction createKeyVaultClient(): SecretClient {\n  if (!AZURE_KEY_VAULT_URI) {\n    throw new Error('AZURE_KEY_VAULT_URI environment variable is required');\n  }\n  \n  try {\n    const credential = new DefaultAzureCredential();\n    return new SecretClient(AZURE_KEY_VAULT_URI, credential);\n  } catch (error) {\n    console.error('‚ùå Failed to create DefaultAzureCredential:', error);\n    console.error('üí° Hint: Ensure you are logged in with \"az login\" for local development');\n    throw error;\n  }\n}\n\n/**\n * Fetch secrets from Azure Key Vault\n */\nexport async function fetchAzureSecrets(): Promise<AzureSecrets> {\n  // Return cached secrets if available\n  if (cachedSecrets) {\n    return cachedSecrets;\n  }\n\n  try {\n    console.log('üîë Fetching secrets from Azure Key Vault...');\n    const client = createKeyVaultClient();\n\n    // Fetch all required secrets - breaking into smaller groups to avoid transpilation issues\n    // Group 1: Speech and OpenAI base secrets\n    const secretsPromises = [\n      client.getSecret('speech-key'),\n      client.getSecret('speech-endpoint'),\n      client.getSecret('azure-openai-key'),\n      client.getSecret('azure-openai-endpoint'),\n      client.getSecret('azure-openai-deployment'),\n      client.getSecret('azure-openai-gpt35-deployment').catch(() => null), // Optional\n      client.getSecret('azure-openai-gpt4o-deployment').catch(() => null),  // Optional\n      client.getSecret('azure-storage-account-name').catch(() => null), // Optional\n      client.getSecret('azure-storage-account-key').catch(() => null), // Optional\n      client.getSecret('azure-form-recognizer-endpoint').catch(() => null), // Optional\n      client.getSecret('azure-form-recognizer-key').catch(() => null), // Optional\n      client.getSecret('sendgrid-api-key').catch(() => null), // Optional\n      client.getSecret('sendgrid-from-email').catch(() => null) // Optional\n    ];\n    \n    const secretsResults = await Promise.all(secretsPromises);\n    \n    // Extract secrets from results\n    const speechKey = secretsResults[0];\n    const speechEndpoint = secretsResults[1];\n    const azureOpenAIKey = secretsResults[2];\n    const azureOpenAIEndpoint = secretsResults[3];\n    const azureOpenAIDeployment = secretsResults[4];\n    const azureOpenAIGpt35 = secretsResults[5];\n    const azureOpenAIGpt4o = secretsResults[6];\n    const storageAccountName = secretsResults[7];\n    const storageAccountKey = secretsResults[8];\n    const formRecognizerEndpoint = secretsResults[9];\n    const formRecognizerKey = secretsResults[10];\n    const sendgridApiKey = secretsResults[11];\n    const sendgridFromEmail = secretsResults[12];\n\n    if (!speechKey?.value || !speechEndpoint?.value || !azureOpenAIKey?.value || !azureOpenAIEndpoint?.value || !azureOpenAIDeployment?.value) {\n      throw new Error('One or more required secrets are missing from Azure Key Vault');\n    }\n\n    cachedSecrets = {\n      speechKey: speechKey.value,\n      speechEndpoint: speechEndpoint.value,\n      azureOpenAIKey: azureOpenAIKey.value,\n      azureOpenAIEndpoint: azureOpenAIEndpoint.value,\n      azureOpenAIDeployment: azureOpenAIDeployment.value,\n      azureOpenAIGpt35Deployment: azureOpenAIGpt35?.value || 'gpt-4o',\n      azureOpenAIGpt4oDeployment: azureOpenAIGpt4o?.value || 'gpt-4o',\n      azureStorageAccountName: storageAccountName?.value,\n      azureStorageAccountKey: storageAccountKey?.value,\n      azureFormRecognizerEndpoint: formRecognizerEndpoint?.value,\n      azureFormRecognizerKey: formRecognizerKey?.value,\n      sendgridApiKey: sendgridApiKey?.value,\n      sendgridFromEmail: sendgridFromEmail?.value\n    };\n\n    console.log('‚úÖ Azure secrets loaded successfully');\n    return cachedSecrets;\n\n  } catch (error) {\n    console.error('‚ùå Failed to fetch Azure secrets:', error);\n    \n    // Fallback to environment variables if Key Vault fails\n    console.log('üîÑ Falling back to environment variables...');\n    const processEnv = process.env as any;\n    const fallbackSecrets = {\n      speechKey: processEnv['SPEECH_KEY'] || processEnv['NEXT_PUBLIC_SPEECH_KEY'] || '',\n      speechEndpoint: processEnv['SPEECH_ENDPOINT'] || processEnv['NEXT_PUBLIC_SPEECH_ENDPOINT'] || '',\n      azureOpenAIKey: processEnv['AZURE_OPENAI_KEY'] || '',\n      azureOpenAIEndpoint: processEnv['AZURE_OPENAI_ENDPOINT'] || '',\n      azureOpenAIDeployment: processEnv['AZURE_OPENAI_DEPLOYMENT'] || '',\n      azureOpenAIGpt35Deployment: processEnv['AZURE_OPENAI_GPT35_DEPLOYMENT'] || 'gpt-4o',\n      azureOpenAIGpt4oDeployment: processEnv['AZURE_OPENAI_GPT4O_DEPLOYMENT'] || 'gpt-4o',\n      azureStorageAccountName: processEnv['AZURE_STORAGE_ACCOUNT_NAME'],\n      azureStorageAccountKey: processEnv['AZURE_STORAGE_ACCOUNT_KEY'],\n      azureFormRecognizerEndpoint: processEnv['AZURE_FORM_RECOGNIZER_ENDPOINT'],\n      azureFormRecognizerKey: processEnv['AZURE_FORM_RECOGNIZER_KEY'],\n      sendgridApiKey: processEnv['SENDGRID_API_KEY'],\n      sendgridFromEmail: processEnv['SENDGRID_FROM_EMAIL']\n    };\n\n    if (!fallbackSecrets.speechKey || !fallbackSecrets.azureOpenAIKey) {\n      console.warn('‚ö†Ô∏è Some secrets are missing from both Key Vault and environment variables');\n    }\n\n    cachedSecrets = fallbackSecrets;\n    return cachedSecrets;\n  }\n}\n\n/**\n * Initialize environment variables from Azure Key Vault\n * This should be called at application startup\n */\nexport async function initializeAzureEnvironment(): Promise<void> {\n  try {\n    const secrets = await fetchAzureSecrets();\n    \n    // Set environment variables for the application (using dynamic property assignment to avoid webpack replacement)\n    const processEnv = process.env as any;\n    processEnv['NEXT_PUBLIC_SPEECH_KEY'] = secrets.speechKey;\n    processEnv['NEXT_PUBLIC_SPEECH_ENDPOINT'] = secrets.speechEndpoint;\n    processEnv['AZURE_OPENAI_KEY'] = secrets.azureOpenAIKey;\n    processEnv['AZURE_OPENAI_ENDPOINT'] = secrets.azureOpenAIEndpoint;\n    processEnv['AZURE_OPENAI_DEPLOYMENT'] = secrets.azureOpenAIDeployment;\n    processEnv['AZURE_OPENAI_GPT35_DEPLOYMENT'] = secrets.azureOpenAIGpt35Deployment;\n    processEnv['AZURE_OPENAI_GPT4O_DEPLOYMENT'] = secrets.azureOpenAIGpt4oDeployment;\n    \n    // Set SendGrid environment variables if available\n    if (secrets.sendgridApiKey) {\n      processEnv['SENDGRID_API_KEY'] = secrets.sendgridApiKey;\n    }\n    if (secrets.sendgridFromEmail) {\n      processEnv['SENDGRID_FROM_EMAIL'] = secrets.sendgridFromEmail;\n    }\n\n    // Note: NEXT_PUBLIC_* variables are already handled by .env.local and don't need to be set here\n    // Avoid setting them dynamically to prevent webpack build-time replacement conflicts\n\n    console.log('üåü Azure environment initialized successfully');\n  } catch (error) {\n    console.error('‚ùå Failed to initialize Azure environment:', error);\n    throw error;\n  }\n}\n\n/**\n * Get current Azure configuration (for debugging)\n */\nexport function getAzureConfig() {\n  const processEnv = process.env as any;\n  return {\n    keyVaultUri: AZURE_KEY_VAULT_URI,\n    hasSecretsCache: !!cachedSecrets,\n    environment: {\n      speechKey: !!processEnv['NEXT_PUBLIC_SPEECH_KEY'],\n      speechEndpoint: !!processEnv['NEXT_PUBLIC_SPEECH_ENDPOINT'],\n      azureOpenAIKey: !!processEnv['AZURE_OPENAI_KEY'],\n      azureOpenAIEndpoint: !!processEnv['AZURE_OPENAI_ENDPOINT'],\n      azureOpenAIDeployment: !!processEnv['AZURE_OPENAI_DEPLOYMENT'],\n      azureOpenAIGpt35Deployment: !!processEnv['AZURE_OPENAI_GPT35_DEPLOYMENT'],\n      azureOpenAIGpt4oDeployment: !!processEnv['AZURE_OPENAI_GPT4O_DEPLOYMENT']\n    },\n    deployments: {\n      default: processEnv['AZURE_OPENAI_DEPLOYMENT'],\n      gpt35Turbo: processEnv['AZURE_OPENAI_GPT35_DEPLOYMENT'] || 'gpt-4o',\n      gpt4o: processEnv['AZURE_OPENAI_GPT4O_DEPLOYMENT'] || 'gpt-4o'\n    }\n  };\n}\n"],"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","ignoreList":[]}