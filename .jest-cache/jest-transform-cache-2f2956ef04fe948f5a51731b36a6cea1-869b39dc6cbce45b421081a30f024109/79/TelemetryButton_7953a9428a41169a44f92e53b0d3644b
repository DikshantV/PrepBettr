56850e019cbdbeeb7ad71bc5693b1902
/* istanbul ignore next */
"use strict";
"use client";

/* istanbul ignore next */
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TelemetryButton = TelemetryButton;
exports.default = void 0;
var
/* istanbul ignore next */
_react = _interopRequireDefault(require("react"));
var
/* istanbul ignore next */
_button = require("@/components/ui/button");
var
/* istanbul ignore next */
_TelemetryProvider = require("@/components/providers/TelemetryProvider");
/* istanbul ignore next */
var _jsxRuntime = require("react/jsx-runtime");
function cov_120abszsi2() {
  var path = "/Users/dikshantvashistha/PrepBettr/components/ui/TelemetryButton.tsx";
  var hash = "478375e29042d3e5137c77848923f7d1379a154b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dikshantvashistha/PrepBettr/components/ui/TelemetryButton.tsx",
    statementMap: {
      "0": {
        start: {
          line: 27,
          column: 31
        },
        end: {
          line: 27,
          column: 45
        }
      },
      "1": {
        start: {
          line: 29,
          column: 22
        },
        end: {
          line: 40,
          column: 3
        }
      },
      "2": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 34,
          column: 7
        }
      },
      "3": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 39,
          column: 5
        }
      },
      "4": {
        start: {
          line: 38,
          column: 6
        },
        end: {
          line: 38,
          column: 21
        }
      },
      "5": {
        start: {
          line: 42,
          column: 2
        },
        end: {
          line: 50,
          column: 4
        }
      }
    },
    fnMap: {
      "0": {
        name: "TelemetryButton",
        decl: {
          start: {
            line: 19,
            column: 16
          },
          end: {
            line: 19,
            column: 31
          }
        },
        loc: {
          start: {
            line: 26,
            column: 25
          },
          end: {
            line: 51,
            column: 1
          }
        },
        line: 26
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 29,
            column: 22
          },
          end: {
            line: 29,
            column: 23
          }
        },
        loc: {
          start: {
            line: 29,
            column: 76
          },
          end: {
            line: 40,
            column: 3
          }
        },
        line: 29
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 21,
            column: 2
          },
          end: {
            line: 21,
            column: 29
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 21,
            column: 21
          },
          end: {
            line: 21,
            column: 29
          }
        }],
        line: 21
      },
      "1": {
        loc: {
          start: {
            line: 22,
            column: 2
          },
          end: {
            line: 22,
            column: 26
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 22,
            column: 24
          },
          end: {
            line: 22,
            column: 26
          }
        }],
        line: 22
      },
      "2": {
        loc: {
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 37
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "478375e29042d3e5137c77848923f7d1379a154b"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_120abszsi2 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_120abszsi2();
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
function TelemetryButton({
  telemetryName,
  telemetryFeature =
  /* istanbul ignore next */
  (cov_120abszsi2().b[0][0]++, 'button'),
  telemetryProperties =
  /* istanbul ignore next */
  (cov_120abszsi2().b[1][0]++, {}),
  onClick,
  children,
  ...props
}) {
  /* istanbul ignore next */
  cov_120abszsi2().f[0]++;
  const {
    trackButtonClick
  } =
  /* istanbul ignore next */
  (cov_120abszsi2().s[0]++,
  /* istanbul ignore next */
  (0,
  /* istanbul ignore next */
  _TelemetryProvider.
  /* istanbul ignore next */
  useTelemetry)());
  /* istanbul ignore next */
  cov_120abszsi2().s[1]++;
  const handleClick = async event => {
    /* istanbul ignore next */
    cov_120abszsi2().f[1]++;
    cov_120abszsi2().s[2]++;
    // Track the button click
    await trackButtonClick(telemetryName, {
      feature: telemetryFeature,
      ...telemetryProperties
    });

    // Call the original onClick handler if provided
    /* istanbul ignore next */
    cov_120abszsi2().s[3]++;
    if (onClick) {
      /* istanbul ignore next */
      cov_120abszsi2().b[2][0]++;
      cov_120abszsi2().s[4]++;
      onClick(event);
    } else
    /* istanbul ignore next */
    {
      cov_120abszsi2().b[2][1]++;
    }
  };
  /* istanbul ignore next */
  cov_120abszsi2().s[5]++;
  return /*#__PURE__*/ /* istanbul ignore next */(0, _jsxRuntime.jsx)(
  /* istanbul ignore next */
  _button.
  /* istanbul ignore next */
  Button,
  /* istanbul ignore next */
  {
    ...props,
    onClick: handleClick,
    /* istanbul ignore next */
    "data-telemetry-name": telemetryName,
    children: children
  });
}
/* istanbul ignore next */
var _default = exports.default = TelemetryButton;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIlRlbGVtZXRyeUJ1dHRvbiIsImRlZmF1bHQiLCJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9idXR0b24iLCJfVGVsZW1ldHJ5UHJvdmlkZXIiLCJfanN4UnVudGltZSIsImNvdl8xMjBhYnN6c2kyIiwicGF0aCIsImhhc2giLCJnbG9iYWwiLCJGdW5jdGlvbiIsImdjdiIsImNvdmVyYWdlRGF0YSIsInN0YXRlbWVudE1hcCIsInN0YXJ0IiwibGluZSIsImNvbHVtbiIsImVuZCIsImZuTWFwIiwibmFtZSIsImRlY2wiLCJsb2MiLCJicmFuY2hNYXAiLCJ0eXBlIiwibG9jYXRpb25zIiwidW5kZWZpbmVkIiwicyIsImYiLCJiIiwiX2NvdmVyYWdlU2NoZW1hIiwiY292ZXJhZ2UiLCJhY3R1YWxDb3ZlcmFnZSIsImUiLCJfX2VzTW9kdWxlIiwidGVsZW1ldHJ5TmFtZSIsInRlbGVtZXRyeUZlYXR1cmUiLCJ0ZWxlbWV0cnlQcm9wZXJ0aWVzIiwib25DbGljayIsImNoaWxkcmVuIiwicHJvcHMiLCJ0cmFja0J1dHRvbkNsaWNrIiwidXNlVGVsZW1ldHJ5IiwiaGFuZGxlQ2xpY2siLCJldmVudCIsImZlYXR1cmUiLCJqc3giLCJCdXR0b24iLCJfZGVmYXVsdCJdLCJzb3VyY2VzIjpbIlRlbGVtZXRyeUJ1dHRvbi50c3giXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2UgY2xpZW50XCI7XG5cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBCdXR0b24gfSBmcm9tICdAL2NvbXBvbmVudHMvdWkvYnV0dG9uJztcbmltcG9ydCB7IHVzZVRlbGVtZXRyeSB9IGZyb20gJ0AvY29tcG9uZW50cy9wcm92aWRlcnMvVGVsZW1ldHJ5UHJvdmlkZXInO1xuXG50eXBlIEJ1dHRvblByb3BzID0gUmVhY3QuQ29tcG9uZW50UHJvcHM8XCJidXR0b25cIj4gJiB7XG4gIHZhcmlhbnQ/OiBcImRlZmF1bHRcIiB8IFwiZGVzdHJ1Y3RpdmVcIiB8IFwib3V0bGluZVwiIHwgXCJzZWNvbmRhcnlcIiB8IFwiZ2hvc3RcIiB8IFwibGlua1wiO1xuICBzaXplPzogXCJkZWZhdWx0XCIgfCBcInNtXCIgfCBcImxnXCIgfCBcImljb25cIjtcbiAgYXNDaGlsZD86IGJvb2xlYW47XG59O1xuXG5pbnRlcmZhY2UgVGVsZW1ldHJ5QnV0dG9uUHJvcHMgZXh0ZW5kcyBCdXR0b25Qcm9wcyB7XG4gIHRlbGVtZXRyeU5hbWU6IHN0cmluZztcbiAgdGVsZW1ldHJ5RmVhdHVyZT86IHN0cmluZztcbiAgdGVsZW1ldHJ5UHJvcGVydGllcz86IHsgW2tleTogc3RyaW5nXTogc3RyaW5nIH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBUZWxlbWV0cnlCdXR0b24oe1xuICB0ZWxlbWV0cnlOYW1lLFxuICB0ZWxlbWV0cnlGZWF0dXJlID0gJ2J1dHRvbicsXG4gIHRlbGVtZXRyeVByb3BlcnRpZXMgPSB7fSxcbiAgb25DbGljayxcbiAgY2hpbGRyZW4sXG4gIC4uLnByb3BzXG59OiBUZWxlbWV0cnlCdXR0b25Qcm9wcykge1xuICBjb25zdCB7IHRyYWNrQnV0dG9uQ2xpY2sgfSA9IHVzZVRlbGVtZXRyeSgpO1xuXG4gIGNvbnN0IGhhbmRsZUNsaWNrID0gYXN5bmMgKGV2ZW50OiBSZWFjdC5Nb3VzZUV2ZW50PEhUTUxCdXR0b25FbGVtZW50PikgPT4ge1xuICAgIC8vIFRyYWNrIHRoZSBidXR0b24gY2xpY2tcbiAgICBhd2FpdCB0cmFja0J1dHRvbkNsaWNrKHRlbGVtZXRyeU5hbWUsIHtcbiAgICAgIGZlYXR1cmU6IHRlbGVtZXRyeUZlYXR1cmUsXG4gICAgICAuLi50ZWxlbWV0cnlQcm9wZXJ0aWVzXG4gICAgfSk7XG5cbiAgICAvLyBDYWxsIHRoZSBvcmlnaW5hbCBvbkNsaWNrIGhhbmRsZXIgaWYgcHJvdmlkZWRcbiAgICBpZiAob25DbGljaykge1xuICAgICAgb25DbGljayhldmVudCk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiAoXG4gICAgPEJ1dHRvblxuICAgICAgey4uLnByb3BzfVxuICAgICAgb25DbGljaz17aGFuZGxlQ2xpY2t9XG4gICAgICBkYXRhLXRlbGVtZXRyeS1uYW1lPXt0ZWxlbWV0cnlOYW1lfVxuICAgID5cbiAgICAgIHtjaGlsZHJlbn1cbiAgICA8L0J1dHRvbj5cbiAgKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgVGVsZW1ldHJ5QnV0dG9uO1xuIl0sIm1hcHBpbmdzIjoiOztBQUFBLFlBQVk7O0FBQUM7QUFBQUEsTUFBQSxDQUFBQyxjQUFBLENBQUFDLE9BQUE7RUFBQUMsS0FBQTtBQUFBO0FBQUFELE9BQUEsQ0FBQUUsZUFBQSxHQUFBQSxlQUFBO0FBQUFGLE9BQUEsQ0FBQUcsT0FBQTtBQUViO0FBQUE7QUFBQUMsTUFBQSxHQUFBQyxzQkFBQSxDQUFBQyxPQUFBO0FBQ0E7QUFBQTtBQUFBQyxPQUFBLEdBQUFELE9BQUE7QUFDQTtBQUFBO0FBQUFFLGtCQUFBLEdBQUFGLE9BQUE7QUFBd0U7QUFBQSxJQUFBRyxXQUFBLEdBQUFILE9BQUE7QUFBQSxTQUFBSSxlQUFBO0VBQUEsSUFBQUMsSUFBQTtFQUFBLElBQUFDLElBQUE7RUFBQSxJQUFBQyxNQUFBLE9BQUFDLFFBQUE7RUFBQSxJQUFBQyxHQUFBO0VBQUEsSUFBQUMsWUFBQTtJQUFBTCxJQUFBO0lBQUFNLFlBQUE7TUFBQTtRQUFBQyxLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7SUFBQTtJQUFBRSxLQUFBO01BQUE7UUFBQUMsSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO0lBQUE7SUFBQU8sU0FBQTtNQUFBO1FBQUFELEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7SUFBQTtJQUFBVyxDQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO0lBQUE7SUFBQUMsQ0FBQTtNQUFBO01BQUE7SUFBQTtJQUFBQyxDQUFBO01BQUE7TUFBQTtNQUFBO0lBQUE7SUFBQUMsZUFBQTtJQUFBckIsSUFBQTtFQUFBO0VBQUEsSUFBQXNCLFFBQUEsR0FBQXJCLE1BQUEsQ0FBQUUsR0FBQSxNQUFBRixNQUFBLENBQUFFLEdBQUE7RUFBQSxLQUFBbUIsUUFBQSxDQUFBdkIsSUFBQSxLQUFBdUIsUUFBQSxDQUFBdkIsSUFBQSxFQUFBQyxJQUFBLEtBQUFBLElBQUE7SUFBQXNCLFFBQUEsQ0FBQXZCLElBQUEsSUFBQUssWUFBQTtFQUFBO0VBQUEsSUFBQW1CLGNBQUEsR0FBQUQsUUFBQSxDQUFBdkIsSUFBQTtFQUFBO0lBVzVEO0lBQUFELGNBQUEsWUFBQUEsQ0FBQTtNQUFBLE9BQUF5QixjQUFBO0lBQUE7RUFBQTtFQUFBLE9BQUFBLGNBQUE7QUFBQTtBQUFBekIsY0FBQTtBQUFBLFNBQUFMLHVCQUFBK0IsQ0FBQSxXQUFBQSxDQUFBLElBQUFBLENBQUEsQ0FBQUMsVUFBQSxHQUFBRCxDQUFBLEtBQUFqQyxPQUFBLEVBQUFpQyxDQUFBO0FBR0wsU0FBU2xDLGVBQWVBLENBQUM7RUFDOUJvQyxhQUFhO0VBQ2JDLGdCQUFnQjtFQUFBO0VBQUEsQ0FBQTdCLGNBQUEsR0FBQXNCLENBQUEsVUFBRyxRQUFRO0VBQzNCUSxtQkFBbUI7RUFBQTtFQUFBLENBQUE5QixjQUFBLEdBQUFzQixDQUFBLFVBQUcsQ0FBQyxDQUFDO0VBQ3hCUyxPQUFPO0VBQ1BDLFFBQVE7RUFDUixHQUFHQztBQUNpQixDQUFDLEVBQUU7RUFBQTtFQUFBakMsY0FBQSxHQUFBcUIsQ0FBQTtFQUN2QixNQUFNO0lBQUVhO0VBQWlCLENBQUM7RUFBQTtFQUFBLENBQUFsQyxjQUFBLEdBQUFvQixDQUFBO0VBQUc7RUFBQTtFQUFBZTtFQUFBQTtFQUFBQTtFQUFBQSxZQUFZLEVBQUMsQ0FBQztFQUFDO0VBQUFuQyxjQUFBLEdBQUFvQixDQUFBO0VBRTVDLE1BQU1nQixXQUFXLEdBQUcsTUFBT0MsS0FBMEMsSUFBSztJQUFBO0lBQUFyQyxjQUFBLEdBQUFxQixDQUFBO0lBQUFyQixjQUFBLEdBQUFvQixDQUFBO0lBQ3hFO0lBQ0EsTUFBTWMsZ0JBQWdCLENBQUNOLGFBQWEsRUFBRTtNQUNwQ1UsT0FBTyxFQUFFVCxnQkFBZ0I7TUFDekIsR0FBR0M7SUFDTCxDQUFDLENBQUM7O0lBRUY7SUFBQTtJQUFBOUIsY0FBQSxHQUFBb0IsQ0FBQTtJQUNBLElBQUlXLE9BQU8sRUFBRTtNQUFBO01BQUEvQixjQUFBLEdBQUFzQixDQUFBO01BQUF0QixjQUFBLEdBQUFvQixDQUFBO01BQ1hXLE9BQU8sQ0FBQ00sS0FBSyxDQUFDO0lBQ2hCLENBQUM7SUFBQTtJQUFBO01BQUFyQyxjQUFBLEdBQUFzQixDQUFBO0lBQUE7RUFDSCxDQUFDO0VBQUM7RUFBQXRCLGNBQUEsR0FBQW9CLENBQUE7RUFFRixvQkFDRSwrQkFBQXJCLFdBQUEsQ0FBQXdDLEdBQUE7RUFBQztFQUFBMUMsT0FBQTtFQUFBO0VBQUEyQyxNQUFNO0VBQUE7RUFBQTtJQUFBLEdBQ0RQLEtBQUs7SUFDVEYsT0FBTyxFQUFFSyxXQUFZO0lBQ3JCO0lBQUEsdUJBQXFCUixhQUFjO0lBQUFJLFFBQUEsRUFFbENBO0VBQVEsQ0FDSCxDQUFDO0FBRWI7QUFBQztBQUFBLElBQUFTLFFBQUEsR0FBQW5ELE9BQUEsQ0FBQUcsT0FBQSxHQUVjRCxlQUFlIiwiaWdub3JlTGlzdCI6W119