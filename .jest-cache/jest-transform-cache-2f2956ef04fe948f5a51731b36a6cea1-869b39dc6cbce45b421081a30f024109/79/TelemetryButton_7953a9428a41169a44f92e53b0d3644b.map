{"version":3,"names":["Object","defineProperty","exports","value","TelemetryButton","default","_react","_interopRequireDefault","require","_button","_TelemetryProvider","_jsxRuntime","cov_120abszsi2","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","_coverageSchema","coverage","actualCoverage","e","__esModule","telemetryName","telemetryFeature","telemetryProperties","onClick","children","props","trackButtonClick","useTelemetry","handleClick","event","feature","jsx","Button","_default"],"sources":["TelemetryButton.tsx"],"sourcesContent":["\"use client\";\n\nimport React from 'react';\nimport { Button } from '@/components/ui/button';\nimport { useTelemetry } from '@/components/providers/TelemetryProvider';\n\ntype ButtonProps = React.ComponentProps<\"button\"> & {\n  variant?: \"default\" | \"destructive\" | \"outline\" | \"secondary\" | \"ghost\" | \"link\";\n  size?: \"default\" | \"sm\" | \"lg\" | \"icon\";\n  asChild?: boolean;\n};\n\ninterface TelemetryButtonProps extends ButtonProps {\n  telemetryName: string;\n  telemetryFeature?: string;\n  telemetryProperties?: { [key: string]: string };\n}\n\nexport function TelemetryButton({\n  telemetryName,\n  telemetryFeature = 'button',\n  telemetryProperties = {},\n  onClick,\n  children,\n  ...props\n}: TelemetryButtonProps) {\n  const { trackButtonClick } = useTelemetry();\n\n  const handleClick = async (event: React.MouseEvent<HTMLButtonElement>) => {\n    // Track the button click\n    await trackButtonClick(telemetryName, {\n      feature: telemetryFeature,\n      ...telemetryProperties\n    });\n\n    // Call the original onClick handler if provided\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  return (\n    <Button\n      {...props}\n      onClick={handleClick}\n      data-telemetry-name={telemetryName}\n    >\n      {children}\n    </Button>\n  );\n}\n\nexport default TelemetryButton;\n"],"mappings":"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","ignoreList":[]}