90440a160b4cc0afc961aaeb103b8788
/* istanbul ignore next */
function cov_16xqln3io0() {
  var path = "/Users/dikshantvashistha/PrepBettr/azure/notificationScheduler/index.js";
  var hash = "f7c5eb5db6413d2badd7e9a777d1a0a632b1c0fa";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dikshantvashistha/PrepBettr/azure/notificationScheduler/index.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 16
        },
        end: {
          line: 1,
          column: 43
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 42,
          column: 3
        }
      },
      "2": {
        start: {
          line: 10,
          column: 8
        },
        end: {
          line: 10,
          column: 86
        }
      },
      "3": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 40,
          column: 9
        }
      },
      "4": {
        start: {
          line: 13,
          column: 51
        },
        end: {
          line: 13,
          column: 109
        }
      },
      "5": {
        start: {
          line: 14,
          column: 44
        },
        end: {
          line: 14,
          column: 94
        }
      },
      "6": {
        start: {
          line: 16,
          column: 24
        },
        end: {
          line: 16,
          column: 34
        }
      },
      "7": {
        start: {
          line: 17,
          column: 25
        },
        end: {
          line: 17,
          column: 42
        }
      },
      "8": {
        start: {
          line: 20,
          column: 12
        },
        end: {
          line: 20,
          column: 63
        }
      },
      "9": {
        start: {
          line: 21,
          column: 12
        },
        end: {
          line: 21,
          column: 55
        }
      },
      "10": {
        start: {
          line: 24,
          column: 12
        },
        end: {
          line: 27,
          column: 13
        }
      },
      "11": {
        start: {
          line: 25,
          column: 16
        },
        end: {
          line: 25,
          column: 61
        }
      },
      "12": {
        start: {
          line: 26,
          column: 16
        },
        end: {
          line: 26,
          column: 53
        }
      },
      "13": {
        start: {
          line: 30,
          column: 12
        },
        end: {
          line: 33,
          column: 13
        }
      },
      "14": {
        start: {
          line: 31,
          column: 16
        },
        end: {
          line: 31,
          column: 70
        }
      },
      "15": {
        start: {
          line: 32,
          column: 16
        },
        end: {
          line: 32,
          column: 60
        }
      },
      "16": {
        start: {
          line: 35,
          column: 12
        },
        end: {
          line: 35,
          column: 73
        }
      },
      "17": {
        start: {
          line: 38,
          column: 12
        },
        end: {
          line: 38,
          column: 67
        }
      },
      "18": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 39,
          column: 24
        }
      },
      "19": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 58,
          column: 5
        }
      },
      "20": {
        start: {
          line: 50,
          column: 47
        },
        end: {
          line: 50,
          column: 105
        }
      },
      "21": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 52,
          column: 71
        }
      },
      "22": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 54,
          column: 68
        }
      },
      "23": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 56,
          column: 70
        }
      },
      "24": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 20
        }
      },
      "25": {
        start: {
          line: 65,
          column: 4
        },
        end: {
          line: 75,
          column: 5
        }
      },
      "26": {
        start: {
          line: 67,
          column: 47
        },
        end: {
          line: 67,
          column: 105
        }
      },
      "27": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 69,
          column: 62
        }
      },
      "28": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 71,
          column: 62
        }
      },
      "29": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 73,
          column: 64
        }
      },
      "30": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 74,
          column: 20
        }
      },
      "31": {
        start: {
          line: 82,
          column: 4
        },
        end: {
          line: 93,
          column: 5
        }
      },
      "32": {
        start: {
          line: 84,
          column: 40
        },
        end: {
          line: 84,
          column: 90
        }
      },
      "33": {
        start: {
          line: 87,
          column: 23
        },
        end: {
          line: 87,
          column: 69
        }
      },
      "34": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 89,
          column: 76
        }
      },
      "35": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 91,
          column: 73
        }
      },
      "36": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 92,
          column: 20
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 9,
            column: 13
          },
          end: {
            line: 9,
            column: 14
          }
        },
        loc: {
          start: {
            line: 9,
            column: 41
          },
          end: {
            line: 41,
            column: 5
          }
        },
        line: 9
      },
      "1": {
        name: "processBatchedNotifications",
        decl: {
          start: {
            line: 47,
            column: 15
          },
          end: {
            line: 47,
            column: 42
          }
        },
        loc: {
          start: {
            line: 47,
            column: 52
          },
          end: {
            line: 59,
            column: 1
          }
        },
        line: 47
      },
      "2": {
        name: "processDailySummaries",
        decl: {
          start: {
            line: 64,
            column: 15
          },
          end: {
            line: 64,
            column: 36
          }
        },
        loc: {
          start: {
            line: 64,
            column: 46
          },
          end: {
            line: 76,
            column: 1
          }
        },
        line: 64
      },
      "3": {
        name: "cleanupOldNotificationEvents",
        decl: {
          start: {
            line: 81,
            column: 15
          },
          end: {
            line: 81,
            column: 43
          }
        },
        loc: {
          start: {
            line: 81,
            column: 53
          },
          end: {
            line: 94,
            column: 1
          }
        },
        line: 81
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 24,
            column: 12
          },
          end: {
            line: 27,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 24,
            column: 12
          },
          end: {
            line: 27,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 24
      },
      "1": {
        loc: {
          start: {
            line: 24,
            column: 16
          },
          end: {
            line: 24,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 24,
            column: 16
          },
          end: {
            line: 24,
            column: 26
          }
        }, {
          start: {
            line: 24,
            column: 30
          },
          end: {
            line: 24,
            column: 54
          }
        }],
        line: 24
      },
      "2": {
        loc: {
          start: {
            line: 30,
            column: 12
          },
          end: {
            line: 33,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 12
          },
          end: {
            line: 33,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "3": {
        loc: {
          start: {
            line: 30,
            column: 16
          },
          end: {
            line: 30,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 30,
            column: 16
          },
          end: {
            line: 30,
            column: 26
          }
        }, {
          start: {
            line: 30,
            column: 30
          },
          end: {
            line: 30,
            column: 54
          }
        }],
        line: 30
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0]
    },
    inputSourceMap: null,
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f7c5eb5db6413d2badd7e9a777d1a0a632b1c0fa"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_16xqln3io0 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_16xqln3io0();
const {
  app
} =
/* istanbul ignore next */
(cov_16xqln3io0().s[0]++, require('@azure/functions'));

// Timer trigger function for scheduled notification processing
// Runs every 15 minutes for batched notifications and daily at 9 AM for summaries
/* istanbul ignore next */
cov_16xqln3io0().s[1]++;
app.timer('notificationScheduler', {
  // Cron expression: "0 */15 * * * *" = every 15 minutes
  // Cron expression: "0 0 9 * * *" = daily at 9 AM UTC
  schedule: '0 */15 * * * *',
  handler: async (myTimer, context) => {
    /* istanbul ignore next */
    cov_16xqln3io0().f[0]++;
    cov_16xqln3io0().s[2]++;
    context.log('Notification Scheduler triggered at:', new Date().toISOString());
    /* istanbul ignore next */
    cov_16xqln3io0().s[3]++;
    try {
      const {
        jobNotificationIntegration
      } =
      /* istanbul ignore next */
      (cov_16xqln3io0().s[4]++, require('../../lib/services/job-notification-integration'));
      const {
        notificationService
      } =
      /* istanbul ignore next */
      (cov_16xqln3io0().s[5]++, require('../../lib/services/notification-service'));
      const now =
      /* istanbul ignore next */
      (cov_16xqln3io0().s[6]++, new Date());
      const hour =
      /* istanbul ignore next */
      (cov_16xqln3io0().s[7]++, now.getUTCHours());

      // Process batched notifications every 15 minutes
      /* istanbul ignore next */
      cov_16xqln3io0().s[8]++;
      context.log('Processing batched notifications...');
      /* istanbul ignore next */
      cov_16xqln3io0().s[9]++;
      await processBatchedNotifications(context);

      // Send daily summaries at 9 AM UTC (adjust timezone as needed)
      /* istanbul ignore next */
      cov_16xqln3io0().s[10]++;
      if (
      /* istanbul ignore next */
      (cov_16xqln3io0().b[1][0]++, hour === 9) &&
      /* istanbul ignore next */
      (cov_16xqln3io0().b[1][1]++, now.getUTCMinutes() < 15)) {
        /* istanbul ignore next */
        cov_16xqln3io0().b[0][0]++;
        cov_16xqln3io0().s[11]++;
        context.log('Processing daily summaries...');
        /* istanbul ignore next */
        cov_16xqln3io0().s[12]++;
        await processDailySummaries(context);
      } else
      /* istanbul ignore next */
      {
        cov_16xqln3io0().b[0][1]++;
      }

      // Clean up old notification events once per day at 2 AM UTC
      cov_16xqln3io0().s[13]++;
      if (
      /* istanbul ignore next */
      (cov_16xqln3io0().b[3][0]++, hour === 2) &&
      /* istanbul ignore next */
      (cov_16xqln3io0().b[3][1]++, now.getUTCMinutes() < 15)) {
        /* istanbul ignore next */
        cov_16xqln3io0().b[2][0]++;
        cov_16xqln3io0().s[14]++;
        context.log('Cleaning up old notification events...');
        /* istanbul ignore next */
        cov_16xqln3io0().s[15]++;
        await cleanupOldNotificationEvents(context);
      } else
      /* istanbul ignore next */
      {
        cov_16xqln3io0().b[2][1]++;
      }
      cov_16xqln3io0().s[16]++;
      context.log('Notification Scheduler completed successfully');
    } catch (error) {
      /* istanbul ignore next */
      cov_16xqln3io0().s[17]++;
      context.log('Error in Notification Scheduler:', error);
      /* istanbul ignore next */
      cov_16xqln3io0().s[18]++;
      throw error;
    }
  }
});

/**
 * Process batched notifications for users with hourly/daily frequency preferences
 */
async function processBatchedNotifications(context) {
  /* istanbul ignore next */
  cov_16xqln3io0().f[1]++;
  cov_16xqln3io0().s[19]++;
  try {
    // Import here to avoid module loading issues
    const {
      jobNotificationIntegration
    } =
    /* istanbul ignore next */
    (cov_16xqln3io0().s[20]++, require('../../lib/services/job-notification-integration'));
    /* istanbul ignore next */
    cov_16xqln3io0().s[21]++;
    await jobNotificationIntegration.processBatchedNotifications();
    /* istanbul ignore next */
    cov_16xqln3io0().s[22]++;
    context.log('Batched notifications processed successfully');
  } catch (error) {
    /* istanbul ignore next */
    cov_16xqln3io0().s[23]++;
    context.log('Error processing batched notifications:', error);
    /* istanbul ignore next */
    cov_16xqln3io0().s[24]++;
    throw error;
  }
}

/**
 * Process daily summaries for all eligible users
 */
async function processDailySummaries(context) {
  /* istanbul ignore next */
  cov_16xqln3io0().f[2]++;
  cov_16xqln3io0().s[25]++;
  try {
    // Import here to avoid module loading issues
    const {
      jobNotificationIntegration
    } =
    /* istanbul ignore next */
    (cov_16xqln3io0().s[26]++, require('../../lib/services/job-notification-integration'));
    /* istanbul ignore next */
    cov_16xqln3io0().s[27]++;
    await jobNotificationIntegration.sendDailySummaries();
    /* istanbul ignore next */
    cov_16xqln3io0().s[28]++;
    context.log('Daily summaries processed successfully');
  } catch (error) {
    /* istanbul ignore next */
    cov_16xqln3io0().s[29]++;
    context.log('Error processing daily summaries:', error);
    /* istanbul ignore next */
    cov_16xqln3io0().s[30]++;
    throw error;
  }
}

/**
 * Clean up old notification events
 */
async function cleanupOldNotificationEvents(context) {
  /* istanbul ignore next */
  cov_16xqln3io0().f[3]++;
  cov_16xqln3io0().s[31]++;
  try {
    // Import here to avoid module loading issues
    const {
      notificationService
    } =
    /* istanbul ignore next */
    (cov_16xqln3io0().s[32]++, require('../../lib/services/notification-service'));

    // Clean up events older than 90 days
    const result =
    /* istanbul ignore next */
    (cov_16xqln3io0().s[33]++, await notificationService.cleanupOldEvents(90));
    /* istanbul ignore next */
    cov_16xqln3io0().s[34]++;
    context.log(`Cleaned up ${result.deleted} old notification events`);
  } catch (error) {
    /* istanbul ignore next */
    cov_16xqln3io0().s[35]++;
    context.log('Error cleaning up old notification events:', error);
    /* istanbul ignore next */
    cov_16xqln3io0().s[36]++;
    throw error;
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,