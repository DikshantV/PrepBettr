378245308690438da78ec28c9a2b32d9
"use strict";

/* istanbul ignore next */
function cov_1n6p3s9sft() {
  var path = "/Users/dikshantvashistha/PrepBettr/azure/lib/services/azure-speech-service.ts";
  var hash = "1a48fd43fa94ca8200e498164407099918343f52";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dikshantvashistha/PrepBettr/azure/lib/services/azure-speech-service.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 12,
          column: 3
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "2": {
        start: {
          line: 3,
          column: 26
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "3": {
        start: {
          line: 4,
          column: 15
        },
        end: {
          line: 4,
          column: 52
        }
      },
      "4": {
        start: {
          line: 5,
          column: 4
        },
        end: {
          line: 7,
          column: 5
        }
      },
      "5": {
        start: {
          line: 6,
          column: 6
        },
        end: {
          line: 6,
          column: 68
        }
      },
      "6": {
        start: {
          line: 6,
          column: 51
        },
        end: {
          line: 6,
          column: 63
        }
      },
      "7": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 8,
          column: 39
        }
      },
      "8": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "9": {
        start: {
          line: 10,
          column: 26
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "10": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 11,
          column: 17
        }
      },
      "11": {
        start: {
          line: 13,
          column: 25
        },
        end: {
          line: 17,
          column: 2
        }
      },
      "12": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 72
        }
      },
      "13": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 21
        }
      },
      "14": {
        start: {
          line: 18,
          column: 19
        },
        end: {
          line: 34,
          column: 4
        }
      },
      "15": {
        start: {
          line: 19,
          column: 18
        },
        end: {
          line: 26,
          column: 5
        }
      },
      "16": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 24,
          column: 10
        }
      },
      "17": {
        start: {
          line: 21,
          column: 21
        },
        end: {
          line: 21,
          column: 23
        }
      },
      "18": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "19": {
        start: {
          line: 22,
          column: 29
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "20": {
        start: {
          line: 22,
          column: 77
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "21": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 23,
          column: 22
        }
      },
      "22": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 26
        }
      },
      "23": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 33,
          column: 6
        }
      },
      "24": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 46
        }
      },
      "25": {
        start: {
          line: 28,
          column: 35
        },
        end: {
          line: 28,
          column: 46
        }
      },
      "26": {
        start: {
          line: 29,
          column: 21
        },
        end: {
          line: 29,
          column: 23
        }
      },
      "27": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "28": {
        start: {
          line: 30,
          column: 25
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "29": {
        start: {
          line: 30,
          column: 38
        },
        end: {
          line: 30,
          column: 50
        }
      },
      "30": {
        start: {
          line: 30,
          column: 56
        },
        end: {
          line: 30,
          column: 57
        }
      },
      "31": {
        start: {
          line: 30,
          column: 78
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "32": {
        start: {
          line: 30,
          column: 102
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "33": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 40
        }
      },
      "34": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 22
        }
      },
      "35": {
        start: {
          line: 35,
          column: 0
        },
        end: {
          line: 35,
          column: 62
        }
      },
      "36": {
        start: {
          line: 36,
          column: 0
        },
        end: {
          line: 36,
          column: 65
        }
      },
      "37": {
        start: {
          line: 37,
          column: 18
        },
        end: {
          line: 37,
          column: 81
        }
      },
      "38": {
        start: {
          line: 38,
          column: 31
        },
        end: {
          line: 38,
          column: 75
        }
      },
      "39": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 41,
          column: 33
        }
      },
      "40": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 31
        }
      },
      "41": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 32
        }
      },
      "42": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 44,
          column: 35
        }
      },
      "43": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 69,
          column: 9
        }
      },
      "44": {
        start: {
          line: 52,
          column: 28
        },
        end: {
          line: 52,
          column: 81
        }
      },
      "45": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 56,
          column: 13
        }
      },
      "46": {
        start: {
          line: 54,
          column: 16
        },
        end: {
          line: 54,
          column: 74
        }
      },
      "47": {
        start: {
          line: 55,
          column: 16
        },
        end: {
          line: 55,
          column: 29
        }
      },
      "48": {
        start: {
          line: 58,
          column: 27
        },
        end: {
          line: 58,
          column: 140
        }
      },
      "49": {
        start: {
          line: 59,
          column: 12
        },
        end: {
          line: 59,
          column: 99
        }
      },
      "50": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 60,
          column: 66
        }
      },
      "51": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 61,
          column: 76
        }
      },
      "52": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 62,
          column: 38
        }
      },
      "53": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 63,
          column: 62
        }
      },
      "54": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 64,
          column: 24
        }
      },
      "55": {
        start: {
          line: 67,
          column: 12
        },
        end: {
          line: 67,
          column: 81
        }
      },
      "56": {
        start: {
          line: 68,
          column: 12
        },
        end: {
          line: 68,
          column: 25
        }
      },
      "57": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 78,
          column: 9
        }
      },
      "58": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 76,
          column: 68
        }
      },
      "59": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 77,
          column: 25
        }
      },
      "60": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 114,
          column: 9
        }
      },
      "61": {
        start: {
          line: 80,
          column: 32
        },
        end: {
          line: 80,
          column: 82
        }
      },
      "62": {
        start: {
          line: 81,
          column: 12
        },
        end: {
          line: 81,
          column: 93
        }
      },
      "63": {
        start: {
          line: 82,
          column: 12
        },
        end: {
          line: 91,
          column: 14
        }
      },
      "64": {
        start: {
          line: 84,
          column: 16
        },
        end: {
          line: 90,
          column: 17
        }
      },
      "65": {
        start: {
          line: 85,
          column: 20
        },
        end: {
          line: 89,
          column: 23
        }
      },
      "66": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 98,
          column: 14
        }
      },
      "67": {
        start: {
          line: 93,
          column: 16
        },
        end: {
          line: 93,
          column: 67
        }
      },
      "68": {
        start: {
          line: 94,
          column: 16
        },
        end: {
          line: 96,
          column: 17
        }
      },
      "69": {
        start: {
          line: 95,
          column: 20
        },
        end: {
          line: 95,
          column: 63
        }
      },
      "70": {
        start: {
          line: 97,
          column: 16
        },
        end: {
          line: 97,
          column: 49
        }
      },
      "71": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 102,
          column: 14
        }
      },
      "72": {
        start: {
          line: 100,
          column: 16
        },
        end: {
          line: 100,
          column: 62
        }
      },
      "73": {
        start: {
          line: 101,
          column: 16
        },
        end: {
          line: 101,
          column: 49
        }
      },
      "74": {
        start: {
          line: 103,
          column: 12
        },
        end: {
          line: 103,
          column: 68
        }
      },
      "75": {
        start: {
          line: 104,
          column: 12
        },
        end: {
          line: 104,
          column: 68
        }
      },
      "76": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 105,
          column: 24
        }
      },
      "77": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 108,
          column: 74
        }
      },
      "78": {
        start: {
          line: 109,
          column: 12
        },
        end: {
          line: 112,
          column: 13
        }
      },
      "79": {
        start: {
          line: 110,
          column: 37
        },
        end: {
          line: 110,
          column: 91
        }
      },
      "80": {
        start: {
          line: 111,
          column: 16
        },
        end: {
          line: 111,
          column: 78
        }
      },
      "81": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 113,
          column: 25
        }
      },
      "82": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 130,
          column: 9
        }
      },
      "83": {
        start: {
          line: 121,
          column: 12
        },
        end: {
          line: 129,
          column: 13
        }
      },
      "84": {
        start: {
          line: 122,
          column: 16
        },
        end: {
          line: 122,
          column: 71
        }
      },
      "85": {
        start: {
          line: 123,
          column: 16
        },
        end: {
          line: 123,
          column: 40
        }
      },
      "86": {
        start: {
          line: 124,
          column: 16
        },
        end: {
          line: 124,
          column: 39
        }
      },
      "87": {
        start: {
          line: 125,
          column: 16
        },
        end: {
          line: 125,
          column: 61
        }
      },
      "88": {
        start: {
          line: 128,
          column: 16
        },
        end: {
          line: 128,
          column: 77
        }
      },
      "89": {
        start: {
          line: 136,
          column: 8
        },
        end: {
          line: 139,
          column: 9
        }
      },
      "90": {
        start: {
          line: 137,
          column: 12
        },
        end: {
          line: 137,
          column: 68
        }
      },
      "91": {
        start: {
          line: 138,
          column: 12
        },
        end: {
          line: 138,
          column: 24
        }
      },
      "92": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 218,
          column: 9
        }
      },
      "93": {
        start: {
          line: 142,
          column: 32
        },
        end: {
          line: 150,
          column: 66
        }
      },
      "94": {
        start: {
          line: 145,
          column: 24
        },
        end: {
          line: 145,
          column: 92
        }
      },
      "95": {
        start: {
          line: 146,
          column: 24
        },
        end: {
          line: 146,
          column: 53
        }
      },
      "96": {
        start: {
          line: 148,
          column: 33
        },
        end: {
          line: 148,
          column: 70
        }
      },
      "97": {
        start: {
          line: 151,
          column: 12
        },
        end: {
          line: 151,
          column: 95
        }
      },
      "98": {
        start: {
          line: 152,
          column: 30
        },
        end: {
          line: 152,
          column: 69
        }
      },
      "99": {
        start: {
          line: 153,
          column: 25
        },
        end: {
          line: 153,
          column: 46
        }
      },
      "100": {
        start: {
          line: 154,
          column: 26
        },
        end: {
          line: 154,
          column: 48
        }
      },
      "101": {
        start: {
          line: 155,
          column: 25
        },
        end: {
          line: 163,
          column: 7
        }
      },
      "102": {
        start: {
          line: 164,
          column: 12
        },
        end: {
          line: 213,
          column: 15
        }
      },
      "103": {
        start: {
          line: 165,
          column: 36
        },
        end: {
          line: 165,
          column: 38
        }
      },
      "104": {
        start: {
          line: 167,
          column: 16
        },
        end: {
          line: 180,
          column: 17
        }
      },
      "105": {
        start: {
          line: 168,
          column: 20
        },
        end: {
          line: 172,
          column: 22
        }
      },
      "106": {
        start: {
          line: 170,
          column: 24
        },
        end: {
          line: 170,
          column: 70
        }
      },
      "107": {
        start: {
          line: 171,
          column: 24
        },
        end: {
          line: 171,
          column: 110
        }
      },
      "108": {
        start: {
          line: 173,
          column: 20
        },
        end: {
          line: 179,
          column: 22
        }
      },
      "109": {
        start: {
          line: 174,
          column: 24
        },
        end: {
          line: 178,
          column: 25
        }
      },
      "110": {
        start: {
          line: 175,
          column: 28
        },
        end: {
          line: 175,
          column: 105
        }
      },
      "111": {
        start: {
          line: 176,
          column: 28
        },
        end: {
          line: 176,
          column: 74
        }
      },
      "112": {
        start: {
          line: 177,
          column: 28
        },
        end: {
          line: 177,
          column: 78
        }
      },
      "113": {
        start: {
          line: 181,
          column: 16
        },
        end: {
          line: 212,
          column: 19
        }
      },
      "114": {
        start: {
          line: 183,
          column: 20
        },
        end: {
          line: 203,
          column: 21
        }
      },
      "115": {
        start: {
          line: 184,
          column: 24
        },
        end: {
          line: 184,
          column: 68
        }
      },
      "116": {
        start: {
          line: 186,
          column: 24
        },
        end: {
          line: 198,
          column: 25
        }
      },
      "117": {
        start: {
          line: 187,
          column: 48
        },
        end: {
          line: 187,
          column: 109
        }
      },
      "118": {
        start: {
          line: 187,
          column: 83
        },
        end: {
          line: 187,
          column: 105
        }
      },
      "119": {
        start: {
          line: 188,
          column: 45
        },
        end: {
          line: 188,
          column: 72
        }
      },
      "120": {
        start: {
          line: 189,
          column: 41
        },
        end: {
          line: 189,
          column: 42
        }
      },
      "121": {
        start: {
          line: 190,
          column: 28
        },
        end: {
          line: 193,
          column: 31
        }
      },
      "122": {
        start: {
          line: 191,
          column: 32
        },
        end: {
          line: 191,
          column: 76
        }
      },
      "123": {
        start: {
          line: 192,
          column: 32
        },
        end: {
          line: 192,
          column: 59
        }
      },
      "124": {
        start: {
          line: 194,
          column: 28
        },
        end: {
          line: 194,
          column: 53
        }
      },
      "125": {
        start: {
          line: 197,
          column: 28
        },
        end: {
          line: 197,
          column: 54
        }
      },
      "126": {
        start: {
          line: 201,
          column: 24
        },
        end: {
          line: 201,
          column: 89
        }
      },
      "127": {
        start: {
          line: 202,
          column: 24
        },
        end: {
          line: 202,
          column: 92
        }
      },
      "128": {
        start: {
          line: 204,
          column: 20
        },
        end: {
          line: 204,
          column: 92
        }
      },
      "129": {
        start: {
          line: 205,
          column: 20
        },
        end: {
          line: 205,
          column: 44
        }
      },
      "130": {
        start: {
          line: 208,
          column: 20
        },
        end: {
          line: 208,
          column: 70
        }
      },
      "131": {
        start: {
          line: 209,
          column: 20
        },
        end: {
          line: 209,
          column: 34
        }
      },
      "132": {
        start: {
          line: 210,
          column: 20
        },
        end: {
          line: 210,
          column: 92
        }
      },
      "133": {
        start: {
          line: 211,
          column: 20
        },
        end: {
          line: 211,
          column: 44
        }
      },
      "134": {
        start: {
          line: 216,
          column: 12
        },
        end: {
          line: 216,
          column: 67
        }
      },
      "135": {
        start: {
          line: 217,
          column: 12
        },
        end: {
          line: 217,
          column: 24
        }
      },
      "136": {
        start: {
          line: 224,
          column: 8
        },
        end: {
          line: 224,
          column: 64
        }
      },
      "137": {
        start: {
          line: 230,
          column: 8
        },
        end: {
          line: 230,
          column: 41
        }
      },
      "138": {
        start: {
          line: 231,
          column: 8
        },
        end: {
          line: 234,
          column: 9
        }
      },
      "139": {
        start: {
          line: 232,
          column: 12
        },
        end: {
          line: 232,
          column: 37
        }
      },
      "140": {
        start: {
          line: 233,
          column: 12
        },
        end: {
          line: 233,
          column: 36
        }
      },
      "141": {
        start: {
          line: 235,
          column: 8
        },
        end: {
          line: 235,
          column: 33
        }
      },
      "142": {
        start: {
          line: 236,
          column: 8
        },
        end: {
          line: 236,
          column: 35
        }
      },
      "143": {
        start: {
          line: 237,
          column: 8
        },
        end: {
          line: 237,
          column: 56
        }
      },
      "144": {
        start: {
          line: 240,
          column: 0
        },
        end: {
          line: 240,
          column: 48
        }
      },
      "145": {
        start: {
          line: 242,
          column: 0
        },
        end: {
          line: 242,
          column: 54
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 2,
            column: 75
          }
        },
        loc: {
          start: {
            line: 2,
            column: 96
          },
          end: {
            line: 9,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 6,
            column: 38
          },
          end: {
            line: 6,
            column: 39
          }
        },
        loc: {
          start: {
            line: 6,
            column: 49
          },
          end: {
            line: 6,
            column: 65
          }
        },
        line: 6
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 9,
            column: 7
          }
        },
        loc: {
          start: {
            line: 9,
            column: 28
          },
          end: {
            line: 12,
            column: 1
          }
        },
        line: 9
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 13,
            column: 81
          }
        },
        loc: {
          start: {
            line: 13,
            column: 95
          },
          end: {
            line: 15,
            column: 1
          }
        },
        line: 13
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 15,
            column: 6
          }
        },
        loc: {
          start: {
            line: 15,
            column: 20
          },
          end: {
            line: 17,
            column: 1
          }
        },
        line: 15
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 18,
            column: 51
          },
          end: {
            line: 18,
            column: 52
          }
        },
        loc: {
          start: {
            line: 18,
            column: 63
          },
          end: {
            line: 34,
            column: 1
          }
        },
        line: 18
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 19,
            column: 18
          },
          end: {
            line: 19,
            column: 19
          }
        },
        loc: {
          start: {
            line: 19,
            column: 30
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 19
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 20,
            column: 48
          },
          end: {
            line: 20,
            column: 49
          }
        },
        loc: {
          start: {
            line: 20,
            column: 61
          },
          end: {
            line: 24,
            column: 9
          }
        },
        line: 20
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 27,
            column: 11
          },
          end: {
            line: 27,
            column: 12
          }
        },
        loc: {
          start: {
            line: 27,
            column: 26
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 27
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 40,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        },
        loc: {
          start: {
            line: 40,
            column: 18
          },
          end: {
            line: 45,
            column: 5
          }
        },
        line: 40
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 49,
            column: 5
          }
        },
        loc: {
          start: {
            line: 49,
            column: 23
          },
          end: {
            line: 70,
            column: 5
          }
        },
        line: 49
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 74,
            column: 4
          },
          end: {
            line: 74,
            column: 5
          }
        },
        loc: {
          start: {
            line: 74,
            column: 60
          },
          end: {
            line: 115,
            column: 5
          }
        },
        line: 74
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 82,
            column: 41
          },
          end: {
            line: 82,
            column: 42
          }
        },
        loc: {
          start: {
            line: 82,
            column: 51
          },
          end: {
            line: 91,
            column: 13
          }
        },
        line: 82
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 92,
            column: 39
          },
          end: {
            line: 92,
            column: 40
          }
        },
        loc: {
          start: {
            line: 92,
            column: 49
          },
          end: {
            line: 98,
            column: 13
          }
        },
        line: 92
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 99,
            column: 45
          },
          end: {
            line: 99,
            column: 46
          }
        },
        loc: {
          start: {
            line: 99,
            column: 55
          },
          end: {
            line: 102,
            column: 13
          }
        },
        line: 99
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 119,
            column: 4
          },
          end: {
            line: 119,
            column: 5
          }
        },
        loc: {
          start: {
            line: 119,
            column: 38
          },
          end: {
            line: 131,
            column: 5
          }
        },
        line: 119
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 135,
            column: 4
          },
          end: {
            line: 135,
            column: 5
          }
        },
        loc: {
          start: {
            line: 135,
            column: 47
          },
          end: {
            line: 219,
            column: 5
          }
        },
        line: 135
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 144,
            column: 27
          },
          end: {
            line: 144,
            column: 28
          }
        },
        loc: {
          start: {
            line: 144,
            column: 39
          },
          end: {
            line: 147,
            column: 21
          }
        },
        line: 144
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 148,
            column: 27
          },
          end: {
            line: 148,
            column: 28
          }
        },
        loc: {
          start: {
            line: 148,
            column: 33
          },
          end: {
            line: 148,
            column: 70
          }
        },
        line: 148
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 164,
            column: 31
          },
          end: {
            line: 164,
            column: 32
          }
        },
        loc: {
          start: {
            line: 164,
            column: 52
          },
          end: {
            line: 213,
            column: 13
          }
        },
        line: 164
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 168,
            column: 56
          },
          end: {
            line: 168,
            column: 57
          }
        },
        loc: {
          start: {
            line: 168,
            column: 66
          },
          end: {
            line: 172,
            column: 21
          }
        },
        line: 168
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 173,
            column: 52
          },
          end: {
            line: 173,
            column: 53
          }
        },
        loc: {
          start: {
            line: 173,
            column: 62
          },
          end: {
            line: 179,
            column: 21
          }
        },
        line: 173
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 181,
            column: 54
          },
          end: {
            line: 181,
            column: 55
          }
        },
        loc: {
          start: {
            line: 181,
            column: 66
          },
          end: {
            line: 206,
            column: 17
          }
        },
        line: 181
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 187,
            column: 67
          },
          end: {
            line: 187,
            column: 68
          }
        },
        loc: {
          start: {
            line: 187,
            column: 83
          },
          end: {
            line: 187,
            column: 105
          }
        },
        line: 187
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 190,
            column: 48
          },
          end: {
            line: 190,
            column: 49
          }
        },
        loc: {
          start: {
            line: 190,
            column: 57
          },
          end: {
            line: 193,
            column: 29
          }
        },
        line: 190
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 206,
            column: 19
          },
          end: {
            line: 206,
            column: 20
          }
        },
        loc: {
          start: {
            line: 206,
            column: 30
          },
          end: {
            line: 212,
            column: 17
          }
        },
        line: 206
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 223,
            column: 4
          },
          end: {
            line: 223,
            column: 5
          }
        },
        loc: {
          start: {
            line: 223,
            column: 14
          },
          end: {
            line: 225,
            column: 5
          }
        },
        line: 223
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 229,
            column: 4
          },
          end: {
            line: 229,
            column: 5
          }
        },
        loc: {
          start: {
            line: 229,
            column: 14
          },
          end: {
            line: 238,
            column: 5
          }
        },
        line: 229
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 12,
            column: 3
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 9,
            column: 1
          }
        }, {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 12,
            column: 1
          }
        }],
        line: 2
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 5
      },
      "4": {
        loc: {
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 13
          }
        }, {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "5": {
        loc: {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 47
          }
        }, {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "6": {
        loc: {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 63
          }
        }, {
          start: {
            line: 5,
            column: 67
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "7": {
        loc: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 10
      },
      "8": {
        loc: {
          start: {
            line: 13,
            column: 25
          },
          end: {
            line: 17,
            column: 2
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 26
          },
          end: {
            line: 13,
            column: 30
          }
        }, {
          start: {
            line: 13,
            column: 34
          },
          end: {
            line: 13,
            column: 57
          }
        }, {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "9": {
        loc: {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 15,
            column: 1
          }
        }, {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "10": {
        loc: {
          start: {
            line: 18,
            column: 19
          },
          end: {
            line: 34,
            column: 4
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 20
          },
          end: {
            line: 18,
            column: 24
          }
        }, {
          start: {
            line: 18,
            column: 28
          },
          end: {
            line: 18,
            column: 45
          }
        }, {
          start: {
            line: 18,
            column: 50
          },
          end: {
            line: 34,
            column: 4
          }
        }],
        line: 18
      },
      "11": {
        loc: {
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 24,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 20,
            column: 44
          }
        }, {
          start: {
            line: 20,
            column: 48
          },
          end: {
            line: 24,
            column: 9
          }
        }],
        line: 20
      },
      "12": {
        loc: {
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 22,
            column: 95
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 22,
            column: 95
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "13": {
        loc: {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 46
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 46
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "14": {
        loc: {
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 15
          }
        }, {
          start: {
            line: 28,
            column: 19
          },
          end: {
            line: 28,
            column: 33
          }
        }],
        line: 28
      },
      "15": {
        loc: {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "16": {
        loc: {
          start: {
            line: 30,
            column: 78
          },
          end: {
            line: 30,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 78
          },
          end: {
            line: 30,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "17": {
        loc: {
          start: {
            line: 53,
            column: 12
          },
          end: {
            line: 56,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 53,
            column: 12
          },
          end: {
            line: 56,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 53
      },
      "18": {
        loc: {
          start: {
            line: 53,
            column: 16
          },
          end: {
            line: 53,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 53,
            column: 16
          },
          end: {
            line: 53,
            column: 34
          }
        }, {
          start: {
            line: 53,
            column: 38
          },
          end: {
            line: 53,
            column: 61
          }
        }],
        line: 53
      },
      "19": {
        loc: {
          start: {
            line: 58,
            column: 27
          },
          end: {
            line: 58,
            column: 140
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 58,
            column: 28
          },
          end: {
            line: 58,
            column: 127
          }
        }, {
          start: {
            line: 58,
            column: 132
          },
          end: {
            line: 58,
            column: 140
          }
        }],
        line: 58
      },
      "20": {
        loc: {
          start: {
            line: 58,
            column: 28
          },
          end: {
            line: 58,
            column: 127
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 58,
            column: 113
          },
          end: {
            line: 58,
            column: 119
          }
        }, {
          start: {
            line: 58,
            column: 122
          },
          end: {
            line: 58,
            column: 127
          }
        }],
        line: 58
      },
      "21": {
        loc: {
          start: {
            line: 58,
            column: 28
          },
          end: {
            line: 58,
            column: 110
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 58,
            column: 28
          },
          end: {
            line: 58,
            column: 93
          }
        }, {
          start: {
            line: 58,
            column: 97
          },
          end: {
            line: 58,
            column: 110
          }
        }],
        line: 58
      },
      "22": {
        loc: {
          start: {
            line: 75,
            column: 8
          },
          end: {
            line: 78,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 75,
            column: 8
          },
          end: {
            line: 78,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 75
      },
      "23": {
        loc: {
          start: {
            line: 75,
            column: 12
          },
          end: {
            line: 75,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 75,
            column: 12
          },
          end: {
            line: 75,
            column: 31
          }
        }, {
          start: {
            line: 75,
            column: 35
          },
          end: {
            line: 75,
            column: 53
          }
        }],
        line: 75
      },
      "24": {
        loc: {
          start: {
            line: 84,
            column: 16
          },
          end: {
            line: 90,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 84,
            column: 16
          },
          end: {
            line: 90,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 84
      },
      "25": {
        loc: {
          start: {
            line: 84,
            column: 20
          },
          end: {
            line: 84,
            column: 96
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 84,
            column: 20
          },
          end: {
            line: 84,
            column: 79
          }
        }, {
          start: {
            line: 84,
            column: 83
          },
          end: {
            line: 84,
            column: 96
          }
        }],
        line: 84
      },
      "26": {
        loc: {
          start: {
            line: 87,
            column: 36
          },
          end: {
            line: 87,
            column: 183
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 87,
            column: 174
          },
          end: {
            line: 87,
            column: 177
          }
        }, {
          start: {
            line: 87,
            column: 180
          },
          end: {
            line: 87,
            column: 183
          }
        }],
        line: 87
      },
      "27": {
        loc: {
          start: {
            line: 87,
            column: 37
          },
          end: {
            line: 87,
            column: 170
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 87,
            column: 92
          },
          end: {
            line: 87,
            column: 98
          }
        }, {
          start: {
            line: 87,
            column: 101
          },
          end: {
            line: 87,
            column: 170
          }
        }],
        line: 87
      },
      "28": {
        loc: {
          start: {
            line: 87,
            column: 37
          },
          end: {
            line: 87,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 87,
            column: 37
          },
          end: {
            line: 87,
            column: 72
          }
        }, {
          start: {
            line: 87,
            column: 76
          },
          end: {
            line: 87,
            column: 89
          }
        }],
        line: 87
      },
      "29": {
        loc: {
          start: {
            line: 94,
            column: 16
          },
          end: {
            line: 96,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 94,
            column: 16
          },
          end: {
            line: 96,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 94
      },
      "30": {
        loc: {
          start: {
            line: 94,
            column: 20
          },
          end: {
            line: 94,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 94,
            column: 20
          },
          end: {
            line: 94,
            column: 67
          }
        }, {
          start: {
            line: 94,
            column: 71
          },
          end: {
            line: 94,
            column: 78
          }
        }],
        line: 94
      },
      "31": {
        loc: {
          start: {
            line: 95,
            column: 28
          },
          end: {
            line: 95,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 95,
            column: 28
          },
          end: {
            line: 95,
            column: 42
          }
        }, {
          start: {
            line: 95,
            column: 46
          },
          end: {
            line: 95,
            column: 61
          }
        }],
        line: 95
      },
      "32": {
        loc: {
          start: {
            line: 109,
            column: 12
          },
          end: {
            line: 112,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 109,
            column: 12
          },
          end: {
            line: 112,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 109
      },
      "33": {
        loc: {
          start: {
            line: 110,
            column: 37
          },
          end: {
            line: 110,
            column: 91
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 110,
            column: 62
          },
          end: {
            line: 110,
            column: 75
          }
        }, {
          start: {
            line: 110,
            column: 78
          },
          end: {
            line: 110,
            column: 91
          }
        }],
        line: 110
      },
      "34": {
        loc: {
          start: {
            line: 111,
            column: 24
          },
          end: {
            line: 111,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 111,
            column: 24
          },
          end: {
            line: 111,
            column: 36
          }
        }, {
          start: {
            line: 111,
            column: 40
          },
          end: {
            line: 111,
            column: 76
          }
        }],
        line: 111
      },
      "35": {
        loc: {
          start: {
            line: 120,
            column: 8
          },
          end: {
            line: 130,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 120,
            column: 8
          },
          end: {
            line: 130,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 120
      },
      "36": {
        loc: {
          start: {
            line: 135,
            column: 33
          },
          end: {
            line: 135,
            column: 45
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 135,
            column: 43
          },
          end: {
            line: 135,
            column: 45
          }
        }],
        line: 135
      },
      "37": {
        loc: {
          start: {
            line: 136,
            column: 8
          },
          end: {
            line: 139,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 136,
            column: 8
          },
          end: {
            line: 139,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 136
      },
      "38": {
        loc: {
          start: {
            line: 136,
            column: 12
          },
          end: {
            line: 136,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 136,
            column: 12
          },
          end: {
            line: 136,
            column: 31
          }
        }, {
          start: {
            line: 136,
            column: 35
          },
          end: {
            line: 136,
            column: 53
          }
        }],
        line: 136
      },
      "39": {
        loc: {
          start: {
            line: 142,
            column: 32
          },
          end: {
            line: 150,
            column: 66
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 143,
            column: 18
          },
          end: {
            line: 149,
            column: 18
          }
        }, {
          start: {
            line: 150,
            column: 18
          },
          end: {
            line: 150,
            column: 66
          }
        }],
        line: 142
      },
      "40": {
        loc: {
          start: {
            line: 152,
            column: 30
          },
          end: {
            line: 152,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 152,
            column: 30
          },
          end: {
            line: 152,
            column: 47
          }
        }, {
          start: {
            line: 152,
            column: 51
          },
          end: {
            line: 152,
            column: 69
          }
        }],
        line: 152
      },
      "41": {
        loc: {
          start: {
            line: 153,
            column: 25
          },
          end: {
            line: 153,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 153,
            column: 25
          },
          end: {
            line: 153,
            column: 37
          }
        }, {
          start: {
            line: 153,
            column: 41
          },
          end: {
            line: 153,
            column: 46
          }
        }],
        line: 153
      },
      "42": {
        loc: {
          start: {
            line: 154,
            column: 26
          },
          end: {
            line: 154,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 154,
            column: 26
          },
          end: {
            line: 154,
            column: 39
          }
        }, {
          start: {
            line: 154,
            column: 43
          },
          end: {
            line: 154,
            column: 48
          }
        }],
        line: 154
      },
      "43": {
        loc: {
          start: {
            line: 167,
            column: 16
          },
          end: {
            line: 180,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 167,
            column: 16
          },
          end: {
            line: 180,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 167
      },
      "44": {
        loc: {
          start: {
            line: 171,
            column: 24
          },
          end: {
            line: 171,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 171,
            column: 84
          },
          end: {
            line: 171,
            column: 90
          }
        }, {
          start: {
            line: 171,
            column: 93
          },
          end: {
            line: 171,
            column: 109
          }
        }],
        line: 171
      },
      "45": {
        loc: {
          start: {
            line: 171,
            column: 24
          },
          end: {
            line: 171,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 171,
            column: 24
          },
          end: {
            line: 171,
            column: 64
          }
        }, {
          start: {
            line: 171,
            column: 68
          },
          end: {
            line: 171,
            column: 81
          }
        }],
        line: 171
      },
      "46": {
        loc: {
          start: {
            line: 174,
            column: 24
          },
          end: {
            line: 178,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 174,
            column: 24
          },
          end: {
            line: 178,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 174
      },
      "47": {
        loc: {
          start: {
            line: 174,
            column: 28
          },
          end: {
            line: 174,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 174,
            column: 28
          },
          end: {
            line: 174,
            column: 46
          }
        }, {
          start: {
            line: 174,
            column: 50
          },
          end: {
            line: 174,
            column: 83
          }
        }],
        line: 174
      },
      "48": {
        loc: {
          start: {
            line: 183,
            column: 20
          },
          end: {
            line: 203,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 183,
            column: 20
          },
          end: {
            line: 203,
            column: 21
          }
        }, {
          start: {
            line: 200,
            column: 25
          },
          end: {
            line: 203,
            column: 21
          }
        }],
        line: 183
      },
      "49": {
        loc: {
          start: {
            line: 186,
            column: 24
          },
          end: {
            line: 198,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 186,
            column: 24
          },
          end: {
            line: 198,
            column: 25
          }
        }, {
          start: {
            line: 196,
            column: 29
          },
          end: {
            line: 198,
            column: 25
          }
        }],
        line: 186
      },
      "50": {
        loc: {
          start: {
            line: 186,
            column: 28
          },
          end: {
            line: 186,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 186,
            column: 28
          },
          end: {
            line: 186,
            column: 48
          }
        }, {
          start: {
            line: 186,
            column: 52
          },
          end: {
            line: 186,
            column: 74
          }
        }],
        line: 186
      },
      "51": {
        loc: {
          start: {
            line: 202,
            column: 41
          },
          end: {
            line: 202,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 202,
            column: 41
          },
          end: {
            line: 202,
            column: 60
          }
        }, {
          start: {
            line: 202,
            column: 64
          },
          end: {
            line: 202,
            column: 89
          }
        }],
        line: 202
      },
      "52": {
        loc: {
          start: {
            line: 204,
            column: 20
          },
          end: {
            line: 204,
            column: 91
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 204,
            column: 72
          },
          end: {
            line: 204,
            column: 78
          }
        }, {
          start: {
            line: 204,
            column: 81
          },
          end: {
            line: 204,
            column: 91
          }
        }],
        line: 204
      },
      "53": {
        loc: {
          start: {
            line: 204,
            column: 20
          },
          end: {
            line: 204,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 204,
            column: 20
          },
          end: {
            line: 204,
            column: 52
          }
        }, {
          start: {
            line: 204,
            column: 56
          },
          end: {
            line: 204,
            column: 69
          }
        }],
        line: 204
      },
      "54": {
        loc: {
          start: {
            line: 210,
            column: 20
          },
          end: {
            line: 210,
            column: 91
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 210,
            column: 72
          },
          end: {
            line: 210,
            column: 78
          }
        }, {
          start: {
            line: 210,
            column: 81
          },
          end: {
            line: 210,
            column: 91
          }
        }],
        line: 210
      },
      "55": {
        loc: {
          start: {
            line: 210,
            column: 20
          },
          end: {
            line: 210,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 210,
            column: 20
          },
          end: {
            line: 210,
            column: 52
          }
        }, {
          start: {
            line: 210,
            column: 56
          },
          end: {
            line: 210,
            column: 69
          }
        }],
        line: 210
      },
      "56": {
        loc: {
          start: {
            line: 224,
            column: 15
          },
          end: {
            line: 224,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 224,
            column: 15
          },
          end: {
            line: 224,
            column: 33
          }
        }, {
          start: {
            line: 224,
            column: 37
          },
          end: {
            line: 224,
            column: 63
          }
        }],
        line: 224
      },
      "57": {
        loc: {
          start: {
            line: 231,
            column: 8
          },
          end: {
            line: 234,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 231,
            column: 8
          },
          end: {
            line: 234,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 231
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0, 0],
      "9": [0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/dikshantvashistha/PrepBettr/azure/lib/services/azure-speech-service.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/dikshantvashistha/PrepBettr/azure/lib/services/azure-speech-service.ts"],
      sourcesContent: ["import * as SpeechSDK from 'microsoft-cognitiveservices-speech-sdk';\nimport { fetchAzureSecrets } from '../../../lib/azure-config-browser';\n\nexport interface SpeechRecognitionResult {\n  text: string;\n  confidence: number;\n  reason: string;\n}\n\nexport interface SpeechSynthesisOptions {\n  voiceName?: string;\n  rate?: string;\n  pitch?: string;\n  onAudioChunk?: (chunk: ArrayBuffer) => void;\n  onSynthesisStart?: () => void;\n}\n\nexport class AzureSpeechService {\n  private speechConfig: SpeechSDK.SpeechConfig | null = null;\n  private recognizer: SpeechSDK.SpeechRecognizer | null = null;\n  private synthesizer: SpeechSDK.SpeechSynthesizer | null = null;\n  private isInitialized = false;\n\n  /**\n   * Initialize the Azure Speech Service\n   */\n  async initialize(): Promise<boolean> {\n    try {\n      const secrets = await fetchAzureSecrets();\n      \n      if (!secrets.speechKey || !secrets.speechEndpoint) {\n        console.warn('\u26A0\uFE0F Azure Speech credentials not available');\n        return false;\n      }\n\n      // Extract region from endpoint (e.g., https://westus.api.cognitive.microsoft.com -> westus)\n      const region = secrets.speechEndpoint.match(/https:\\/\\/([^.]+)/)?.[1] || 'westus';\n\n      this.speechConfig = SpeechSDK.SpeechConfig.fromSubscription(secrets.speechKey, region);\n      this.speechConfig.speechRecognitionLanguage = 'en-US';\n      this.speechConfig.speechSynthesisVoiceName = 'en-US-SaraNeural';\n\n      this.isInitialized = true;\n      console.log('\u2705 Azure Speech Service initialized');\n      return true;\n    } catch (error) {\n      console.error('\u274C Failed to initialize Azure Speech Service:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Start continuous speech recognition\n   */\n  async startContinuousRecognition(\n    onRecognized: (result: SpeechRecognitionResult) => void,\n    onError?: (error: string) => void\n  ): Promise<boolean> {\n    if (!this.isInitialized || !this.speechConfig) {\n      console.error('\u274C Azure Speech Service not initialized');\n      return false;\n    }\n\n    try {\n      const audioConfig = SpeechSDK.AudioConfig.fromDefaultMicrophoneInput();\n      this.recognizer = new SpeechSDK.SpeechRecognizer(this.speechConfig, audioConfig);\n\n      this.recognizer.recognized = (s, e) => {\n        if (e.result.reason === SpeechSDK.ResultReason.RecognizedSpeech && e.result.text) {\n          onRecognized({\n            text: e.result.text,\n            confidence: e.result.properties?.getProperty(SpeechSDK.PropertyId.SpeechServiceResponse_JsonResult) ? 1.0 : 0.8,\n            reason: 'RecognizedSpeech'\n          });\n        }\n      };\n\n      this.recognizer.canceled = (s, e) => {\n        console.log(`\u274C Recognition canceled: ${e.reason}`);\n        if (e.reason === SpeechSDK.CancellationReason.Error && onError) {\n          onError(e.errorDetails || 'Unknown error');\n        }\n        this.stopContinuousRecognition();\n      };\n\n      this.recognizer.sessionStopped = (s, e) => {\n        console.log('\uD83D\uDED1 Recognition session stopped');\n        this.stopContinuousRecognition();\n      };\n\n      await this.recognizer.startContinuousRecognitionAsync();\n      console.log('\uD83C\uDFA4 Started continuous speech recognition');\n      return true;\n    } catch (error) {\n      console.error('\u274C Failed to start speech recognition:', error);\n      if (onError) {\n        const errorMessage = error instanceof Error ? error.message : String(error);\n        onError(errorMessage || 'Failed to start speech recognition');\n      }\n      return false;\n    }\n  }\n\n  /**\n   * Stop continuous speech recognition\n   */\n  async stopContinuousRecognition(): Promise<void> {\n    if (this.recognizer) {\n      try {\n        await this.recognizer.stopContinuousRecognitionAsync();\n        this.recognizer.close();\n        this.recognizer = null;\n        console.log('\uD83D\uDED1 Stopped speech recognition');\n      } catch (error) {\n        console.error('\u274C Error stopping speech recognition:', error);\n      }\n    }\n  }\n\n  /**\n   * Synthesize speech from text\n   */\n  async synthesizeSpeech(\n    text: string,\n    options: SpeechSynthesisOptions = {}\n  ): Promise<ArrayBuffer | null> {\n    if (!this.isInitialized || !this.speechConfig) {\n      console.error('\u274C Azure Speech Service not initialized');\n      return null;\n    }\n\n    try {\n      // Use streaming audio output if callback is provided\n      const audioConfig = options.onAudioChunk\n        ? SpeechSDK.AudioConfig.fromStreamOutput({\n            write: (buffer: ArrayBuffer) => {\n              console.log(`\uD83D\uDD0A Streaming audio chunk: ${buffer.byteLength} bytes`);\n              options.onAudioChunk!(buffer);\n            },\n            close: () => console.log('\uD83D\uDD0A Audio stream closed')\n          })\n        : SpeechSDK.AudioConfig.fromDefaultSpeakerOutput();\n        \n      this.synthesizer = new SpeechSDK.SpeechSynthesizer(this.speechConfig, audioConfig);\n\n      const voiceName = options.voiceName || 'en-US-SaraNeural';\n      const rate = options.rate || '1.0';\n      const pitch = options.pitch || '0Hz';\n\n      const ssml = `\n        <speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\" xml:lang=\"en-US\">\n          <voice name=\"${voiceName}\">\n            <prosody rate=\"${rate}\" pitch=\"${pitch}\">\n              ${text}\n            </prosody>\n          </voice>\n        </speak>\n      `;\n\n      return new Promise((resolve, reject) => {\n        const audioChunks: ArrayBuffer[] = [];\n        \n        // Set up streaming events if callback provided\n        if (options.onAudioChunk) {\n          this.synthesizer!.synthesisStarted = (s, e) => {\n            console.log('\uD83D\uDD0A Streaming synthesis started');\n            options.onSynthesisStart?.();\n          };\n          \n          this.synthesizer!.synthesizing = (s, e) => {\n            if (e.result.audioData && e.result.audioData.byteLength > 0) {\n              console.log(`\uD83D\uDD0A Synthesizing chunk: ${e.result.audioData.byteLength} bytes`);\n              audioChunks.push(e.result.audioData.slice(0));\n              options.onAudioChunk!(e.result.audioData.slice(0));\n            }\n          };\n        }\n\n        this.synthesizer!.speakSsmlAsync(\n          ssml,\n          (result) => {\n            if (result.reason === SpeechSDK.ResultReason.SynthesizingAudioCompleted) {\n              console.log('\u2705 Speech synthesis completed');\n              \n              // If streaming was used, combine chunks, otherwise use result data\n              if (options.onAudioChunk && audioChunks.length > 0) {\n                const totalLength = audioChunks.reduce((sum, chunk) => sum + chunk.byteLength, 0);\n                const combined = new Uint8Array(totalLength);\n                let offset = 0;\n                audioChunks.forEach(chunk => {\n                  combined.set(new Uint8Array(chunk), offset);\n                  offset += chunk.byteLength;\n                });\n                resolve(combined.buffer);\n              } else {\n                resolve(result.audioData);\n              }\n            } else {\n              console.error('\u274C Speech synthesis failed:', result.errorDetails);\n              reject(new Error(result.errorDetails || 'Speech synthesis failed'));\n            }\n            this.synthesizer?.close();\n            this.synthesizer = null;\n          },\n          (error) => {\n            console.error('\u274C Speech synthesis error:', error);\n            reject(error);\n            this.synthesizer?.close();\n            this.synthesizer = null;\n          }\n        );\n      });\n    } catch (error) {\n      console.error('\u274C Failed to synthesize speech:', error);\n      return null;\n    }\n  }\n\n  /**\n   * Check if the service is initialized and ready\n   */\n  isReady(): boolean {\n    return this.isInitialized && this.speechConfig !== null;\n  }\n\n  /**\n   * Clean up resources\n   */\n  dispose(): void {\n    this.stopContinuousRecognition();\n    if (this.synthesizer) {\n      this.synthesizer.close();\n      this.synthesizer = null;\n    }\n    this.speechConfig = null;\n    this.isInitialized = false;\n    console.log('\uD83E\uDDF9 Azure Speech Service disposed');\n  }\n}\n\n// Export singleton instance\nexport const azureSpeechService = new AzureSpeechService();\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "1a48fd43fa94ca8200e498164407099918343f52"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1n6p3s9sft = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1n6p3s9sft();
var __createBinding =
/* istanbul ignore next */
(cov_1n6p3s9sft().s[0]++,
/* istanbul ignore next */
(cov_1n6p3s9sft().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1n6p3s9sft().b[0][1]++, this.__createBinding) ||
/* istanbul ignore next */
(cov_1n6p3s9sft().b[0][2]++, Object.create ?
/* istanbul ignore next */
(cov_1n6p3s9sft().b[1][0]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_1n6p3s9sft().f[0]++;
  cov_1n6p3s9sft().s[1]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_1n6p3s9sft().b[2][0]++;
    cov_1n6p3s9sft().s[2]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_1n6p3s9sft().b[2][1]++;
  }
  var desc =
  /* istanbul ignore next */
  (cov_1n6p3s9sft().s[3]++, Object.getOwnPropertyDescriptor(m, k));
  /* istanbul ignore next */
  cov_1n6p3s9sft().s[4]++;
  if (
  /* istanbul ignore next */
  (cov_1n6p3s9sft().b[4][0]++, !desc) ||
  /* istanbul ignore next */
  (cov_1n6p3s9sft().b[4][1]++, "get" in desc ?
  /* istanbul ignore next */
  (cov_1n6p3s9sft().b[5][0]++, !m.__esModule) :
  /* istanbul ignore next */
  (cov_1n6p3s9sft().b[5][1]++,
  /* istanbul ignore next */
  (cov_1n6p3s9sft().b[6][0]++, desc.writable) ||
  /* istanbul ignore next */
  (cov_1n6p3s9sft().b[6][1]++, desc.configurable)))) {
    /* istanbul ignore next */
    cov_1n6p3s9sft().b[3][0]++;
    cov_1n6p3s9sft().s[5]++;
    desc = {
      enumerable: true,
      get: function () {
        /* istanbul ignore next */
        cov_1n6p3s9sft().f[1]++;
        cov_1n6p3s9sft().s[6]++;
        return m[k];
      }
    };
  } else
  /* istanbul ignore next */
  {
    cov_1n6p3s9sft().b[3][1]++;
  }
  cov_1n6p3s9sft().s[7]++;
  Object.defineProperty(o, k2, desc);
}) :
/* istanbul ignore next */
(cov_1n6p3s9sft().b[1][1]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_1n6p3s9sft().f[2]++;
  cov_1n6p3s9sft().s[8]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_1n6p3s9sft().b[7][0]++;
    cov_1n6p3s9sft().s[9]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_1n6p3s9sft().b[7][1]++;
  }
  cov_1n6p3s9sft().s[10]++;
  o[k2] = m[k];
})));
var __setModuleDefault =
/* istanbul ignore next */
(cov_1n6p3s9sft().s[11]++,
/* istanbul ignore next */
(cov_1n6p3s9sft().b[8][0]++, this) &&
/* istanbul ignore next */
(cov_1n6p3s9sft().b[8][1]++, this.__setModuleDefault) ||
/* istanbul ignore next */
(cov_1n6p3s9sft().b[8][2]++, Object.create ?
/* istanbul ignore next */
(cov_1n6p3s9sft().b[9][0]++, function (o, v) {
  /* istanbul ignore next */
  cov_1n6p3s9sft().f[3]++;
  cov_1n6p3s9sft().s[12]++;
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
}) :
/* istanbul ignore next */
(cov_1n6p3s9sft().b[9][1]++, function (o, v) {
  /* istanbul ignore next */
  cov_1n6p3s9sft().f[4]++;
  cov_1n6p3s9sft().s[13]++;
  o["default"] = v;
})));
var __importStar =
/* istanbul ignore next */
(cov_1n6p3s9sft().s[14]++,
/* istanbul ignore next */
(cov_1n6p3s9sft().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_1n6p3s9sft().b[10][1]++, this.__importStar) ||
/* istanbul ignore next */
(cov_1n6p3s9sft().b[10][2]++, function () {
  /* istanbul ignore next */
  cov_1n6p3s9sft().f[5]++;
  cov_1n6p3s9sft().s[15]++;
  var ownKeys = function (o) {
    /* istanbul ignore next */
    cov_1n6p3s9sft().f[6]++;
    cov_1n6p3s9sft().s[16]++;
    ownKeys =
    /* istanbul ignore next */
    (cov_1n6p3s9sft().b[11][0]++, Object.getOwnPropertyNames) ||
    /* istanbul ignore next */
    (cov_1n6p3s9sft().b[11][1]++, function (o) {
      /* istanbul ignore next */
      cov_1n6p3s9sft().f[7]++;
      var ar =
      /* istanbul ignore next */
      (cov_1n6p3s9sft().s[17]++, []);
      /* istanbul ignore next */
      cov_1n6p3s9sft().s[18]++;
      for (var k in o) {
        /* istanbul ignore next */
        cov_1n6p3s9sft().s[19]++;
        if (Object.prototype.hasOwnProperty.call(o, k)) {
          /* istanbul ignore next */
          cov_1n6p3s9sft().b[12][0]++;
          cov_1n6p3s9sft().s[20]++;
          ar[ar.length] = k;
        } else
        /* istanbul ignore next */
        {
          cov_1n6p3s9sft().b[12][1]++;
        }
      }
      /* istanbul ignore next */
      cov_1n6p3s9sft().s[21]++;
      return ar;
    });
    /* istanbul ignore next */
    cov_1n6p3s9sft().s[22]++;
    return ownKeys(o);
  };
  /* istanbul ignore next */
  cov_1n6p3s9sft().s[23]++;
  return function (mod) {
    /* istanbul ignore next */
    cov_1n6p3s9sft().f[8]++;
    cov_1n6p3s9sft().s[24]++;
    if (
    /* istanbul ignore next */
    (cov_1n6p3s9sft().b[14][0]++, mod) &&
    /* istanbul ignore next */
    (cov_1n6p3s9sft().b[14][1]++, mod.__esModule)) {
      /* istanbul ignore next */
      cov_1n6p3s9sft().b[13][0]++;
      cov_1n6p3s9sft().s[25]++;
      return mod;
    } else
    /* istanbul ignore next */
    {
      cov_1n6p3s9sft().b[13][1]++;
    }
    var result =
    /* istanbul ignore next */
    (cov_1n6p3s9sft().s[26]++, {});
    /* istanbul ignore next */
    cov_1n6p3s9sft().s[27]++;
    if (mod != null) {
      /* istanbul ignore next */
      cov_1n6p3s9sft().b[15][0]++;
      cov_1n6p3s9sft().s[28]++;
      for (var k =
        /* istanbul ignore next */
        (cov_1n6p3s9sft().s[29]++, ownKeys(mod)), i =
        /* istanbul ignore next */
        (cov_1n6p3s9sft().s[30]++, 0); i < k.length; i++) {
        /* istanbul ignore next */
        cov_1n6p3s9sft().s[31]++;
        if (k[i] !== "default") {
          /* istanbul ignore next */
          cov_1n6p3s9sft().b[16][0]++;
          cov_1n6p3s9sft().s[32]++;
          __createBinding(result, mod, k[i]);
        } else
        /* istanbul ignore next */
        {
          cov_1n6p3s9sft().b[16][1]++;
        }
      }
    } else
    /* istanbul ignore next */
    {
      cov_1n6p3s9sft().b[15][1]++;
    }
    cov_1n6p3s9sft().s[33]++;
    __setModuleDefault(result, mod);
    /* istanbul ignore next */
    cov_1n6p3s9sft().s[34]++;
    return result;
  };
}()));
/* istanbul ignore next */
cov_1n6p3s9sft().s[35]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1n6p3s9sft().s[36]++;
exports.azureSpeechService = exports.AzureSpeechService = void 0;
const SpeechSDK =
/* istanbul ignore next */
(cov_1n6p3s9sft().s[37]++, __importStar(require("microsoft-cognitiveservices-speech-sdk")));
const azure_config_browser_1 =
/* istanbul ignore next */
(cov_1n6p3s9sft().s[38]++, require("../../../lib/azure-config-browser"));
class AzureSpeechService {
  constructor() {
    /* istanbul ignore next */
    cov_1n6p3s9sft().f[9]++;
    cov_1n6p3s9sft().s[39]++;
    this.speechConfig = null;
    /* istanbul ignore next */
    cov_1n6p3s9sft().s[40]++;
    this.recognizer = null;
    /* istanbul ignore next */
    cov_1n6p3s9sft().s[41]++;
    this.synthesizer = null;
    /* istanbul ignore next */
    cov_1n6p3s9sft().s[42]++;
    this.isInitialized = false;
  }
  /**
   * Initialize the Azure Speech Service
   */
  async initialize() {
    /* istanbul ignore next */
    cov_1n6p3s9sft().f[10]++;
    var _a;
    /* istanbul ignore next */
    cov_1n6p3s9sft().s[43]++;
    try {
      const secrets =
      /* istanbul ignore next */
      (cov_1n6p3s9sft().s[44]++, await (0, azure_config_browser_1.fetchAzureSecrets)());
      /* istanbul ignore next */
      cov_1n6p3s9sft().s[45]++;
      if (
      /* istanbul ignore next */
      (cov_1n6p3s9sft().b[18][0]++, !secrets.speechKey) ||
      /* istanbul ignore next */
      (cov_1n6p3s9sft().b[18][1]++, !secrets.speechEndpoint)) {
        /* istanbul ignore next */
        cov_1n6p3s9sft().b[17][0]++;
        cov_1n6p3s9sft().s[46]++;
        console.warn('⚠️ Azure Speech credentials not available');
        /* istanbul ignore next */
        cov_1n6p3s9sft().s[47]++;
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_1n6p3s9sft().b[17][1]++;
      }
      // Extract region from endpoint (e.g., https://westus.api.cognitive.microsoft.com -> westus)
      const region =
      /* istanbul ignore next */
      (cov_1n6p3s9sft().s[48]++,
      /* istanbul ignore next */
      (cov_1n6p3s9sft().b[19][0]++,
      /* istanbul ignore next */
      (cov_1n6p3s9sft().b[21][0]++, (_a = secrets.speechEndpoint.match(/https:\/\/([^.]+)/)) === null) ||
      /* istanbul ignore next */
      (cov_1n6p3s9sft().b[21][1]++, _a === void 0) ?
      /* istanbul ignore next */
      (cov_1n6p3s9sft().b[20][0]++, void 0) :
      /* istanbul ignore next */
      (cov_1n6p3s9sft().b[20][1]++, _a[1])) ||
      /* istanbul ignore next */
      (cov_1n6p3s9sft().b[19][1]++, 'westus'));
      /* istanbul ignore next */
      cov_1n6p3s9sft().s[49]++;
      this.speechConfig = SpeechSDK.SpeechConfig.fromSubscription(secrets.speechKey, region);
      /* istanbul ignore next */
      cov_1n6p3s9sft().s[50]++;
      this.speechConfig.speechRecognitionLanguage = 'en-US';
      /* istanbul ignore next */
      cov_1n6p3s9sft().s[51]++;
      this.speechConfig.speechSynthesisVoiceName = 'en-US-SaraNeural';
      /* istanbul ignore next */
      cov_1n6p3s9sft().s[52]++;
      this.isInitialized = true;
      /* istanbul ignore next */
      cov_1n6p3s9sft().s[53]++;
      console.log('✅ Azure Speech Service initialized');
      /* istanbul ignore next */
      cov_1n6p3s9sft().s[54]++;
      return true;
    } catch (error) {
      /* istanbul ignore next */
      cov_1n6p3s9sft().s[55]++;
      console.error('❌ Failed to initialize Azure Speech Service:', error);
      /* istanbul ignore next */
      cov_1n6p3s9sft().s[56]++;
      return false;
    }
  }
  /**
   * Start continuous speech recognition
   */
  async startContinuousRecognition(onRecognized, onError) {
    /* istanbul ignore next */
    cov_1n6p3s9sft().f[11]++;
    cov_1n6p3s9sft().s[57]++;
    if (
    /* istanbul ignore next */
    (cov_1n6p3s9sft().b[23][0]++, !this.isInitialized) ||
    /* istanbul ignore next */
    (cov_1n6p3s9sft().b[23][1]++, !this.speechConfig)) {
      /* istanbul ignore next */
      cov_1n6p3s9sft().b[22][0]++;
      cov_1n6p3s9sft().s[58]++;
      console.error('❌ Azure Speech Service not initialized');
      /* istanbul ignore next */
      cov_1n6p3s9sft().s[59]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_1n6p3s9sft().b[22][1]++;
    }
    cov_1n6p3s9sft().s[60]++;
    try {
      const audioConfig =
      /* istanbul ignore next */
      (cov_1n6p3s9sft().s[61]++, SpeechSDK.AudioConfig.fromDefaultMicrophoneInput());
      /* istanbul ignore next */
      cov_1n6p3s9sft().s[62]++;
      this.recognizer = new SpeechSDK.SpeechRecognizer(this.speechConfig, audioConfig);
      /* istanbul ignore next */
      cov_1n6p3s9sft().s[63]++;
      this.recognizer.recognized = (s, e) => {
        /* istanbul ignore next */
        cov_1n6p3s9sft().f[12]++;
        var _a;
        /* istanbul ignore next */
        cov_1n6p3s9sft().s[64]++;
        if (
        /* istanbul ignore next */
        (cov_1n6p3s9sft().b[25][0]++, e.result.reason === SpeechSDK.ResultReason.RecognizedSpeech) &&
        /* istanbul ignore next */
        (cov_1n6p3s9sft().b[25][1]++, e.result.text)) {
          /* istanbul ignore next */
          cov_1n6p3s9sft().b[24][0]++;
          cov_1n6p3s9sft().s[65]++;
          onRecognized({
            text: e.result.text,
            confidence: (
            /* istanbul ignore next */
            (cov_1n6p3s9sft().b[28][0]++, (_a = e.result.properties) === null) ||
            /* istanbul ignore next */
            (cov_1n6p3s9sft().b[28][1]++, _a === void 0) ?
            /* istanbul ignore next */
            (cov_1n6p3s9sft().b[27][0]++, void 0) :
            /* istanbul ignore next */
            (cov_1n6p3s9sft().b[27][1]++, _a.getProperty(SpeechSDK.PropertyId.SpeechServiceResponse_JsonResult))) ?
            /* istanbul ignore next */
            (cov_1n6p3s9sft().b[26][0]++, 1.0) :
            /* istanbul ignore next */
            (cov_1n6p3s9sft().b[26][1]++, 0.8),
            reason: 'RecognizedSpeech'
          });
        } else
        /* istanbul ignore next */
        {
          cov_1n6p3s9sft().b[24][1]++;
        }
      };
      /* istanbul ignore next */
      cov_1n6p3s9sft().s[66]++;
      this.recognizer.canceled = (s, e) => {
        /* istanbul ignore next */
        cov_1n6p3s9sft().f[13]++;
        cov_1n6p3s9sft().s[67]++;
        console.log(`❌ Recognition canceled: ${e.reason}`);
        /* istanbul ignore next */
        cov_1n6p3s9sft().s[68]++;
        if (
        /* istanbul ignore next */
        (cov_1n6p3s9sft().b[30][0]++, e.reason === SpeechSDK.CancellationReason.Error) &&
        /* istanbul ignore next */
        (cov_1n6p3s9sft().b[30][1]++, onError)) {
          /* istanbul ignore next */
          cov_1n6p3s9sft().b[29][0]++;
          cov_1n6p3s9sft().s[69]++;
          onError(
          /* istanbul ignore next */
          (cov_1n6p3s9sft().b[31][0]++, e.errorDetails) ||
          /* istanbul ignore next */
          (cov_1n6p3s9sft().b[31][1]++, 'Unknown error'));
        } else
        /* istanbul ignore next */
        {
          cov_1n6p3s9sft().b[29][1]++;
        }
        cov_1n6p3s9sft().s[70]++;
        this.stopContinuousRecognition();
      };
      /* istanbul ignore next */
      cov_1n6p3s9sft().s[71]++;
      this.recognizer.sessionStopped = (s, e) => {
        /* istanbul ignore next */
        cov_1n6p3s9sft().f[14]++;
        cov_1n6p3s9sft().s[72]++;
        console.log('🛑 Recognition session stopped');
        /* istanbul ignore next */
        cov_1n6p3s9sft().s[73]++;
        this.stopContinuousRecognition();
      };
      /* istanbul ignore next */
      cov_1n6p3s9sft().s[74]++;
      await this.recognizer.startContinuousRecognitionAsync();
      /* istanbul ignore next */
      cov_1n6p3s9sft().s[75]++;
      console.log('🎤 Started continuous speech recognition');
      /* istanbul ignore next */
      cov_1n6p3s9sft().s[76]++;
      return true;
    } catch (error) {
      /* istanbul ignore next */
      cov_1n6p3s9sft().s[77]++;
      console.error('❌ Failed to start speech recognition:', error);
      /* istanbul ignore next */
      cov_1n6p3s9sft().s[78]++;
      if (onError) {
        /* istanbul ignore next */
        cov_1n6p3s9sft().b[32][0]++;
        const errorMessage =
        /* istanbul ignore next */
        (cov_1n6p3s9sft().s[79]++, error instanceof Error ?
        /* istanbul ignore next */
        (cov_1n6p3s9sft().b[33][0]++, error.message) :
        /* istanbul ignore next */
        (cov_1n6p3s9sft().b[33][1]++, String(error)));
        /* istanbul ignore next */
        cov_1n6p3s9sft().s[80]++;
        onError(
        /* istanbul ignore next */
        (cov_1n6p3s9sft().b[34][0]++, errorMessage) ||
        /* istanbul ignore next */
        (cov_1n6p3s9sft().b[34][1]++, 'Failed to start speech recognition'));
      } else
      /* istanbul ignore next */
      {
        cov_1n6p3s9sft().b[32][1]++;
      }
      cov_1n6p3s9sft().s[81]++;
      return false;
    }
  }
  /**
   * Stop continuous speech recognition
   */
  async stopContinuousRecognition() {
    /* istanbul ignore next */
    cov_1n6p3s9sft().f[15]++;
    cov_1n6p3s9sft().s[82]++;
    if (this.recognizer) {
      /* istanbul ignore next */
      cov_1n6p3s9sft().b[35][0]++;
      cov_1n6p3s9sft().s[83]++;
      try {
        /* istanbul ignore next */
        cov_1n6p3s9sft().s[84]++;
        await this.recognizer.stopContinuousRecognitionAsync();
        /* istanbul ignore next */
        cov_1n6p3s9sft().s[85]++;
        this.recognizer.close();
        /* istanbul ignore next */
        cov_1n6p3s9sft().s[86]++;
        this.recognizer = null;
        /* istanbul ignore next */
        cov_1n6p3s9sft().s[87]++;
        console.log('🛑 Stopped speech recognition');
      } catch (error) {
        /* istanbul ignore next */
        cov_1n6p3s9sft().s[88]++;
        console.error('❌ Error stopping speech recognition:', error);
      }
    } else
    /* istanbul ignore next */
    {
      cov_1n6p3s9sft().b[35][1]++;
    }
  }
  /**
   * Synthesize speech from text
   */
  async synthesizeSpeech(text, options =
  /* istanbul ignore next */
  (cov_1n6p3s9sft().b[36][0]++, {})) {
    /* istanbul ignore next */
    cov_1n6p3s9sft().f[16]++;
    cov_1n6p3s9sft().s[89]++;
    if (
    /* istanbul ignore next */
    (cov_1n6p3s9sft().b[38][0]++, !this.isInitialized) ||
    /* istanbul ignore next */
    (cov_1n6p3s9sft().b[38][1]++, !this.speechConfig)) {
      /* istanbul ignore next */
      cov_1n6p3s9sft().b[37][0]++;
      cov_1n6p3s9sft().s[90]++;
      console.error('❌ Azure Speech Service not initialized');
      /* istanbul ignore next */
      cov_1n6p3s9sft().s[91]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_1n6p3s9sft().b[37][1]++;
    }
    cov_1n6p3s9sft().s[92]++;
    try {
      // Use streaming audio output if callback is provided
      const audioConfig =
      /* istanbul ignore next */
      (cov_1n6p3s9sft().s[93]++, options.onAudioChunk ?
      /* istanbul ignore next */
      (cov_1n6p3s9sft().b[39][0]++, SpeechSDK.AudioConfig.fromStreamOutput({
        write: buffer => {
          /* istanbul ignore next */
          cov_1n6p3s9sft().f[17]++;
          cov_1n6p3s9sft().s[94]++;
          console.log(`🔊 Streaming audio chunk: ${buffer.byteLength} bytes`);
          /* istanbul ignore next */
          cov_1n6p3s9sft().s[95]++;
          options.onAudioChunk(buffer);
        },
        close: () => {
          /* istanbul ignore next */
          cov_1n6p3s9sft().f[18]++;
          cov_1n6p3s9sft().s[96]++;
          return console.log('🔊 Audio stream closed');
        }
      })) :
      /* istanbul ignore next */
      (cov_1n6p3s9sft().b[39][1]++, SpeechSDK.AudioConfig.fromDefaultSpeakerOutput()));
      /* istanbul ignore next */
      cov_1n6p3s9sft().s[97]++;
      this.synthesizer = new SpeechSDK.SpeechSynthesizer(this.speechConfig, audioConfig);
      const voiceName =
      /* istanbul ignore next */
      (cov_1n6p3s9sft().s[98]++,
      /* istanbul ignore next */
      (cov_1n6p3s9sft().b[40][0]++, options.voiceName) ||
      /* istanbul ignore next */
      (cov_1n6p3s9sft().b[40][1]++, 'en-US-SaraNeural'));
      const rate =
      /* istanbul ignore next */
      (cov_1n6p3s9sft().s[99]++,
      /* istanbul ignore next */
      (cov_1n6p3s9sft().b[41][0]++, options.rate) ||
      /* istanbul ignore next */
      (cov_1n6p3s9sft().b[41][1]++, '1.0'));
      const pitch =
      /* istanbul ignore next */
      (cov_1n6p3s9sft().s[100]++,
      /* istanbul ignore next */
      (cov_1n6p3s9sft().b[42][0]++, options.pitch) ||
      /* istanbul ignore next */
      (cov_1n6p3s9sft().b[42][1]++, '0Hz'));
      const ssml =
      /* istanbul ignore next */
      (cov_1n6p3s9sft().s[101]++, `
        <speak version="1.0" xmlns="http://www.w3.org/2001/10/synthesis" xml:lang="en-US">
          <voice name="${voiceName}">
            <prosody rate="${rate}" pitch="${pitch}">
              ${text}
            </prosody>
          </voice>
        </speak>
      `);
      /* istanbul ignore next */
      cov_1n6p3s9sft().s[102]++;
      return new Promise((resolve, reject) => {
        /* istanbul ignore next */
        cov_1n6p3s9sft().f[19]++;
        const audioChunks =
        /* istanbul ignore next */
        (cov_1n6p3s9sft().s[103]++, []);
        // Set up streaming events if callback provided
        /* istanbul ignore next */
        cov_1n6p3s9sft().s[104]++;
        if (options.onAudioChunk) {
          /* istanbul ignore next */
          cov_1n6p3s9sft().b[43][0]++;
          cov_1n6p3s9sft().s[105]++;
          this.synthesizer.synthesisStarted = (s, e) => {
            /* istanbul ignore next */
            cov_1n6p3s9sft().f[20]++;
            var _a;
            /* istanbul ignore next */
            cov_1n6p3s9sft().s[106]++;
            console.log('🔊 Streaming synthesis started');
            /* istanbul ignore next */
            cov_1n6p3s9sft().s[107]++;
            /* istanbul ignore next */
            (cov_1n6p3s9sft().b[45][0]++, (_a = options.onSynthesisStart) === null) ||
            /* istanbul ignore next */
            (cov_1n6p3s9sft().b[45][1]++, _a === void 0) ?
            /* istanbul ignore next */
            (cov_1n6p3s9sft().b[44][0]++, void 0) :
            /* istanbul ignore next */
            (cov_1n6p3s9sft().b[44][1]++, _a.call(options));
          };
          /* istanbul ignore next */
          cov_1n6p3s9sft().s[108]++;
          this.synthesizer.synthesizing = (s, e) => {
            /* istanbul ignore next */
            cov_1n6p3s9sft().f[21]++;
            cov_1n6p3s9sft().s[109]++;
            if (
            /* istanbul ignore next */
            (cov_1n6p3s9sft().b[47][0]++, e.result.audioData) &&
            /* istanbul ignore next */
            (cov_1n6p3s9sft().b[47][1]++, e.result.audioData.byteLength > 0)) {
              /* istanbul ignore next */
              cov_1n6p3s9sft().b[46][0]++;
              cov_1n6p3s9sft().s[110]++;
              console.log(`🔊 Synthesizing chunk: ${e.result.audioData.byteLength} bytes`);
              /* istanbul ignore next */
              cov_1n6p3s9sft().s[111]++;
              audioChunks.push(e.result.audioData.slice(0));
              /* istanbul ignore next */
              cov_1n6p3s9sft().s[112]++;
              options.onAudioChunk(e.result.audioData.slice(0));
            } else
            /* istanbul ignore next */
            {
              cov_1n6p3s9sft().b[46][1]++;
            }
          };
        } else
        /* istanbul ignore next */
        {
          cov_1n6p3s9sft().b[43][1]++;
        }
        cov_1n6p3s9sft().s[113]++;
        this.synthesizer.speakSsmlAsync(ssml, result => {
          /* istanbul ignore next */
          cov_1n6p3s9sft().f[22]++;
          var _a;
          /* istanbul ignore next */
          cov_1n6p3s9sft().s[114]++;
          if (result.reason === SpeechSDK.ResultReason.SynthesizingAudioCompleted) {
            /* istanbul ignore next */
            cov_1n6p3s9sft().b[48][0]++;
            cov_1n6p3s9sft().s[115]++;
            console.log('✅ Speech synthesis completed');
            // If streaming was used, combine chunks, otherwise use result data
            /* istanbul ignore next */
            cov_1n6p3s9sft().s[116]++;
            if (
            /* istanbul ignore next */
            (cov_1n6p3s9sft().b[50][0]++, options.onAudioChunk) &&
            /* istanbul ignore next */
            (cov_1n6p3s9sft().b[50][1]++, audioChunks.length > 0)) {
              /* istanbul ignore next */
              cov_1n6p3s9sft().b[49][0]++;
              const totalLength =
              /* istanbul ignore next */
              (cov_1n6p3s9sft().s[117]++, audioChunks.reduce((sum, chunk) => {
                /* istanbul ignore next */
                cov_1n6p3s9sft().f[23]++;
                cov_1n6p3s9sft().s[118]++;
                return sum + chunk.byteLength;
              }, 0));
              const combined =
              /* istanbul ignore next */
              (cov_1n6p3s9sft().s[119]++, new Uint8Array(totalLength));
              let offset =
              /* istanbul ignore next */
              (cov_1n6p3s9sft().s[120]++, 0);
              /* istanbul ignore next */
              cov_1n6p3s9sft().s[121]++;
              audioChunks.forEach(chunk => {
                /* istanbul ignore next */
                cov_1n6p3s9sft().f[24]++;
                cov_1n6p3s9sft().s[122]++;
                combined.set(new Uint8Array(chunk), offset);
                /* istanbul ignore next */
                cov_1n6p3s9sft().s[123]++;
                offset += chunk.byteLength;
              });
              /* istanbul ignore next */
              cov_1n6p3s9sft().s[124]++;
              resolve(combined.buffer);
            } else {
              /* istanbul ignore next */
              cov_1n6p3s9sft().b[49][1]++;
              cov_1n6p3s9sft().s[125]++;
              resolve(result.audioData);
            }
          } else {
            /* istanbul ignore next */
            cov_1n6p3s9sft().b[48][1]++;
            cov_1n6p3s9sft().s[126]++;
            console.error('❌ Speech synthesis failed:', result.errorDetails);
            /* istanbul ignore next */
            cov_1n6p3s9sft().s[127]++;
            reject(new Error(
            /* istanbul ignore next */
            (cov_1n6p3s9sft().b[51][0]++, result.errorDetails) ||
            /* istanbul ignore next */
            (cov_1n6p3s9sft().b[51][1]++, 'Speech synthesis failed')));
          }
          /* istanbul ignore next */
          cov_1n6p3s9sft().s[128]++;
          /* istanbul ignore next */
          (cov_1n6p3s9sft().b[53][0]++, (_a = this.synthesizer) === null) ||
          /* istanbul ignore next */
          (cov_1n6p3s9sft().b[53][1]++, _a === void 0) ?
          /* istanbul ignore next */
          (cov_1n6p3s9sft().b[52][0]++, void 0) :
          /* istanbul ignore next */
          (cov_1n6p3s9sft().b[52][1]++, _a.close());
          /* istanbul ignore next */
          cov_1n6p3s9sft().s[129]++;
          this.synthesizer = null;
        }, error => {
          /* istanbul ignore next */
          cov_1n6p3s9sft().f[25]++;
          var _a;
          /* istanbul ignore next */
          cov_1n6p3s9sft().s[130]++;
          console.error('❌ Speech synthesis error:', error);
          /* istanbul ignore next */
          cov_1n6p3s9sft().s[131]++;
          reject(error);
          /* istanbul ignore next */
          cov_1n6p3s9sft().s[132]++;
          /* istanbul ignore next */
          (cov_1n6p3s9sft().b[55][0]++, (_a = this.synthesizer) === null) ||
          /* istanbul ignore next */
          (cov_1n6p3s9sft().b[55][1]++, _a === void 0) ?
          /* istanbul ignore next */
          (cov_1n6p3s9sft().b[54][0]++, void 0) :
          /* istanbul ignore next */
          (cov_1n6p3s9sft().b[54][1]++, _a.close());
          /* istanbul ignore next */
          cov_1n6p3s9sft().s[133]++;
          this.synthesizer = null;
        });
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1n6p3s9sft().s[134]++;
      console.error('❌ Failed to synthesize speech:', error);
      /* istanbul ignore next */
      cov_1n6p3s9sft().s[135]++;
      return null;
    }
  }
  /**
   * Check if the service is initialized and ready
   */
  isReady() {
    /* istanbul ignore next */
    cov_1n6p3s9sft().f[26]++;
    cov_1n6p3s9sft().s[136]++;
    return /* istanbul ignore next */(cov_1n6p3s9sft().b[56][0]++, this.isInitialized) &&
    /* istanbul ignore next */
    (cov_1n6p3s9sft().b[56][1]++, this.speechConfig !== null);
  }
  /**
   * Clean up resources
   */
  dispose() {
    /* istanbul ignore next */
    cov_1n6p3s9sft().f[27]++;
    cov_1n6p3s9sft().s[137]++;
    this.stopContinuousRecognition();
    /* istanbul ignore next */
    cov_1n6p3s9sft().s[138]++;
    if (this.synthesizer) {
      /* istanbul ignore next */
      cov_1n6p3s9sft().b[57][0]++;
      cov_1n6p3s9sft().s[139]++;
      this.synthesizer.close();
      /* istanbul ignore next */
      cov_1n6p3s9sft().s[140]++;
      this.synthesizer = null;
    } else
    /* istanbul ignore next */
    {
      cov_1n6p3s9sft().b[57][1]++;
    }
    cov_1n6p3s9sft().s[141]++;
    this.speechConfig = null;
    /* istanbul ignore next */
    cov_1n6p3s9sft().s[142]++;
    this.isInitialized = false;
    /* istanbul ignore next */
    cov_1n6p3s9sft().s[143]++;
    console.log('🧹 Azure Speech Service disposed');
  }
}
/* istanbul ignore next */
cov_1n6p3s9sft().s[144]++;
exports.AzureSpeechService = AzureSpeechService;
// Export singleton instance
/* istanbul ignore next */
cov_1n6p3s9sft().s[145]++;
exports.azureSpeechService = new AzureSpeechService();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,