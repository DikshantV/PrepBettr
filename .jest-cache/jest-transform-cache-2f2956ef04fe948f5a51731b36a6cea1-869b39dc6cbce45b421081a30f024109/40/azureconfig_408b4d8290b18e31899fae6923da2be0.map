{"version":3,"names":["cov_2gkmfq21ic","actualCoverage","s","exports","fetchAzureSecrets","initializeAzureEnvironment","getAzureConfig","identity_1","require","keyvault_secrets_1","AZURE_KEY_VAULT_URI","b","process","env","cachedSecrets","createKeyVaultClient","f","Error","credential","DefaultAzureCredential","SecretClient","error","console","log","client","speechKey","speechEndpoint","azureOpenAIKey","azureOpenAIEndpoint","azureOpenAIDeployment","azureOpenAIGpt35","azureOpenAIGpt4o","storageAccountName","storageAccountKey","formRecognizerEndpoint","formRecognizerKey","theirStackApiKey","Promise","all","getSecret","catch","value","azureOpenAIGpt35Deployment","azureOpenAIGpt4oDeployment","azureStorageAccountName","azureStorageAccountKey","azureFormRecognizerEndpoint","azureFormRecognizerKey","fallbackSecrets","SPEECH_KEY","NEXT_PUBLIC_SPEECH_KEY","SPEECH_ENDPOINT","NEXT_PUBLIC_SPEECH_ENDPOINT","AZURE_OPENAI_KEY","AZURE_OPENAI_ENDPOINT","AZURE_OPENAI_DEPLOYMENT","AZURE_OPENAI_GPT35_DEPLOYMENT","AZURE_OPENAI_GPT4O_DEPLOYMENT","AZURE_STORAGE_ACCOUNT_NAME","AZURE_STORAGE_ACCOUNT_KEY","AZURE_FORM_RECOGNIZER_ENDPOINT","AZURE_FORM_RECOGNIZER_KEY","THEIRSTACK_API_KEY","warn","secrets","NEXT_PUBLIC_AZURE_OPENAI_API_KEY","NEXT_PUBLIC_AZURE_OPENAI_ENDPOINT","NEXT_PUBLIC_AZURE_OPENAI_DEPLOYMENT","NEXT_PUBLIC_AZURE_OPENAI_GPT35_DEPLOYMENT","NEXT_PUBLIC_AZURE_OPENAI_GPT4O_DEPLOYMENT","keyVaultUri","hasSecretsCache","environment","deployments","default","gpt35Turbo","gpt4o"],"sources":["/Users/dikshantvashistha/PrepBettr/azure/lib/azure-config.ts"],"sourcesContent":["import { DefaultAzureCredential } from '@azure/identity';\nimport { SecretClient } from '@azure/keyvault-secrets';\n\n// Azure Key Vault configuration\nconst AZURE_KEY_VAULT_URI = process.env.AZURE_KEY_VAULT_URI || 'https://prepbettr-keyvault-083.vault.azure.net/';\n\ninterface AzureSecrets {\n  speechKey: string;\n  speechEndpoint: string;\n  azureOpenAIKey: string;\n  azureOpenAIEndpoint: string;\n  azureOpenAIDeployment: string;\n  azureOpenAIGpt35Deployment?: string; // gpt-35-turbo deployment\n  azureOpenAIGpt4oDeployment?: string; // gpt-4o deployment\n  azureStorageAccountName?: string; // Azure Storage Account Name\n  azureStorageAccountKey?: string; // Azure Storage Account Key\n  azureFormRecognizerEndpoint?: string; // Azure Form Recognizer Endpoint\n  azureFormRecognizerKey?: string; // Azure Form Recognizer Key\n  theirStackApiKey?: string; // TheirStack job discovery API key\n}\n\nlet cachedSecrets: AzureSecrets | null = null;\n\n/**\n * Initialize Azure Key Vault client\n */\nfunction createKeyVaultClient(): SecretClient {\n  if (!AZURE_KEY_VAULT_URI) {\n    throw new Error('AZURE_KEY_VAULT_URI environment variable is required');\n  }\n  \n  try {\n    const credential = new DefaultAzureCredential();\n    return new SecretClient(AZURE_KEY_VAULT_URI, credential);\n  } catch (error) {\n    console.error('‚ùå Failed to create DefaultAzureCredential:', error);\n    console.error('üí° Hint: Ensure you are logged in with \"az login\" for local development');\n    throw error;\n  }\n}\n\n/**\n * Fetch secrets from Azure Key Vault\n */\nexport async function fetchAzureSecrets(): Promise<AzureSecrets> {\n  // Return cached secrets if available\n  if (cachedSecrets) {\n    return cachedSecrets;\n  }\n\n  try {\n    console.log('üîë Fetching secrets from Azure Key Vault...');\n    const client = createKeyVaultClient();\n\n    // Fetch all required secrets\n    const [speechKey, speechEndpoint, azureOpenAIKey, azureOpenAIEndpoint, azureOpenAIDeployment, azureOpenAIGpt35, azureOpenAIGpt4o, storageAccountName, storageAccountKey, formRecognizerEndpoint, formRecognizerKey, theirStackApiKey] = await Promise.all([\n      client.getSecret('speech-key'),\n      client.getSecret('speech-endpoint'),\n      client.getSecret('azure-openai-key'),\n      client.getSecret('azure-openai-endpoint'),\n      client.getSecret('azure-openai-deployment'),\n      client.getSecret('azure-openai-gpt35-deployment').catch(() => null), // Optional\n      client.getSecret('azure-openai-gpt4o-deployment').catch(() => null),  // Optional\n      client.getSecret('azure-storage-account-name').catch(() => null), // Optional\n      client.getSecret('azure-storage-account-key').catch(() => null), // Optional\n      client.getSecret('azure-form-recognizer-endpoint').catch(() => null), // Optional\n      client.getSecret('azure-form-recognizer-key').catch(() => null), // Optional\n      client.getSecret('theirstack-api-key').catch(() => null) // TheirStack API key\n    ]);\n\n    if (!speechKey.value || !speechEndpoint.value || !azureOpenAIKey.value || !azureOpenAIEndpoint.value || !azureOpenAIDeployment.value) {\n      throw new Error('One or more required secrets are missing from Azure Key Vault');\n    }\n\n    cachedSecrets = {\n      speechKey: speechKey.value,\n      speechEndpoint: speechEndpoint.value,\n      azureOpenAIKey: azureOpenAIKey.value,\n      azureOpenAIEndpoint: azureOpenAIEndpoint.value,\n      azureOpenAIDeployment: azureOpenAIDeployment.value,\n      azureOpenAIGpt35Deployment: azureOpenAIGpt35?.value || 'gpt-35-turbo',\n      azureOpenAIGpt4oDeployment: azureOpenAIGpt4o?.value || 'gpt-4o',\n      azureStorageAccountName: storageAccountName?.value,\n      azureStorageAccountKey: storageAccountKey?.value,\n      azureFormRecognizerEndpoint: formRecognizerEndpoint?.value,\n      azureFormRecognizerKey: formRecognizerKey?.value,\n      theirStackApiKey: theirStackApiKey?.value\n    };\n\n    console.log('‚úÖ Azure secrets loaded successfully');\n    return cachedSecrets;\n\n  } catch (error) {\n    console.error('‚ùå Failed to fetch Azure secrets:', error);\n    \n    // Fallback to environment variables if Key Vault fails\n    console.log('üîÑ Falling back to environment variables...');\n    const fallbackSecrets = {\n      speechKey: process.env.SPEECH_KEY || process.env.NEXT_PUBLIC_SPEECH_KEY || '',\n      speechEndpoint: process.env.SPEECH_ENDPOINT || process.env.NEXT_PUBLIC_SPEECH_ENDPOINT || '',\n      azureOpenAIKey: process.env.AZURE_OPENAI_KEY || '',\n      azureOpenAIEndpoint: process.env.AZURE_OPENAI_ENDPOINT || '',\n      azureOpenAIDeployment: process.env.AZURE_OPENAI_DEPLOYMENT || '',\n      azureOpenAIGpt35Deployment: process.env.AZURE_OPENAI_GPT35_DEPLOYMENT || 'gpt-35-turbo',\n      azureOpenAIGpt4oDeployment: process.env.AZURE_OPENAI_GPT4O_DEPLOYMENT || 'gpt-4o',\n      azureStorageAccountName: process.env.AZURE_STORAGE_ACCOUNT_NAME,\n      azureStorageAccountKey: process.env.AZURE_STORAGE_ACCOUNT_KEY,\n      azureFormRecognizerEndpoint: process.env.AZURE_FORM_RECOGNIZER_ENDPOINT,\n      azureFormRecognizerKey: process.env.AZURE_FORM_RECOGNIZER_KEY,\n      theirStackApiKey: process.env.THEIRSTACK_API_KEY\n    };\n\n    if (!fallbackSecrets.speechKey || !fallbackSecrets.azureOpenAIKey) {\n      console.warn('‚ö†Ô∏è Some secrets are missing from both Key Vault and environment variables');\n    }\n\n    cachedSecrets = fallbackSecrets;\n    return cachedSecrets;\n  }\n}\n\n/**\n * Initialize environment variables from Azure Key Vault\n * This should be called at application startup\n */\nexport async function initializeAzureEnvironment(): Promise<void> {\n  try {\n    const secrets = await fetchAzureSecrets();\n    \n    // Set environment variables for the application\n    process.env.NEXT_PUBLIC_SPEECH_KEY = secrets.speechKey;\n    process.env.NEXT_PUBLIC_SPEECH_ENDPOINT = secrets.speechEndpoint;\n    process.env.AZURE_OPENAI_KEY = secrets.azureOpenAIKey;\n    process.env.AZURE_OPENAI_ENDPOINT = secrets.azureOpenAIEndpoint;\n    process.env.AZURE_OPENAI_DEPLOYMENT = secrets.azureOpenAIDeployment;\n    process.env.AZURE_OPENAI_GPT35_DEPLOYMENT = secrets.azureOpenAIGpt35Deployment;\n    process.env.AZURE_OPENAI_GPT4O_DEPLOYMENT = secrets.azureOpenAIGpt4oDeployment;\n\n    // Set TheirStack API key\n    if (secrets.theirStackApiKey) {\n      process.env.THEIRSTACK_API_KEY = secrets.theirStackApiKey;\n    }\n\n    // Set Azure OpenAI keys for public environment\n    process.env.NEXT_PUBLIC_AZURE_OPENAI_API_KEY = secrets.azureOpenAIKey;\n    process.env.NEXT_PUBLIC_AZURE_OPENAI_ENDPOINT = secrets.azureOpenAIEndpoint;\n    process.env.NEXT_PUBLIC_AZURE_OPENAI_DEPLOYMENT = secrets.azureOpenAIDeployment;\n    process.env.NEXT_PUBLIC_AZURE_OPENAI_GPT35_DEPLOYMENT = secrets.azureOpenAIGpt35Deployment;\n    process.env.NEXT_PUBLIC_AZURE_OPENAI_GPT4O_DEPLOYMENT = secrets.azureOpenAIGpt4oDeployment;\n\n    console.log('üåü Azure environment initialized successfully');\n  } catch (error) {\n    console.error('‚ùå Failed to initialize Azure environment:', error);\n    throw error;\n  }\n}\n\n/**\n * Get current Azure configuration (for debugging)\n */\nexport function getAzureConfig() {\n  return {\n    keyVaultUri: AZURE_KEY_VAULT_URI,\n    hasSecretsCache: !!cachedSecrets,\n    environment: {\n      speechKey: !!process.env.NEXT_PUBLIC_SPEECH_KEY,\n      speechEndpoint: !!process.env.NEXT_PUBLIC_SPEECH_ENDPOINT,\n      azureOpenAIKey: !!process.env.AZURE_OPENAI_KEY,\n      azureOpenAIEndpoint: !!process.env.AZURE_OPENAI_ENDPOINT,\n      azureOpenAIDeployment: !!process.env.AZURE_OPENAI_DEPLOYMENT,\n      azureOpenAIGpt35Deployment: !!process.env.AZURE_OPENAI_GPT35_DEPLOYMENT,\n      azureOpenAIGpt4oDeployment: !!process.env.AZURE_OPENAI_GPT4O_DEPLOYMENT\n    },\n    deployments: {\n      default: process.env.AZURE_OPENAI_DEPLOYMENT,\n      gpt35Turbo: process.env.AZURE_OPENAI_GPT35_DEPLOYMENT || 'gpt-35-turbo',\n      gpt4o: process.env.AZURE_OPENAI_GPT4O_DEPLOYMENT || 'gpt-4o'\n    }\n  };\n}\n"],"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","ignoreList":[]}