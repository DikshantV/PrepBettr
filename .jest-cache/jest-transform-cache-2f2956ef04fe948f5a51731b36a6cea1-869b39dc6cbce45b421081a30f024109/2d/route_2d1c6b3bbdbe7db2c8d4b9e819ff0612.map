{"version":3,"names":["exports","GET","server_1","cov_1gxi8lc4pa","s","require","firebase_user_service_1","request","f","timestamp","Date","toISOString","console","log","healthResult","firebaseUserService","healthCheck","NextResponse","json","status","healthy","b","checks","firebaseAuth","details","firestore","services","name","version","error","Error","message"],"sources":["/Users/dikshantvashistha/PrepBettr/app/api/health/auth/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { firebaseUserService } from '@/lib/services/firebase-user-service';\n\nexport async function GET(request: NextRequest) {\n  const timestamp = new Date().toISOString();\n  console.log(`üè• [${timestamp}] Auth health check requested`);\n  \n  try {\n    const healthResult = await firebaseUserService.healthCheck();\n    \n    console.log(`üè• [${timestamp}] Auth health check result:`, healthResult);\n    \n    return NextResponse.json({\n      status: healthResult.healthy ? 'healthy' : 'unhealthy',\n      timestamp,\n      checks: {\n        firebaseAuth: healthResult.details.firebaseAuth,\n        firestore: healthResult.details.firestore,\n      },\n      services: {\n        name: 'PrepBettr Auth System',\n        version: '1.0.0'\n      }\n    }, { \n      status: healthResult.healthy ? 200 : 503 \n    });\n    \n  } catch (error) {\n    console.error(`üè• [${timestamp}] Auth health check failed:`, error);\n    \n    return NextResponse.json({\n      status: 'error',\n      timestamp,\n      error: error instanceof Error ? error.message : 'Unknown error',\n      checks: {\n        firebaseAuth: 'error',\n        firestore: 'error'\n      }\n    }, { status: 500 });\n  }\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGAA,OAAA,CAAAC,GAAA,GAAAA,GAAA;AAHA,MAAAC,QAAA;AAAA;AAAA,CAAAC,cAAA,GAAAC,CAAA,OAAAC,OAAA;AACA,MAAAC,uBAAA;AAAA;AAAA,CAAAH,cAAA,GAAAC,CAAA,OAAAC,OAAA;AAEO,eAAeJ,GAAGA,CAACM,OAAoB;EAAA;EAAAJ,cAAA,GAAAK,CAAA;EAC5C,MAAMC,SAAS;EAAA;EAAA,CAAAN,cAAA,GAAAC,CAAA,OAAG,IAAIM,IAAI,EAAE,CAACC,WAAW,EAAE;EAAC;EAAAR,cAAA,GAAAC,CAAA;EAC3CQ,OAAO,CAACC,GAAG,CAAC,OAAOJ,SAAS,+BAA+B,CAAC;EAAC;EAAAN,cAAA,GAAAC,CAAA;EAE7D,IAAI;IACF,MAAMU,YAAY;IAAA;IAAA,CAAAX,cAAA,GAAAC,CAAA,OAAG,MAAME,uBAAA,CAAAS,mBAAmB,CAACC,WAAW,EAAE;IAAC;IAAAb,cAAA,GAAAC,CAAA;IAE7DQ,OAAO,CAACC,GAAG,CAAC,OAAOJ,SAAS,6BAA6B,EAAEK,YAAY,CAAC;IAAC;IAAAX,cAAA,GAAAC,CAAA;IAEzE,OAAOF,QAAA,CAAAe,YAAY,CAACC,IAAI,CAAC;MACvBC,MAAM,EAAEL,YAAY,CAACM,OAAO;MAAA;MAAA,CAAAjB,cAAA,GAAAkB,CAAA,UAAG,SAAS;MAAA;MAAA,CAAAlB,cAAA,GAAAkB,CAAA,UAAG,WAAW;MACtDZ,SAAS;MACTa,MAAM,EAAE;QACNC,YAAY,EAAET,YAAY,CAACU,OAAO,CAACD,YAAY;QAC/CE,SAAS,EAAEX,YAAY,CAACU,OAAO,CAACC;OACjC;MACDC,QAAQ,EAAE;QACRC,IAAI,EAAE,uBAAuB;QAC7BC,OAAO,EAAE;;KAEZ,EAAE;MACDT,MAAM,EAAEL,YAAY,CAACM,OAAO;MAAA;MAAA,CAAAjB,cAAA,GAAAkB,CAAA,UAAG,GAAG;MAAA;MAAA,CAAAlB,cAAA,GAAAkB,CAAA,UAAG,GAAG;KACzC,CAAC;EAEJ,CAAC,CAAC,OAAOQ,KAAK,EAAE;IAAA;IAAA1B,cAAA,GAAAC,CAAA;IACdQ,OAAO,CAACiB,KAAK,CAAC,OAAOpB,SAAS,6BAA6B,EAAEoB,KAAK,CAAC;IAAC;IAAA1B,cAAA,GAAAC,CAAA;IAEpE,OAAOF,QAAA,CAAAe,YAAY,CAACC,IAAI,CAAC;MACvBC,MAAM,EAAE,OAAO;MACfV,SAAS;MACToB,KAAK,EAAEA,KAAK,YAAYC,KAAK;MAAA;MAAA,CAAA3B,cAAA,GAAAkB,CAAA,UAAGQ,KAAK,CAACE,OAAO;MAAA;MAAA,CAAA5B,cAAA,GAAAkB,CAAA,UAAG,eAAe;MAC/DC,MAAM,EAAE;QACNC,YAAY,EAAE,OAAO;QACrBE,SAAS,EAAE;;KAEd,EAAE;MAAEN,MAAM,EAAE;IAAG,CAAE,CAAC;EACrB;AACF","ignoreList":[]}