{"version":3,"names":["exports","GET","server_1","cov_1ir9ht454k","s","require","interview_workflow_1","workflow","getWorkflow","f","b","InterviewWorkflow","request","params","resolvedParams","sessionId","id","searchParams","URL","url","refresh","get","NextResponse","json","error","status","console","log","getStatus","success","timestamp","Date","now","computed","isActive","state","isCompleted","canAdvance","currentStageIndex","totalStages","currentStageName","currentStage","_a","stages","find","stage","name","nextStageName","_b","estimatedCompletionTime","timing","startTime","totalEstimatedMinutes","toISOString","healthStatus","code","message"],"sources":["/Users/dikshantvashistha/PrepBettr/app/api/interview/session/[id]/status/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { InterviewWorkflow } from '@/lib/azure-ai-foundry/workflows/interview-workflow';\n\n// Lazy initialization to avoid build-time issues\nlet workflow: InterviewWorkflow | null = null;\n\nfunction getWorkflow(): InterviewWorkflow {\n  if (!workflow) {\n    workflow = new InterviewWorkflow();\n  }\n  return workflow;\n}\n\n/**\n * GET /api/interview/session/[id]/status\n * \n * Get current status of an interview session\n * \n * Path Parameters:\n * - id: sessionId (string)\n * \n * Query Parameters:\n * - refresh?: boolean (force refresh timing data)\n * \n * Response:\n * - status: WorkflowStatus (complete status object)\n * - timing: real-time timing information\n * - progress: percentage and stage information\n */\nexport async function GET(\n  request: NextRequest,\n  { params }: { params: Promise<{ id: string }> }\n) {\n  const resolvedParams = await params;\n  const sessionId = resolvedParams.id;\n  \n  try {\n    const { searchParams } = new URL(request.url);\n    const refresh = searchParams.get('refresh') === 'true';\n\n    if (!sessionId) {\n      return NextResponse.json({\n        error: 'Session ID is required'\n      }, { status: 400 });\n    }\n\n    console.log(`[API] Getting status for session: ${sessionId}${refresh ? ' (refresh)' : ''}`);\n\n    // Get current workflow status\n    const status = await getWorkflow().getStatus(sessionId);\n\n    return NextResponse.json({\n      success: true,\n      sessionId,\n      status,\n      timestamp: Date.now(),\n      // Additional computed fields for convenience\n      computed: {\n        isActive: status.state === 'in-progress',\n        isCompleted: status.state === 'completed',\n        canAdvance: status.currentStageIndex < status.totalStages && status.state !== 'failed',\n        currentStageName: status.currentStage ? \n          status.stages.find(s => s.stage.id === status.currentStage)?.stage.name : \n          null,\n        nextStageName: status.currentStageIndex < status.totalStages ? \n          status.stages[status.currentStageIndex]?.stage.name : \n          null,\n        estimatedCompletionTime: new Date(status.timing.startTime + status.timing.totalEstimatedMinutes * 60000).toISOString(),\n        healthStatus: status.error ? 'error' : status.state === 'failed' ? 'failed' : 'healthy'\n      }\n    });\n\n  } catch (error: any) {\n    console.error(`[API] Error getting session status:`, error);\n    \n    if (error.code === 'SESSION_NOT_FOUND') {\n      return NextResponse.json({\n        success: false,\n        error: 'Session not found',\n        sessionId: resolvedParams.id\n      }, { status: 404 });\n    }\n\n    return NextResponse.json({\n      success: false,\n      error: error.message || 'Failed to get session status',\n      code: error.code || 'UNKNOWN_ERROR',\n      sessionId: resolvedParams.id\n    }, { status: 500 });\n  }\n}\n"],"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","ignoreList":[]}