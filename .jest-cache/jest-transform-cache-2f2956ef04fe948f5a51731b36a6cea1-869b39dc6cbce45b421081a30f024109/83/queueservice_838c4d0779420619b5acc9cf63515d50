35f3b6bd622cda75e39ab2fe94b7450b
/* istanbul ignore next */
function cov_1p5u1l0aza() {
  var path = "/Users/dikshantvashistha/PrepBettr/azure/lib/services/queue-service.js";
  var hash = "3d9b760f93c1a4b355928003dda4015ef92af416";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dikshantvashistha/PrepBettr/azure/lib/services/queue-service.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 31
        },
        end: {
          line: 1,
          column: 62
        }
      },
      "1": {
        start: {
          line: 2,
          column: 35
        },
        end: {
          line: 2,
          column: 61
        }
      },
      "2": {
        start: {
          line: 6,
          column: 8
        },
        end: {
          line: 6,
          column: 39
        }
      },
      "3": {
        start: {
          line: 7,
          column: 8
        },
        end: {
          line: 12,
          column: 10
        }
      },
      "4": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 18,
          column: 9
        }
      },
      "5": {
        start: {
          line: 17,
          column: 12
        },
        end: {
          line: 17,
          column: 19
        }
      },
      "6": {
        start: {
          line: 20,
          column: 33
        },
        end: {
          line: 20,
          column: 64
        }
      },
      "7": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 23,
          column: 9
        }
      },
      "8": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 22,
          column: 81
        }
      },
      "9": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 92
        }
      },
      "10": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 36,
          column: 9
        }
      },
      "11": {
        start: {
          line: 29,
          column: 12
        },
        end: {
          line: 35,
          column: 13
        }
      },
      "12": {
        start: {
          line: 30,
          column: 36
        },
        end: {
          line: 30,
          column: 85
        }
      },
      "13": {
        start: {
          line: 31,
          column: 16
        },
        end: {
          line: 31,
          column: 54
        }
      },
      "14": {
        start: {
          line: 32,
          column: 16
        },
        end: {
          line: 32,
          column: 59
        }
      },
      "15": {
        start: {
          line: 34,
          column: 16
        },
        end: {
          line: 34,
          column: 75
        }
      },
      "16": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 42,
          column: 9
        }
      },
      "17": {
        start: {
          line: 41,
          column: 12
        },
        end: {
          line: 41,
          column: 36
        }
      },
      "18": {
        start: {
          line: 44,
          column: 28
        },
        end: {
          line: 44,
          column: 77
        }
      },
      "19": {
        start: {
          line: 45,
          column: 28
        },
        end: {
          line: 45,
          column: 91
        }
      },
      "20": {
        start: {
          line: 47,
          column: 30
        },
        end: {
          line: 47,
          column: 73
        }
      },
      "21": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 52,
          column: 11
        }
      },
      "22": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 58,
          column: 9
        }
      },
      "23": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 57,
          column: 36
        }
      },
      "24": {
        start: {
          line: 60,
          column: 28
        },
        end: {
          line: 60,
          column: 77
        }
      },
      "25": {
        start: {
          line: 61,
          column: 25
        },
        end: {
          line: 64,
          column: 10
        }
      },
      "26": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 74,
          column: 12
        }
      },
      "27": {
        start: {
          line: 66,
          column: 58
        },
        end: {
          line: 74,
          column: 9
        }
      },
      "28": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 80,
          column: 9
        }
      },
      "29": {
        start: {
          line: 79,
          column: 12
        },
        end: {
          line: 79,
          column: 36
        }
      },
      "30": {
        start: {
          line: 82,
          column: 28
        },
        end: {
          line: 82,
          column: 77
        }
      },
      "31": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 83,
          column: 70
        }
      },
      "32": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 89,
          column: 9
        }
      },
      "33": {
        start: {
          line: 88,
          column: 12
        },
        end: {
          line: 88,
          column: 36
        }
      },
      "34": {
        start: {
          line: 91,
          column: 28
        },
        end: {
          line: 91,
          column: 77
        }
      },
      "35": {
        start: {
          line: 92,
          column: 28
        },
        end: {
          line: 92,
          column: 91
        }
      },
      "36": {
        start: {
          line: 93,
          column: 30
        },
        end: {
          line: 93,
          column: 73
        }
      },
      "37": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 95,
          column: 104
        }
      },
      "38": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 101,
          column: 9
        }
      },
      "39": {
        start: {
          line: 100,
          column: 12
        },
        end: {
          line: 100,
          column: 36
        }
      },
      "40": {
        start: {
          line: 103,
          column: 28
        },
        end: {
          line: 103,
          column: 77
        }
      },
      "41": {
        start: {
          line: 104,
          column: 27
        },
        end: {
          line: 104,
          column: 60
        }
      },
      "42": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 105,
          column: 51
        }
      },
      "43": {
        start: {
          line: 109,
          column: 0
        },
        end: {
          line: 109,
          column: 36
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 5,
            column: 5
          }
        },
        loc: {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 13,
            column: 5
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 23
          },
          end: {
            line: 37,
            column: 5
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        },
        loc: {
          start: {
            line: 39,
            column: 55
          },
          end: {
            line: 53,
            column: 5
          }
        },
        line: 39
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 55,
            column: 4
          },
          end: {
            line: 55,
            column: 5
          }
        },
        loc: {
          start: {
            line: 55,
            column: 51
          },
          end: {
            line: 75,
            column: 5
          }
        },
        line: 55
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 66,
            column: 49
          },
          end: {
            line: 66,
            column: 50
          }
        },
        loc: {
          start: {
            line: 66,
            column: 58
          },
          end: {
            line: 74,
            column: 9
          }
        },
        line: 66
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 77,
            column: 4
          },
          end: {
            line: 77,
            column: 5
          }
        },
        loc: {
          start: {
            line: 77,
            column: 58
          },
          end: {
            line: 84,
            column: 5
          }
        },
        line: 77
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 86,
            column: 4
          },
          end: {
            line: 86,
            column: 5
          }
        },
        loc: {
          start: {
            line: 86,
            column: 90
          },
          end: {
            line: 96,
            column: 5
          }
        },
        line: 86
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 98,
            column: 4
          },
          end: {
            line: 98,
            column: 5
          }
        },
        loc: {
          start: {
            line: 98,
            column: 36
          },
          end: {
            line: 106,
            column: 5
          }
        },
        line: 98
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 16,
            column: 8
          },
          end: {
            line: 18,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 16,
            column: 8
          },
          end: {
            line: 18,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 16
      },
      "1": {
        loc: {
          start: {
            line: 21,
            column: 8
          },
          end: {
            line: 23,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 21,
            column: 8
          },
          end: {
            line: 23,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 21
      },
      "2": {
        loc: {
          start: {
            line: 39,
            column: 41
          },
          end: {
            line: 39,
            column: 53
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 39,
            column: 51
          },
          end: {
            line: 39,
            column: 53
          }
        }],
        line: 39
      },
      "3": {
        loc: {
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 42,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 42,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 40
      },
      "4": {
        loc: {
          start: {
            line: 45,
            column: 28
          },
          end: {
            line: 45,
            column: 91
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 45,
            column: 58
          },
          end: {
            line: 45,
            column: 65
          }
        }, {
          start: {
            line: 45,
            column: 68
          },
          end: {
            line: 45,
            column: 91
          }
        }],
        line: 45
      },
      "5": {
        loc: {
          start: {
            line: 50,
            column: 40
          },
          end: {
            line: 50,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 50,
            column: 40
          },
          end: {
            line: 50,
            column: 65
          }
        }, {
          start: {
            line: 50,
            column: 69
          },
          end: {
            line: 50,
            column: 70
          }
        }],
        line: 50
      },
      "6": {
        loc: {
          start: {
            line: 51,
            column: 40
          },
          end: {
            line: 51,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 51,
            column: 40
          },
          end: {
            line: 51,
            column: 58
          }
        }, {
          start: {
            line: 51,
            column: 62
          },
          end: {
            line: 51,
            column: 68
          }
        }],
        line: 51
      },
      "7": {
        loc: {
          start: {
            line: 55,
            column: 37
          },
          end: {
            line: 55,
            column: 49
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 55,
            column: 47
          },
          end: {
            line: 55,
            column: 49
          }
        }],
        line: 55
      },
      "8": {
        loc: {
          start: {
            line: 56,
            column: 8
          },
          end: {
            line: 58,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 8
          },
          end: {
            line: 58,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 56
      },
      "9": {
        loc: {
          start: {
            line: 62,
            column: 30
          },
          end: {
            line: 62,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 62,
            column: 30
          },
          end: {
            line: 62,
            column: 54
          }
        }, {
          start: {
            line: 62,
            column: 58
          },
          end: {
            line: 62,
            column: 59
          }
        }],
        line: 62
      },
      "10": {
        loc: {
          start: {
            line: 63,
            column: 40
          },
          end: {
            line: 63,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 63,
            column: 40
          },
          end: {
            line: 63,
            column: 65
          }
        }, {
          start: {
            line: 63,
            column: 69
          },
          end: {
            line: 63,
            column: 71
          }
        }],
        line: 63
      },
      "11": {
        loc: {
          start: {
            line: 78,
            column: 8
          },
          end: {
            line: 80,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 78,
            column: 8
          },
          end: {
            line: 80,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 78
      },
      "12": {
        loc: {
          start: {
            line: 86,
            column: 67
          },
          end: {
            line: 86,
            column: 88
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 86,
            column: 87
          },
          end: {
            line: 86,
            column: 88
          }
        }],
        line: 86
      },
      "13": {
        loc: {
          start: {
            line: 87,
            column: 8
          },
          end: {
            line: 89,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 87,
            column: 8
          },
          end: {
            line: 89,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 87
      },
      "14": {
        loc: {
          start: {
            line: 92,
            column: 28
          },
          end: {
            line: 92,
            column: 91
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 92,
            column: 58
          },
          end: {
            line: 92,
            column: 65
          }
        }, {
          start: {
            line: 92,
            column: 68
          },
          end: {
            line: 92,
            column: 91
          }
        }],
        line: 92
      },
      "15": {
        loc: {
          start: {
            line: 99,
            column: 8
          },
          end: {
            line: 101,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 99,
            column: 8
          },
          end: {
            line: 101,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 99
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0]
    },
    inputSourceMap: null,
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "3d9b760f93c1a4b355928003dda4015ef92af416"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1p5u1l0aza = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1p5u1l0aza();
const {
  QueueServiceClient
} =
/* istanbul ignore next */
(cov_1p5u1l0aza().s[0]++, require('@azure/storage-queue'));
const {
  DefaultAzureCredential
} =
/* istanbul ignore next */
(cov_1p5u1l0aza().s[1]++, require('@azure/identity'));
class QueueService {
  constructor() {
    /* istanbul ignore next */
    cov_1p5u1l0aza().f[0]++;
    cov_1p5u1l0aza().s[2]++;
    this.queueServiceClient = null;
    /* istanbul ignore next */
    cov_1p5u1l0aza().s[3]++;
    this.queues = {
      SEARCH_JOBS: 'search-jobs',
      PROCESS_APPLICATIONS: 'process-applications',
      FOLLOW_UP_REMINDERS: 'follow-up-reminders',
      AUTOMATION_LOGS: 'automation-logs'
    };
  }
  async initialize() {
    /* istanbul ignore next */
    cov_1p5u1l0aza().f[1]++;
    cov_1p5u1l0aza().s[4]++;
    if (this.queueServiceClient) {
      /* istanbul ignore next */
      cov_1p5u1l0aza().b[0][0]++;
      cov_1p5u1l0aza().s[5]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1p5u1l0aza().b[0][1]++;
    }
    const connectionString =
    /* istanbul ignore next */
    (cov_1p5u1l0aza().s[6]++, process.env.AzureWebJobsStorage);
    /* istanbul ignore next */
    cov_1p5u1l0aza().s[7]++;
    if (!connectionString) {
      /* istanbul ignore next */
      cov_1p5u1l0aza().b[1][0]++;
      cov_1p5u1l0aza().s[8]++;
      throw new Error('AzureWebJobsStorage connection string is required');
    } else
    /* istanbul ignore next */
    {
      cov_1p5u1l0aza().b[1][1]++;
    }
    cov_1p5u1l0aza().s[9]++;
    this.queueServiceClient = QueueServiceClient.fromConnectionString(connectionString);

    // Create queues if they don't exist
    /* istanbul ignore next */
    cov_1p5u1l0aza().s[10]++;
    for (const queueName of Object.values(this.queues)) {
      /* istanbul ignore next */
      cov_1p5u1l0aza().s[11]++;
      try {
        const queueClient =
        /* istanbul ignore next */
        (cov_1p5u1l0aza().s[12]++, this.queueServiceClient.getQueueClient(queueName));
        /* istanbul ignore next */
        cov_1p5u1l0aza().s[13]++;
        await queueClient.createIfNotExists();
        /* istanbul ignore next */
        cov_1p5u1l0aza().s[14]++;
        console.log(`Queue ${queueName} is ready`);
      } catch (error) {
        /* istanbul ignore next */
        cov_1p5u1l0aza().s[15]++;
        console.error(`Error creating queue ${queueName}:`, error);
      }
    }
  }
  async addMessage(queueName, message, options =
  /* istanbul ignore next */
  (cov_1p5u1l0aza().b[2][0]++, {})) {
    /* istanbul ignore next */
    cov_1p5u1l0aza().f[2]++;
    cov_1p5u1l0aza().s[16]++;
    if (!this.queueServiceClient) {
      /* istanbul ignore next */
      cov_1p5u1l0aza().b[3][0]++;
      cov_1p5u1l0aza().s[17]++;
      await this.initialize();
    } else
    /* istanbul ignore next */
    {
      cov_1p5u1l0aza().b[3][1]++;
    }
    const queueClient =
    /* istanbul ignore next */
    (cov_1p5u1l0aza().s[18]++, this.queueServiceClient.getQueueClient(queueName));
    const messageText =
    /* istanbul ignore next */
    (cov_1p5u1l0aza().s[19]++, typeof message === 'string' ?
    /* istanbul ignore next */
    (cov_1p5u1l0aza().b[4][0]++, message) :
    /* istanbul ignore next */
    (cov_1p5u1l0aza().b[4][1]++, JSON.stringify(message)));
    const base64Message =
    /* istanbul ignore next */
    (cov_1p5u1l0aza().s[20]++, Buffer.from(messageText).toString('base64'));
    /* istanbul ignore next */
    cov_1p5u1l0aza().s[21]++;
    return await queueClient.sendMessage(base64Message, {
      visibilityTimeoutInSeconds:
      /* istanbul ignore next */
      (cov_1p5u1l0aza().b[5][0]++, options.visibilityTimeout) ||
      /* istanbul ignore next */
      (cov_1p5u1l0aza().b[5][1]++, 0),
      messageTimeToLiveInSeconds:
      /* istanbul ignore next */
      (cov_1p5u1l0aza().b[6][0]++, options.timeToLive) ||
      /* istanbul ignore next */
      (cov_1p5u1l0aza().b[6][1]++, 604800) // 7 days default
    });
  }
  async receiveMessages(queueName, options =
  /* istanbul ignore next */
  (cov_1p5u1l0aza().b[7][0]++, {})) {
    /* istanbul ignore next */
    cov_1p5u1l0aza().f[3]++;
    cov_1p5u1l0aza().s[22]++;
    if (!this.queueServiceClient) {
      /* istanbul ignore next */
      cov_1p5u1l0aza().b[8][0]++;
      cov_1p5u1l0aza().s[23]++;
      await this.initialize();
    } else
    /* istanbul ignore next */
    {
      cov_1p5u1l0aza().b[8][1]++;
    }
    const queueClient =
    /* istanbul ignore next */
    (cov_1p5u1l0aza().s[24]++, this.queueServiceClient.getQueueClient(queueName));
    const response =
    /* istanbul ignore next */
    (cov_1p5u1l0aza().s[25]++, await queueClient.receiveMessages({
      numberOfMessages:
      /* istanbul ignore next */
      (cov_1p5u1l0aza().b[9][0]++, options.numberOfMessages) ||
      /* istanbul ignore next */
      (cov_1p5u1l0aza().b[9][1]++, 1),
      visibilityTimeoutInSeconds:
      /* istanbul ignore next */
      (cov_1p5u1l0aza().b[10][0]++, options.visibilityTimeout) ||
      /* istanbul ignore next */
      (cov_1p5u1l0aza().b[10][1]++, 30)
    }));
    /* istanbul ignore next */
    cov_1p5u1l0aza().s[26]++;
    return response.receivedMessageItems.map(item => {
      /* istanbul ignore next */
      cov_1p5u1l0aza().f[4]++;
      cov_1p5u1l0aza().s[27]++;
      return {
        id: item.messageId,
        popReceipt: item.popReceipt,
        dequeueCount: item.dequeueCount,
        data: JSON.parse(Buffer.from(item.messageText, 'base64').toString()),
        insertionTime: item.insertionTime,
        expirationTime: item.expirationTime,
        timeNextVisible: item.timeNextVisible
      };
    });
  }
  async deleteMessage(queueName, messageId, popReceipt) {
    /* istanbul ignore next */
    cov_1p5u1l0aza().f[5]++;
    cov_1p5u1l0aza().s[28]++;
    if (!this.queueServiceClient) {
      /* istanbul ignore next */
      cov_1p5u1l0aza().b[11][0]++;
      cov_1p5u1l0aza().s[29]++;
      await this.initialize();
    } else
    /* istanbul ignore next */
    {
      cov_1p5u1l0aza().b[11][1]++;
    }
    const queueClient =
    /* istanbul ignore next */
    (cov_1p5u1l0aza().s[30]++, this.queueServiceClient.getQueueClient(queueName));
    /* istanbul ignore next */
    cov_1p5u1l0aza().s[31]++;
    return await queueClient.deleteMessage(messageId, popReceipt);
  }
  async updateMessage(queueName, messageId, popReceipt, message, visibilityTimeout =
  /* istanbul ignore next */
  (cov_1p5u1l0aza().b[12][0]++, 0)) {
    /* istanbul ignore next */
    cov_1p5u1l0aza().f[6]++;
    cov_1p5u1l0aza().s[32]++;
    if (!this.queueServiceClient) {
      /* istanbul ignore next */
      cov_1p5u1l0aza().b[13][0]++;
      cov_1p5u1l0aza().s[33]++;
      await this.initialize();
    } else
    /* istanbul ignore next */
    {
      cov_1p5u1l0aza().b[13][1]++;
    }
    const queueClient =
    /* istanbul ignore next */
    (cov_1p5u1l0aza().s[34]++, this.queueServiceClient.getQueueClient(queueName));
    const messageText =
    /* istanbul ignore next */
    (cov_1p5u1l0aza().s[35]++, typeof message === 'string' ?
    /* istanbul ignore next */
    (cov_1p5u1l0aza().b[14][0]++, message) :
    /* istanbul ignore next */
    (cov_1p5u1l0aza().b[14][1]++, JSON.stringify(message)));
    const base64Message =
    /* istanbul ignore next */
    (cov_1p5u1l0aza().s[36]++, Buffer.from(messageText).toString('base64'));
    /* istanbul ignore next */
    cov_1p5u1l0aza().s[37]++;
    return await queueClient.updateMessage(messageId, popReceipt, base64Message, visibilityTimeout);
  }
  async getQueueLength(queueName) {
    /* istanbul ignore next */
    cov_1p5u1l0aza().f[7]++;
    cov_1p5u1l0aza().s[38]++;
    if (!this.queueServiceClient) {
      /* istanbul ignore next */
      cov_1p5u1l0aza().b[15][0]++;
      cov_1p5u1l0aza().s[39]++;
      await this.initialize();
    } else
    /* istanbul ignore next */
    {
      cov_1p5u1l0aza().b[15][1]++;
    }
    const queueClient =
    /* istanbul ignore next */
    (cov_1p5u1l0aza().s[40]++, this.queueServiceClient.getQueueClient(queueName));
    const properties =
    /* istanbul ignore next */
    (cov_1p5u1l0aza().s[41]++, await queueClient.getProperties());
    /* istanbul ignore next */
    cov_1p5u1l0aza().s[42]++;
    return properties.approximateMessagesCount;
  }
}
/* istanbul ignore next */
cov_1p5u1l0aza().s[43]++;
module.exports = new QueueService();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMXA1dTFsMGF6YSIsImFjdHVhbENvdmVyYWdlIiwiUXVldWVTZXJ2aWNlQ2xpZW50IiwicyIsInJlcXVpcmUiLCJEZWZhdWx0QXp1cmVDcmVkZW50aWFsIiwiUXVldWVTZXJ2aWNlIiwiY29uc3RydWN0b3IiLCJmIiwicXVldWVTZXJ2aWNlQ2xpZW50IiwicXVldWVzIiwiU0VBUkNIX0pPQlMiLCJQUk9DRVNTX0FQUExJQ0FUSU9OUyIsIkZPTExPV19VUF9SRU1JTkRFUlMiLCJBVVRPTUFUSU9OX0xPR1MiLCJpbml0aWFsaXplIiwiYiIsImNvbm5lY3Rpb25TdHJpbmciLCJwcm9jZXNzIiwiZW52IiwiQXp1cmVXZWJKb2JzU3RvcmFnZSIsIkVycm9yIiwiZnJvbUNvbm5lY3Rpb25TdHJpbmciLCJxdWV1ZU5hbWUiLCJPYmplY3QiLCJ2YWx1ZXMiLCJxdWV1ZUNsaWVudCIsImdldFF1ZXVlQ2xpZW50IiwiY3JlYXRlSWZOb3RFeGlzdHMiLCJjb25zb2xlIiwibG9nIiwiZXJyb3IiLCJhZGRNZXNzYWdlIiwibWVzc2FnZSIsIm9wdGlvbnMiLCJtZXNzYWdlVGV4dCIsIkpTT04iLCJzdHJpbmdpZnkiLCJiYXNlNjRNZXNzYWdlIiwiQnVmZmVyIiwiZnJvbSIsInRvU3RyaW5nIiwic2VuZE1lc3NhZ2UiLCJ2aXNpYmlsaXR5VGltZW91dEluU2Vjb25kcyIsInZpc2liaWxpdHlUaW1lb3V0IiwibWVzc2FnZVRpbWVUb0xpdmVJblNlY29uZHMiLCJ0aW1lVG9MaXZlIiwicmVjZWl2ZU1lc3NhZ2VzIiwicmVzcG9uc2UiLCJudW1iZXJPZk1lc3NhZ2VzIiwicmVjZWl2ZWRNZXNzYWdlSXRlbXMiLCJtYXAiLCJpdGVtIiwiaWQiLCJtZXNzYWdlSWQiLCJwb3BSZWNlaXB0IiwiZGVxdWV1ZUNvdW50IiwiZGF0YSIsInBhcnNlIiwiaW5zZXJ0aW9uVGltZSIsImV4cGlyYXRpb25UaW1lIiwidGltZU5leHRWaXNpYmxlIiwiZGVsZXRlTWVzc2FnZSIsInVwZGF0ZU1lc3NhZ2UiLCJnZXRRdWV1ZUxlbmd0aCIsInByb3BlcnRpZXMiLCJnZXRQcm9wZXJ0aWVzIiwiYXBwcm94aW1hdGVNZXNzYWdlc0NvdW50IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbInF1ZXVlLXNlcnZpY2UuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBRdWV1ZVNlcnZpY2VDbGllbnQgfSA9IHJlcXVpcmUoJ0BhenVyZS9zdG9yYWdlLXF1ZXVlJyk7XG5jb25zdCB7IERlZmF1bHRBenVyZUNyZWRlbnRpYWwgfSA9IHJlcXVpcmUoJ0BhenVyZS9pZGVudGl0eScpO1xuXG5jbGFzcyBRdWV1ZVNlcnZpY2Uge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLnF1ZXVlU2VydmljZUNsaWVudCA9IG51bGw7XG4gICAgICAgIHRoaXMucXVldWVzID0ge1xuICAgICAgICAgICAgU0VBUkNIX0pPQlM6ICdzZWFyY2gtam9icycsXG4gICAgICAgICAgICBQUk9DRVNTX0FQUExJQ0FUSU9OUzogJ3Byb2Nlc3MtYXBwbGljYXRpb25zJyxcbiAgICAgICAgICAgIEZPTExPV19VUF9SRU1JTkRFUlM6ICdmb2xsb3ctdXAtcmVtaW5kZXJzJyxcbiAgICAgICAgICAgIEFVVE9NQVRJT05fTE9HUzogJ2F1dG9tYXRpb24tbG9ncydcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICBhc3luYyBpbml0aWFsaXplKCkge1xuICAgICAgICBpZiAodGhpcy5xdWV1ZVNlcnZpY2VDbGllbnQpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IGNvbm5lY3Rpb25TdHJpbmcgPSBwcm9jZXNzLmVudi5BenVyZVdlYkpvYnNTdG9yYWdlO1xuICAgICAgICBpZiAoIWNvbm5lY3Rpb25TdHJpbmcpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignQXp1cmVXZWJKb2JzU3RvcmFnZSBjb25uZWN0aW9uIHN0cmluZyBpcyByZXF1aXJlZCcpO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5xdWV1ZVNlcnZpY2VDbGllbnQgPSBRdWV1ZVNlcnZpY2VDbGllbnQuZnJvbUNvbm5lY3Rpb25TdHJpbmcoY29ubmVjdGlvblN0cmluZyk7XG5cbiAgICAgICAgLy8gQ3JlYXRlIHF1ZXVlcyBpZiB0aGV5IGRvbid0IGV4aXN0XG4gICAgICAgIGZvciAoY29uc3QgcXVldWVOYW1lIG9mIE9iamVjdC52YWx1ZXModGhpcy5xdWV1ZXMpKSB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHF1ZXVlQ2xpZW50ID0gdGhpcy5xdWV1ZVNlcnZpY2VDbGllbnQuZ2V0UXVldWVDbGllbnQocXVldWVOYW1lKTtcbiAgICAgICAgICAgICAgICBhd2FpdCBxdWV1ZUNsaWVudC5jcmVhdGVJZk5vdEV4aXN0cygpO1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGBRdWV1ZSAke3F1ZXVlTmFtZX0gaXMgcmVhZHlgKTtcbiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihgRXJyb3IgY3JlYXRpbmcgcXVldWUgJHtxdWV1ZU5hbWV9OmAsIGVycm9yKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIGFzeW5jIGFkZE1lc3NhZ2UocXVldWVOYW1lLCBtZXNzYWdlLCBvcHRpb25zID0ge30pIHtcbiAgICAgICAgaWYgKCF0aGlzLnF1ZXVlU2VydmljZUNsaWVudCkge1xuICAgICAgICAgICAgYXdhaXQgdGhpcy5pbml0aWFsaXplKCk7XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBxdWV1ZUNsaWVudCA9IHRoaXMucXVldWVTZXJ2aWNlQ2xpZW50LmdldFF1ZXVlQ2xpZW50KHF1ZXVlTmFtZSk7XG4gICAgICAgIGNvbnN0IG1lc3NhZ2VUZXh0ID0gdHlwZW9mIG1lc3NhZ2UgPT09ICdzdHJpbmcnID8gbWVzc2FnZSA6IEpTT04uc3RyaW5naWZ5KG1lc3NhZ2UpO1xuICAgICAgICBcbiAgICAgICAgY29uc3QgYmFzZTY0TWVzc2FnZSA9IEJ1ZmZlci5mcm9tKG1lc3NhZ2VUZXh0KS50b1N0cmluZygnYmFzZTY0Jyk7XG4gICAgICAgIFxuICAgICAgICByZXR1cm4gYXdhaXQgcXVldWVDbGllbnQuc2VuZE1lc3NhZ2UoYmFzZTY0TWVzc2FnZSwge1xuICAgICAgICAgICAgdmlzaWJpbGl0eVRpbWVvdXRJblNlY29uZHM6IG9wdGlvbnMudmlzaWJpbGl0eVRpbWVvdXQgfHwgMCxcbiAgICAgICAgICAgIG1lc3NhZ2VUaW1lVG9MaXZlSW5TZWNvbmRzOiBvcHRpb25zLnRpbWVUb0xpdmUgfHwgNjA0ODAwIC8vIDcgZGF5cyBkZWZhdWx0XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIGFzeW5jIHJlY2VpdmVNZXNzYWdlcyhxdWV1ZU5hbWUsIG9wdGlvbnMgPSB7fSkge1xuICAgICAgICBpZiAoIXRoaXMucXVldWVTZXJ2aWNlQ2xpZW50KSB7XG4gICAgICAgICAgICBhd2FpdCB0aGlzLmluaXRpYWxpemUoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IHF1ZXVlQ2xpZW50ID0gdGhpcy5xdWV1ZVNlcnZpY2VDbGllbnQuZ2V0UXVldWVDbGllbnQocXVldWVOYW1lKTtcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBxdWV1ZUNsaWVudC5yZWNlaXZlTWVzc2FnZXMoe1xuICAgICAgICAgICAgbnVtYmVyT2ZNZXNzYWdlczogb3B0aW9ucy5udW1iZXJPZk1lc3NhZ2VzIHx8IDEsXG4gICAgICAgICAgICB2aXNpYmlsaXR5VGltZW91dEluU2Vjb25kczogb3B0aW9ucy52aXNpYmlsaXR5VGltZW91dCB8fCAzMFxuICAgICAgICB9KTtcblxuICAgICAgICByZXR1cm4gcmVzcG9uc2UucmVjZWl2ZWRNZXNzYWdlSXRlbXMubWFwKGl0ZW0gPT4gKHtcbiAgICAgICAgICAgIGlkOiBpdGVtLm1lc3NhZ2VJZCxcbiAgICAgICAgICAgIHBvcFJlY2VpcHQ6IGl0ZW0ucG9wUmVjZWlwdCxcbiAgICAgICAgICAgIGRlcXVldWVDb3VudDogaXRlbS5kZXF1ZXVlQ291bnQsXG4gICAgICAgICAgICBkYXRhOiBKU09OLnBhcnNlKEJ1ZmZlci5mcm9tKGl0ZW0ubWVzc2FnZVRleHQsICdiYXNlNjQnKS50b1N0cmluZygpKSxcbiAgICAgICAgICAgIGluc2VydGlvblRpbWU6IGl0ZW0uaW5zZXJ0aW9uVGltZSxcbiAgICAgICAgICAgIGV4cGlyYXRpb25UaW1lOiBpdGVtLmV4cGlyYXRpb25UaW1lLFxuICAgICAgICAgICAgdGltZU5leHRWaXNpYmxlOiBpdGVtLnRpbWVOZXh0VmlzaWJsZVxuICAgICAgICB9KSk7XG4gICAgfVxuXG4gICAgYXN5bmMgZGVsZXRlTWVzc2FnZShxdWV1ZU5hbWUsIG1lc3NhZ2VJZCwgcG9wUmVjZWlwdCkge1xuICAgICAgICBpZiAoIXRoaXMucXVldWVTZXJ2aWNlQ2xpZW50KSB7XG4gICAgICAgICAgICBhd2FpdCB0aGlzLmluaXRpYWxpemUoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IHF1ZXVlQ2xpZW50ID0gdGhpcy5xdWV1ZVNlcnZpY2VDbGllbnQuZ2V0UXVldWVDbGllbnQocXVldWVOYW1lKTtcbiAgICAgICAgcmV0dXJuIGF3YWl0IHF1ZXVlQ2xpZW50LmRlbGV0ZU1lc3NhZ2UobWVzc2FnZUlkLCBwb3BSZWNlaXB0KTtcbiAgICB9XG5cbiAgICBhc3luYyB1cGRhdGVNZXNzYWdlKHF1ZXVlTmFtZSwgbWVzc2FnZUlkLCBwb3BSZWNlaXB0LCBtZXNzYWdlLCB2aXNpYmlsaXR5VGltZW91dCA9IDApIHtcbiAgICAgICAgaWYgKCF0aGlzLnF1ZXVlU2VydmljZUNsaWVudCkge1xuICAgICAgICAgICAgYXdhaXQgdGhpcy5pbml0aWFsaXplKCk7XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBxdWV1ZUNsaWVudCA9IHRoaXMucXVldWVTZXJ2aWNlQ2xpZW50LmdldFF1ZXVlQ2xpZW50KHF1ZXVlTmFtZSk7XG4gICAgICAgIGNvbnN0IG1lc3NhZ2VUZXh0ID0gdHlwZW9mIG1lc3NhZ2UgPT09ICdzdHJpbmcnID8gbWVzc2FnZSA6IEpTT04uc3RyaW5naWZ5KG1lc3NhZ2UpO1xuICAgICAgICBjb25zdCBiYXNlNjRNZXNzYWdlID0gQnVmZmVyLmZyb20obWVzc2FnZVRleHQpLnRvU3RyaW5nKCdiYXNlNjQnKTtcbiAgICAgICAgXG4gICAgICAgIHJldHVybiBhd2FpdCBxdWV1ZUNsaWVudC51cGRhdGVNZXNzYWdlKG1lc3NhZ2VJZCwgcG9wUmVjZWlwdCwgYmFzZTY0TWVzc2FnZSwgdmlzaWJpbGl0eVRpbWVvdXQpO1xuICAgIH1cblxuICAgIGFzeW5jIGdldFF1ZXVlTGVuZ3RoKHF1ZXVlTmFtZSkge1xuICAgICAgICBpZiAoIXRoaXMucXVldWVTZXJ2aWNlQ2xpZW50KSB7XG4gICAgICAgICAgICBhd2FpdCB0aGlzLmluaXRpYWxpemUoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IHF1ZXVlQ2xpZW50ID0gdGhpcy5xdWV1ZVNlcnZpY2VDbGllbnQuZ2V0UXVldWVDbGllbnQocXVldWVOYW1lKTtcbiAgICAgICAgY29uc3QgcHJvcGVydGllcyA9IGF3YWl0IHF1ZXVlQ2xpZW50LmdldFByb3BlcnRpZXMoKTtcbiAgICAgICAgcmV0dXJuIHByb3BlcnRpZXMuYXBwcm94aW1hdGVNZXNzYWdlc0NvdW50O1xuICAgIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBuZXcgUXVldWVTZXJ2aWNlKCk7XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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