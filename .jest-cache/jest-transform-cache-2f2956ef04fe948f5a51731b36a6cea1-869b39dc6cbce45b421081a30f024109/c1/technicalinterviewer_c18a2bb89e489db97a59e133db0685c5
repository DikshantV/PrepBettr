5cb2a876eda2b19b79a98a7c4ed456c1
"use strict";

/**
 * Technical Interviewer Agent
 *
 * Specialized agent for conducting technical interviews focusing on
 * coding skills, system design, algorithms, and technical knowledge.
 */
/* istanbul ignore next */
function cov_26w5mfhvp4() {
  var path = "/Users/dikshantvashistha/PrepBettr/lib/azure-ai-foundry/agents/technical-interviewer.ts";
  var hash = "6e3a86cc9cb60859ac34b66f439d1f47f4ffd999";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dikshantvashistha/PrepBettr/lib/azure-ai-foundry/agents/technical-interviewer.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 62
        }
      },
      "1": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 38
        }
      },
      "2": {
        start: {
          line: 10,
          column: 21
        },
        end: {
          line: 10,
          column: 44
        }
      },
      "3": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 37
        }
      },
      "4": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 42
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 44
        }
      },
      "6": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 32
        }
      },
      "7": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 35
        }
      },
      "8": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 44,
          column: 55
        }
      },
      "9": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 62,
          column: 10
        }
      },
      "10": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 65,
          column: 27
        }
      },
      "11": {
        start: {
          line: 68,
          column: 51
        },
        end: {
          line: 68,
          column: 75
        }
      },
      "12": {
        start: {
          line: 69,
          column: 31
        },
        end: {
          line: 69,
          column: 54
        }
      },
      "13": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 73,
          column: 9
        }
      },
      "14": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 72,
          column: 157
        }
      },
      "15": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 76,
          column: 9
        }
      },
      "16": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 75,
          column: 187
        }
      },
      "17": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 79,
          column: 9
        }
      },
      "18": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 78,
          column: 166
        }
      },
      "19": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 92,
          column: 9
        }
      },
      "20": {
        start: {
          line: 83,
          column: 16
        },
        end: {
          line: 83,
          column: 128
        }
      },
      "21": {
        start: {
          line: 85,
          column: 16
        },
        end: {
          line: 85,
          column: 151
        }
      },
      "22": {
        start: {
          line: 87,
          column: 16
        },
        end: {
          line: 87,
          column: 161
        }
      },
      "23": {
        start: {
          line: 89,
          column: 16
        },
        end: {
          line: 89,
          column: 181
        }
      },
      "24": {
        start: {
          line: 91,
          column: 16
        },
        end: {
          line: 91,
          column: 114
        }
      },
      "25": {
        start: {
          line: 99,
          column: 35
        },
        end: {
          line: 99,
          column: 100
        }
      },
      "26": {
        start: {
          line: 99,
          column: 73
        },
        end: {
          line: 99,
          column: 99
        }
      },
      "27": {
        start: {
          line: 100,
          column: 35
        },
        end: {
          line: 100,
          column: 172
        }
      },
      "28": {
        start: {
          line: 100,
          column: 113
        },
        end: {
          line: 100,
          column: 164
        }
      },
      "29": {
        start: {
          line: 100,
          column: 142
        },
        end: {
          line: 100,
          column: 163
        }
      },
      "30": {
        start: {
          line: 105,
          column: 37
        },
        end: {
          line: 105,
          column: 67
        }
      },
      "31": {
        start: {
          line: 106,
          column: 36
        },
        end: {
          line: 106,
          column: 98
        }
      },
      "32": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 107,
          column: 59
        }
      },
      "33": {
        start: {
          line: 110,
          column: 0
        },
        end: {
          line: 110,
          column: 52
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 39
          },
          end: {
            line: 63,
            column: 5
          }
        },
        line: 12
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 64,
            column: 4
          },
          end: {
            line: 64,
            column: 5
          }
        },
        loc: {
          start: {
            line: 64,
            column: 26
          },
          end: {
            line: 66,
            column: 5
          }
        },
        line: 64
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 67,
            column: 4
          },
          end: {
            line: 67,
            column: 5
          }
        },
        loc: {
          start: {
            line: 67,
            column: 32
          },
          end: {
            line: 93,
            column: 5
          }
        },
        line: 67
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 97,
            column: 4
          },
          end: {
            line: 97,
            column: 5
          }
        },
        loc: {
          start: {
            line: 97,
            column: 24
          },
          end: {
            line: 108,
            column: 5
          }
        },
        line: 97
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 99,
            column: 68
          },
          end: {
            line: 99,
            column: 69
          }
        },
        loc: {
          start: {
            line: 99,
            column: 73
          },
          end: {
            line: 99,
            column: 99
          }
        },
        line: 99
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 100,
            column: 108
          },
          end: {
            line: 100,
            column: 109
          }
        },
        loc: {
          start: {
            line: 100,
            column: 113
          },
          end: {
            line: 100,
            column: 164
          }
        },
        line: 100
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 100,
            column: 137
          },
          end: {
            line: 100,
            column: 138
          }
        },
        loc: {
          start: {
            line: 100,
            column: 142
          },
          end: {
            line: 100,
            column: 163
          }
        },
        line: 100
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 71,
            column: 8
          },
          end: {
            line: 73,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 71,
            column: 8
          },
          end: {
            line: 73,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 71
      },
      "1": {
        loc: {
          start: {
            line: 71,
            column: 12
          },
          end: {
            line: 71,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 71,
            column: 12
          },
          end: {
            line: 71,
            column: 57
          }
        }, {
          start: {
            line: 71,
            column: 61
          },
          end: {
            line: 71,
            column: 85
          }
        }],
        line: 71
      },
      "2": {
        loc: {
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 76,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 76,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 74
      },
      "3": {
        loc: {
          start: {
            line: 74,
            column: 12
          },
          end: {
            line: 74,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 74,
            column: 12
          },
          end: {
            line: 74,
            column: 56
          }
        }, {
          start: {
            line: 74,
            column: 60
          },
          end: {
            line: 74,
            column: 86
          }
        }],
        line: 74
      },
      "4": {
        loc: {
          start: {
            line: 77,
            column: 8
          },
          end: {
            line: 79,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 77,
            column: 8
          },
          end: {
            line: 79,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 77
      },
      "5": {
        loc: {
          start: {
            line: 81,
            column: 8
          },
          end: {
            line: 92,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 82,
            column: 12
          },
          end: {
            line: 83,
            column: 128
          }
        }, {
          start: {
            line: 84,
            column: 12
          },
          end: {
            line: 85,
            column: 151
          }
        }, {
          start: {
            line: 86,
            column: 12
          },
          end: {
            line: 87,
            column: 161
          }
        }, {
          start: {
            line: 88,
            column: 12
          },
          end: {
            line: 89,
            column: 181
          }
        }, {
          start: {
            line: 90,
            column: 12
          },
          end: {
            line: 91,
            column: 114
          }
        }],
        line: 81
      },
      "6": {
        loc: {
          start: {
            line: 100,
            column: 35
          },
          end: {
            line: 100,
            column: 172
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 100,
            column: 36
          },
          end: {
            line: 100,
            column: 165
          }
        }, {
          start: {
            line: 100,
            column: 170
          },
          end: {
            line: 100,
            column: 172
          }
        }],
        line: 100
      },
      "7": {
        loc: {
          start: {
            line: 100,
            column: 36
          },
          end: {
            line: 100,
            column: 165
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 100,
            column: 89
          },
          end: {
            line: 100,
            column: 95
          }
        }, {
          start: {
            line: 100,
            column: 98
          },
          end: {
            line: 100,
            column: 165
          }
        }],
        line: 100
      },
      "8": {
        loc: {
          start: {
            line: 100,
            column: 36
          },
          end: {
            line: 100,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 100,
            column: 36
          },
          end: {
            line: 100,
            column: 69
          }
        }, {
          start: {
            line: 100,
            column: 73
          },
          end: {
            line: 100,
            column: 86
          }
        }],
        line: 100
      },
      "9": {
        loc: {
          start: {
            line: 106,
            column: 66
          },
          end: {
            line: 106,
            column: 97
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 106,
            column: 66
          },
          end: {
            line: 106,
            column: 92
          }
        }, {
          start: {
            line: 106,
            column: 96
          },
          end: {
            line: 106,
            column: 97
          }
        }],
        line: 106
      },
      "10": {
        loc: {
          start: {
            line: 107,
            column: 15
          },
          end: {
            line: 107,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 107,
            column: 15
          },
          end: {
            line: 107,
            column: 35
          }
        }, {
          start: {
            line: 107,
            column: 39
          },
          end: {
            line: 107,
            column: 58
          }
        }],
        line: 107
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0, 0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/dikshantvashistha/PrepBettr/lib/azure-ai-foundry/agents/technical-interviewer.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/dikshantvashistha/PrepBettr/lib/azure-ai-foundry/agents/technical-interviewer.ts"],
      sourcesContent: ["/**\n * Technical Interviewer Agent\n * \n * Specialized agent for conducting technical interviews focusing on\n * coding skills, system design, algorithms, and technical knowledge.\n */\n\nimport { BaseAgent } from './base-agent';\nimport { FoundryClientBase } from '../clients/foundry-client';\nimport { FoundryConfig } from '../config/foundry-config';\nimport { Question, InterviewContext, AgentMetadata } from '../types/agent-types';\n\nexport class TechnicalInterviewer extends BaseAgent {\n  // Required BaseAgent interface properties\n  readonly id = 'technical-interviewer';\n  readonly name = 'Technical Interviewer';\n  readonly type = 'technical' as const;\n  \n  protected readonly modelName = 'gpt-4.5'; // Use GPT-4.5 for technical interviews\n  \n  public readonly instructions = `You are a Senior Technical Interviewer with 10+ years of experience conducting technical interviews for software engineering roles. Your goal is to assess the candidate's technical competency through thoughtful, practical questions.\n\n## Your Responsibilities:\n1. Generate technical questions appropriate for the candidate's experience level\n2. Focus on problem-solving approach over perfect solutions\n3. Include a mix of coding, system design, and conceptual questions\n4. Provide questions that reveal thinking process and technical depth\n5. Consider the target role and required technical skills\n\n## Question Categories:\n- **Coding Problems**: Algorithm implementation, data structures, optimization\n- **System Design**: Scalability, architecture, trade-offs, design patterns\n- **Technical Concepts**: Language-specific features, frameworks, best practices\n- **Debugging**: Code analysis, troubleshooting, performance issues\n- **Experience-Based**: Real-world scenarios, past project challenges\n\n## Guidelines:\n- Tailor difficulty to candidate's experience level (entry/mid/senior/expert)\n- Ask open-ended questions that allow for discussion\n- Include practical, real-world scenarios when possible\n- Focus on understanding reasoning and approach\n- Keep questions relevant to the target role and industry\n\n## Response Format:\nAlways respond with valid JSON array containing question objects with all required fields.\nEnsure questions are clear, specific, and actionable.`;\n  \n  public readonly metadata: AgentMetadata = {\n    id: 'technical-interviewer',\n    name: 'Technical Interviewer',\n    description: 'Specializes in technical questions for software engineering roles',\n    version: '1.0.0',\n    supportedPhases: ['technical', 'coding'],\n    capabilities: ['question-generation', 'code-review', 'algorithm-assessment'],\n    modelRequirements: {\n      minimumTokens: 4000,\n      preferredModels: ['gpt-4', 'gpt-4.5']\n    },\n    tags: ['technical', 'coding', 'algorithms', 'system-design'],\n    // Legacy compatibility\n    specialty: 'Technical Skills Assessment',\n    modelPreference: 'gpt-4.5',\n    maxQuestions: 5,\n    averageDuration: 8 // 8 minutes per technical question on average\n  };\n\n  constructor(foundryClient: FoundryClientBase, config: FoundryConfig) {\n    super(foundryClient, config);\n  }\n\n  protected getQuestionCategory(): Question['category'] {\n    return 'technical';\n  }\n\n  protected getDefaultQuestion(context: InterviewContext): string {\n    const { targetRole, experience, skills } = context.candidateProfile;\n    const { difficulty } = context.interviewConfig;\n    \n    // Generate role-specific default questions based on context\n    if (targetRole.toLowerCase().includes('frontend') || skills.includes('React')) {\n      return `Describe how you would implement a reusable component in React that handles user input validation. What patterns would you use and why?`;\n    }\n    \n    if (targetRole.toLowerCase().includes('backend') || skills.includes('Node.js')) {\n      return `Design a RESTful API for a ${context.candidateProfile.industry} application. What endpoints would you create and how would you handle authentication and error cases?`;\n    }\n    \n    if (targetRole.toLowerCase().includes('fullstack')) {\n      return `Walk me through how you would architect a real-time chat application. Consider both frontend and backend components, data flow, and scalability.`;\n    }\n    \n    // General technical question based on experience level\n    switch (difficulty) {\n      case 'entry':\n        return `Explain the difference between let, const, and var in JavaScript. When would you use each one and why?`;\n      case 'mid':\n        return `Describe a challenging technical problem you've solved recently. What was your approach and what trade-offs did you consider?`;\n      case 'senior':\n        return `How would you design a system to handle 1 million concurrent users? Walk me through your architecture decisions and scaling strategies.`;\n      case 'expert':\n        return `Discuss a time when you had to optimize performance in a critical system. What was your methodology for identifying bottlenecks and implementing solutions?`;\n      default:\n        return `Tell me about a technical decision you made recently and explain your reasoning process.`;\n    }\n  }\n\n\n\n  /**\n   * Enhanced completion check for technical interviews\n   */\n  public isComplete(context: InterviewContext): boolean {\n    const technicalQuestions = context.previousQuestions.filter(q => q.category === 'technical');\n    const technicalResponses = context.responses?.filter(r => \n      technicalQuestions.some(q => q.id === r.questionId)\n    ) || [];\n\n    // Technical interview complete if:\n    // - At least 3 questions answered, OR\n    // - Reached max questions for this agent, OR\n    // - Spent more than 30 minutes on technical questions\n    const minQuestionsAnswered = technicalResponses.length >= 3;\n    const reachedMaxQuestions = technicalQuestions.length >= (this.metadata.maxQuestions || 5);\n    \n    return minQuestionsAnswered || reachedMaxQuestions;\n  }\n\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "6e3a86cc9cb60859ac34b66f439d1f47f4ffd999"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_26w5mfhvp4 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_26w5mfhvp4();
cov_26w5mfhvp4().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_26w5mfhvp4().s[1]++;
exports.TechnicalInterviewer = void 0;
const base_agent_1 =
/* istanbul ignore next */
(cov_26w5mfhvp4().s[2]++, require("./base-agent"));
class TechnicalInterviewer extends
/* istanbul ignore next */
(base_agent_1.BaseAgent) {
  constructor(foundryClient, config) {
    /* istanbul ignore next */
    cov_26w5mfhvp4().f[0]++;
    cov_26w5mfhvp4().s[3]++;
    super(foundryClient, config);
    // Required BaseAgent interface properties
    /* istanbul ignore next */
    cov_26w5mfhvp4().s[4]++;
    this.id = 'technical-interviewer';
    /* istanbul ignore next */
    cov_26w5mfhvp4().s[5]++;
    this.name = 'Technical Interviewer';
    /* istanbul ignore next */
    cov_26w5mfhvp4().s[6]++;
    this.type = 'technical';
    /* istanbul ignore next */
    cov_26w5mfhvp4().s[7]++;
    this.modelName = 'gpt-4.5'; // Use GPT-4.5 for technical interviews
    /* istanbul ignore next */
    cov_26w5mfhvp4().s[8]++;
    this.instructions = `You are a Senior Technical Interviewer with 10+ years of experience conducting technical interviews for software engineering roles. Your goal is to assess the candidate's technical competency through thoughtful, practical questions.

## Your Responsibilities:
1. Generate technical questions appropriate for the candidate's experience level
2. Focus on problem-solving approach over perfect solutions
3. Include a mix of coding, system design, and conceptual questions
4. Provide questions that reveal thinking process and technical depth
5. Consider the target role and required technical skills

## Question Categories:
- **Coding Problems**: Algorithm implementation, data structures, optimization
- **System Design**: Scalability, architecture, trade-offs, design patterns
- **Technical Concepts**: Language-specific features, frameworks, best practices
- **Debugging**: Code analysis, troubleshooting, performance issues
- **Experience-Based**: Real-world scenarios, past project challenges

## Guidelines:
- Tailor difficulty to candidate's experience level (entry/mid/senior/expert)
- Ask open-ended questions that allow for discussion
- Include practical, real-world scenarios when possible
- Focus on understanding reasoning and approach
- Keep questions relevant to the target role and industry

## Response Format:
Always respond with valid JSON array containing question objects with all required fields.
Ensure questions are clear, specific, and actionable.`;
    /* istanbul ignore next */
    cov_26w5mfhvp4().s[9]++;
    this.metadata = {
      id: 'technical-interviewer',
      name: 'Technical Interviewer',
      description: 'Specializes in technical questions for software engineering roles',
      version: '1.0.0',
      supportedPhases: ['technical', 'coding'],
      capabilities: ['question-generation', 'code-review', 'algorithm-assessment'],
      modelRequirements: {
        minimumTokens: 4000,
        preferredModels: ['gpt-4', 'gpt-4.5']
      },
      tags: ['technical', 'coding', 'algorithms', 'system-design'],
      // Legacy compatibility
      specialty: 'Technical Skills Assessment',
      modelPreference: 'gpt-4.5',
      maxQuestions: 5,
      averageDuration: 8 // 8 minutes per technical question on average
    };
  }
  getQuestionCategory() {
    /* istanbul ignore next */
    cov_26w5mfhvp4().f[1]++;
    cov_26w5mfhvp4().s[10]++;
    return 'technical';
  }
  getDefaultQuestion(context) {
    /* istanbul ignore next */
    cov_26w5mfhvp4().f[2]++;
    const {
      targetRole,
      experience,
      skills
    } =
    /* istanbul ignore next */
    (cov_26w5mfhvp4().s[11]++, context.candidateProfile);
    const {
      difficulty
    } =
    /* istanbul ignore next */
    (cov_26w5mfhvp4().s[12]++, context.interviewConfig);
    // Generate role-specific default questions based on context
    /* istanbul ignore next */
    cov_26w5mfhvp4().s[13]++;
    if (
    /* istanbul ignore next */
    (cov_26w5mfhvp4().b[1][0]++, targetRole.toLowerCase().includes('frontend')) ||
    /* istanbul ignore next */
    (cov_26w5mfhvp4().b[1][1]++, skills.includes('React'))) {
      /* istanbul ignore next */
      cov_26w5mfhvp4().b[0][0]++;
      cov_26w5mfhvp4().s[14]++;
      return `Describe how you would implement a reusable component in React that handles user input validation. What patterns would you use and why?`;
    } else
    /* istanbul ignore next */
    {
      cov_26w5mfhvp4().b[0][1]++;
    }
    cov_26w5mfhvp4().s[15]++;
    if (
    /* istanbul ignore next */
    (cov_26w5mfhvp4().b[3][0]++, targetRole.toLowerCase().includes('backend')) ||
    /* istanbul ignore next */
    (cov_26w5mfhvp4().b[3][1]++, skills.includes('Node.js'))) {
      /* istanbul ignore next */
      cov_26w5mfhvp4().b[2][0]++;
      cov_26w5mfhvp4().s[16]++;
      return `Design a RESTful API for a ${context.candidateProfile.industry} application. What endpoints would you create and how would you handle authentication and error cases?`;
    } else
    /* istanbul ignore next */
    {
      cov_26w5mfhvp4().b[2][1]++;
    }
    cov_26w5mfhvp4().s[17]++;
    if (targetRole.toLowerCase().includes('fullstack')) {
      /* istanbul ignore next */
      cov_26w5mfhvp4().b[4][0]++;
      cov_26w5mfhvp4().s[18]++;
      return `Walk me through how you would architect a real-time chat application. Consider both frontend and backend components, data flow, and scalability.`;
    } else
    /* istanbul ignore next */
    {
      cov_26w5mfhvp4().b[4][1]++;
    }
    // General technical question based on experience level
    cov_26w5mfhvp4().s[19]++;
    switch (difficulty) {
      case 'entry':
        /* istanbul ignore next */
        cov_26w5mfhvp4().b[5][0]++;
        cov_26w5mfhvp4().s[20]++;
        return `Explain the difference between let, const, and var in JavaScript. When would you use each one and why?`;
      case 'mid':
        /* istanbul ignore next */
        cov_26w5mfhvp4().b[5][1]++;
        cov_26w5mfhvp4().s[21]++;
        return `Describe a challenging technical problem you've solved recently. What was your approach and what trade-offs did you consider?`;
      case 'senior':
        /* istanbul ignore next */
        cov_26w5mfhvp4().b[5][2]++;
        cov_26w5mfhvp4().s[22]++;
        return `How would you design a system to handle 1 million concurrent users? Walk me through your architecture decisions and scaling strategies.`;
      case 'expert':
        /* istanbul ignore next */
        cov_26w5mfhvp4().b[5][3]++;
        cov_26w5mfhvp4().s[23]++;
        return `Discuss a time when you had to optimize performance in a critical system. What was your methodology for identifying bottlenecks and implementing solutions?`;
      default:
        /* istanbul ignore next */
        cov_26w5mfhvp4().b[5][4]++;
        cov_26w5mfhvp4().s[24]++;
        return `Tell me about a technical decision you made recently and explain your reasoning process.`;
    }
  }
  /**
   * Enhanced completion check for technical interviews
   */
  isComplete(context) {
    /* istanbul ignore next */
    cov_26w5mfhvp4().f[3]++;
    var _a;
    const technicalQuestions =
    /* istanbul ignore next */
    (cov_26w5mfhvp4().s[25]++, context.previousQuestions.filter(q => {
      /* istanbul ignore next */
      cov_26w5mfhvp4().f[4]++;
      cov_26w5mfhvp4().s[26]++;
      return q.category === 'technical';
    }));
    const technicalResponses =
    /* istanbul ignore next */
    (cov_26w5mfhvp4().s[27]++,
    /* istanbul ignore next */
    (cov_26w5mfhvp4().b[6][0]++,
    /* istanbul ignore next */
    (cov_26w5mfhvp4().b[8][0]++, (_a = context.responses) === null) ||
    /* istanbul ignore next */
    (cov_26w5mfhvp4().b[8][1]++, _a === void 0) ?
    /* istanbul ignore next */
    (cov_26w5mfhvp4().b[7][0]++, void 0) :
    /* istanbul ignore next */
    (cov_26w5mfhvp4().b[7][1]++, _a.filter(r => {
      /* istanbul ignore next */
      cov_26w5mfhvp4().f[5]++;
      cov_26w5mfhvp4().s[28]++;
      return technicalQuestions.some(q => {
        /* istanbul ignore next */
        cov_26w5mfhvp4().f[6]++;
        cov_26w5mfhvp4().s[29]++;
        return q.id === r.questionId;
      });
    }))) ||
    /* istanbul ignore next */
    (cov_26w5mfhvp4().b[6][1]++, []));
    // Technical interview complete if:
    // - At least 3 questions answered, OR
    // - Reached max questions for this agent, OR
    // - Spent more than 30 minutes on technical questions
    const minQuestionsAnswered =
    /* istanbul ignore next */
    (cov_26w5mfhvp4().s[30]++, technicalResponses.length >= 3);
    const reachedMaxQuestions =
    /* istanbul ignore next */
    (cov_26w5mfhvp4().s[31]++, technicalQuestions.length >= (
    /* istanbul ignore next */
    (cov_26w5mfhvp4().b[9][0]++, this.metadata.maxQuestions) ||
    /* istanbul ignore next */
    (cov_26w5mfhvp4().b[9][1]++, 5)));
    /* istanbul ignore next */
    cov_26w5mfhvp4().s[32]++;
    return /* istanbul ignore next */(cov_26w5mfhvp4().b[10][0]++, minQuestionsAnswered) ||
    /* istanbul ignore next */
    (cov_26w5mfhvp4().b[10][1]++, reachedMaxQuestions);
  }
}
/* istanbul ignore next */
cov_26w5mfhvp4().s[33]++;
exports.TechnicalInterviewer = TechnicalInterviewer;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,