{"version":3,"names":["cov_90ljq0d2g","actualCoverage","azureAuthMiddleware","azureRoleMiddleware","azureAdminMiddleware","createAuthenticatedAzureFunction","createAdminAzureFunction","createRoleBasedAzureFunction","createAzureHealthResponse","extractUserFromAzureRequest","initializeUnifiedAuth","getAuthMetrics","resetAuthMetrics","benchmarkAzureAuth","s","require","authMiddleware","context","req","options","b","f","result","success","user","response","roleMiddleware","requiredRoles","adminMiddleware","initializeFirebase","auth","error","console","verifyFirebaseToken","idToken","verifyToken","valid","message","createAuthenticatedFunction","handlerFunction","createAdminFunction","createRoleBasedFunction","createHealthCheckResponse","getUserFromRequest","getAuthPerformanceMetrics","resetAuthPerformanceMetrics","runAuthBenchmark","iterations","extractBearerToken","authHeader","parts","split","length","module","exports"],"sources":["authMiddleware-unified.js"],"sourcesContent":["/**\n * Unified Azure Functions Authentication Middleware\n * \n * Replacement for azure/shared/authMiddleware.js using the unified auth library\n * Eliminates code duplication and provides consistent authentication across platforms\n */\n\nconst { \n  azureAuthMiddleware,\n  azureRoleMiddleware,\n  azureAdminMiddleware,\n  createAuthenticatedAzureFunction,\n  createAdminAzureFunction,\n  createRoleBasedAzureFunction,\n  createAzureHealthResponse,\n  extractUserFromAzureRequest,\n  initializeUnifiedAuth,\n  getAuthMetrics,\n  resetAuthMetrics,\n  benchmarkAzureAuth\n} = require('../../lib/shared/auth');\n\n/**\n * Firebase Authentication Middleware for Azure Functions\n * \n * This middleware validates Firebase ID tokens and ensures only authenticated users\n * can access protected endpoints in Azure Functions.\n * \n * Replaces the old authMiddleware with unified implementation\n */\nasync function authMiddleware(context, req, options = {}) {\n  const result = await azureAuthMiddleware(context, req, options);\n  \n  // Return in the expected format\n  return {\n    success: result.success,\n    user: result.user,\n    response: result.response\n  };\n}\n\n/**\n * Role-based authorization middleware\n */\nasync function roleMiddleware(context, req, requiredRoles = []) {\n  const result = await azureRoleMiddleware(context, req, requiredRoles);\n  \n  return {\n    success: result.success,\n    user: result.user,\n    response: result.response\n  };\n}\n\n/**\n * Admin-only middleware\n */\nasync function adminMiddleware(context, req) {\n  return roleMiddleware(context, req, ['admin']);\n}\n\n/**\n * Initialize Firebase Admin SDK\n * \n * Unified initialization using the auth library\n */\nasync function initializeFirebase() {\n  try {\n    const auth = await initializeUnifiedAuth();\n    return auth;\n  } catch (error) {\n    console.error('Firebase initialization failed:', error);\n    throw error;\n  }\n}\n\n/**\n * Verify Firebase ID token (unified implementation)\n */\nasync function verifyFirebaseToken(idToken) {\n  try {\n    const { verifyToken } = require('../../lib/shared/auth');\n    const result = await verifyToken(idToken);\n    \n    return {\n      success: result.valid,\n      user: result.user,\n      error: result.error\n    };\n  } catch (error) {\n    console.error('Token verification failed:', error);\n    return {\n      success: false,\n      user: null,\n      error: error.message || 'Token verification failed'\n    };\n  }\n}\n\n/**\n * Create authenticated Azure Function wrapper\n * \n * Usage:\n * const { createAuthenticatedFunction } = require('../shared/authMiddleware-unified');\n * \n * module.exports = createAuthenticatedFunction(async function (context, req, user) {\n *   // Your protected function logic here\n *   // 'user' contains the authenticated Firebase user\n * });\n */\nfunction createAuthenticatedFunction(handlerFunction, options = {}) {\n  return createAuthenticatedAzureFunction(handlerFunction, options);\n}\n\n/**\n * Create admin-only Azure Function wrapper\n */\nfunction createAdminFunction(handlerFunction) {\n  return createAdminAzureFunction(handlerFunction);\n}\n\n/**\n * Create role-based Azure Function wrapper\n */\nfunction createRoleBasedFunction(handlerFunction, requiredRoles) {\n  return createRoleBasedAzureFunction(handlerFunction, requiredRoles);\n}\n\n/**\n * Health check endpoint (no auth required)\n */\nfunction createHealthCheckResponse() {\n  return createAzureHealthResponse();\n}\n\n/**\n * Extract user from Azure request\n */\nasync function getUserFromRequest(context, req) {\n  return extractUserFromAzureRequest(context, req);\n}\n\n// ===== PERFORMANCE MONITORING =====\n\n/**\n * Get authentication performance metrics\n */\nfunction getAuthPerformanceMetrics() {\n  return getAuthMetrics();\n}\n\n/**\n * Reset authentication performance metrics\n */\nfunction resetAuthPerformanceMetrics() {\n  resetAuthMetrics();\n}\n\n/**\n * Run authentication performance benchmark\n */\nasync function runAuthBenchmark(context, req, iterations = 100) {\n  return benchmarkAzureAuth(context, req, iterations);\n}\n\n// ===== LEGACY COMPATIBILITY =====\n\n/**\n * Legacy function signatures for backward compatibility\n */\n\n// Extract Bearer token from Authorization header (legacy)\nfunction extractBearerToken(authHeader) {\n  if (!authHeader) {\n    return null;\n  }\n\n  const parts = authHeader.split(' ');\n  if (parts.length !== 2 || parts[0] !== 'Bearer') {\n    return null;\n  }\n\n  return parts[1];\n}\n\n// ===== MODULE EXPORTS =====\n\nmodule.exports = {\n  // Main middleware functions\n  authMiddleware,\n  roleMiddleware,\n  adminMiddleware,\n  \n  // Higher-order functions\n  createAuthenticatedFunction,\n  createAdminFunction,\n  createRoleBasedFunction,\n  \n  // Utility functions\n  initializeFirebase,\n  verifyFirebaseToken,\n  createHealthCheckResponse,\n  getUserFromRequest,\n  extractBearerToken, // Legacy compatibility\n  \n  // Performance monitoring\n  getAuthPerformanceMetrics,\n  resetAuthPerformanceMetrics,\n  runAuthBenchmark,\n  \n  // Legacy aliases for backward compatibility\n  createAuthenticatedAzureFunction: createAuthenticatedFunction,\n  createAdminAzureFunction: createAdminFunction,\n  createRoleBasedAzureFunction: createRoleBasedFunction\n};\n"],"mappingseY;IAAAA,aAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAD,aAAA;AAfZ;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAM;EACJE,mBAAmB;EACnBC,mBAAmB;EACnBC,oBAAoB;EACpBC,gCAAgC;EAChCC,wBAAwB;EACxBC,4BAA4B;EAC5BC,yBAAyB;EACzBC,2BAA2B;EAC3BC,qBAAqB;EACrBC,cAAc;EACdC,gBAAgB;EAChBC;AACF,CAAC;AAAA;AAAA,CAAAb,aAAA,GAAAc,CAAA,OAAGC,OAAO,CAAC,uBAAuB,CAAC;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAeC,cAAcA,CAACC,OAAO,EAAEC,GAAG,EAAEC,OAAO;AAAA;AAAA,CAAAnB,aAAA,GAAAoB,CAAA,UAAG,CAAC,CAAC,GAAE;EAAA;EAAApB,aAAA,GAAAqB,CAAA;EACxD,MAAMC,MAAM;EAAA;EAAA,CAAAtB,aAAA,GAAAc,CAAA,OAAG,MAAMZ,mBAAmB,CAACe,OAAO,EAAEC,GAAG,EAAEC,OAAO,CAAC;;EAE/D;EAAA;EAAAnB,aAAA,GAAAc,CAAA;EACA,OAAO;IACLS,OAAO,EAAED,MAAM,CAACC,OAAO;IACvBC,IAAI,EAAEF,MAAM,CAACE,IAAI;IACjBC,QAAQ,EAAEH,MAAM,CAACG;EACnB,CAAC;AACH;;AAEA;AACA;AACA;AACA,eAAeC,cAAcA,CAACT,OAAO,EAAEC,GAAG,EAAES,aAAa;AAAA;AAAA,CAAA3B,aAAA,GAAAoB,CAAA,UAAG,EAAE,GAAE;EAAA;EAAApB,aAAA,GAAAqB,CAAA;EAC9D,MAAMC,MAAM;EAAA;EAAA,CAAAtB,aAAA,GAAAc,CAAA,OAAG,MAAMX,mBAAmB,CAACc,OAAO,EAAEC,GAAG,EAAES,aAAa,CAAC;EAAC;EAAA3B,aAAA,GAAAc,CAAA;EAEtE,OAAO;IACLS,OAAO,EAAED,MAAM,CAACC,OAAO;IACvBC,IAAI,EAAEF,MAAM,CAACE,IAAI;IACjBC,QAAQ,EAAEH,MAAM,CAACG;EACnB,CAAC;AACH;;AAEA;AACA;AACA;AACA,eAAeG,eAAeA,CAACX,OAAO,EAAEC,GAAG,EAAE;EAAA;EAAAlB,aAAA,GAAAqB,CAAA;EAAArB,aAAA,GAAAc,CAAA;EAC3C,OAAOY,cAAc,CAACT,OAAO,EAAEC,GAAG,EAAE,CAAC,OAAO,CAAC,CAAC;AAChD;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAeW,kBAAkBA,CAAA,EAAG;EAAA;EAAA7B,aAAA,GAAAqB,CAAA;EAAArB,aAAA,GAAAc,CAAA;EAClC,IAAI;IACF,MAAMgB,IAAI;IAAA;IAAA,CAAA9B,aAAA,GAAAc,CAAA,OAAG,MAAMJ,qBAAqB,CAAC,CAAC;IAAC;IAAAV,aAAA,GAAAc,CAAA;IAC3C,OAAOgB,IAAI;EACb,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA;IAAA/B,aAAA,GAAAc,CAAA;IACdkB,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IAAC;IAAA/B,aAAA,GAAAc,CAAA;IACxD,MAAMiB,KAAK;EACb;AACF;;AAEA;AACA;AACA;AACA,eAAeE,mBAAmBA,CAACC,OAAO,EAAE;EAAA;EAAAlC,aAAA,GAAAqB,CAAA;EAAArB,aAAA,GAAAc,CAAA;EAC1C,IAAI;IACF,MAAM;MAAEqB;IAAY,CAAC;IAAA;IAAA,CAAAnC,aAAA,GAAAc,CAAA,QAAGC,OAAO,CAAC,uBAAuB,CAAC;IACxD,MAAMO,MAAM;IAAA;IAAA,CAAAtB,aAAA,GAAAc,CAAA,QAAG,MAAMqB,WAAW,CAACD,OAAO,CAAC;IAAC;IAAAlC,aAAA,GAAAc,CAAA;IAE1C,OAAO;MACLS,OAAO,EAAED,MAAM,CAACc,KAAK;MACrBZ,IAAI,EAAEF,MAAM,CAACE,IAAI;MACjBO,KAAK,EAAET,MAAM,CAACS;IAChB,CAAC;EACH,CAAC,CAAC,OAAOA,KAAK,EAAE;IAAA;IAAA/B,aAAA,GAAAc,CAAA;IACdkB,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IAAC;IAAA/B,aAAA,GAAAc,CAAA;IACnD,OAAO;MACLS,OAAO,EAAE,KAAK;MACdC,IAAI,EAAE,IAAI;MACVO,KAAK;MAAE;MAAA,CAAA/B,aAAA,GAAAoB,CAAA,UAAAW,KAAK,CAACM,OAAO;MAAA;MAAA,CAAArC,aAAA,GAAAoB,CAAA,UAAI,2BAA2B;IACrD,CAAC;EACH;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASkB,2BAA2BA,CAACC,eAAe,EAAEpB,OAAO;AAAA;AAAA,CAAAnB,aAAA,GAAAoB,CAAA,UAAG,CAAC,CAAC,GAAE;EAAA;EAAApB,aAAA,GAAAqB,CAAA;EAAArB,aAAA,GAAAc,CAAA;EAClE,OAAOT,gCAAgC,CAACkC,eAAe,EAAEpB,OAAO,CAAC;AACnE;;AAEA;AACA;AACA;AACA,SAASqB,mBAAmBA,CAACD,eAAe,EAAE;EAAA;EAAAvC,aAAA,GAAAqB,CAAA;EAAArB,aAAA,GAAAc,CAAA;EAC5C,OAAOR,wBAAwB,CAACiC,eAAe,CAAC;AAClD;;AAEA;AACA;AACA;AACA,SAASE,uBAAuBA,CAACF,eAAe,EAAEZ,aAAa,EAAE;EAAA;EAAA3B,aAAA,GAAAqB,CAAA;EAAArB,aAAA,GAAAc,CAAA;EAC/D,OAAOP,4BAA4B,CAACgC,eAAe,EAAEZ,aAAa,CAAC;AACrE;;AAEA;AACA;AACA;AACA,SAASe,yBAAyBA,CAAA,EAAG;EAAA;EAAA1C,aAAA,GAAAqB,CAAA;EAAArB,aAAA,GAAAc,CAAA;EACnC,OAAON,yBAAyB,CAAC,CAAC;AACpC;;AAEA;AACA;AACA;AACA,eAAemC,kBAAkBA,CAAC1B,OAAO,EAAEC,GAAG,EAAE;EAAA;EAAAlB,aAAA,GAAAqB,CAAA;EAAArB,aAAA,GAAAc,CAAA;EAC9C,OAAOL,2BAA2B,CAACQ,OAAO,EAAEC,GAAG,CAAC;AAClD;;AAEA;;AAEA;AACA;AACA;AACA,SAAS0B,yBAAyBA,CAAA,EAAG;EAAA;EAAA5C,aAAA,GAAAqB,CAAA;EAAArB,aAAA,GAAAc,CAAA;EACnC,OAAOH,cAAc,CAAC,CAAC;AACzB;;AAEA;AACA;AACA;AACA,SAASkC,2BAA2BA,CAAA,EAAG;EAAA;EAAA7C,aAAA,GAAAqB,CAAA;EAAArB,aAAA,GAAAc,CAAA;EACrCF,gBAAgB,CAAC,CAAC;AACpB;;AAEA;AACA;AACA;AACA,eAAekC,gBAAgBA,CAAC7B,OAAO,EAAEC,GAAG,EAAE6B,UAAU;AAAA;AAAA,CAAA/C,aAAA,GAAAoB,CAAA,UAAG,GAAG,GAAE;EAAA;EAAApB,aAAA,GAAAqB,CAAA;EAAArB,aAAA,GAAAc,CAAA;EAC9D,OAAOD,kBAAkB,CAACI,OAAO,EAAEC,GAAG,EAAE6B,UAAU,CAAC;AACrD;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,SAASC,kBAAkBA,CAACC,UAAU,EAAE;EAAA;EAAAjD,aAAA,GAAAqB,CAAA;EAAArB,aAAA,GAAAc,CAAA;EACtC,IAAI,CAACmC,UAAU,EAAE;IAAA;IAAAjD,aAAA,GAAAoB,CAAA;IAAApB,aAAA,GAAAc,CAAA;IACf,OAAO,IAAI;EACb,CAAC;EAAA;EAAA;IAAAd,aAAA,GAAAoB,CAAA;EAAA;EAED,MAAM8B,KAAK;EAAA;EAAA,CAAAlD,aAAA,GAAAc,CAAA,QAAGmC,UAAU,CAACE,KAAK,CAAC,GAAG,CAAC;EAAC;EAAAnD,aAAA,GAAAc,CAAA;EACpC;EAAI;EAAA,CAAAd,aAAA,GAAAoB,CAAA,UAAA8B,KAAK,CAACE,MAAM,KAAK,CAAC;EAAA;EAAA,CAAApD,aAAA,GAAAoB,CAAA,UAAI8B,KAAK,CAAC,CAAC,CAAC,KAAK,QAAQ,GAAE;IAAA;IAAAlD,aAAA,GAAAoB,CAAA;IAAApB,aAAA,GAAAc,CAAA;IAC/C,OAAO,IAAI;EACb,CAAC;EAAA;EAAA;IAAAd,aAAA,GAAAoB,CAAA;EAAA;EAAApB,aAAA,GAAAc,CAAA;EAED,OAAOoC,KAAK,CAAC,CAAC,CAAC;AACjB;;AAEA;AAAA;AAAAlD,aAAA,GAAAc,CAAA;AAEAuC,MAAM,CAACC,OAAO,GAAG;EACf;EACAtC,cAAc;EACdU,cAAc;EACdE,eAAe;EAEf;EACAU,2BAA2B;EAC3BE,mBAAmB;EACnBC,uBAAuB;EAEvB;EACAZ,kBAAkB;EAClBI,mBAAmB;EACnBS,yBAAyB;EACzBC,kBAAkB;EAClBK,kBAAkB;EAAE;;EAEpB;EACAJ,yBAAyB;EACzBC,2BAA2B;EAC3BC,gBAAgB;EAEhB;EACAzC,gCAAgC,EAAEiC,2BAA2B;EAC7DhC,wBAAwB,EAAEkC,mBAAmB;EAC7CjC,4BAA4B,EAAEkC;AAChC,CAAC","ignoreList":[]}