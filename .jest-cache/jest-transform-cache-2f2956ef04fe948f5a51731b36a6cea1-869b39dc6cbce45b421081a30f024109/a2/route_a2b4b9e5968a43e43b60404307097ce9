dbcf9a8ff33add88837e48ec3bdcf309
"use strict";

/* istanbul ignore next */
function cov_sjxhdvqeg() {
  var path = "/Users/dikshantvashistha/PrepBettr/app/api/config/firebase/route.ts";
  var hash = "f6998c287cae4952ca16ad410febb43ea4c948c6";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dikshantvashistha/PrepBettr/app/api/config/firebase/route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 18
        }
      },
      "2": {
        start: {
          line: 4,
          column: 17
        },
        end: {
          line: 4,
          column: 39
        }
      },
      "3": {
        start: {
          line: 5,
          column: 23
        },
        end: {
          line: 5,
          column: 52
        }
      },
      "4": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 56,
          column: 5
        }
      },
      "5": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 75
        }
      },
      "6": {
        start: {
          line: 17,
          column: 24
        },
        end: {
          line: 17,
          column: 69
        }
      },
      "7": {
        start: {
          line: 19,
          column: 31
        },
        end: {
          line: 26,
          column: 9
        }
      },
      "8": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 31,
          column: 9
        }
      },
      "9": {
        start: {
          line: 29,
          column: 12
        },
        end: {
          line: 29,
          column: 86
        }
      },
      "10": {
        start: {
          line: 30,
          column: 12
        },
        end: {
          line: 30,
          column: 130
        }
      },
      "11": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 37,
          column: 11
        }
      },
      "12": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 58
        }
      },
      "13": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 41,
          column: 67
        }
      },
      "14": {
        start: {
          line: 43,
          column: 31
        },
        end: {
          line: 50,
          column: 9
        }
      },
      "15": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 54,
          column: 11
        }
      },
      "16": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 55,
          column: 58
        }
      }
    },
    fnMap: {
      "0": {
        name: "GET",
        decl: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 13,
            column: 18
          }
        },
        loc: {
          start: {
            line: 13,
            column: 28
          },
          end: {
            line: 57,
            column: 1
          }
        },
        line: 13
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 20,
            column: 20
          },
          end: {
            line: 20,
            column: 98
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 20,
            column: 20
          },
          end: {
            line: 20,
            column: 45
          }
        }, {
          start: {
            line: 20,
            column: 49
          },
          end: {
            line: 20,
            column: 92
          }
        }, {
          start: {
            line: 20,
            column: 96
          },
          end: {
            line: 20,
            column: 98
          }
        }],
        line: 20
      },
      "1": {
        loc: {
          start: {
            line: 21,
            column: 27
          },
          end: {
            line: 21,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 21,
            column: 27
          },
          end: {
            line: 21,
            column: 52
          }
        }, {
          start: {
            line: 21,
            column: 56
          },
          end: {
            line: 21,
            column: 67
          }
        }],
        line: 21
      },
      "2": {
        loc: {
          start: {
            line: 22,
            column: 23
          },
          end: {
            line: 22,
            column: 98
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 22,
            column: 23
          },
          end: {
            line: 22,
            column: 48
          }
        }, {
          start: {
            line: 22,
            column: 52
          },
          end: {
            line: 22,
            column: 83
          }
        }, {
          start: {
            line: 22,
            column: 87
          },
          end: {
            line: 22,
            column: 98
          }
        }],
        line: 22
      },
      "3": {
        loc: {
          start: {
            line: 23,
            column: 27
          },
          end: {
            line: 23,
            column: 135
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 23,
            column: 27
          },
          end: {
            line: 23,
            column: 74
          }
        }, {
          start: {
            line: 23,
            column: 78
          },
          end: {
            line: 23,
            column: 135
          }
        }],
        line: 23
      },
      "4": {
        loc: {
          start: {
            line: 23,
            column: 81
          },
          end: {
            line: 23,
            column: 121
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 23,
            column: 81
          },
          end: {
            line: 23,
            column: 106
          }
        }, {
          start: {
            line: 23,
            column: 110
          },
          end: {
            line: 23,
            column: 121
          }
        }],
        line: 23
      },
      "5": {
        loc: {
          start: {
            line: 24,
            column: 31
          },
          end: {
            line: 24,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 24,
            column: 31
          },
          end: {
            line: 24,
            column: 83
          }
        }, {
          start: {
            line: 24,
            column: 87
          },
          end: {
            line: 24,
            column: 89
          }
        }],
        line: 24
      },
      "6": {
        loc: {
          start: {
            line: 25,
            column: 19
          },
          end: {
            line: 25,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 25,
            column: 19
          },
          end: {
            line: 25,
            column: 58
          }
        }, {
          start: {
            line: 25,
            column: 62
          },
          end: {
            line: 25,
            column: 64
          }
        }],
        line: 25
      },
      "7": {
        loc: {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 31,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 31,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "8": {
        loc: {
          start: {
            line: 44,
            column: 20
          },
          end: {
            line: 44,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 44,
            column: 20
          },
          end: {
            line: 44,
            column: 63
          }
        }, {
          start: {
            line: 44,
            column: 67
          },
          end: {
            line: 44,
            column: 69
          }
        }],
        line: 44
      },
      "9": {
        loc: {
          start: {
            line: 45,
            column: 27
          },
          end: {
            line: 45,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 45,
            column: 27
          },
          end: {
            line: 45,
            column: 58
          }
        }, {
          start: {
            line: 45,
            column: 62
          },
          end: {
            line: 45,
            column: 73
          }
        }],
        line: 45
      },
      "10": {
        loc: {
          start: {
            line: 46,
            column: 23
          },
          end: {
            line: 46,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 46,
            column: 23
          },
          end: {
            line: 46,
            column: 54
          }
        }, {
          start: {
            line: 46,
            column: 58
          },
          end: {
            line: 46,
            column: 69
          }
        }],
        line: 46
      },
      "11": {
        loc: {
          start: {
            line: 47,
            column: 27
          },
          end: {
            line: 47,
            column: 141
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 47,
            column: 27
          },
          end: {
            line: 47,
            column: 74
          }
        }, {
          start: {
            line: 47,
            column: 78
          },
          end: {
            line: 47,
            column: 141
          }
        }],
        line: 47
      },
      "12": {
        loc: {
          start: {
            line: 47,
            column: 81
          },
          end: {
            line: 47,
            column: 127
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 47,
            column: 81
          },
          end: {
            line: 47,
            column: 112
          }
        }, {
          start: {
            line: 47,
            column: 116
          },
          end: {
            line: 47,
            column: 127
          }
        }],
        line: 47
      },
      "13": {
        loc: {
          start: {
            line: 48,
            column: 31
          },
          end: {
            line: 48,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 48,
            column: 31
          },
          end: {
            line: 48,
            column: 83
          }
        }, {
          start: {
            line: 48,
            column: 87
          },
          end: {
            line: 48,
            column: 89
          }
        }],
        line: 48
      },
      "14": {
        loc: {
          start: {
            line: 49,
            column: 19
          },
          end: {
            line: 49,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 49,
            column: 19
          },
          end: {
            line: 49,
            column: 58
          }
        }, {
          start: {
            line: 49,
            column: 62
          },
          end: {
            line: 49,
            column: 64
          }
        }],
        line: 49
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/dikshantvashistha/PrepBettr/app/api/config/firebase/route.ts",
      mappings: ";;AAUA,kBAuDC;AAjED,wCAAwD;AACxD,qDAAuD;AAEvD;;;;;;GAMG;AACI,KAAK,UAAU,GAAG,CAAC,OAAoB;IAC5C,IAAI,CAAC;QACH,OAAO,CAAC,GAAG,CAAC,qDAAqD,CAAC,CAAC;QAEnE,mCAAmC;QACnC,MAAM,OAAO,GAAG,MAAM,IAAA,gCAAiB,GAAE,CAAC;QAE1C,mCAAmC;QACnC,MAAM,cAAc,GAAG;YACrB,MAAM,EAAE,OAAO,CAAC,iBAAiB,IAAI,OAAO,CAAC,GAAG,CAAC,+BAA+B,IAAI,EAAE;YACtF,UAAU,EAAE,GAAG,OAAO,CAAC,iBAAiB,IAAI,WAAW,kBAAkB;YACzE,SAAS,EAAE,OAAO,CAAC,iBAAiB,IAAI,OAAO,CAAC,GAAG,CAAC,mBAAmB,IAAI,WAAW;YACtF,aAAa,EAAE,OAAO,CAAC,GAAG,CAAC,mCAAmC,IAAI,GAAG,OAAO,CAAC,iBAAiB,IAAI,WAAW,cAAc;YAC3H,iBAAiB,EAAE,OAAO,CAAC,GAAG,CAAC,wCAAwC,IAAI,EAAE;YAC7E,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,2BAA2B,IAAI,EAAE;SACrD,CAAC;QAEF,2BAA2B;QAC3B,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE,CAAC;YAC9B,OAAO,CAAC,KAAK,CAAC,0DAA0D,CAAC,CAAC;YAC1E,OAAO,qBAAY,CAAC,IAAI,CACtB,EAAE,KAAK,EAAE,sDAAsD,EAAE,EACjE,EAAE,MAAM,EAAE,GAAG,EAAE,CAChB,CAAC;QACJ,CAAC;QAED,OAAO,CAAC,GAAG,CAAC,8BAA8B,EAAE;YAC1C,SAAS,EAAE,cAAc,CAAC,SAAS;YACnC,UAAU,EAAE,cAAc,CAAC,UAAU;YACrC,SAAS,EAAE,CAAC,CAAC,cAAc,CAAC,MAAM;YAClC,aAAa,EAAE,cAAc,CAAC,aAAa;SAC5C,CAAC,CAAC;QAEH,OAAO,qBAAY,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;IAE3C,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,KAAK,CAAC,oCAAoC,EAAE,KAAK,CAAC,CAAC;QAE3D,yCAAyC;QACzC,MAAM,cAAc,GAAG;YACrB,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,+BAA+B,IAAI,EAAE;YACzD,UAAU,EAAE,GAAG,OAAO,CAAC,GAAG,CAAC,mBAAmB,IAAI,WAAW,kBAAkB;YAC/E,SAAS,EAAE,OAAO,CAAC,GAAG,CAAC,mBAAmB,IAAI,WAAW;YACzD,aAAa,EAAE,OAAO,CAAC,GAAG,CAAC,mCAAmC,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,mBAAmB,IAAI,WAAW,cAAc;YACjI,iBAAiB,EAAE,OAAO,CAAC,GAAG,CAAC,wCAAwC,IAAI,EAAE;YAC7E,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,2BAA2B,IAAI,EAAE;SACrD,CAAC;QAEF,OAAO,CAAC,GAAG,CAAC,oCAAoC,EAAE;YAChD,SAAS,EAAE,cAAc,CAAC,SAAS;YACnC,SAAS,EAAE,CAAC,CAAC,cAAc,CAAC,MAAM;SACnC,CAAC,CAAC;QAEH,OAAO,qBAAY,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;IAC3C,CAAC;AACH,CAAC",
      names: [],
      sources: ["/Users/dikshantvashistha/PrepBettr/app/api/config/firebase/route.ts"],
      sourcesContent: ["import { NextRequest, NextResponse } from 'next/server';\nimport { fetchAzureSecrets } from '@/lib/azure-config';\n\n/**\n * Firebase Configuration API Endpoint\n * \n * Provides Firebase client configuration from Azure Key Vault\n * This is used for client-side Firebase initialization when\n * environment variables are not directly available\n */\nexport async function GET(request: NextRequest) {\n  try {\n    console.log('\uD83D\uDD25 Fetching Firebase config from Azure Key Vault...');\n    \n    // Get secrets from Azure Key Vault\n    const secrets = await fetchAzureSecrets();\n    \n    // Construct Firebase configuration\n    const firebaseConfig = {\n      apiKey: secrets.firebaseClientKey || process.env.NEXT_PUBLIC_FIREBASE_CLIENT_KEY || '',\n      authDomain: `${secrets.firebaseProjectId || 'prepbettr'}.firebaseapp.com`,\n      projectId: secrets.firebaseProjectId || process.env.FIREBASE_PROJECT_ID || 'prepbettr',\n      storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET || `${secrets.firebaseProjectId || 'prepbettr'}.appspot.com`,\n      messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID || '',\n      appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID || ''\n    };\n    \n    // Validate required fields\n    if (!firebaseConfig.projectId) {\n      console.error('\uD83D\uDD25 Firebase configuration missing: projectId is required');\n      return NextResponse.json(\n        { error: 'Firebase configuration incomplete: missing projectId' },\n        { status: 500 }\n      );\n    }\n    \n    console.log('\uD83D\uDD25 Firebase config provided:', {\n      projectId: firebaseConfig.projectId,\n      authDomain: firebaseConfig.authDomain,\n      hasApiKey: !!firebaseConfig.apiKey,\n      storageBucket: firebaseConfig.storageBucket\n    });\n    \n    return NextResponse.json(firebaseConfig);\n    \n  } catch (error) {\n    console.error('\uD83D\uDD25 Error fetching Firebase config:', error);\n    \n    // Fallback to environment variables only\n    const fallbackConfig = {\n      apiKey: process.env.NEXT_PUBLIC_FIREBASE_CLIENT_KEY || '',\n      authDomain: `${process.env.FIREBASE_PROJECT_ID || 'prepbettr'}.firebaseapp.com`,\n      projectId: process.env.FIREBASE_PROJECT_ID || 'prepbettr',\n      storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET || `${process.env.FIREBASE_PROJECT_ID || 'prepbettr'}.appspot.com`,\n      messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID || '',\n      appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID || ''\n    };\n    \n    console.log('\uD83D\uDD25 Using fallback Firebase config:', {\n      projectId: fallbackConfig.projectId,\n      hasApiKey: !!fallbackConfig.apiKey\n    });\n    \n    return NextResponse.json(fallbackConfig);\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f6998c287cae4952ca16ad410febb43ea4c948c6"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_sjxhdvqeg = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_sjxhdvqeg();
cov_sjxhdvqeg().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_sjxhdvqeg().s[1]++;
exports.GET = GET;
const server_1 =
/* istanbul ignore next */
(cov_sjxhdvqeg().s[2]++, require("next/server"));
const azure_config_1 =
/* istanbul ignore next */
(cov_sjxhdvqeg().s[3]++, require("@/lib/azure-config"));
/**
 * Firebase Configuration API Endpoint
 *
 * Provides Firebase client configuration from Azure Key Vault
 * This is used for client-side Firebase initialization when
 * environment variables are not directly available
 */
async function GET(request) {
  /* istanbul ignore next */
  cov_sjxhdvqeg().f[0]++;
  cov_sjxhdvqeg().s[4]++;
  try {
    /* istanbul ignore next */
    cov_sjxhdvqeg().s[5]++;
    console.log('🔥 Fetching Firebase config from Azure Key Vault...');
    // Get secrets from Azure Key Vault
    const secrets =
    /* istanbul ignore next */
    (cov_sjxhdvqeg().s[6]++, await (0, azure_config_1.fetchAzureSecrets)());
    // Construct Firebase configuration
    const firebaseConfig =
    /* istanbul ignore next */
    (cov_sjxhdvqeg().s[7]++, {
      apiKey:
      /* istanbul ignore next */
      (cov_sjxhdvqeg().b[0][0]++, secrets.firebaseClientKey) ||
      /* istanbul ignore next */
      (cov_sjxhdvqeg().b[0][1]++, process.env.NEXT_PUBLIC_FIREBASE_CLIENT_KEY) ||
      /* istanbul ignore next */
      (cov_sjxhdvqeg().b[0][2]++, ''),
      authDomain: `${
      /* istanbul ignore next */
      (cov_sjxhdvqeg().b[1][0]++, secrets.firebaseProjectId) ||
      /* istanbul ignore next */
      (cov_sjxhdvqeg().b[1][1]++, 'prepbettr')}.firebaseapp.com`,
      projectId:
      /* istanbul ignore next */
      (cov_sjxhdvqeg().b[2][0]++, secrets.firebaseProjectId) ||
      /* istanbul ignore next */
      (cov_sjxhdvqeg().b[2][1]++, process.env.FIREBASE_PROJECT_ID) ||
      /* istanbul ignore next */
      (cov_sjxhdvqeg().b[2][2]++, 'prepbettr'),
      storageBucket:
      /* istanbul ignore next */
      (cov_sjxhdvqeg().b[3][0]++, process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET) ||
      /* istanbul ignore next */
      (cov_sjxhdvqeg().b[3][1]++, `${
      /* istanbul ignore next */
      (cov_sjxhdvqeg().b[4][0]++, secrets.firebaseProjectId) ||
      /* istanbul ignore next */
      (cov_sjxhdvqeg().b[4][1]++, 'prepbettr')}.appspot.com`),
      messagingSenderId:
      /* istanbul ignore next */
      (cov_sjxhdvqeg().b[5][0]++, process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID) ||
      /* istanbul ignore next */
      (cov_sjxhdvqeg().b[5][1]++, ''),
      appId:
      /* istanbul ignore next */
      (cov_sjxhdvqeg().b[6][0]++, process.env.NEXT_PUBLIC_FIREBASE_APP_ID) ||
      /* istanbul ignore next */
      (cov_sjxhdvqeg().b[6][1]++, '')
    });
    // Validate required fields
    /* istanbul ignore next */
    cov_sjxhdvqeg().s[8]++;
    if (!firebaseConfig.projectId) {
      /* istanbul ignore next */
      cov_sjxhdvqeg().b[7][0]++;
      cov_sjxhdvqeg().s[9]++;
      console.error('🔥 Firebase configuration missing: projectId is required');
      /* istanbul ignore next */
      cov_sjxhdvqeg().s[10]++;
      return server_1.NextResponse.json({
        error: 'Firebase configuration incomplete: missing projectId'
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_sjxhdvqeg().b[7][1]++;
    }
    cov_sjxhdvqeg().s[11]++;
    console.log('🔥 Firebase config provided:', {
      projectId: firebaseConfig.projectId,
      authDomain: firebaseConfig.authDomain,
      hasApiKey: !!firebaseConfig.apiKey,
      storageBucket: firebaseConfig.storageBucket
    });
    /* istanbul ignore next */
    cov_sjxhdvqeg().s[12]++;
    return server_1.NextResponse.json(firebaseConfig);
  } catch (error) {
    /* istanbul ignore next */
    cov_sjxhdvqeg().s[13]++;
    console.error('🔥 Error fetching Firebase config:', error);
    // Fallback to environment variables only
    const fallbackConfig =
    /* istanbul ignore next */
    (cov_sjxhdvqeg().s[14]++, {
      apiKey:
      /* istanbul ignore next */
      (cov_sjxhdvqeg().b[8][0]++, process.env.NEXT_PUBLIC_FIREBASE_CLIENT_KEY) ||
      /* istanbul ignore next */
      (cov_sjxhdvqeg().b[8][1]++, ''),
      authDomain: `${
      /* istanbul ignore next */
      (cov_sjxhdvqeg().b[9][0]++, process.env.FIREBASE_PROJECT_ID) ||
      /* istanbul ignore next */
      (cov_sjxhdvqeg().b[9][1]++, 'prepbettr')}.firebaseapp.com`,
      projectId:
      /* istanbul ignore next */
      (cov_sjxhdvqeg().b[10][0]++, process.env.FIREBASE_PROJECT_ID) ||
      /* istanbul ignore next */
      (cov_sjxhdvqeg().b[10][1]++, 'prepbettr'),
      storageBucket:
      /* istanbul ignore next */
      (cov_sjxhdvqeg().b[11][0]++, process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET) ||
      /* istanbul ignore next */
      (cov_sjxhdvqeg().b[11][1]++, `${
      /* istanbul ignore next */
      (cov_sjxhdvqeg().b[12][0]++, process.env.FIREBASE_PROJECT_ID) ||
      /* istanbul ignore next */
      (cov_sjxhdvqeg().b[12][1]++, 'prepbettr')}.appspot.com`),
      messagingSenderId:
      /* istanbul ignore next */
      (cov_sjxhdvqeg().b[13][0]++, process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID) ||
      /* istanbul ignore next */
      (cov_sjxhdvqeg().b[13][1]++, ''),
      appId:
      /* istanbul ignore next */
      (cov_sjxhdvqeg().b[14][0]++, process.env.NEXT_PUBLIC_FIREBASE_APP_ID) ||
      /* istanbul ignore next */
      (cov_sjxhdvqeg().b[14][1]++, '')
    });
    /* istanbul ignore next */
    cov_sjxhdvqeg().s[15]++;
    console.log('🔥 Using fallback Firebase config:', {
      projectId: fallbackConfig.projectId,
      hasApiKey: !!fallbackConfig.apiKey
    });
    /* istanbul ignore next */
    cov_sjxhdvqeg().s[16]++;
    return server_1.NextResponse.json(fallbackConfig);
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,