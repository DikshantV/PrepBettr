{"version":3,"names":["cov_153nu0josw","actualCoverage","OpenAI","s","require","sdk","v4","uuidv4","testComponents","f","console","log","openaiClient","apiKey","baseURL","defaultQuery","defaultHeaders","testCompletion","chat","completions","create","model","messages","role","content","max_tokens","choices","message","error","speechConfig","SpeechConfig","fromSubscription","speechSynthesisVoiceName","speechSynthesisOutputFormat","SpeechSynthesisOutputFormat","Audio16Khz32KBitRateMonoMp3","speechSynthesizer","SpeechSynthesizer","testText","result","Promise","resolve","reject","speakTextAsync","reason","ResultReason","SynthesizingAudioCompleted","b","Error","errorDetails","audioData","byteLength","close","testId","catch"],"sources":["test-voice-function.js"],"sourcesContent":["const { OpenAI } = require('openai');\nconst sdk = require('microsoft-cognitiveservices-speech-sdk');\nconst { v4: uuidv4 } = require('uuid');\n\nasync function testComponents() {\n    console.log('Testing Azure Function components...\\n');\n    \n    // Test OpenAI initialization\n    console.log('1. Testing OpenAI connection...');\n    try {\n        const openaiClient = new OpenAI({\n            apiKey: '1cf6caef55794eee9f30306e217d0f1d', // Replace with actual key\n            baseURL: 'https://eastus2.api.cognitive.microsoft.com/openai/deployments/gpt4o',\n            defaultQuery: { 'api-version': '2024-02-15-preview' },\n            defaultHeaders: {\n                'api-key': '1cf6caef55794eee9f30306e217d0f1d',\n            },\n        });\n        \n        const testCompletion = await openaiClient.chat.completions.create({\n            model: 'gpt4o', // This should match the deployment name\n            messages: [{ role: 'user', content: 'Say \"Hello from Azure OpenAI!\"' }],\n            max_tokens: 10\n        });\n        \n        console.log('✅ OpenAI Response:', testCompletion.choices[0].message.content);\n    } catch (error) {\n        console.log('❌ OpenAI Error:', error.message);\n    }\n    \n    // Test Speech Service initialization\n    console.log('\\n2. Testing Speech Service...');\n    try {\n        const speechConfig = sdk.SpeechConfig.fromSubscription(\n            '14ea2036305b4811bc3b0bcb4df6d2ad', // Replace with actual key\n            'eastus2'\n        );\n        speechConfig.speechSynthesisVoiceName = 'en-US-JennyNeural';\n        speechConfig.speechSynthesisOutputFormat = sdk.SpeechSynthesisOutputFormat.Audio16Khz32KBitRateMonoMp3;\n        \n        const speechSynthesizer = new sdk.SpeechSynthesizer(speechConfig);\n        \n        const testText = 'Hello from Azure Speech Service!';\n        \n        const result = await new Promise((resolve, reject) => {\n            speechSynthesizer.speakTextAsync(\n                testText,\n                (result) => {\n                    if (result.reason === sdk.ResultReason.SynthesizingAudioCompleted) {\n                        resolve(result);\n                    } else {\n                        reject(new Error(`Speech synthesis failed: ${result.errorDetails}`));\n                    }\n                },\n                (error) => reject(error)\n            );\n        });\n        \n        console.log('✅ Speech synthesis completed. Audio size:', result.audioData.byteLength, 'bytes');\n        \n        speechSynthesizer.close();\n        \n    } catch (error) {\n        console.log('❌ Speech Service Error:', error.message);\n    }\n    \n    // Test UUID generation\n    console.log('\\n3. Testing UUID generation...');\n    const testId = uuidv4();\n    console.log('✅ Generated UUID:', testId);\n    \n    console.log('\\n✅ Component testing completed!');\n}\n\n// Run the test\ntestComponents().catch(console.error);\n"],"mappings":"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","ignoreList":[]}