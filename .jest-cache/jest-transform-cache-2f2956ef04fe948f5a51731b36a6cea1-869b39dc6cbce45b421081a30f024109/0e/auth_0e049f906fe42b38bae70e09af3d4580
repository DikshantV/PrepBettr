b4605f77045f1b625dd1c8c3447a09ec
/* istanbul ignore next */
function cov_1nr30tbi4i() {
  var path = "/Users/dikshantvashistha/PrepBettr/lib/firebase/auth.js";
  var hash = "bac70efe593e583f6e66f1dc8fc2498add07923b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dikshantvashistha/PrepBettr/lib/firebase/auth.js",
    statementMap: {
      "0": {
        start: {
          line: 16,
          column: 2
        },
        end: {
          line: 18,
          column: 3
        }
      },
      "1": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 17,
          column: 53
        }
      },
      "2": {
        start: {
          line: 20,
          column: 2
        },
        end: {
          line: 57,
          column: 3
        }
      },
      "3": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 21,
          column: 65
        }
      },
      "4": {
        start: {
          line: 24,
          column: 19
        },
        end: {
          line: 24,
          column: 62
        }
      },
      "5": {
        start: {
          line: 25,
          column: 17
        },
        end: {
          line: 25,
          column: 28
        }
      },
      "6": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 29,
          column: 5
        }
      },
      "7": {
        start: {
          line: 28,
          column: 6
        },
        end: {
          line: 28,
          column: 69
        }
      },
      "8": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 31,
          column: 85
        }
      },
      "9": {
        start: {
          line: 34,
          column: 20
        },
        end: {
          line: 34,
          column: 48
        }
      },
      "10": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 36,
          column: 62
        }
      },
      "11": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 37,
          column: 71
        }
      },
      "12": {
        start: {
          line: 40,
          column: 4
        },
        end: {
          line: 42,
          column: 5
        }
      },
      "13": {
        start: {
          line: 41,
          column: 6
        },
        end: {
          line: 41,
          column: 70
        }
      },
      "14": {
        start: {
          line: 44,
          column: 4
        },
        end: {
          line: 53,
          column: 6
        }
      },
      "15": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 55,
          column: 70
        }
      },
      "16": {
        start: {
          line: 56,
          column: 4
        },
        end: {
          line: 56,
          column: 16
        }
      },
      "17": {
        start: {
          line: 64,
          column: 2
        },
        end: {
          line: 66,
          column: 3
        }
      },
      "18": {
        start: {
          line: 65,
          column: 4
        },
        end: {
          line: 65,
          column: 53
        }
      },
      "19": {
        start: {
          line: 68,
          column: 2
        },
        end: {
          line: 74,
          column: 3
        }
      },
      "20": {
        start: {
          line: 69,
          column: 4
        },
        end: {
          line: 69,
          column: 25
        }
      },
      "21": {
        start: {
          line: 70,
          column: 4
        },
        end: {
          line: 70,
          column: 51
        }
      },
      "22": {
        start: {
          line: 72,
          column: 4
        },
        end: {
          line: 72,
          column: 57
        }
      },
      "23": {
        start: {
          line: 73,
          column: 4
        },
        end: {
          line: 73,
          column: 16
        }
      },
      "24": {
        start: {
          line: 81,
          column: 2
        },
        end: {
          line: 83,
          column: 3
        }
      },
      "25": {
        start: {
          line: 82,
          column: 4
        },
        end: {
          line: 82,
          column: 50
        }
      },
      "26": {
        start: {
          line: 85,
          column: 2
        },
        end: {
          line: 92,
          column: 3
        }
      },
      "27": {
        start: {
          line: 86,
          column: 20
        },
        end: {
          line: 86,
          column: 68
        }
      },
      "28": {
        start: {
          line: 87,
          column: 4
        },
        end: {
          line: 87,
          column: 53
        }
      },
      "29": {
        start: {
          line: 88,
          column: 4
        },
        end: {
          line: 88,
          column: 19
        }
      },
      "30": {
        start: {
          line: 90,
          column: 4
        },
        end: {
          line: 90,
          column: 68
        }
      },
      "31": {
        start: {
          line: 91,
          column: 4
        },
        end: {
          line: 91,
          column: 16
        }
      },
      "32": {
        start: {
          line: 99,
          column: 2
        },
        end: {
          line: 101,
          column: 3
        }
      },
      "33": {
        start: {
          line: 100,
          column: 4
        },
        end: {
          line: 100,
          column: 17
        }
      },
      "34": {
        start: {
          line: 104,
          column: 16
        },
        end: {
          line: 104,
          column: 32
        }
      },
      "35": {
        start: {
          line: 105,
          column: 2
        },
        end: {
          line: 107,
          column: 3
        }
      },
      "36": {
        start: {
          line: 106,
          column: 4
        },
        end: {
          line: 106,
          column: 17
        }
      },
      "37": {
        start: {
          line: 109,
          column: 2
        },
        end: {
          line: 124,
          column: 3
        }
      },
      "38": {
        start: {
          line: 111,
          column: 20
        },
        end: {
          line: 111,
          column: 84
        }
      },
      "39": {
        start: {
          line: 114,
          column: 4
        },
        end: {
          line: 121,
          column: 6
        }
      },
      "40": {
        start: {
          line: 123,
          column: 4
        },
        end: {
          line: 123,
          column: 17
        }
      }
    },
    fnMap: {
      "0": {
        name: "authenticateWithGoogle",
        decl: {
          start: {
            line: 15,
            column: 22
          },
          end: {
            line: 15,
            column: 44
          }
        },
        loc: {
          start: {
            line: 15,
            column: 47
          },
          end: {
            line: 58,
            column: 1
          }
        },
        line: 15
      },
      "1": {
        name: "signOutFromFirebase",
        decl: {
          start: {
            line: 63,
            column: 22
          },
          end: {
            line: 63,
            column: 41
          }
        },
        loc: {
          start: {
            line: 63,
            column: 44
          },
          end: {
            line: 75,
            column: 1
          }
        },
        line: 63
      },
      "2": {
        name: "getCurrentUserIdToken",
        decl: {
          start: {
            line: 80,
            column: 22
          },
          end: {
            line: 80,
            column: 43
          }
        },
        loc: {
          start: {
            line: 80,
            column: 66
          },
          end: {
            line: 93,
            column: 1
          }
        },
        line: 80
      },
      "3": {
        name: "validateFirebaseIdToken",
        decl: {
          start: {
            line: 98,
            column: 16
          },
          end: {
            line: 98,
            column: 39
          }
        },
        loc: {
          start: {
            line: 98,
            column: 47
          },
          end: {
            line: 125,
            column: 1
          }
        },
        line: 98
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 16,
            column: 2
          },
          end: {
            line: 18,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 16,
            column: 2
          },
          end: {
            line: 18,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 16
      },
      "1": {
        loc: {
          start: {
            line: 16,
            column: 6
          },
          end: {
            line: 16,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 16,
            column: 6
          },
          end: {
            line: 16,
            column: 11
          }
        }, {
          start: {
            line: 16,
            column: 15
          },
          end: {
            line: 16,
            column: 30
          }
        }],
        line: 16
      },
      "2": {
        loc: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 27
      },
      "3": {
        loc: {
          start: {
            line: 40,
            column: 4
          },
          end: {
            line: 42,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 4
          },
          end: {
            line: 42,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 40
      },
      "4": {
        loc: {
          start: {
            line: 64,
            column: 2
          },
          end: {
            line: 66,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 64,
            column: 2
          },
          end: {
            line: 66,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 64
      },
      "5": {
        loc: {
          start: {
            line: 80,
            column: 44
          },
          end: {
            line: 80,
            column: 64
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 80,
            column: 59
          },
          end: {
            line: 80,
            column: 64
          }
        }],
        line: 80
      },
      "6": {
        loc: {
          start: {
            line: 81,
            column: 2
          },
          end: {
            line: 83,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 81,
            column: 2
          },
          end: {
            line: 83,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 81
      },
      "7": {
        loc: {
          start: {
            line: 99,
            column: 2
          },
          end: {
            line: 101,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 99,
            column: 2
          },
          end: {
            line: 101,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 99
      },
      "8": {
        loc: {
          start: {
            line: 99,
            column: 6
          },
          end: {
            line: 99,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 99,
            column: 6
          },
          end: {
            line: 99,
            column: 12
          }
        }, {
          start: {
            line: 99,
            column: 16
          },
          end: {
            line: 99,
            column: 41
          }
        }],
        line: 99
      },
      "9": {
        loc: {
          start: {
            line: 105,
            column: 2
          },
          end: {
            line: 107,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 105,
            column: 2
          },
          end: {
            line: 107,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 105
      },
      "10": {
        loc: {
          start: {
            line: 115,
            column: 6
          },
          end: {
            line: 120,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 115,
            column: 6
          },
          end: {
            line: 115,
            column: 17
          }
        }, {
          start: {
            line: 116,
            column: 6
          },
          end: {
            line: 116,
            column: 17
          }
        }, {
          start: {
            line: 117,
            column: 6
          },
          end: {
            line: 117,
            column: 17
          }
        }, {
          start: {
            line: 118,
            column: 6
          },
          end: {
            line: 118,
            column: 17
          }
        }, {
          start: {
            line: 119,
            column: 6
          },
          end: {
            line: 119,
            column: 17
          }
        }, {
          start: {
            line: 120,
            column: 6
          },
          end: {
            line: 120,
            column: 52
          }
        }],
        line: 115
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0, 0, 0, 0, 0]
    },
    inputSourceMap: null,
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "bac70efe593e583f6e66f1dc8fc2498add07923b"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1nr30tbi4i = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1nr30tbi4i();
/**
 * Firebase Authentication Helper
 * 
 * Provides proper Firebase Google authentication flow
 * Ensures Firebase ID tokens are generated correctly
 */

import { auth, googleProvider } from '@/firebase/client';
import { signInWithPopup, getIdToken } from 'firebase/auth';

/**
 * Authenticate with Google using Firebase
 * Returns Firebase ID token (not Google OAuth token)
 */
export async function authenticateWithGoogle() {
  /* istanbul ignore next */
  cov_1nr30tbi4i().f[0]++;
  cov_1nr30tbi4i().s[0]++;
  if (
  /* istanbul ignore next */
  (cov_1nr30tbi4i().b[1][0]++, !auth) ||
  /* istanbul ignore next */
  (cov_1nr30tbi4i().b[1][1]++, !googleProvider)) {
    /* istanbul ignore next */
    cov_1nr30tbi4i().b[0][0]++;
    cov_1nr30tbi4i().s[1]++;
    throw new Error('Firebase Auth not initialized');
  } else
  /* istanbul ignore next */
  {
    cov_1nr30tbi4i().b[0][1]++;
  }
  cov_1nr30tbi4i().s[2]++;
  try {
    /* istanbul ignore next */
    cov_1nr30tbi4i().s[3]++;
    console.log('🔐 Starting Firebase Google authentication...');

    // Sign in with Google using Firebase
    const result =
    /* istanbul ignore next */
    (cov_1nr30tbi4i().s[4]++, await signInWithPopup(auth, googleProvider));
    const user =
    /* istanbul ignore next */
    (cov_1nr30tbi4i().s[5]++, result.user);
    /* istanbul ignore next */
    cov_1nr30tbi4i().s[6]++;
    if (!user) {
      /* istanbul ignore next */
      cov_1nr30tbi4i().b[2][0]++;
      cov_1nr30tbi4i().s[7]++;
      throw new Error('No user returned from Google authentication');
    } else
    /* istanbul ignore next */
    {
      cov_1nr30tbi4i().b[2][1]++;
    }
    cov_1nr30tbi4i().s[8]++;
    console.log('🔐 Google authentication successful, getting Firebase ID token...');

    // Get Firebase ID token (this is crucial - not Google OAuth token)
    const idToken =
    /* istanbul ignore next */
    (cov_1nr30tbi4i().s[9]++, await getIdToken(user, true)); // Force refresh to ensure fresh token
    /* istanbul ignore next */
    cov_1nr30tbi4i().s[10]++;
    console.log('🔐 Firebase ID token obtained successfully');
    /* istanbul ignore next */
    cov_1nr30tbi4i().s[11]++;
    console.log('🔐 Token preview:', idToken.substring(0, 50) + '...');

    // Validate token format (Firebase ID tokens are JWT)
    /* istanbul ignore next */
    cov_1nr30tbi4i().s[12]++;
    if (!idToken.includes('.')) {
      /* istanbul ignore next */
      cov_1nr30tbi4i().b[3][0]++;
      cov_1nr30tbi4i().s[13]++;
      throw new Error('Invalid Firebase ID token format - not a JWT');
    } else
    /* istanbul ignore next */
    {
      cov_1nr30tbi4i().b[3][1]++;
    }
    cov_1nr30tbi4i().s[14]++;
    return {
      user: {
        uid: user.uid,
        email: user.email,
        displayName: user.displayName,
        photoURL: user.photoURL,
        emailVerified: user.emailVerified
      },
      idToken
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_1nr30tbi4i().s[15]++;
    console.error('🔐 Firebase Google authentication failed:', error);
    /* istanbul ignore next */
    cov_1nr30tbi4i().s[16]++;
    throw error;
  }
}

/**
 * Sign out from Firebase
 */
export async function signOutFromFirebase() {
  /* istanbul ignore next */
  cov_1nr30tbi4i().f[1]++;
  cov_1nr30tbi4i().s[17]++;
  if (!auth) {
    /* istanbul ignore next */
    cov_1nr30tbi4i().b[4][0]++;
    cov_1nr30tbi4i().s[18]++;
    throw new Error('Firebase Auth not initialized');
  } else
  /* istanbul ignore next */
  {
    cov_1nr30tbi4i().b[4][1]++;
  }
  cov_1nr30tbi4i().s[19]++;
  try {
    /* istanbul ignore next */
    cov_1nr30tbi4i().s[20]++;
    await auth.signOut();
    /* istanbul ignore next */
    cov_1nr30tbi4i().s[21]++;
    console.log('🔐 Firebase sign out successful');
  } catch (error) {
    /* istanbul ignore next */
    cov_1nr30tbi4i().s[22]++;
    console.error('🔐 Firebase sign out failed:', error);
    /* istanbul ignore next */
    cov_1nr30tbi4i().s[23]++;
    throw error;
  }
}

/**
 * Get current Firebase user's ID token
 */
export async function getCurrentUserIdToken(forceRefresh =
/* istanbul ignore next */
(cov_1nr30tbi4i().b[5][0]++, false)) {
  /* istanbul ignore next */
  cov_1nr30tbi4i().f[2]++;
  cov_1nr30tbi4i().s[24]++;
  if (!auth?.currentUser) {
    /* istanbul ignore next */
    cov_1nr30tbi4i().b[6][0]++;
    cov_1nr30tbi4i().s[25]++;
    throw new Error('No Firebase user signed in');
  } else
  /* istanbul ignore next */
  {
    cov_1nr30tbi4i().b[6][1]++;
  }
  cov_1nr30tbi4i().s[26]++;
  try {
    const idToken =
    /* istanbul ignore next */
    (cov_1nr30tbi4i().s[27]++, await getIdToken(auth.currentUser, forceRefresh));
    /* istanbul ignore next */
    cov_1nr30tbi4i().s[28]++;
    console.log('🔐 Current user ID token obtained');
    /* istanbul ignore next */
    cov_1nr30tbi4i().s[29]++;
    return idToken;
  } catch (error) {
    /* istanbul ignore next */
    cov_1nr30tbi4i().s[30]++;
    console.error('🔐 Failed to get current user ID token:', error);
    /* istanbul ignore next */
    cov_1nr30tbi4i().s[31]++;
    throw error;
  }
}

/**
 * Validate Firebase ID token format
 */
export function validateFirebaseIdToken(token) {
  /* istanbul ignore next */
  cov_1nr30tbi4i().f[3]++;
  cov_1nr30tbi4i().s[32]++;
  if (
  /* istanbul ignore next */
  (cov_1nr30tbi4i().b[8][0]++, !token) ||
  /* istanbul ignore next */
  (cov_1nr30tbi4i().b[8][1]++, typeof token !== 'string')) {
    /* istanbul ignore next */
    cov_1nr30tbi4i().b[7][0]++;
    cov_1nr30tbi4i().s[33]++;
    return false;
  } else
  /* istanbul ignore next */
  {
    cov_1nr30tbi4i().b[7][1]++;
  }

  // Firebase ID tokens are JWTs with 3 parts separated by dots
  const parts =
  /* istanbul ignore next */
  (cov_1nr30tbi4i().s[34]++, token.split('.'));
  /* istanbul ignore next */
  cov_1nr30tbi4i().s[35]++;
  if (parts.length !== 3) {
    /* istanbul ignore next */
    cov_1nr30tbi4i().b[9][0]++;
    cov_1nr30tbi4i().s[36]++;
    return false;
  } else
  /* istanbul ignore next */
  {
    cov_1nr30tbi4i().b[9][1]++;
  }
  cov_1nr30tbi4i().s[37]++;
  try {
    // Try to decode the payload (second part)
    const payload =
    /* istanbul ignore next */
    (cov_1nr30tbi4i().s[38]++, JSON.parse(atob(parts[1].replace(/-/g, '+').replace(/_/g, '/'))));

    // Firebase ID tokens should have these claims
    /* istanbul ignore next */
    cov_1nr30tbi4i().s[39]++;
    return /* istanbul ignore next */(cov_1nr30tbi4i().b[10][0]++, payload.iss) &&
    /* istanbul ignore next */
    (cov_1nr30tbi4i().b[10][1]++, payload.aud) &&
    /* istanbul ignore next */
    (cov_1nr30tbi4i().b[10][2]++, payload.exp) &&
    /* istanbul ignore next */
    (cov_1nr30tbi4i().b[10][3]++, payload.iat) &&
    /* istanbul ignore next */
    (cov_1nr30tbi4i().b[10][4]++, payload.sub) &&
    /* istanbul ignore next */
    (cov_1nr30tbi4i().b[10][5]++, payload.iss.includes('securetoken.google.com'));
  } catch {
    /* istanbul ignore next */
    cov_1nr30tbi4i().s[40]++;
    return false;
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,