{"version":3,"names":["exports","POST","server_1","cov_1bxck3nr89","s","require","headers_1","authMiddleware_1","firebase_user_service_1","SESSION_COOKIE_NAME","SESSION_DURATION_S","request","f","timestamp","Date","toISOString","console","log","email","password","name","idToken","bypass","json","hasEmail","hasPassword","hasName","hasIdToken","idTokenPrefix","b","substring","NextResponse","error","status","authResult","sessionToken","isNewUser","parts","split","length","payload","JSON","parse","atob","replace","success","user","uid","email_verified","Error","startsCorrectly","startsWith","preview","verifyFirebaseToken","hasUser","_a","verifyError","message","emailVerified","newUserRecord","firebaseUserService","createAuthUser","displayName","auth","Promise","resolve","then","__importStar","m","getAdminAuth","createCustomToken","code","action","errorMessage","includes","existingProfile","getUserProfile","userProfile","ensureUserProfile","plan","profileError","deleteUser","cleanupError","cookieStore","cookies","set","httpOnly","secure","process","env","NODE_ENV","maxAge","path","sameSite","token","profilePictureUrl","createdAt","updatedAt"],"sources":["/Users/dikshantvashistha/PrepBettr/app/api/auth/signup/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { cookies } from 'next/headers';\nimport { verifyFirebaseToken } from '@/lib/middleware/authMiddleware';\nimport { firebaseUserService } from '@/lib/services/firebase-user-service';\n\nconst SESSION_COOKIE_NAME = 'session';\nconst SESSION_DURATION_S = 7 * 24 * 60 * 60; // 7 days\n\nexport async function POST(request: NextRequest) {\n  const timestamp = new Date().toISOString();\n  console.log(`üÜï [${timestamp}] AUTH SIGNUP POST called`);\n  \n  try {\n    const { email, password, name, idToken, bypass } = await request.json();\n    \n    console.log(`üÜï [${timestamp}] Signup request details:`, {\n      hasEmail: !!email,\n      hasPassword: !!password,\n      hasName: !!name,\n      hasIdToken: !!idToken,\n      idTokenPrefix: idToken ? idToken.substring(0, 50) + '...' : 'none'\n    });\n\n    if (!email) {\n      return NextResponse.json(\n        { error: 'Email is required' },\n        { status: 400 }\n      );\n    }\n\n    let authResult;\n    let sessionToken = idToken;\n    let isNewUser = false;\n\n    if (idToken && bypass) {\n      // Handle bypass/development token flow\n      console.log(`üîê [${timestamp}] Processing bypass token for development signup`);\n      \n      try {\n        // For bypass tokens, decode directly since they're mock tokens\n        const parts = idToken.split('.');\n        if (parts.length >= 3) {\n          const payload = JSON.parse(atob(parts[1].replace(/-/g, '+').replace(/_/g, '/')));\n          \n          authResult = {\n            success: true,\n            user: {\n              uid: payload.uid,\n              email: payload.email,\n              name: payload.name,\n              email_verified: payload.email_verified || true\n            }\n          };\n          \n          sessionToken = idToken; // Use the bypass token as session token\n          console.log(`‚úÖ [${timestamp}] Bypass token processed for signup uid: ${authResult.user.uid}`);\n        } else {\n          throw new Error('Invalid bypass token format');\n        }\n      } catch (error) {\n        console.error(`‚ùå [${timestamp}] Bypass token processing failed:`, error);\n        return NextResponse.json(\n          { error: 'Invalid bypass token' },\n          { status: 401 }\n        );\n      }\n      \n    } else if (idToken) {\n      // Handle Firebase ID token flow (for Google Sign-in)\n      console.log(`üîê [${timestamp}] Verifying Firebase ID token for Google Sign-up`);\n      console.log(`üîê [${timestamp}] ID Token format check:`, {\n        length: idToken.length,\n        parts: idToken.split('.').length,\n        startsCorrectly: idToken.startsWith('eyJ'),\n        preview: idToken.substring(0, 100) + '...'\n      });\n      \n      try {\n        authResult = await verifyFirebaseToken(idToken);\n        console.log(`üîê [${timestamp}] Firebase token verification result:`, {\n          success: authResult.success,\n          hasUser: !!authResult.user,\n          uid: authResult.user?.uid,\n          error: authResult.error\n        });\n      } catch (verifyError) {\n        console.error(`üîê [${timestamp}] Firebase token verification threw error:`, verifyError);\n        authResult = {\n          success: false,\n          user: null,\n          error: verifyError instanceof Error ? verifyError.message : 'Token verification failed'\n        };\n      }\n      \n      if (!authResult.success || !authResult.user) {\n        console.error(`‚ùå [${timestamp}] Firebase ID token verification failed:`, {\n          error: authResult.error,\n          success: authResult.success,\n          hasUser: !!authResult.user\n        });\n        return NextResponse.json(\n          { error: `Invalid ID token: ${authResult.error}` },\n          { status: 401 }\n        );\n      }\n      \n      console.log(`‚úÖ [${timestamp}] Firebase ID token verified for uid: ${authResult.user.uid}`);\n      console.log(`‚úÖ [${timestamp}] Token claims:`, {\n        email: authResult.user.email,\n        name: authResult.user.name,\n        emailVerified: authResult.user.email_verified\n      });\n      \n      // For Google sign-in, user already exists in Firebase Auth\n      // We just need to ensure the profile exists in Firestore\n      \n    } else if (password) {\n      // Handle email/password flow - create new Firebase Auth user\n      console.log(`üÜï Creating new Firebase Auth user for: ${email}`);\n      try {\n        const newUserRecord = await firebaseUserService.createAuthUser({\n          email,\n          password,\n          displayName: name,\n          emailVerified: false\n        });\n        \n        authResult = {\n          success: true,\n          user: {\n            uid: newUserRecord.uid,\n            email: newUserRecord.email!,\n            name: newUserRecord.displayName || name,\n            email_verified: newUserRecord.emailVerified\n          }\n        };\n\n        // Create a custom token for the new user\n        const auth = await import('@/lib/firebase/admin').then(m => m.getAdminAuth());\n        sessionToken = await auth.createCustomToken(newUserRecord.uid);\n        isNewUser = true;\n        \n        console.log(`‚úÖ Firebase Auth user created for uid: ${authResult.user.uid}`);\n      } catch (error: any) {\n        console.error('‚ùå Firebase Auth user creation failed:', error);\n        \n        // Handle specific Firebase Auth errors\n        if (error.code === 'auth/email-already-exists') {\n          console.log(`‚ö†Ô∏è Account creation attempt for existing email: ${email}`);\n          return NextResponse.json(\n            { \n              error: 'This email is already registered. Please sign in instead or use a different email.',\n              code: 'email_already_exists',\n              action: 'redirect_to_signin'\n            },\n            { status: 409 }\n          );\n        }\n        \n        if (error.code === 'auth/invalid-email') {\n          return NextResponse.json(\n            { \n              error: 'Please enter a valid email address.',\n              code: 'invalid_email'\n            },\n            { status: 400 }\n          );\n        }\n        \n        if (error.code === 'auth/weak-password') {\n          return NextResponse.json(\n            { \n              error: 'Password must be at least 6 characters long.',\n              code: 'weak_password'\n            },\n            { status: 400 }\n          );\n        }\n        \n        // Generic Firebase error handling\n        const errorMessage = error.message || 'Failed to create account';\n        console.error(`‚ùå Unhandled Firebase Auth error code: ${error.code}, message: ${errorMessage}`);\n        \n        return NextResponse.json(\n          { \n            error: errorMessage.includes('Firebase') ? 'Authentication service error. Please try again.' : errorMessage,\n            code: error.code || 'auth_error'\n          },\n          { status: 400 }\n        );\n      }\n    } else {\n      return NextResponse.json(\n        { error: 'Password or ID token is required' },\n        { status: 400 }\n      );\n    }\n\n    if (!authResult.user || !authResult.user.uid) {\n      console.error('‚ùå Authentication failed - no user data');\n      return NextResponse.json(\n        { error: 'Authentication failed' },\n        { status: 401 }\n      );\n    }\n\n    try {\n      // Check if user profile already exists in Firestore\n      console.log(`üîç Checking if user profile exists for uid: ${authResult.user.uid}`);\n      const existingProfile = await firebaseUserService.getUserProfile(authResult.user.uid);\n      \n      if (existingProfile && !isNewUser) {\n        console.log(`‚ö†Ô∏è User profile already exists for uid: ${authResult.user.uid}`);\n        return NextResponse.json(\n          { error: 'User already exists' },\n          { status: 409 }\n        );\n      }\n\n      // Create or ensure user profile exists in Firestore with retry logic\n      let userProfile;\n      try {\n        userProfile = await firebaseUserService.ensureUserProfile(authResult.user.uid, {\n          email: authResult.user.email,\n          displayName: authResult.user.name || name,\n          emailVerified: authResult.user.email_verified,\n          plan: 'free'\n        });\n      } catch (profileError) {\n        console.error(`‚ùå Failed to create user profile for uid: ${authResult.user.uid}:`, profileError);\n        \n        // If this was a new Firebase Auth user creation and profile creation failed,\n        // we should clean up the orphaned Firebase Auth account\n        if (isNewUser) {\n          console.log(`üßπ Cleaning up orphaned Firebase Auth account for uid: ${authResult.user.uid}`);\n          try {\n            await firebaseUserService.deleteUser(authResult.user.uid);\n            console.log(`‚úÖ Cleaned up orphaned Firebase Auth account`);\n          } catch (cleanupError) {\n            console.error(`‚ùå Failed to cleanup orphaned Firebase Auth account:`, cleanupError);\n            // Don't fail the request for cleanup errors - log for manual review\n          }\n        }\n        \n        throw profileError;\n      }\n      \n      console.log(`‚úÖ User profile ${existingProfile ? 'confirmed' : 'created'} for uid: ${authResult.user.uid}`);\n\n      // Set session cookie\n      const cookieStore = await cookies();\n      cookieStore.set(SESSION_COOKIE_NAME, sessionToken, {\n        httpOnly: true,\n        secure: process.env.NODE_ENV === 'production',\n        maxAge: SESSION_DURATION_S,\n        path: '/',\n        sameSite: 'lax',\n      });\n      \n      console.log(`üç™ Session cookie set for uid: ${authResult.user.uid}`);\n\n      // Return success with user data and token for localStorage\n      return NextResponse.json({\n        success: true,\n        token: sessionToken,\n        user: {\n          uid: userProfile.uid,\n          email: userProfile.email,\n          name: userProfile.displayName,\n          email_verified: userProfile.emailVerified,\n          plan: userProfile.plan,\n          profilePictureUrl: userProfile.profilePictureUrl,\n          createdAt: userProfile.createdAt,\n          updatedAt: userProfile.updatedAt\n        }\n      });\n      \n    } catch (profileError) {\n      console.error('‚ùå Failed to handle user profile:', profileError);\n      return NextResponse.json(\n        { error: 'Failed to create user profile' },\n        { status: 500 }\n      );\n    }\n\n  } catch (error) {\n    console.error('‚ùå Signup error:', error);\n    return NextResponse.json(\n      { error: 'Internal server error' },\n      { status: 500 }\n    );\n  }\n}\n"],"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","ignoreList":[]}