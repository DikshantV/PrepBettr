7743f19ccee4f5a25fac9966129d3e23
"use strict";

// app/api/webhooks/sendgrid/route.ts
// SendGrid webhook endpoint for tracking email events
/* istanbul ignore next */
function cov_1ej0x10qzn() {
  var path = "/Users/dikshantvashistha/PrepBettr/app/api/webhooks/sendgrid/route.ts";
  var hash = "d4bc14f97e9c2a7cff4981fd1785f6ce4312e7ed";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dikshantvashistha/PrepBettr/app/api/webhooks/sendgrid/route.ts",
    statementMap: {
      "0": {
        start: {
          line: 4,
          column: 22
        },
        end: {
          line: 6,
          column: 1
        }
      },
      "1": {
        start: {
          line: 5,
          column: 4
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "2": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 7,
          column: 62
        }
      },
      "3": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 20
        }
      },
      "4": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 18
        }
      },
      "5": {
        start: {
          line: 10,
          column: 17
        },
        end: {
          line: 10,
          column: 39
        }
      },
      "6": {
        start: {
          line: 11,
          column: 17
        },
        end: {
          line: 11,
          column: 51
        }
      },
      "7": {
        start: {
          line: 16,
          column: 26
        },
        end: {
          line: 16,
          column: 61
        }
      },
      "8": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 20,
          column: 5
        }
      },
      "9": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 97
        }
      },
      "10": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 20
        }
      },
      "11": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 31,
          column: 5
        }
      },
      "12": {
        start: {
          line: 22,
          column: 34
        },
        end: {
          line: 25,
          column: 29
        }
      },
      "13": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 47
        }
      },
      "14": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 76
        }
      },
      "15": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 21
        }
      },
      "16": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 70,
          column: 5
        }
      },
      "17": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 46,
          column: 11
        }
      },
      "18": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 69,
          column: 59
        }
      },
      "19": {
        start: {
          line: 76,
          column: 4
        },
        end: {
          line: 110,
          column: 5
        }
      },
      "20": {
        start: {
          line: 79,
          column: 12
        },
        end: {
          line: 79,
          column: 63
        }
      },
      "21": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 80,
          column: 18
        }
      },
      "22": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 83,
          column: 81
        }
      },
      "23": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 85,
          column: 18
        }
      },
      "24": {
        start: {
          line: 88,
          column: 12
        },
        end: {
          line: 88,
          column: 81
        }
      },
      "25": {
        start: {
          line: 89,
          column: 12
        },
        end: {
          line: 89,
          column: 18
        }
      },
      "26": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 92,
          column: 63
        }
      },
      "27": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 94,
          column: 18
        }
      },
      "28": {
        start: {
          line: 97,
          column: 12
        },
        end: {
          line: 97,
          column: 70
        }
      },
      "29": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 99,
          column: 18
        }
      },
      "30": {
        start: {
          line: 102,
          column: 12
        },
        end: {
          line: 102,
          column: 62
        }
      },
      "31": {
        start: {
          line: 103,
          column: 12
        },
        end: {
          line: 103,
          column: 18
        }
      },
      "32": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 106,
          column: 82
        }
      },
      "33": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 107,
          column: 18
        }
      },
      "34": {
        start: {
          line: 109,
          column: 12
        },
        end: {
          line: 109,
          column: 78
        }
      },
      "35": {
        start: {
          line: 112,
          column: 4
        },
        end: {
          line: 112,
          column: 31
        }
      },
      "36": {
        start: {
          line: 119,
          column: 4
        },
        end: {
          line: 156,
          column: 5
        }
      },
      "37": {
        start: {
          line: 120,
          column: 21
        },
        end: {
          line: 120,
          column: 41
        }
      },
      "38": {
        start: {
          line: 121,
          column: 26
        },
        end: {
          line: 121,
          column: 93
        }
      },
      "39": {
        start: {
          line: 122,
          column: 26
        },
        end: {
          line: 122,
          column: 93
        }
      },
      "40": {
        start: {
          line: 124,
          column: 8
        },
        end: {
          line: 129,
          column: 9
        }
      },
      "41": {
        start: {
          line: 125,
          column: 12
        },
        end: {
          line: 128,
          column: 13
        }
      },
      "42": {
        start: {
          line: 126,
          column: 16
        },
        end: {
          line: 126,
          column: 68
        }
      },
      "43": {
        start: {
          line: 127,
          column: 16
        },
        end: {
          line: 127,
          column: 107
        }
      },
      "44": {
        start: {
          line: 132,
          column: 8
        },
        end: {
          line: 138,
          column: 9
        }
      },
      "45": {
        start: {
          line: 133,
          column: 12
        },
        end: {
          line: 133,
          column: 38
        }
      },
      "46": {
        start: {
          line: 136,
          column: 12
        },
        end: {
          line: 136,
          column: 78
        }
      },
      "47": {
        start: {
          line: 137,
          column: 12
        },
        end: {
          line: 137,
          column: 98
        }
      },
      "48": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 142,
          column: 9
        }
      },
      "49": {
        start: {
          line: 141,
          column: 12
        },
        end: {
          line: 141,
          column: 42
        }
      },
      "50": {
        start: {
          line: 144,
          column: 8
        },
        end: {
          line: 148,
          column: 28
        }
      },
      "51": {
        start: {
          line: 151,
          column: 8
        },
        end: {
          line: 151,
          column: 67
        }
      },
      "52": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 155,
          column: 28
        }
      },
      "53": {
        start: {
          line: 163,
          column: 4
        },
        end: {
          line: 169,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 4,
            column: 56
          },
          end: {
            line: 4,
            column: 57
          }
        },
        loc: {
          start: {
            line: 4,
            column: 71
          },
          end: {
            line: 6,
            column: 1
          }
        },
        line: 4
      },
      "1": {
        name: "verifyWebhookSignature",
        decl: {
          start: {
            line: 15,
            column: 9
          },
          end: {
            line: 15,
            column: 31
          }
        },
        loc: {
          start: {
            line: 15,
            column: 63
          },
          end: {
            line: 32,
            column: 1
          }
        },
        line: 15
      },
      "2": {
        name: "logEmailEvent",
        decl: {
          start: {
            line: 36,
            column: 15
          },
          end: {
            line: 36,
            column: 28
          }
        },
        loc: {
          start: {
            line: 36,
            column: 36
          },
          end: {
            line: 71,
            column: 1
          }
        },
        line: 36
      },
      "3": {
        name: "handleEmailEvent",
        decl: {
          start: {
            line: 75,
            column: 15
          },
          end: {
            line: 75,
            column: 31
          }
        },
        loc: {
          start: {
            line: 75,
            column: 39
          },
          end: {
            line: 113,
            column: 1
          }
        },
        line: 75
      },
      "4": {
        name: "POST",
        decl: {
          start: {
            line: 118,
            column: 15
          },
          end: {
            line: 118,
            column: 19
          }
        },
        loc: {
          start: {
            line: 118,
            column: 29
          },
          end: {
            line: 157,
            column: 1
          }
        },
        line: 118
      },
      "5": {
        name: "GET",
        decl: {
          start: {
            line: 162,
            column: 15
          },
          end: {
            line: 162,
            column: 18
          }
        },
        loc: {
          start: {
            line: 162,
            column: 21
          },
          end: {
            line: 170,
            column: 1
          }
        },
        line: 162
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 4,
            column: 22
          },
          end: {
            line: 6,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 23
          },
          end: {
            line: 4,
            column: 27
          }
        }, {
          start: {
            line: 4,
            column: 31
          },
          end: {
            line: 4,
            column: 51
          }
        }, {
          start: {
            line: 4,
            column: 56
          },
          end: {
            line: 6,
            column: 1
          }
        }],
        line: 4
      },
      "1": {
        loc: {
          start: {
            line: 5,
            column: 11
          },
          end: {
            line: 5,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 37
          },
          end: {
            line: 5,
            column: 40
          }
        }, {
          start: {
            line: 5,
            column: 43
          },
          end: {
            line: 5,
            column: 61
          }
        }],
        line: 5
      },
      "2": {
        loc: {
          start: {
            line: 5,
            column: 12
          },
          end: {
            line: 5,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 12
          },
          end: {
            line: 5,
            column: 15
          }
        }, {
          start: {
            line: 5,
            column: 19
          },
          end: {
            line: 5,
            column: 33
          }
        }],
        line: 5
      },
      "3": {
        loc: {
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 20,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 20,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 17
      },
      "4": {
        loc: {
          start: {
            line: 76,
            column: 4
          },
          end: {
            line: 110,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 77,
            column: 8
          },
          end: {
            line: 80,
            column: 18
          }
        }, {
          start: {
            line: 81,
            column: 8
          },
          end: {
            line: 85,
            column: 18
          }
        }, {
          start: {
            line: 86,
            column: 8
          },
          end: {
            line: 89,
            column: 18
          }
        }, {
          start: {
            line: 90,
            column: 8
          },
          end: {
            line: 94,
            column: 18
          }
        }, {
          start: {
            line: 95,
            column: 8
          },
          end: {
            line: 99,
            column: 18
          }
        }, {
          start: {
            line: 100,
            column: 8
          },
          end: {
            line: 103,
            column: 18
          }
        }, {
          start: {
            line: 104,
            column: 8
          },
          end: {
            line: 107,
            column: 18
          }
        }, {
          start: {
            line: 108,
            column: 8
          },
          end: {
            line: 109,
            column: 78
          }
        }],
        line: 76
      },
      "5": {
        loc: {
          start: {
            line: 121,
            column: 26
          },
          end: {
            line: 121,
            column: 93
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 121,
            column: 26
          },
          end: {
            line: 121,
            column: 87
          }
        }, {
          start: {
            line: 121,
            column: 91
          },
          end: {
            line: 121,
            column: 93
          }
        }],
        line: 121
      },
      "6": {
        loc: {
          start: {
            line: 122,
            column: 26
          },
          end: {
            line: 122,
            column: 93
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 122,
            column: 26
          },
          end: {
            line: 122,
            column: 87
          }
        }, {
          start: {
            line: 122,
            column: 91
          },
          end: {
            line: 122,
            column: 93
          }
        }],
        line: 122
      },
      "7": {
        loc: {
          start: {
            line: 124,
            column: 8
          },
          end: {
            line: 129,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 124,
            column: 8
          },
          end: {
            line: 129,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 124
      },
      "8": {
        loc: {
          start: {
            line: 125,
            column: 12
          },
          end: {
            line: 128,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 125,
            column: 12
          },
          end: {
            line: 128,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 125
      },
      "9": {
        loc: {
          start: {
            line: 154,
            column: 21
          },
          end: {
            line: 154,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 154,
            column: 46
          },
          end: {
            line: 154,
            column: 59
          }
        }, {
          start: {
            line: 154,
            column: 62
          },
          end: {
            line: 154,
            column: 77
          }
        }],
        line: 154
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0, 0, 0, 0, 0, 0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/dikshantvashistha/PrepBettr/app/api/webhooks/sendgrid/route.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/dikshantvashistha/PrepBettr/app/api/webhooks/sendgrid/route.ts"],
      sourcesContent: ["// app/api/webhooks/sendgrid/route.ts\n// SendGrid webhook endpoint for tracking email events\n\nimport { NextRequest, NextResponse } from 'next/server';\nimport crypto from 'crypto';\n\ninterface SendGridEvent {\n  email: string;\n  timestamp: number;\n  event: 'processed' | 'delivered' | 'open' | 'click' | 'bounce' | 'dropped' | 'deferred' | 'unsubscribe' | 'group_unsubscribe' | 'group_resubscribe' | 'spam_report';\n  sg_event_id: string;\n  sg_message_id: string;\n  useragent?: string;\n  ip?: string;\n  url?: string;\n  reason?: string;\n  status?: string;\n  response?: string;\n  attempt?: string;\n  category?: string[];\n  asm_group_id?: number;\n}\n\n/**\n * Verify SendGrid webhook signature\n */\nfunction verifyWebhookSignature(payload: string, signature: string, timestamp: string): boolean {\n  const webhookSecret = process.env.SENDGRID_WEBHOOK_SECRET;\n  \n  if (!webhookSecret) {\n    console.warn('SENDGRID_WEBHOOK_SECRET not configured - skipping signature verification');\n    return true; // Allow for development\n  }\n\n  try {\n    const expectedSignature = crypto\n      .createHmac('sha256', webhookSecret)\n      .update(timestamp + payload)\n      .digest('base64');\n    \n    return signature === expectedSignature;\n  } catch (error) {\n    console.error('Error verifying SendGrid webhook signature:', error);\n    return false;\n  }\n}\n\n/**\n * Log email event to monitoring system\n */\nasync function logEmailEvent(event: SendGridEvent): Promise<void> {\n  try {\n    // Log to console for development\n    console.log(`\uD83D\uDCE7 SendGrid Event: ${event.event} for ${event.email}`, {\n      messageId: event.sg_message_id,\n      timestamp: new Date(event.timestamp * 1000).toISOString(),\n      event: event.event,\n      email: event.email,\n      reason: event.reason,\n      status: event.status\n    });\n\n    // TODO: Store events in database for production monitoring\n    // Example: Store in Cosmos DB or Firebase for analytics\n    /*\n    await storeEmailEvent({\n      messageId: event.sg_message_id,\n      eventId: event.sg_event_id,\n      email: event.email,\n      event: event.event,\n      timestamp: new Date(event.timestamp * 1000),\n      metadata: {\n        reason: event.reason,\n        status: event.status,\n        response: event.response,\n        userAgent: event.useragent,\n        ip: event.ip,\n        url: event.url,\n        categories: event.category\n      }\n    });\n    */\n\n  } catch (error) {\n    console.error('Error logging email event:', error);\n  }\n}\n\n/**\n * Handle different types of SendGrid events\n */\nasync function handleEmailEvent(event: SendGridEvent): Promise<void> {\n  switch (event.event) {\n    case 'delivered':\n      // Email successfully delivered\n      console.log(`\u2705 Email delivered to ${event.email}`);\n      break;\n      \n    case 'bounce':\n      // Email bounced - handle bounce processing\n      console.warn(`\u26A0\uFE0F Email bounced for ${event.email}: ${event.reason}`);\n      // TODO: Update user email status, implement bounce handling\n      break;\n      \n    case 'dropped':\n      // Email was dropped before sending\n      console.error(`\u274C Email dropped for ${event.email}: ${event.reason}`);\n      break;\n      \n    case 'spam_report':\n      // User marked email as spam\n      console.warn(`\uD83D\uDEAB Spam report from ${event.email}`);\n      // TODO: Automatically unsubscribe user or mark as spam\n      break;\n      \n    case 'unsubscribe':\n      // User unsubscribed\n      console.log(`\uD83D\uDCCB Unsubscribe request from ${event.email}`);\n      // TODO: Update user preferences in database\n      break;\n      \n    case 'open':\n      // Email was opened\n      console.log(`\uD83D\uDC41\uFE0F Email opened by ${event.email}`);\n      break;\n      \n    case 'click':\n      // Link in email was clicked\n      console.log(`\uD83D\uDDB1\uFE0F Email link clicked by ${event.email}: ${event.url}`);\n      break;\n      \n    default:\n      console.log(`\uD83D\uDCE8 Email event '${event.event}' for ${event.email}`);\n  }\n  \n  // Log all events for monitoring\n  await logEmailEvent(event);\n}\n\n/**\n * POST /api/webhooks/sendgrid\n * Handle SendGrid webhook events\n */\nexport async function POST(request: NextRequest) {\n  try {\n    const body = await request.text();\n    const signature = request.headers.get('X-Twilio-Email-Event-Webhook-Signature') || '';\n    const timestamp = request.headers.get('X-Twilio-Email-Event-Webhook-Timestamp') || '';\n\n    // Verify webhook signature in production\n    if (process.env.NODE_ENV === 'production') {\n      if (!verifyWebhookSignature(body, signature, timestamp)) {\n        console.error('Invalid SendGrid webhook signature');\n        return NextResponse.json(\n          { error: 'Invalid webhook signature' },\n          { status: 401 }\n        );\n      }\n    }\n\n    // Parse SendGrid events\n    let events: SendGridEvent[];\n    try {\n      events = JSON.parse(body);\n    } catch (error) {\n      console.error('Failed to parse SendGrid webhook payload:', error);\n      return NextResponse.json(\n        { error: 'Invalid JSON payload' },\n        { status: 400 }\n      );\n    }\n\n    // Process each event\n    for (const event of events) {\n      await handleEmailEvent(event);\n    }\n\n    // Return success response\n    return NextResponse.json(\n      { \n        success: true, \n        processed: events.length,\n        timestamp: new Date().toISOString()\n      },\n      { status: 200 }\n    );\n\n  } catch (error) {\n    console.error('Error processing SendGrid webhook:', error);\n    \n    return NextResponse.json(\n      { \n        error: 'Internal server error',\n        message: error instanceof Error ? error.message : 'Unknown error'\n      },\n      { status: 500 }\n    );\n  }\n}\n\n/**\n * GET /api/webhooks/sendgrid\n * Health check endpoint for webhook\n */\nexport async function GET() {\n  return NextResponse.json({\n    service: 'SendGrid Webhook Endpoint',\n    status: 'healthy',\n    timestamp: new Date().toISOString(),\n    environment: process.env.NODE_ENV,\n    webhookSecretConfigured: !!process.env.SENDGRID_WEBHOOK_SECRET\n  });\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d4bc14f97e9c2a7cff4981fd1785f6ce4312e7ed"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1ej0x10qzn = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1ej0x10qzn();
var __importDefault =
/* istanbul ignore next */
(cov_1ej0x10qzn().s[0]++,
/* istanbul ignore next */
(cov_1ej0x10qzn().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1ej0x10qzn().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_1ej0x10qzn().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_1ej0x10qzn().f[0]++;
  cov_1ej0x10qzn().s[1]++;
  return /* istanbul ignore next */(cov_1ej0x10qzn().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_1ej0x10qzn().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_1ej0x10qzn().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_1ej0x10qzn().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_1ej0x10qzn().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1ej0x10qzn().s[3]++;
exports.POST = POST;
/* istanbul ignore next */
cov_1ej0x10qzn().s[4]++;
exports.GET = GET;
const server_1 =
/* istanbul ignore next */
(cov_1ej0x10qzn().s[5]++, require("next/server"));
const crypto_1 =
/* istanbul ignore next */
(cov_1ej0x10qzn().s[6]++, __importDefault(require("crypto")));
/**
 * Verify SendGrid webhook signature
 */
function verifyWebhookSignature(payload, signature, timestamp) {
  /* istanbul ignore next */
  cov_1ej0x10qzn().f[1]++;
  const webhookSecret =
  /* istanbul ignore next */
  (cov_1ej0x10qzn().s[7]++, process.env.SENDGRID_WEBHOOK_SECRET);
  /* istanbul ignore next */
  cov_1ej0x10qzn().s[8]++;
  if (!webhookSecret) {
    /* istanbul ignore next */
    cov_1ej0x10qzn().b[3][0]++;
    cov_1ej0x10qzn().s[9]++;
    console.warn('SENDGRID_WEBHOOK_SECRET not configured - skipping signature verification');
    /* istanbul ignore next */
    cov_1ej0x10qzn().s[10]++;
    return true; // Allow for development
  } else
  /* istanbul ignore next */
  {
    cov_1ej0x10qzn().b[3][1]++;
  }
  cov_1ej0x10qzn().s[11]++;
  try {
    const expectedSignature =
    /* istanbul ignore next */
    (cov_1ej0x10qzn().s[12]++, crypto_1.default.createHmac('sha256', webhookSecret).update(timestamp + payload).digest('base64'));
    /* istanbul ignore next */
    cov_1ej0x10qzn().s[13]++;
    return signature === expectedSignature;
  } catch (error) {
    /* istanbul ignore next */
    cov_1ej0x10qzn().s[14]++;
    console.error('Error verifying SendGrid webhook signature:', error);
    /* istanbul ignore next */
    cov_1ej0x10qzn().s[15]++;
    return false;
  }
}
/**
 * Log email event to monitoring system
 */
async function logEmailEvent(event) {
  /* istanbul ignore next */
  cov_1ej0x10qzn().f[2]++;
  cov_1ej0x10qzn().s[16]++;
  try {
    /* istanbul ignore next */
    cov_1ej0x10qzn().s[17]++;
    // Log to console for development
    console.log(`📧 SendGrid Event: ${event.event} for ${event.email}`, {
      messageId: event.sg_message_id,
      timestamp: new Date(event.timestamp * 1000).toISOString(),
      event: event.event,
      email: event.email,
      reason: event.reason,
      status: event.status
    });
    // TODO: Store events in database for production monitoring
    // Example: Store in Cosmos DB or Firebase for analytics
    /*
    await storeEmailEvent({
      messageId: event.sg_message_id,
      eventId: event.sg_event_id,
      email: event.email,
      event: event.event,
      timestamp: new Date(event.timestamp * 1000),
      metadata: {
        reason: event.reason,
        status: event.status,
        response: event.response,
        userAgent: event.useragent,
        ip: event.ip,
        url: event.url,
        categories: event.category
      }
    });
    */
  } catch (error) {
    /* istanbul ignore next */
    cov_1ej0x10qzn().s[18]++;
    console.error('Error logging email event:', error);
  }
}
/**
 * Handle different types of SendGrid events
 */
async function handleEmailEvent(event) {
  /* istanbul ignore next */
  cov_1ej0x10qzn().f[3]++;
  cov_1ej0x10qzn().s[19]++;
  switch (event.event) {
    case 'delivered':
      /* istanbul ignore next */
      cov_1ej0x10qzn().b[4][0]++;
      cov_1ej0x10qzn().s[20]++;
      // Email successfully delivered
      console.log(`✅ Email delivered to ${event.email}`);
      /* istanbul ignore next */
      cov_1ej0x10qzn().s[21]++;
      break;
    case 'bounce':
      /* istanbul ignore next */
      cov_1ej0x10qzn().b[4][1]++;
      cov_1ej0x10qzn().s[22]++;
      // Email bounced - handle bounce processing
      console.warn(`⚠️ Email bounced for ${event.email}: ${event.reason}`);
      // TODO: Update user email status, implement bounce handling
      /* istanbul ignore next */
      cov_1ej0x10qzn().s[23]++;
      break;
    case 'dropped':
      /* istanbul ignore next */
      cov_1ej0x10qzn().b[4][2]++;
      cov_1ej0x10qzn().s[24]++;
      // Email was dropped before sending
      console.error(`❌ Email dropped for ${event.email}: ${event.reason}`);
      /* istanbul ignore next */
      cov_1ej0x10qzn().s[25]++;
      break;
    case 'spam_report':
      /* istanbul ignore next */
      cov_1ej0x10qzn().b[4][3]++;
      cov_1ej0x10qzn().s[26]++;
      // User marked email as spam
      console.warn(`🚫 Spam report from ${event.email}`);
      // TODO: Automatically unsubscribe user or mark as spam
      /* istanbul ignore next */
      cov_1ej0x10qzn().s[27]++;
      break;
    case 'unsubscribe':
      /* istanbul ignore next */
      cov_1ej0x10qzn().b[4][4]++;
      cov_1ej0x10qzn().s[28]++;
      // User unsubscribed
      console.log(`📋 Unsubscribe request from ${event.email}`);
      // TODO: Update user preferences in database
      /* istanbul ignore next */
      cov_1ej0x10qzn().s[29]++;
      break;
    case 'open':
      /* istanbul ignore next */
      cov_1ej0x10qzn().b[4][5]++;
      cov_1ej0x10qzn().s[30]++;
      // Email was opened
      console.log(`👁️ Email opened by ${event.email}`);
      /* istanbul ignore next */
      cov_1ej0x10qzn().s[31]++;
      break;
    case 'click':
      /* istanbul ignore next */
      cov_1ej0x10qzn().b[4][6]++;
      cov_1ej0x10qzn().s[32]++;
      // Link in email was clicked
      console.log(`🖱️ Email link clicked by ${event.email}: ${event.url}`);
      /* istanbul ignore next */
      cov_1ej0x10qzn().s[33]++;
      break;
    default:
      /* istanbul ignore next */
      cov_1ej0x10qzn().b[4][7]++;
      cov_1ej0x10qzn().s[34]++;
      console.log(`📨 Email event '${event.event}' for ${event.email}`);
  }
  // Log all events for monitoring
  /* istanbul ignore next */
  cov_1ej0x10qzn().s[35]++;
  await logEmailEvent(event);
}
/**
 * POST /api/webhooks/sendgrid
 * Handle SendGrid webhook events
 */
async function POST(request) {
  /* istanbul ignore next */
  cov_1ej0x10qzn().f[4]++;
  cov_1ej0x10qzn().s[36]++;
  try {
    const body =
    /* istanbul ignore next */
    (cov_1ej0x10qzn().s[37]++, await request.text());
    const signature =
    /* istanbul ignore next */
    (cov_1ej0x10qzn().s[38]++,
    /* istanbul ignore next */
    (cov_1ej0x10qzn().b[5][0]++, request.headers.get('X-Twilio-Email-Event-Webhook-Signature')) ||
    /* istanbul ignore next */
    (cov_1ej0x10qzn().b[5][1]++, ''));
    const timestamp =
    /* istanbul ignore next */
    (cov_1ej0x10qzn().s[39]++,
    /* istanbul ignore next */
    (cov_1ej0x10qzn().b[6][0]++, request.headers.get('X-Twilio-Email-Event-Webhook-Timestamp')) ||
    /* istanbul ignore next */
    (cov_1ej0x10qzn().b[6][1]++, ''));
    // Verify webhook signature in production
    /* istanbul ignore next */
    cov_1ej0x10qzn().s[40]++;
    if (process.env.NODE_ENV === 'production') {
      /* istanbul ignore next */
      cov_1ej0x10qzn().b[7][0]++;
      cov_1ej0x10qzn().s[41]++;
      if (!verifyWebhookSignature(body, signature, timestamp)) {
        /* istanbul ignore next */
        cov_1ej0x10qzn().b[8][0]++;
        cov_1ej0x10qzn().s[42]++;
        console.error('Invalid SendGrid webhook signature');
        /* istanbul ignore next */
        cov_1ej0x10qzn().s[43]++;
        return server_1.NextResponse.json({
          error: 'Invalid webhook signature'
        }, {
          status: 401
        });
      } else
      /* istanbul ignore next */
      {
        cov_1ej0x10qzn().b[8][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1ej0x10qzn().b[7][1]++;
    }
    // Parse SendGrid events
    let events;
    /* istanbul ignore next */
    cov_1ej0x10qzn().s[44]++;
    try {
      /* istanbul ignore next */
      cov_1ej0x10qzn().s[45]++;
      events = JSON.parse(body);
    } catch (error) {
      /* istanbul ignore next */
      cov_1ej0x10qzn().s[46]++;
      console.error('Failed to parse SendGrid webhook payload:', error);
      /* istanbul ignore next */
      cov_1ej0x10qzn().s[47]++;
      return server_1.NextResponse.json({
        error: 'Invalid JSON payload'
      }, {
        status: 400
      });
    }
    // Process each event
    /* istanbul ignore next */
    cov_1ej0x10qzn().s[48]++;
    for (const event of events) {
      /* istanbul ignore next */
      cov_1ej0x10qzn().s[49]++;
      await handleEmailEvent(event);
    }
    // Return success response
    /* istanbul ignore next */
    cov_1ej0x10qzn().s[50]++;
    return server_1.NextResponse.json({
      success: true,
      processed: events.length,
      timestamp: new Date().toISOString()
    }, {
      status: 200
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1ej0x10qzn().s[51]++;
    console.error('Error processing SendGrid webhook:', error);
    /* istanbul ignore next */
    cov_1ej0x10qzn().s[52]++;
    return server_1.NextResponse.json({
      error: 'Internal server error',
      message: error instanceof Error ?
      /* istanbul ignore next */
      (cov_1ej0x10qzn().b[9][0]++, error.message) :
      /* istanbul ignore next */
      (cov_1ej0x10qzn().b[9][1]++, 'Unknown error')
    }, {
      status: 500
    });
  }
}
/**
 * GET /api/webhooks/sendgrid
 * Health check endpoint for webhook
 */
async function GET() {
  /* istanbul ignore next */
  cov_1ej0x10qzn().f[5]++;
  cov_1ej0x10qzn().s[53]++;
  return server_1.NextResponse.json({
    service: 'SendGrid Webhook Endpoint',
    status: 'healthy',
    timestamp: new Date().toISOString(),
    environment: process.env.NODE_ENV,
    webhookSecretConfigured: !!process.env.SENDGRID_WEBHOOK_SECRET
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,