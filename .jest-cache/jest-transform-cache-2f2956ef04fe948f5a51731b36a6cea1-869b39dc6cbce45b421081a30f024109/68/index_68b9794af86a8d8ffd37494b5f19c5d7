32e6492119a753d1f2e2ddbf85c553f8
/* istanbul ignore next */
function cov_1pwd3cutoc() {
  var path = "/Users/dikshantvashistha/PrepBettr/azure/applicationWorker/index.js";
  var hash = "c20fae418d4103044ccb2e83cf2e85074667ba25";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dikshantvashistha/PrepBettr/azure/applicationWorker/index.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 16
        },
        end: {
          line: 1,
          column: 43
        }
      },
      "1": {
        start: {
          line: 2,
          column: 21
        },
        end: {
          line: 2,
          column: 61
        }
      },
      "2": {
        start: {
          line: 3,
          column: 25
        },
        end: {
          line: 3,
          column: 67
        }
      },
      "3": {
        start: {
          line: 4,
          column: 25
        },
        end: {
          line: 4,
          column: 67
        }
      },
      "4": {
        start: {
          line: 5,
          column: 15
        },
        end: {
          line: 5,
          column: 32
        }
      },
      "5": {
        start: {
          line: 6,
          column: 30
        },
        end: {
          line: 6,
          column: 60
        }
      },
      "6": {
        start: {
          line: 7,
          column: 23
        },
        end: {
          line: 7,
          column: 38
        }
      },
      "7": {
        start: {
          line: 8,
          column: 31
        },
        end: {
          line: 8,
          column: 82
        }
      },
      "8": {
        start: {
          line: 9,
          column: 31
        },
        end: {
          line: 9,
          column: 81
        }
      },
      "9": {
        start: {
          line: 12,
          column: 24
        },
        end: {
          line: 12,
          column: 28
        }
      },
      "10": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 20,
          column: 5
        }
      },
      "11": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 33
        }
      },
      "12": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 44,
          column: 5
        }
      },
      "13": {
        start: {
          line: 23,
          column: 24
        },
        end: {
          line: 23,
          column: 49
        }
      },
      "14": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 28,
          column: 9
        }
      },
      "15": {
        start: {
          line: 26,
          column: 12
        },
        end: {
          line: 26,
          column: 86
        }
      },
      "16": {
        start: {
          line: 27,
          column: 12
        },
        end: {
          line: 27,
          column: 24
        }
      },
      "17": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 37,
          column: 11
        }
      },
      "18": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 80
        }
      },
      "19": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 33
        }
      },
      "20": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 76
        }
      },
      "21": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 20
        }
      },
      "22": {
        start: {
          line: 48,
          column: 0
        },
        end: {
          line: 220,
          column: 3
        }
      },
      "23": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 52,
          column: 76
        }
      },
      "24": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 218,
          column: 9
        }
      },
      "25": {
        start: {
          line: 55,
          column: 36
        },
        end: {
          line: 55,
          column: 101
        }
      },
      "26": {
        start: {
          line: 56,
          column: 72
        },
        end: {
          line: 56,
          column: 87
        }
      },
      "27": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 62,
          column: 14
        }
      },
      "28": {
        start: {
          line: 65,
          column: 32
        },
        end: {
          line: 65,
          column: 60
        }
      },
      "29": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 68,
          column: 13
        }
      },
      "30": {
        start: {
          line: 67,
          column: 16
        },
        end: {
          line: 67,
          column: 77
        }
      },
      "31": {
        start: {
          line: 71,
          column: 40
        },
        end: {
          line: 71,
          column: 85
        }
      },
      "32": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 80,
          column: 13
        }
      },
      "33": {
        start: {
          line: 73,
          column: 16
        },
        end: {
          line: 73,
          column: 82
        }
      },
      "34": {
        start: {
          line: 74,
          column: 16
        },
        end: {
          line: 78,
          column: 18
        }
      },
      "35": {
        start: {
          line: 79,
          column: 16
        },
        end: {
          line: 79,
          column: 23
        }
      },
      "36": {
        start: {
          line: 83,
          column: 33
        },
        end: {
          line: 83,
          column: 58
        }
      },
      "37": {
        start: {
          line: 84,
          column: 12
        },
        end: {
          line: 87,
          column: 13
        }
      },
      "38": {
        start: {
          line: 85,
          column: 16
        },
        end: {
          line: 85,
          column: 86
        }
      },
      "39": {
        start: {
          line: 86,
          column: 16
        },
        end: {
          line: 86,
          column: 59
        }
      },
      "40": {
        start: {
          line: 90,
          column: 12
        },
        end: {
          line: 122,
          column: 13
        }
      },
      "41": {
        start: {
          line: 91,
          column: 42
        },
        end: {
          line: 91,
          column: 80
        }
      },
      "42": {
        start: {
          line: 92,
          column: 16
        },
        end: {
          line: 100,
          column: 17
        }
      },
      "43": {
        start: {
          line: 93,
          column: 20
        },
        end: {
          line: 93,
          column: 129
        }
      },
      "44": {
        start: {
          line: 94,
          column: 20
        },
        end: {
          line: 98,
          column: 22
        }
      },
      "45": {
        start: {
          line: 99,
          column: 20
        },
        end: {
          line: 99,
          column: 27
        }
      },
      "46": {
        start: {
          line: 103,
          column: 38
        },
        end: {
          line: 103,
          column: 76
        }
      },
      "47": {
        start: {
          line: 104,
          column: 12
        },
        end: {
          line: 121,
          column: 13
        }
      },
      "48": {
        start: {
          line: 105,
          column: 16
        },
        end: {
          line: 105,
          column: 82
        }
      },
      "49": {
        start: {
          line: 106,
          column: 16
        },
        end: {
          line: 110,
          column: 18
        }
      },
      "50": {
        start: {
          line: 113,
          column: 16
        },
        end: {
          line: 118,
          column: 19
        }
      },
      "51": {
        start: {
          line: 120,
          column: 16
        },
        end: {
          line: 120,
          column: 23
        }
      },
      "52": {
        start: {
          line: 125,
          column: 32
        },
        end: {
          line: 125,
          column: 82
        }
      },
      "53": {
        start: {
          line: 128,
          column: 35
        },
        end: {
          line: 128,
          column: 85
        }
      },
      "54": {
        start: {
          line: 131,
          column: 38
        },
        end: {
          line: 139,
          column: 14
        }
      },
      "55": {
        start: {
          line: 141,
          column: 12
        },
        end: {
          line: 206,
          column: 13
        }
      },
      "56": {
        start: {
          line: 143,
          column: 16
        },
        end: {
          line: 143,
          column: 97
        }
      },
      "57": {
        start: {
          line: 146,
          column: 16
        },
        end: {
          line: 155,
          column: 19
        }
      },
      "58": {
        start: {
          line: 158,
          column: 49
        },
        end: {
          line: 158,
          column: 87
        }
      },
      "59": {
        start: {
          line: 159,
          column: 16
        },
        end: {
          line: 164,
          column: 19
        }
      },
      "60": {
        start: {
          line: 167,
          column: 16
        },
        end: {
          line: 178,
          column: 19
        }
      },
      "61": {
        start: {
          line: 181,
          column: 42
        },
        end: {
          line: 181,
          column: 80
        }
      },
      "62": {
        start: {
          line: 182,
          column: 16
        },
        end: {
          line: 184,
          column: 17
        }
      },
      "63": {
        start: {
          line: 183,
          column: 20
        },
        end: {
          line: 183,
          column: 120
        }
      },
      "64": {
        start: {
          line: 186,
          column: 16
        },
        end: {
          line: 186,
          column: 83
        }
      },
      "65": {
        start: {
          line: 188,
          column: 16
        },
        end: {
          line: 192,
          column: 18
        }
      },
      "66": {
        start: {
          line: 195,
          column: 16
        },
        end: {
          line: 205,
          column: 19
        }
      },
      "67": {
        start: {
          line: 209,
          column: 12
        },
        end: {
          line: 209,
          column: 64
        }
      },
      "68": {
        start: {
          line: 210,
          column: 12
        },
        end: {
          line: 214,
          column: 14
        }
      },
      "69": {
        start: {
          line: 217,
          column: 12
        },
        end: {
          line: 217,
          column: 24
        }
      },
      "70": {
        start: {
          line: 226,
          column: 4
        },
        end: {
          line: 270,
          column: 5
        }
      },
      "71": {
        start: {
          line: 227,
          column: 23
        },
        end: {
          line: 227,
          column: 52
        }
      },
      "72": {
        start: {
          line: 229,
          column: 8
        },
        end: {
          line: 232,
          column: 9
        }
      },
      "73": {
        start: {
          line: 230,
          column: 12
        },
        end: {
          line: 230,
          column: 86
        }
      },
      "74": {
        start: {
          line: 231,
          column: 12
        },
        end: {
          line: 231,
          column: 71
        }
      },
      "75": {
        start: {
          line: 234,
          column: 23
        },
        end: {
          line: 254,
          column: 9
        }
      },
      "76": {
        start: {
          line: 244,
          column: 61
        },
        end: {
          line: 244,
          column: 96
        }
      },
      "77": {
        start: {
          line: 256,
          column: 27
        },
        end: {
          line: 261,
          column: 10
        }
      },
      "78": {
        start: {
          line: 263,
          column: 26
        },
        end: {
          line: 263,
          column: 79
        }
      },
      "79": {
        start: {
          line: 264,
          column: 22
        },
        end: {
          line: 264,
          column: 41
        }
      },
      "80": {
        start: {
          line: 266,
          column: 8
        },
        end: {
          line: 266,
          column: 69
        }
      },
      "81": {
        start: {
          line: 268,
          column: 8
        },
        end: {
          line: 268,
          column: 83
        }
      },
      "82": {
        start: {
          line: 269,
          column: 8
        },
        end: {
          line: 269,
          column: 67
        }
      },
      "83": {
        start: {
          line: 277,
          column: 20
        },
        end: {
          line: 277,
          column: 119
        }
      },
      "84": {
        start: {
          line: 278,
          column: 26
        },
        end: {
          line: 278,
          column: 106
        }
      },
      "85": {
        start: {
          line: 278,
          column: 62
        },
        end: {
          line: 278,
          column: 99
        }
      },
      "86": {
        start: {
          line: 279,
          column: 4
        },
        end: {
          line: 279,
          column: 90
        }
      },
      "87": {
        start: {
          line: 286,
          column: 4
        },
        end: {
          line: 332,
          column: 5
        }
      },
      "88": {
        start: {
          line: 287,
          column: 23
        },
        end: {
          line: 287,
          column: 52
        }
      },
      "89": {
        start: {
          line: 289,
          column: 8
        },
        end: {
          line: 292,
          column: 9
        }
      },
      "90": {
        start: {
          line: 290,
          column: 12
        },
        end: {
          line: 290,
          column: 91
        }
      },
      "91": {
        start: {
          line: 291,
          column: 12
        },
        end: {
          line: 291,
          column: 72
        }
      },
      "92": {
        start: {
          line: 294,
          column: 23
        },
        end: {
          line: 318,
          column: 9
        }
      },
      "93": {
        start: {
          line: 306,
          column: 61
        },
        end: {
          line: 306,
          column: 96
        }
      },
      "94": {
        start: {
          line: 320,
          column: 27
        },
        end: {
          line: 325,
          column: 10
        }
      },
      "95": {
        start: {
          line: 327,
          column: 8
        },
        end: {
          line: 327,
          column: 119
        }
      },
      "96": {
        start: {
          line: 330,
          column: 8
        },
        end: {
          line: 330,
          column: 81
        }
      },
      "97": {
        start: {
          line: 331,
          column: 8
        },
        end: {
          line: 331,
          column: 68
        }
      },
      "98": {
        start: {
          line: 339,
          column: 4
        },
        end: {
          line: 348,
          column: 21
        }
      },
      "99": {
        start: {
          line: 355,
          column: 4
        },
        end: {
          line: 396,
          column: 5
        }
      },
      "100": {
        start: {
          line: 356,
          column: 23
        },
        end: {
          line: 356,
          column: 52
        }
      },
      "101": {
        start: {
          line: 358,
          column: 8
        },
        end: {
          line: 361,
          column: 9
        }
      },
      "102": {
        start: {
          line: 359,
          column: 12
        },
        end: {
          line: 359,
          column: 89
        }
      },
      "103": {
        start: {
          line: 360,
          column: 12
        },
        end: {
          line: 360,
          column: 34
        }
      },
      "104": {
        start: {
          line: 363,
          column: 23
        },
        end: {
          line: 382,
          column: 9
        }
      },
      "105": {
        start: {
          line: 384,
          column: 27
        },
        end: {
          line: 389,
          column: 10
        }
      },
      "106": {
        start: {
          line: 391,
          column: 8
        },
        end: {
          line: 391,
          column: 81
        }
      },
      "107": {
        start: {
          line: 394,
          column: 8
        },
        end: {
          line: 394,
          column: 74
        }
      },
      "108": {
        start: {
          line: 395,
          column: 8
        },
        end: {
          line: 395,
          column: 30
        }
      },
      "109": {
        start: {
          line: 403,
          column: 4
        },
        end: {
          line: 543,
          column: 5
        }
      },
      "110": {
        start: {
          line: 404,
          column: 96
        },
        end: {
          line: 404,
          column: 111
        }
      },
      "111": {
        start: {
          line: 407,
          column: 8
        },
        end: {
          line: 495,
          column: 9
        }
      },
      "112": {
        start: {
          line: 410,
          column: 12
        },
        end: {
          line: 414,
          column: 14
        }
      },
      "113": {
        start: {
          line: 417,
          column: 35
        },
        end: {
          line: 429,
          column: 13
        }
      },
      "114": {
        start: {
          line: 431,
          column: 12
        },
        end: {
          line: 494,
          column: 13
        }
      },
      "115": {
        start: {
          line: 433,
          column: 42
        },
        end: {
          line: 456,
          column: 17
        }
      },
      "116": {
        start: {
          line: 458,
          column: 16
        },
        end: {
          line: 458,
          column: 61
        }
      },
      "117": {
        start: {
          line: 460,
          column: 16
        },
        end: {
          line: 469,
          column: 18
        }
      },
      "118": {
        start: {
          line: 472,
          column: 16
        },
        end: {
          line: 481,
          column: 18
        }
      },
      "119": {
        start: {
          line: 483,
          column: 16
        },
        end: {
          line: 493,
          column: 18
        }
      },
      "120": {
        start: {
          line: 498,
          column: 30
        },
        end: {
          line: 498,
          column: 38
        }
      },
      "121": {
        start: {
          line: 501,
          column: 34
        },
        end: {
          line: 519,
          column: 9
        }
      },
      "122": {
        start: {
          line: 521,
          column: 8
        },
        end: {
          line: 521,
          column: 53
        }
      },
      "123": {
        start: {
          line: 523,
          column: 8
        },
        end: {
          line: 528,
          column: 10
        }
      },
      "124": {
        start: {
          line: 531,
          column: 8
        },
        end: {
          line: 531,
          column: 66
        }
      },
      "125": {
        start: {
          line: 533,
          column: 8
        },
        end: {
          line: 537,
          column: 10
        }
      },
      "126": {
        start: {
          line: 539,
          column: 8
        },
        end: {
          line: 542,
          column: 10
        }
      },
      "127": {
        start: {
          line: 550,
          column: 4
        },
        end: {
          line: 570,
          column: 5
        }
      },
      "128": {
        start: {
          line: 551,
          column: 32
        },
        end: {
          line: 557,
          column: 9
        }
      },
      "129": {
        start: {
          line: 559,
          column: 8
        },
        end: {
          line: 565,
          column: 10
        }
      },
      "130": {
        start: {
          line: 567,
          column: 8
        },
        end: {
          line: 567,
          column: 76
        }
      },
      "131": {
        start: {
          line: 569,
          column: 8
        },
        end: {
          line: 569,
          column: 60
        }
      },
      "132": {
        start: {
          line: 577,
          column: 4
        },
        end: {
          line: 588,
          column: 6
        }
      },
      "133": {
        start: {
          line: 592,
          column: 4
        },
        end: {
          line: 600,
          column: 6
        }
      },
      "134": {
        start: {
          line: 604,
          column: 4
        },
        end: {
          line: 621,
          column: 5
        }
      },
      "135": {
        start: {
          line: 605,
          column: 8
        },
        end: {
          line: 605,
          column: 46
        }
      },
      "136": {
        start: {
          line: 608,
          column: 37
        },
        end: {
          line: 615,
          column: 9
        }
      },
      "137": {
        start: {
          line: 617,
          column: 8
        },
        end: {
          line: 617,
          column: 80
        }
      },
      "138": {
        start: {
          line: 619,
          column: 8
        },
        end: {
          line: 619,
          column: 69
        }
      },
      "139": {
        start: {
          line: 620,
          column: 8
        },
        end: {
          line: 620,
          column: 20
        }
      },
      "140": {
        start: {
          line: 625,
          column: 4
        },
        end: {
          line: 645,
          column: 5
        }
      },
      "141": {
        start: {
          line: 626,
          column: 8
        },
        end: {
          line: 626,
          column: 46
        }
      },
      "142": {
        start: {
          line: 629,
          column: 22
        },
        end: {
          line: 629,
          column: 32
        }
      },
      "143": {
        start: {
          line: 630,
          column: 8
        },
        end: {
          line: 630,
          column: 35
        }
      },
      "144": {
        start: {
          line: 632,
          column: 34
        },
        end: {
          line: 639,
          column: 9
        }
      },
      "145": {
        start: {
          line: 641,
          column: 8
        },
        end: {
          line: 641,
          column: 41
        }
      },
      "146": {
        start: {
          line: 643,
          column: 8
        },
        end: {
          line: 643,
          column: 71
        }
      },
      "147": {
        start: {
          line: 644,
          column: 8
        },
        end: {
          line: 644,
          column: 17
        }
      },
      "148": {
        start: {
          line: 649,
          column: 4
        },
        end: {
          line: 659,
          column: 5
        }
      },
      "149": {
        start: {
          line: 651,
          column: 8
        },
        end: {
          line: 651,
          column: 46
        }
      },
      "150": {
        start: {
          line: 652,
          column: 30
        },
        end: {
          line: 652,
          column: 102
        }
      },
      "151": {
        start: {
          line: 654,
          column: 8
        },
        end: {
          line: 654,
          column: 79
        }
      },
      "152": {
        start: {
          line: 655,
          column: 8
        },
        end: {
          line: 655,
          column: 29
        }
      },
      "153": {
        start: {
          line: 657,
          column: 8
        },
        end: {
          line: 657,
          column: 80
        }
      },
      "154": {
        start: {
          line: 658,
          column: 8
        },
        end: {
          line: 658,
          column: 20
        }
      },
      "155": {
        start: {
          line: 666,
          column: 4
        },
        end: {
          line: 677,
          column: 5
        }
      },
      "156": {
        start: {
          line: 668,
          column: 47
        },
        end: {
          line: 668,
          column: 105
        }
      },
      "157": {
        start: {
          line: 671,
          column: 8
        },
        end: {
          line: 671,
          column: 93
        }
      },
      "158": {
        start: {
          line: 673,
          column: 8
        },
        end: {
          line: 673,
          column: 117
        }
      },
      "159": {
        start: {
          line: 675,
          column: 8
        },
        end: {
          line: 675,
          column: 82
        }
      },
      "160": {
        start: {
          line: 681,
          column: 0
        },
        end: {
          line: 687,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "initializeAzureOpenAI",
        decl: {
          start: {
            line: 17,
            column: 15
          },
          end: {
            line: 17,
            column: 36
          }
        },
        loc: {
          start: {
            line: 17,
            column: 39
          },
          end: {
            line: 45,
            column: 1
          }
        },
        line: 17
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 51,
            column: 13
          },
          end: {
            line: 51,
            column: 14
          }
        },
        loc: {
          start: {
            line: 51,
            column: 43
          },
          end: {
            line: 219,
            column: 5
          }
        },
        line: 51
      },
      "2": {
        name: "calculateJobRelevancy",
        decl: {
          start: {
            line: 225,
            column: 15
          },
          end: {
            line: 225,
            column: 36
          }
        },
        loc: {
          start: {
            line: 225,
            column: 62
          },
          end: {
            line: 271,
            column: 1
          }
        },
        line: 225
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 244,
            column: 54
          },
          end: {
            line: 244,
            column: 55
          }
        },
        loc: {
          start: {
            line: 244,
            column: 61
          },
          end: {
            line: 244,
            column: 96
          }
        },
        line: 244
      },
      "4": {
        name: "calculateFallbackRelevancy",
        decl: {
          start: {
            line: 276,
            column: 9
          },
          end: {
            line: 276,
            column: 35
          }
        },
        loc: {
          start: {
            line: 276,
            column: 61
          },
          end: {
            line: 280,
            column: 1
          }
        },
        line: 276
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 278,
            column: 53
          },
          end: {
            line: 278,
            column: 54
          }
        },
        loc: {
          start: {
            line: 278,
            column: 62
          },
          end: {
            line: 278,
            column: 99
          }
        },
        line: 278
      },
      "6": {
        name: "generateCoverLetter",
        decl: {
          start: {
            line: 285,
            column: 15
          },
          end: {
            line: 285,
            column: 34
          }
        },
        loc: {
          start: {
            line: 285,
            column: 60
          },
          end: {
            line: 333,
            column: 1
          }
        },
        line: 285
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 306,
            column: 54
          },
          end: {
            line: 306,
            column: 55
          }
        },
        loc: {
          start: {
            line: 306,
            column: 61
          },
          end: {
            line: 306,
            column: 96
          }
        },
        line: 306
      },
      "8": {
        name: "generateFallbackCoverLetter",
        decl: {
          start: {
            line: 338,
            column: 9
          },
          end: {
            line: 338,
            column: 36
          }
        },
        loc: {
          start: {
            line: 338,
            column: 62
          },
          end: {
            line: 349,
            column: 1
          }
        },
        line: 338
      },
      "9": {
        name: "tailorResume",
        decl: {
          start: {
            line: 354,
            column: 15
          },
          end: {
            line: 354,
            column: 27
          }
        },
        loc: {
          start: {
            line: 354,
            column: 56
          },
          end: {
            line: 397,
            column: 1
          }
        },
        line: 354
      },
      "10": {
        name: "submitJobApplication",
        decl: {
          start: {
            line: 402,
            column: 15
          },
          end: {
            line: 402,
            column: 35
          }
        },
        loc: {
          start: {
            line: 402,
            column: 53
          },
          end: {
            line: 544,
            column: 1
          }
        },
        line: 402
      },
      "11": {
        name: "scheduleFollowUp",
        decl: {
          start: {
            line: 549,
            column: 15
          },
          end: {
            line: 549,
            column: 31
          }
        },
        loc: {
          start: {
            line: 549,
            column: 73
          },
          end: {
            line: 571,
            column: 1
          }
        },
        line: 549
      },
      "12": {
        name: "getUserProfile",
        decl: {
          start: {
            line: 575,
            column: 15
          },
          end: {
            line: 575,
            column: 29
          }
        },
        loc: {
          start: {
            line: 575,
            column: 38
          },
          end: {
            line: 589,
            column: 1
          }
        },
        line: 575
      },
      "13": {
        name: "getUserAutoApplySettings",
        decl: {
          start: {
            line: 591,
            column: 15
          },
          end: {
            line: 591,
            column: 39
          }
        },
        loc: {
          start: {
            line: 591,
            column: 48
          },
          end: {
            line: 601,
            column: 1
          }
        },
        line: 591
      },
      "14": {
        name: "checkExistingApplication",
        decl: {
          start: {
            line: 603,
            column: 15
          },
          end: {
            line: 603,
            column: 39
          }
        },
        loc: {
          start: {
            line: 603,
            column: 55
          },
          end: {
            line: 622,
            column: 1
          }
        },
        line: 603
      },
      "15": {
        name: "getTodayApplicationCount",
        decl: {
          start: {
            line: 624,
            column: 15
          },
          end: {
            line: 624,
            column: 39
          }
        },
        loc: {
          start: {
            line: 624,
            column: 48
          },
          end: {
            line: 646,
            column: 1
          }
        },
        line: 624
      },
      "16": {
        name: "storeJobApplication",
        decl: {
          start: {
            line: 648,
            column: 15
          },
          end: {
            line: 648,
            column: 34
          }
        },
        loc: {
          start: {
            line: 648,
            column: 52
          },
          end: {
            line: 660,
            column: 1
          }
        },
        line: 648
      },
      "17": {
        name: "sendApplicationSubmittedNotification",
        decl: {
          start: {
            line: 665,
            column: 15
          },
          end: {
            line: 665,
            column: 51
          }
        },
        loc: {
          start: {
            line: 665,
            column: 77
          },
          end: {
            line: 678,
            column: 1
          }
        },
        line: 665
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 20,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 20,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 18
      },
      "1": {
        loc: {
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 28,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 28,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 25
      },
      "2": {
        loc: {
          start: {
            line: 25,
            column: 12
          },
          end: {
            line: 25,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 25,
            column: 12
          },
          end: {
            line: 25,
            column: 35
          }
        }, {
          start: {
            line: 25,
            column: 39
          },
          end: {
            line: 25,
            column: 67
          }
        }],
        line: 25
      },
      "3": {
        loc: {
          start: {
            line: 55,
            column: 36
          },
          end: {
            line: 55,
            column: 101
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 55,
            column: 68
          },
          end: {
            line: 55,
            column: 89
          }
        }, {
          start: {
            line: 55,
            column: 92
          },
          end: {
            line: 55,
            column: 101
          }
        }],
        line: 55
      },
      "4": {
        loc: {
          start: {
            line: 66,
            column: 12
          },
          end: {
            line: 68,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 66,
            column: 12
          },
          end: {
            line: 68,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 66
      },
      "5": {
        loc: {
          start: {
            line: 72,
            column: 12
          },
          end: {
            line: 80,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 72,
            column: 12
          },
          end: {
            line: 80,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 72
      },
      "6": {
        loc: {
          start: {
            line: 84,
            column: 12
          },
          end: {
            line: 87,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 84,
            column: 12
          },
          end: {
            line: 87,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 84
      },
      "7": {
        loc: {
          start: {
            line: 90,
            column: 12
          },
          end: {
            line: 122,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 90,
            column: 12
          },
          end: {
            line: 122,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 90
      },
      "8": {
        loc: {
          start: {
            line: 92,
            column: 16
          },
          end: {
            line: 100,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 92,
            column: 16
          },
          end: {
            line: 100,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 92
      },
      "9": {
        loc: {
          start: {
            line: 104,
            column: 12
          },
          end: {
            line: 121,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 104,
            column: 12
          },
          end: {
            line: 121,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 104
      },
      "10": {
        loc: {
          start: {
            line: 141,
            column: 12
          },
          end: {
            line: 206,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 141,
            column: 12
          },
          end: {
            line: 206,
            column: 13
          }
        }, {
          start: {
            line: 187,
            column: 19
          },
          end: {
            line: 206,
            column: 13
          }
        }],
        line: 141
      },
      "11": {
        loc: {
          start: {
            line: 150,
            column: 28
          },
          end: {
            line: 150,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 150,
            column: 28
          },
          end: {
            line: 150,
            column: 54
          }
        }, {
          start: {
            line: 150,
            column: 58
          },
          end: {
            line: 150,
            column: 67
          }
        }],
        line: 150
      },
      "12": {
        loc: {
          start: {
            line: 153,
            column: 30
          },
          end: {
            line: 153,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 153,
            column: 30
          },
          end: {
            line: 153,
            column: 75
          }
        }, {
          start: {
            line: 153,
            column: 79
          },
          end: {
            line: 153,
            column: 80
          }
        }],
        line: 153
      },
      "13": {
        loc: {
          start: {
            line: 154,
            column: 28
          },
          end: {
            line: 154,
            column: 93
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 154,
            column: 28
          },
          end: {
            line: 154,
            column: 71
          }
        }, {
          start: {
            line: 154,
            column: 75
          },
          end: {
            line: 154,
            column: 93
          }
        }],
        line: 154
      },
      "14": {
        loc: {
          start: {
            line: 182,
            column: 16
          },
          end: {
            line: 184,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 182,
            column: 16
          },
          end: {
            line: 184,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 182
      },
      "15": {
        loc: {
          start: {
            line: 199,
            column: 28
          },
          end: {
            line: 199,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 199,
            column: 28
          },
          end: {
            line: 199,
            column: 54
          }
        }, {
          start: {
            line: 199,
            column: 58
          },
          end: {
            line: 199,
            column: 67
          }
        }],
        line: 199
      },
      "16": {
        loc: {
          start: {
            line: 202,
            column: 30
          },
          end: {
            line: 202,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 202,
            column: 30
          },
          end: {
            line: 202,
            column: 75
          }
        }, {
          start: {
            line: 202,
            column: 79
          },
          end: {
            line: 202,
            column: 80
          }
        }],
        line: 202
      },
      "17": {
        loc: {
          start: {
            line: 204,
            column: 28
          },
          end: {
            line: 204,
            column: 93
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 204,
            column: 28
          },
          end: {
            line: 204,
            column: 71
          }
        }, {
          start: {
            line: 204,
            column: 75
          },
          end: {
            line: 204,
            column: 93
          }
        }],
        line: 204
      },
      "18": {
        loc: {
          start: {
            line: 229,
            column: 8
          },
          end: {
            line: 232,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 229,
            column: 8
          },
          end: {
            line: 232,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 229
      },
      "19": {
        loc: {
          start: {
            line: 263,
            column: 26
          },
          end: {
            line: 263,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 263,
            column: 26
          },
          end: {
            line: 263,
            column: 73
          }
        }, {
          start: {
            line: 263,
            column: 77
          },
          end: {
            line: 263,
            column: 79
          }
        }],
        line: 263
      },
      "20": {
        loc: {
          start: {
            line: 266,
            column: 15
          },
          end: {
            line: 266,
            column: 68
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 266,
            column: 30
          },
          end: {
            line: 266,
            column: 32
          }
        }, {
          start: {
            line: 266,
            column: 35
          },
          end: {
            line: 266,
            column: 68
          }
        }],
        line: 266
      },
      "21": {
        loc: {
          start: {
            line: 278,
            column: 26
          },
          end: {
            line: 278,
            column: 106
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 278,
            column: 26
          },
          end: {
            line: 278,
            column: 100
          }
        }, {
          start: {
            line: 278,
            column: 104
          },
          end: {
            line: 278,
            column: 106
          }
        }],
        line: 278
      },
      "22": {
        loc: {
          start: {
            line: 279,
            column: 49
          },
          end: {
            line: 279,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 279,
            column: 49
          },
          end: {
            line: 279,
            column: 75
          }
        }, {
          start: {
            line: 279,
            column: 79
          },
          end: {
            line: 279,
            column: 80
          }
        }],
        line: 279
      },
      "23": {
        loc: {
          start: {
            line: 289,
            column: 8
          },
          end: {
            line: 292,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 289,
            column: 8
          },
          end: {
            line: 292,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 289
      },
      "24": {
        loc: {
          start: {
            line: 327,
            column: 15
          },
          end: {
            line: 327,
            column: 118
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 327,
            column: 15
          },
          end: {
            line: 327,
            column: 62
          }
        }, {
          start: {
            line: 327,
            column: 66
          },
          end: {
            line: 327,
            column: 118
          }
        }],
        line: 327
      },
      "25": {
        loc: {
          start: {
            line: 358,
            column: 8
          },
          end: {
            line: 361,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 358,
            column: 8
          },
          end: {
            line: 361,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 358
      },
      "26": {
        loc: {
          start: {
            line: 391,
            column: 15
          },
          end: {
            line: 391,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 391,
            column: 15
          },
          end: {
            line: 391,
            column: 62
          }
        }, {
          start: {
            line: 391,
            column: 66
          },
          end: {
            line: 391,
            column: 80
          }
        }],
        line: 391
      },
      "27": {
        loc: {
          start: {
            line: 407,
            column: 8
          },
          end: {
            line: 495,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 407,
            column: 8
          },
          end: {
            line: 495,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 407
      },
      "28": {
        loc: {
          start: {
            line: 407,
            column: 12
          },
          end: {
            line: 408,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 407,
            column: 12
          },
          end: {
            line: 407,
            column: 33
          }
        }, {
          start: {
            line: 408,
            column: 13
          },
          end: {
            line: 408,
            column: 56
          }
        }, {
          start: {
            line: 408,
            column: 60
          },
          end: {
            line: 408,
            column: 80
          }
        }],
        line: 407
      },
      "29": {
        loc: {
          start: {
            line: 431,
            column: 12
          },
          end: {
            line: 494,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 431,
            column: 12
          },
          end: {
            line: 494,
            column: 13
          }
        }, {
          start: {
            line: 470,
            column: 19
          },
          end: {
            line: 494,
            column: 13
          }
        }],
        line: 431
      },
      "30": {
        loc: {
          start: {
            line: 440,
            column: 28
          },
          end: {
            line: 440,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 440,
            column: 28
          },
          end: {
            line: 440,
            column: 54
          }
        }, {
          start: {
            line: 440,
            column: 58
          },
          end: {
            line: 440,
            column: 67
          }
        }],
        line: 440
      },
      "31": {
        loc: {
          start: {
            line: 508,
            column: 20
          },
          end: {
            line: 508,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 508,
            column: 20
          },
          end: {
            line: 508,
            column: 46
          }
        }, {
          start: {
            line: 508,
            column: 50
          },
          end: {
            line: 508,
            column: 59
          }
        }],
        line: 508
      },
      "32": {
        loc: {
          start: {
            line: 541,
            column: 21
          },
          end: {
            line: 541,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 541,
            column: 21
          },
          end: {
            line: 541,
            column: 34
          }
        }, {
          start: {
            line: 541,
            column: 38
          },
          end: {
            line: 541,
            column: 84
          }
        }],
        line: 541
      },
      "33": {
        loc: {
          start: {
            line: 617,
            column: 15
          },
          end: {
            line: 617,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 617,
            column: 49
          },
          end: {
            line: 617,
            column: 72
          }
        }, {
          start: {
            line: 617,
            column: 75
          },
          end: {
            line: 617,
            column: 79
          }
        }],
        line: 617
      },
      "34": {
        loc: {
          start: {
            line: 641,
            column: 15
          },
          end: {
            line: 641,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 641,
            column: 15
          },
          end: {
            line: 641,
            column: 35
          }
        }, {
          start: {
            line: 641,
            column: 39
          },
          end: {
            line: 641,
            column: 40
          }
        }],
        line: 641
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0]
    },
    inputSourceMap: null,
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c20fae418d4103044ccb2e83cf2e85074667ba25"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1pwd3cutoc = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1pwd3cutoc();
const {
  app
} =
/* istanbul ignore next */
(cov_1pwd3cutoc().s[0]++, require('@azure/functions'));
const queueService =
/* istanbul ignore next */
(cov_1pwd3cutoc().s[1]++, require('../lib/services/queue-service'));
const automationLogger =
/* istanbul ignore next */
(cov_1pwd3cutoc().s[2]++, require('../lib/services/automation-logs'));
const autoApplyMetrics =
/* istanbul ignore next */
(cov_1pwd3cutoc().s[3]++, require('../lib/utils/auto-apply-metrics'));
const OpenAI =
/* istanbul ignore next */
(cov_1pwd3cutoc().s[4]++, require('openai'));
const {
  fetchAzureSecrets
} =
/* istanbul ignore next */
(cov_1pwd3cutoc().s[5]++, require('../lib/azure-config'));
const {
  v4: uuidv4
} =
/* istanbul ignore next */
(cov_1pwd3cutoc().s[6]++, require('uuid'));
const headlessBrowserService =
/* istanbul ignore next */
(cov_1pwd3cutoc().s[7]++, require('../lib/services/headless-browser-service'));
const {
  azureCosmosService
} =
/* istanbul ignore next */
(cov_1pwd3cutoc().s[8]++, require('../../lib/services/azure-cosmos-service'));

// Azure OpenAI client - will be initialized from Key Vault secrets
let azureOpenAIClient =
/* istanbul ignore next */
(cov_1pwd3cutoc().s[9]++, null);

/**
 * Initialize Azure OpenAI client
 */
async function initializeAzureOpenAI() {
  /* istanbul ignore next */
  cov_1pwd3cutoc().f[0]++;
  cov_1pwd3cutoc().s[10]++;
  if (azureOpenAIClient) {
    /* istanbul ignore next */
    cov_1pwd3cutoc().b[0][0]++;
    cov_1pwd3cutoc().s[11]++;
    return azureOpenAIClient;
  } else
  /* istanbul ignore next */
  {
    cov_1pwd3cutoc().b[0][1]++;
  }
  cov_1pwd3cutoc().s[12]++;
  try {
    const secrets =
    /* istanbul ignore next */
    (cov_1pwd3cutoc().s[13]++, await fetchAzureSecrets());
    /* istanbul ignore next */
    cov_1pwd3cutoc().s[14]++;
    if (
    /* istanbul ignore next */
    (cov_1pwd3cutoc().b[2][0]++, !secrets.azureOpenAIKey) ||
    /* istanbul ignore next */
    (cov_1pwd3cutoc().b[2][1]++, !secrets.azureOpenAIEndpoint)) {
      /* istanbul ignore next */
      cov_1pwd3cutoc().b[1][0]++;
      cov_1pwd3cutoc().s[15]++;
      console.warn('⚠️ Azure OpenAI credentials not available, using fallback');
      /* istanbul ignore next */
      cov_1pwd3cutoc().s[16]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_1pwd3cutoc().b[1][1]++;
    }
    cov_1pwd3cutoc().s[17]++;
    azureOpenAIClient = new OpenAI({
      apiKey: secrets.azureOpenAIKey,
      baseURL: `${secrets.azureOpenAIEndpoint}/openai/deployments/${secrets.azureOpenAIDeployment}`,
      defaultQuery: {
        'api-version': '2024-08-01-preview'
      },
      defaultHeaders: {
        'api-key': secrets.azureOpenAIKey
      }
    });
    /* istanbul ignore next */
    cov_1pwd3cutoc().s[18]++;
    console.log('✅ Azure OpenAI client initialized for application worker');
    /* istanbul ignore next */
    cov_1pwd3cutoc().s[19]++;
    return azureOpenAIClient;
  } catch (error) {
    /* istanbul ignore next */
    cov_1pwd3cutoc().s[20]++;
    console.error('❌ Failed to initialize Azure OpenAI client:', error);
    /* istanbul ignore next */
    cov_1pwd3cutoc().s[21]++;
    return null;
  }
}

// Queue trigger function for processing job applications
/* istanbul ignore next */
cov_1pwd3cutoc().s[22]++;
app.storageQueue('applicationWorker', {
  queueName: 'process-applications',
  connection: 'AzureWebJobsStorage',
  handler: async (queueItem, context) => {
    /* istanbul ignore next */
    cov_1pwd3cutoc().f[1]++;
    cov_1pwd3cutoc().s[23]++;
    context.log('Application Worker processing queue item:', queueItem);
    /* istanbul ignore next */
    cov_1pwd3cutoc().s[24]++;
    try {
      const applicationData =
      /* istanbul ignore next */
      (cov_1pwd3cutoc().s[25]++, typeof queueItem === 'string' ?
      /* istanbul ignore next */
      (cov_1pwd3cutoc().b[3][0]++, JSON.parse(queueItem)) :
      /* istanbul ignore next */
      (cov_1pwd3cutoc().b[3][1]++, queueItem));
      const {
        userId,
        jobId,
        jobListing,
        requestId,
        autoApply
      } =
      /* istanbul ignore next */
      (cov_1pwd3cutoc().s[26]++, applicationData);
      /* istanbul ignore next */
      cov_1pwd3cutoc().s[27]++;
      await automationLogger.logInfo('application_processing_started', `Starting application processing for job ${jobId}`, {
        userId,
        jobId,
        requestId,
        autoApply
      });

      // Get user profile and preferences
      const userProfile =
      /* istanbul ignore next */
      (cov_1pwd3cutoc().s[28]++, await getUserProfile(userId));
      /* istanbul ignore next */
      cov_1pwd3cutoc().s[29]++;
      if (!userProfile) {
        /* istanbul ignore next */
        cov_1pwd3cutoc().b[4][0]++;
        cov_1pwd3cutoc().s[30]++;
        throw new Error(`User profile not found for user ${userId}`);
      } else
      /* istanbul ignore next */
      {
        cov_1pwd3cutoc().b[4][1]++;
      }

      // Check if user has already applied to this job
      const existingApplication =
      /* istanbul ignore next */
      (cov_1pwd3cutoc().s[31]++, await checkExistingApplication(userId, jobId));
      /* istanbul ignore next */
      cov_1pwd3cutoc().s[32]++;
      if (existingApplication) {
        /* istanbul ignore next */
        cov_1pwd3cutoc().b[5][0]++;
        cov_1pwd3cutoc().s[33]++;
        context.log(`User ${userId} has already applied to job ${jobId}`);
        /* istanbul ignore next */
        cov_1pwd3cutoc().s[34]++;
        await automationLogger.logWarning('application_duplicate_skipped', 'Skipping duplicate application', {
          userId,
          jobId
        });
        /* istanbul ignore next */
        cov_1pwd3cutoc().s[35]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1pwd3cutoc().b[5][1]++;
      }

      // Calculate job relevancy if not already done
      let relevancyScore =
      /* istanbul ignore next */
      (cov_1pwd3cutoc().s[36]++, jobListing.relevancyScore);
      /* istanbul ignore next */
      cov_1pwd3cutoc().s[37]++;
      if (!relevancyScore) {
        /* istanbul ignore next */
        cov_1pwd3cutoc().b[6][0]++;
        cov_1pwd3cutoc().s[38]++;
        relevancyScore = await calculateJobRelevancy(jobListing, userProfile);
        /* istanbul ignore next */
        cov_1pwd3cutoc().s[39]++;
        jobListing.relevancyScore = relevancyScore;
      } else
      /* istanbul ignore next */
      {
        cov_1pwd3cutoc().b[6][1]++;
      }

      // Check if job meets auto-apply threshold
      cov_1pwd3cutoc().s[40]++;
      if (autoApply) {
        /* istanbul ignore next */
        cov_1pwd3cutoc().b[7][0]++;
        const autoApplySettings =
        /* istanbul ignore next */
        (cov_1pwd3cutoc().s[41]++, await getUserAutoApplySettings(userId));
        /* istanbul ignore next */
        cov_1pwd3cutoc().s[42]++;
        if (relevancyScore < autoApplySettings.autoApplyThreshold) {
          /* istanbul ignore next */
          cov_1pwd3cutoc().b[8][0]++;
          cov_1pwd3cutoc().s[43]++;
          context.log(`Job relevancy score ${relevancyScore} below threshold ${autoApplySettings.autoApplyThreshold}`);
          /* istanbul ignore next */
          cov_1pwd3cutoc().s[44]++;
          await automationLogger.logInfo('application_skipped_threshold', `Job skipped due to low relevancy score: ${relevancyScore}`, {
            userId,
            jobId,
            relevancyScore,
            threshold: autoApplySettings.autoApplyThreshold
          });
          /* istanbul ignore next */
          cov_1pwd3cutoc().s[45]++;
          return;
        } else
        /* istanbul ignore next */
        {
          cov_1pwd3cutoc().b[8][1]++;
        }

        // Check daily application limit
        const todayApplications =
        /* istanbul ignore next */
        (cov_1pwd3cutoc().s[46]++, await getTodayApplicationCount(userId));
        /* istanbul ignore next */
        cov_1pwd3cutoc().s[47]++;
        if (todayApplications >= autoApplySettings.dailyApplicationLimit) {
          /* istanbul ignore next */
          cov_1pwd3cutoc().b[9][0]++;
          cov_1pwd3cutoc().s[48]++;
          context.log(`User ${userId} has reached daily application limit`);
          /* istanbul ignore next */
          cov_1pwd3cutoc().s[49]++;
          await automationLogger.logWarning('application_daily_limit_reached', 'Daily application limit reached', {
            userId,
            todayApplications,
            dailyLimit: autoApplySettings.dailyApplicationLimit
          });

          // Track volume metrics
          /* istanbul ignore next */
          cov_1pwd3cutoc().s[50]++;
          autoApplyMetrics.trackVolumeMetrics({
            userId,
            dailyApplications: todayApplications,
            dailyLimit: autoApplySettings.dailyApplicationLimit,
            userTier: 'free' // Would come from user profile
          });
          /* istanbul ignore next */
          cov_1pwd3cutoc().s[51]++;
          return;
        } else
        /* istanbul ignore next */
        {
          cov_1pwd3cutoc().b[9][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_1pwd3cutoc().b[7][1]++;
      }

      // Generate cover letter
      const coverLetter =
      /* istanbul ignore next */
      (cov_1pwd3cutoc().s[52]++, await generateCoverLetter(jobListing, userProfile));

      // Tailor resume for the job
      const tailoredResume =
      /* istanbul ignore next */
      (cov_1pwd3cutoc().s[53]++, await tailorResume(userProfile.resume, jobListing));

      // Submit application
      const applicationResult =
      /* istanbul ignore next */
      (cov_1pwd3cutoc().s[54]++, await submitJobApplication({
        userId,
        jobId,
        jobListing,
        userProfile,
        coverLetter,
        resume: tailoredResume,
        relevancyScore
      }));
      /* istanbul ignore next */
      cov_1pwd3cutoc().s[55]++;
      if (applicationResult.success) {
        /* istanbul ignore next */
        cov_1pwd3cutoc().b[10][0]++;
        cov_1pwd3cutoc().s[56]++;
        // Log successful application
        await automationLogger.logApplicationSubmitted(userId, jobId, applicationResult);

        // Track successful application metrics
        /* istanbul ignore next */
        cov_1pwd3cutoc().s[57]++;
        autoApplyMetrics.trackApplicationAttempt({
          applicationId: applicationResult.applicationId,
          userId,
          jobId,
          portal:
          /* istanbul ignore next */
          (cov_1pwd3cutoc().b[11][0]++, jobListing.jobPortal?.name) ||
          /* istanbul ignore next */
          (cov_1pwd3cutoc().b[11][1]++, 'Unknown'),
          success: true,
          duration: applicationResult.automationDetails?.duration,
          attempts:
          /* istanbul ignore next */
          (cov_1pwd3cutoc().b[12][0]++, applicationResult.automationDetails?.attempts) ||
          /* istanbul ignore next */
          (cov_1pwd3cutoc().b[12][1]++, 1),
          method:
          /* istanbul ignore next */
          (cov_1pwd3cutoc().b[13][0]++, applicationResult.automationDetails?.method) ||
          /* istanbul ignore next */
          (cov_1pwd3cutoc().b[13][1]++, 'headless_browser')
        });

        // Track daily volume
        const updatedTodayApplications =
        /* istanbul ignore next */
        (cov_1pwd3cutoc().s[58]++, await getTodayApplicationCount(userId));
        /* istanbul ignore next */
        cov_1pwd3cutoc().s[59]++;
        autoApplyMetrics.trackVolumeMetrics({
          userId,
          dailyApplications: updatedTodayApplications,
          dailyLimit: autoApplySettings.dailyApplicationLimit,
          userTier: 'free' // Would come from user profile
        });

        // Send application submitted notification
        /* istanbul ignore next */
        cov_1pwd3cutoc().s[60]++;
        await sendApplicationSubmittedNotification(userId, {
          id: applicationResult.applicationId,
          userId,
          jobId,
          jobTitle: jobListing.title,
          company: jobListing.company,
          appliedAt: new Date(),
          autoApplied: autoApply,
          coverLetterUsed: !!coverLetter,
          resumeTailored: !!tailoredResume,
          relevancyScore
        });

        // Schedule follow-up reminder if enabled
        const autoApplySettings =
        /* istanbul ignore next */
        (cov_1pwd3cutoc().s[61]++, await getUserAutoApplySettings(userId));
        /* istanbul ignore next */
        cov_1pwd3cutoc().s[62]++;
        if (autoApplySettings.followUpEnabled) {
          /* istanbul ignore next */
          cov_1pwd3cutoc().b[14][0]++;
          cov_1pwd3cutoc().s[63]++;
          await scheduleFollowUp(userId, applicationResult.applicationId, autoApplySettings.followUpSchedule);
        } else
        /* istanbul ignore next */
        {
          cov_1pwd3cutoc().b[14][1]++;
        }
        cov_1pwd3cutoc().s[64]++;
        context.log(`Successfully processed application for job ${jobId}`);
      } else {
        /* istanbul ignore next */
        cov_1pwd3cutoc().b[10][1]++;
        cov_1pwd3cutoc().s[65]++;
        await automationLogger.logError('application_submission_failed', new Error(applicationResult.message), {
          userId,
          jobId,
          applicationResult
        });

        // Track failed application metrics
        /* istanbul ignore next */
        cov_1pwd3cutoc().s[66]++;
        autoApplyMetrics.trackApplicationAttempt({
          applicationId: applicationResult.applicationId,
          userId,
          jobId,
          portal:
          /* istanbul ignore next */
          (cov_1pwd3cutoc().b[15][0]++, jobListing.jobPortal?.name) ||
          /* istanbul ignore next */
          (cov_1pwd3cutoc().b[15][1]++, 'Unknown'),
          success: false,
          duration: applicationResult.automationDetails?.duration,
          attempts:
          /* istanbul ignore next */
          (cov_1pwd3cutoc().b[16][0]++, applicationResult.automationDetails?.attempts) ||
          /* istanbul ignore next */
          (cov_1pwd3cutoc().b[16][1]++, 1),
          errorMessage: applicationResult.message,
          method:
          /* istanbul ignore next */
          (cov_1pwd3cutoc().b[17][0]++, applicationResult.automationDetails?.method) ||
          /* istanbul ignore next */
          (cov_1pwd3cutoc().b[17][1]++, 'headless_browser')
        });
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_1pwd3cutoc().s[67]++;
      context.log('Error processing application:', error);
      /* istanbul ignore next */
      cov_1pwd3cutoc().s[68]++;
      await automationLogger.logError('application_processing_error', error, {
        queueItem
      });

      // Re-throw to trigger Azure Functions retry logic
      /* istanbul ignore next */
      cov_1pwd3cutoc().s[69]++;
      throw error;
    }
  }
});

/**
 * Calculate job relevancy score using AI
 */
async function calculateJobRelevancy(jobListing, userProfile) {
  /* istanbul ignore next */
  cov_1pwd3cutoc().f[2]++;
  cov_1pwd3cutoc().s[70]++;
  try {
    const client =
    /* istanbul ignore next */
    (cov_1pwd3cutoc().s[71]++, await initializeAzureOpenAI());
    /* istanbul ignore next */
    cov_1pwd3cutoc().s[72]++;
    if (!client) {
      /* istanbul ignore next */
      cov_1pwd3cutoc().b[18][0]++;
      cov_1pwd3cutoc().s[73]++;
      console.warn('Azure OpenAI client not available, using fallback scoring');
      /* istanbul ignore next */
      cov_1pwd3cutoc().s[74]++;
      return calculateFallbackRelevancy(jobListing, userProfile);
    } else
    /* istanbul ignore next */
    {
      cov_1pwd3cutoc().b[18][1]++;
    }
    const prompt =
    /* istanbul ignore next */
    (cov_1pwd3cutoc().s[75]++, `
            Analyze the relevancy between this job posting and the candidate's profile:
            
            JOB TITLE: ${jobListing.title}
            COMPANY: ${jobListing.company}
            JOB DESCRIPTION: ${jobListing.description}
            REQUIREMENTS: ${jobListing.requirements?.join(', ')}
            
            CANDIDATE PROFILE:
            Skills: ${userProfile.skills?.join(', ')}
            Experience: ${userProfile.experience?.map(exp => {
      /* istanbul ignore next */
      cov_1pwd3cutoc().f[3]++;
      cov_1pwd3cutoc().s[76]++;
      return `${exp.position} at ${exp.company}`;
    }).join(', ')}
            Target Roles: ${userProfile.targetRoles?.join(', ')}
            
            Calculate a relevancy score from 0-100 based on:
            1. Skills match (40% weight)
            2. Role alignment (30% weight) 
            3. Experience level match (20% weight)
            4. Job requirements match (10% weight)
            
            Return only a number between 0-100.
        `);
    const completion =
    /* istanbul ignore next */
    (cov_1pwd3cutoc().s[77]++, await client.chat.completions.create({
      model: 'gpt-35-turbo',
      // Using the deployment name
      messages: [{
        role: 'user',
        content: prompt
      }],
      temperature: 0.1,
      max_tokens: 50
    }));
    const scoreText =
    /* istanbul ignore next */
    (cov_1pwd3cutoc().s[78]++,
    /* istanbul ignore next */
    (cov_1pwd3cutoc().b[19][0]++, completion.choices[0]?.message?.content?.trim()) ||
    /* istanbul ignore next */
    (cov_1pwd3cutoc().b[19][1]++, ''));
    const score =
    /* istanbul ignore next */
    (cov_1pwd3cutoc().s[79]++, parseInt(scoreText));
    /* istanbul ignore next */
    cov_1pwd3cutoc().s[80]++;
    return isNaN(score) ?
    /* istanbul ignore next */
    (cov_1pwd3cutoc().b[20][0]++, 50) :
    /* istanbul ignore next */
    (cov_1pwd3cutoc().b[20][1]++, Math.max(0, Math.min(100, score)));
  } catch (error) {
    /* istanbul ignore next */
    cov_1pwd3cutoc().s[81]++;
    console.error('Error calculating job relevancy with Azure OpenAI:', error);
    /* istanbul ignore next */
    cov_1pwd3cutoc().s[82]++;
    return calculateFallbackRelevancy(jobListing, userProfile);
  }
}

/**
 * Fallback relevancy calculation using keyword matching
 */
function calculateFallbackRelevancy(jobListing, userProfile) {
  /* istanbul ignore next */
  cov_1pwd3cutoc().f[4]++;
  const jobText =
  /* istanbul ignore next */
  (cov_1pwd3cutoc().s[83]++, `${jobListing.title} ${jobListing.description} ${jobListing.requirements?.join(' ')}`.toLowerCase());
  const matchedSkills =
  /* istanbul ignore next */
  (cov_1pwd3cutoc().s[84]++,
  /* istanbul ignore next */
  (cov_1pwd3cutoc().b[21][0]++, userProfile.skills?.filter(skill => {
    /* istanbul ignore next */
    cov_1pwd3cutoc().f[5]++;
    cov_1pwd3cutoc().s[85]++;
    return jobText.includes(skill.toLowerCase());
  })) ||
  /* istanbul ignore next */
  (cov_1pwd3cutoc().b[21][1]++, []));
  /* istanbul ignore next */
  cov_1pwd3cutoc().s[86]++;
  return Math.min(90, matchedSkills.length / (
  /* istanbul ignore next */
  (cov_1pwd3cutoc().b[22][0]++, userProfile.skills?.length) ||
  /* istanbul ignore next */
  (cov_1pwd3cutoc().b[22][1]++, 1)) * 100);
}

/**
 * Generate AI-powered cover letter
 */
async function generateCoverLetter(jobListing, userProfile) {
  /* istanbul ignore next */
  cov_1pwd3cutoc().f[6]++;
  cov_1pwd3cutoc().s[87]++;
  try {
    const client =
    /* istanbul ignore next */
    (cov_1pwd3cutoc().s[88]++, await initializeAzureOpenAI());
    /* istanbul ignore next */
    cov_1pwd3cutoc().s[89]++;
    if (!client) {
      /* istanbul ignore next */
      cov_1pwd3cutoc().b[23][0]++;
      cov_1pwd3cutoc().s[90]++;
      console.warn('Azure OpenAI client not available, using fallback cover letter');
      /* istanbul ignore next */
      cov_1pwd3cutoc().s[91]++;
      return generateFallbackCoverLetter(jobListing, userProfile);
    } else
    /* istanbul ignore next */
    {
      cov_1pwd3cutoc().b[23][1]++;
    }
    const prompt =
    /* istanbul ignore next */
    (cov_1pwd3cutoc().s[92]++, `
            Generate a professional cover letter for this job application:
            
            JOB DETAILS:
            Position: ${jobListing.title}
            Company: ${jobListing.company}
            Description: ${jobListing.description}
            Requirements: ${jobListing.requirements?.join(', ')}
            
            CANDIDATE PROFILE:
            Name: ${userProfile.name}
            Skills: ${userProfile.skills?.join(', ')}
            Experience: ${userProfile.experience?.map(exp => {
      /* istanbul ignore next */
      cov_1pwd3cutoc().f[7]++;
      cov_1pwd3cutoc().s[93]++;
      return `${exp.position} at ${exp.company}`;
    }).join(', ')}
            Summary: ${userProfile.summary}
            
            Requirements:
            1. Professional tone and format
            2. Highlight relevant skills and experience
            3. Show enthusiasm for the role and company
            4. Keep it concise (3-4 paragraphs)
            5. Include specific examples when possible
            6. Address any skill gaps positively
            
            Return only the cover letter text, no additional formatting or explanations.
        `);
    const completion =
    /* istanbul ignore next */
    (cov_1pwd3cutoc().s[94]++, await client.chat.completions.create({
      model: 'gpt-4o',
      // Using gpt-4o for better content generation
      messages: [{
        role: 'user',
        content: prompt
      }],
      temperature: 0.7,
      max_tokens: 1000
    }));
    /* istanbul ignore next */
    cov_1pwd3cutoc().s[95]++;
    return /* istanbul ignore next */(cov_1pwd3cutoc().b[24][0]++, completion.choices[0]?.message?.content?.trim()) ||
    /* istanbul ignore next */
    (cov_1pwd3cutoc().b[24][1]++, generateFallbackCoverLetter(jobListing, userProfile));
  } catch (error) {
    /* istanbul ignore next */
    cov_1pwd3cutoc().s[96]++;
    console.error('Error generating cover letter with Azure OpenAI:', error);
    /* istanbul ignore next */
    cov_1pwd3cutoc().s[97]++;
    return generateFallbackCoverLetter(jobListing, userProfile);
  }
}

/**
 * Generate fallback cover letter
 */
function generateFallbackCoverLetter(jobListing, userProfile) {
  /* istanbul ignore next */
  cov_1pwd3cutoc().f[8]++;
  cov_1pwd3cutoc().s[98]++;
  return `Dear Hiring Manager,

I am writing to express my strong interest in the ${jobListing.title} position at ${jobListing.company}. With my background in ${userProfile.skills?.slice(0, 3).join(', ')}, I am confident that I would be a valuable addition to your team.

In my previous roles, I have gained extensive experience in ${userProfile.skills?.slice(0, 2).join(' and ')}, which directly aligns with the requirements outlined in your job posting. I am particularly excited about the opportunity to contribute to ${jobListing.company}'s innovative work in this space.

I would welcome the opportunity to discuss how my skills and enthusiasm can contribute to your team's success. Thank you for considering my application.

Best regards,
${userProfile.name}`;
}

/**
 * Tailor resume for specific job
 */
async function tailorResume(originalResume, jobListing) {
  /* istanbul ignore next */
  cov_1pwd3cutoc().f[9]++;
  cov_1pwd3cutoc().s[99]++;
  try {
    const client =
    /* istanbul ignore next */
    (cov_1pwd3cutoc().s[100]++, await initializeAzureOpenAI());
    /* istanbul ignore next */
    cov_1pwd3cutoc().s[101]++;
    if (!client) {
      /* istanbul ignore next */
      cov_1pwd3cutoc().b[25][0]++;
      cov_1pwd3cutoc().s[102]++;
      console.warn('Azure OpenAI client not available, returning original resume');
      /* istanbul ignore next */
      cov_1pwd3cutoc().s[103]++;
      return originalResume;
    } else
    /* istanbul ignore next */
    {
      cov_1pwd3cutoc().b[25][1]++;
    }
    const prompt =
    /* istanbul ignore next */
    (cov_1pwd3cutoc().s[104]++, `
            Tailor this resume for the specific job posting to maximize ATS compatibility and relevance:
            
            JOB DESCRIPTION:
            ${jobListing.description}
            REQUIREMENTS: ${jobListing.requirements?.join(', ')}
            
            ORIGINAL RESUME:
            ${originalResume}
            
            Instructions:
            1. Optimize keywords for ATS systems
            2. Highlight most relevant experience first
            3. Include specific skills mentioned in job description
            4. Quantify achievements where possible
            5. Maintain professional formatting
            6. Keep same overall structure and length
            
            Return only the tailored resume content.
        `);
    const completion =
    /* istanbul ignore next */
    (cov_1pwd3cutoc().s[105]++, await client.chat.completions.create({
      model: 'gpt-4o',
      // Using gpt-4o for better content generation
      messages: [{
        role: 'user',
        content: prompt
      }],
      temperature: 0.7,
      max_tokens: 2000
    }));
    /* istanbul ignore next */
    cov_1pwd3cutoc().s[106]++;
    return /* istanbul ignore next */(cov_1pwd3cutoc().b[26][0]++, completion.choices[0]?.message?.content?.trim()) ||
    /* istanbul ignore next */
    (cov_1pwd3cutoc().b[26][1]++, originalResume);
  } catch (error) {
    /* istanbul ignore next */
    cov_1pwd3cutoc().s[107]++;
    console.error('Error tailoring resume with Azure OpenAI:', error);
    /* istanbul ignore next */
    cov_1pwd3cutoc().s[108]++;
    return originalResume; // Return original if tailoring fails
  }
}

/**
 * Submit job application to the appropriate portal
 */
async function submitJobApplication(applicationData) {
  /* istanbul ignore next */
  cov_1pwd3cutoc().f[10]++;
  cov_1pwd3cutoc().s[109]++;
  try {
    const {
      userId,
      jobId,
      jobListing,
      userProfile,
      coverLetter,
      resume,
      relevancyScore
    } =
    /* istanbul ignore next */
    (cov_1pwd3cutoc().s[110]++, applicationData);

    // Check if this is a TheirStack job with easy_apply enabled
    /* istanbul ignore next */
    cov_1pwd3cutoc().s[111]++;
    if (
    /* istanbul ignore next */
    (cov_1pwd3cutoc().b[28][0]++, jobListing.easy_apply) && (
    /* istanbul ignore next */
    (cov_1pwd3cutoc().b[28][1]++, jobListing.jobPortal?.name === 'TheirStack') ||
    /* istanbul ignore next */
    (cov_1pwd3cutoc().b[28][2]++, jobListing.final_url))) {
      /* istanbul ignore next */
      cov_1pwd3cutoc().b[27][0]++;
      cov_1pwd3cutoc().s[112]++;
      await automationLogger.logInfo('headless_application_initiated', `Initiating headless application for job ${jobId}`, {
        userId,
        jobId,
        portal: jobListing.jobPortal?.name
      });

      // Use headless browser automation for easy apply jobs
      const headlessResult =
      /* istanbul ignore next */
      (cov_1pwd3cutoc().s[113]++, await headlessBrowserService.applyToJob(jobListing, {
        ...userProfile,
        resume,
        // Use tailored resume
        coverLetter
      }, {
        timeout: 120000,
        // 2 minute timeout for complex forms
        screenshots: true,
        retryOnFailure: true
      }));
      /* istanbul ignore next */
      cov_1pwd3cutoc().s[114]++;
      if (headlessResult.success) {
        /* istanbul ignore next */
        cov_1pwd3cutoc().b[29][0]++;
        // Store successful application in Azure Cosmos DB
        const applicationRecord =
        /* istanbul ignore next */
        (cov_1pwd3cutoc().s[115]++, {
          id: headlessResult.applicationId,
          userId,
          jobId,
          status: 'applied',
          appliedAt: new Date(),
          applicationMethod: 'headless_automation',
          portal:
          /* istanbul ignore next */
          (cov_1pwd3cutoc().b[30][0]++, jobListing.jobPortal?.name) ||
          /* istanbul ignore next */
          (cov_1pwd3cutoc().b[30][1]++, 'Unknown'),
          jobTitle: jobListing.title,
          company: jobListing.company,
          jobUrl: jobListing.final_url,
          coverLetter,
          tailoredResume: resume,
          relevancyScore,
          automationDetails: {
            duration: headlessResult.duration,
            attempts: headlessResult.attempts,
            formData: headlessResult.formData,
            screenshotPath: headlessResult.screenshotPath
          },
          createdAt: new Date(),
          updatedAt: new Date(),
          _partitionKey: userId
        });
        /* istanbul ignore next */
        cov_1pwd3cutoc().s[116]++;
        await storeJobApplication(applicationRecord);
        /* istanbul ignore next */
        cov_1pwd3cutoc().s[117]++;
        return {
          success: true,
          message: 'Application submitted successfully via headless automation',
          applicationId: headlessResult.applicationId,
          automationDetails: {
            duration: headlessResult.duration,
            attempts: headlessResult.attempts,
            method: 'headless_browser'
          }
        };
      } else {
        /* istanbul ignore next */
        cov_1pwd3cutoc().b[29][1]++;
        cov_1pwd3cutoc().s[118]++;
        // Headless automation failed, log and potentially fallback
        await automationLogger.logError('headless_application_failed', new Error(headlessResult.message), {
          userId,
          jobId,
          duration: headlessResult.duration,
          attempts: headlessResult.attempts
        });
        /* istanbul ignore next */
        cov_1pwd3cutoc().s[119]++;
        return {
          success: false,
          message: `Headless application failed: ${headlessResult.message}`,
          applicationId: headlessResult.applicationId,
          automationDetails: {
            duration: headlessResult.duration,
            attempts: headlessResult.attempts,
            method: 'headless_browser',
            error: headlessResult.message
          }
        };
      }
    } else
    /* istanbul ignore next */
    {
      cov_1pwd3cutoc().b[27][1]++;
    }

    // Fallback to traditional application methods for non-easy-apply jobs
    const applicationId =
    /* istanbul ignore next */
    (cov_1pwd3cutoc().s[120]++, uuidv4());

    // For now, store as manual application pending user action
    const applicationRecord =
    /* istanbul ignore next */
    (cov_1pwd3cutoc().s[121]++, {
      id: applicationId,
      userId,
      jobId,
      status: 'pending_manual',
      appliedAt: new Date(),
      applicationMethod: 'manual_required',
      portal:
      /* istanbul ignore next */
      (cov_1pwd3cutoc().b[31][0]++, jobListing.jobPortal?.name) ||
      /* istanbul ignore next */
      (cov_1pwd3cutoc().b[31][1]++, 'Unknown'),
      jobTitle: jobListing.title,
      company: jobListing.company,
      jobUrl: jobListing.final_url,
      coverLetter,
      tailoredResume: resume,
      relevancyScore,
      reason: 'Job does not support easy apply - manual application required',
      createdAt: new Date(),
      updatedAt: new Date(),
      _partitionKey: userId
    });
    /* istanbul ignore next */
    cov_1pwd3cutoc().s[122]++;
    await storeJobApplication(applicationRecord);
    /* istanbul ignore next */
    cov_1pwd3cutoc().s[123]++;
    return {
      success: false,
      // Mark as false since manual action required
      message: 'Job requires manual application - stored for user review',
      applicationId,
      requiresManualAction: true
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_1pwd3cutoc().s[124]++;
    console.error('Error submitting job application:', error);
    /* istanbul ignore next */
    cov_1pwd3cutoc().s[125]++;
    await automationLogger.logError('application_submission_error', error, {
      applicationData
    });
    /* istanbul ignore next */
    cov_1pwd3cutoc().s[126]++;
    return {
      success: false,
      message:
      /* istanbul ignore next */
      (cov_1pwd3cutoc().b[32][0]++, error.message) ||
      /* istanbul ignore next */
      (cov_1pwd3cutoc().b[32][1]++, 'Internal error during application submission')
    };
  }
}

/**
 * Schedule follow-up reminder
 */
async function scheduleFollowUp(userId, applicationId, followUpSchedule) {
  /* istanbul ignore next */
  cov_1pwd3cutoc().f[11]++;
  cov_1pwd3cutoc().s[127]++;
  try {
    const followUpMessage =
    /* istanbul ignore next */
    (cov_1pwd3cutoc().s[128]++, {
      userId,
      applicationId,
      type: 'initial_follow_up',
      scheduledDate: new Date(Date.now() + followUpSchedule.initialDays * 24 * 60 * 60 * 1000).toISOString(),
      createdAt: new Date().toISOString()
    });
    /* istanbul ignore next */
    cov_1pwd3cutoc().s[129]++;
    await queueService.addMessage(queueService.queues.FOLLOW_UP_REMINDERS, followUpMessage, {
      visibilityTimeout: followUpSchedule.initialDays * 24 * 60 * 60 // Delay until follow-up date
    });
    /* istanbul ignore next */
    cov_1pwd3cutoc().s[130]++;
    console.log(`Follow-up scheduled for application ${applicationId}`);
  } catch (error) {
    /* istanbul ignore next */
    cov_1pwd3cutoc().s[131]++;
    console.error('Error scheduling follow-up:', error);
  }
}

// Utility functions (TODO: Implement with proper data storage)

async function getUserProfile(userId) {
  /* istanbul ignore next */
  cov_1pwd3cutoc().f[12]++;
  cov_1pwd3cutoc().s[132]++;
  // Mock user profile
  return {
    id: userId,
    name: 'John Doe',
    email: 'john.doe@example.com',
    skills: ['JavaScript', 'React', 'TypeScript', 'Node.js', 'Python'],
    experience: [{
      position: 'Frontend Developer',
      company: 'Tech Corp',
      technologies: ['React', 'TypeScript']
    }],
    targetRoles: ['Frontend Developer', 'Full Stack Developer'],
    summary: 'Experienced frontend developer with expertise in React applications',
    resume: 'Detailed resume content would be stored here...'
  };
}
async function getUserAutoApplySettings(userId) {
  /* istanbul ignore next */
  cov_1pwd3cutoc().f[13]++;
  cov_1pwd3cutoc().s[133]++;
  return {
    autoApplyThreshold: 75,
    dailyApplicationLimit: 5,
    followUpEnabled: true,
    followUpSchedule: {
      initialDays: 3,
      secondDays: 7
    }
  };
}
async function checkExistingApplication(userId, jobId) {
  /* istanbul ignore next */
  cov_1pwd3cutoc().f[14]++;
  cov_1pwd3cutoc().s[134]++;
  try {
    /* istanbul ignore next */
    cov_1pwd3cutoc().s[135]++;
    await azureCosmosService.initialize();

    // Query for existing application by userId and jobId
    const existingApplications =
    /* istanbul ignore next */
    (cov_1pwd3cutoc().s[136]++, await azureCosmosService.queryDocuments('applications', 'SELECT * FROM c WHERE c.userId = @userId AND c.jobId = @jobId', [{
      name: '@userId',
      value: userId
    }, {
      name: '@jobId',
      value: jobId
    }]));
    /* istanbul ignore next */
    cov_1pwd3cutoc().s[137]++;
    return existingApplications.length > 0 ?
    /* istanbul ignore next */
    (cov_1pwd3cutoc().b[33][0]++, existingApplications[0]) :
    /* istanbul ignore next */
    (cov_1pwd3cutoc().b[33][1]++, null);
  } catch (error) {
    /* istanbul ignore next */
    cov_1pwd3cutoc().s[138]++;
    console.error('Error checking existing application:', error);
    /* istanbul ignore next */
    cov_1pwd3cutoc().s[139]++;
    return null; // Return null on error to allow application to proceed
  }
}
async function getTodayApplicationCount(userId) {
  /* istanbul ignore next */
  cov_1pwd3cutoc().f[15]++;
  cov_1pwd3cutoc().s[140]++;
  try {
    /* istanbul ignore next */
    cov_1pwd3cutoc().s[141]++;
    await azureCosmosService.initialize();

    // Get start of today in UTC
    const today =
    /* istanbul ignore next */
    (cov_1pwd3cutoc().s[142]++, new Date());
    /* istanbul ignore next */
    cov_1pwd3cutoc().s[143]++;
    today.setHours(0, 0, 0, 0);
    const todayApplications =
    /* istanbul ignore next */
    (cov_1pwd3cutoc().s[144]++, await azureCosmosService.queryDocuments('applications', 'SELECT VALUE COUNT(1) FROM c WHERE c.userId = @userId AND c.appliedAt >= @today', [{
      name: '@userId',
      value: userId
    }, {
      name: '@today',
      value: today
    }]));
    /* istanbul ignore next */
    cov_1pwd3cutoc().s[145]++;
    return /* istanbul ignore next */(cov_1pwd3cutoc().b[34][0]++, todayApplications[0]) ||
    /* istanbul ignore next */
    (cov_1pwd3cutoc().b[34][1]++, 0);
  } catch (error) {
    /* istanbul ignore next */
    cov_1pwd3cutoc().s[146]++;
    console.error('Error getting today application count:', error);
    /* istanbul ignore next */
    cov_1pwd3cutoc().s[147]++;
    return 0; // Return 0 on error to allow applications
  }
}
async function storeJobApplication(applicationData) {
  /* istanbul ignore next */
  cov_1pwd3cutoc().f[16]++;
  cov_1pwd3cutoc().s[148]++;
  try {
    /* istanbul ignore next */
    cov_1pwd3cutoc().s[149]++;
    // Store application in Azure Cosmos DB
    await azureCosmosService.initialize();
    const applicationId =
    /* istanbul ignore next */
    (cov_1pwd3cutoc().s[150]++, await azureCosmosService.createDocument('applications', applicationData));
    /* istanbul ignore next */
    cov_1pwd3cutoc().s[151]++;
    console.log(`✅ Job application stored in Cosmos DB: ${applicationId}`);
    /* istanbul ignore next */
    cov_1pwd3cutoc().s[152]++;
    return applicationId;
  } catch (error) {
    /* istanbul ignore next */
    cov_1pwd3cutoc().s[153]++;
    console.error('❌ Failed to store job application in Cosmos DB:', error);
    /* istanbul ignore next */
    cov_1pwd3cutoc().s[154]++;
    throw error;
  }
}

/**
 * Send application submitted notification
 */
async function sendApplicationSubmittedNotification(userId, applicationData) {
  /* istanbul ignore next */
  cov_1pwd3cutoc().f[17]++;
  cov_1pwd3cutoc().s[155]++;
  try {
    // Import notification integration service
    const {
      jobNotificationIntegration
    } =
    /* istanbul ignore next */
    (cov_1pwd3cutoc().s[156]++, require('../../lib/services/job-notification-integration'));

    // Send application submitted notification
    /* istanbul ignore next */
    cov_1pwd3cutoc().s[157]++;
    await jobNotificationIntegration.notifyApplicationSubmitted(userId, applicationData);
    /* istanbul ignore next */
    cov_1pwd3cutoc().s[158]++;
    console.log(`Application submitted notification sent for user ${userId}, application ${applicationData.id}`);
  } catch (error) {
    /* istanbul ignore next */
    cov_1pwd3cutoc().s[159]++;
    console.error('Error sending application submitted notification:', error);
    // Don't throw error here to avoid breaking the application workflow
  }
}

// Export functions for use in tests and other modules
/* istanbul ignore next */
cov_1pwd3cutoc().s[160]++;
module.exports = {
  submitJobApplication,
  calculateJobRelevancy,
  generateCoverLetter,
  tailorResume,
  initializeAzureOpenAI
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,