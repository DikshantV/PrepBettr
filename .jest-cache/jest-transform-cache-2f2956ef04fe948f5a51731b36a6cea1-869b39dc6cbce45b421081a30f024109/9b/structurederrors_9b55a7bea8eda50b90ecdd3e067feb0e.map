{"version":3,"names":["cov_9dja3k20c","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","exports","createStructuredError","createErrorResponse","createSuccessResponse","getErrorCodeFromHTTPStatus","getHTTPStatusFromErrorCode","isRetryableError","getRetryDelay","toStructuredError","sendErrorResponse","sendSuccessResponse","errors_1","require","ErrorCategory","ErrorCode","RetryStrategy","ERROR_DEFINITIONS","AUTH_TOKEN_MISSING","code","category","AUTHENTICATION","message","retryable","AUTH_TOKEN_INVALID","AUTH_TOKEN_EXPIRED","AUTH_SESSION_EXPIRED","ACCESS_DENIED","AUTHORIZATION","INSUFFICIENT_PERMISSIONS","QUOTA_EXCEEDED","LICENSE_REQUIRED","INVALID_REQUEST","VALIDATION","MISSING_REQUIRED_FIELD","INVALID_FILE_TYPE","FILE_TOO_LARGE","INVALID_PARAMETER","RATE_LIMIT_EXCEEDED","RATE_LIMIT","retryStrategy","EXPONENTIAL","retryAfter","maxRetries","CONCURRENT_REQUEST_LIMIT","LINEAR","NOT_FOUND","RESOURCE_CONFLICT","CONFLICT","RESOURCE_LOCKED","SERVICE_UNAVAILABLE","SERVICE_TIMEOUT","SERVICE_OVERLOADED","EXPONENTIAL_JITTER","AZURE_OPENAI_ERROR","EXTERNAL_SERVICE","AZURE_SPEECH_ERROR","FIREBASE_ERROR","STORAGE_ERROR","CONFIGURATION_ERROR","CONFIGURATION","SERVICE_NOT_CONFIGURED","INTERNAL_SERVER_ERROR","INTERNAL","UNHANDLED_ERROR","details","customMessage","requestId","definition","Object","assign","timestamp","Date","toISOString","error","logServerError","Error","errorCode","success","data","status","attemptNumber","baseDelay","base","IMMEDIATE","Math","pow","exponentialDelay","jitter","random","NONE","defaultCode","originalMessage","stack","originalError","String","res","errorResponse","headers","set","Response","JSON","stringify","fromEntries","successResponse"],"sources":["/Users/dikshantvashistha/PrepBettr/lib/utils/structured-errors.ts"],"sourcesContent":["/**\n * Structured Error System for PrepBettr\n * \n * Provides consistent error handling with standardized error codes,\n * retry hints, and structured response formats across all API routes.\n * \n * Features:\n * - Standardized error codes with categories\n * - Retry hints and backoff strategies\n * - Structured API response format\n * - Client-friendly error messages\n * - Logging integration\n * \n * @version 1.0.0\n */\n\nimport { logServerError } from '@/lib/errors';\n\n// ===== ERROR CATEGORIES =====\n\nexport enum ErrorCategory {\n  AUTHENTICATION = 'AUTHENTICATION',\n  AUTHORIZATION = 'AUTHORIZATION', \n  VALIDATION = 'VALIDATION',\n  RATE_LIMIT = 'RATE_LIMIT',\n  SERVICE_UNAVAILABLE = 'SERVICE_UNAVAILABLE',\n  EXTERNAL_SERVICE = 'EXTERNAL_SERVICE',\n  CONFIGURATION = 'CONFIGURATION',\n  NOT_FOUND = 'NOT_FOUND',\n  CONFLICT = 'CONFLICT',\n  INTERNAL = 'INTERNAL'\n}\n\n// ===== ERROR CODES =====\n\nexport enum ErrorCode {\n  // Authentication errors (4xx)\n  AUTH_TOKEN_MISSING = 'AUTH_TOKEN_MISSING',\n  AUTH_TOKEN_INVALID = 'AUTH_TOKEN_INVALID',\n  AUTH_TOKEN_EXPIRED = 'AUTH_TOKEN_EXPIRED',\n  AUTH_SESSION_EXPIRED = 'AUTH_SESSION_EXPIRED',\n  \n  // Authorization errors (4xx)\n  ACCESS_DENIED = 'ACCESS_DENIED',\n  INSUFFICIENT_PERMISSIONS = 'INSUFFICIENT_PERMISSIONS',\n  QUOTA_EXCEEDED = 'QUOTA_EXCEEDED',\n  LICENSE_REQUIRED = 'LICENSE_REQUIRED',\n  \n  // Validation errors (4xx)\n  INVALID_REQUEST = 'INVALID_REQUEST',\n  MISSING_REQUIRED_FIELD = 'MISSING_REQUIRED_FIELD',\n  INVALID_FILE_TYPE = 'INVALID_FILE_TYPE',\n  FILE_TOO_LARGE = 'FILE_TOO_LARGE',\n  INVALID_PARAMETER = 'INVALID_PARAMETER',\n  \n  // Rate limiting (4xx)\n  RATE_LIMIT_EXCEEDED = 'RATE_LIMIT_EXCEEDED',\n  CONCURRENT_REQUEST_LIMIT = 'CONCURRENT_REQUEST_LIMIT',\n  \n  // Resource errors (4xx)\n  NOT_FOUND = 'NOT_FOUND',\n  RESOURCE_CONFLICT = 'RESOURCE_CONFLICT',\n  RESOURCE_LOCKED = 'RESOURCE_LOCKED',\n  \n  // Service errors (5xx)\n  SERVICE_UNAVAILABLE = 'SERVICE_UNAVAILABLE',\n  SERVICE_TIMEOUT = 'SERVICE_TIMEOUT',\n  SERVICE_OVERLOADED = 'SERVICE_OVERLOADED',\n  \n  // External service errors (5xx)\n  AZURE_OPENAI_ERROR = 'AZURE_OPENAI_ERROR',\n  AZURE_SPEECH_ERROR = 'AZURE_SPEECH_ERROR',\n  FIREBASE_ERROR = 'FIREBASE_ERROR',\n  STORAGE_ERROR = 'STORAGE_ERROR',\n  \n  // Configuration errors (5xx)\n  CONFIGURATION_ERROR = 'CONFIGURATION_ERROR',\n  SERVICE_NOT_CONFIGURED = 'SERVICE_NOT_CONFIGURED',\n  \n  // Internal errors (5xx)\n  INTERNAL_SERVER_ERROR = 'INTERNAL_SERVER_ERROR',\n  UNHANDLED_ERROR = 'UNHANDLED_ERROR'\n}\n\n// ===== RETRY STRATEGIES =====\n\nexport enum RetryStrategy {\n  NONE = 'NONE',                    // Don't retry\n  IMMEDIATE = 'IMMEDIATE',          // Retry immediately\n  LINEAR = 'LINEAR',                // Linear backoff (1s, 2s, 3s...)\n  EXPONENTIAL = 'EXPONENTIAL',      // Exponential backoff (1s, 2s, 4s, 8s...)\n  EXPONENTIAL_JITTER = 'EXPONENTIAL_JITTER'  // Exponential with random jitter\n}\n\n// ===== TYPE DEFINITIONS =====\n\nexport interface StructuredError {\n  code: ErrorCode;\n  category: ErrorCategory;\n  message: string;\n  details?: Record<string, any>;\n  timestamp: string;\n  requestId?: string;\n  retryable: boolean;\n  retryStrategy?: RetryStrategy;\n  retryAfter?: number; // Seconds\n  maxRetries?: number;\n}\n\nexport interface APIErrorResponse {\n  error: StructuredError;\n  success: false;\n  data: null;\n}\n\nexport interface APISuccessResponse<T = any> {\n  error: null;\n  success: true;\n  data: T;\n}\n\nexport type APIResponse<T = any> = APISuccessResponse<T> | APIErrorResponse;\n\n// ===== ERROR DEFINITIONS =====\n\nconst ERROR_DEFINITIONS: Record<ErrorCode, Omit<StructuredError, 'timestamp' | 'requestId'>> = {\n  // Authentication errors\n  [ErrorCode.AUTH_TOKEN_MISSING]: {\n    code: ErrorCode.AUTH_TOKEN_MISSING,\n    category: ErrorCategory.AUTHENTICATION,\n    message: 'Authentication token is required but was not provided.',\n    retryable: false\n  },\n  [ErrorCode.AUTH_TOKEN_INVALID]: {\n    code: ErrorCode.AUTH_TOKEN_INVALID,\n    category: ErrorCategory.AUTHENTICATION,\n    message: 'The provided authentication token is invalid.',\n    retryable: false\n  },\n  [ErrorCode.AUTH_TOKEN_EXPIRED]: {\n    code: ErrorCode.AUTH_TOKEN_EXPIRED,\n    category: ErrorCategory.AUTHENTICATION,\n    message: 'Authentication token has expired. Please sign in again.',\n    retryable: false\n  },\n  [ErrorCode.AUTH_SESSION_EXPIRED]: {\n    code: ErrorCode.AUTH_SESSION_EXPIRED,\n    category: ErrorCategory.AUTHENTICATION,\n    message: 'Your session has expired. Please sign in again.',\n    retryable: false\n  },\n  \n  // Authorization errors\n  [ErrorCode.ACCESS_DENIED]: {\n    code: ErrorCode.ACCESS_DENIED,\n    category: ErrorCategory.AUTHORIZATION,\n    message: 'Access denied. You do not have permission to perform this action.',\n    retryable: false\n  },\n  [ErrorCode.INSUFFICIENT_PERMISSIONS]: {\n    code: ErrorCode.INSUFFICIENT_PERMISSIONS,\n    category: ErrorCategory.AUTHORIZATION,\n    message: 'Insufficient permissions to access this resource.',\n    retryable: false\n  },\n  [ErrorCode.QUOTA_EXCEEDED]: {\n    code: ErrorCode.QUOTA_EXCEEDED,\n    category: ErrorCategory.AUTHORIZATION,\n    message: 'Usage quota exceeded. Please upgrade your plan or wait for quota reset.',\n    retryable: false\n  },\n  [ErrorCode.LICENSE_REQUIRED]: {\n    code: ErrorCode.LICENSE_REQUIRED,\n    category: ErrorCategory.AUTHORIZATION,\n    message: 'A valid license is required to access this feature.',\n    retryable: false\n  },\n  \n  // Validation errors\n  [ErrorCode.INVALID_REQUEST]: {\n    code: ErrorCode.INVALID_REQUEST,\n    category: ErrorCategory.VALIDATION,\n    message: 'The request is invalid or malformed.',\n    retryable: false\n  },\n  [ErrorCode.MISSING_REQUIRED_FIELD]: {\n    code: ErrorCode.MISSING_REQUIRED_FIELD,\n    category: ErrorCategory.VALIDATION,\n    message: 'Required field is missing from the request.',\n    retryable: false\n  },\n  [ErrorCode.INVALID_FILE_TYPE]: {\n    code: ErrorCode.INVALID_FILE_TYPE,\n    category: ErrorCategory.VALIDATION,\n    message: 'Invalid file type. Please upload a supported file format.',\n    retryable: false\n  },\n  [ErrorCode.FILE_TOO_LARGE]: {\n    code: ErrorCode.FILE_TOO_LARGE,\n    category: ErrorCategory.VALIDATION,\n    message: 'File size exceeds the maximum allowed limit.',\n    retryable: false\n  },\n  [ErrorCode.INVALID_PARAMETER]: {\n    code: ErrorCode.INVALID_PARAMETER,\n    category: ErrorCategory.VALIDATION,\n    message: 'One or more parameters are invalid.',\n    retryable: false\n  },\n  \n  // Rate limiting\n  [ErrorCode.RATE_LIMIT_EXCEEDED]: {\n    code: ErrorCode.RATE_LIMIT_EXCEEDED,\n    category: ErrorCategory.RATE_LIMIT,\n    message: 'Rate limit exceeded. Please try again later.',\n    retryable: true,\n    retryStrategy: RetryStrategy.EXPONENTIAL,\n    retryAfter: 60,\n    maxRetries: 3\n  },\n  [ErrorCode.CONCURRENT_REQUEST_LIMIT]: {\n    code: ErrorCode.CONCURRENT_REQUEST_LIMIT,\n    category: ErrorCategory.RATE_LIMIT,\n    message: 'Too many concurrent requests. Please wait and try again.',\n    retryable: true,\n    retryStrategy: RetryStrategy.LINEAR,\n    retryAfter: 5,\n    maxRetries: 5\n  },\n  \n  // Resource errors\n  [ErrorCode.NOT_FOUND]: {\n    code: ErrorCode.NOT_FOUND,\n    category: ErrorCategory.NOT_FOUND,\n    message: 'The requested resource was not found.',\n    retryable: false\n  },\n  [ErrorCode.RESOURCE_CONFLICT]: {\n    code: ErrorCode.RESOURCE_CONFLICT,\n    category: ErrorCategory.CONFLICT,\n    message: 'Resource conflict. The resource is in an inconsistent state.',\n    retryable: true,\n    retryStrategy: RetryStrategy.LINEAR,\n    retryAfter: 2,\n    maxRetries: 3\n  },\n  [ErrorCode.RESOURCE_LOCKED]: {\n    code: ErrorCode.RESOURCE_LOCKED,\n    category: ErrorCategory.CONFLICT,\n    message: 'Resource is currently locked by another process.',\n    retryable: true,\n    retryStrategy: RetryStrategy.EXPONENTIAL,\n    retryAfter: 5,\n    maxRetries: 3\n  },\n  \n  // Service errors\n  [ErrorCode.SERVICE_UNAVAILABLE]: {\n    code: ErrorCode.SERVICE_UNAVAILABLE,\n    category: ErrorCategory.SERVICE_UNAVAILABLE,\n    message: 'Service is temporarily unavailable. Please try again later.',\n    retryable: true,\n    retryStrategy: RetryStrategy.EXPONENTIAL,\n    retryAfter: 30,\n    maxRetries: 3\n  },\n  [ErrorCode.SERVICE_TIMEOUT]: {\n    code: ErrorCode.SERVICE_TIMEOUT,\n    category: ErrorCategory.SERVICE_UNAVAILABLE,\n    message: 'Service request timed out. Please try again.',\n    retryable: true,\n    retryStrategy: RetryStrategy.LINEAR,\n    retryAfter: 10,\n    maxRetries: 2\n  },\n  [ErrorCode.SERVICE_OVERLOADED]: {\n    code: ErrorCode.SERVICE_OVERLOADED,\n    category: ErrorCategory.SERVICE_UNAVAILABLE,\n    message: 'Service is currently overloaded. Please try again later.',\n    retryable: true,\n    retryStrategy: RetryStrategy.EXPONENTIAL_JITTER,\n    retryAfter: 60,\n    maxRetries: 3\n  },\n  \n  // External service errors\n  [ErrorCode.AZURE_OPENAI_ERROR]: {\n    code: ErrorCode.AZURE_OPENAI_ERROR,\n    category: ErrorCategory.EXTERNAL_SERVICE,\n    message: 'Azure OpenAI service error. Please try again.',\n    retryable: true,\n    retryStrategy: RetryStrategy.EXPONENTIAL,\n    retryAfter: 5,\n    maxRetries: 3\n  },\n  [ErrorCode.AZURE_SPEECH_ERROR]: {\n    code: ErrorCode.AZURE_SPEECH_ERROR,\n    category: ErrorCategory.EXTERNAL_SERVICE,\n    message: 'Azure Speech service error. Please try again.',\n    retryable: true,\n    retryStrategy: RetryStrategy.EXPONENTIAL,\n    retryAfter: 5,\n    maxRetries: 3\n  },\n  [ErrorCode.FIREBASE_ERROR]: {\n    code: ErrorCode.FIREBASE_ERROR,\n    category: ErrorCategory.EXTERNAL_SERVICE,\n    message: 'Firebase service error. Please try again.',\n    retryable: true,\n    retryStrategy: RetryStrategy.LINEAR,\n    retryAfter: 10,\n    maxRetries: 2\n  },\n  [ErrorCode.STORAGE_ERROR]: {\n    code: ErrorCode.STORAGE_ERROR,\n    category: ErrorCategory.EXTERNAL_SERVICE,\n    message: 'File storage error. Please try again.',\n    retryable: true,\n    retryStrategy: RetryStrategy.EXPONENTIAL,\n    retryAfter: 15,\n    maxRetries: 3\n  },\n  \n  // Configuration errors\n  [ErrorCode.CONFIGURATION_ERROR]: {\n    code: ErrorCode.CONFIGURATION_ERROR,\n    category: ErrorCategory.CONFIGURATION,\n    message: 'Service configuration error. Please contact support.',\n    retryable: false\n  },\n  [ErrorCode.SERVICE_NOT_CONFIGURED]: {\n    code: ErrorCode.SERVICE_NOT_CONFIGURED,\n    category: ErrorCategory.CONFIGURATION,\n    message: 'Service is not properly configured. Please contact support.',\n    retryable: false\n  },\n  \n  // Internal errors\n  [ErrorCode.INTERNAL_SERVER_ERROR]: {\n    code: ErrorCode.INTERNAL_SERVER_ERROR,\n    category: ErrorCategory.INTERNAL,\n    message: 'An internal server error occurred. Please try again later.',\n    retryable: true,\n    retryStrategy: RetryStrategy.EXPONENTIAL,\n    retryAfter: 30,\n    maxRetries: 2\n  },\n  [ErrorCode.UNHANDLED_ERROR]: {\n    code: ErrorCode.UNHANDLED_ERROR,\n    category: ErrorCategory.INTERNAL,\n    message: 'An unexpected error occurred. Please try again later.',\n    retryable: true,\n    retryStrategy: RetryStrategy.LINEAR,\n    retryAfter: 10,\n    maxRetries: 1\n  }\n};\n\n// ===== ERROR FACTORY FUNCTIONS =====\n\n/**\n * Create a structured error with optional details\n */\nexport function createStructuredError(\n  code: ErrorCode,\n  details?: Record<string, any>,\n  customMessage?: string,\n  requestId?: string\n): StructuredError {\n  const definition = ERROR_DEFINITIONS[code];\n  \n  return {\n    ...definition,\n    message: customMessage || definition.message,\n    details,\n    timestamp: new Date().toISOString(),\n    requestId\n  };\n}\n\n/**\n * Create an API error response\n */\nexport function createErrorResponse(\n  code: ErrorCode,\n  details?: Record<string, any>,\n  customMessage?: string,\n  requestId?: string\n): APIErrorResponse {\n  const error = createStructuredError(code, details, customMessage, requestId);\n  \n  // Log server errors for monitoring\n  if (error.category === ErrorCategory.INTERNAL || \n      error.category === ErrorCategory.EXTERNAL_SERVICE ||\n      error.category === ErrorCategory.CONFIGURATION) {\n    logServerError(new Error(error.message), {\n      errorCode: error.code,\n      category: error.category,\n      details: error.details,\n      requestId: error.requestId\n    });\n  }\n  \n  return {\n    error,\n    success: false,\n    data: null\n  };\n}\n\n/**\n * Create a success API response\n */\nexport function createSuccessResponse<T>(data: T): APISuccessResponse<T> {\n  return {\n    error: null,\n    success: true,\n    data\n  };\n}\n\n/**\n * Convert HTTP status to appropriate error code\n */\nexport function getErrorCodeFromHTTPStatus(status: number): ErrorCode {\n  switch (status) {\n    case 400: return ErrorCode.INVALID_REQUEST;\n    case 401: return ErrorCode.AUTH_TOKEN_INVALID;\n    case 403: return ErrorCode.ACCESS_DENIED;\n    case 404: return ErrorCode.NOT_FOUND;\n    case 409: return ErrorCode.RESOURCE_CONFLICT;\n    case 413: return ErrorCode.FILE_TOO_LARGE;\n    case 429: return ErrorCode.RATE_LIMIT_EXCEEDED;\n    case 500: return ErrorCode.INTERNAL_SERVER_ERROR;\n    case 502: return ErrorCode.SERVICE_UNAVAILABLE;\n    case 503: return ErrorCode.SERVICE_OVERLOADED;\n    case 504: return ErrorCode.SERVICE_TIMEOUT;\n    default: return ErrorCode.UNHANDLED_ERROR;\n  }\n}\n\n/**\n * Get HTTP status from error code\n */\nexport function getHTTPStatusFromErrorCode(code: ErrorCode): number {\n  const error = ERROR_DEFINITIONS[code];\n  \n  switch (error.category) {\n    case ErrorCategory.AUTHENTICATION:\n      return 401;\n    case ErrorCategory.AUTHORIZATION:\n      return 403;\n    case ErrorCategory.VALIDATION:\n      return 400;\n    case ErrorCategory.RATE_LIMIT:\n      return 429;\n    case ErrorCategory.NOT_FOUND:\n      return 404;\n    case ErrorCategory.CONFLICT:\n      return 409;\n    case ErrorCategory.SERVICE_UNAVAILABLE:\n    case ErrorCategory.EXTERNAL_SERVICE:\n      return 503;\n    case ErrorCategory.CONFIGURATION:\n    case ErrorCategory.INTERNAL:\n    default:\n      return 500;\n  }\n}\n\n/**\n * Check if an error is retryable\n */\nexport function isRetryableError(error: StructuredError): boolean {\n  return error.retryable === true;\n}\n\n/**\n * Get retry delay in milliseconds based on attempt number\n */\nexport function getRetryDelay(\n  error: StructuredError, \n  attemptNumber: number,\n  baseDelay?: number\n): number {\n  const base = baseDelay || (error.retryAfter || 1) * 1000; // Convert to milliseconds\n  \n  switch (error.retryStrategy) {\n    case RetryStrategy.IMMEDIATE:\n      return 0;\n    \n    case RetryStrategy.LINEAR:\n      return base * attemptNumber;\n    \n    case RetryStrategy.EXPONENTIAL:\n      return base * Math.pow(2, attemptNumber - 1);\n    \n    case RetryStrategy.EXPONENTIAL_JITTER:\n      const exponentialDelay = base * Math.pow(2, attemptNumber - 1);\n      const jitter = Math.random() * 0.1 * exponentialDelay; // ±10% jitter\n      return exponentialDelay + jitter;\n    \n    case RetryStrategy.NONE:\n    default:\n      return base;\n  }\n}\n\n/**\n * Convert unknown error to structured error\n */\nexport function toStructuredError(\n  error: unknown,\n  defaultCode: ErrorCode = ErrorCode.UNHANDLED_ERROR,\n  requestId?: string\n): StructuredError {\n  if (error && typeof error === 'object' && 'code' in error) {\n    // Already a structured error\n    return error as StructuredError;\n  }\n  \n  if (error instanceof Error) {\n    return createStructuredError(\n      defaultCode,\n      { originalMessage: error.message, stack: error.stack },\n      error.message,\n      requestId\n    );\n  }\n  \n  return createStructuredError(\n    defaultCode,\n    { originalError: String(error) },\n    String(error),\n    requestId\n  );\n}\n\n// ===== NEXT.JS RESPONSE HELPERS =====\n\n/**\n * Send a structured error response in Next.js API routes\n */\nexport function sendErrorResponse(\n  res: any, // NextResponse or Response\n  code: ErrorCode,\n  details?: Record<string, any>,\n  customMessage?: string,\n  requestId?: string\n) {\n  const errorResponse = createErrorResponse(code, details, customMessage, requestId);\n  const status = getHTTPStatusFromErrorCode(code);\n  \n  // Set retry headers if applicable\n  if (errorResponse.error.retryable && errorResponse.error.retryAfter) {\n    res.headers.set('X-Retry-After', String(errorResponse.error.retryAfter));\n    res.headers.set('Retry-After', String(errorResponse.error.retryAfter));\n  }\n  \n  return new Response(JSON.stringify(errorResponse), {\n    status,\n    headers: {\n      'Content-Type': 'application/json',\n      ...Object.fromEntries(res.headers || [])\n    }\n  });\n}\n\n/**\n * Send a structured success response in Next.js API routes\n */\nexport function sendSuccessResponse<T>(data: T, status: number = 200) {\n  const successResponse = createSuccessResponse(data);\n  \n  return new Response(JSON.stringify(successResponse), {\n    status,\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n}\n"],"mappings":"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","ignoreList":[]}