a74dc63fc8b1738597445b7e8316ab8e
"use strict";

/**
 * Structured Error System for PrepBettr
 *
 * Provides consistent error handling with standardized error codes,
 * retry hints, and structured response formats across all API routes.
 *
 * Features:
 * - Standardized error codes with categories
 * - Retry hints and backoff strategies
 * - Structured API response format
 * - Client-friendly error messages
 * - Logging integration
 *
 * @version 1.0.0
 */
/* istanbul ignore next */
function cov_9dja3k20c() {
  var path = "/Users/dikshantvashistha/PrepBettr/lib/utils/structured-errors.ts";
  var hash = "c4cd8a4a1fa808b2ff1491cd1fc80a73ee055695";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dikshantvashistha/PrepBettr/lib/utils/structured-errors.ts",
    statementMap: {
      "0": {
        start: {
          line: 17,
          column: 0
        },
        end: {
          line: 17,
          column: 62
        }
      },
      "1": {
        start: {
          line: 18,
          column: 0
        },
        end: {
          line: 18,
          column: 75
        }
      },
      "2": {
        start: {
          line: 19,
          column: 0
        },
        end: {
          line: 19,
          column: 54
        }
      },
      "3": {
        start: {
          line: 20,
          column: 0
        },
        end: {
          line: 20,
          column: 50
        }
      },
      "4": {
        start: {
          line: 21,
          column: 0
        },
        end: {
          line: 21,
          column: 54
        }
      },
      "5": {
        start: {
          line: 22,
          column: 0
        },
        end: {
          line: 22,
          column: 64
        }
      },
      "6": {
        start: {
          line: 23,
          column: 0
        },
        end: {
          line: 23,
          column: 64
        }
      },
      "7": {
        start: {
          line: 24,
          column: 0
        },
        end: {
          line: 24,
          column: 44
        }
      },
      "8": {
        start: {
          line: 25,
          column: 0
        },
        end: {
          line: 25,
          column: 38
        }
      },
      "9": {
        start: {
          line: 26,
          column: 0
        },
        end: {
          line: 26,
          column: 46
        }
      },
      "10": {
        start: {
          line: 27,
          column: 0
        },
        end: {
          line: 27,
          column: 46
        }
      },
      "11": {
        start: {
          line: 28,
          column: 0
        },
        end: {
          line: 28,
          column: 50
        }
      },
      "12": {
        start: {
          line: 29,
          column: 17
        },
        end: {
          line: 29,
          column: 40
        }
      },
      "13": {
        start: {
          line: 32,
          column: 0
        },
        end: {
          line: 43,
          column: 66
        }
      },
      "14": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 33,
          column: 55
        }
      },
      "15": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 34,
          column: 53
        }
      },
      "16": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 35,
          column: 47
        }
      },
      "17": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 36,
          column: 47
        }
      },
      "18": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 37,
          column: 65
        }
      },
      "19": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 38,
          column: 59
        }
      },
      "20": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 39,
          column: 53
        }
      },
      "21": {
        start: {
          line: 40,
          column: 4
        },
        end: {
          line: 40,
          column: 45
        }
      },
      "22": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 41,
          column: 43
        }
      },
      "23": {
        start: {
          line: 42,
          column: 4
        },
        end: {
          line: 42,
          column: 43
        }
      },
      "24": {
        start: {
          line: 46,
          column: 0
        },
        end: {
          line: 85,
          column: 54
        }
      },
      "25": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 48,
          column: 59
        }
      },
      "26": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 49,
          column: 59
        }
      },
      "27": {
        start: {
          line: 50,
          column: 4
        },
        end: {
          line: 50,
          column: 59
        }
      },
      "28": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 51,
          column: 63
        }
      },
      "29": {
        start: {
          line: 53,
          column: 4
        },
        end: {
          line: 53,
          column: 49
        }
      },
      "30": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 54,
          column: 71
        }
      },
      "31": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 55,
          column: 51
        }
      },
      "32": {
        start: {
          line: 56,
          column: 4
        },
        end: {
          line: 56,
          column: 55
        }
      },
      "33": {
        start: {
          line: 58,
          column: 4
        },
        end: {
          line: 58,
          column: 53
        }
      },
      "34": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 59,
          column: 67
        }
      },
      "35": {
        start: {
          line: 60,
          column: 4
        },
        end: {
          line: 60,
          column: 57
        }
      },
      "36": {
        start: {
          line: 61,
          column: 4
        },
        end: {
          line: 61,
          column: 51
        }
      },
      "37": {
        start: {
          line: 62,
          column: 4
        },
        end: {
          line: 62,
          column: 57
        }
      },
      "38": {
        start: {
          line: 64,
          column: 4
        },
        end: {
          line: 64,
          column: 61
        }
      },
      "39": {
        start: {
          line: 65,
          column: 4
        },
        end: {
          line: 65,
          column: 71
        }
      },
      "40": {
        start: {
          line: 67,
          column: 4
        },
        end: {
          line: 67,
          column: 41
        }
      },
      "41": {
        start: {
          line: 68,
          column: 4
        },
        end: {
          line: 68,
          column: 57
        }
      },
      "42": {
        start: {
          line: 69,
          column: 4
        },
        end: {
          line: 69,
          column: 53
        }
      },
      "43": {
        start: {
          line: 71,
          column: 4
        },
        end: {
          line: 71,
          column: 61
        }
      },
      "44": {
        start: {
          line: 72,
          column: 4
        },
        end: {
          line: 72,
          column: 53
        }
      },
      "45": {
        start: {
          line: 73,
          column: 4
        },
        end: {
          line: 73,
          column: 59
        }
      },
      "46": {
        start: {
          line: 75,
          column: 4
        },
        end: {
          line: 75,
          column: 59
        }
      },
      "47": {
        start: {
          line: 76,
          column: 4
        },
        end: {
          line: 76,
          column: 59
        }
      },
      "48": {
        start: {
          line: 77,
          column: 4
        },
        end: {
          line: 77,
          column: 51
        }
      },
      "49": {
        start: {
          line: 78,
          column: 4
        },
        end: {
          line: 78,
          column: 49
        }
      },
      "50": {
        start: {
          line: 80,
          column: 4
        },
        end: {
          line: 80,
          column: 61
        }
      },
      "51": {
        start: {
          line: 81,
          column: 4
        },
        end: {
          line: 81,
          column: 67
        }
      },
      "52": {
        start: {
          line: 83,
          column: 4
        },
        end: {
          line: 83,
          column: 65
        }
      },
      "53": {
        start: {
          line: 84,
          column: 4
        },
        end: {
          line: 84,
          column: 53
        }
      },
      "54": {
        start: {
          line: 88,
          column: 0
        },
        end: {
          line: 94,
          column: 66
        }
      },
      "55": {
        start: {
          line: 89,
          column: 4
        },
        end: {
          line: 89,
          column: 35
        }
      },
      "56": {
        start: {
          line: 90,
          column: 4
        },
        end: {
          line: 90,
          column: 45
        }
      },
      "57": {
        start: {
          line: 91,
          column: 4
        },
        end: {
          line: 91,
          column: 39
        }
      },
      "58": {
        start: {
          line: 92,
          column: 4
        },
        end: {
          line: 92,
          column: 49
        }
      },
      "59": {
        start: {
          line: 93,
          column: 4
        },
        end: {
          line: 93,
          column: 63
        }
      },
      "60": {
        start: {
          line: 96,
          column: 26
        },
        end: {
          line: 319,
          column: 1
        }
      },
      "61": {
        start: {
          line: 325,
          column: 23
        },
        end: {
          line: 325,
          column: 46
        }
      },
      "62": {
        start: {
          line: 326,
          column: 4
        },
        end: {
          line: 326,
          column: 163
        }
      },
      "63": {
        start: {
          line: 332,
          column: 18
        },
        end: {
          line: 332,
          column: 80
        }
      },
      "64": {
        start: {
          line: 334,
          column: 4
        },
        end: {
          line: 343,
          column: 5
        }
      },
      "65": {
        start: {
          line: 337,
          column: 8
        },
        end: {
          line: 342,
          column: 11
        }
      },
      "66": {
        start: {
          line: 344,
          column: 4
        },
        end: {
          line: 348,
          column: 6
        }
      },
      "67": {
        start: {
          line: 354,
          column: 4
        },
        end: {
          line: 358,
          column: 6
        }
      },
      "68": {
        start: {
          line: 364,
          column: 4
        },
        end: {
          line: 377,
          column: 5
        }
      },
      "69": {
        start: {
          line: 365,
          column: 18
        },
        end: {
          line: 365,
          column: 51
        }
      },
      "70": {
        start: {
          line: 366,
          column: 18
        },
        end: {
          line: 366,
          column: 54
        }
      },
      "71": {
        start: {
          line: 367,
          column: 18
        },
        end: {
          line: 367,
          column: 49
        }
      },
      "72": {
        start: {
          line: 368,
          column: 18
        },
        end: {
          line: 368,
          column: 45
        }
      },
      "73": {
        start: {
          line: 369,
          column: 18
        },
        end: {
          line: 369,
          column: 53
        }
      },
      "74": {
        start: {
          line: 370,
          column: 18
        },
        end: {
          line: 370,
          column: 50
        }
      },
      "75": {
        start: {
          line: 371,
          column: 18
        },
        end: {
          line: 371,
          column: 55
        }
      },
      "76": {
        start: {
          line: 372,
          column: 18
        },
        end: {
          line: 372,
          column: 57
        }
      },
      "77": {
        start: {
          line: 373,
          column: 18
        },
        end: {
          line: 373,
          column: 55
        }
      },
      "78": {
        start: {
          line: 374,
          column: 18
        },
        end: {
          line: 374,
          column: 54
        }
      },
      "79": {
        start: {
          line: 375,
          column: 18
        },
        end: {
          line: 375,
          column: 51
        }
      },
      "80": {
        start: {
          line: 376,
          column: 17
        },
        end: {
          line: 376,
          column: 50
        }
      },
      "81": {
        start: {
          line: 383,
          column: 18
        },
        end: {
          line: 383,
          column: 41
        }
      },
      "82": {
        start: {
          line: 384,
          column: 4
        },
        end: {
          line: 404,
          column: 5
        }
      },
      "83": {
        start: {
          line: 386,
          column: 12
        },
        end: {
          line: 386,
          column: 23
        }
      },
      "84": {
        start: {
          line: 388,
          column: 12
        },
        end: {
          line: 388,
          column: 23
        }
      },
      "85": {
        start: {
          line: 390,
          column: 12
        },
        end: {
          line: 390,
          column: 23
        }
      },
      "86": {
        start: {
          line: 392,
          column: 12
        },
        end: {
          line: 392,
          column: 23
        }
      },
      "87": {
        start: {
          line: 394,
          column: 12
        },
        end: {
          line: 394,
          column: 23
        }
      },
      "88": {
        start: {
          line: 396,
          column: 12
        },
        end: {
          line: 396,
          column: 23
        }
      },
      "89": {
        start: {
          line: 399,
          column: 12
        },
        end: {
          line: 399,
          column: 23
        }
      },
      "90": {
        start: {
          line: 403,
          column: 12
        },
        end: {
          line: 403,
          column: 23
        }
      },
      "91": {
        start: {
          line: 410,
          column: 4
        },
        end: {
          line: 410,
          column: 36
        }
      },
      "92": {
        start: {
          line: 416,
          column: 17
        },
        end: {
          line: 416,
          column: 60
        }
      },
      "93": {
        start: {
          line: 417,
          column: 4
        },
        end: {
          line: 431,
          column: 5
        }
      },
      "94": {
        start: {
          line: 419,
          column: 12
        },
        end: {
          line: 419,
          column: 21
        }
      },
      "95": {
        start: {
          line: 421,
          column: 12
        },
        end: {
          line: 421,
          column: 40
        }
      },
      "96": {
        start: {
          line: 423,
          column: 12
        },
        end: {
          line: 423,
          column: 57
        }
      },
      "97": {
        start: {
          line: 425,
          column: 37
        },
        end: {
          line: 425,
          column: 74
        }
      },
      "98": {
        start: {
          line: 426,
          column: 27
        },
        end: {
          line: 426,
          column: 65
        }
      },
      "99": {
        start: {
          line: 427,
          column: 12
        },
        end: {
          line: 427,
          column: 45
        }
      },
      "100": {
        start: {
          line: 430,
          column: 12
        },
        end: {
          line: 430,
          column: 24
        }
      },
      "101": {
        start: {
          line: 437,
          column: 4
        },
        end: {
          line: 440,
          column: 5
        }
      },
      "102": {
        start: {
          line: 439,
          column: 8
        },
        end: {
          line: 439,
          column: 21
        }
      },
      "103": {
        start: {
          line: 441,
          column: 4
        },
        end: {
          line: 443,
          column: 5
        }
      },
      "104": {
        start: {
          line: 442,
          column: 8
        },
        end: {
          line: 442,
          column: 132
        }
      },
      "105": {
        start: {
          line: 444,
          column: 4
        },
        end: {
          line: 444,
          column: 106
        }
      },
      "106": {
        start: {
          line: 452,
          column: 26
        },
        end: {
          line: 452,
          column: 86
        }
      },
      "107": {
        start: {
          line: 453,
          column: 19
        },
        end: {
          line: 453,
          column: 51
        }
      },
      "108": {
        start: {
          line: 455,
          column: 4
        },
        end: {
          line: 458,
          column: 5
        }
      },
      "109": {
        start: {
          line: 456,
          column: 8
        },
        end: {
          line: 456,
          column: 81
        }
      },
      "110": {
        start: {
          line: 457,
          column: 8
        },
        end: {
          line: 457,
          column: 79
        }
      },
      "111": {
        start: {
          line: 459,
          column: 4
        },
        end: {
          line: 462,
          column: 7
        }
      },
      "112": {
        start: {
          line: 468,
          column: 28
        },
        end: {
          line: 468,
          column: 55
        }
      },
      "113": {
        start: {
          line: 469,
          column: 4
        },
        end: {
          line: 474,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 32,
            column: 1
          },
          end: {
            line: 32,
            column: 2
          }
        },
        loc: {
          start: {
            line: 32,
            column: 26
          },
          end: {
            line: 43,
            column: 1
          }
        },
        line: 32
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 46,
            column: 1
          },
          end: {
            line: 46,
            column: 2
          }
        },
        loc: {
          start: {
            line: 46,
            column: 22
          },
          end: {
            line: 85,
            column: 1
          }
        },
        line: 46
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 88,
            column: 1
          },
          end: {
            line: 88,
            column: 2
          }
        },
        loc: {
          start: {
            line: 88,
            column: 26
          },
          end: {
            line: 94,
            column: 1
          }
        },
        line: 88
      },
      "3": {
        name: "createStructuredError",
        decl: {
          start: {
            line: 324,
            column: 9
          },
          end: {
            line: 324,
            column: 30
          }
        },
        loc: {
          start: {
            line: 324,
            column: 72
          },
          end: {
            line: 327,
            column: 1
          }
        },
        line: 324
      },
      "4": {
        name: "createErrorResponse",
        decl: {
          start: {
            line: 331,
            column: 9
          },
          end: {
            line: 331,
            column: 28
          }
        },
        loc: {
          start: {
            line: 331,
            column: 70
          },
          end: {
            line: 349,
            column: 1
          }
        },
        line: 331
      },
      "5": {
        name: "createSuccessResponse",
        decl: {
          start: {
            line: 353,
            column: 9
          },
          end: {
            line: 353,
            column: 30
          }
        },
        loc: {
          start: {
            line: 353,
            column: 37
          },
          end: {
            line: 359,
            column: 1
          }
        },
        line: 353
      },
      "6": {
        name: "getErrorCodeFromHTTPStatus",
        decl: {
          start: {
            line: 363,
            column: 9
          },
          end: {
            line: 363,
            column: 35
          }
        },
        loc: {
          start: {
            line: 363,
            column: 44
          },
          end: {
            line: 378,
            column: 1
          }
        },
        line: 363
      },
      "7": {
        name: "getHTTPStatusFromErrorCode",
        decl: {
          start: {
            line: 382,
            column: 9
          },
          end: {
            line: 382,
            column: 35
          }
        },
        loc: {
          start: {
            line: 382,
            column: 42
          },
          end: {
            line: 405,
            column: 1
          }
        },
        line: 382
      },
      "8": {
        name: "isRetryableError",
        decl: {
          start: {
            line: 409,
            column: 9
          },
          end: {
            line: 409,
            column: 25
          }
        },
        loc: {
          start: {
            line: 409,
            column: 33
          },
          end: {
            line: 411,
            column: 1
          }
        },
        line: 409
      },
      "9": {
        name: "getRetryDelay",
        decl: {
          start: {
            line: 415,
            column: 9
          },
          end: {
            line: 415,
            column: 22
          }
        },
        loc: {
          start: {
            line: 415,
            column: 56
          },
          end: {
            line: 432,
            column: 1
          }
        },
        line: 415
      },
      "10": {
        name: "toStructuredError",
        decl: {
          start: {
            line: 436,
            column: 9
          },
          end: {
            line: 436,
            column: 26
          }
        },
        loc: {
          start: {
            line: 436,
            column: 86
          },
          end: {
            line: 445,
            column: 1
          }
        },
        line: 436
      },
      "11": {
        name: "sendErrorResponse",
        decl: {
          start: {
            line: 450,
            column: 9
          },
          end: {
            line: 450,
            column: 26
          }
        },
        loc: {
          start: {
            line: 451,
            column: 41
          },
          end: {
            line: 463,
            column: 1
          }
        },
        line: 451
      },
      "12": {
        name: "sendSuccessResponse",
        decl: {
          start: {
            line: 467,
            column: 9
          },
          end: {
            line: 467,
            column: 28
          }
        },
        loc: {
          start: {
            line: 467,
            column: 49
          },
          end: {
            line: 475,
            column: 1
          }
        },
        line: 467
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 43,
            column: 3
          },
          end: {
            line: 43,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 43,
            column: 3
          },
          end: {
            line: 43,
            column: 16
          }
        }, {
          start: {
            line: 43,
            column: 21
          },
          end: {
            line: 43,
            column: 63
          }
        }],
        line: 43
      },
      "1": {
        loc: {
          start: {
            line: 85,
            column: 3
          },
          end: {
            line: 85,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 85,
            column: 3
          },
          end: {
            line: 85,
            column: 12
          }
        }, {
          start: {
            line: 85,
            column: 17
          },
          end: {
            line: 85,
            column: 51
          }
        }],
        line: 85
      },
      "2": {
        loc: {
          start: {
            line: 94,
            column: 3
          },
          end: {
            line: 94,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 94,
            column: 3
          },
          end: {
            line: 94,
            column: 16
          }
        }, {
          start: {
            line: 94,
            column: 21
          },
          end: {
            line: 94,
            column: 63
          }
        }],
        line: 94
      },
      "3": {
        loc: {
          start: {
            line: 326,
            column: 67
          },
          end: {
            line: 326,
            column: 102
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 326,
            column: 67
          },
          end: {
            line: 326,
            column: 80
          }
        }, {
          start: {
            line: 326,
            column: 84
          },
          end: {
            line: 326,
            column: 102
          }
        }],
        line: 326
      },
      "4": {
        loc: {
          start: {
            line: 334,
            column: 4
          },
          end: {
            line: 343,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 334,
            column: 4
          },
          end: {
            line: 343,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 334
      },
      "5": {
        loc: {
          start: {
            line: 334,
            column: 8
          },
          end: {
            line: 336,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 334,
            column: 8
          },
          end: {
            line: 334,
            column: 49
          }
        }, {
          start: {
            line: 335,
            column: 8
          },
          end: {
            line: 335,
            column: 57
          }
        }, {
          start: {
            line: 336,
            column: 8
          },
          end: {
            line: 336,
            column: 54
          }
        }],
        line: 334
      },
      "6": {
        loc: {
          start: {
            line: 364,
            column: 4
          },
          end: {
            line: 377,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 365,
            column: 8
          },
          end: {
            line: 365,
            column: 51
          }
        }, {
          start: {
            line: 366,
            column: 8
          },
          end: {
            line: 366,
            column: 54
          }
        }, {
          start: {
            line: 367,
            column: 8
          },
          end: {
            line: 367,
            column: 49
          }
        }, {
          start: {
            line: 368,
            column: 8
          },
          end: {
            line: 368,
            column: 45
          }
        }, {
          start: {
            line: 369,
            column: 8
          },
          end: {
            line: 369,
            column: 53
          }
        }, {
          start: {
            line: 370,
            column: 8
          },
          end: {
            line: 370,
            column: 50
          }
        }, {
          start: {
            line: 371,
            column: 8
          },
          end: {
            line: 371,
            column: 55
          }
        }, {
          start: {
            line: 372,
            column: 8
          },
          end: {
            line: 372,
            column: 57
          }
        }, {
          start: {
            line: 373,
            column: 8
          },
          end: {
            line: 373,
            column: 55
          }
        }, {
          start: {
            line: 374,
            column: 8
          },
          end: {
            line: 374,
            column: 54
          }
        }, {
          start: {
            line: 375,
            column: 8
          },
          end: {
            line: 375,
            column: 51
          }
        }, {
          start: {
            line: 376,
            column: 8
          },
          end: {
            line: 376,
            column: 50
          }
        }],
        line: 364
      },
      "7": {
        loc: {
          start: {
            line: 384,
            column: 4
          },
          end: {
            line: 404,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 385,
            column: 8
          },
          end: {
            line: 386,
            column: 23
          }
        }, {
          start: {
            line: 387,
            column: 8
          },
          end: {
            line: 388,
            column: 23
          }
        }, {
          start: {
            line: 389,
            column: 8
          },
          end: {
            line: 390,
            column: 23
          }
        }, {
          start: {
            line: 391,
            column: 8
          },
          end: {
            line: 392,
            column: 23
          }
        }, {
          start: {
            line: 393,
            column: 8
          },
          end: {
            line: 394,
            column: 23
          }
        }, {
          start: {
            line: 395,
            column: 8
          },
          end: {
            line: 396,
            column: 23
          }
        }, {
          start: {
            line: 397,
            column: 8
          },
          end: {
            line: 397,
            column: 47
          }
        }, {
          start: {
            line: 398,
            column: 8
          },
          end: {
            line: 399,
            column: 23
          }
        }, {
          start: {
            line: 400,
            column: 8
          },
          end: {
            line: 400,
            column: 41
          }
        }, {
          start: {
            line: 401,
            column: 8
          },
          end: {
            line: 401,
            column: 36
          }
        }, {
          start: {
            line: 402,
            column: 8
          },
          end: {
            line: 403,
            column: 23
          }
        }],
        line: 384
      },
      "8": {
        loc: {
          start: {
            line: 416,
            column: 17
          },
          end: {
            line: 416,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 416,
            column: 17
          },
          end: {
            line: 416,
            column: 26
          }
        }, {
          start: {
            line: 416,
            column: 30
          },
          end: {
            line: 416,
            column: 60
          }
        }],
        line: 416
      },
      "9": {
        loc: {
          start: {
            line: 416,
            column: 31
          },
          end: {
            line: 416,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 416,
            column: 31
          },
          end: {
            line: 416,
            column: 47
          }
        }, {
          start: {
            line: 416,
            column: 51
          },
          end: {
            line: 416,
            column: 52
          }
        }],
        line: 416
      },
      "10": {
        loc: {
          start: {
            line: 417,
            column: 4
          },
          end: {
            line: 431,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 418,
            column: 8
          },
          end: {
            line: 419,
            column: 21
          }
        }, {
          start: {
            line: 420,
            column: 8
          },
          end: {
            line: 421,
            column: 40
          }
        }, {
          start: {
            line: 422,
            column: 8
          },
          end: {
            line: 423,
            column: 57
          }
        }, {
          start: {
            line: 424,
            column: 8
          },
          end: {
            line: 427,
            column: 45
          }
        }, {
          start: {
            line: 428,
            column: 8
          },
          end: {
            line: 428,
            column: 32
          }
        }, {
          start: {
            line: 429,
            column: 8
          },
          end: {
            line: 430,
            column: 24
          }
        }],
        line: 417
      },
      "11": {
        loc: {
          start: {
            line: 436,
            column: 34
          },
          end: {
            line: 436,
            column: 73
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 436,
            column: 48
          },
          end: {
            line: 436,
            column: 73
          }
        }],
        line: 436
      },
      "12": {
        loc: {
          start: {
            line: 437,
            column: 4
          },
          end: {
            line: 440,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 437,
            column: 4
          },
          end: {
            line: 440,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 437
      },
      "13": {
        loc: {
          start: {
            line: 437,
            column: 8
          },
          end: {
            line: 437,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 437,
            column: 8
          },
          end: {
            line: 437,
            column: 13
          }
        }, {
          start: {
            line: 437,
            column: 17
          },
          end: {
            line: 437,
            column: 42
          }
        }, {
          start: {
            line: 437,
            column: 46
          },
          end: {
            line: 437,
            column: 61
          }
        }],
        line: 437
      },
      "14": {
        loc: {
          start: {
            line: 441,
            column: 4
          },
          end: {
            line: 443,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 441,
            column: 4
          },
          end: {
            line: 443,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 441
      },
      "15": {
        loc: {
          start: {
            line: 455,
            column: 4
          },
          end: {
            line: 458,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 455,
            column: 4
          },
          end: {
            line: 458,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 455
      },
      "16": {
        loc: {
          start: {
            line: 455,
            column: 8
          },
          end: {
            line: 455,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 455,
            column: 8
          },
          end: {
            line: 455,
            column: 37
          }
        }, {
          start: {
            line: 455,
            column: 41
          },
          end: {
            line: 455,
            column: 71
          }
        }],
        line: 455
      },
      "17": {
        loc: {
          start: {
            line: 461,
            column: 90
          },
          end: {
            line: 461,
            column: 107
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 461,
            column: 90
          },
          end: {
            line: 461,
            column: 101
          }
        }, {
          start: {
            line: 461,
            column: 105
          },
          end: {
            line: 461,
            column: 107
          }
        }],
        line: 461
      },
      "18": {
        loc: {
          start: {
            line: 467,
            column: 35
          },
          end: {
            line: 467,
            column: 47
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 467,
            column: 44
          },
          end: {
            line: 467,
            column: 47
          }
        }],
        line: 467
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      "7": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0, 0, 0, 0, 0],
      "11": [0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0]
    },
    inputSourceMap: {
      file: "/Users/dikshantvashistha/PrepBettr/lib/utils/structured-errors.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/dikshantvashistha/PrepBettr/lib/utils/structured-errors.ts"],
      sourcesContent: ["/**\n * Structured Error System for PrepBettr\n * \n * Provides consistent error handling with standardized error codes,\n * retry hints, and structured response formats across all API routes.\n * \n * Features:\n * - Standardized error codes with categories\n * - Retry hints and backoff strategies\n * - Structured API response format\n * - Client-friendly error messages\n * - Logging integration\n * \n * @version 1.0.0\n */\n\nimport { logServerError } from '@/lib/errors';\n\n// ===== ERROR CATEGORIES =====\n\nexport enum ErrorCategory {\n  AUTHENTICATION = 'AUTHENTICATION',\n  AUTHORIZATION = 'AUTHORIZATION', \n  VALIDATION = 'VALIDATION',\n  RATE_LIMIT = 'RATE_LIMIT',\n  SERVICE_UNAVAILABLE = 'SERVICE_UNAVAILABLE',\n  EXTERNAL_SERVICE = 'EXTERNAL_SERVICE',\n  CONFIGURATION = 'CONFIGURATION',\n  NOT_FOUND = 'NOT_FOUND',\n  CONFLICT = 'CONFLICT',\n  INTERNAL = 'INTERNAL'\n}\n\n// ===== ERROR CODES =====\n\nexport enum ErrorCode {\n  // Authentication errors (4xx)\n  AUTH_TOKEN_MISSING = 'AUTH_TOKEN_MISSING',\n  AUTH_TOKEN_INVALID = 'AUTH_TOKEN_INVALID',\n  AUTH_TOKEN_EXPIRED = 'AUTH_TOKEN_EXPIRED',\n  AUTH_SESSION_EXPIRED = 'AUTH_SESSION_EXPIRED',\n  \n  // Authorization errors (4xx)\n  ACCESS_DENIED = 'ACCESS_DENIED',\n  INSUFFICIENT_PERMISSIONS = 'INSUFFICIENT_PERMISSIONS',\n  QUOTA_EXCEEDED = 'QUOTA_EXCEEDED',\n  LICENSE_REQUIRED = 'LICENSE_REQUIRED',\n  \n  // Validation errors (4xx)\n  INVALID_REQUEST = 'INVALID_REQUEST',\n  MISSING_REQUIRED_FIELD = 'MISSING_REQUIRED_FIELD',\n  INVALID_FILE_TYPE = 'INVALID_FILE_TYPE',\n  FILE_TOO_LARGE = 'FILE_TOO_LARGE',\n  INVALID_PARAMETER = 'INVALID_PARAMETER',\n  \n  // Rate limiting (4xx)\n  RATE_LIMIT_EXCEEDED = 'RATE_LIMIT_EXCEEDED',\n  CONCURRENT_REQUEST_LIMIT = 'CONCURRENT_REQUEST_LIMIT',\n  \n  // Resource errors (4xx)\n  NOT_FOUND = 'NOT_FOUND',\n  RESOURCE_CONFLICT = 'RESOURCE_CONFLICT',\n  RESOURCE_LOCKED = 'RESOURCE_LOCKED',\n  \n  // Service errors (5xx)\n  SERVICE_UNAVAILABLE = 'SERVICE_UNAVAILABLE',\n  SERVICE_TIMEOUT = 'SERVICE_TIMEOUT',\n  SERVICE_OVERLOADED = 'SERVICE_OVERLOADED',\n  \n  // External service errors (5xx)\n  AZURE_OPENAI_ERROR = 'AZURE_OPENAI_ERROR',\n  AZURE_SPEECH_ERROR = 'AZURE_SPEECH_ERROR',\n  FIREBASE_ERROR = 'FIREBASE_ERROR',\n  STORAGE_ERROR = 'STORAGE_ERROR',\n  \n  // Configuration errors (5xx)\n  CONFIGURATION_ERROR = 'CONFIGURATION_ERROR',\n  SERVICE_NOT_CONFIGURED = 'SERVICE_NOT_CONFIGURED',\n  \n  // Internal errors (5xx)\n  INTERNAL_SERVER_ERROR = 'INTERNAL_SERVER_ERROR',\n  UNHANDLED_ERROR = 'UNHANDLED_ERROR'\n}\n\n// ===== RETRY STRATEGIES =====\n\nexport enum RetryStrategy {\n  NONE = 'NONE',                    // Don't retry\n  IMMEDIATE = 'IMMEDIATE',          // Retry immediately\n  LINEAR = 'LINEAR',                // Linear backoff (1s, 2s, 3s...)\n  EXPONENTIAL = 'EXPONENTIAL',      // Exponential backoff (1s, 2s, 4s, 8s...)\n  EXPONENTIAL_JITTER = 'EXPONENTIAL_JITTER'  // Exponential with random jitter\n}\n\n// ===== TYPE DEFINITIONS =====\n\nexport interface StructuredError {\n  code: ErrorCode;\n  category: ErrorCategory;\n  message: string;\n  details?: Record<string, any>;\n  timestamp: string;\n  requestId?: string;\n  retryable: boolean;\n  retryStrategy?: RetryStrategy;\n  retryAfter?: number; // Seconds\n  maxRetries?: number;\n}\n\nexport interface APIErrorResponse {\n  error: StructuredError;\n  success: false;\n  data: null;\n}\n\nexport interface APISuccessResponse<T = any> {\n  error: null;\n  success: true;\n  data: T;\n}\n\nexport type APIResponse<T = any> = APISuccessResponse<T> | APIErrorResponse;\n\n// ===== ERROR DEFINITIONS =====\n\nconst ERROR_DEFINITIONS: Record<ErrorCode, Omit<StructuredError, 'timestamp' | 'requestId'>> = {\n  // Authentication errors\n  [ErrorCode.AUTH_TOKEN_MISSING]: {\n    code: ErrorCode.AUTH_TOKEN_MISSING,\n    category: ErrorCategory.AUTHENTICATION,\n    message: 'Authentication token is required but was not provided.',\n    retryable: false\n  },\n  [ErrorCode.AUTH_TOKEN_INVALID]: {\n    code: ErrorCode.AUTH_TOKEN_INVALID,\n    category: ErrorCategory.AUTHENTICATION,\n    message: 'The provided authentication token is invalid.',\n    retryable: false\n  },\n  [ErrorCode.AUTH_TOKEN_EXPIRED]: {\n    code: ErrorCode.AUTH_TOKEN_EXPIRED,\n    category: ErrorCategory.AUTHENTICATION,\n    message: 'Authentication token has expired. Please sign in again.',\n    retryable: false\n  },\n  [ErrorCode.AUTH_SESSION_EXPIRED]: {\n    code: ErrorCode.AUTH_SESSION_EXPIRED,\n    category: ErrorCategory.AUTHENTICATION,\n    message: 'Your session has expired. Please sign in again.',\n    retryable: false\n  },\n  \n  // Authorization errors\n  [ErrorCode.ACCESS_DENIED]: {\n    code: ErrorCode.ACCESS_DENIED,\n    category: ErrorCategory.AUTHORIZATION,\n    message: 'Access denied. You do not have permission to perform this action.',\n    retryable: false\n  },\n  [ErrorCode.INSUFFICIENT_PERMISSIONS]: {\n    code: ErrorCode.INSUFFICIENT_PERMISSIONS,\n    category: ErrorCategory.AUTHORIZATION,\n    message: 'Insufficient permissions to access this resource.',\n    retryable: false\n  },\n  [ErrorCode.QUOTA_EXCEEDED]: {\n    code: ErrorCode.QUOTA_EXCEEDED,\n    category: ErrorCategory.AUTHORIZATION,\n    message: 'Usage quota exceeded. Please upgrade your plan or wait for quota reset.',\n    retryable: false\n  },\n  [ErrorCode.LICENSE_REQUIRED]: {\n    code: ErrorCode.LICENSE_REQUIRED,\n    category: ErrorCategory.AUTHORIZATION,\n    message: 'A valid license is required to access this feature.',\n    retryable: false\n  },\n  \n  // Validation errors\n  [ErrorCode.INVALID_REQUEST]: {\n    code: ErrorCode.INVALID_REQUEST,\n    category: ErrorCategory.VALIDATION,\n    message: 'The request is invalid or malformed.',\n    retryable: false\n  },\n  [ErrorCode.MISSING_REQUIRED_FIELD]: {\n    code: ErrorCode.MISSING_REQUIRED_FIELD,\n    category: ErrorCategory.VALIDATION,\n    message: 'Required field is missing from the request.',\n    retryable: false\n  },\n  [ErrorCode.INVALID_FILE_TYPE]: {\n    code: ErrorCode.INVALID_FILE_TYPE,\n    category: ErrorCategory.VALIDATION,\n    message: 'Invalid file type. Please upload a supported file format.',\n    retryable: false\n  },\n  [ErrorCode.FILE_TOO_LARGE]: {\n    code: ErrorCode.FILE_TOO_LARGE,\n    category: ErrorCategory.VALIDATION,\n    message: 'File size exceeds the maximum allowed limit.',\n    retryable: false\n  },\n  [ErrorCode.INVALID_PARAMETER]: {\n    code: ErrorCode.INVALID_PARAMETER,\n    category: ErrorCategory.VALIDATION,\n    message: 'One or more parameters are invalid.',\n    retryable: false\n  },\n  \n  // Rate limiting\n  [ErrorCode.RATE_LIMIT_EXCEEDED]: {\n    code: ErrorCode.RATE_LIMIT_EXCEEDED,\n    category: ErrorCategory.RATE_LIMIT,\n    message: 'Rate limit exceeded. Please try again later.',\n    retryable: true,\n    retryStrategy: RetryStrategy.EXPONENTIAL,\n    retryAfter: 60,\n    maxRetries: 3\n  },\n  [ErrorCode.CONCURRENT_REQUEST_LIMIT]: {\n    code: ErrorCode.CONCURRENT_REQUEST_LIMIT,\n    category: ErrorCategory.RATE_LIMIT,\n    message: 'Too many concurrent requests. Please wait and try again.',\n    retryable: true,\n    retryStrategy: RetryStrategy.LINEAR,\n    retryAfter: 5,\n    maxRetries: 5\n  },\n  \n  // Resource errors\n  [ErrorCode.NOT_FOUND]: {\n    code: ErrorCode.NOT_FOUND,\n    category: ErrorCategory.NOT_FOUND,\n    message: 'The requested resource was not found.',\n    retryable: false\n  },\n  [ErrorCode.RESOURCE_CONFLICT]: {\n    code: ErrorCode.RESOURCE_CONFLICT,\n    category: ErrorCategory.CONFLICT,\n    message: 'Resource conflict. The resource is in an inconsistent state.',\n    retryable: true,\n    retryStrategy: RetryStrategy.LINEAR,\n    retryAfter: 2,\n    maxRetries: 3\n  },\n  [ErrorCode.RESOURCE_LOCKED]: {\n    code: ErrorCode.RESOURCE_LOCKED,\n    category: ErrorCategory.CONFLICT,\n    message: 'Resource is currently locked by another process.',\n    retryable: true,\n    retryStrategy: RetryStrategy.EXPONENTIAL,\n    retryAfter: 5,\n    maxRetries: 3\n  },\n  \n  // Service errors\n  [ErrorCode.SERVICE_UNAVAILABLE]: {\n    code: ErrorCode.SERVICE_UNAVAILABLE,\n    category: ErrorCategory.SERVICE_UNAVAILABLE,\n    message: 'Service is temporarily unavailable. Please try again later.',\n    retryable: true,\n    retryStrategy: RetryStrategy.EXPONENTIAL,\n    retryAfter: 30,\n    maxRetries: 3\n  },\n  [ErrorCode.SERVICE_TIMEOUT]: {\n    code: ErrorCode.SERVICE_TIMEOUT,\n    category: ErrorCategory.SERVICE_UNAVAILABLE,\n    message: 'Service request timed out. Please try again.',\n    retryable: true,\n    retryStrategy: RetryStrategy.LINEAR,\n    retryAfter: 10,\n    maxRetries: 2\n  },\n  [ErrorCode.SERVICE_OVERLOADED]: {\n    code: ErrorCode.SERVICE_OVERLOADED,\n    category: ErrorCategory.SERVICE_UNAVAILABLE,\n    message: 'Service is currently overloaded. Please try again later.',\n    retryable: true,\n    retryStrategy: RetryStrategy.EXPONENTIAL_JITTER,\n    retryAfter: 60,\n    maxRetries: 3\n  },\n  \n  // External service errors\n  [ErrorCode.AZURE_OPENAI_ERROR]: {\n    code: ErrorCode.AZURE_OPENAI_ERROR,\n    category: ErrorCategory.EXTERNAL_SERVICE,\n    message: 'Azure OpenAI service error. Please try again.',\n    retryable: true,\n    retryStrategy: RetryStrategy.EXPONENTIAL,\n    retryAfter: 5,\n    maxRetries: 3\n  },\n  [ErrorCode.AZURE_SPEECH_ERROR]: {\n    code: ErrorCode.AZURE_SPEECH_ERROR,\n    category: ErrorCategory.EXTERNAL_SERVICE,\n    message: 'Azure Speech service error. Please try again.',\n    retryable: true,\n    retryStrategy: RetryStrategy.EXPONENTIAL,\n    retryAfter: 5,\n    maxRetries: 3\n  },\n  [ErrorCode.FIREBASE_ERROR]: {\n    code: ErrorCode.FIREBASE_ERROR,\n    category: ErrorCategory.EXTERNAL_SERVICE,\n    message: 'Firebase service error. Please try again.',\n    retryable: true,\n    retryStrategy: RetryStrategy.LINEAR,\n    retryAfter: 10,\n    maxRetries: 2\n  },\n  [ErrorCode.STORAGE_ERROR]: {\n    code: ErrorCode.STORAGE_ERROR,\n    category: ErrorCategory.EXTERNAL_SERVICE,\n    message: 'File storage error. Please try again.',\n    retryable: true,\n    retryStrategy: RetryStrategy.EXPONENTIAL,\n    retryAfter: 15,\n    maxRetries: 3\n  },\n  \n  // Configuration errors\n  [ErrorCode.CONFIGURATION_ERROR]: {\n    code: ErrorCode.CONFIGURATION_ERROR,\n    category: ErrorCategory.CONFIGURATION,\n    message: 'Service configuration error. Please contact support.',\n    retryable: false\n  },\n  [ErrorCode.SERVICE_NOT_CONFIGURED]: {\n    code: ErrorCode.SERVICE_NOT_CONFIGURED,\n    category: ErrorCategory.CONFIGURATION,\n    message: 'Service is not properly configured. Please contact support.',\n    retryable: false\n  },\n  \n  // Internal errors\n  [ErrorCode.INTERNAL_SERVER_ERROR]: {\n    code: ErrorCode.INTERNAL_SERVER_ERROR,\n    category: ErrorCategory.INTERNAL,\n    message: 'An internal server error occurred. Please try again later.',\n    retryable: true,\n    retryStrategy: RetryStrategy.EXPONENTIAL,\n    retryAfter: 30,\n    maxRetries: 2\n  },\n  [ErrorCode.UNHANDLED_ERROR]: {\n    code: ErrorCode.UNHANDLED_ERROR,\n    category: ErrorCategory.INTERNAL,\n    message: 'An unexpected error occurred. Please try again later.',\n    retryable: true,\n    retryStrategy: RetryStrategy.LINEAR,\n    retryAfter: 10,\n    maxRetries: 1\n  }\n};\n\n// ===== ERROR FACTORY FUNCTIONS =====\n\n/**\n * Create a structured error with optional details\n */\nexport function createStructuredError(\n  code: ErrorCode,\n  details?: Record<string, any>,\n  customMessage?: string,\n  requestId?: string\n): StructuredError {\n  const definition = ERROR_DEFINITIONS[code];\n  \n  return {\n    ...definition,\n    message: customMessage || definition.message,\n    details,\n    timestamp: new Date().toISOString(),\n    requestId\n  };\n}\n\n/**\n * Create an API error response\n */\nexport function createErrorResponse(\n  code: ErrorCode,\n  details?: Record<string, any>,\n  customMessage?: string,\n  requestId?: string\n): APIErrorResponse {\n  const error = createStructuredError(code, details, customMessage, requestId);\n  \n  // Log server errors for monitoring\n  if (error.category === ErrorCategory.INTERNAL || \n      error.category === ErrorCategory.EXTERNAL_SERVICE ||\n      error.category === ErrorCategory.CONFIGURATION) {\n    logServerError(new Error(error.message), {\n      errorCode: error.code,\n      category: error.category,\n      details: error.details,\n      requestId: error.requestId\n    });\n  }\n  \n  return {\n    error,\n    success: false,\n    data: null\n  };\n}\n\n/**\n * Create a success API response\n */\nexport function createSuccessResponse<T>(data: T): APISuccessResponse<T> {\n  return {\n    error: null,\n    success: true,\n    data\n  };\n}\n\n/**\n * Convert HTTP status to appropriate error code\n */\nexport function getErrorCodeFromHTTPStatus(status: number): ErrorCode {\n  switch (status) {\n    case 400: return ErrorCode.INVALID_REQUEST;\n    case 401: return ErrorCode.AUTH_TOKEN_INVALID;\n    case 403: return ErrorCode.ACCESS_DENIED;\n    case 404: return ErrorCode.NOT_FOUND;\n    case 409: return ErrorCode.RESOURCE_CONFLICT;\n    case 413: return ErrorCode.FILE_TOO_LARGE;\n    case 429: return ErrorCode.RATE_LIMIT_EXCEEDED;\n    case 500: return ErrorCode.INTERNAL_SERVER_ERROR;\n    case 502: return ErrorCode.SERVICE_UNAVAILABLE;\n    case 503: return ErrorCode.SERVICE_OVERLOADED;\n    case 504: return ErrorCode.SERVICE_TIMEOUT;\n    default: return ErrorCode.UNHANDLED_ERROR;\n  }\n}\n\n/**\n * Get HTTP status from error code\n */\nexport function getHTTPStatusFromErrorCode(code: ErrorCode): number {\n  const error = ERROR_DEFINITIONS[code];\n  \n  switch (error.category) {\n    case ErrorCategory.AUTHENTICATION:\n      return 401;\n    case ErrorCategory.AUTHORIZATION:\n      return 403;\n    case ErrorCategory.VALIDATION:\n      return 400;\n    case ErrorCategory.RATE_LIMIT:\n      return 429;\n    case ErrorCategory.NOT_FOUND:\n      return 404;\n    case ErrorCategory.CONFLICT:\n      return 409;\n    case ErrorCategory.SERVICE_UNAVAILABLE:\n    case ErrorCategory.EXTERNAL_SERVICE:\n      return 503;\n    case ErrorCategory.CONFIGURATION:\n    case ErrorCategory.INTERNAL:\n    default:\n      return 500;\n  }\n}\n\n/**\n * Check if an error is retryable\n */\nexport function isRetryableError(error: StructuredError): boolean {\n  return error.retryable === true;\n}\n\n/**\n * Get retry delay in milliseconds based on attempt number\n */\nexport function getRetryDelay(\n  error: StructuredError, \n  attemptNumber: number,\n  baseDelay?: number\n): number {\n  const base = baseDelay || (error.retryAfter || 1) * 1000; // Convert to milliseconds\n  \n  switch (error.retryStrategy) {\n    case RetryStrategy.IMMEDIATE:\n      return 0;\n    \n    case RetryStrategy.LINEAR:\n      return base * attemptNumber;\n    \n    case RetryStrategy.EXPONENTIAL:\n      return base * Math.pow(2, attemptNumber - 1);\n    \n    case RetryStrategy.EXPONENTIAL_JITTER:\n      const exponentialDelay = base * Math.pow(2, attemptNumber - 1);\n      const jitter = Math.random() * 0.1 * exponentialDelay; // \xB110% jitter\n      return exponentialDelay + jitter;\n    \n    case RetryStrategy.NONE:\n    default:\n      return base;\n  }\n}\n\n/**\n * Convert unknown error to structured error\n */\nexport function toStructuredError(\n  error: unknown,\n  defaultCode: ErrorCode = ErrorCode.UNHANDLED_ERROR,\n  requestId?: string\n): StructuredError {\n  if (error && typeof error === 'object' && 'code' in error) {\n    // Already a structured error\n    return error as StructuredError;\n  }\n  \n  if (error instanceof Error) {\n    return createStructuredError(\n      defaultCode,\n      { originalMessage: error.message, stack: error.stack },\n      error.message,\n      requestId\n    );\n  }\n  \n  return createStructuredError(\n    defaultCode,\n    { originalError: String(error) },\n    String(error),\n    requestId\n  );\n}\n\n// ===== NEXT.JS RESPONSE HELPERS =====\n\n/**\n * Send a structured error response in Next.js API routes\n */\nexport function sendErrorResponse(\n  res: any, // NextResponse or Response\n  code: ErrorCode,\n  details?: Record<string, any>,\n  customMessage?: string,\n  requestId?: string\n) {\n  const errorResponse = createErrorResponse(code, details, customMessage, requestId);\n  const status = getHTTPStatusFromErrorCode(code);\n  \n  // Set retry headers if applicable\n  if (errorResponse.error.retryable && errorResponse.error.retryAfter) {\n    res.headers.set('X-Retry-After', String(errorResponse.error.retryAfter));\n    res.headers.set('Retry-After', String(errorResponse.error.retryAfter));\n  }\n  \n  return new Response(JSON.stringify(errorResponse), {\n    status,\n    headers: {\n      'Content-Type': 'application/json',\n      ...Object.fromEntries(res.headers || [])\n    }\n  });\n}\n\n/**\n * Send a structured success response in Next.js API routes\n */\nexport function sendSuccessResponse<T>(data: T, status: number = 200) {\n  const successResponse = createSuccessResponse(data);\n  \n  return new Response(JSON.stringify(successResponse), {\n    status,\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c4cd8a4a1fa808b2ff1491cd1fc80a73ee055695"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_9dja3k20c = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_9dja3k20c();
cov_9dja3k20c().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_9dja3k20c().s[1]++;
exports.RetryStrategy = exports.ErrorCode = exports.ErrorCategory = void 0;
/* istanbul ignore next */
cov_9dja3k20c().s[2]++;
exports.createStructuredError = createStructuredError;
/* istanbul ignore next */
cov_9dja3k20c().s[3]++;
exports.createErrorResponse = createErrorResponse;
/* istanbul ignore next */
cov_9dja3k20c().s[4]++;
exports.createSuccessResponse = createSuccessResponse;
/* istanbul ignore next */
cov_9dja3k20c().s[5]++;
exports.getErrorCodeFromHTTPStatus = getErrorCodeFromHTTPStatus;
/* istanbul ignore next */
cov_9dja3k20c().s[6]++;
exports.getHTTPStatusFromErrorCode = getHTTPStatusFromErrorCode;
/* istanbul ignore next */
cov_9dja3k20c().s[7]++;
exports.isRetryableError = isRetryableError;
/* istanbul ignore next */
cov_9dja3k20c().s[8]++;
exports.getRetryDelay = getRetryDelay;
/* istanbul ignore next */
cov_9dja3k20c().s[9]++;
exports.toStructuredError = toStructuredError;
/* istanbul ignore next */
cov_9dja3k20c().s[10]++;
exports.sendErrorResponse = sendErrorResponse;
/* istanbul ignore next */
cov_9dja3k20c().s[11]++;
exports.sendSuccessResponse = sendSuccessResponse;
const errors_1 =
/* istanbul ignore next */
(cov_9dja3k20c().s[12]++, require("@/lib/errors"));
// ===== ERROR CATEGORIES =====
var ErrorCategory;
/* istanbul ignore next */
cov_9dja3k20c().s[13]++;
(function (ErrorCategory) {
  /* istanbul ignore next */
  cov_9dja3k20c().f[0]++;
  cov_9dja3k20c().s[14]++;
  ErrorCategory["AUTHENTICATION"] = "AUTHENTICATION";
  /* istanbul ignore next */
  cov_9dja3k20c().s[15]++;
  ErrorCategory["AUTHORIZATION"] = "AUTHORIZATION";
  /* istanbul ignore next */
  cov_9dja3k20c().s[16]++;
  ErrorCategory["VALIDATION"] = "VALIDATION";
  /* istanbul ignore next */
  cov_9dja3k20c().s[17]++;
  ErrorCategory["RATE_LIMIT"] = "RATE_LIMIT";
  /* istanbul ignore next */
  cov_9dja3k20c().s[18]++;
  ErrorCategory["SERVICE_UNAVAILABLE"] = "SERVICE_UNAVAILABLE";
  /* istanbul ignore next */
  cov_9dja3k20c().s[19]++;
  ErrorCategory["EXTERNAL_SERVICE"] = "EXTERNAL_SERVICE";
  /* istanbul ignore next */
  cov_9dja3k20c().s[20]++;
  ErrorCategory["CONFIGURATION"] = "CONFIGURATION";
  /* istanbul ignore next */
  cov_9dja3k20c().s[21]++;
  ErrorCategory["NOT_FOUND"] = "NOT_FOUND";
  /* istanbul ignore next */
  cov_9dja3k20c().s[22]++;
  ErrorCategory["CONFLICT"] = "CONFLICT";
  /* istanbul ignore next */
  cov_9dja3k20c().s[23]++;
  ErrorCategory["INTERNAL"] = "INTERNAL";
})(
/* istanbul ignore next */
(cov_9dja3k20c().b[0][0]++, ErrorCategory) ||
/* istanbul ignore next */
(cov_9dja3k20c().b[0][1]++, exports.ErrorCategory = ErrorCategory = {}));
// ===== ERROR CODES =====
var ErrorCode;
/* istanbul ignore next */
cov_9dja3k20c().s[24]++;
(function (ErrorCode) {
  /* istanbul ignore next */
  cov_9dja3k20c().f[1]++;
  cov_9dja3k20c().s[25]++;
  // Authentication errors (4xx)
  ErrorCode["AUTH_TOKEN_MISSING"] = "AUTH_TOKEN_MISSING";
  /* istanbul ignore next */
  cov_9dja3k20c().s[26]++;
  ErrorCode["AUTH_TOKEN_INVALID"] = "AUTH_TOKEN_INVALID";
  /* istanbul ignore next */
  cov_9dja3k20c().s[27]++;
  ErrorCode["AUTH_TOKEN_EXPIRED"] = "AUTH_TOKEN_EXPIRED";
  /* istanbul ignore next */
  cov_9dja3k20c().s[28]++;
  ErrorCode["AUTH_SESSION_EXPIRED"] = "AUTH_SESSION_EXPIRED";
  // Authorization errors (4xx)
  /* istanbul ignore next */
  cov_9dja3k20c().s[29]++;
  ErrorCode["ACCESS_DENIED"] = "ACCESS_DENIED";
  /* istanbul ignore next */
  cov_9dja3k20c().s[30]++;
  ErrorCode["INSUFFICIENT_PERMISSIONS"] = "INSUFFICIENT_PERMISSIONS";
  /* istanbul ignore next */
  cov_9dja3k20c().s[31]++;
  ErrorCode["QUOTA_EXCEEDED"] = "QUOTA_EXCEEDED";
  /* istanbul ignore next */
  cov_9dja3k20c().s[32]++;
  ErrorCode["LICENSE_REQUIRED"] = "LICENSE_REQUIRED";
  // Validation errors (4xx)
  /* istanbul ignore next */
  cov_9dja3k20c().s[33]++;
  ErrorCode["INVALID_REQUEST"] = "INVALID_REQUEST";
  /* istanbul ignore next */
  cov_9dja3k20c().s[34]++;
  ErrorCode["MISSING_REQUIRED_FIELD"] = "MISSING_REQUIRED_FIELD";
  /* istanbul ignore next */
  cov_9dja3k20c().s[35]++;
  ErrorCode["INVALID_FILE_TYPE"] = "INVALID_FILE_TYPE";
  /* istanbul ignore next */
  cov_9dja3k20c().s[36]++;
  ErrorCode["FILE_TOO_LARGE"] = "FILE_TOO_LARGE";
  /* istanbul ignore next */
  cov_9dja3k20c().s[37]++;
  ErrorCode["INVALID_PARAMETER"] = "INVALID_PARAMETER";
  // Rate limiting (4xx)
  /* istanbul ignore next */
  cov_9dja3k20c().s[38]++;
  ErrorCode["RATE_LIMIT_EXCEEDED"] = "RATE_LIMIT_EXCEEDED";
  /* istanbul ignore next */
  cov_9dja3k20c().s[39]++;
  ErrorCode["CONCURRENT_REQUEST_LIMIT"] = "CONCURRENT_REQUEST_LIMIT";
  // Resource errors (4xx)
  /* istanbul ignore next */
  cov_9dja3k20c().s[40]++;
  ErrorCode["NOT_FOUND"] = "NOT_FOUND";
  /* istanbul ignore next */
  cov_9dja3k20c().s[41]++;
  ErrorCode["RESOURCE_CONFLICT"] = "RESOURCE_CONFLICT";
  /* istanbul ignore next */
  cov_9dja3k20c().s[42]++;
  ErrorCode["RESOURCE_LOCKED"] = "RESOURCE_LOCKED";
  // Service errors (5xx)
  /* istanbul ignore next */
  cov_9dja3k20c().s[43]++;
  ErrorCode["SERVICE_UNAVAILABLE"] = "SERVICE_UNAVAILABLE";
  /* istanbul ignore next */
  cov_9dja3k20c().s[44]++;
  ErrorCode["SERVICE_TIMEOUT"] = "SERVICE_TIMEOUT";
  /* istanbul ignore next */
  cov_9dja3k20c().s[45]++;
  ErrorCode["SERVICE_OVERLOADED"] = "SERVICE_OVERLOADED";
  // External service errors (5xx)
  /* istanbul ignore next */
  cov_9dja3k20c().s[46]++;
  ErrorCode["AZURE_OPENAI_ERROR"] = "AZURE_OPENAI_ERROR";
  /* istanbul ignore next */
  cov_9dja3k20c().s[47]++;
  ErrorCode["AZURE_SPEECH_ERROR"] = "AZURE_SPEECH_ERROR";
  /* istanbul ignore next */
  cov_9dja3k20c().s[48]++;
  ErrorCode["FIREBASE_ERROR"] = "FIREBASE_ERROR";
  /* istanbul ignore next */
  cov_9dja3k20c().s[49]++;
  ErrorCode["STORAGE_ERROR"] = "STORAGE_ERROR";
  // Configuration errors (5xx)
  /* istanbul ignore next */
  cov_9dja3k20c().s[50]++;
  ErrorCode["CONFIGURATION_ERROR"] = "CONFIGURATION_ERROR";
  /* istanbul ignore next */
  cov_9dja3k20c().s[51]++;
  ErrorCode["SERVICE_NOT_CONFIGURED"] = "SERVICE_NOT_CONFIGURED";
  // Internal errors (5xx)
  /* istanbul ignore next */
  cov_9dja3k20c().s[52]++;
  ErrorCode["INTERNAL_SERVER_ERROR"] = "INTERNAL_SERVER_ERROR";
  /* istanbul ignore next */
  cov_9dja3k20c().s[53]++;
  ErrorCode["UNHANDLED_ERROR"] = "UNHANDLED_ERROR";
})(
/* istanbul ignore next */
(cov_9dja3k20c().b[1][0]++, ErrorCode) ||
/* istanbul ignore next */
(cov_9dja3k20c().b[1][1]++, exports.ErrorCode = ErrorCode = {}));
// ===== RETRY STRATEGIES =====
var RetryStrategy;
/* istanbul ignore next */
cov_9dja3k20c().s[54]++;
(function (RetryStrategy) {
  /* istanbul ignore next */
  cov_9dja3k20c().f[2]++;
  cov_9dja3k20c().s[55]++;
  RetryStrategy["NONE"] = "NONE";
  /* istanbul ignore next */
  cov_9dja3k20c().s[56]++;
  RetryStrategy["IMMEDIATE"] = "IMMEDIATE";
  /* istanbul ignore next */
  cov_9dja3k20c().s[57]++;
  RetryStrategy["LINEAR"] = "LINEAR";
  /* istanbul ignore next */
  cov_9dja3k20c().s[58]++;
  RetryStrategy["EXPONENTIAL"] = "EXPONENTIAL";
  /* istanbul ignore next */
  cov_9dja3k20c().s[59]++;
  RetryStrategy["EXPONENTIAL_JITTER"] = "EXPONENTIAL_JITTER"; // Exponential with random jitter
})(
/* istanbul ignore next */
(cov_9dja3k20c().b[2][0]++, RetryStrategy) ||
/* istanbul ignore next */
(cov_9dja3k20c().b[2][1]++, exports.RetryStrategy = RetryStrategy = {}));
// ===== ERROR DEFINITIONS =====
const ERROR_DEFINITIONS =
/* istanbul ignore next */
(cov_9dja3k20c().s[60]++, {
  // Authentication errors
  [ErrorCode.AUTH_TOKEN_MISSING]: {
    code: ErrorCode.AUTH_TOKEN_MISSING,
    category: ErrorCategory.AUTHENTICATION,
    message: 'Authentication token is required but was not provided.',
    retryable: false
  },
  [ErrorCode.AUTH_TOKEN_INVALID]: {
    code: ErrorCode.AUTH_TOKEN_INVALID,
    category: ErrorCategory.AUTHENTICATION,
    message: 'The provided authentication token is invalid.',
    retryable: false
  },
  [ErrorCode.AUTH_TOKEN_EXPIRED]: {
    code: ErrorCode.AUTH_TOKEN_EXPIRED,
    category: ErrorCategory.AUTHENTICATION,
    message: 'Authentication token has expired. Please sign in again.',
    retryable: false
  },
  [ErrorCode.AUTH_SESSION_EXPIRED]: {
    code: ErrorCode.AUTH_SESSION_EXPIRED,
    category: ErrorCategory.AUTHENTICATION,
    message: 'Your session has expired. Please sign in again.',
    retryable: false
  },
  // Authorization errors
  [ErrorCode.ACCESS_DENIED]: {
    code: ErrorCode.ACCESS_DENIED,
    category: ErrorCategory.AUTHORIZATION,
    message: 'Access denied. You do not have permission to perform this action.',
    retryable: false
  },
  [ErrorCode.INSUFFICIENT_PERMISSIONS]: {
    code: ErrorCode.INSUFFICIENT_PERMISSIONS,
    category: ErrorCategory.AUTHORIZATION,
    message: 'Insufficient permissions to access this resource.',
    retryable: false
  },
  [ErrorCode.QUOTA_EXCEEDED]: {
    code: ErrorCode.QUOTA_EXCEEDED,
    category: ErrorCategory.AUTHORIZATION,
    message: 'Usage quota exceeded. Please upgrade your plan or wait for quota reset.',
    retryable: false
  },
  [ErrorCode.LICENSE_REQUIRED]: {
    code: ErrorCode.LICENSE_REQUIRED,
    category: ErrorCategory.AUTHORIZATION,
    message: 'A valid license is required to access this feature.',
    retryable: false
  },
  // Validation errors
  [ErrorCode.INVALID_REQUEST]: {
    code: ErrorCode.INVALID_REQUEST,
    category: ErrorCategory.VALIDATION,
    message: 'The request is invalid or malformed.',
    retryable: false
  },
  [ErrorCode.MISSING_REQUIRED_FIELD]: {
    code: ErrorCode.MISSING_REQUIRED_FIELD,
    category: ErrorCategory.VALIDATION,
    message: 'Required field is missing from the request.',
    retryable: false
  },
  [ErrorCode.INVALID_FILE_TYPE]: {
    code: ErrorCode.INVALID_FILE_TYPE,
    category: ErrorCategory.VALIDATION,
    message: 'Invalid file type. Please upload a supported file format.',
    retryable: false
  },
  [ErrorCode.FILE_TOO_LARGE]: {
    code: ErrorCode.FILE_TOO_LARGE,
    category: ErrorCategory.VALIDATION,
    message: 'File size exceeds the maximum allowed limit.',
    retryable: false
  },
  [ErrorCode.INVALID_PARAMETER]: {
    code: ErrorCode.INVALID_PARAMETER,
    category: ErrorCategory.VALIDATION,
    message: 'One or more parameters are invalid.',
    retryable: false
  },
  // Rate limiting
  [ErrorCode.RATE_LIMIT_EXCEEDED]: {
    code: ErrorCode.RATE_LIMIT_EXCEEDED,
    category: ErrorCategory.RATE_LIMIT,
    message: 'Rate limit exceeded. Please try again later.',
    retryable: true,
    retryStrategy: RetryStrategy.EXPONENTIAL,
    retryAfter: 60,
    maxRetries: 3
  },
  [ErrorCode.CONCURRENT_REQUEST_LIMIT]: {
    code: ErrorCode.CONCURRENT_REQUEST_LIMIT,
    category: ErrorCategory.RATE_LIMIT,
    message: 'Too many concurrent requests. Please wait and try again.',
    retryable: true,
    retryStrategy: RetryStrategy.LINEAR,
    retryAfter: 5,
    maxRetries: 5
  },
  // Resource errors
  [ErrorCode.NOT_FOUND]: {
    code: ErrorCode.NOT_FOUND,
    category: ErrorCategory.NOT_FOUND,
    message: 'The requested resource was not found.',
    retryable: false
  },
  [ErrorCode.RESOURCE_CONFLICT]: {
    code: ErrorCode.RESOURCE_CONFLICT,
    category: ErrorCategory.CONFLICT,
    message: 'Resource conflict. The resource is in an inconsistent state.',
    retryable: true,
    retryStrategy: RetryStrategy.LINEAR,
    retryAfter: 2,
    maxRetries: 3
  },
  [ErrorCode.RESOURCE_LOCKED]: {
    code: ErrorCode.RESOURCE_LOCKED,
    category: ErrorCategory.CONFLICT,
    message: 'Resource is currently locked by another process.',
    retryable: true,
    retryStrategy: RetryStrategy.EXPONENTIAL,
    retryAfter: 5,
    maxRetries: 3
  },
  // Service errors
  [ErrorCode.SERVICE_UNAVAILABLE]: {
    code: ErrorCode.SERVICE_UNAVAILABLE,
    category: ErrorCategory.SERVICE_UNAVAILABLE,
    message: 'Service is temporarily unavailable. Please try again later.',
    retryable: true,
    retryStrategy: RetryStrategy.EXPONENTIAL,
    retryAfter: 30,
    maxRetries: 3
  },
  [ErrorCode.SERVICE_TIMEOUT]: {
    code: ErrorCode.SERVICE_TIMEOUT,
    category: ErrorCategory.SERVICE_UNAVAILABLE,
    message: 'Service request timed out. Please try again.',
    retryable: true,
    retryStrategy: RetryStrategy.LINEAR,
    retryAfter: 10,
    maxRetries: 2
  },
  [ErrorCode.SERVICE_OVERLOADED]: {
    code: ErrorCode.SERVICE_OVERLOADED,
    category: ErrorCategory.SERVICE_UNAVAILABLE,
    message: 'Service is currently overloaded. Please try again later.',
    retryable: true,
    retryStrategy: RetryStrategy.EXPONENTIAL_JITTER,
    retryAfter: 60,
    maxRetries: 3
  },
  // External service errors
  [ErrorCode.AZURE_OPENAI_ERROR]: {
    code: ErrorCode.AZURE_OPENAI_ERROR,
    category: ErrorCategory.EXTERNAL_SERVICE,
    message: 'Azure OpenAI service error. Please try again.',
    retryable: true,
    retryStrategy: RetryStrategy.EXPONENTIAL,
    retryAfter: 5,
    maxRetries: 3
  },
  [ErrorCode.AZURE_SPEECH_ERROR]: {
    code: ErrorCode.AZURE_SPEECH_ERROR,
    category: ErrorCategory.EXTERNAL_SERVICE,
    message: 'Azure Speech service error. Please try again.',
    retryable: true,
    retryStrategy: RetryStrategy.EXPONENTIAL,
    retryAfter: 5,
    maxRetries: 3
  },
  [ErrorCode.FIREBASE_ERROR]: {
    code: ErrorCode.FIREBASE_ERROR,
    category: ErrorCategory.EXTERNAL_SERVICE,
    message: 'Firebase service error. Please try again.',
    retryable: true,
    retryStrategy: RetryStrategy.LINEAR,
    retryAfter: 10,
    maxRetries: 2
  },
  [ErrorCode.STORAGE_ERROR]: {
    code: ErrorCode.STORAGE_ERROR,
    category: ErrorCategory.EXTERNAL_SERVICE,
    message: 'File storage error. Please try again.',
    retryable: true,
    retryStrategy: RetryStrategy.EXPONENTIAL,
    retryAfter: 15,
    maxRetries: 3
  },
  // Configuration errors
  [ErrorCode.CONFIGURATION_ERROR]: {
    code: ErrorCode.CONFIGURATION_ERROR,
    category: ErrorCategory.CONFIGURATION,
    message: 'Service configuration error. Please contact support.',
    retryable: false
  },
  [ErrorCode.SERVICE_NOT_CONFIGURED]: {
    code: ErrorCode.SERVICE_NOT_CONFIGURED,
    category: ErrorCategory.CONFIGURATION,
    message: 'Service is not properly configured. Please contact support.',
    retryable: false
  },
  // Internal errors
  [ErrorCode.INTERNAL_SERVER_ERROR]: {
    code: ErrorCode.INTERNAL_SERVER_ERROR,
    category: ErrorCategory.INTERNAL,
    message: 'An internal server error occurred. Please try again later.',
    retryable: true,
    retryStrategy: RetryStrategy.EXPONENTIAL,
    retryAfter: 30,
    maxRetries: 2
  },
  [ErrorCode.UNHANDLED_ERROR]: {
    code: ErrorCode.UNHANDLED_ERROR,
    category: ErrorCategory.INTERNAL,
    message: 'An unexpected error occurred. Please try again later.',
    retryable: true,
    retryStrategy: RetryStrategy.LINEAR,
    retryAfter: 10,
    maxRetries: 1
  }
});
// ===== ERROR FACTORY FUNCTIONS =====
/**
 * Create a structured error with optional details
 */
function createStructuredError(code, details, customMessage, requestId) {
  /* istanbul ignore next */
  cov_9dja3k20c().f[3]++;
  const definition =
  /* istanbul ignore next */
  (cov_9dja3k20c().s[61]++, ERROR_DEFINITIONS[code]);
  /* istanbul ignore next */
  cov_9dja3k20c().s[62]++;
  return Object.assign(Object.assign({}, definition), {
    message:
    /* istanbul ignore next */
    (cov_9dja3k20c().b[3][0]++, customMessage) ||
    /* istanbul ignore next */
    (cov_9dja3k20c().b[3][1]++, definition.message),
    details,
    timestamp: new Date().toISOString(),
    requestId
  });
}
/**
 * Create an API error response
 */
function createErrorResponse(code, details, customMessage, requestId) {
  /* istanbul ignore next */
  cov_9dja3k20c().f[4]++;
  const error =
  /* istanbul ignore next */
  (cov_9dja3k20c().s[63]++, createStructuredError(code, details, customMessage, requestId));
  // Log server errors for monitoring
  /* istanbul ignore next */
  cov_9dja3k20c().s[64]++;
  if (
  /* istanbul ignore next */
  (cov_9dja3k20c().b[5][0]++, error.category === ErrorCategory.INTERNAL) ||
  /* istanbul ignore next */
  (cov_9dja3k20c().b[5][1]++, error.category === ErrorCategory.EXTERNAL_SERVICE) ||
  /* istanbul ignore next */
  (cov_9dja3k20c().b[5][2]++, error.category === ErrorCategory.CONFIGURATION)) {
    /* istanbul ignore next */
    cov_9dja3k20c().b[4][0]++;
    cov_9dja3k20c().s[65]++;
    (0, errors_1.logServerError)(new Error(error.message), {
      errorCode: error.code,
      category: error.category,
      details: error.details,
      requestId: error.requestId
    });
  } else
  /* istanbul ignore next */
  {
    cov_9dja3k20c().b[4][1]++;
  }
  cov_9dja3k20c().s[66]++;
  return {
    error,
    success: false,
    data: null
  };
}
/**
 * Create a success API response
 */
function createSuccessResponse(data) {
  /* istanbul ignore next */
  cov_9dja3k20c().f[5]++;
  cov_9dja3k20c().s[67]++;
  return {
    error: null,
    success: true,
    data
  };
}
/**
 * Convert HTTP status to appropriate error code
 */
function getErrorCodeFromHTTPStatus(status) {
  /* istanbul ignore next */
  cov_9dja3k20c().f[6]++;
  cov_9dja3k20c().s[68]++;
  switch (status) {
    case 400:
      /* istanbul ignore next */
      cov_9dja3k20c().b[6][0]++;
      cov_9dja3k20c().s[69]++;
      return ErrorCode.INVALID_REQUEST;
    case 401:
      /* istanbul ignore next */
      cov_9dja3k20c().b[6][1]++;
      cov_9dja3k20c().s[70]++;
      return ErrorCode.AUTH_TOKEN_INVALID;
    case 403:
      /* istanbul ignore next */
      cov_9dja3k20c().b[6][2]++;
      cov_9dja3k20c().s[71]++;
      return ErrorCode.ACCESS_DENIED;
    case 404:
      /* istanbul ignore next */
      cov_9dja3k20c().b[6][3]++;
      cov_9dja3k20c().s[72]++;
      return ErrorCode.NOT_FOUND;
    case 409:
      /* istanbul ignore next */
      cov_9dja3k20c().b[6][4]++;
      cov_9dja3k20c().s[73]++;
      return ErrorCode.RESOURCE_CONFLICT;
    case 413:
      /* istanbul ignore next */
      cov_9dja3k20c().b[6][5]++;
      cov_9dja3k20c().s[74]++;
      return ErrorCode.FILE_TOO_LARGE;
    case 429:
      /* istanbul ignore next */
      cov_9dja3k20c().b[6][6]++;
      cov_9dja3k20c().s[75]++;
      return ErrorCode.RATE_LIMIT_EXCEEDED;
    case 500:
      /* istanbul ignore next */
      cov_9dja3k20c().b[6][7]++;
      cov_9dja3k20c().s[76]++;
      return ErrorCode.INTERNAL_SERVER_ERROR;
    case 502:
      /* istanbul ignore next */
      cov_9dja3k20c().b[6][8]++;
      cov_9dja3k20c().s[77]++;
      return ErrorCode.SERVICE_UNAVAILABLE;
    case 503:
      /* istanbul ignore next */
      cov_9dja3k20c().b[6][9]++;
      cov_9dja3k20c().s[78]++;
      return ErrorCode.SERVICE_OVERLOADED;
    case 504:
      /* istanbul ignore next */
      cov_9dja3k20c().b[6][10]++;
      cov_9dja3k20c().s[79]++;
      return ErrorCode.SERVICE_TIMEOUT;
    default:
      /* istanbul ignore next */
      cov_9dja3k20c().b[6][11]++;
      cov_9dja3k20c().s[80]++;
      return ErrorCode.UNHANDLED_ERROR;
  }
}
/**
 * Get HTTP status from error code
 */
function getHTTPStatusFromErrorCode(code) {
  /* istanbul ignore next */
  cov_9dja3k20c().f[7]++;
  const error =
  /* istanbul ignore next */
  (cov_9dja3k20c().s[81]++, ERROR_DEFINITIONS[code]);
  /* istanbul ignore next */
  cov_9dja3k20c().s[82]++;
  switch (error.category) {
    case ErrorCategory.AUTHENTICATION:
      /* istanbul ignore next */
      cov_9dja3k20c().b[7][0]++;
      cov_9dja3k20c().s[83]++;
      return 401;
    case ErrorCategory.AUTHORIZATION:
      /* istanbul ignore next */
      cov_9dja3k20c().b[7][1]++;
      cov_9dja3k20c().s[84]++;
      return 403;
    case ErrorCategory.VALIDATION:
      /* istanbul ignore next */
      cov_9dja3k20c().b[7][2]++;
      cov_9dja3k20c().s[85]++;
      return 400;
    case ErrorCategory.RATE_LIMIT:
      /* istanbul ignore next */
      cov_9dja3k20c().b[7][3]++;
      cov_9dja3k20c().s[86]++;
      return 429;
    case ErrorCategory.NOT_FOUND:
      /* istanbul ignore next */
      cov_9dja3k20c().b[7][4]++;
      cov_9dja3k20c().s[87]++;
      return 404;
    case ErrorCategory.CONFLICT:
      /* istanbul ignore next */
      cov_9dja3k20c().b[7][5]++;
      cov_9dja3k20c().s[88]++;
      return 409;
    case ErrorCategory.SERVICE_UNAVAILABLE:
      /* istanbul ignore next */
      cov_9dja3k20c().b[7][6]++;
    case ErrorCategory.EXTERNAL_SERVICE:
      /* istanbul ignore next */
      cov_9dja3k20c().b[7][7]++;
      cov_9dja3k20c().s[89]++;
      return 503;
    case ErrorCategory.CONFIGURATION:
      /* istanbul ignore next */
      cov_9dja3k20c().b[7][8]++;
    case ErrorCategory.INTERNAL:
      /* istanbul ignore next */
      cov_9dja3k20c().b[7][9]++;
    default:
      /* istanbul ignore next */
      cov_9dja3k20c().b[7][10]++;
      cov_9dja3k20c().s[90]++;
      return 500;
  }
}
/**
 * Check if an error is retryable
 */
function isRetryableError(error) {
  /* istanbul ignore next */
  cov_9dja3k20c().f[8]++;
  cov_9dja3k20c().s[91]++;
  return error.retryable === true;
}
/**
 * Get retry delay in milliseconds based on attempt number
 */
function getRetryDelay(error, attemptNumber, baseDelay) {
  /* istanbul ignore next */
  cov_9dja3k20c().f[9]++;
  const base =
  /* istanbul ignore next */
  (cov_9dja3k20c().s[92]++,
  /* istanbul ignore next */
  (cov_9dja3k20c().b[8][0]++, baseDelay) ||
  /* istanbul ignore next */
  (cov_9dja3k20c().b[8][1]++, (
  /* istanbul ignore next */
  (cov_9dja3k20c().b[9][0]++, error.retryAfter) ||
  /* istanbul ignore next */
  (cov_9dja3k20c().b[9][1]++, 1)) * 1000)); // Convert to milliseconds
  /* istanbul ignore next */
  cov_9dja3k20c().s[93]++;
  switch (error.retryStrategy) {
    case RetryStrategy.IMMEDIATE:
      /* istanbul ignore next */
      cov_9dja3k20c().b[10][0]++;
      cov_9dja3k20c().s[94]++;
      return 0;
    case RetryStrategy.LINEAR:
      /* istanbul ignore next */
      cov_9dja3k20c().b[10][1]++;
      cov_9dja3k20c().s[95]++;
      return base * attemptNumber;
    case RetryStrategy.EXPONENTIAL:
      /* istanbul ignore next */
      cov_9dja3k20c().b[10][2]++;
      cov_9dja3k20c().s[96]++;
      return base * Math.pow(2, attemptNumber - 1);
    case RetryStrategy.EXPONENTIAL_JITTER:
      /* istanbul ignore next */
      cov_9dja3k20c().b[10][3]++;
      const exponentialDelay =
      /* istanbul ignore next */
      (cov_9dja3k20c().s[97]++, base * Math.pow(2, attemptNumber - 1));
      const jitter =
      /* istanbul ignore next */
      (cov_9dja3k20c().s[98]++, Math.random() * 0.1 * exponentialDelay); // ±10% jitter
      /* istanbul ignore next */
      cov_9dja3k20c().s[99]++;
      return exponentialDelay + jitter;
    case RetryStrategy.NONE:
      /* istanbul ignore next */
      cov_9dja3k20c().b[10][4]++;
    default:
      /* istanbul ignore next */
      cov_9dja3k20c().b[10][5]++;
      cov_9dja3k20c().s[100]++;
      return base;
  }
}
/**
 * Convert unknown error to structured error
 */
function toStructuredError(error, defaultCode =
/* istanbul ignore next */
(cov_9dja3k20c().b[11][0]++, ErrorCode.UNHANDLED_ERROR), requestId) {
  /* istanbul ignore next */
  cov_9dja3k20c().f[10]++;
  cov_9dja3k20c().s[101]++;
  if (
  /* istanbul ignore next */
  (cov_9dja3k20c().b[13][0]++, error) &&
  /* istanbul ignore next */
  (cov_9dja3k20c().b[13][1]++, typeof error === 'object') &&
  /* istanbul ignore next */
  (cov_9dja3k20c().b[13][2]++, 'code' in error)) {
    /* istanbul ignore next */
    cov_9dja3k20c().b[12][0]++;
    cov_9dja3k20c().s[102]++;
    // Already a structured error
    return error;
  } else
  /* istanbul ignore next */
  {
    cov_9dja3k20c().b[12][1]++;
  }
  cov_9dja3k20c().s[103]++;
  if (error instanceof Error) {
    /* istanbul ignore next */
    cov_9dja3k20c().b[14][0]++;
    cov_9dja3k20c().s[104]++;
    return createStructuredError(defaultCode, {
      originalMessage: error.message,
      stack: error.stack
    }, error.message, requestId);
  } else
  /* istanbul ignore next */
  {
    cov_9dja3k20c().b[14][1]++;
  }
  cov_9dja3k20c().s[105]++;
  return createStructuredError(defaultCode, {
    originalError: String(error)
  }, String(error), requestId);
}
// ===== NEXT.JS RESPONSE HELPERS =====
/**
 * Send a structured error response in Next.js API routes
 */
function sendErrorResponse(res,
// NextResponse or Response
code, details, customMessage, requestId) {
  /* istanbul ignore next */
  cov_9dja3k20c().f[11]++;
  const errorResponse =
  /* istanbul ignore next */
  (cov_9dja3k20c().s[106]++, createErrorResponse(code, details, customMessage, requestId));
  const status =
  /* istanbul ignore next */
  (cov_9dja3k20c().s[107]++, getHTTPStatusFromErrorCode(code));
  // Set retry headers if applicable
  /* istanbul ignore next */
  cov_9dja3k20c().s[108]++;
  if (
  /* istanbul ignore next */
  (cov_9dja3k20c().b[16][0]++, errorResponse.error.retryable) &&
  /* istanbul ignore next */
  (cov_9dja3k20c().b[16][1]++, errorResponse.error.retryAfter)) {
    /* istanbul ignore next */
    cov_9dja3k20c().b[15][0]++;
    cov_9dja3k20c().s[109]++;
    res.headers.set('X-Retry-After', String(errorResponse.error.retryAfter));
    /* istanbul ignore next */
    cov_9dja3k20c().s[110]++;
    res.headers.set('Retry-After', String(errorResponse.error.retryAfter));
  } else
  /* istanbul ignore next */
  {
    cov_9dja3k20c().b[15][1]++;
  }
  cov_9dja3k20c().s[111]++;
  return new Response(JSON.stringify(errorResponse), {
    status,
    headers: Object.assign({
      'Content-Type': 'application/json'
    }, Object.fromEntries(
    /* istanbul ignore next */
    (cov_9dja3k20c().b[17][0]++, res.headers) ||
    /* istanbul ignore next */
    (cov_9dja3k20c().b[17][1]++, [])))
  });
}
/**
 * Send a structured success response in Next.js API routes
 */
function sendSuccessResponse(data, status =
/* istanbul ignore next */
(cov_9dja3k20c().b[18][0]++, 200)) {
  /* istanbul ignore next */
  cov_9dja3k20c().f[12]++;
  const successResponse =
  /* istanbul ignore next */
  (cov_9dja3k20c().s[112]++, createSuccessResponse(data));
  /* istanbul ignore next */
  cov_9dja3k20c().s[113]++;
  return new Response(JSON.stringify(successResponse), {
    status,
    headers: {
      'Content-Type': 'application/json'
    }
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,