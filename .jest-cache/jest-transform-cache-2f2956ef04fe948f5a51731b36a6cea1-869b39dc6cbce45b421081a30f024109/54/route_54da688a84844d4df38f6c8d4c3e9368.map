{"version":3,"names":["cov_1ibl20y9gd","actualCoverage","s","exports","POST","server_1","require","headers_1","authMiddleware_1","firebase_user_service_1","SESSION_COOKIE_NAME","SESSION_DURATION_S","request","f","timestamp","Date","toISOString","console","log","b","_a","headers","get","substring","email","password","idToken","json","hasEmail","hasPassword","hasIdToken","idTokenPrefix","authResult","sessionToken","length","parts","split","startsCorrectly","startsWith","preview","verifyFirebaseToken","success","hasUser","user","uid","_b","error","verifyError","Error","message","NextResponse","status","name","emailVerified","email_verified","signInResult","firebaseUserService","signInWithEmailAndPassword","displayName","token","userProfile","ensureUserProfile","cookieStore","cookies","set","httpOnly","secure","process","env","NODE_ENV","maxAge","path","sameSite","plan","profilePictureUrl","createdAt","updatedAt","profileError"],"sources":["/Users/dikshantvashistha/PrepBettr/app/api/auth/signin/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { cookies } from 'next/headers';\nimport { verifyFirebaseToken } from '@/lib/middleware/authMiddleware';\nimport { firebaseUserService } from '@/lib/services/firebase-user-service';\n\nconst SESSION_COOKIE_NAME = 'session';\nconst SESSION_DURATION_S = 7 * 24 * 60 * 60; // 7 days\n\nexport async function POST(request: NextRequest) {\n  const timestamp = new Date().toISOString();\n  console.log(`üîë [${timestamp}] AUTH SIGNIN POST called - User-Agent: ${request.headers.get('user-agent')?.substring(0, 50)}`);\n  try {\n    const { email, password, idToken } = await request.json();\n    \n    console.log(`üîë [${timestamp}] Signin request details:`, {\n      hasEmail: !!email,\n      hasPassword: !!password,\n      hasIdToken: !!idToken,\n      idTokenPrefix: idToken ? idToken.substring(0, 50) + '...' : 'none'\n    });\n\n    let authResult;\n    let sessionToken = idToken;\n\n    if (idToken) {\n      // Handle Firebase ID token flow (for Google Sign-in)\n      console.log(`üîê [${timestamp}] Verifying Firebase ID token for Google Sign-in`);\n      console.log(`üîê [${timestamp}] ID Token format check:`, {\n        length: idToken.length,\n        parts: idToken.split('.').length,\n        startsCorrectly: idToken.startsWith('eyJ'),\n        preview: idToken.substring(0, 100) + '...'\n      });\n      \n      try {\n        authResult = await verifyFirebaseToken(idToken);\n        console.log(`üîê [${timestamp}] Firebase token verification result:`, {\n          success: authResult.success,\n          hasUser: !!authResult.user,\n          uid: authResult.user?.uid,\n          error: authResult.error\n        });\n      } catch (verifyError) {\n        console.error(`üîê [${timestamp}] Firebase token verification threw error:`, verifyError);\n        authResult = {\n          success: false,\n          user: null,\n          error: verifyError instanceof Error ? verifyError.message : 'Token verification failed'\n        };\n      }\n      \n      if (!authResult.success || !authResult.user) {\n        console.error(`‚ùå [${timestamp}] Firebase ID token verification failed:`, {\n          error: authResult.error,\n          success: authResult.success,\n          hasUser: !!authResult.user\n        });\n        return NextResponse.json(\n          { error: `Invalid ID token: ${authResult.error}` },\n          { status: 401 }\n        );\n      }\n      \n      console.log(`‚úÖ [${timestamp}] Firebase ID token verified for uid: ${authResult.user.uid}`);\n      console.log(`‚úÖ [${timestamp}] Token claims:`, {\n        email: authResult.user.email,\n        name: authResult.user.name,\n        emailVerified: authResult.user.email_verified\n      });\n      \n    } else if (email && password) {\n      // Handle email/password flow with real Firebase\n      console.log(`üîê Attempting email/password sign-in for: ${email}`);\n      try {\n        const signInResult = await firebaseUserService.signInWithEmailAndPassword(email, password);\n        \n        authResult = {\n          success: true,\n          user: {\n            uid: signInResult.user.uid,\n            email: signInResult.user.email,\n            name: signInResult.user.displayName,\n            email_verified: signInResult.user.emailVerified\n          }\n        };\n\n        // Use the custom token from Firebase\n        sessionToken = signInResult.token;\n        console.log(`‚úÖ Email/password sign-in successful for uid: ${authResult.user.uid}`);\n      } catch (error) {\n        console.error('‚ùå Firebase email/password sign-in failed:', error);\n        return NextResponse.json(\n          { error: 'Invalid email or password' },\n          { status: 401 }\n        );\n      }\n    } else {\n      return NextResponse.json(\n        { error: 'Email and password or ID token is required' },\n        { status: 400 }\n      );\n    }\n\n    // Ensure user is properly authenticated\n    if (!authResult.user || !authResult.user.uid) {\n      console.error('‚ùå Authentication failed - no user data');\n      return NextResponse.json(\n        { error: 'Authentication failed' },\n        { status: 401 }\n      );\n    }\n    \n    try {\n      // Ensure user profile exists in Firestore\n      console.log(`üîç Ensuring user profile exists for uid: ${authResult.user.uid}`);\n      const userProfile = await firebaseUserService.ensureUserProfile(authResult.user.uid, {\n        email: authResult.user.email!,\n        displayName: authResult.user.name,\n        emailVerified: authResult.user.email_verified\n      });\n      \n      console.log(`‚úÖ User profile confirmed for uid: ${authResult.user.uid}`);\n      \n      // Set session cookie with the actual token\n      const cookieStore = await cookies();\n      cookieStore.set(SESSION_COOKIE_NAME, sessionToken, {\n        httpOnly: true,\n        secure: process.env.NODE_ENV === 'production',\n        maxAge: SESSION_DURATION_S,\n        path: '/',\n        sameSite: 'lax',\n      });\n      \n      console.log(`üç™ Session cookie set for uid: ${authResult.user.uid}`);\n\n      // Return user data with auth token for localStorage\n      return NextResponse.json({\n        success: true,\n        token: sessionToken, // Include token for frontend storage\n        user: {\n          uid: userProfile.uid,\n          email: userProfile.email,\n          name: userProfile.displayName,\n          email_verified: userProfile.emailVerified,\n          plan: userProfile.plan,\n          profilePictureUrl: userProfile.profilePictureUrl,\n          createdAt: userProfile.createdAt,\n          updatedAt: userProfile.updatedAt\n        }\n      });\n      \n    } catch (profileError) {\n      console.error('‚ùå Failed to handle user profile:', profileError);\n      return NextResponse.json(\n        { error: 'Failed to create or retrieve user profile' },\n        { status: 500 }\n      );\n    }\n\n  } catch (error) {\n    console.error('‚ùå Signin error:', error);\n    return NextResponse.json(\n      { error: 'Internal server error' },\n      { status: 500 }\n    );\n  }\n}\n"],"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","ignoreList":[]}