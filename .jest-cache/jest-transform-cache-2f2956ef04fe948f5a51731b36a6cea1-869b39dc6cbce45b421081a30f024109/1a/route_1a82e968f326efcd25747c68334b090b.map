{"version":3,"names":["cov_1pssjp2l4","actualCoverage","s","exports","GET","runtime","voice_session_storage_1","require","req","params","f","resolvedParams","sessionId","id","sessionStorage","getVoiceSessionStorage","session","getSession","b","wsUrl","Response","status","clientSocket","serverSocket","globalThis","WebSocketPair","accept","upstream","closed","closeBoth","code","reason","close","_a","_b","WebSocket","addEventListener","send","JSON","stringify","type","data","connected","event","ArrayBuffer","Uint8Array","err","readyState","OPEN","webSocket"],"sources":["/Users/dikshantvashistha/PrepBettr/app/api/voice/session/[id]/ws/route.ts"],"sourcesContent":["export const runtime = 'edge';\n\n/**\n * WebSocket proxy for Azure AI Foundry realtime voice sessions\n *\n * Route: /api/voice/session/[id]/ws\n * - Upgrades client HTTP request to WebSocket\n * - Connects to Azure Foundry realtime WebSocket (server-side)\n * - Bi-directionally pipes messages between client and Azure\n * - Ensures API keys remain on server only\n */\n\nimport type { NextRequest } from 'next/server';\nimport { getVoiceSessionStorage } from '@/lib/azure-ai-foundry/voice/voice-session-storage';\n\nexport async function GET(req: NextRequest, { params }: { params: Promise<{ id: string }> }) {\n  const resolvedParams = await params;\n  const sessionId = resolvedParams.id;\n\n  // Validate session\n  const sessionStorage = getVoiceSessionStorage();\n  const session = sessionStorage.getSession(sessionId);\n  if (!session || !session.wsUrl) {\n    return new Response('Session not found or missing WebSocket URL', { status: 404 });\n  }\n\n  // Create a WebSocket pair (client <-> server)\n  const { 0: clientSocket, 1: serverSocket } = new (globalThis as any).WebSocketPair();\n\n  // Accept the client side of the pair\n  (clientSocket as any).accept();\n\n  let upstream: WebSocket | null = null;\n  let closed = false;\n\n  const closeBoth = (code = 1000, reason = 'Normal Closure') => {\n    if (closed) return;\n    closed = true;\n    try { (clientSocket as any).close(code, reason); } catch {}\n    try { upstream?.close(code, reason); } catch {}\n  };\n\n  try {\n    // Connect to Azure Foundry realtime WebSocket\n    upstream = new WebSocket(session.wsUrl, ['realtime']);\n\n    upstream.addEventListener('open', () => {\n      // Connection established with Azure\n      (clientSocket as any).send(JSON.stringify({ type: 'control', data: { connected: true }, sessionId }));\n    });\n\n    upstream.addEventListener('message', (event) => {\n      try {\n        // Forward as-is to client. If binary, forward binary; else text\n        if (event.data instanceof ArrayBuffer || event.data instanceof Uint8Array) {\n          (clientSocket as any).send(event.data as any);\n        } else {\n          (clientSocket as any).send(event.data as any);\n        }\n      } catch (err) {\n        // Swallow send errors and close\n        closeBoth(1011, 'Upstream->Client forward error');\n      }\n    });\n\n    upstream.addEventListener('close', (event) => {\n      closeBoth(event.code || 1000, event.reason || 'Upstream closed');\n    });\n\n    upstream.addEventListener('error', () => {\n      closeBoth(1011, 'Upstream error');\n    });\n\n    // Forward messages from client -> upstream\n    (clientSocket as any).addEventListener('message', (event: MessageEvent) => {\n      try {\n        if (upstream && upstream.readyState === upstream.OPEN) {\n          if (event.data instanceof ArrayBuffer || event.data instanceof Uint8Array) {\n            upstream.send(event.data as any);\n          } else {\n            upstream.send(event.data as any);\n          }\n        }\n      } catch {\n        closeBoth(1011, 'Client->Upstream forward error');\n      }\n    });\n\n    (clientSocket as any).addEventListener('close', (event: CloseEvent) => {\n      closeBoth(event.code || 1000, event.reason || 'Client closed');\n    });\n\n    (clientSocket as any).addEventListener('error', () => {\n      closeBoth(1011, 'Client error');\n    });\n\n    // Return the other end of the pair to complete the upgrade\n    return new Response(null, {\n      status: 101,\n      webSocket: serverSocket,\n    } as any);\n  } catch (err) {\n    try { closeBoth(1011, 'WebSocket setup failure'); } catch {}\n    return new Response('Failed to establish WebSocket proxy', { status: 500 });\n  }\n}\n\n"],"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","ignoreList":[]}