7c70b710f2fa46f1ab7481d5d487d8b8
/* istanbul ignore next */
function cov_1hvx67aj4l() {
  var path = "/Users/dikshantvashistha/PrepBettr/lib/paypal-config.js";
  var hash = "7cfd8487de232fb2a90134ee91aa54562169313d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dikshantvashistha/PrepBettr/lib/paypal-config.js",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 17
        },
        end: {
          line: 8,
          column: 22
        }
      },
      "1": {
        start: {
          line: 11,
          column: 16
        },
        end: {
          line: 20,
          column: 1
        }
      },
      "2": {
        start: {
          line: 23,
          column: 17
        },
        end: {
          line: 46,
          column: 1
        }
      },
      "3": {
        start: {
          line: 49,
          column: 15
        },
        end: {
          line: 60,
          column: 1
        }
      },
      "4": {
        start: {
          line: 63,
          column: 21
        },
        end: {
          line: 66,
          column: 1
        }
      },
      "5": {
        start: {
          line: 69,
          column: 28
        },
        end: {
          line: 313,
          column: 1
        }
      },
      "6": {
        start: {
          line: 316,
          column: 27
        },
        end: {
          line: 318,
          column: 1
        }
      },
      "7": {
        start: {
          line: 317,
          column: 2
        },
        end: {
          line: 317,
          column: 70
        }
      },
      "8": {
        start: {
          line: 317,
          column: 50
        },
        end: {
          line: 317,
          column: 68
        }
      },
      "9": {
        start: {
          line: 321,
          column: 30
        },
        end: {
          line: 323,
          column: 1
        }
      },
      "10": {
        start: {
          line: 322,
          column: 2
        },
        end: {
          line: 322,
          column: 72
        }
      },
      "11": {
        start: {
          line: 322,
          column: 52
        },
        end: {
          line: 322,
          column: 70
        }
      },
      "12": {
        start: {
          line: 326,
          column: 27
        },
        end: {
          line: 328,
          column: 1
        }
      },
      "13": {
        start: {
          line: 327,
          column: 2
        },
        end: {
          line: 327,
          column: 37
        }
      },
      "14": {
        start: {
          line: 331,
          column: 32
        },
        end: {
          line: 335,
          column: 1
        }
      },
      "15": {
        start: {
          line: 332,
          column: 18
        },
        end: {
          line: 332,
          column: 97
        }
      },
      "16": {
        start: {
          line: 333,
          column: 17
        },
        end: {
          line: 333,
          column: 94
        }
      },
      "17": {
        start: {
          line: 334,
          column: 2
        },
        end: {
          line: 334,
          column: 33
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 316,
            column: 27
          },
          end: {
            line: 316,
            column: 28
          }
        },
        loc: {
          start: {
            line: 316,
            column: 39
          },
          end: {
            line: 318,
            column: 1
          }
        },
        line: 316
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 317,
            column: 42
          },
          end: {
            line: 317,
            column: 43
          }
        },
        loc: {
          start: {
            line: 317,
            column: 50
          },
          end: {
            line: 317,
            column: 68
          }
        },
        line: 317
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 321,
            column: 30
          },
          end: {
            line: 321,
            column: 31
          }
        },
        loc: {
          start: {
            line: 321,
            column: 40
          },
          end: {
            line: 323,
            column: 1
          }
        },
        line: 321
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 322,
            column: 44
          },
          end: {
            line: 322,
            column: 45
          }
        },
        loc: {
          start: {
            line: 322,
            column: 52
          },
          end: {
            line: 322,
            column: 70
          }
        },
        line: 322
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 326,
            column: 27
          },
          end: {
            line: 326,
            column: 28
          }
        },
        loc: {
          start: {
            line: 326,
            column: 33
          },
          end: {
            line: 328,
            column: 1
          }
        },
        line: 326
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 331,
            column: 32
          },
          end: {
            line: 331,
            column: 33
          }
        },
        loc: {
          start: {
            line: 331,
            column: 42
          },
          end: {
            line: 335,
            column: 1
          }
        },
        line: 331
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 332,
            column: 18
          },
          end: {
            line: 332,
            column: 97
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 332,
            column: 42
          },
          end: {
            line: 332,
            column: 68
          }
        }, {
          start: {
            line: 332,
            column: 71
          },
          end: {
            line: 332,
            column: 97
          }
        }],
        line: 332
      },
      "1": {
        loc: {
          start: {
            line: 333,
            column: 17
          },
          end: {
            line: 333,
            column: 94
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 333,
            column: 41
          },
          end: {
            line: 333,
            column: 66
          }
        }, {
          start: {
            line: 333,
            column: 69
          },
          end: {
            line: 333,
            column: 94
          }
        }],
        line: 333
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    inputSourceMap: null,
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "7cfd8487de232fb2a90134ee91aa54562169313d"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1hvx67aj4l = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1hvx67aj4l();
// lib/paypal-config.js

/**
 * PayPal Subscription Plans Configuration
 * Defines all available subscription plans with pricing, features, and billing cycles
 */

const CURRENCY =
/* istanbul ignore next */
(cov_1hvx67aj4l().s[0]++, 'USD');

// Plan pricing configuration
const PRICING =
/* istanbul ignore next */
(cov_1hvx67aj4l().s[1]++, {
  INDIVIDUAL: {
    MONTHLY: 49.00,
    YEARLY: 490.00 // $49 * 10 months (2 months free)
  },
  ENTERPRISE: {
    MONTHLY: 199.00,
    YEARLY: 1990.00 // $199 * 10 months (2 months free)
  }
});

// Feature definitions for each plan type
const FEATURES =
/* istanbul ignore next */
(cov_1hvx67aj4l().s[2]++, {
  INDIVIDUAL: ['Resume processing and optimization', 'AI-powered interview preparation', 'Cover letter generation', 'Basic career insights', 'Email support', 'Up to 10 resumes per month', 'Up to 20 interview sessions per month', 'Up to 5 cover letters per month'],
  ENTERPRISE: ['Everything in Individual plan', 'Unlimited resume processing', 'Unlimited interview sessions', 'Unlimited cover letters', 'Advanced career analytics', 'Priority support', 'Custom branding options', 'Team collaboration features', 'API access', 'Dedicated account manager']
});

// Usage limits for each plan type
const LIMITS =
/* istanbul ignore next */
(cov_1hvx67aj4l().s[3]++, {
  INDIVIDUAL: {
    resumeProcessing: 10,
    interviewSessions: 20,
    coverLetters: 5
  },
  ENTERPRISE: {
    resumeProcessing: -1,
    // -1 means unlimited
    interviewSessions: -1,
    coverLetters: -1
  }
});

// Trial period configuration (7-day free trial)
const TRIAL_PERIOD =
/* istanbul ignore next */
(cov_1hvx67aj4l().s[4]++, {
  duration: 7,
  unit: 'DAY'
});

// PayPal subscription plan configurations
export const PAYPAL_PLANS =
/* istanbul ignore next */
(cov_1hvx67aj4l().s[5]++, {
  // Individual Monthly Plan
  INDIVIDUAL_MONTHLY: {
    id: 'individual-monthly',
    name: 'Individual Monthly',
    description: 'Perfect for job seekers who want comprehensive career preparation tools',
    type: 'INDIVIDUAL',
    billing_cycle: 'MONTHLY',
    price: PRICING.INDIVIDUAL.MONTHLY,
    currency: CURRENCY,
    interval: 'MONTH',
    interval_count: 1,
    trial_period: TRIAL_PERIOD,
    features: FEATURES.INDIVIDUAL,
    limits: LIMITS.INDIVIDUAL,
    paypal_plan_details: {
      product_id: '',
      // Will be set when creating the product
      name: 'PrepBettr Individual Monthly',
      description: 'Monthly subscription for individual users with comprehensive career preparation tools',
      status: 'ACTIVE',
      billing_cycles: [
      // Trial period
      {
        frequency: {
          interval_unit: 'DAY',
          interval_count: 7
        },
        tenure_type: 'TRIAL',
        sequence: 1,
        total_cycles: 1,
        pricing_scheme: {
          fixed_price: {
            value: '0',
            currency_code: CURRENCY
          }
        }
      },
      // Regular billing
      {
        frequency: {
          interval_unit: 'MONTH',
          interval_count: 1
        },
        tenure_type: 'REGULAR',
        sequence: 2,
        total_cycles: 0,
        // 0 means infinite cycles
        pricing_scheme: {
          fixed_price: {
            value: PRICING.INDIVIDUAL.MONTHLY.toString(),
            currency_code: CURRENCY
          }
        }
      }],
      payment_preferences: {
        auto_bill_outstanding: true,
        setup_fee_failure_action: 'CONTINUE',
        payment_failure_threshold: 3
      }
    }
  },
  // Individual Yearly Plan
  INDIVIDUAL_YEARLY: {
    id: 'individual-yearly',
    name: 'Individual Yearly',
    description: 'Best value for individual users - save 2 months with yearly billing',
    type: 'INDIVIDUAL',
    billing_cycle: 'YEARLY',
    price: PRICING.INDIVIDUAL.YEARLY,
    currency: CURRENCY,
    interval: 'YEAR',
    interval_count: 1,
    trial_period: TRIAL_PERIOD,
    features: FEATURES.INDIVIDUAL,
    limits: LIMITS.INDIVIDUAL,
    paypal_plan_details: {
      product_id: '',
      // Will be set when creating the product
      name: 'PrepBettr Individual Yearly',
      description: 'Yearly subscription for individual users - 2 months free compared to monthly billing',
      status: 'ACTIVE',
      billing_cycles: [
      // Trial period
      {
        frequency: {
          interval_unit: 'DAY',
          interval_count: 7
        },
        tenure_type: 'TRIAL',
        sequence: 1,
        total_cycles: 1,
        pricing_scheme: {
          fixed_price: {
            value: '0',
            currency_code: CURRENCY
          }
        }
      },
      // Regular billing
      {
        frequency: {
          interval_unit: 'YEAR',
          interval_count: 1
        },
        tenure_type: 'REGULAR',
        sequence: 2,
        total_cycles: 0,
        // 0 means infinite cycles
        pricing_scheme: {
          fixed_price: {
            value: PRICING.INDIVIDUAL.YEARLY.toString(),
            currency_code: CURRENCY
          }
        }
      }],
      payment_preferences: {
        auto_bill_outstanding: true,
        setup_fee_failure_action: 'CONTINUE',
        payment_failure_threshold: 3
      }
    }
  },
  // Enterprise Monthly Plan
  ENTERPRISE_MONTHLY: {
    id: 'enterprise-monthly',
    name: 'Enterprise Monthly',
    description: 'Unlimited access for teams and organizations with advanced features',
    type: 'ENTERPRISE',
    billing_cycle: 'MONTHLY',
    price: PRICING.ENTERPRISE.MONTHLY,
    currency: CURRENCY,
    interval: 'MONTH',
    interval_count: 1,
    trial_period: TRIAL_PERIOD,
    features: FEATURES.ENTERPRISE,
    limits: LIMITS.ENTERPRISE,
    paypal_plan_details: {
      product_id: '',
      // Will be set when creating the product
      name: 'PrepBettr Enterprise Monthly',
      description: 'Monthly subscription for enterprise users with unlimited access and advanced features',
      status: 'ACTIVE',
      billing_cycles: [
      // Trial period
      {
        frequency: {
          interval_unit: 'DAY',
          interval_count: 7
        },
        tenure_type: 'TRIAL',
        sequence: 1,
        total_cycles: 1,
        pricing_scheme: {
          fixed_price: {
            value: '0',
            currency_code: CURRENCY
          }
        }
      },
      // Regular billing
      {
        frequency: {
          interval_unit: 'MONTH',
          interval_count: 1
        },
        tenure_type: 'REGULAR',
        sequence: 2,
        total_cycles: 0,
        // 0 means infinite cycles
        pricing_scheme: {
          fixed_price: {
            value: PRICING.ENTERPRISE.MONTHLY.toString(),
            currency_code: CURRENCY
          }
        }
      }],
      payment_preferences: {
        auto_bill_outstanding: true,
        setup_fee_failure_action: 'CONTINUE',
        payment_failure_threshold: 3
      }
    }
  },
  // Enterprise Yearly Plan
  ENTERPRISE_YEARLY: {
    id: 'enterprise-yearly',
    name: 'Enterprise Yearly',
    description: 'Best value for enterprise - save 2 months with yearly billing',
    type: 'ENTERPRISE',
    billing_cycle: 'YEARLY',
    price: PRICING.ENTERPRISE.YEARLY,
    currency: CURRENCY,
    interval: 'YEAR',
    interval_count: 1,
    trial_period: TRIAL_PERIOD,
    features: FEATURES.ENTERPRISE,
    limits: LIMITS.ENTERPRISE,
    paypal_plan_details: {
      product_id: '',
      // Will be set when creating the product
      name: 'PrepBettr Enterprise Yearly',
      description: 'Yearly subscription for enterprise users - 2 months free compared to monthly billing',
      status: 'ACTIVE',
      billing_cycles: [
      // Trial period
      {
        frequency: {
          interval_unit: 'DAY',
          interval_count: 7
        },
        tenure_type: 'TRIAL',
        sequence: 1,
        total_cycles: 1,
        pricing_scheme: {
          fixed_price: {
            value: '0',
            currency_code: CURRENCY
          }
        }
      },
      // Regular billing
      {
        frequency: {
          interval_unit: 'YEAR',
          interval_count: 1
        },
        tenure_type: 'REGULAR',
        sequence: 2,
        total_cycles: 0,
        // 0 means infinite cycles
        pricing_scheme: {
          fixed_price: {
            value: PRICING.ENTERPRISE.YEARLY.toString(),
            currency_code: CURRENCY
          }
        }
      }],
      payment_preferences: {
        auto_bill_outstanding: true,
        setup_fee_failure_action: 'CONTINUE',
        payment_failure_threshold: 3
      }
    }
  }
});

// Helper function to get plan by ID
/* istanbul ignore next */
cov_1hvx67aj4l().s[6]++;
export const getPlanById = planId => {
  /* istanbul ignore next */
  cov_1hvx67aj4l().f[0]++;
  cov_1hvx67aj4l().s[7]++;
  return Object.values(PAYPAL_PLANS).find(plan => {
    /* istanbul ignore next */
    cov_1hvx67aj4l().f[1]++;
    cov_1hvx67aj4l().s[8]++;
    return plan.id === planId;
  });
};

// Helper function to get plans by type
/* istanbul ignore next */
cov_1hvx67aj4l().s[9]++;
export const getPlansByType = type => {
  /* istanbul ignore next */
  cov_1hvx67aj4l().f[2]++;
  cov_1hvx67aj4l().s[10]++;
  return Object.values(PAYPAL_PLANS).filter(plan => {
    /* istanbul ignore next */
    cov_1hvx67aj4l().f[3]++;
    cov_1hvx67aj4l().s[11]++;
    return plan.type === type;
  });
};

// Helper function to get all available plans
/* istanbul ignore next */
cov_1hvx67aj4l().s[12]++;
export const getAllPlans = () => {
  /* istanbul ignore next */
  cov_1hvx67aj4l().f[4]++;
  cov_1hvx67aj4l().s[13]++;
  return Object.values(PAYPAL_PLANS);
};

// Helper function to calculate yearly savings
/* istanbul ignore next */
cov_1hvx67aj4l().s[14]++;
export const getYearlySavings = type => {
  /* istanbul ignore next */
  cov_1hvx67aj4l().f[5]++;
  const monthly =
  /* istanbul ignore next */
  (cov_1hvx67aj4l().s[15]++, type === 'INDIVIDUAL' ?
  /* istanbul ignore next */
  (cov_1hvx67aj4l().b[0][0]++, PRICING.INDIVIDUAL.MONTHLY) :
  /* istanbul ignore next */
  (cov_1hvx67aj4l().b[0][1]++, PRICING.ENTERPRISE.MONTHLY));
  const yearly =
  /* istanbul ignore next */
  (cov_1hvx67aj4l().s[16]++, type === 'INDIVIDUAL' ?
  /* istanbul ignore next */
  (cov_1hvx67aj4l().b[1][0]++, PRICING.INDIVIDUAL.YEARLY) :
  /* istanbul ignore next */
  (cov_1hvx67aj4l().b[1][1]++, PRICING.ENTERPRISE.YEARLY));
  /* istanbul ignore next */
  cov_1hvx67aj4l().s[17]++;
  return monthly * 12 - yearly;
};

// Export constants for easy access
export { PRICING, FEATURES, LIMITS, TRIAL_PERIOD, CURRENCY };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,