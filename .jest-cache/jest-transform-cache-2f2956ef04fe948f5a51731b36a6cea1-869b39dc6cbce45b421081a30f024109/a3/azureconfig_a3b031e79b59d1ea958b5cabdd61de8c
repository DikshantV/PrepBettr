ac21e61e300590d6159003f66f567847
"use strict";

/* istanbul ignore next */
function cov_2j1f3sxqec() {
  var path = "/Users/dikshantvashistha/PrepBettr/lib/azure-config.ts";
  var hash = "f83f45ef288badd20187ac3b34a820219530282a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dikshantvashistha/PrepBettr/lib/azure-config.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 56
        }
      },
      "2": {
        start: {
          line: 4,
          column: 0
        },
        end: {
          line: 4,
          column: 46
        }
      },
      "3": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 64
        }
      },
      "4": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 44
        }
      },
      "5": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 7,
          column: 40
        }
      },
      "6": {
        start: {
          line: 8,
          column: 19
        },
        end: {
          line: 8,
          column: 45
        }
      },
      "7": {
        start: {
          line: 9,
          column: 27
        },
        end: {
          line: 9,
          column: 61
        }
      },
      "8": {
        start: {
          line: 11,
          column: 17
        },
        end: {
          line: 11,
          column: 46
        }
      },
      "9": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 14,
          column: 1
        }
      },
      "10": {
        start: {
          line: 13,
          column: 4
        },
        end: {
          line: 13,
          column: 91
        }
      },
      "11": {
        start: {
          line: 16,
          column: 28
        },
        end: {
          line: 16,
          column: 112
        }
      },
      "12": {
        start: {
          line: 17,
          column: 20
        },
        end: {
          line: 17,
          column: 24
        }
      },
      "13": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 24,
          column: 5
        }
      },
      "14": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 80
        }
      },
      "15": {
        start: {
          line: 25,
          column: 23
        },
        end: {
          line: 25,
          column: 62
        }
      },
      "16": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 26,
          column: 80
        }
      },
      "17": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 33,
          column: 15
        }
      },
      "18": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 15
        }
      },
      "19": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 34,
          column: 54
        }
      },
      "20": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 35,
          column: 25
        }
      },
      "21": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 52,
          column: 5
        }
      },
      "22": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 51,
          column: 10
        }
      },
      "23": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 56,
          column: 5
        }
      },
      "24": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 55,
          column: 33
        }
      },
      "25": {
        start: {
          line: 58,
          column: 4
        },
        end: {
          line: 60,
          column: 5
        }
      },
      "26": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 59,
          column: 29
        }
      },
      "27": {
        start: {
          line: 61,
          column: 4
        },
        end: {
          line: 164,
          column: 5
        }
      },
      "28": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 67
        }
      },
      "29": {
        start: {
          line: 63,
          column: 23
        },
        end: {
          line: 63,
          column: 45
        }
      },
      "30": {
        start: {
          line: 65,
          column: 34
        },
        end: {
          line: 70,
          column: 10
        }
      },
      "31": {
        start: {
          line: 65,
          column: 44
        },
        end: {
          line: 70,
          column: 10
        }
      },
      "32": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 68,
          column: 13
        }
      },
      "33": {
        start: {
          line: 67,
          column: 16
        },
        end: {
          line: 67,
          column: 101
        }
      },
      "34": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 69,
          column: 24
        }
      },
      "35": {
        start: {
          line: 72,
          column: 351
        },
        end: {
          line: 89,
          column: 10
        }
      },
      "36": {
        start: {
          line: 91,
          column: 37
        },
        end: {
          line: 97,
          column: 9
        }
      },
      "37": {
        start: {
          line: 98,
          column: 36
        },
        end: {
          line: 100,
          column: 35
        }
      },
      "38": {
        start: {
          line: 99,
          column: 36
        },
        end: {
          line: 99,
          column: 42
        }
      },
      "39": {
        start: {
          line: 100,
          column: 31
        },
        end: {
          line: 100,
          column: 34
        }
      },
      "40": {
        start: {
          line: 101,
          column: 8
        },
        end: {
          line: 103,
          column: 9
        }
      },
      "41": {
        start: {
          line: 102,
          column: 12
        },
        end: {
          line: 102,
          column: 112
        }
      },
      "42": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 121,
          column: 10
        }
      },
      "43": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 122,
          column: 59
        }
      },
      "44": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 123,
          column: 29
        }
      },
      "45": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 126,
          column: 65
        }
      },
      "46": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 128,
          column: 67
        }
      },
      "47": {
        start: {
          line: 129,
          column: 32
        },
        end: {
          line: 145,
          column: 9
        }
      },
      "48": {
        start: {
          line: 147,
          column: 32
        },
        end: {
          line: 147,
          column: 34
        }
      },
      "49": {
        start: {
          line: 148,
          column: 8
        },
        end: {
          line: 149,
          column: 47
        }
      },
      "50": {
        start: {
          line: 149,
          column: 12
        },
        end: {
          line: 149,
          column: 47
        }
      },
      "51": {
        start: {
          line: 150,
          column: 8
        },
        end: {
          line: 151,
          column: 53
        }
      },
      "52": {
        start: {
          line: 151,
          column: 12
        },
        end: {
          line: 151,
          column: 53
        }
      },
      "53": {
        start: {
          line: 153,
          column: 32
        },
        end: {
          line: 153,
          column: 34
        }
      },
      "54": {
        start: {
          line: 154,
          column: 8
        },
        end: {
          line: 155,
          column: 56
        }
      },
      "55": {
        start: {
          line: 155,
          column: 12
        },
        end: {
          line: 155,
          column: 56
        }
      },
      "56": {
        start: {
          line: 156,
          column: 8
        },
        end: {
          line: 158,
          column: 9
        }
      },
      "57": {
        start: {
          line: 157,
          column: 12
        },
        end: {
          line: 157,
          column: 87
        }
      },
      "58": {
        start: {
          line: 159,
          column: 8
        },
        end: {
          line: 161,
          column: 9
        }
      },
      "59": {
        start: {
          line: 160,
          column: 12
        },
        end: {
          line: 160,
          column: 87
        }
      },
      "60": {
        start: {
          line: 162,
          column: 8
        },
        end: {
          line: 162,
          column: 40
        }
      },
      "61": {
        start: {
          line: 163,
          column: 8
        },
        end: {
          line: 163,
          column: 29
        }
      },
      "62": {
        start: {
          line: 171,
          column: 4
        },
        end: {
          line: 172,
          column: 15
        }
      },
      "63": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 172,
          column: 15
        }
      },
      "64": {
        start: {
          line: 173,
          column: 4
        },
        end: {
          line: 230,
          column: 5
        }
      },
      "65": {
        start: {
          line: 174,
          column: 24
        },
        end: {
          line: 174,
          column: 49
        }
      },
      "66": {
        start: {
          line: 176,
          column: 8
        },
        end: {
          line: 176,
          column: 51
        }
      },
      "67": {
        start: {
          line: 177,
          column: 8
        },
        end: {
          line: 177,
          column: 61
        }
      },
      "68": {
        start: {
          line: 179,
          column: 8
        },
        end: {
          line: 179,
          column: 62
        }
      },
      "69": {
        start: {
          line: 180,
          column: 8
        },
        end: {
          line: 180,
          column: 72
        }
      },
      "70": {
        start: {
          line: 181,
          column: 8
        },
        end: {
          line: 181,
          column: 76
        }
      },
      "71": {
        start: {
          line: 183,
          column: 8
        },
        end: {
          line: 183,
          column: 68
        }
      },
      "72": {
        start: {
          line: 184,
          column: 8
        },
        end: {
          line: 184,
          column: 72
        }
      },
      "73": {
        start: {
          line: 185,
          column: 8
        },
        end: {
          line: 185,
          column: 70
        }
      },
      "74": {
        start: {
          line: 187,
          column: 33
        },
        end: {
          line: 187,
          column: 47
        }
      },
      "75": {
        start: {
          line: 188,
          column: 8
        },
        end: {
          line: 188,
          column: 73
        }
      },
      "76": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 189,
          column: 83
        }
      },
      "77": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 190,
          column: 88
        }
      },
      "78": {
        start: {
          line: 191,
          column: 8
        },
        end: {
          line: 191,
          column: 94
        }
      },
      "79": {
        start: {
          line: 192,
          column: 8
        },
        end: {
          line: 192,
          column: 98
        }
      },
      "80": {
        start: {
          line: 193,
          column: 8
        },
        end: {
          line: 193,
          column: 90
        }
      },
      "81": {
        start: {
          line: 195,
          column: 8
        },
        end: {
          line: 201,
          column: 9
        }
      },
      "82": {
        start: {
          line: 196,
          column: 12
        },
        end: {
          line: 196,
          column: 94
        }
      },
      "83": {
        start: {
          line: 197,
          column: 12
        },
        end: {
          line: 197,
          column: 75
        }
      },
      "84": {
        start: {
          line: 200,
          column: 12
        },
        end: {
          line: 200,
          column: 80
        }
      },
      "85": {
        start: {
          line: 203,
          column: 8
        },
        end: {
          line: 205,
          column: 9
        }
      },
      "86": {
        start: {
          line: 204,
          column: 12
        },
        end: {
          line: 204,
          column: 83
        }
      },
      "87": {
        start: {
          line: 206,
          column: 8
        },
        end: {
          line: 208,
          column: 9
        }
      },
      "88": {
        start: {
          line: 207,
          column: 12
        },
        end: {
          line: 207,
          column: 93
        }
      },
      "89": {
        start: {
          line: 210,
          column: 8
        },
        end: {
          line: 212,
          column: 9
        }
      },
      "90": {
        start: {
          line: 211,
          column: 12
        },
        end: {
          line: 211,
          column: 76
        }
      },
      "91": {
        start: {
          line: 213,
          column: 8
        },
        end: {
          line: 215,
          column: 9
        }
      },
      "92": {
        start: {
          line: 214,
          column: 12
        },
        end: {
          line: 214,
          column: 83
        }
      },
      "93": {
        start: {
          line: 216,
          column: 8
        },
        end: {
          line: 218,
          column: 9
        }
      },
      "94": {
        start: {
          line: 217,
          column: 12
        },
        end: {
          line: 217,
          column: 95
        }
      },
      "95": {
        start: {
          line: 219,
          column: 8
        },
        end: {
          line: 221,
          column: 9
        }
      },
      "96": {
        start: {
          line: 220,
          column: 12
        },
        end: {
          line: 220,
          column: 80
        }
      },
      "97": {
        start: {
          line: 222,
          column: 8
        },
        end: {
          line: 224,
          column: 9
        }
      },
      "98": {
        start: {
          line: 223,
          column: 12
        },
        end: {
          line: 223,
          column: 67
        }
      },
      "99": {
        start: {
          line: 225,
          column: 8
        },
        end: {
          line: 225,
          column: 69
        }
      },
      "100": {
        start: {
          line: 228,
          column: 8
        },
        end: {
          line: 228,
          column: 74
        }
      },
      "101": {
        start: {
          line: 229,
          column: 8
        },
        end: {
          line: 229,
          column: 20
        }
      },
      "102": {
        start: {
          line: 236,
          column: 4
        },
        end: {
          line: 282,
          column: 5
        }
      },
      "103": {
        start: {
          line: 237,
          column: 24
        },
        end: {
          line: 237,
          column: 49
        }
      },
      "104": {
        start: {
          line: 238,
          column: 8
        },
        end: {
          line: 258,
          column: 10
        }
      },
      "105": {
        start: {
          line: 261,
          column: 8
        },
        end: {
          line: 261,
          column: 100
        }
      },
      "106": {
        start: {
          line: 263,
          column: 8
        },
        end: {
          line: 281,
          column: 10
        }
      },
      "107": {
        start: {
          line: 288,
          column: 29
        },
        end: {
          line: 288,
          column: 43
        }
      },
      "108": {
        start: {
          line: 289,
          column: 4
        },
        end: {
          line: 299,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "createKeyVaultClient",
        decl: {
          start: {
            line: 21,
            column: 9
          },
          end: {
            line: 21,
            column: 29
          }
        },
        loc: {
          start: {
            line: 21,
            column: 32
          },
          end: {
            line: 27,
            column: 1
          }
        },
        line: 21
      },
      "1": {
        name: "clearAzureSecretsCache",
        decl: {
          start: {
            line: 31,
            column: 9
          },
          end: {
            line: 31,
            column: 31
          }
        },
        loc: {
          start: {
            line: 31,
            column: 34
          },
          end: {
            line: 36,
            column: 1
          }
        },
        line: 31
      },
      "2": {
        name: "fetchAzureSecrets",
        decl: {
          start: {
            line: 40,
            column: 15
          },
          end: {
            line: 40,
            column: 32
          }
        },
        loc: {
          start: {
            line: 40,
            column: 55
          },
          end: {
            line: 165,
            column: 1
          }
        },
        line: 40
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 65,
            column: 34
          },
          end: {
            line: 65,
            column: 35
          }
        },
        loc: {
          start: {
            line: 65,
            column: 44
          },
          end: {
            line: 70,
            column: 10
          }
        },
        line: 65
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 65,
            column: 73
          },
          end: {
            line: 65,
            column: 74
          }
        },
        loc: {
          start: {
            line: 65,
            column: 80
          },
          end: {
            line: 70,
            column: 9
          }
        },
        line: 65
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 99,
            column: 20
          },
          end: {
            line: 99,
            column: 21
          }
        },
        loc: {
          start: {
            line: 99,
            column: 36
          },
          end: {
            line: 99,
            column: 42
          }
        },
        line: 99
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 100,
            column: 17
          },
          end: {
            line: 100,
            column: 18
          }
        },
        loc: {
          start: {
            line: 100,
            column: 31
          },
          end: {
            line: 100,
            column: 34
          }
        },
        line: 100
      },
      "7": {
        name: "initializeAzureEnvironment",
        decl: {
          start: {
            line: 170,
            column: 15
          },
          end: {
            line: 170,
            column: 41
          }
        },
        loc: {
          start: {
            line: 170,
            column: 44
          },
          end: {
            line: 231,
            column: 1
          }
        },
        line: 170
      },
      "8": {
        name: "getConfiguration",
        decl: {
          start: {
            line: 235,
            column: 15
          },
          end: {
            line: 235,
            column: 31
          }
        },
        loc: {
          start: {
            line: 235,
            column: 34
          },
          end: {
            line: 283,
            column: 1
          }
        },
        line: 235
      },
      "9": {
        name: "getAzureConfig",
        decl: {
          start: {
            line: 287,
            column: 9
          },
          end: {
            line: 287,
            column: 23
          }
        },
        loc: {
          start: {
            line: 287,
            column: 26
          },
          end: {
            line: 300,
            column: 1
          }
        },
        line: 287
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 12,
            column: 0
          },
          end: {
            line: 14,
            column: 1
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 12,
            column: 0
          },
          end: {
            line: 14,
            column: 1
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 12
      },
      "1": {
        loc: {
          start: {
            line: 16,
            column: 28
          },
          end: {
            line: 16,
            column: 112
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 16,
            column: 28
          },
          end: {
            line: 16,
            column: 59
          }
        }, {
          start: {
            line: 16,
            column: 63
          },
          end: {
            line: 16,
            column: 112
          }
        }],
        line: 16
      },
      "2": {
        loc: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "3": {
        loc: {
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 33,
            column: 15
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 33,
            column: 15
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 32
      },
      "4": {
        loc: {
          start: {
            line: 40,
            column: 33
          },
          end: {
            line: 40,
            column: 53
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 40,
            column: 48
          },
          end: {
            line: 40,
            column: 53
          }
        }],
        line: 40
      },
      "5": {
        loc: {
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 52,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 52,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 41
      },
      "6": {
        loc: {
          start: {
            line: 54,
            column: 4
          },
          end: {
            line: 56,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 4
          },
          end: {
            line: 56,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 54
      },
      "7": {
        loc: {
          start: {
            line: 58,
            column: 4
          },
          end: {
            line: 60,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 58,
            column: 4
          },
          end: {
            line: 60,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 58
      },
      "8": {
        loc: {
          start: {
            line: 66,
            column: 12
          },
          end: {
            line: 68,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 66,
            column: 12
          },
          end: {
            line: 68,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 66
      },
      "9": {
        loc: {
          start: {
            line: 92,
            column: 23
          },
          end: {
            line: 92,
            column: 92
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 92,
            column: 68
          },
          end: {
            line: 92,
            column: 74
          }
        }, {
          start: {
            line: 92,
            column: 77
          },
          end: {
            line: 92,
            column: 92
          }
        }],
        line: 92
      },
      "10": {
        loc: {
          start: {
            line: 92,
            column: 23
          },
          end: {
            line: 92,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 92,
            column: 23
          },
          end: {
            line: 92,
            column: 41
          }
        }, {
          start: {
            line: 92,
            column: 45
          },
          end: {
            line: 92,
            column: 65
          }
        }],
        line: 92
      },
      "11": {
        loc: {
          start: {
            line: 93,
            column: 28
          },
          end: {
            line: 93,
            column: 112
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 93,
            column: 83
          },
          end: {
            line: 93,
            column: 89
          }
        }, {
          start: {
            line: 93,
            column: 92
          },
          end: {
            line: 93,
            column: 112
          }
        }],
        line: 93
      },
      "12": {
        loc: {
          start: {
            line: 93,
            column: 28
          },
          end: {
            line: 93,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 93,
            column: 28
          },
          end: {
            line: 93,
            column: 51
          }
        }, {
          start: {
            line: 93,
            column: 55
          },
          end: {
            line: 93,
            column: 80
          }
        }],
        line: 93
      },
      "13": {
        loc: {
          start: {
            line: 94,
            column: 28
          },
          end: {
            line: 94,
            column: 112
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 94,
            column: 83
          },
          end: {
            line: 94,
            column: 89
          }
        }, {
          start: {
            line: 94,
            column: 92
          },
          end: {
            line: 94,
            column: 112
          }
        }],
        line: 94
      },
      "14": {
        loc: {
          start: {
            line: 94,
            column: 28
          },
          end: {
            line: 94,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 94,
            column: 28
          },
          end: {
            line: 94,
            column: 51
          }
        }, {
          start: {
            line: 94,
            column: 55
          },
          end: {
            line: 94,
            column: 80
          }
        }],
        line: 94
      },
      "15": {
        loc: {
          start: {
            line: 95,
            column: 33
          },
          end: {
            line: 95,
            column: 132
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 95,
            column: 98
          },
          end: {
            line: 95,
            column: 104
          }
        }, {
          start: {
            line: 95,
            column: 107
          },
          end: {
            line: 95,
            column: 132
          }
        }],
        line: 95
      },
      "16": {
        loc: {
          start: {
            line: 95,
            column: 33
          },
          end: {
            line: 95,
            column: 95
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 95,
            column: 33
          },
          end: {
            line: 95,
            column: 61
          }
        }, {
          start: {
            line: 95,
            column: 65
          },
          end: {
            line: 95,
            column: 95
          }
        }],
        line: 95
      },
      "17": {
        loc: {
          start: {
            line: 96,
            column: 35
          },
          end: {
            line: 96,
            column: 140
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 96,
            column: 104
          },
          end: {
            line: 96,
            column: 110
          }
        }, {
          start: {
            line: 96,
            column: 113
          },
          end: {
            line: 96,
            column: 140
          }
        }],
        line: 96
      },
      "18": {
        loc: {
          start: {
            line: 96,
            column: 35
          },
          end: {
            line: 96,
            column: 101
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 96,
            column: 35
          },
          end: {
            line: 96,
            column: 65
          }
        }, {
          start: {
            line: 96,
            column: 69
          },
          end: {
            line: 96,
            column: 101
          }
        }],
        line: 96
      },
      "19": {
        loc: {
          start: {
            line: 101,
            column: 8
          },
          end: {
            line: 103,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 101,
            column: 8
          },
          end: {
            line: 103,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 101
      },
      "20": {
        loc: {
          start: {
            line: 110,
            column: 31
          },
          end: {
            line: 110,
            column: 167
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 110,
            column: 32
          },
          end: {
            line: 110,
            column: 125
          }
        }, {
          start: {
            line: 110,
            column: 130
          },
          end: {
            line: 110,
            column: 161
          }
        }, {
          start: {
            line: 110,
            column: 165
          },
          end: {
            line: 110,
            column: 167
          }
        }],
        line: 110
      },
      "21": {
        loc: {
          start: {
            line: 110,
            column: 32
          },
          end: {
            line: 110,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 110,
            column: 93
          },
          end: {
            line: 110,
            column: 99
          }
        }, {
          start: {
            line: 110,
            column: 102
          },
          end: {
            line: 110,
            column: 125
          }
        }],
        line: 110
      },
      "22": {
        loc: {
          start: {
            line: 110,
            column: 32
          },
          end: {
            line: 110,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 110,
            column: 32
          },
          end: {
            line: 110,
            column: 58
          }
        }, {
          start: {
            line: 110,
            column: 62
          },
          end: {
            line: 110,
            column: 90
          }
        }],
        line: 110
      },
      "23": {
        loc: {
          start: {
            line: 111,
            column: 33
          },
          end: {
            line: 111,
            column: 177
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 111,
            column: 34
          },
          end: {
            line: 111,
            column: 133
          }
        }, {
          start: {
            line: 111,
            column: 138
          },
          end: {
            line: 111,
            column: 171
          }
        }, {
          start: {
            line: 111,
            column: 175
          },
          end: {
            line: 111,
            column: 177
          }
        }],
        line: 111
      },
      "24": {
        loc: {
          start: {
            line: 111,
            column: 34
          },
          end: {
            line: 111,
            column: 133
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 111,
            column: 99
          },
          end: {
            line: 111,
            column: 105
          }
        }, {
          start: {
            line: 111,
            column: 108
          },
          end: {
            line: 111,
            column: 133
          }
        }],
        line: 111
      },
      "25": {
        loc: {
          start: {
            line: 111,
            column: 34
          },
          end: {
            line: 111,
            column: 96
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 111,
            column: 34
          },
          end: {
            line: 111,
            column: 62
          }
        }, {
          start: {
            line: 111,
            column: 66
          },
          end: {
            line: 111,
            column: 96
          }
        }],
        line: 111
      },
      "26": {
        loc: {
          start: {
            line: 112,
            column: 32
          },
          end: {
            line: 112,
            column: 172
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 112,
            column: 33
          },
          end: {
            line: 112,
            column: 129
          }
        }, {
          start: {
            line: 112,
            column: 134
          },
          end: {
            line: 112,
            column: 166
          }
        }, {
          start: {
            line: 112,
            column: 170
          },
          end: {
            line: 112,
            column: 172
          }
        }],
        line: 112
      },
      "27": {
        loc: {
          start: {
            line: 112,
            column: 33
          },
          end: {
            line: 112,
            column: 129
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 112,
            column: 96
          },
          end: {
            line: 112,
            column: 102
          }
        }, {
          start: {
            line: 112,
            column: 105
          },
          end: {
            line: 112,
            column: 129
          }
        }],
        line: 112
      },
      "28": {
        loc: {
          start: {
            line: 112,
            column: 33
          },
          end: {
            line: 112,
            column: 93
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 112,
            column: 33
          },
          end: {
            line: 112,
            column: 60
          }
        }, {
          start: {
            line: 112,
            column: 64
          },
          end: {
            line: 112,
            column: 93
          }
        }],
        line: 112
      },
      "29": {
        loc: {
          start: {
            line: 113,
            column: 31
          },
          end: {
            line: 113,
            column: 132
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 113,
            column: 32
          },
          end: {
            line: 113,
            column: 125
          }
        }, {
          start: {
            line: 113,
            column: 130
          },
          end: {
            line: 113,
            column: 132
          }
        }],
        line: 113
      },
      "30": {
        loc: {
          start: {
            line: 113,
            column: 32
          },
          end: {
            line: 113,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 113,
            column: 93
          },
          end: {
            line: 113,
            column: 99
          }
        }, {
          start: {
            line: 113,
            column: 102
          },
          end: {
            line: 113,
            column: 125
          }
        }],
        line: 113
      },
      "31": {
        loc: {
          start: {
            line: 113,
            column: 32
          },
          end: {
            line: 113,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 113,
            column: 32
          },
          end: {
            line: 113,
            column: 58
          }
        }, {
          start: {
            line: 113,
            column: 62
          },
          end: {
            line: 113,
            column: 90
          }
        }],
        line: 113
      },
      "32": {
        loc: {
          start: {
            line: 114,
            column: 36
          },
          end: {
            line: 114,
            column: 144
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 114,
            column: 107
          },
          end: {
            line: 114,
            column: 113
          }
        }, {
          start: {
            line: 114,
            column: 116
          },
          end: {
            line: 114,
            column: 144
          }
        }],
        line: 114
      },
      "33": {
        loc: {
          start: {
            line: 114,
            column: 36
          },
          end: {
            line: 114,
            column: 104
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 114,
            column: 36
          },
          end: {
            line: 114,
            column: 67
          }
        }, {
          start: {
            line: 114,
            column: 71
          },
          end: {
            line: 114,
            column: 104
          }
        }],
        line: 114
      },
      "34": {
        loc: {
          start: {
            line: 115,
            column: 41
          },
          end: {
            line: 115,
            column: 164
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 115,
            column: 122
          },
          end: {
            line: 115,
            column: 128
          }
        }, {
          start: {
            line: 115,
            column: 131
          },
          end: {
            line: 115,
            column: 164
          }
        }],
        line: 115
      },
      "35": {
        loc: {
          start: {
            line: 115,
            column: 41
          },
          end: {
            line: 115,
            column: 119
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 115,
            column: 41
          },
          end: {
            line: 115,
            column: 77
          }
        }, {
          start: {
            line: 115,
            column: 81
          },
          end: {
            line: 115,
            column: 119
          }
        }],
        line: 115
      },
      "36": {
        loc: {
          start: {
            line: 116,
            column: 33
          },
          end: {
            line: 116,
            column: 132
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 116,
            column: 98
          },
          end: {
            line: 116,
            column: 104
          }
        }, {
          start: {
            line: 116,
            column: 107
          },
          end: {
            line: 116,
            column: 132
          }
        }],
        line: 116
      },
      "37": {
        loc: {
          start: {
            line: 116,
            column: 33
          },
          end: {
            line: 116,
            column: 95
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 116,
            column: 33
          },
          end: {
            line: 116,
            column: 61
          }
        }, {
          start: {
            line: 116,
            column: 65
          },
          end: {
            line: 116,
            column: 95
          }
        }],
        line: 116
      },
      "38": {
        loc: {
          start: {
            line: 117,
            column: 36
          },
          end: {
            line: 117,
            column: 144
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 117,
            column: 107
          },
          end: {
            line: 117,
            column: 113
          }
        }, {
          start: {
            line: 117,
            column: 116
          },
          end: {
            line: 117,
            column: 144
          }
        }],
        line: 117
      },
      "39": {
        loc: {
          start: {
            line: 117,
            column: 36
          },
          end: {
            line: 117,
            column: 104
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 117,
            column: 36
          },
          end: {
            line: 117,
            column: 67
          }
        }, {
          start: {
            line: 117,
            column: 71
          },
          end: {
            line: 117,
            column: 104
          }
        }],
        line: 117
      },
      "40": {
        loc: {
          start: {
            line: 118,
            column: 42
          },
          end: {
            line: 118,
            column: 168
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 118,
            column: 125
          },
          end: {
            line: 118,
            column: 131
          }
        }, {
          start: {
            line: 118,
            column: 134
          },
          end: {
            line: 118,
            column: 168
          }
        }],
        line: 118
      },
      "41": {
        loc: {
          start: {
            line: 118,
            column: 42
          },
          end: {
            line: 118,
            column: 122
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 118,
            column: 42
          },
          end: {
            line: 118,
            column: 79
          }
        }, {
          start: {
            line: 118,
            column: 83
          },
          end: {
            line: 118,
            column: 122
          }
        }],
        line: 118
      },
      "42": {
        loc: {
          start: {
            line: 119,
            column: 35
          },
          end: {
            line: 119,
            column: 140
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 119,
            column: 104
          },
          end: {
            line: 119,
            column: 110
          }
        }, {
          start: {
            line: 119,
            column: 113
          },
          end: {
            line: 119,
            column: 140
          }
        }],
        line: 119
      },
      "43": {
        loc: {
          start: {
            line: 119,
            column: 35
          },
          end: {
            line: 119,
            column: 101
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 119,
            column: 35
          },
          end: {
            line: 119,
            column: 65
          }
        }, {
          start: {
            line: 119,
            column: 69
          },
          end: {
            line: 119,
            column: 101
          }
        }],
        line: 119
      },
      "44": {
        loc: {
          start: {
            line: 120,
            column: 29
          },
          end: {
            line: 120,
            column: 116
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 120,
            column: 86
          },
          end: {
            line: 120,
            column: 92
          }
        }, {
          start: {
            line: 120,
            column: 95
          },
          end: {
            line: 120,
            column: 116
          }
        }],
        line: 120
      },
      "45": {
        loc: {
          start: {
            line: 120,
            column: 29
          },
          end: {
            line: 120,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 120,
            column: 29
          },
          end: {
            line: 120,
            column: 53
          }
        }, {
          start: {
            line: 120,
            column: 57
          },
          end: {
            line: 120,
            column: 83
          }
        }],
        line: 120
      },
      "46": {
        loc: {
          start: {
            line: 130,
            column: 23
          },
          end: {
            line: 130,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 130,
            column: 23
          },
          end: {
            line: 130,
            column: 51
          }
        }, {
          start: {
            line: 130,
            column: 55
          },
          end: {
            line: 130,
            column: 77
          }
        }, {
          start: {
            line: 130,
            column: 81
          },
          end: {
            line: 130,
            column: 83
          }
        }],
        line: 130
      },
      "47": {
        loc: {
          start: {
            line: 131,
            column: 28
          },
          end: {
            line: 131,
            column: 105
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 131,
            column: 28
          },
          end: {
            line: 131,
            column: 55
          }
        }, {
          start: {
            line: 131,
            column: 59
          },
          end: {
            line: 131,
            column: 105
          }
        }],
        line: 131
      },
      "48": {
        loc: {
          start: {
            line: 132,
            column: 28
          },
          end: {
            line: 132,
            column: 98
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 132,
            column: 28
          },
          end: {
            line: 132,
            column: 60
          }
        }, {
          start: {
            line: 132,
            column: 64
          },
          end: {
            line: 132,
            column: 92
          }
        }, {
          start: {
            line: 132,
            column: 96
          },
          end: {
            line: 132,
            column: 98
          }
        }],
        line: 132
      },
      "49": {
        loc: {
          start: {
            line: 133,
            column: 33
          },
          end: {
            line: 133,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 133,
            column: 33
          },
          end: {
            line: 133,
            column: 66
          }
        }, {
          start: {
            line: 133,
            column: 70
          },
          end: {
            line: 133,
            column: 72
          }
        }],
        line: 133
      },
      "50": {
        loc: {
          start: {
            line: 134,
            column: 35
          },
          end: {
            line: 134,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 134,
            column: 35
          },
          end: {
            line: 134,
            column: 70
          }
        }, {
          start: {
            line: 134,
            column: 74
          },
          end: {
            line: 134,
            column: 76
          }
        }],
        line: 134
      },
      "51": {
        loc: {
          start: {
            line: 136,
            column: 31
          },
          end: {
            line: 136,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 136,
            column: 31
          },
          end: {
            line: 136,
            column: 62
          }
        }, {
          start: {
            line: 136,
            column: 66
          },
          end: {
            line: 136,
            column: 68
          }
        }],
        line: 136
      },
      "52": {
        loc: {
          start: {
            line: 137,
            column: 33
          },
          end: {
            line: 137,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 137,
            column: 33
          },
          end: {
            line: 137,
            column: 66
          }
        }, {
          start: {
            line: 137,
            column: 70
          },
          end: {
            line: 137,
            column: 72
          }
        }],
        line: 137
      },
      "53": {
        loc: {
          start: {
            line: 138,
            column: 32
          },
          end: {
            line: 138,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 138,
            column: 32
          },
          end: {
            line: 138,
            column: 64
          }
        }, {
          start: {
            line: 138,
            column: 68
          },
          end: {
            line: 138,
            column: 70
          }
        }],
        line: 138
      },
      "54": {
        loc: {
          start: {
            line: 148,
            column: 8
          },
          end: {
            line: 149,
            column: 47
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 148,
            column: 8
          },
          end: {
            line: 149,
            column: 47
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 148
      },
      "55": {
        loc: {
          start: {
            line: 150,
            column: 8
          },
          end: {
            line: 151,
            column: 53
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 150,
            column: 8
          },
          end: {
            line: 151,
            column: 53
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 150
      },
      "56": {
        loc: {
          start: {
            line: 154,
            column: 8
          },
          end: {
            line: 155,
            column: 56
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 154,
            column: 8
          },
          end: {
            line: 155,
            column: 56
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 154
      },
      "57": {
        loc: {
          start: {
            line: 154,
            column: 12
          },
          end: {
            line: 154,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 154,
            column: 12
          },
          end: {
            line: 154,
            column: 46
          }
        }, {
          start: {
            line: 154,
            column: 50
          },
          end: {
            line: 154,
            column: 82
          }
        }],
        line: 154
      },
      "58": {
        loc: {
          start: {
            line: 156,
            column: 8
          },
          end: {
            line: 158,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 156,
            column: 8
          },
          end: {
            line: 158,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 156
      },
      "59": {
        loc: {
          start: {
            line: 159,
            column: 8
          },
          end: {
            line: 161,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 159,
            column: 8
          },
          end: {
            line: 161,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 159
      },
      "60": {
        loc: {
          start: {
            line: 171,
            column: 4
          },
          end: {
            line: 172,
            column: 15
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 171,
            column: 4
          },
          end: {
            line: 172,
            column: 15
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 171
      },
      "61": {
        loc: {
          start: {
            line: 195,
            column: 8
          },
          end: {
            line: 201,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 195,
            column: 8
          },
          end: {
            line: 201,
            column: 9
          }
        }, {
          start: {
            line: 199,
            column: 13
          },
          end: {
            line: 201,
            column: 9
          }
        }],
        line: 195
      },
      "62": {
        loc: {
          start: {
            line: 203,
            column: 8
          },
          end: {
            line: 205,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 203,
            column: 8
          },
          end: {
            line: 205,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 203
      },
      "63": {
        loc: {
          start: {
            line: 206,
            column: 8
          },
          end: {
            line: 208,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 206,
            column: 8
          },
          end: {
            line: 208,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 206
      },
      "64": {
        loc: {
          start: {
            line: 210,
            column: 8
          },
          end: {
            line: 212,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 210,
            column: 8
          },
          end: {
            line: 212,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 210
      },
      "65": {
        loc: {
          start: {
            line: 213,
            column: 8
          },
          end: {
            line: 215,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 213,
            column: 8
          },
          end: {
            line: 215,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 213
      },
      "66": {
        loc: {
          start: {
            line: 216,
            column: 8
          },
          end: {
            line: 218,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 216,
            column: 8
          },
          end: {
            line: 218,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 216
      },
      "67": {
        loc: {
          start: {
            line: 219,
            column: 8
          },
          end: {
            line: 221,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 219,
            column: 8
          },
          end: {
            line: 221,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 219
      },
      "68": {
        loc: {
          start: {
            line: 222,
            column: 8
          },
          end: {
            line: 224,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 222,
            column: 8
          },
          end: {
            line: 224,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 222
      },
      "69": {
        loc: {
          start: {
            line: 240,
            column: 37
          },
          end: {
            line: 240,
            column: 126
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 240,
            column: 37
          },
          end: {
            line: 240,
            column: 64
          }
        }, {
          start: {
            line: 240,
            column: 68
          },
          end: {
            line: 240,
            column: 101
          }
        }, {
          start: {
            line: 240,
            column: 105
          },
          end: {
            line: 240,
            column: 126
          }
        }],
        line: 240
      },
      "70": {
        loc: {
          start: {
            line: 241,
            column: 41
          },
          end: {
            line: 241,
            column: 118
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 241,
            column: 41
          },
          end: {
            line: 241,
            column: 71
          }
        }, {
          start: {
            line: 241,
            column: 75
          },
          end: {
            line: 241,
            column: 112
          }
        }, {
          start: {
            line: 241,
            column: 116
          },
          end: {
            line: 241,
            column: 118
          }
        }],
        line: 241
      },
      "71": {
        loc: {
          start: {
            line: 242,
            column: 47
          },
          end: {
            line: 242,
            column: 136
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 242,
            column: 47
          },
          end: {
            line: 242,
            column: 83
          }
        }, {
          start: {
            line: 242,
            column: 87
          },
          end: {
            line: 242,
            column: 130
          }
        }, {
          start: {
            line: 242,
            column: 134
          },
          end: {
            line: 242,
            column: 136
          }
        }],
        line: 242
      },
      "72": {
        loc: {
          start: {
            line: 243,
            column: 39
          },
          end: {
            line: 243,
            column: 120
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 243,
            column: 39
          },
          end: {
            line: 243,
            column: 68
          }
        }, {
          start: {
            line: 243,
            column: 72
          },
          end: {
            line: 243,
            column: 107
          }
        }, {
          start: {
            line: 243,
            column: 111
          },
          end: {
            line: 243,
            column: 120
          }
        }],
        line: 243
      },
      "73": {
        loc: {
          start: {
            line: 244,
            column: 32
          },
          end: {
            line: 244,
            column: 101
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 244,
            column: 32
          },
          end: {
            line: 244,
            column: 55
          }
        }, {
          start: {
            line: 244,
            column: 59
          },
          end: {
            line: 244,
            column: 87
          }
        }, {
          start: {
            line: 244,
            column: 91
          },
          end: {
            line: 244,
            column: 101
          }
        }],
        line: 244
      },
      "74": {
        loc: {
          start: {
            line: 251,
            column: 41
          },
          end: {
            line: 251,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 251,
            column: 41
          },
          end: {
            line: 251,
            column: 71
          }
        }, {
          start: {
            line: 251,
            column: 75
          },
          end: {
            line: 251,
            column: 77
          }
        }],
        line: 251
      },
      "75": {
        loc: {
          start: {
            line: 252,
            column: 46
          },
          end: {
            line: 252,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 252,
            column: 46
          },
          end: {
            line: 252,
            column: 81
          }
        }, {
          start: {
            line: 252,
            column: 85
          },
          end: {
            line: 252,
            column: 87
          }
        }],
        line: 252
      },
      "76": {
        loc: {
          start: {
            line: 257,
            column: 35
          },
          end: {
            line: 257,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 257,
            column: 35
          },
          end: {
            line: 257,
            column: 60
          }
        }, {
          start: {
            line: 257,
            column: 64
          },
          end: {
            line: 257,
            column: 66
          }
        }],
        line: 257
      },
      "77": {
        loc: {
          start: {
            line: 264,
            column: 37
          },
          end: {
            line: 264,
            column: 95
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 264,
            column: 37
          },
          end: {
            line: 264,
            column: 70
          }
        }, {
          start: {
            line: 264,
            column: 74
          },
          end: {
            line: 264,
            column: 95
          }
        }],
        line: 264
      },
      "78": {
        loc: {
          start: {
            line: 265,
            column: 41
          },
          end: {
            line: 265,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 265,
            column: 41
          },
          end: {
            line: 265,
            column: 78
          }
        }, {
          start: {
            line: 265,
            column: 82
          },
          end: {
            line: 265,
            column: 84
          }
        }],
        line: 265
      },
      "79": {
        loc: {
          start: {
            line: 266,
            column: 47
          },
          end: {
            line: 266,
            column: 96
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 266,
            column: 47
          },
          end: {
            line: 266,
            column: 90
          }
        }, {
          start: {
            line: 266,
            column: 94
          },
          end: {
            line: 266,
            column: 96
          }
        }],
        line: 266
      },
      "80": {
        loc: {
          start: {
            line: 267,
            column: 39
          },
          end: {
            line: 267,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 267,
            column: 39
          },
          end: {
            line: 267,
            column: 74
          }
        }, {
          start: {
            line: 267,
            column: 78
          },
          end: {
            line: 267,
            column: 87
          }
        }],
        line: 267
      },
      "81": {
        loc: {
          start: {
            line: 268,
            column: 32
          },
          end: {
            line: 268,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 268,
            column: 32
          },
          end: {
            line: 268,
            column: 60
          }
        }, {
          start: {
            line: 268,
            column: 64
          },
          end: {
            line: 268,
            column: 74
          }
        }],
        line: 268
      },
      "82": {
        loc: {
          start: {
            line: 269,
            column: 32
          },
          end: {
            line: 269,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 269,
            column: 32
          },
          end: {
            line: 269,
            column: 60
          }
        }, {
          start: {
            line: 269,
            column: 64
          },
          end: {
            line: 269,
            column: 66
          }
        }],
        line: 269
      },
      "83": {
        loc: {
          start: {
            line: 270,
            column: 37
          },
          end: {
            line: 270,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 270,
            column: 37
          },
          end: {
            line: 270,
            column: 70
          }
        }, {
          start: {
            line: 270,
            column: 74
          },
          end: {
            line: 270,
            column: 76
          }
        }],
        line: 270
      },
      "84": {
        loc: {
          start: {
            line: 271,
            column: 39
          },
          end: {
            line: 271,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 271,
            column: 39
          },
          end: {
            line: 271,
            column: 74
          }
        }, {
          start: {
            line: 271,
            column: 78
          },
          end: {
            line: 271,
            column: 80
          }
        }],
        line: 271
      },
      "85": {
        loc: {
          start: {
            line: 272,
            column: 32
          },
          end: {
            line: 272,
            column: 92
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 272,
            column: 32
          },
          end: {
            line: 272,
            column: 60
          }
        }, {
          start: {
            line: 272,
            column: 64
          },
          end: {
            line: 272,
            column: 86
          }
        }, {
          start: {
            line: 272,
            column: 90
          },
          end: {
            line: 272,
            column: 92
          }
        }],
        line: 272
      },
      "86": {
        loc: {
          start: {
            line: 273,
            column: 37
          },
          end: {
            line: 273,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 273,
            column: 37
          },
          end: {
            line: 273,
            column: 64
          }
        }, {
          start: {
            line: 273,
            column: 68
          },
          end: {
            line: 273,
            column: 70
          }
        }],
        line: 273
      },
      "87": {
        loc: {
          start: {
            line: 274,
            column: 41
          },
          end: {
            line: 274,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 274,
            column: 41
          },
          end: {
            line: 274,
            column: 78
          }
        }, {
          start: {
            line: 274,
            column: 82
          },
          end: {
            line: 274,
            column: 84
          }
        }],
        line: 274
      },
      "88": {
        loc: {
          start: {
            line: 275,
            column: 46
          },
          end: {
            line: 275,
            column: 94
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 275,
            column: 46
          },
          end: {
            line: 275,
            column: 88
          }
        }, {
          start: {
            line: 275,
            column: 92
          },
          end: {
            line: 275,
            column: 94
          }
        }],
        line: 275
      },
      "89": {
        loc: {
          start: {
            line: 276,
            column: 35
          },
          end: {
            line: 276,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 276,
            column: 35
          },
          end: {
            line: 276,
            column: 66
          }
        }, {
          start: {
            line: 276,
            column: 70
          },
          end: {
            line: 276,
            column: 72
          }
        }],
        line: 276
      },
      "90": {
        loc: {
          start: {
            line: 277,
            column: 37
          },
          end: {
            line: 277,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 277,
            column: 37
          },
          end: {
            line: 277,
            column: 70
          }
        }, {
          start: {
            line: 277,
            column: 74
          },
          end: {
            line: 277,
            column: 76
          }
        }],
        line: 277
      },
      "91": {
        loc: {
          start: {
            line: 278,
            column: 36
          },
          end: {
            line: 278,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 278,
            column: 36
          },
          end: {
            line: 278,
            column: 68
          }
        }, {
          start: {
            line: 278,
            column: 72
          },
          end: {
            line: 278,
            column: 74
          }
        }],
        line: 278
      },
      "92": {
        loc: {
          start: {
            line: 280,
            column: 35
          },
          end: {
            line: 280,
            column: 92
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 280,
            column: 35
          },
          end: {
            line: 280,
            column: 86
          }
        }, {
          start: {
            line: 280,
            column: 90
          },
          end: {
            line: 280,
            column: 92
          }
        }],
        line: 280
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0, 0],
      "47": [0, 0],
      "48": [0, 0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0],
      "66": [0, 0],
      "67": [0, 0],
      "68": [0, 0],
      "69": [0, 0, 0],
      "70": [0, 0, 0],
      "71": [0, 0, 0],
      "72": [0, 0, 0],
      "73": [0, 0, 0],
      "74": [0, 0],
      "75": [0, 0],
      "76": [0, 0],
      "77": [0, 0],
      "78": [0, 0],
      "79": [0, 0],
      "80": [0, 0],
      "81": [0, 0],
      "82": [0, 0],
      "83": [0, 0],
      "84": [0, 0],
      "85": [0, 0, 0],
      "86": [0, 0],
      "87": [0, 0],
      "88": [0, 0],
      "89": [0, 0],
      "90": [0, 0],
      "91": [0, 0],
      "92": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/dikshantvashistha/PrepBettr/lib/azure-config.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/dikshantvashistha/PrepBettr/lib/azure-config.ts"],
      sourcesContent: ["import { DefaultAzureCredential } from '@azure/identity';\nimport { SecretClient } from '@azure/keyvault-secrets';\n\n// Client-side safety check - provide empty implementations when running on client\nconst isClient = typeof window !== 'undefined';\n\nif (isClient) {\n  console.warn('[Azure Config] Running on client side - using fallback implementations');\n}\n\n// Azure Key Vault configuration\nconst AZURE_KEY_VAULT_URI = process.env.AZURE_KEY_VAULT_URI || 'https://prepbettr-keyvault-083.vault.azure.net/';\n\ninterface AzureSecrets {\n  speechKey: string;\n  speechEndpoint: string;\n  azureOpenAIKey: string;\n  azureOpenAIEndpoint: string;\n  azureOpenAIDeployment: string;\n  // Firebase configuration\n  firebaseProjectId: string;\n  firebaseClientEmail: string;\n  firebasePrivateKey: string;\n  firebaseClientKey?: string;\n  // Additional Azure services\n  azureFormRecognizerKey?: string;\n  azureFormRecognizerEndpoint?: string;\n  // Storage configuration\n  azureStorageAccount?: string;\n  azureStorageAccountKey?: string;\n  azureStorageConnectionString?: string;\n  azureStorageContainer?: string;\n  storageProvider?: string;\n}\n\nlet cachedSecrets: AzureSecrets | null = null;\n\n/**\n * Initialize Azure Key Vault client\n */\nfunction createKeyVaultClient(): SecretClient {\n  if (!AZURE_KEY_VAULT_URI) {\n    throw new Error('AZURE_KEY_VAULT_URI environment variable is required');\n  }\n  \n  const credential = new DefaultAzureCredential();\n  return new SecretClient(AZURE_KEY_VAULT_URI, credential);\n}\n\n/**\n * Clear cached secrets (useful when Azure keys are renewed)\n */\nexport function clearAzureSecretsCache(): void {\n  if (isClient) return;\n  console.log('\uD83D\uDD04 Clearing Azure secrets cache...');\n  cachedSecrets = null;\n}\n\n/**\n * Fetch secrets from Azure Key Vault\n */\nexport async function fetchAzureSecrets(forceRefresh: boolean = false): Promise<AzureSecrets> {\n  if (isClient) {\n    return {\n      speechKey: '',\n      speechEndpoint: '',\n      azureOpenAIKey: '',\n      azureOpenAIEndpoint: '',\n      azureOpenAIDeployment: '',\n      firebaseProjectId: '',\n      firebaseClientEmail: '',\n      firebasePrivateKey: ''\n    };\n  }\n  // Clear cache if force refresh is requested\n  if (forceRefresh) {\n    clearAzureSecretsCache();\n  }\n  \n  // Return cached secrets if available\n  if (cachedSecrets) {\n    return cachedSecrets;\n  }\n\n  try {\n    console.log('\uD83D\uDD11 Fetching secrets from Azure Key Vault...');\n    const client = createKeyVaultClient();\n\n    // Helper function to suppress expected 404 errors for optional secrets\n    const getOptionalSecret = (name: string) => \n      client.getSecret(name).catch(err => {\n        if (err.statusCode !== 404) {\n          console.warn(`\u26A0\uFE0F Unexpected error fetching optional secret '${name}':`, err.message);\n        }\n        return null;\n      });\n\n    // Fetch all secrets (some are optional)\n    const [\n      speechKey, speechEndpoint, azureOpenAIKey, azureOpenAIEndpoint, azureOpenAIDeployment,\n      firebaseProjectId, firebaseClientEmail, firebasePrivateKey, firebaseClientKey,\n      azureFormRecognizerKey, azureFormRecognizerEndpoint, \n      azureStorageAccount, azureStorageAccountKey, azureStorageConnectionString,\n      azureStorageContainer, storageProvider\n    ] = await Promise.all([\n      client.getSecret('speech-key'),\n      client.getSecret('speech-endpoint'),\n      client.getSecret('azure-openai-key'),\n      client.getSecret('azure-openai-endpoint'),\n      client.getSecret('azure-openai-deployment'),\n      getOptionalSecret('firebase-project-id'),\n      getOptionalSecret('firebase-client-email'),\n      getOptionalSecret('firebase-private-key'),\n      getOptionalSecret('NEXT-PUBLIC-FIREBASE-CLIENT-KEY'),\n      getOptionalSecret('azure-form-recognizer-key'),\n      getOptionalSecret('azure-form-recognizer-endpoint'),\n      getOptionalSecret('azure-storage-account'),\n      getOptionalSecret('azure-storage-account-key'),\n      getOptionalSecret('azure-storage-connection-string'),\n      getOptionalSecret('azure-storage-container'),\n      getOptionalSecret('storage-provider')\n    ]);\n\n    // Validate only Azure-related secrets (Firebase can come from env vars)\n    const requiredAzureSecrets = {\n      speechKey: speechKey?.value,\n      speechEndpoint: speechEndpoint?.value,\n      azureOpenAIKey: azureOpenAIKey?.value,\n      azureOpenAIEndpoint: azureOpenAIEndpoint?.value,\n      azureOpenAIDeployment: azureOpenAIDeployment?.value\n    };\n\n    const missingAzureSecrets = Object.entries(requiredAzureSecrets)\n      .filter(([_, value]) => !value)\n      .map(([key, _]) => key);\n\n    if (missingAzureSecrets.length > 0) {\n      throw new Error(`Required Azure secrets missing from Key Vault: ${missingAzureSecrets.join(', ')}`);\n    }\n\n    cachedSecrets = {\n      speechKey: speechKey.value!,\n      speechEndpoint: speechEndpoint.value!,\n      azureOpenAIKey: azureOpenAIKey.value!,\n      azureOpenAIEndpoint: azureOpenAIEndpoint.value!,\n      azureOpenAIDeployment: azureOpenAIDeployment.value!,\n      firebaseProjectId: firebaseProjectId?.value || process.env.FIREBASE_PROJECT_ID || '',\n      firebaseClientEmail: firebaseClientEmail?.value || process.env.FIREBASE_CLIENT_EMAIL || '',\n      firebasePrivateKey: firebasePrivateKey?.value || process.env.FIREBASE_PRIVATE_KEY || '',\n      firebaseClientKey: firebaseClientKey?.value || '',\n      azureFormRecognizerKey: azureFormRecognizerKey?.value,\n      azureFormRecognizerEndpoint: azureFormRecognizerEndpoint?.value,\n      azureStorageAccount: azureStorageAccount?.value,\n      azureStorageAccountKey: azureStorageAccountKey?.value,\n      azureStorageConnectionString: azureStorageConnectionString?.value,\n      azureStorageContainer: azureStorageContainer?.value,\n      storageProvider: storageProvider?.value\n    };\n\n    console.log('\u2705 Azure secrets loaded successfully');\n    return cachedSecrets;\n\n  } catch (error) {\n    console.error('\u274C Failed to fetch Azure secrets:', error);\n    \n    // Fallback to environment variables if Key Vault fails\n    console.log('\uD83D\uDD04 Falling back to environment variables...');\n    const fallbackSecrets: AzureSecrets = {\n      speechKey: process.env.AZURE_SPEECH_KEY || process.env.SPEECH_KEY || '',\n      speechEndpoint: process.env.SPEECH_ENDPOINT || 'https://eastus2.api.cognitive.microsoft.com/',\n      azureOpenAIKey: process.env.AZURE_OPENAI_API_KEY || process.env.AZURE_OPENAI_KEY || '',\n      azureOpenAIEndpoint: process.env.AZURE_OPENAI_ENDPOINT || '',\n      azureOpenAIDeployment: process.env.AZURE_OPENAI_DEPLOYMENT || '',\n      // Firebase fallbacks\n      firebaseProjectId: process.env.FIREBASE_PROJECT_ID || '',\n      firebaseClientEmail: process.env.FIREBASE_CLIENT_EMAIL || '',\n      firebasePrivateKey: process.env.FIREBASE_PRIVATE_KEY || '',\n      firebaseClientKey: '',\n      // Optional fallbacks\n      azureFormRecognizerKey: process.env.AZURE_FORM_RECOGNIZER_KEY,\n      azureFormRecognizerEndpoint: process.env.AZURE_FORM_RECOGNIZER_ENDPOINT,\n      azureStorageAccount: process.env.AZURE_STORAGE_ACCOUNT_NAME,\n      azureStorageAccountKey: process.env.AZURE_STORAGE_ACCOUNT_KEY\n    };\n\n    // Only warn about critical missing secrets\n    const missingCritical = [];\n    if (!fallbackSecrets.speechKey) missingCritical.push('SPEECH_KEY');\n    if (!fallbackSecrets.azureOpenAIKey) missingCritical.push('AZURE_OPENAI_KEY');\n    \n    // Only warn about missing optional secrets if not available from environment\n    const missingOptional = [];\n    if (!fallbackSecrets.firebaseProjectId && !process.env.FIREBASE_PROJECT_ID) missingOptional.push('FIREBASE_PROJECT_ID');\n\n    if (missingCritical.length > 0) {\n      console.error(`\u274C Critical secrets missing: ${missingCritical.join(', ')}`);\n    }\n    if (missingOptional.length > 0) {\n      console.warn(`\u26A0\uFE0F Optional secrets missing: ${missingOptional.join(', ')}`);\n    }\n\n    cachedSecrets = fallbackSecrets;\n    return cachedSecrets;\n  }\n}\n\n\n/**\n * Initialize environment variables from Azure Key Vault\n * This should be called at application startup\n */\nexport async function initializeAzureEnvironment(): Promise<void> {\n  if (isClient) return;\n  try {\n    const secrets = await fetchAzureSecrets();\n    \n    // Set Azure service environment variables\n    process.env.SPEECH_KEY = secrets.speechKey;\n    process.env.SPEECH_ENDPOINT = secrets.speechEndpoint;\n    \n    // Set Azure OpenAI environment variables\n    process.env.AZURE_OPENAI_KEY = secrets.azureOpenAIKey;\n    process.env.AZURE_OPENAI_ENDPOINT = secrets.azureOpenAIEndpoint;\n    process.env.AZURE_OPENAI_DEPLOYMENT = secrets.azureOpenAIDeployment;\n    \n    // Set Firebase environment variables\n    process.env.FIREBASE_PROJECT_ID = secrets.firebaseProjectId;\n    process.env.FIREBASE_CLIENT_EMAIL = secrets.firebaseClientEmail;\n    process.env.FIREBASE_PRIVATE_KEY = secrets.firebasePrivateKey;\n    \n    // Set client-side environment variables using string concatenation to avoid Next.js inlining\n    const nextPublicPrefix = 'NEXT_PUBLIC_';\n    process.env[nextPublicPrefix + 'SPEECH_KEY'] = secrets.speechKey;\n    process.env[nextPublicPrefix + 'SPEECH_ENDPOINT'] = secrets.speechEndpoint;\n    process.env[nextPublicPrefix + 'AZURE_OPENAI_API_KEY'] = secrets.azureOpenAIKey;\n    process.env[nextPublicPrefix + 'AZURE_OPENAI_ENDPOINT'] = secrets.azureOpenAIEndpoint;\n    process.env[nextPublicPrefix + 'AZURE_OPENAI_DEPLOYMENT'] = secrets.azureOpenAIDeployment;\n    process.env[nextPublicPrefix + 'FIREBASE_PROJECT_ID'] = secrets.firebaseProjectId;\n    \n    // Set the Firebase client key from secrets or environment\n    if (secrets.firebaseClientKey) {\n      process.env[nextPublicPrefix + 'FIREBASE_CLIENT_KEY'] = secrets.firebaseClientKey;\n      console.log('\uD83D\uDD11 Firebase client key set from Azure Key Vault');\n    } else {\n      console.warn('\u26A0\uFE0F Firebase client key not found in Azure Key Vault');\n    }\n    \n    // Set optional Azure services if available\n    if (secrets.azureFormRecognizerKey) {\n      process.env.AZURE_FORM_RECOGNIZER_KEY = secrets.azureFormRecognizerKey;\n    }\n    if (secrets.azureFormRecognizerEndpoint) {\n      process.env.AZURE_FORM_RECOGNIZER_ENDPOINT = secrets.azureFormRecognizerEndpoint;\n    }\n    // Set storage configuration\n    if (secrets.azureStorageAccount) {\n      process.env.AZURE_STORAGE_ACCOUNT = secrets.azureStorageAccount;\n    }\n    if (secrets.azureStorageAccountKey) {\n      process.env.AZURE_STORAGE_ACCOUNT_KEY = secrets.azureStorageAccountKey;\n    }\n    if (secrets.azureStorageConnectionString) {\n      process.env.AZURE_STORAGE_CONNECTION_STRING = secrets.azureStorageConnectionString;\n    }\n    if (secrets.azureStorageContainer) {\n      process.env.AZURE_STORAGE_CONTAINER = secrets.azureStorageContainer;\n    }\n    if (secrets.storageProvider) {\n      process.env.STORAGE_PROVIDER = secrets.storageProvider;\n    }\n\n    console.log('\uD83C\uDF1F Azure environment initialized successfully');\n  } catch (error) {\n    console.error('\u274C Failed to initialize Azure environment:', error);\n    throw error;\n  }\n}\n\n/**\n * Get generic configuration values (used by storage abstraction and other services)\n */\nexport async function getConfiguration(): Promise<Record<string, string>> {\n  try {\n    const secrets = await fetchAzureSecrets();\n    \n    return {\n      // Azure Storage configuration\n      'AZURE_STORAGE_ACCOUNT': secrets.azureStorageAccount || process.env.AZURE_STORAGE_ACCOUNT || 'prepbettrstorage684',\n      'AZURE_STORAGE_ACCOUNT_KEY': secrets.azureStorageAccountKey || process.env.AZURE_STORAGE_ACCOUNT_KEY || '',\n      'AZURE_STORAGE_CONNECTION_STRING': secrets.azureStorageConnectionString || process.env.AZURE_STORAGE_CONNECTION_STRING || '',\n      'AZURE_STORAGE_CONTAINER': secrets.azureStorageContainer || process.env.AZURE_STORAGE_CONTAINER || 'resumes',\n      'STORAGE_PROVIDER': secrets.storageProvider || process.env.STORAGE_PROVIDER || 'firebase',\n      \n      // Azure AI services\n      'AZURE_OPENAI_KEY': secrets.azureOpenAIKey,\n      'AZURE_OPENAI_ENDPOINT': secrets.azureOpenAIEndpoint,\n      'AZURE_OPENAI_DEPLOYMENT': secrets.azureOpenAIDeployment,\n      'AZURE_SPEECH_KEY': secrets.speechKey,\n      'AZURE_SPEECH_ENDPOINT': secrets.speechEndpoint,\n      'AZURE_FORM_RECOGNIZER_KEY': secrets.azureFormRecognizerKey || '',\n      'AZURE_FORM_RECOGNIZER_ENDPOINT': secrets.azureFormRecognizerEndpoint || '',\n      \n      // Firebase configuration\n      'FIREBASE_PROJECT_ID': secrets.firebaseProjectId,\n      'FIREBASE_CLIENT_EMAIL': secrets.firebaseClientEmail,\n      'FIREBASE_PRIVATE_KEY': secrets.firebasePrivateKey,\n      'FIREBASE_CLIENT_KEY': secrets.firebaseClientKey || ''\n    };\n  } catch (error) {\n    console.warn('Failed to get configuration from Azure, using environment variables:', error);\n    \n    // Fallback to environment variables only\n    return {\n      'AZURE_STORAGE_ACCOUNT': process.env.AZURE_STORAGE_ACCOUNT || 'prepbettrstorage684',\n      'AZURE_STORAGE_ACCOUNT_KEY': process.env.AZURE_STORAGE_ACCOUNT_KEY || '',\n      'AZURE_STORAGE_CONNECTION_STRING': process.env.AZURE_STORAGE_CONNECTION_STRING || '',\n      'AZURE_STORAGE_CONTAINER': process.env.AZURE_STORAGE_CONTAINER || 'resumes',\n      'STORAGE_PROVIDER': process.env.STORAGE_PROVIDER || 'firebase',\n      'AZURE_OPENAI_KEY': process.env.AZURE_OPENAI_KEY || '',\n      'AZURE_OPENAI_ENDPOINT': process.env.AZURE_OPENAI_ENDPOINT || '',\n      'AZURE_OPENAI_DEPLOYMENT': process.env.AZURE_OPENAI_DEPLOYMENT || '',\n      'AZURE_SPEECH_KEY': process.env.AZURE_SPEECH_KEY || process.env.SPEECH_KEY || '',\n      'AZURE_SPEECH_ENDPOINT': process.env.SPEECH_ENDPOINT || '',\n      'AZURE_FORM_RECOGNIZER_KEY': process.env.AZURE_FORM_RECOGNIZER_KEY || '',\n      'AZURE_FORM_RECOGNIZER_ENDPOINT': process.env.AZURE_FORM_RECOGNIZER_ENDPOINT || '',\n      'FIREBASE_PROJECT_ID': process.env.FIREBASE_PROJECT_ID || '',\n      'FIREBASE_CLIENT_EMAIL': process.env.FIREBASE_CLIENT_EMAIL || '',\n      'FIREBASE_PRIVATE_KEY': process.env.FIREBASE_PRIVATE_KEY || '',\n      // Use string concatenation to avoid Next.js inlining\n      'FIREBASE_CLIENT_KEY': process.env['NEXT_PUBLIC_' + 'FIREBASE_CLIENT_KEY'] || ''\n    };\n  }\n}\n\n/**\n * Get current Azure configuration (for debugging)\n */\nexport function getAzureConfig() {\n  const nextPublicPrefix = 'NEXT_PUBLIC_';\n  return {\n    keyVaultUri: AZURE_KEY_VAULT_URI,\n    hasSecretsCache: !!cachedSecrets,\n    environment: {\n      speechKey: !!process.env[nextPublicPrefix + 'SPEECH_KEY'],\n      speechEndpoint: !!process.env[nextPublicPrefix + 'SPEECH_ENDPOINT'],\n      azureOpenAIKey: !!process.env.AZURE_OPENAI_KEY,\n      azureOpenAIEndpoint: !!process.env.AZURE_OPENAI_ENDPOINT,\n      azureOpenAIDeployment: !!process.env.AZURE_OPENAI_DEPLOYMENT\n    }\n  };\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f83f45ef288badd20187ac3b34a820219530282a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2j1f3sxqec = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2j1f3sxqec();
cov_2j1f3sxqec().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2j1f3sxqec().s[1]++;
exports.clearAzureSecretsCache = clearAzureSecretsCache;
/* istanbul ignore next */
cov_2j1f3sxqec().s[2]++;
exports.fetchAzureSecrets = fetchAzureSecrets;
/* istanbul ignore next */
cov_2j1f3sxqec().s[3]++;
exports.initializeAzureEnvironment = initializeAzureEnvironment;
/* istanbul ignore next */
cov_2j1f3sxqec().s[4]++;
exports.getConfiguration = getConfiguration;
/* istanbul ignore next */
cov_2j1f3sxqec().s[5]++;
exports.getAzureConfig = getAzureConfig;
const identity_1 =
/* istanbul ignore next */
(cov_2j1f3sxqec().s[6]++, require("@azure/identity"));
const keyvault_secrets_1 =
/* istanbul ignore next */
(cov_2j1f3sxqec().s[7]++, require("@azure/keyvault-secrets"));
// Client-side safety check - provide empty implementations when running on client
const isClient =
/* istanbul ignore next */
(cov_2j1f3sxqec().s[8]++, typeof window !== 'undefined');
/* istanbul ignore next */
cov_2j1f3sxqec().s[9]++;
if (isClient) {
  /* istanbul ignore next */
  cov_2j1f3sxqec().b[0][0]++;
  cov_2j1f3sxqec().s[10]++;
  console.warn('[Azure Config] Running on client side - using fallback implementations');
} else
/* istanbul ignore next */
{
  cov_2j1f3sxqec().b[0][1]++;
}
// Azure Key Vault configuration
const AZURE_KEY_VAULT_URI =
/* istanbul ignore next */
(cov_2j1f3sxqec().s[11]++,
/* istanbul ignore next */
(cov_2j1f3sxqec().b[1][0]++, process.env.AZURE_KEY_VAULT_URI) ||
/* istanbul ignore next */
(cov_2j1f3sxqec().b[1][1]++, 'https://prepbettr-keyvault-083.vault.azure.net/'));
let cachedSecrets =
/* istanbul ignore next */
(cov_2j1f3sxqec().s[12]++, null);
/**
 * Initialize Azure Key Vault client
 */
function createKeyVaultClient() {
  /* istanbul ignore next */
  cov_2j1f3sxqec().f[0]++;
  cov_2j1f3sxqec().s[13]++;
  if (!AZURE_KEY_VAULT_URI) {
    /* istanbul ignore next */
    cov_2j1f3sxqec().b[2][0]++;
    cov_2j1f3sxqec().s[14]++;
    throw new Error('AZURE_KEY_VAULT_URI environment variable is required');
  } else
  /* istanbul ignore next */
  {
    cov_2j1f3sxqec().b[2][1]++;
  }
  const credential =
  /* istanbul ignore next */
  (cov_2j1f3sxqec().s[15]++, new identity_1.DefaultAzureCredential());
  /* istanbul ignore next */
  cov_2j1f3sxqec().s[16]++;
  return new keyvault_secrets_1.SecretClient(AZURE_KEY_VAULT_URI, credential);
}
/**
 * Clear cached secrets (useful when Azure keys are renewed)
 */
function clearAzureSecretsCache() {
  /* istanbul ignore next */
  cov_2j1f3sxqec().f[1]++;
  cov_2j1f3sxqec().s[17]++;
  if (isClient) {
    /* istanbul ignore next */
    cov_2j1f3sxqec().b[3][0]++;
    cov_2j1f3sxqec().s[18]++;
    return;
  } else
  /* istanbul ignore next */
  {
    cov_2j1f3sxqec().b[3][1]++;
  }
  cov_2j1f3sxqec().s[19]++;
  console.log('🔄 Clearing Azure secrets cache...');
  /* istanbul ignore next */
  cov_2j1f3sxqec().s[20]++;
  cachedSecrets = null;
}
/**
 * Fetch secrets from Azure Key Vault
 */
async function fetchAzureSecrets(forceRefresh =
/* istanbul ignore next */
(cov_2j1f3sxqec().b[4][0]++, false)) {
  /* istanbul ignore next */
  cov_2j1f3sxqec().f[2]++;
  cov_2j1f3sxqec().s[21]++;
  if (isClient) {
    /* istanbul ignore next */
    cov_2j1f3sxqec().b[5][0]++;
    cov_2j1f3sxqec().s[22]++;
    return {
      speechKey: '',
      speechEndpoint: '',
      azureOpenAIKey: '',
      azureOpenAIEndpoint: '',
      azureOpenAIDeployment: '',
      firebaseProjectId: '',
      firebaseClientEmail: '',
      firebasePrivateKey: ''
    };
  } else
  /* istanbul ignore next */
  {
    cov_2j1f3sxqec().b[5][1]++;
  }
  // Clear cache if force refresh is requested
  cov_2j1f3sxqec().s[23]++;
  if (forceRefresh) {
    /* istanbul ignore next */
    cov_2j1f3sxqec().b[6][0]++;
    cov_2j1f3sxqec().s[24]++;
    clearAzureSecretsCache();
  } else
  /* istanbul ignore next */
  {
    cov_2j1f3sxqec().b[6][1]++;
  }
  // Return cached secrets if available
  cov_2j1f3sxqec().s[25]++;
  if (cachedSecrets) {
    /* istanbul ignore next */
    cov_2j1f3sxqec().b[7][0]++;
    cov_2j1f3sxqec().s[26]++;
    return cachedSecrets;
  } else
  /* istanbul ignore next */
  {
    cov_2j1f3sxqec().b[7][1]++;
  }
  cov_2j1f3sxqec().s[27]++;
  try {
    /* istanbul ignore next */
    cov_2j1f3sxqec().s[28]++;
    console.log('🔑 Fetching secrets from Azure Key Vault...');
    const client =
    /* istanbul ignore next */
    (cov_2j1f3sxqec().s[29]++, createKeyVaultClient());
    // Helper function to suppress expected 404 errors for optional secrets
    /* istanbul ignore next */
    cov_2j1f3sxqec().s[30]++;
    const getOptionalSecret = name => {
      /* istanbul ignore next */
      cov_2j1f3sxqec().f[3]++;
      cov_2j1f3sxqec().s[31]++;
      return client.getSecret(name).catch(err => {
        /* istanbul ignore next */
        cov_2j1f3sxqec().f[4]++;
        cov_2j1f3sxqec().s[32]++;
        if (err.statusCode !== 404) {
          /* istanbul ignore next */
          cov_2j1f3sxqec().b[8][0]++;
          cov_2j1f3sxqec().s[33]++;
          console.warn(`⚠️ Unexpected error fetching optional secret '${name}':`, err.message);
        } else
        /* istanbul ignore next */
        {
          cov_2j1f3sxqec().b[8][1]++;
        }
        cov_2j1f3sxqec().s[34]++;
        return null;
      });
    };
    // Fetch all secrets (some are optional)
    const [speechKey, speechEndpoint, azureOpenAIKey, azureOpenAIEndpoint, azureOpenAIDeployment, firebaseProjectId, firebaseClientEmail, firebasePrivateKey, firebaseClientKey, azureFormRecognizerKey, azureFormRecognizerEndpoint, azureStorageAccount, azureStorageAccountKey, azureStorageConnectionString, azureStorageContainer, storageProvider] =
    /* istanbul ignore next */
    (cov_2j1f3sxqec().s[35]++, await Promise.all([client.getSecret('speech-key'), client.getSecret('speech-endpoint'), client.getSecret('azure-openai-key'), client.getSecret('azure-openai-endpoint'), client.getSecret('azure-openai-deployment'), getOptionalSecret('firebase-project-id'), getOptionalSecret('firebase-client-email'), getOptionalSecret('firebase-private-key'), getOptionalSecret('NEXT-PUBLIC-FIREBASE-CLIENT-KEY'), getOptionalSecret('azure-form-recognizer-key'), getOptionalSecret('azure-form-recognizer-endpoint'), getOptionalSecret('azure-storage-account'), getOptionalSecret('azure-storage-account-key'), getOptionalSecret('azure-storage-connection-string'), getOptionalSecret('azure-storage-container'), getOptionalSecret('storage-provider')]));
    // Validate only Azure-related secrets (Firebase can come from env vars)
    const requiredAzureSecrets =
    /* istanbul ignore next */
    (cov_2j1f3sxqec().s[36]++, {
      speechKey:
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[10][0]++, speechKey === null) ||
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[10][1]++, speechKey === void 0) ?
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[9][0]++, void 0) :
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[9][1]++, speechKey.value),
      speechEndpoint:
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[12][0]++, speechEndpoint === null) ||
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[12][1]++, speechEndpoint === void 0) ?
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[11][0]++, void 0) :
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[11][1]++, speechEndpoint.value),
      azureOpenAIKey:
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[14][0]++, azureOpenAIKey === null) ||
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[14][1]++, azureOpenAIKey === void 0) ?
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[13][0]++, void 0) :
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[13][1]++, azureOpenAIKey.value),
      azureOpenAIEndpoint:
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[16][0]++, azureOpenAIEndpoint === null) ||
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[16][1]++, azureOpenAIEndpoint === void 0) ?
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[15][0]++, void 0) :
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[15][1]++, azureOpenAIEndpoint.value),
      azureOpenAIDeployment:
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[18][0]++, azureOpenAIDeployment === null) ||
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[18][1]++, azureOpenAIDeployment === void 0) ?
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[17][0]++, void 0) :
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[17][1]++, azureOpenAIDeployment.value)
    });
    const missingAzureSecrets =
    /* istanbul ignore next */
    (cov_2j1f3sxqec().s[37]++, Object.entries(requiredAzureSecrets).filter(([_, value]) => {
      /* istanbul ignore next */
      cov_2j1f3sxqec().f[5]++;
      cov_2j1f3sxqec().s[38]++;
      return !value;
    }).map(([key, _]) => {
      /* istanbul ignore next */
      cov_2j1f3sxqec().f[6]++;
      cov_2j1f3sxqec().s[39]++;
      return key;
    }));
    /* istanbul ignore next */
    cov_2j1f3sxqec().s[40]++;
    if (missingAzureSecrets.length > 0) {
      /* istanbul ignore next */
      cov_2j1f3sxqec().b[19][0]++;
      cov_2j1f3sxqec().s[41]++;
      throw new Error(`Required Azure secrets missing from Key Vault: ${missingAzureSecrets.join(', ')}`);
    } else
    /* istanbul ignore next */
    {
      cov_2j1f3sxqec().b[19][1]++;
    }
    cov_2j1f3sxqec().s[42]++;
    cachedSecrets = {
      speechKey: speechKey.value,
      speechEndpoint: speechEndpoint.value,
      azureOpenAIKey: azureOpenAIKey.value,
      azureOpenAIEndpoint: azureOpenAIEndpoint.value,
      azureOpenAIDeployment: azureOpenAIDeployment.value,
      firebaseProjectId:
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[20][0]++,
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[22][0]++, firebaseProjectId === null) ||
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[22][1]++, firebaseProjectId === void 0) ?
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[21][0]++, void 0) :
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[21][1]++, firebaseProjectId.value)) ||
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[20][1]++, process.env.FIREBASE_PROJECT_ID) ||
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[20][2]++, ''),
      firebaseClientEmail:
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[23][0]++,
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[25][0]++, firebaseClientEmail === null) ||
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[25][1]++, firebaseClientEmail === void 0) ?
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[24][0]++, void 0) :
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[24][1]++, firebaseClientEmail.value)) ||
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[23][1]++, process.env.FIREBASE_CLIENT_EMAIL) ||
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[23][2]++, ''),
      firebasePrivateKey:
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[26][0]++,
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[28][0]++, firebasePrivateKey === null) ||
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[28][1]++, firebasePrivateKey === void 0) ?
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[27][0]++, void 0) :
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[27][1]++, firebasePrivateKey.value)) ||
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[26][1]++, process.env.FIREBASE_PRIVATE_KEY) ||
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[26][2]++, ''),
      firebaseClientKey:
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[29][0]++,
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[31][0]++, firebaseClientKey === null) ||
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[31][1]++, firebaseClientKey === void 0) ?
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[30][0]++, void 0) :
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[30][1]++, firebaseClientKey.value)) ||
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[29][1]++, ''),
      azureFormRecognizerKey:
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[33][0]++, azureFormRecognizerKey === null) ||
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[33][1]++, azureFormRecognizerKey === void 0) ?
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[32][0]++, void 0) :
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[32][1]++, azureFormRecognizerKey.value),
      azureFormRecognizerEndpoint:
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[35][0]++, azureFormRecognizerEndpoint === null) ||
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[35][1]++, azureFormRecognizerEndpoint === void 0) ?
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[34][0]++, void 0) :
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[34][1]++, azureFormRecognizerEndpoint.value),
      azureStorageAccount:
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[37][0]++, azureStorageAccount === null) ||
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[37][1]++, azureStorageAccount === void 0) ?
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[36][0]++, void 0) :
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[36][1]++, azureStorageAccount.value),
      azureStorageAccountKey:
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[39][0]++, azureStorageAccountKey === null) ||
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[39][1]++, azureStorageAccountKey === void 0) ?
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[38][0]++, void 0) :
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[38][1]++, azureStorageAccountKey.value),
      azureStorageConnectionString:
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[41][0]++, azureStorageConnectionString === null) ||
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[41][1]++, azureStorageConnectionString === void 0) ?
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[40][0]++, void 0) :
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[40][1]++, azureStorageConnectionString.value),
      azureStorageContainer:
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[43][0]++, azureStorageContainer === null) ||
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[43][1]++, azureStorageContainer === void 0) ?
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[42][0]++, void 0) :
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[42][1]++, azureStorageContainer.value),
      storageProvider:
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[45][0]++, storageProvider === null) ||
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[45][1]++, storageProvider === void 0) ?
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[44][0]++, void 0) :
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[44][1]++, storageProvider.value)
    };
    /* istanbul ignore next */
    cov_2j1f3sxqec().s[43]++;
    console.log('✅ Azure secrets loaded successfully');
    /* istanbul ignore next */
    cov_2j1f3sxqec().s[44]++;
    return cachedSecrets;
  } catch (error) {
    /* istanbul ignore next */
    cov_2j1f3sxqec().s[45]++;
    console.error('❌ Failed to fetch Azure secrets:', error);
    // Fallback to environment variables if Key Vault fails
    /* istanbul ignore next */
    cov_2j1f3sxqec().s[46]++;
    console.log('🔄 Falling back to environment variables...');
    const fallbackSecrets =
    /* istanbul ignore next */
    (cov_2j1f3sxqec().s[47]++, {
      speechKey:
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[46][0]++, process.env.AZURE_SPEECH_KEY) ||
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[46][1]++, process.env.SPEECH_KEY) ||
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[46][2]++, ''),
      speechEndpoint:
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[47][0]++, process.env.SPEECH_ENDPOINT) ||
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[47][1]++, 'https://eastus2.api.cognitive.microsoft.com/'),
      azureOpenAIKey:
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[48][0]++, process.env.AZURE_OPENAI_API_KEY) ||
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[48][1]++, process.env.AZURE_OPENAI_KEY) ||
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[48][2]++, ''),
      azureOpenAIEndpoint:
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[49][0]++, process.env.AZURE_OPENAI_ENDPOINT) ||
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[49][1]++, ''),
      azureOpenAIDeployment:
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[50][0]++, process.env.AZURE_OPENAI_DEPLOYMENT) ||
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[50][1]++, ''),
      // Firebase fallbacks
      firebaseProjectId:
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[51][0]++, process.env.FIREBASE_PROJECT_ID) ||
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[51][1]++, ''),
      firebaseClientEmail:
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[52][0]++, process.env.FIREBASE_CLIENT_EMAIL) ||
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[52][1]++, ''),
      firebasePrivateKey:
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[53][0]++, process.env.FIREBASE_PRIVATE_KEY) ||
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[53][1]++, ''),
      firebaseClientKey: '',
      // Optional fallbacks
      azureFormRecognizerKey: process.env.AZURE_FORM_RECOGNIZER_KEY,
      azureFormRecognizerEndpoint: process.env.AZURE_FORM_RECOGNIZER_ENDPOINT,
      azureStorageAccount: process.env.AZURE_STORAGE_ACCOUNT_NAME,
      azureStorageAccountKey: process.env.AZURE_STORAGE_ACCOUNT_KEY
    });
    // Only warn about critical missing secrets
    const missingCritical =
    /* istanbul ignore next */
    (cov_2j1f3sxqec().s[48]++, []);
    /* istanbul ignore next */
    cov_2j1f3sxqec().s[49]++;
    if (!fallbackSecrets.speechKey) {
      /* istanbul ignore next */
      cov_2j1f3sxqec().b[54][0]++;
      cov_2j1f3sxqec().s[50]++;
      missingCritical.push('SPEECH_KEY');
    } else
    /* istanbul ignore next */
    {
      cov_2j1f3sxqec().b[54][1]++;
    }
    cov_2j1f3sxqec().s[51]++;
    if (!fallbackSecrets.azureOpenAIKey) {
      /* istanbul ignore next */
      cov_2j1f3sxqec().b[55][0]++;
      cov_2j1f3sxqec().s[52]++;
      missingCritical.push('AZURE_OPENAI_KEY');
    } else
    /* istanbul ignore next */
    {
      cov_2j1f3sxqec().b[55][1]++;
    }
    // Only warn about missing optional secrets if not available from environment
    const missingOptional =
    /* istanbul ignore next */
    (cov_2j1f3sxqec().s[53]++, []);
    /* istanbul ignore next */
    cov_2j1f3sxqec().s[54]++;
    if (
    /* istanbul ignore next */
    (cov_2j1f3sxqec().b[57][0]++, !fallbackSecrets.firebaseProjectId) &&
    /* istanbul ignore next */
    (cov_2j1f3sxqec().b[57][1]++, !process.env.FIREBASE_PROJECT_ID)) {
      /* istanbul ignore next */
      cov_2j1f3sxqec().b[56][0]++;
      cov_2j1f3sxqec().s[55]++;
      missingOptional.push('FIREBASE_PROJECT_ID');
    } else
    /* istanbul ignore next */
    {
      cov_2j1f3sxqec().b[56][1]++;
    }
    cov_2j1f3sxqec().s[56]++;
    if (missingCritical.length > 0) {
      /* istanbul ignore next */
      cov_2j1f3sxqec().b[58][0]++;
      cov_2j1f3sxqec().s[57]++;
      console.error(`❌ Critical secrets missing: ${missingCritical.join(', ')}`);
    } else
    /* istanbul ignore next */
    {
      cov_2j1f3sxqec().b[58][1]++;
    }
    cov_2j1f3sxqec().s[58]++;
    if (missingOptional.length > 0) {
      /* istanbul ignore next */
      cov_2j1f3sxqec().b[59][0]++;
      cov_2j1f3sxqec().s[59]++;
      console.warn(`⚠️ Optional secrets missing: ${missingOptional.join(', ')}`);
    } else
    /* istanbul ignore next */
    {
      cov_2j1f3sxqec().b[59][1]++;
    }
    cov_2j1f3sxqec().s[60]++;
    cachedSecrets = fallbackSecrets;
    /* istanbul ignore next */
    cov_2j1f3sxqec().s[61]++;
    return cachedSecrets;
  }
}
/**
 * Initialize environment variables from Azure Key Vault
 * This should be called at application startup
 */
async function initializeAzureEnvironment() {
  /* istanbul ignore next */
  cov_2j1f3sxqec().f[7]++;
  cov_2j1f3sxqec().s[62]++;
  if (isClient) {
    /* istanbul ignore next */
    cov_2j1f3sxqec().b[60][0]++;
    cov_2j1f3sxqec().s[63]++;
    return;
  } else
  /* istanbul ignore next */
  {
    cov_2j1f3sxqec().b[60][1]++;
  }
  cov_2j1f3sxqec().s[64]++;
  try {
    const secrets =
    /* istanbul ignore next */
    (cov_2j1f3sxqec().s[65]++, await fetchAzureSecrets());
    // Set Azure service environment variables
    /* istanbul ignore next */
    cov_2j1f3sxqec().s[66]++;
    process.env.SPEECH_KEY = secrets.speechKey;
    /* istanbul ignore next */
    cov_2j1f3sxqec().s[67]++;
    process.env.SPEECH_ENDPOINT = secrets.speechEndpoint;
    // Set Azure OpenAI environment variables
    /* istanbul ignore next */
    cov_2j1f3sxqec().s[68]++;
    process.env.AZURE_OPENAI_KEY = secrets.azureOpenAIKey;
    /* istanbul ignore next */
    cov_2j1f3sxqec().s[69]++;
    process.env.AZURE_OPENAI_ENDPOINT = secrets.azureOpenAIEndpoint;
    /* istanbul ignore next */
    cov_2j1f3sxqec().s[70]++;
    process.env.AZURE_OPENAI_DEPLOYMENT = secrets.azureOpenAIDeployment;
    // Set Firebase environment variables
    /* istanbul ignore next */
    cov_2j1f3sxqec().s[71]++;
    process.env.FIREBASE_PROJECT_ID = secrets.firebaseProjectId;
    /* istanbul ignore next */
    cov_2j1f3sxqec().s[72]++;
    process.env.FIREBASE_CLIENT_EMAIL = secrets.firebaseClientEmail;
    /* istanbul ignore next */
    cov_2j1f3sxqec().s[73]++;
    process.env.FIREBASE_PRIVATE_KEY = secrets.firebasePrivateKey;
    // Set client-side environment variables using string concatenation to avoid Next.js inlining
    const nextPublicPrefix =
    /* istanbul ignore next */
    (cov_2j1f3sxqec().s[74]++, 'NEXT_PUBLIC_');
    /* istanbul ignore next */
    cov_2j1f3sxqec().s[75]++;
    process.env[nextPublicPrefix + 'SPEECH_KEY'] = secrets.speechKey;
    /* istanbul ignore next */
    cov_2j1f3sxqec().s[76]++;
    process.env[nextPublicPrefix + 'SPEECH_ENDPOINT'] = secrets.speechEndpoint;
    /* istanbul ignore next */
    cov_2j1f3sxqec().s[77]++;
    process.env[nextPublicPrefix + 'AZURE_OPENAI_API_KEY'] = secrets.azureOpenAIKey;
    /* istanbul ignore next */
    cov_2j1f3sxqec().s[78]++;
    process.env[nextPublicPrefix + 'AZURE_OPENAI_ENDPOINT'] = secrets.azureOpenAIEndpoint;
    /* istanbul ignore next */
    cov_2j1f3sxqec().s[79]++;
    process.env[nextPublicPrefix + 'AZURE_OPENAI_DEPLOYMENT'] = secrets.azureOpenAIDeployment;
    /* istanbul ignore next */
    cov_2j1f3sxqec().s[80]++;
    process.env[nextPublicPrefix + 'FIREBASE_PROJECT_ID'] = secrets.firebaseProjectId;
    // Set the Firebase client key from secrets or environment
    /* istanbul ignore next */
    cov_2j1f3sxqec().s[81]++;
    if (secrets.firebaseClientKey) {
      /* istanbul ignore next */
      cov_2j1f3sxqec().b[61][0]++;
      cov_2j1f3sxqec().s[82]++;
      process.env[nextPublicPrefix + 'FIREBASE_CLIENT_KEY'] = secrets.firebaseClientKey;
      /* istanbul ignore next */
      cov_2j1f3sxqec().s[83]++;
      console.log('🔑 Firebase client key set from Azure Key Vault');
    } else {
      /* istanbul ignore next */
      cov_2j1f3sxqec().b[61][1]++;
      cov_2j1f3sxqec().s[84]++;
      console.warn('⚠️ Firebase client key not found in Azure Key Vault');
    }
    // Set optional Azure services if available
    /* istanbul ignore next */
    cov_2j1f3sxqec().s[85]++;
    if (secrets.azureFormRecognizerKey) {
      /* istanbul ignore next */
      cov_2j1f3sxqec().b[62][0]++;
      cov_2j1f3sxqec().s[86]++;
      process.env.AZURE_FORM_RECOGNIZER_KEY = secrets.azureFormRecognizerKey;
    } else
    /* istanbul ignore next */
    {
      cov_2j1f3sxqec().b[62][1]++;
    }
    cov_2j1f3sxqec().s[87]++;
    if (secrets.azureFormRecognizerEndpoint) {
      /* istanbul ignore next */
      cov_2j1f3sxqec().b[63][0]++;
      cov_2j1f3sxqec().s[88]++;
      process.env.AZURE_FORM_RECOGNIZER_ENDPOINT = secrets.azureFormRecognizerEndpoint;
    } else
    /* istanbul ignore next */
    {
      cov_2j1f3sxqec().b[63][1]++;
    }
    // Set storage configuration
    cov_2j1f3sxqec().s[89]++;
    if (secrets.azureStorageAccount) {
      /* istanbul ignore next */
      cov_2j1f3sxqec().b[64][0]++;
      cov_2j1f3sxqec().s[90]++;
      process.env.AZURE_STORAGE_ACCOUNT = secrets.azureStorageAccount;
    } else
    /* istanbul ignore next */
    {
      cov_2j1f3sxqec().b[64][1]++;
    }
    cov_2j1f3sxqec().s[91]++;
    if (secrets.azureStorageAccountKey) {
      /* istanbul ignore next */
      cov_2j1f3sxqec().b[65][0]++;
      cov_2j1f3sxqec().s[92]++;
      process.env.AZURE_STORAGE_ACCOUNT_KEY = secrets.azureStorageAccountKey;
    } else
    /* istanbul ignore next */
    {
      cov_2j1f3sxqec().b[65][1]++;
    }
    cov_2j1f3sxqec().s[93]++;
    if (secrets.azureStorageConnectionString) {
      /* istanbul ignore next */
      cov_2j1f3sxqec().b[66][0]++;
      cov_2j1f3sxqec().s[94]++;
      process.env.AZURE_STORAGE_CONNECTION_STRING = secrets.azureStorageConnectionString;
    } else
    /* istanbul ignore next */
    {
      cov_2j1f3sxqec().b[66][1]++;
    }
    cov_2j1f3sxqec().s[95]++;
    if (secrets.azureStorageContainer) {
      /* istanbul ignore next */
      cov_2j1f3sxqec().b[67][0]++;
      cov_2j1f3sxqec().s[96]++;
      process.env.AZURE_STORAGE_CONTAINER = secrets.azureStorageContainer;
    } else
    /* istanbul ignore next */
    {
      cov_2j1f3sxqec().b[67][1]++;
    }
    cov_2j1f3sxqec().s[97]++;
    if (secrets.storageProvider) {
      /* istanbul ignore next */
      cov_2j1f3sxqec().b[68][0]++;
      cov_2j1f3sxqec().s[98]++;
      process.env.STORAGE_PROVIDER = secrets.storageProvider;
    } else
    /* istanbul ignore next */
    {
      cov_2j1f3sxqec().b[68][1]++;
    }
    cov_2j1f3sxqec().s[99]++;
    console.log('🌟 Azure environment initialized successfully');
  } catch (error) {
    /* istanbul ignore next */
    cov_2j1f3sxqec().s[100]++;
    console.error('❌ Failed to initialize Azure environment:', error);
    /* istanbul ignore next */
    cov_2j1f3sxqec().s[101]++;
    throw error;
  }
}
/**
 * Get generic configuration values (used by storage abstraction and other services)
 */
async function getConfiguration() {
  /* istanbul ignore next */
  cov_2j1f3sxqec().f[8]++;
  cov_2j1f3sxqec().s[102]++;
  try {
    const secrets =
    /* istanbul ignore next */
    (cov_2j1f3sxqec().s[103]++, await fetchAzureSecrets());
    /* istanbul ignore next */
    cov_2j1f3sxqec().s[104]++;
    return {
      // Azure Storage configuration
      'AZURE_STORAGE_ACCOUNT':
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[69][0]++, secrets.azureStorageAccount) ||
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[69][1]++, process.env.AZURE_STORAGE_ACCOUNT) ||
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[69][2]++, 'prepbettrstorage684'),
      'AZURE_STORAGE_ACCOUNT_KEY':
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[70][0]++, secrets.azureStorageAccountKey) ||
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[70][1]++, process.env.AZURE_STORAGE_ACCOUNT_KEY) ||
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[70][2]++, ''),
      'AZURE_STORAGE_CONNECTION_STRING':
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[71][0]++, secrets.azureStorageConnectionString) ||
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[71][1]++, process.env.AZURE_STORAGE_CONNECTION_STRING) ||
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[71][2]++, ''),
      'AZURE_STORAGE_CONTAINER':
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[72][0]++, secrets.azureStorageContainer) ||
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[72][1]++, process.env.AZURE_STORAGE_CONTAINER) ||
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[72][2]++, 'resumes'),
      'STORAGE_PROVIDER':
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[73][0]++, secrets.storageProvider) ||
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[73][1]++, process.env.STORAGE_PROVIDER) ||
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[73][2]++, 'firebase'),
      // Azure AI services
      'AZURE_OPENAI_KEY': secrets.azureOpenAIKey,
      'AZURE_OPENAI_ENDPOINT': secrets.azureOpenAIEndpoint,
      'AZURE_OPENAI_DEPLOYMENT': secrets.azureOpenAIDeployment,
      'AZURE_SPEECH_KEY': secrets.speechKey,
      'AZURE_SPEECH_ENDPOINT': secrets.speechEndpoint,
      'AZURE_FORM_RECOGNIZER_KEY':
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[74][0]++, secrets.azureFormRecognizerKey) ||
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[74][1]++, ''),
      'AZURE_FORM_RECOGNIZER_ENDPOINT':
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[75][0]++, secrets.azureFormRecognizerEndpoint) ||
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[75][1]++, ''),
      // Firebase configuration
      'FIREBASE_PROJECT_ID': secrets.firebaseProjectId,
      'FIREBASE_CLIENT_EMAIL': secrets.firebaseClientEmail,
      'FIREBASE_PRIVATE_KEY': secrets.firebasePrivateKey,
      'FIREBASE_CLIENT_KEY':
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[76][0]++, secrets.firebaseClientKey) ||
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[76][1]++, '')
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_2j1f3sxqec().s[105]++;
    console.warn('Failed to get configuration from Azure, using environment variables:', error);
    // Fallback to environment variables only
    /* istanbul ignore next */
    cov_2j1f3sxqec().s[106]++;
    return {
      'AZURE_STORAGE_ACCOUNT':
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[77][0]++, process.env.AZURE_STORAGE_ACCOUNT) ||
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[77][1]++, 'prepbettrstorage684'),
      'AZURE_STORAGE_ACCOUNT_KEY':
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[78][0]++, process.env.AZURE_STORAGE_ACCOUNT_KEY) ||
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[78][1]++, ''),
      'AZURE_STORAGE_CONNECTION_STRING':
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[79][0]++, process.env.AZURE_STORAGE_CONNECTION_STRING) ||
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[79][1]++, ''),
      'AZURE_STORAGE_CONTAINER':
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[80][0]++, process.env.AZURE_STORAGE_CONTAINER) ||
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[80][1]++, 'resumes'),
      'STORAGE_PROVIDER':
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[81][0]++, process.env.STORAGE_PROVIDER) ||
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[81][1]++, 'firebase'),
      'AZURE_OPENAI_KEY':
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[82][0]++, process.env.AZURE_OPENAI_KEY) ||
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[82][1]++, ''),
      'AZURE_OPENAI_ENDPOINT':
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[83][0]++, process.env.AZURE_OPENAI_ENDPOINT) ||
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[83][1]++, ''),
      'AZURE_OPENAI_DEPLOYMENT':
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[84][0]++, process.env.AZURE_OPENAI_DEPLOYMENT) ||
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[84][1]++, ''),
      'AZURE_SPEECH_KEY':
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[85][0]++, process.env.AZURE_SPEECH_KEY) ||
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[85][1]++, process.env.SPEECH_KEY) ||
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[85][2]++, ''),
      'AZURE_SPEECH_ENDPOINT':
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[86][0]++, process.env.SPEECH_ENDPOINT) ||
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[86][1]++, ''),
      'AZURE_FORM_RECOGNIZER_KEY':
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[87][0]++, process.env.AZURE_FORM_RECOGNIZER_KEY) ||
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[87][1]++, ''),
      'AZURE_FORM_RECOGNIZER_ENDPOINT':
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[88][0]++, process.env.AZURE_FORM_RECOGNIZER_ENDPOINT) ||
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[88][1]++, ''),
      'FIREBASE_PROJECT_ID':
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[89][0]++, process.env.FIREBASE_PROJECT_ID) ||
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[89][1]++, ''),
      'FIREBASE_CLIENT_EMAIL':
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[90][0]++, process.env.FIREBASE_CLIENT_EMAIL) ||
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[90][1]++, ''),
      'FIREBASE_PRIVATE_KEY':
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[91][0]++, process.env.FIREBASE_PRIVATE_KEY) ||
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[91][1]++, ''),
      // Use string concatenation to avoid Next.js inlining
      'FIREBASE_CLIENT_KEY':
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[92][0]++, process.env['NEXT_PUBLIC_' + 'FIREBASE_CLIENT_KEY']) ||
      /* istanbul ignore next */
      (cov_2j1f3sxqec().b[92][1]++, '')
    };
  }
}
/**
 * Get current Azure configuration (for debugging)
 */
function getAzureConfig() {
  /* istanbul ignore next */
  cov_2j1f3sxqec().f[9]++;
  const nextPublicPrefix =
  /* istanbul ignore next */
  (cov_2j1f3sxqec().s[107]++, 'NEXT_PUBLIC_');
  /* istanbul ignore next */
  cov_2j1f3sxqec().s[108]++;
  return {
    keyVaultUri: AZURE_KEY_VAULT_URI,
    hasSecretsCache: !!cachedSecrets,
    environment: {
      speechKey: !!process.env[nextPublicPrefix + 'SPEECH_KEY'],
      speechEndpoint: !!process.env[nextPublicPrefix + 'SPEECH_ENDPOINT'],
      azureOpenAIKey: !!process.env.AZURE_OPENAI_KEY,
      azureOpenAIEndpoint: !!process.env.AZURE_OPENAI_ENDPOINT,
      azureOpenAIDeployment: !!process.env.AZURE_OPENAI_DEPLOYMENT
    }
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,