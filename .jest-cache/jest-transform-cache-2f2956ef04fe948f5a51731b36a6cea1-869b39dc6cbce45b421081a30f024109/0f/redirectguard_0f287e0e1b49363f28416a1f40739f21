f4bae1832ae1ba8854ac919128141143
"use strict";

/**
 * Redirect guard utility to prevent infinite redirect loops
 * during authentication flows
 */
/* istanbul ignore next */
function cov_292dyfetyi() {
  var path = "/Users/dikshantvashistha/PrepBettr/lib/utils/redirect-guard.ts";
  var hash = "194ca6c4c858807b181c09e50b33af79d0c8f867";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dikshantvashistha/PrepBettr/lib/utils/redirect-guard.ts",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 62
        }
      },
      "1": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 10,
          column: 21
        }
      },
      "2": {
        start: {
          line: 10,
          column: 12
        },
        end: {
          line: 10,
          column: 21
        }
      },
      "3": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 27,
          column: 9
        }
      },
      "4": {
        start: {
          line: 12,
          column: 25
        },
        end: {
          line: 12,
          column: 65
        }
      },
      "5": {
        start: {
          line: 13,
          column: 12
        },
        end: {
          line: 14,
          column: 25
        }
      },
      "6": {
        start: {
          line: 14,
          column: 16
        },
        end: {
          line: 14,
          column: 25
        }
      },
      "7": {
        start: {
          line: 15,
          column: 41
        },
        end: {
          line: 15,
          column: 57
        }
      },
      "8": {
        start: {
          line: 16,
          column: 24
        },
        end: {
          line: 16,
          column: 34
        }
      },
      "9": {
        start: {
          line: 18,
          column: 12
        },
        end: {
          line: 21,
          column: 13
        }
      },
      "10": {
        start: {
          line: 19,
          column: 16
        },
        end: {
          line: 19,
          column: 34
        }
      },
      "11": {
        start: {
          line: 20,
          column: 16
        },
        end: {
          line: 20,
          column: 25
        }
      },
      "12": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 22,
          column: 30
        }
      },
      "13": {
        start: {
          line: 25,
          column: 12
        },
        end: {
          line: 25,
          column: 81
        }
      },
      "14": {
        start: {
          line: 26,
          column: 12
        },
        end: {
          line: 26,
          column: 21
        }
      },
      "15": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 31,
          column: 19
        }
      },
      "16": {
        start: {
          line: 31,
          column: 12
        },
        end: {
          line: 31,
          column: 19
        }
      },
      "17": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 41,
          column: 9
        }
      },
      "18": {
        start: {
          line: 33,
          column: 25
        },
        end: {
          line: 36,
          column: 13
        }
      },
      "19": {
        start: {
          line: 37,
          column: 12
        },
        end: {
          line: 37,
          column: 75
        }
      },
      "20": {
        start: {
          line: 40,
          column: 12
        },
        end: {
          line: 40,
          column: 81
        }
      },
      "21": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 45,
          column: 19
        }
      },
      "22": {
        start: {
          line: 45,
          column: 12
        },
        end: {
          line: 45,
          column: 19
        }
      },
      "23": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 51,
          column: 9
        }
      },
      "24": {
        start: {
          line: 47,
          column: 12
        },
        end: {
          line: 47,
          column: 56
        }
      },
      "25": {
        start: {
          line: 50,
          column: 12
        },
        end: {
          line: 50,
          column: 83
        }
      },
      "26": {
        start: {
          line: 59,
          column: 29
        },
        end: {
          line: 59,
          column: 52
        }
      },
      "27": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 63,
          column: 9
        }
      },
      "28": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 61,
          column: 126
        }
      },
      "29": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 62,
          column: 25
        }
      },
      "30": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 64,
          column: 20
        }
      },
      "31": {
        start: {
          line: 72,
          column: 29
        },
        end: {
          line: 72,
          column: 52
        }
      },
      "32": {
        start: {
          line: 73,
          column: 25
        },
        end: {
          line: 73,
          column: 41
        }
      },
      "33": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 74,
          column: 121
        }
      },
      "34": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 75,
          column: 40
        }
      },
      "35": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 81,
          column: 65
        }
      },
      "36": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 82,
          column: 26
        }
      },
      "37": {
        start: {
          line: 92,
          column: 28
        },
        end: {
          line: 93,
          column: 76
        }
      },
      "38": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 94,
          column: 57
        }
      },
      "39": {
        start: {
          line: 97,
          column: 0
        },
        end: {
          line: 97,
          column: 45
        }
      },
      "40": {
        start: {
          line: 98,
          column: 0
        },
        end: {
          line: 98,
          column: 32
        }
      },
      "41": {
        start: {
          line: 99,
          column: 0
        },
        end: {
          line: 99,
          column: 37
        }
      },
      "42": {
        start: {
          line: 100,
          column: 0
        },
        end: {
          line: 100,
          column: 32
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 4
          },
          end: {
            line: 8,
            column: 5
          }
        },
        loc: {
          start: {
            line: 8,
            column: 30
          },
          end: {
            line: 28,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        },
        loc: {
          start: {
            line: 29,
            column: 35
          },
          end: {
            line: 42,
            column: 5
          }
        },
        line: 29
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 43,
            column: 4
          },
          end: {
            line: 43,
            column: 5
          }
        },
        loc: {
          start: {
            line: 43,
            column: 24
          },
          end: {
            line: 52,
            column: 5
          }
        },
        line: 43
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 58,
            column: 4
          },
          end: {
            line: 58,
            column: 5
          }
        },
        loc: {
          start: {
            line: 58,
            column: 35
          },
          end: {
            line: 65,
            column: 5
          }
        },
        line: 58
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 71,
            column: 4
          },
          end: {
            line: 71,
            column: 5
          }
        },
        loc: {
          start: {
            line: 71,
            column: 44
          },
          end: {
            line: 76,
            column: 5
          }
        },
        line: 71
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 80,
            column: 4
          },
          end: {
            line: 80,
            column: 5
          }
        },
        loc: {
          start: {
            line: 80,
            column: 19
          },
          end: {
            line: 83,
            column: 5
          }
        },
        line: 80
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 90,
            column: 4
          },
          end: {
            line: 90,
            column: 5
          }
        },
        loc: {
          start: {
            line: 90,
            column: 36
          },
          end: {
            line: 95,
            column: 5
          }
        },
        line: 90
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 10,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 9,
            column: 8
          },
          end: {
            line: 10,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 9
      },
      "1": {
        loc: {
          start: {
            line: 13,
            column: 12
          },
          end: {
            line: 14,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 13,
            column: 12
          },
          end: {
            line: 14,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 13
      },
      "2": {
        loc: {
          start: {
            line: 18,
            column: 12
          },
          end: {
            line: 21,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 18,
            column: 12
          },
          end: {
            line: 21,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 18
      },
      "3": {
        loc: {
          start: {
            line: 22,
            column: 19
          },
          end: {
            line: 22,
            column: 29
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 22,
            column: 19
          },
          end: {
            line: 22,
            column: 24
          }
        }, {
          start: {
            line: 22,
            column: 28
          },
          end: {
            line: 22,
            column: 29
          }
        }],
        line: 22
      },
      "4": {
        loc: {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 31,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 31,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "5": {
        loc: {
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 45,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 45,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 44
      },
      "6": {
        loc: {
          start: {
            line: 60,
            column: 8
          },
          end: {
            line: 63,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 60,
            column: 8
          },
          end: {
            line: 63,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 60
      },
      "7": {
        loc: {
          start: {
            line: 92,
            column: 28
          },
          end: {
            line: 93,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 92,
            column: 29
          },
          end: {
            line: 92,
            column: 58
          }
        }, {
          start: {
            line: 92,
            column: 62
          },
          end: {
            line: 92,
            column: 91
          }
        }, {
          start: {
            line: 93,
            column: 13
          },
          end: {
            line: 93,
            column: 44
          }
        }, {
          start: {
            line: 93,
            column: 48
          },
          end: {
            line: 93,
            column: 75
          }
        }],
        line: 92
      },
      "8": {
        loc: {
          start: {
            line: 94,
            column: 15
          },
          end: {
            line: 94,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 94,
            column: 15
          },
          end: {
            line: 94,
            column: 25
          }
        }, {
          start: {
            line: 94,
            column: 29
          },
          end: {
            line: 94,
            column: 56
          }
        }],
        line: 94
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0, 0, 0],
      "8": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/dikshantvashistha/PrepBettr/lib/utils/redirect-guard.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/dikshantvashistha/PrepBettr/lib/utils/redirect-guard.ts"],
      sourcesContent: ["/**\n * Redirect guard utility to prevent infinite redirect loops\n * during authentication flows\n */\n\nclass RedirectGuard {\n  private static readonly STORAGE_KEY = 'redirect_guard';\n  private static readonly MAX_REDIRECTS = 3;\n  private static readonly RESET_INTERVAL = 30000; // 30 seconds\n\n  private static getRedirectCount(): number {\n    if (typeof window === 'undefined') return 0;\n    \n    try {\n      const data = sessionStorage.getItem(this.STORAGE_KEY);\n      if (!data) return 0;\n      \n      const { count, timestamp } = JSON.parse(data);\n      const now = Date.now();\n      \n      // Reset counter if enough time has passed\n      if (now - timestamp > this.RESET_INTERVAL) {\n        this.resetCount();\n        return 0;\n      }\n      \n      return count || 0;\n    } catch (error) {\n      console.error('RedirectGuard: Error reading redirect count:', error);\n      return 0;\n    }\n  }\n\n  private static setRedirectCount(count: number): void {\n    if (typeof window === 'undefined') return;\n    \n    try {\n      const data = {\n        count,\n        timestamp: Date.now()\n      };\n      sessionStorage.setItem(this.STORAGE_KEY, JSON.stringify(data));\n    } catch (error) {\n      console.error('RedirectGuard: Error setting redirect count:', error);\n    }\n  }\n\n  private static resetCount(): void {\n    if (typeof window === 'undefined') return;\n    \n    try {\n      sessionStorage.removeItem(this.STORAGE_KEY);\n    } catch (error) {\n      console.error('RedirectGuard: Error resetting redirect count:', error);\n    }\n  }\n\n  /**\n   * Check if a redirect is allowed based on current redirect count\n   * @param targetPath - The path we want to redirect to\n   * @returns true if redirect is allowed, false if it should be blocked\n   */\n  public static canRedirect(targetPath: string): boolean {\n    const currentCount = this.getRedirectCount();\n    \n    if (currentCount >= this.MAX_REDIRECTS) {\n      console.warn(`RedirectGuard: Blocking redirect to ${targetPath} - max redirects (${this.MAX_REDIRECTS}) reached`);\n      return false;\n    }\n    \n    return true;\n  }\n\n  /**\n   * Increment the redirect counter when a redirect is about to happen\n   * @param fromPath - Current path\n   * @param toPath - Target path\n   */\n  public static recordRedirect(fromPath: string, toPath: string): void {\n    const currentCount = this.getRedirectCount();\n    const newCount = currentCount + 1;\n    \n    console.log(`RedirectGuard: Recording redirect ${newCount}/${this.MAX_REDIRECTS} from ${fromPath} to ${toPath}`);\n    this.setRedirectCount(newCount);\n  }\n\n  /**\n   * Reset the redirect counter (useful after successful authentication)\n   */\n  public static reset(): void {\n    console.log('RedirectGuard: Resetting redirect counter');\n    this.resetCount();\n  }\n\n  /**\n   * Check if we're potentially in a redirect loop between two pages\n   * @param fromPath - Current path  \n   * @param toPath - Target path\n   * @returns true if this looks like a loop\n   */\n  public static isLoop(fromPath: string, toPath: string): boolean {\n    // Simple loop detection: if we're redirecting between /sign-in and /dashboard\n    const isAuthLoop = (\n      (fromPath.includes('/sign-in') && toPath.includes('/dashboard')) ||\n      (fromPath.includes('/dashboard') && toPath.includes('/sign-in'))\n    );\n    \n    return isAuthLoop && this.getRedirectCount() > 0;\n  }\n}\n\nexport default RedirectGuard;\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "194ca6c4c858807b181c09e50b33af79d0c8f867"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_292dyfetyi = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_292dyfetyi();
cov_292dyfetyi().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
class RedirectGuard {
  static getRedirectCount() {
    /* istanbul ignore next */
    cov_292dyfetyi().f[0]++;
    cov_292dyfetyi().s[1]++;
    if (typeof window === 'undefined') {
      /* istanbul ignore next */
      cov_292dyfetyi().b[0][0]++;
      cov_292dyfetyi().s[2]++;
      return 0;
    } else
    /* istanbul ignore next */
    {
      cov_292dyfetyi().b[0][1]++;
    }
    cov_292dyfetyi().s[3]++;
    try {
      const data =
      /* istanbul ignore next */
      (cov_292dyfetyi().s[4]++, sessionStorage.getItem(this.STORAGE_KEY));
      /* istanbul ignore next */
      cov_292dyfetyi().s[5]++;
      if (!data) {
        /* istanbul ignore next */
        cov_292dyfetyi().b[1][0]++;
        cov_292dyfetyi().s[6]++;
        return 0;
      } else
      /* istanbul ignore next */
      {
        cov_292dyfetyi().b[1][1]++;
      }
      const {
        count,
        timestamp
      } =
      /* istanbul ignore next */
      (cov_292dyfetyi().s[7]++, JSON.parse(data));
      const now =
      /* istanbul ignore next */
      (cov_292dyfetyi().s[8]++, Date.now());
      // Reset counter if enough time has passed
      /* istanbul ignore next */
      cov_292dyfetyi().s[9]++;
      if (now - timestamp > this.RESET_INTERVAL) {
        /* istanbul ignore next */
        cov_292dyfetyi().b[2][0]++;
        cov_292dyfetyi().s[10]++;
        this.resetCount();
        /* istanbul ignore next */
        cov_292dyfetyi().s[11]++;
        return 0;
      } else
      /* istanbul ignore next */
      {
        cov_292dyfetyi().b[2][1]++;
      }
      cov_292dyfetyi().s[12]++;
      return /* istanbul ignore next */(cov_292dyfetyi().b[3][0]++, count) ||
      /* istanbul ignore next */
      (cov_292dyfetyi().b[3][1]++, 0);
    } catch (error) {
      /* istanbul ignore next */
      cov_292dyfetyi().s[13]++;
      console.error('RedirectGuard: Error reading redirect count:', error);
      /* istanbul ignore next */
      cov_292dyfetyi().s[14]++;
      return 0;
    }
  }
  static setRedirectCount(count) {
    /* istanbul ignore next */
    cov_292dyfetyi().f[1]++;
    cov_292dyfetyi().s[15]++;
    if (typeof window === 'undefined') {
      /* istanbul ignore next */
      cov_292dyfetyi().b[4][0]++;
      cov_292dyfetyi().s[16]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_292dyfetyi().b[4][1]++;
    }
    cov_292dyfetyi().s[17]++;
    try {
      const data =
      /* istanbul ignore next */
      (cov_292dyfetyi().s[18]++, {
        count,
        timestamp: Date.now()
      });
      /* istanbul ignore next */
      cov_292dyfetyi().s[19]++;
      sessionStorage.setItem(this.STORAGE_KEY, JSON.stringify(data));
    } catch (error) {
      /* istanbul ignore next */
      cov_292dyfetyi().s[20]++;
      console.error('RedirectGuard: Error setting redirect count:', error);
    }
  }
  static resetCount() {
    /* istanbul ignore next */
    cov_292dyfetyi().f[2]++;
    cov_292dyfetyi().s[21]++;
    if (typeof window === 'undefined') {
      /* istanbul ignore next */
      cov_292dyfetyi().b[5][0]++;
      cov_292dyfetyi().s[22]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_292dyfetyi().b[5][1]++;
    }
    cov_292dyfetyi().s[23]++;
    try {
      /* istanbul ignore next */
      cov_292dyfetyi().s[24]++;
      sessionStorage.removeItem(this.STORAGE_KEY);
    } catch (error) {
      /* istanbul ignore next */
      cov_292dyfetyi().s[25]++;
      console.error('RedirectGuard: Error resetting redirect count:', error);
    }
  }
  /**
   * Check if a redirect is allowed based on current redirect count
   * @param targetPath - The path we want to redirect to
   * @returns true if redirect is allowed, false if it should be blocked
   */
  static canRedirect(targetPath) {
    /* istanbul ignore next */
    cov_292dyfetyi().f[3]++;
    const currentCount =
    /* istanbul ignore next */
    (cov_292dyfetyi().s[26]++, this.getRedirectCount());
    /* istanbul ignore next */
    cov_292dyfetyi().s[27]++;
    if (currentCount >= this.MAX_REDIRECTS) {
      /* istanbul ignore next */
      cov_292dyfetyi().b[6][0]++;
      cov_292dyfetyi().s[28]++;
      console.warn(`RedirectGuard: Blocking redirect to ${targetPath} - max redirects (${this.MAX_REDIRECTS}) reached`);
      /* istanbul ignore next */
      cov_292dyfetyi().s[29]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_292dyfetyi().b[6][1]++;
    }
    cov_292dyfetyi().s[30]++;
    return true;
  }
  /**
   * Increment the redirect counter when a redirect is about to happen
   * @param fromPath - Current path
   * @param toPath - Target path
   */
  static recordRedirect(fromPath, toPath) {
    /* istanbul ignore next */
    cov_292dyfetyi().f[4]++;
    const currentCount =
    /* istanbul ignore next */
    (cov_292dyfetyi().s[31]++, this.getRedirectCount());
    const newCount =
    /* istanbul ignore next */
    (cov_292dyfetyi().s[32]++, currentCount + 1);
    /* istanbul ignore next */
    cov_292dyfetyi().s[33]++;
    console.log(`RedirectGuard: Recording redirect ${newCount}/${this.MAX_REDIRECTS} from ${fromPath} to ${toPath}`);
    /* istanbul ignore next */
    cov_292dyfetyi().s[34]++;
    this.setRedirectCount(newCount);
  }
  /**
   * Reset the redirect counter (useful after successful authentication)
   */
  static reset() {
    /* istanbul ignore next */
    cov_292dyfetyi().f[5]++;
    cov_292dyfetyi().s[35]++;
    console.log('RedirectGuard: Resetting redirect counter');
    /* istanbul ignore next */
    cov_292dyfetyi().s[36]++;
    this.resetCount();
  }
  /**
   * Check if we're potentially in a redirect loop between two pages
   * @param fromPath - Current path
   * @param toPath - Target path
   * @returns true if this looks like a loop
   */
  static isLoop(fromPath, toPath) {
    /* istanbul ignore next */
    cov_292dyfetyi().f[6]++;
    // Simple loop detection: if we're redirecting between /sign-in and /dashboard
    const isAuthLoop =
    /* istanbul ignore next */
    (cov_292dyfetyi().s[37]++,
    /* istanbul ignore next */
    (cov_292dyfetyi().b[7][0]++, fromPath.includes('/sign-in')) &&
    /* istanbul ignore next */
    (cov_292dyfetyi().b[7][1]++, toPath.includes('/dashboard')) ||
    /* istanbul ignore next */
    (cov_292dyfetyi().b[7][2]++, fromPath.includes('/dashboard')) &&
    /* istanbul ignore next */
    (cov_292dyfetyi().b[7][3]++, toPath.includes('/sign-in')));
    /* istanbul ignore next */
    cov_292dyfetyi().s[38]++;
    return /* istanbul ignore next */(cov_292dyfetyi().b[8][0]++, isAuthLoop) &&
    /* istanbul ignore next */
    (cov_292dyfetyi().b[8][1]++, this.getRedirectCount() > 0);
  }
}
/* istanbul ignore next */
cov_292dyfetyi().s[39]++;
RedirectGuard.STORAGE_KEY = 'redirect_guard';
/* istanbul ignore next */
cov_292dyfetyi().s[40]++;
RedirectGuard.MAX_REDIRECTS = 3;
/* istanbul ignore next */
cov_292dyfetyi().s[41]++;
RedirectGuard.RESET_INTERVAL = 30000; // 30 seconds
/* istanbul ignore next */
cov_292dyfetyi().s[42]++;
exports.default = RedirectGuard;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,