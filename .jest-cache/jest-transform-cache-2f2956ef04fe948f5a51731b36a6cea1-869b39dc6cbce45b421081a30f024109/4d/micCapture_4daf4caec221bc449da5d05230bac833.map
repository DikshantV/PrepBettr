{"version":3,"names":["cov_1doj688fpt","actualCoverage","MicCapture","constructor","f","s","audioContext","mediaStream","sourceNode","workletNode","sharedBuffer","sharedBufferView","isCapturing","SAMPLE_RATE","FRAME_SIZE","Math","floor","BUFFER_FRAMES","HEADER_SIZE","initialize","navigator","mediaDevices","getUserMedia","audio","sampleRate","channelCount","echoCancellation","noiseSuppression","autoGainControl","AudioContext","workletUrl","metaUrl","b","globalThis","importMeta","url","import","meta","URL","href","audioWorklet","addModule","bufferSize","SharedArrayBuffer","Int16Array","BYTES_PER_ELEMENT","Atomics","store","createMediaStreamSource","AudioWorkletNode","port","postMessage","type","buffer","connect","error","Error","startCapture","state","resume","stopCapture","read","frame","readFrame","uint8Frame","Uint8Array","length","i","sample","Promise","resolve","setTimeout","writeIndex","load","readIndex","bufferIndex","nextReadIndex","dispose","disconnect","close","getTracks","forEach","track","stop","capturing","frameSize","module","exports"],"sources":["micCapture.js"],"sourcesContent":["class MicCapture {\n  constructor() {\n    this.audioContext = null;\n    this.mediaStream = null;\n    this.sourceNode = null;\n    this.workletNode = null;\n    this.sharedBuffer = null;\n    this.sharedBufferView = null;\n    this.isCapturing = false;\n    \n    // Buffer parameters\n    this.SAMPLE_RATE = 16000;\n    this.FRAME_SIZE = Math.floor(this.SAMPLE_RATE * 0.1); // 100ms = 1600 samples\n    this.BUFFER_FRAMES = 10; // Buffer for 1 second\n    this.HEADER_SIZE = 2; // writeIndex, readIndex\n  }\n  \n  /**\n   * Initialize the microphone capture system\n   */\n  async initialize() {\n    try {\n      // Request microphone access\n      this.mediaStream = await navigator.mediaDevices.getUserMedia({\n        audio: {\n          sampleRate: 48000,\n          channelCount: 1,\n          echoCancellation: true,\n          noiseSuppression: true,\n          autoGainControl: true\n        }\n      });\n      \n      // Create AudioContext\n      this.audioContext = new AudioContext({ sampleRate: 48000 });\n      \n      // Load the audio worklet\n      let workletUrl;\n      try {\n        // Try to use import.meta.url if available (ES modules)\n        const metaUrl = globalThis.importMeta?.url || globalThis.import?.meta?.url;\n        if (metaUrl) {\n          workletUrl = new URL('./micProcessor.js', metaUrl);\n        } else {\n          // Fallback for testing environments and other cases\n          workletUrl = { href: './micProcessor.js' };\n        }\n      } catch {\n        // Fallback for any errors\n        workletUrl = { href: './micProcessor.js' };\n      }\n      await this.audioContext.audioWorklet.addModule(workletUrl.href);\n      \n      // Create shared buffer for communication\n      const bufferSize = this.HEADER_SIZE + (this.FRAME_SIZE * this.BUFFER_FRAMES);\n      this.sharedBuffer = new SharedArrayBuffer(bufferSize * Int16Array.BYTES_PER_ELEMENT);\n      this.sharedBufferView = new Int16Array(this.sharedBuffer);\n      \n      // Initialize buffer indices\n      Atomics.store(this.sharedBufferView, 0, 0); // writeIndex\n      Atomics.store(this.sharedBufferView, 1, 0); // readIndex\n      \n      // Create audio nodes\n      this.sourceNode = this.audioContext.createMediaStreamSource(this.mediaStream);\n      this.workletNode = new AudioWorkletNode(this.audioContext, 'mic-processor');\n      \n      // Send shared buffer to worklet\n      this.workletNode.port.postMessage({\n        type: 'setSharedBuffer',\n        buffer: this.sharedBuffer\n      });\n      \n      // Connect the audio graph\n      this.sourceNode.connect(this.workletNode);\n      \n    } catch (error) {\n      throw new Error(`Failed to initialize microphone capture: ${error}`);\n    }\n  }\n  \n  /**\n   * Start capturing audio\n   */\n  async startCapture() {\n    if (!this.audioContext || !this.workletNode) {\n      throw new Error('MicCapture not initialized. Call initialize() first.');\n    }\n    \n    if (this.audioContext.state === 'suspended') {\n      await this.audioContext.resume();\n    }\n    \n    this.isCapturing = true;\n  }\n  \n  /**\n   * Stop capturing audio\n   */\n  stopCapture() {\n    this.isCapturing = false;\n  }\n  \n  /**\n   * Async iterator that yields Uint8Array frames of â‰¤100ms audio data\n   */\n  async *read() {\n    if (!this.sharedBufferView) {\n      throw new Error('MicCapture not initialized. Call initialize() first.');\n    }\n    \n    while (this.isCapturing) {\n      const frame = this.readFrame();\n      if (frame) {\n        // Convert Int16Array to Uint8Array (little-endian byte order)\n        const uint8Frame = new Uint8Array(frame.length * 2);\n        for (let i = 0; i < frame.length; i++) {\n          const sample = frame[i];\n          uint8Frame[i * 2] = sample & 0xFF;         // Low byte\n          uint8Frame[i * 2 + 1] = (sample >> 8) & 0xFF; // High byte\n        }\n        yield uint8Frame;\n      } else {\n        // No data available, wait a bit before trying again\n        await new Promise(resolve => setTimeout(resolve, 10));\n      }\n    }\n  }\n  \n  /**\n   * Read a single frame from the shared buffer\n   */\n  readFrame() {\n    if (!this.sharedBufferView) return null;\n    \n    const writeIndex = Atomics.load(this.sharedBufferView, 0);\n    const readIndex = Atomics.load(this.sharedBufferView, 1);\n    \n    // Check if data is available\n    if (readIndex === writeIndex) {\n      return null; // No data available\n    }\n    \n    const bufferSize = this.sharedBufferView.length - this.HEADER_SIZE;\n    const frame = new Int16Array(this.FRAME_SIZE);\n    \n    // Read frame from shared buffer\n    for (let i = 0; i < this.FRAME_SIZE; i++) {\n      const bufferIndex = this.HEADER_SIZE + ((readIndex + i) % bufferSize);\n      frame[i] = this.sharedBufferView[bufferIndex];\n    }\n    \n    // Update read index atomically\n    const nextReadIndex = (readIndex + this.FRAME_SIZE) % bufferSize;\n    Atomics.store(this.sharedBufferView, 1, nextReadIndex);\n    \n    return frame;\n  }\n  \n  /**\n   * Cleanup resources\n   */\n  async dispose() {\n    this.stopCapture();\n    \n    if (this.workletNode) {\n      this.workletNode.disconnect();\n      this.workletNode = null;\n    }\n    \n    if (this.sourceNode) {\n      this.sourceNode.disconnect();\n      this.sourceNode = null;\n    }\n    \n    if (this.audioContext) {\n      await this.audioContext.close();\n      this.audioContext = null;\n    }\n    \n    if (this.mediaStream) {\n      this.mediaStream.getTracks().forEach(track => track.stop());\n      this.mediaStream = null;\n    }\n    \n    this.sharedBuffer = null;\n    this.sharedBufferView = null;\n  }\n  \n  /**\n   * Get the current capture status\n   */\n  get capturing() {\n    return this.isCapturing;\n  }\n  \n  /**\n   * Get the sample rate\n   */\n  get sampleRate() {\n    return this.SAMPLE_RATE;\n  }\n  \n  /**\n   * Get the frame size in samples\n   */\n  get frameSize() {\n    return this.FRAME_SIZE;\n  }\n}\n\n// Export for both CommonJS and ES modules\nif (typeof module !== 'undefined' && module.exports) {\n  module.exports = { MicCapture };\n} else if (typeof exports !== 'undefined') {\n  exports.MicCapture = MicCapture;\n}\n"],"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","ignoreList":[]}