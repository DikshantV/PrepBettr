{"version":3,"names":["exports","POST","server_1","cov_1bxck3nr89","s","require","headers_1","authMiddleware_1","firebase_user_service_1","SESSION_COOKIE_NAME","SESSION_DURATION_S","request","f","timestamp","Date","toISOString","console","log","email","password","name","idToken","json","hasEmail","hasPassword","hasName","hasIdToken","idTokenPrefix","b","substring","NextResponse","error","status","authResult","sessionToken","isNewUser","length","parts","split","startsCorrectly","startsWith","preview","verifyFirebaseToken","success","hasUser","user","uid","_a","verifyError","Error","message","emailVerified","email_verified","newUserRecord","firebaseUserService","createAuthUser","displayName","auth","Promise","resolve","then","__importStar","m","getAdminAuth","createCustomToken","code","action","errorMessage","includes","existingProfile","getUserProfile","userProfile","ensureUserProfile","plan","profileError","deleteUser","cleanupError","cookieStore","cookies","set","httpOnly","secure","process","env","NODE_ENV","maxAge","path","sameSite","token","profilePictureUrl","createdAt","updatedAt"],"sources":["/Users/dikshantvashistha/PrepBettr/app/api/auth/signup/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { cookies } from 'next/headers';\nimport { verifyFirebaseToken } from '@/lib/middleware/authMiddleware';\nimport { firebaseUserService } from '@/lib/services/firebase-user-service';\n\nconst SESSION_COOKIE_NAME = 'session';\nconst SESSION_DURATION_S = 7 * 24 * 60 * 60; // 7 days\n\nexport async function POST(request: NextRequest) {\n  const timestamp = new Date().toISOString();\n  console.log(`üÜï [${timestamp}] AUTH SIGNUP POST called`);\n  \n  try {\n    const { email, password, name, idToken } = await request.json();\n    \n    console.log(`üÜï [${timestamp}] Signup request details:`, {\n      hasEmail: !!email,\n      hasPassword: !!password,\n      hasName: !!name,\n      hasIdToken: !!idToken,\n      idTokenPrefix: idToken ? idToken.substring(0, 50) + '...' : 'none'\n    });\n\n    if (!email) {\n      return NextResponse.json(\n        { error: 'Email is required' },\n        { status: 400 }\n      );\n    }\n\n    let authResult;\n    let sessionToken = idToken;\n    let isNewUser = false;\n\n    if (idToken) {\n      // Handle Firebase ID token flow (for Google Sign-in)\n      console.log(`üîê [${timestamp}] Verifying Firebase ID token for Google Sign-up`);\n      console.log(`üîê [${timestamp}] ID Token format check:`, {\n        length: idToken.length,\n        parts: idToken.split('.').length,\n        startsCorrectly: idToken.startsWith('eyJ'),\n        preview: idToken.substring(0, 100) + '...'\n      });\n      \n      try {\n        authResult = await verifyFirebaseToken(idToken);\n        console.log(`üîê [${timestamp}] Firebase token verification result:`, {\n          success: authResult.success,\n          hasUser: !!authResult.user,\n          uid: authResult.user?.uid,\n          error: authResult.error\n        });\n      } catch (verifyError) {\n        console.error(`üîê [${timestamp}] Firebase token verification threw error:`, verifyError);\n        authResult = {\n          success: false,\n          user: null,\n          error: verifyError instanceof Error ? verifyError.message : 'Token verification failed'\n        };\n      }\n      \n      if (!authResult.success || !authResult.user) {\n        console.error(`‚ùå [${timestamp}] Firebase ID token verification failed:`, {\n          error: authResult.error,\n          success: authResult.success,\n          hasUser: !!authResult.user\n        });\n        return NextResponse.json(\n          { error: `Invalid ID token: ${authResult.error}` },\n          { status: 401 }\n        );\n      }\n      \n      console.log(`‚úÖ [${timestamp}] Firebase ID token verified for uid: ${authResult.user.uid}`);\n      console.log(`‚úÖ [${timestamp}] Token claims:`, {\n        email: authResult.user.email,\n        name: authResult.user.name,\n        emailVerified: authResult.user.email_verified\n      });\n      \n      // For Google sign-in, user already exists in Firebase Auth\n      // We just need to ensure the profile exists in Firestore\n      \n    } else if (password) {\n      // Handle email/password flow - create new Firebase Auth user\n      console.log(`üÜï Creating new Firebase Auth user for: ${email}`);\n      try {\n        const newUserRecord = await firebaseUserService.createAuthUser({\n          email,\n          password,\n          displayName: name,\n          emailVerified: false\n        });\n        \n        authResult = {\n          success: true,\n          user: {\n            uid: newUserRecord.uid,\n            email: newUserRecord.email!,\n            name: newUserRecord.displayName || name,\n            email_verified: newUserRecord.emailVerified\n          }\n        };\n\n        // Create a custom token for the new user\n        const auth = await import('@/lib/firebase/admin').then(m => m.getAdminAuth());\n        sessionToken = await auth.createCustomToken(newUserRecord.uid);\n        isNewUser = true;\n        \n        console.log(`‚úÖ Firebase Auth user created for uid: ${authResult.user.uid}`);\n      } catch (error: any) {\n        console.error('‚ùå Firebase Auth user creation failed:', error);\n        \n        // Handle specific Firebase Auth errors\n        if (error.code === 'auth/email-already-exists') {\n          console.log(`‚ö†Ô∏è Account creation attempt for existing email: ${email}`);\n          return NextResponse.json(\n            { \n              error: 'This email is already registered. Please sign in instead or use a different email.',\n              code: 'email_already_exists',\n              action: 'redirect_to_signin'\n            },\n            { status: 409 }\n          );\n        }\n        \n        if (error.code === 'auth/invalid-email') {\n          return NextResponse.json(\n            { \n              error: 'Please enter a valid email address.',\n              code: 'invalid_email'\n            },\n            { status: 400 }\n          );\n        }\n        \n        if (error.code === 'auth/weak-password') {\n          return NextResponse.json(\n            { \n              error: 'Password must be at least 6 characters long.',\n              code: 'weak_password'\n            },\n            { status: 400 }\n          );\n        }\n        \n        // Generic Firebase error handling\n        const errorMessage = error.message || 'Failed to create account';\n        console.error(`‚ùå Unhandled Firebase Auth error code: ${error.code}, message: ${errorMessage}`);\n        \n        return NextResponse.json(\n          { \n            error: errorMessage.includes('Firebase') ? 'Authentication service error. Please try again.' : errorMessage,\n            code: error.code || 'auth_error'\n          },\n          { status: 400 }\n        );\n      }\n    } else {\n      return NextResponse.json(\n        { error: 'Password or ID token is required' },\n        { status: 400 }\n      );\n    }\n\n    if (!authResult.user || !authResult.user.uid) {\n      console.error('‚ùå Authentication failed - no user data');\n      return NextResponse.json(\n        { error: 'Authentication failed' },\n        { status: 401 }\n      );\n    }\n\n    try {\n      // Check if user profile already exists in Firestore\n      console.log(`üîç Checking if user profile exists for uid: ${authResult.user.uid}`);\n      const existingProfile = await firebaseUserService.getUserProfile(authResult.user.uid);\n      \n      if (existingProfile && !isNewUser) {\n        console.log(`‚ö†Ô∏è User profile already exists for uid: ${authResult.user.uid}`);\n        return NextResponse.json(\n          { error: 'User already exists' },\n          { status: 409 }\n        );\n      }\n\n      // Create or ensure user profile exists in Firestore with retry logic\n      let userProfile;\n      try {\n        userProfile = await firebaseUserService.ensureUserProfile(authResult.user.uid, {\n          email: authResult.user.email,\n          displayName: authResult.user.name || name,\n          emailVerified: authResult.user.email_verified,\n          plan: 'free'\n        });\n      } catch (profileError) {\n        console.error(`‚ùå Failed to create user profile for uid: ${authResult.user.uid}:`, profileError);\n        \n        // If this was a new Firebase Auth user creation and profile creation failed,\n        // we should clean up the orphaned Firebase Auth account\n        if (isNewUser) {\n          console.log(`üßπ Cleaning up orphaned Firebase Auth account for uid: ${authResult.user.uid}`);\n          try {\n            await firebaseUserService.deleteUser(authResult.user.uid);\n            console.log(`‚úÖ Cleaned up orphaned Firebase Auth account`);\n          } catch (cleanupError) {\n            console.error(`‚ùå Failed to cleanup orphaned Firebase Auth account:`, cleanupError);\n            // Don't fail the request for cleanup errors - log for manual review\n          }\n        }\n        \n        throw profileError;\n      }\n      \n      console.log(`‚úÖ User profile ${existingProfile ? 'confirmed' : 'created'} for uid: ${authResult.user.uid}`);\n\n      // Set session cookie\n      const cookieStore = await cookies();\n      cookieStore.set(SESSION_COOKIE_NAME, sessionToken, {\n        httpOnly: true,\n        secure: process.env.NODE_ENV === 'production',\n        maxAge: SESSION_DURATION_S,\n        path: '/',\n        sameSite: 'lax',\n      });\n      \n      console.log(`üç™ Session cookie set for uid: ${authResult.user.uid}`);\n\n      // Return success with user data and token for localStorage\n      return NextResponse.json({\n        success: true,\n        token: sessionToken,\n        user: {\n          uid: userProfile.uid,\n          email: userProfile.email,\n          name: userProfile.displayName,\n          email_verified: userProfile.emailVerified,\n          plan: userProfile.plan,\n          profilePictureUrl: userProfile.profilePictureUrl,\n          createdAt: userProfile.createdAt,\n          updatedAt: userProfile.updatedAt\n        }\n      });\n      \n    } catch (profileError) {\n      console.error('‚ùå Failed to handle user profile:', profileError);\n      return NextResponse.json(\n        { error: 'Failed to create user profile' },\n        { status: 500 }\n      );\n    }\n\n  } catch (error) {\n    console.error('‚ùå Signup error:', error);\n    return NextResponse.json(\n      { error: 'Internal server error' },\n      { status: 500 }\n    );\n  }\n}\n"],"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","ignoreList":[]}