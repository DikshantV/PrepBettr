3dc38aa7a5d7d8bf6d372b681d613746
"use strict";

/* istanbul ignore next */
function cov_27qfx6597p() {
  var path = "/Users/dikshantvashistha/PrepBettr/lib/azure-startup.ts";
  var hash = "a44ed08a5aa2a20b177291c5565575c886c1de2c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dikshantvashistha/PrepBettr/lib/azure-startup.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 58
        }
      },
      "2": {
        start: {
          line: 4,
          column: 0
        },
        end: {
          line: 4,
          column: 52
        }
      },
      "3": {
        start: {
          line: 5,
          column: 23
        },
        end: {
          line: 5,
          column: 48
        }
      },
      "4": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 15,
          column: 5
        }
      },
      "5": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 71
        }
      },
      "6": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 15
        }
      },
      "7": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 38,
          column: 5
        }
      },
      "8": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 57
        }
      },
      "9": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 63
        }
      },
      "10": {
        start: {
          line: 21,
          column: 23
        },
        end: {
          line: 21,
          column: 59
        }
      },
      "11": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 32,
          column: 11
        }
      },
      "12": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 65
        }
      },
      "13": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 71
        }
      },
      "14": {
        start: {
          line: 44,
          column: 19
        },
        end: {
          line: 44,
          column: 55
        }
      },
      "15": {
        start: {
          line: 45,
          column: 29
        },
        end: {
          line: 51,
          column: 5
        }
      },
      "16": {
        start: {
          line: 52,
          column: 19
        },
        end: {
          line: 55,
          column: 10
        }
      },
      "17": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 53,
          column: 75
        }
      },
      "18": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 54,
          column: 19
        }
      },
      "19": {
        start: {
          line: 56,
          column: 26
        },
        end: {
          line: 56,
          column: 100
        }
      },
      "20": {
        start: {
          line: 56,
          column: 59
        },
        end: {
          line: 56,
          column: 74
        }
      },
      "21": {
        start: {
          line: 57,
          column: 4
        },
        end: {
          line: 64,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "initializeAzureServices",
        decl: {
          start: {
            line: 10,
            column: 15
          },
          end: {
            line: 10,
            column: 38
          }
        },
        loc: {
          start: {
            line: 10,
            column: 41
          },
          end: {
            line: 39,
            column: 1
          }
        },
        line: 10
      },
      "1": {
        name: "getAzureHealthStatus",
        decl: {
          start: {
            line: 43,
            column: 9
          },
          end: {
            line: 43,
            column: 29
          }
        },
        loc: {
          start: {
            line: 43,
            column: 32
          },
          end: {
            line: 65,
            column: 1
          }
        },
        line: 43
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 52,
            column: 43
          },
          end: {
            line: 52,
            column: 44
          }
        },
        loc: {
          start: {
            line: 52,
            column: 61
          },
          end: {
            line: 55,
            column: 5
          }
        },
        line: 52
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 56,
            column: 54
          },
          end: {
            line: 56,
            column: 55
          }
        },
        loc: {
          start: {
            line: 56,
            column: 59
          },
          end: {
            line: 56,
            column: 74
          }
        },
        line: 56
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 12
      },
      "1": {
        loc: {
          start: {
            line: 26,
            column: 27
          },
          end: {
            line: 26,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 26,
            column: 58
          },
          end: {
            line: 26,
            column: 63
          }
        }, {
          start: {
            line: 26,
            column: 66
          },
          end: {
            line: 26,
            column: 75
          }
        }],
        line: 26
      },
      "2": {
        loc: {
          start: {
            line: 27,
            column: 32
          },
          end: {
            line: 27,
            column: 85
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 27,
            column: 68
          },
          end: {
            line: 27,
            column: 73
          }
        }, {
          start: {
            line: 27,
            column: 76
          },
          end: {
            line: 27,
            column: 85
          }
        }],
        line: 27
      },
      "3": {
        loc: {
          start: {
            line: 28,
            column: 32
          },
          end: {
            line: 28,
            column: 85
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 28,
            column: 68
          },
          end: {
            line: 28,
            column: 73
          }
        }, {
          start: {
            line: 28,
            column: 76
          },
          end: {
            line: 28,
            column: 85
          }
        }],
        line: 28
      },
      "4": {
        loc: {
          start: {
            line: 29,
            column: 37
          },
          end: {
            line: 29,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 29,
            column: 78
          },
          end: {
            line: 29,
            column: 83
          }
        }, {
          start: {
            line: 29,
            column: 86
          },
          end: {
            line: 29,
            column: 95
          }
        }],
        line: 29
      },
      "5": {
        loc: {
          start: {
            line: 30,
            column: 39
          },
          end: {
            line: 30,
            column: 99
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 30,
            column: 82
          },
          end: {
            line: 30,
            column: 87
          }
        }, {
          start: {
            line: 30,
            column: 90
          },
          end: {
            line: 30,
            column: 99
          }
        }],
        line: 30
      },
      "6": {
        loc: {
          start: {
            line: 53,
            column: 23
          },
          end: {
            line: 53,
            column: 74
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 53,
            column: 53
          },
          end: {
            line: 53,
            column: 62
          }
        }, {
          start: {
            line: 53,
            column: 65
          },
          end: {
            line: 53,
            column: 74
          }
        }],
        line: 53
      },
      "7": {
        loc: {
          start: {
            line: 56,
            column: 26
          },
          end: {
            line: 56,
            column: 100
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 56,
            column: 78
          },
          end: {
            line: 56,
            column: 87
          }
        }, {
          start: {
            line: 56,
            column: 90
          },
          end: {
            line: 56,
            column: 100
          }
        }],
        line: 56
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/dikshantvashistha/PrepBettr/lib/azure-startup.ts",
      mappings: ";;AAMA,0DAgCC;AAKD,oDA0BC;AArED,iDAA4E;AAE5E;;;GAGG;AACI,KAAK,UAAU,uBAAuB;IAC3C,0BAA0B;IAC1B,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE,CAAC;QAClC,OAAO,CAAC,GAAG,CAAC,iDAAiD,CAAC,CAAC;QAC/D,OAAO;IACT,CAAC;IAED,IAAI,CAAC;QACH,OAAO,CAAC,GAAG,CAAC,mCAAmC,CAAC,CAAC;QAEjD,+BAA+B;QAC/B,MAAM,IAAA,yCAA0B,GAAE,CAAC;QAEnC,2BAA2B;QAC3B,MAAM,MAAM,GAAG,IAAA,6BAAc,GAAE,CAAC;QAChC,OAAO,CAAC,GAAG,CAAC,gCAAgC,EAAE;YAC5C,WAAW,EAAE,MAAM,CAAC,WAAW;YAC/B,eAAe,EAAE,MAAM,CAAC,eAAe;YACvC,oBAAoB,EAAE;gBACpB,SAAS,EAAE,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS;gBAC3D,cAAc,EAAE,MAAM,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS;gBACrE,cAAc,EAAE,MAAM,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS;gBACrE,mBAAmB,EAAE,MAAM,CAAC,WAAW,CAAC,mBAAmB,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS;gBAC/E,qBAAqB,EAAE,MAAM,CAAC,WAAW,CAAC,qBAAqB,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS;aACpF;SACF,CAAC,CAAC;QAEH,OAAO,CAAC,GAAG,CAAC,2CAA2C,CAAC,CAAC;IAC3D,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,KAAK,CAAC,wCAAwC,EAAE,KAAK,CAAC,CAAC;QAC/D,+EAA+E;IACjF,CAAC;AACH,CAAC;AAED;;GAEG;AACH,SAAgB,oBAAoB;IAClC,MAAM,MAAM,GAAG,IAAA,6BAAc,GAAE,CAAC;IAEhC,MAAM,gBAAgB,GAAG;QACvB,WAAW;QACX,gBAAgB;QAChB,gBAAgB;QAChB,qBAAqB;QACrB,uBAAuB;KACf,CAAC;IAEX,MAAM,MAAM,GAAG,gBAAgB,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,OAAO,EAAE,EAAE;QACtD,GAAG,CAAC,OAAO,CAAC,GAAG,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC;QACnE,OAAO,GAAG,CAAC;IACb,CAAC,EAAE,EAAoE,CAAC,CAAC;IAEzE,MAAM,aAAa,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,SAAS,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,UAAU,CAAC;IAEjG,OAAO;QACL,OAAO,EAAE,aAAa;QACtB,QAAQ,EAAE,MAAM;QAChB,QAAQ,EAAE;YACR,GAAG,EAAE,MAAM,CAAC,WAAW;YACvB,MAAM,EAAE,MAAM,CAAC,eAAe;SAC/B;KACF,CAAC;AACJ,CAAC",
      names: [],
      sources: ["/Users/dikshantvashistha/PrepBettr/lib/azure-startup.ts"],
      sourcesContent: ["import { initializeAzureEnvironment, getAzureConfig } from './azure-config';\n\n/**\n * Initialize Azure services on server startup\n * This should be called during Next.js server initialization\n */\nexport async function initializeAzureServices(): Promise<void> {\n  // Only run on server side\n  if (typeof window !== 'undefined') {\n    console.log('\uD83D\uDD04 Skipping Azure initialization on client side');\n    return;\n  }\n\n  try {\n    console.log('\uD83D\uDE80 Initializing Azure services...');\n    \n    // Initialize Azure environment\n    await initializeAzureEnvironment();\n    \n    // Log configuration status\n    const config = getAzureConfig();\n    console.log('\uD83D\uDD0D Azure configuration status:', {\n      keyVaultUri: config.keyVaultUri,\n      hasSecretsCache: config.hasSecretsCache,\n      environmentVariables: {\n        speechKey: config.environment.speechKey ? 'SET' : 'MISSING',\n        speechEndpoint: config.environment.speechEndpoint ? 'SET' : 'MISSING',\n        azureOpenAIKey: config.environment.azureOpenAIKey ? 'SET' : 'MISSING',\n        azureOpenAIEndpoint: config.environment.azureOpenAIEndpoint ? 'SET' : 'MISSING',\n        azureOpenAIDeployment: config.environment.azureOpenAIDeployment ? 'SET' : 'MISSING'\n      }\n    });\n    \n    console.log('\u2705 Azure services initialized successfully');\n  } catch (error) {\n    console.error('\u274C Failed to initialize Azure services:', error);\n    // Don't throw error - let the app continue with fallback environment variables\n  }\n}\n\n/**\n * Health check for Azure services\n */\nexport function getAzureHealthStatus() {\n  const config = getAzureConfig();\n  \n  const requiredServices = [\n    'speechKey',\n    'speechEndpoint', \n    'azureOpenAIKey',\n    'azureOpenAIEndpoint',\n    'azureOpenAIDeployment'\n  ] as const;\n\n  const status = requiredServices.reduce((acc, service) => {\n    acc[service] = config.environment[service] ? 'healthy' : 'missing';\n    return acc;\n  }, {} as Record<typeof requiredServices[number], 'healthy' | 'missing'>);\n\n  const overallHealth = Object.values(status).every(s => s === 'healthy') ? 'healthy' : 'degraded';\n\n  return {\n    overall: overallHealth,\n    services: status,\n    keyVault: {\n      uri: config.keyVaultUri,\n      cached: config.hasSecretsCache\n    }\n  };\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a44ed08a5aa2a20b177291c5565575c886c1de2c"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_27qfx6597p = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_27qfx6597p();
cov_27qfx6597p().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_27qfx6597p().s[1]++;
exports.initializeAzureServices = initializeAzureServices;
/* istanbul ignore next */
cov_27qfx6597p().s[2]++;
exports.getAzureHealthStatus = getAzureHealthStatus;
const azure_config_1 =
/* istanbul ignore next */
(cov_27qfx6597p().s[3]++, require("./azure-config"));
/**
 * Initialize Azure services on server startup
 * This should be called during Next.js server initialization
 */
async function initializeAzureServices() {
  /* istanbul ignore next */
  cov_27qfx6597p().f[0]++;
  cov_27qfx6597p().s[4]++;
  // Only run on server side
  if (typeof window !== 'undefined') {
    /* istanbul ignore next */
    cov_27qfx6597p().b[0][0]++;
    cov_27qfx6597p().s[5]++;
    console.log('🔄 Skipping Azure initialization on client side');
    /* istanbul ignore next */
    cov_27qfx6597p().s[6]++;
    return;
  } else
  /* istanbul ignore next */
  {
    cov_27qfx6597p().b[0][1]++;
  }
  cov_27qfx6597p().s[7]++;
  try {
    /* istanbul ignore next */
    cov_27qfx6597p().s[8]++;
    console.log('🚀 Initializing Azure services...');
    // Initialize Azure environment
    /* istanbul ignore next */
    cov_27qfx6597p().s[9]++;
    await (0, azure_config_1.initializeAzureEnvironment)();
    // Log configuration status
    const config =
    /* istanbul ignore next */
    (cov_27qfx6597p().s[10]++, (0, azure_config_1.getAzureConfig)());
    /* istanbul ignore next */
    cov_27qfx6597p().s[11]++;
    console.log('🔍 Azure configuration status:', {
      keyVaultUri: config.keyVaultUri,
      hasSecretsCache: config.hasSecretsCache,
      environmentVariables: {
        speechKey: config.environment.speechKey ?
        /* istanbul ignore next */
        (cov_27qfx6597p().b[1][0]++, 'SET') :
        /* istanbul ignore next */
        (cov_27qfx6597p().b[1][1]++, 'MISSING'),
        speechEndpoint: config.environment.speechEndpoint ?
        /* istanbul ignore next */
        (cov_27qfx6597p().b[2][0]++, 'SET') :
        /* istanbul ignore next */
        (cov_27qfx6597p().b[2][1]++, 'MISSING'),
        azureOpenAIKey: config.environment.azureOpenAIKey ?
        /* istanbul ignore next */
        (cov_27qfx6597p().b[3][0]++, 'SET') :
        /* istanbul ignore next */
        (cov_27qfx6597p().b[3][1]++, 'MISSING'),
        azureOpenAIEndpoint: config.environment.azureOpenAIEndpoint ?
        /* istanbul ignore next */
        (cov_27qfx6597p().b[4][0]++, 'SET') :
        /* istanbul ignore next */
        (cov_27qfx6597p().b[4][1]++, 'MISSING'),
        azureOpenAIDeployment: config.environment.azureOpenAIDeployment ?
        /* istanbul ignore next */
        (cov_27qfx6597p().b[5][0]++, 'SET') :
        /* istanbul ignore next */
        (cov_27qfx6597p().b[5][1]++, 'MISSING')
      }
    });
    /* istanbul ignore next */
    cov_27qfx6597p().s[12]++;
    console.log('✅ Azure services initialized successfully');
  } catch (error) {
    /* istanbul ignore next */
    cov_27qfx6597p().s[13]++;
    console.error('❌ Failed to initialize Azure services:', error);
    // Don't throw error - let the app continue with fallback environment variables
  }
}
/**
 * Health check for Azure services
 */
function getAzureHealthStatus() {
  /* istanbul ignore next */
  cov_27qfx6597p().f[1]++;
  const config =
  /* istanbul ignore next */
  (cov_27qfx6597p().s[14]++, (0, azure_config_1.getAzureConfig)());
  const requiredServices =
  /* istanbul ignore next */
  (cov_27qfx6597p().s[15]++, ['speechKey', 'speechEndpoint', 'azureOpenAIKey', 'azureOpenAIEndpoint', 'azureOpenAIDeployment']);
  const status =
  /* istanbul ignore next */
  (cov_27qfx6597p().s[16]++, requiredServices.reduce((acc, service) => {
    /* istanbul ignore next */
    cov_27qfx6597p().f[2]++;
    cov_27qfx6597p().s[17]++;
    acc[service] = config.environment[service] ?
    /* istanbul ignore next */
    (cov_27qfx6597p().b[6][0]++, 'healthy') :
    /* istanbul ignore next */
    (cov_27qfx6597p().b[6][1]++, 'missing');
    /* istanbul ignore next */
    cov_27qfx6597p().s[18]++;
    return acc;
  }, {}));
  const overallHealth =
  /* istanbul ignore next */
  (cov_27qfx6597p().s[19]++, Object.values(status).every(s => {
    /* istanbul ignore next */
    cov_27qfx6597p().f[3]++;
    cov_27qfx6597p().s[20]++;
    return s === 'healthy';
  }) ?
  /* istanbul ignore next */
  (cov_27qfx6597p().b[7][0]++, 'healthy') :
  /* istanbul ignore next */
  (cov_27qfx6597p().b[7][1]++, 'degraded'));
  /* istanbul ignore next */
  cov_27qfx6597p().s[21]++;
  return {
    overall: overallHealth,
    services: status,
    keyVault: {
      uri: config.keyVaultUri,
      cached: config.hasSecretsCache
    }
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,