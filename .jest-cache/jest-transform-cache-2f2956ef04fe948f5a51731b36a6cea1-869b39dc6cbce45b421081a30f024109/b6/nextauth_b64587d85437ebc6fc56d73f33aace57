6328e117570e9a9e5e75fea14fe88408
"use strict";

/**
 * Next.js Authentication Middleware Adapter
 *
 * Provides Next.js-specific authentication middleware using the unified auth library
 */
/* istanbul ignore next */
function cov_q2zukk598() {
  var path = "/Users/dikshantvashistha/PrepBettr/lib/shared/auth/adapters/next-auth.ts";
  var hash = "3dec2afb3e62248f7797e5f82cbf90cfd951632a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dikshantvashistha/PrepBettr/lib/shared/auth/adapters/next-auth.ts",
    statementMap: {
      "0": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 7,
          column: 62
        }
      },
      "1": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 48
        }
      },
      "2": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 44
        }
      },
      "3": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 10,
          column: 48
        }
      },
      "4": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 50
        }
      },
      "5": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 36
        }
      },
      "6": {
        start: {
          line: 13,
          column: 0
        },
        end: {
          line: 13,
          column: 46
        }
      },
      "7": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 14,
          column: 44
        }
      },
      "8": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 15,
          column: 60
        }
      },
      "9": {
        start: {
          line: 16,
          column: 0
        },
        end: {
          line: 16,
          column: 60
        }
      },
      "10": {
        start: {
          line: 17,
          column: 0
        },
        end: {
          line: 17,
          column: 56
        }
      },
      "11": {
        start: {
          line: 18,
          column: 0
        },
        end: {
          line: 18,
          column: 46
        }
      },
      "12": {
        start: {
          line: 19,
          column: 17
        },
        end: {
          line: 19,
          column: 39
        }
      },
      "13": {
        start: {
          line: 20,
          column: 15
        },
        end: {
          line: 20,
          column: 33
        }
      },
      "14": {
        start: {
          line: 21,
          column: 16
        },
        end: {
          line: 21,
          column: 35
        }
      },
      "15": {
        start: {
          line: 28,
          column: 20
        },
        end: {
          line: 28,
          column: 63
        }
      },
      "16": {
        start: {
          line: 29,
          column: 22
        },
        end: {
          line: 29,
          column: 65
        }
      },
      "17": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 89,
          column: 5
        }
      },
      "18": {
        start: {
          line: 31,
          column: 27
        },
        end: {
          line: 31,
          column: 63
        }
      },
      "19": {
        start: {
          line: 32,
          column: 27
        },
        end: {
          line: 32,
          column: 73
        }
      },
      "20": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 42,
          column: 9
        }
      },
      "21": {
        start: {
          line: 34,
          column: 26
        },
        end: {
          line: 34,
          column: 159
        }
      },
      "22": {
        start: {
          line: 35,
          column: 12
        },
        end: {
          line: 41,
          column: 14
        }
      },
      "23": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 56,
          column: 9
        }
      },
      "24": {
        start: {
          line: 45,
          column: 25
        },
        end: {
          line: 45,
          column: 53
        }
      },
      "25": {
        start: {
          line: 46,
          column: 12
        },
        end: {
          line: 55,
          column: 13
        }
      },
      "26": {
        start: {
          line: 47,
          column: 30
        },
        end: {
          line: 47,
          column: 100
        }
      },
      "27": {
        start: {
          line: 48,
          column: 16
        },
        end: {
          line: 54,
          column: 18
        }
      },
      "28": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 70,
          column: 9
        }
      },
      "29": {
        start: {
          line: 59,
          column: 28
        },
        end: {
          line: 59,
          column: 74
        }
      },
      "30": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 69,
          column: 13
        }
      },
      "31": {
        start: {
          line: 61,
          column: 30
        },
        end: {
          line: 61,
          column: 133
        }
      },
      "32": {
        start: {
          line: 62,
          column: 16
        },
        end: {
          line: 68,
          column: 18
        }
      },
      "33": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 71,
          column: 20
        }
      },
      "34": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 75,
          column: 10
        }
      },
      "35": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 78,
          column: 20
        }
      },
      "36": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 79,
          column: 63
        }
      },
      "37": {
        start: {
          line: 80,
          column: 26
        },
        end: {
          line: 81,
          column: 107
        }
      },
      "38": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 88,
          column: 10
        }
      },
      "39": {
        start: {
          line: 95,
          column: 4
        },
        end: {
          line: 108,
          column: 5
        }
      },
      "40": {
        start: {
          line: 96,
          column: 27
        },
        end: {
          line: 96,
          column: 63
        }
      },
      "41": {
        start: {
          line: 97,
          column: 27
        },
        end: {
          line: 97,
          column: 73
        }
      },
      "42": {
        start: {
          line: 98,
          column: 8
        },
        end: {
          line: 101,
          column: 10
        }
      },
      "43": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 107,
          column: 10
        }
      },
      "44": {
        start: {
          line: 114,
          column: 4
        },
        end: {
          line: 114,
          column: 58
        }
      },
      "45": {
        start: {
          line: 120,
          column: 4
        },
        end: {
          line: 120,
          column: 69
        }
      },
      "46": {
        start: {
          line: 127,
          column: 4
        },
        end: {
          line: 137,
          column: 6
        }
      },
      "47": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 130,
          column: 9
        }
      },
      "48": {
        start: {
          line: 129,
          column: 12
        },
        end: {
          line: 129,
          column: 57
        }
      },
      "49": {
        start: {
          line: 131,
          column: 27
        },
        end: {
          line: 131,
          column: 69
        }
      },
      "50": {
        start: {
          line: 132,
          column: 8
        },
        end: {
          line: 134,
          column: 9
        }
      },
      "51": {
        start: {
          line: 133,
          column: 12
        },
        end: {
          line: 133,
          column: 39
        }
      },
      "52": {
        start: {
          line: 136,
          column: 8
        },
        end: {
          line: 136,
          column: 64
        }
      },
      "53": {
        start: {
          line: 143,
          column: 4
        },
        end: {
          line: 143,
          column: 63
        }
      },
      "54": {
        start: {
          line: 149,
          column: 4
        },
        end: {
          line: 149,
          column: 52
        }
      },
      "55": {
        start: {
          line: 156,
          column: 4
        },
        end: {
          line: 165,
          column: 7
        }
      },
      "56": {
        start: {
          line: 171,
          column: 4
        },
        end: {
          line: 175,
          column: 24
        }
      },
      "57": {
        start: {
          line: 181,
          column: 4
        },
        end: {
          line: 189,
          column: 5
        }
      },
      "58": {
        start: {
          line: 182,
          column: 21
        },
        end: {
          line: 182,
          column: 49
        }
      },
      "59": {
        start: {
          line: 183,
          column: 23
        },
        end: {
          line: 183,
          column: 68
        }
      },
      "60": {
        start: {
          line: 184,
          column: 8
        },
        end: {
          line: 184,
          column: 57
        }
      },
      "61": {
        start: {
          line: 187,
          column: 8
        },
        end: {
          line: 187,
          column: 68
        }
      },
      "62": {
        start: {
          line: 188,
          column: 8
        },
        end: {
          line: 188,
          column: 20
        }
      },
      "63": {
        start: {
          line: 196,
          column: 4
        },
        end: {
          line: 215,
          column: 5
        }
      },
      "64": {
        start: {
          line: 198,
          column: 27
        },
        end: {
          line: 198,
          column: 63
        }
      },
      "65": {
        start: {
          line: 199,
          column: 8
        },
        end: {
          line: 204,
          column: 9
        }
      },
      "66": {
        start: {
          line: 200,
          column: 31
        },
        end: {
          line: 200,
          column: 77
        }
      },
      "67": {
        start: {
          line: 201,
          column: 12
        },
        end: {
          line: 203,
          column: 13
        }
      },
      "68": {
        start: {
          line: 202,
          column: 16
        },
        end: {
          line: 202,
          column: 39
        }
      },
      "69": {
        start: {
          line: 206,
          column: 30
        },
        end: {
          line: 206,
          column: 113
        }
      },
      "70": {
        start: {
          line: 207,
          column: 8
        },
        end: {
          line: 209,
          column: 9
        }
      },
      "71": {
        start: {
          line: 208,
          column: 12
        },
        end: {
          line: 208,
          column: 65
        }
      },
      "72": {
        start: {
          line: 210,
          column: 8
        },
        end: {
          line: 210,
          column: 20
        }
      },
      "73": {
        start: {
          line: 213,
          column: 8
        },
        end: {
          line: 213,
          column: 69
        }
      },
      "74": {
        start: {
          line: 214,
          column: 8
        },
        end: {
          line: 214,
          column: 20
        }
      },
      "75": {
        start: {
          line: 222,
          column: 20
        },
        end: {
          line: 222,
          column: 63
        }
      },
      "76": {
        start: {
          line: 223,
          column: 20
        },
        end: {
          line: 223,
          column: 22
        }
      },
      "77": {
        start: {
          line: 224,
          column: 4
        },
        end: {
          line: 229,
          column: 5
        }
      },
      "78": {
        start: {
          line: 224,
          column: 17
        },
        end: {
          line: 224,
          column: 18
        }
      },
      "79": {
        start: {
          line: 225,
          column: 26
        },
        end: {
          line: 225,
          column: 58
        }
      },
      "80": {
        start: {
          line: 226,
          column: 8
        },
        end: {
          line: 226,
          column: 42
        }
      },
      "81": {
        start: {
          line: 227,
          column: 25
        },
        end: {
          line: 227,
          column: 36
        }
      },
      "82": {
        start: {
          line: 228,
          column: 8
        },
        end: {
          line: 228,
          column: 31
        }
      },
      "83": {
        start: {
          line: 230,
          column: 19
        },
        end: {
          line: 230,
          column: 48
        }
      },
      "84": {
        start: {
          line: 230,
          column: 42
        },
        end: {
          line: 230,
          column: 47
        }
      },
      "85": {
        start: {
          line: 231,
          column: 16
        },
        end: {
          line: 231,
          column: 50
        }
      },
      "86": {
        start: {
          line: 231,
          column: 41
        },
        end: {
          line: 231,
          column: 46
        }
      },
      "87": {
        start: {
          line: 232,
          column: 4
        },
        end: {
          line: 240,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "nextAuthMiddleware",
        decl: {
          start: {
            line: 26,
            column: 15
          },
          end: {
            line: 26,
            column: 33
          }
        },
        loc: {
          start: {
            line: 26,
            column: 57
          },
          end: {
            line: 90,
            column: 1
          }
        },
        line: 26
      },
      "1": {
        name: "nextOptionalAuth",
        decl: {
          start: {
            line: 94,
            column: 15
          },
          end: {
            line: 94,
            column: 31
          }
        },
        loc: {
          start: {
            line: 94,
            column: 41
          },
          end: {
            line: 109,
            column: 1
          }
        },
        line: 94
      },
      "2": {
        name: "nextRoleMiddleware",
        decl: {
          start: {
            line: 113,
            column: 15
          },
          end: {
            line: 113,
            column: 33
          }
        },
        loc: {
          start: {
            line: 113,
            column: 58
          },
          end: {
            line: 115,
            column: 1
          }
        },
        line: 113
      },
      "3": {
        name: "nextAdminMiddleware",
        decl: {
          start: {
            line: 119,
            column: 15
          },
          end: {
            line: 119,
            column: 34
          }
        },
        loc: {
          start: {
            line: 119,
            column: 44
          },
          end: {
            line: 121,
            column: 1
          }
        },
        line: 119
      },
      "4": {
        name: "withNextAuth",
        decl: {
          start: {
            line: 126,
            column: 9
          },
          end: {
            line: 126,
            column: 21
          }
        },
        loc: {
          start: {
            line: 126,
            column: 45
          },
          end: {
            line: 138,
            column: 1
          }
        },
        line: 126
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 127,
            column: 11
          },
          end: {
            line: 127,
            column: 12
          }
        },
        loc: {
          start: {
            line: 127,
            column: 39
          },
          end: {
            line: 137,
            column: 5
          }
        },
        line: 127
      },
      "6": {
        name: "withNextAdminAuth",
        decl: {
          start: {
            line: 142,
            column: 9
          },
          end: {
            line: 142,
            column: 26
          }
        },
        loc: {
          start: {
            line: 142,
            column: 36
          },
          end: {
            line: 144,
            column: 1
          }
        },
        line: 142
      },
      "7": {
        name: "withNextRoleAuth",
        decl: {
          start: {
            line: 148,
            column: 9
          },
          end: {
            line: 148,
            column: 25
          }
        },
        loc: {
          start: {
            line: 148,
            column: 50
          },
          end: {
            line: 150,
            column: 1
          }
        },
        line: 148
      },
      "8": {
        name: "createErrorResponse",
        decl: {
          start: {
            line: 155,
            column: 9
          },
          end: {
            line: 155,
            column: 28
          }
        },
        loc: {
          start: {
            line: 155,
            column: 36
          },
          end: {
            line: 166,
            column: 1
          }
        },
        line: 155
      },
      "9": {
        name: "createNextHealthResponse",
        decl: {
          start: {
            line: 170,
            column: 9
          },
          end: {
            line: 170,
            column: 33
          }
        },
        loc: {
          start: {
            line: 170,
            column: 36
          },
          end: {
            line: 176,
            column: 1
          }
        },
        line: 170
      },
      "10": {
        name: "getUserFromSessionCookie",
        decl: {
          start: {
            line: 180,
            column: 15
          },
          end: {
            line: 180,
            column: 39
          }
        },
        loc: {
          start: {
            line: 180,
            column: 55
          },
          end: {
            line: 190,
            column: 1
          }
        },
        line: 180
      },
      "11": {
        name: "extractUserFromRequest",
        decl: {
          start: {
            line: 194,
            column: 15
          },
          end: {
            line: 194,
            column: 37
          }
        },
        loc: {
          start: {
            line: 194,
            column: 47
          },
          end: {
            line: 216,
            column: 1
          }
        },
        line: 194
      },
      "12": {
        name: "benchmarkNextAuth",
        decl: {
          start: {
            line: 221,
            column: 15
          },
          end: {
            line: 221,
            column: 32
          }
        },
        loc: {
          start: {
            line: 221,
            column: 60
          },
          end: {
            line: 241,
            column: 1
          }
        },
        line: 221
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 230,
            column: 32
          },
          end: {
            line: 230,
            column: 33
          }
        },
        loc: {
          start: {
            line: 230,
            column: 42
          },
          end: {
            line: 230,
            column: 47
          }
        },
        line: 230
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 231,
            column: 31
          },
          end: {
            line: 231,
            column: 32
          }
        },
        loc: {
          start: {
            line: 231,
            column: 41
          },
          end: {
            line: 231,
            column: 46
          }
        },
        line: 231
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 26,
            column: 43
          },
          end: {
            line: 26,
            column: 55
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 26,
            column: 53
          },
          end: {
            line: 26,
            column: 55
          }
        }],
        line: 26
      },
      "1": {
        loc: {
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 42,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 42,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 33
      },
      "2": {
        loc: {
          start: {
            line: 33,
            column: 12
          },
          end: {
            line: 33,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 33,
            column: 12
          },
          end: {
            line: 33,
            column: 31
          }
        }, {
          start: {
            line: 33,
            column: 35
          },
          end: {
            line: 33,
            column: 51
          }
        }],
        line: 33
      },
      "3": {
        loc: {
          start: {
            line: 34,
            column: 54
          },
          end: {
            line: 34,
            column: 113
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 34,
            column: 54
          },
          end: {
            line: 34,
            column: 74
          }
        }, {
          start: {
            line: 34,
            column: 78
          },
          end: {
            line: 34,
            column: 113
          }
        }],
        line: 34
      },
      "4": {
        loc: {
          start: {
            line: 34,
            column: 115
          },
          end: {
            line: 34,
            column: 158
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 34,
            column: 115
          },
          end: {
            line: 34,
            column: 131
          }
        }, {
          start: {
            line: 34,
            column: 135
          },
          end: {
            line: 34,
            column: 158
          }
        }],
        line: 34
      },
      "5": {
        loc: {
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 56,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 56,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 44
      },
      "6": {
        loc: {
          start: {
            line: 44,
            column: 12
          },
          end: {
            line: 44,
            column: 87
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 44,
            column: 69
          },
          end: {
            line: 44,
            column: 75
          }
        }, {
          start: {
            line: 44,
            column: 78
          },
          end: {
            line: 44,
            column: 87
          }
        }],
        line: 44
      },
      "7": {
        loc: {
          start: {
            line: 44,
            column: 12
          },
          end: {
            line: 44,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 44,
            column: 12
          },
          end: {
            line: 44,
            column: 49
          }
        }, {
          start: {
            line: 44,
            column: 53
          },
          end: {
            line: 44,
            column: 66
          }
        }],
        line: 44
      },
      "8": {
        loc: {
          start: {
            line: 46,
            column: 12
          },
          end: {
            line: 55,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 46,
            column: 12
          },
          end: {
            line: 55,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 46
      },
      "9": {
        loc: {
          start: {
            line: 58,
            column: 8
          },
          end: {
            line: 70,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 58,
            column: 8
          },
          end: {
            line: 70,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 58
      },
      "10": {
        loc: {
          start: {
            line: 60,
            column: 12
          },
          end: {
            line: 69,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 60,
            column: 12
          },
          end: {
            line: 69,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 60
      },
      "11": {
        loc: {
          start: {
            line: 80,
            column: 26
          },
          end: {
            line: 81,
            column: 107
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 80,
            column: 69
          },
          end: {
            line: 80,
            column: 74
          }
        }, {
          start: {
            line: 81,
            column: 12
          },
          end: {
            line: 81,
            column: 107
          }
        }],
        line: 80
      },
      "12": {
        loc: {
          start: {
            line: 126,
            column: 31
          },
          end: {
            line: 126,
            column: 43
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 126,
            column: 41
          },
          end: {
            line: 126,
            column: 43
          }
        }],
        line: 126
      },
      "13": {
        loc: {
          start: {
            line: 128,
            column: 8
          },
          end: {
            line: 130,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 128,
            column: 8
          },
          end: {
            line: 130,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 128
      },
      "14": {
        loc: {
          start: {
            line: 132,
            column: 8
          },
          end: {
            line: 134,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 132,
            column: 8
          },
          end: {
            line: 134,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 132
      },
      "15": {
        loc: {
          start: {
            line: 132,
            column: 12
          },
          end: {
            line: 132,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 132,
            column: 12
          },
          end: {
            line: 132,
            column: 31
          }
        }, {
          start: {
            line: 132,
            column: 35
          },
          end: {
            line: 132,
            column: 51
          }
        }],
        line: 132
      },
      "16": {
        loc: {
          start: {
            line: 161,
            column: 16
          },
          end: {
            line: 161,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 161,
            column: 16
          },
          end: {
            line: 161,
            column: 32
          }
        }, {
          start: {
            line: 161,
            column: 36
          },
          end: {
            line: 161,
            column: 39
          }
        }],
        line: 161
      },
      "17": {
        loc: {
          start: {
            line: 184,
            column: 15
          },
          end: {
            line: 184,
            column: 56
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 184,
            column: 30
          },
          end: {
            line: 184,
            column: 49
          }
        }, {
          start: {
            line: 184,
            column: 52
          },
          end: {
            line: 184,
            column: 56
          }
        }],
        line: 184
      },
      "18": {
        loc: {
          start: {
            line: 184,
            column: 30
          },
          end: {
            line: 184,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 184,
            column: 30
          },
          end: {
            line: 184,
            column: 41
          }
        }, {
          start: {
            line: 184,
            column: 45
          },
          end: {
            line: 184,
            column: 49
          }
        }],
        line: 184
      },
      "19": {
        loc: {
          start: {
            line: 199,
            column: 8
          },
          end: {
            line: 204,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 199,
            column: 8
          },
          end: {
            line: 204,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 199
      },
      "20": {
        loc: {
          start: {
            line: 201,
            column: 12
          },
          end: {
            line: 203,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 201,
            column: 12
          },
          end: {
            line: 203,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 201
      },
      "21": {
        loc: {
          start: {
            line: 201,
            column: 16
          },
          end: {
            line: 201,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 201,
            column: 16
          },
          end: {
            line: 201,
            column: 34
          }
        }, {
          start: {
            line: 201,
            column: 38
          },
          end: {
            line: 201,
            column: 53
          }
        }],
        line: 201
      },
      "22": {
        loc: {
          start: {
            line: 206,
            column: 30
          },
          end: {
            line: 206,
            column: 113
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 206,
            column: 96
          },
          end: {
            line: 206,
            column: 102
          }
        }, {
          start: {
            line: 206,
            column: 105
          },
          end: {
            line: 206,
            column: 113
          }
        }],
        line: 206
      },
      "23": {
        loc: {
          start: {
            line: 206,
            column: 30
          },
          end: {
            line: 206,
            column: 93
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 206,
            column: 30
          },
          end: {
            line: 206,
            column: 76
          }
        }, {
          start: {
            line: 206,
            column: 80
          },
          end: {
            line: 206,
            column: 93
          }
        }],
        line: 206
      },
      "24": {
        loc: {
          start: {
            line: 207,
            column: 8
          },
          end: {
            line: 209,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 207,
            column: 8
          },
          end: {
            line: 209,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 207
      },
      "25": {
        loc: {
          start: {
            line: 221,
            column: 42
          },
          end: {
            line: 221,
            column: 58
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 221,
            column: 55
          },
          end: {
            line: 221,
            column: 58
          }
        }],
        line: 221
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0]
    },
    inputSourceMap: {
      file: "/Users/dikshantvashistha/PrepBettr/lib/shared/auth/adapters/next-auth.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/dikshantvashistha/PrepBettr/lib/shared/auth/adapters/next-auth.ts"],
      sourcesContent: ["/**\n * Next.js Authentication Middleware Adapter\n * \n * Provides Next.js-specific authentication middleware using the unified auth library\n */\n\nimport { NextRequest, NextResponse } from 'next/server';\nimport { \n  getUnifiedAuth, \n  verifyAuthHeader, \n  UnifiedAuthError,\n  AuthPerformanceMonitor \n} from '../core';\nimport { \n  AuthenticatedUser, \n  AuthMiddlewareOptions, \n  AuthMiddlewareResult,\n  AuthErrorCode \n} from '../types';\n\n// ===== NEXT.JS MIDDLEWARE FUNCTIONS =====\n\n/**\n * Core authentication middleware for Next.js API routes\n */\nexport async function nextAuthMiddleware(\n  request: NextRequest, \n  options: AuthMiddlewareOptions = {}\n): Promise<AuthMiddlewareResult<NextResponse>> {\n  const monitor = AuthPerformanceMonitor.getInstance();\n  const endTiming = monitor.startTiming('next-auth-middleware');\n\n  try {\n    const authHeader = request.headers.get('authorization');\n    const authResult = await verifyAuthHeader(authHeader);\n\n    if (!authResult.success || !authResult.user) {\n      const error = new UnifiedAuthError(\n        authResult.errorCode || AuthErrorCode.INVALID_TOKEN,\n        authResult.error || 'Authentication failed'\n      );\n\n      return {\n        success: false,\n        user: null,\n        response: createErrorResponse(error),\n        error: error.message,\n        errorCode: error.code\n      };\n    }\n\n    // Check roles if required\n    if (options.requiredRoles?.length) {\n      const auth = getUnifiedAuth();\n      if (!auth.hasRequiredRoles(authResult.user, options.requiredRoles)) {\n        const error = UnifiedAuthError.insufficientPermissions(options.requiredRoles);\n        return {\n          success: false,\n          user: null,\n          response: createErrorResponse(error),\n          error: error.message,\n          errorCode: error.code\n        };\n      }\n    }\n\n    // Custom validation\n    if (options.customValidator) {\n      const isValid = await options.customValidator(authResult.user);\n      if (!isValid) {\n        const error = new UnifiedAuthError(\n          AuthErrorCode.INSUFFICIENT_PERMISSIONS,\n          'Custom validation failed'\n        );\n        return {\n          success: false,\n          user: null,\n          response: createErrorResponse(error),\n          error: error.message,\n          errorCode: error.code\n        };\n      }\n    }\n\n    endTiming();\n    return {\n      success: true,\n      user: authResult.user\n    };\n\n  } catch (error) {\n    endTiming();\n    console.error('Next.js auth middleware error:', error);\n    \n    const authError = error instanceof UnifiedAuthError ? error : \n      new UnifiedAuthError(AuthErrorCode.UNKNOWN_ERROR, 'Authentication system error');\n\n    return {\n      success: false,\n      user: null,\n      response: createErrorResponse(authError),\n      error: authError.message,\n      errorCode: authError.code\n    };\n  }\n}\n\n/**\n * Optional authentication middleware (allows anonymous users)\n */\nexport async function nextOptionalAuth(request: NextRequest): Promise<{\n  user: AuthenticatedUser | null;\n  isAuthenticated: boolean;\n}> {\n  try {\n    const authHeader = request.headers.get('authorization');\n    const authResult = await verifyAuthHeader(authHeader);\n\n    return {\n      user: authResult.user,\n      isAuthenticated: authResult.success\n    };\n  } catch (error) {\n    return {\n      user: null,\n      isAuthenticated: false\n    };\n  }\n}\n\n/**\n * Role-based authentication middleware\n */\nexport async function nextRoleMiddleware(\n  request: NextRequest,\n  requiredRoles: string[]\n): Promise<AuthMiddlewareResult<NextResponse>> {\n  return nextAuthMiddleware(request, { requiredRoles });\n}\n\n/**\n * Admin-only middleware\n */\nexport async function nextAdminMiddleware(\n  request: NextRequest\n): Promise<AuthMiddlewareResult<NextResponse>> {\n  return nextAuthMiddleware(request, { requiredRoles: ['admin'] });\n}\n\n// ===== HIGHER-ORDER FUNCTIONS =====\n\n/**\n * Higher-order function to create authenticated API handlers\n */\nexport function withNextAuth<T extends any[]>(\n  handler: (request: NextRequest, user: AuthenticatedUser, ...args: T) => Promise<NextResponse>,\n  options: AuthMiddlewareOptions = {}\n) {\n  return async (request: NextRequest, ...args: T): Promise<NextResponse> => {\n    if (options.skipAuth) {\n      return await handler(request, null as any, ...args);\n    }\n\n    const authResult = await nextAuthMiddleware(request, options);\n\n    if (!authResult.success || !authResult.user) {\n      return authResult.response!;\n    }\n\n    // Call the actual handler with the authenticated user\n    return await handler(request, authResult.user, ...args);\n  };\n}\n\n/**\n * Admin-only handler wrapper\n */\nexport function withNextAdminAuth<T extends any[]>(\n  handler: (request: NextRequest, user: AuthenticatedUser, ...args: T) => Promise<NextResponse>\n) {\n  return withNextAuth(handler, { requiredRoles: ['admin'] });\n}\n\n/**\n * Role-based handler wrapper\n */\nexport function withNextRoleAuth<T extends any[]>(\n  handler: (request: NextRequest, user: AuthenticatedUser, ...args: T) => Promise<NextResponse>,\n  requiredRoles: string[]\n) {\n  return withNextAuth(handler, { requiredRoles });\n}\n\n// ===== UTILITY FUNCTIONS =====\n\n/**\n * Create standardized error response for Next.js\n */\nfunction createErrorResponse(error: UnifiedAuthError): NextResponse {\n  return NextResponse.json(\n    {\n      error: error.message,\n      code: error.code,\n      details: error.details\n    },\n    { \n      status: error.statusCode || 500,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }\n  );\n}\n\n/**\n * Create health check response\n */\nexport function createNextHealthResponse(): NextResponse {\n  return NextResponse.json(\n    {\n      status: 'healthy',\n      timestamp: new Date().toISOString(),\n      service: 'Next.js Unified Auth Middleware'\n    },\n    { status: 200 }\n  );\n}\n\n/**\n * Get user from session cookie (for server components)\n */\nexport async function getUserFromSessionCookie(sessionCookie: string): Promise<AuthenticatedUser | null> {\n  try {\n    const auth = getUnifiedAuth();\n    const result = await auth.verifySessionCookie(sessionCookie);\n    \n    return result.valid ? result.user || null : null;\n  } catch (error) {\n    console.error('Session cookie verification failed:', error);\n    return null;\n  }\n}\n\n/**\n * Extract user from Next.js request context\n */\nexport async function extractUserFromRequest(request: NextRequest): Promise<AuthenticatedUser | null> {\n  try {\n    // Try Authorization header first\n    const authHeader = request.headers.get('authorization');\n    if (authHeader) {\n      const authResult = await verifyAuthHeader(authHeader);\n      if (authResult.success && authResult.user) {\n        return authResult.user;\n      }\n    }\n\n    // Try session cookie as fallback\n    const sessionCookie = request.cookies.get('session')?.value;\n    if (sessionCookie) {\n      return await getUserFromSessionCookie(sessionCookie);\n    }\n\n    return null;\n  } catch (error) {\n    console.error('Failed to extract user from request:', error);\n    return null;\n  }\n}\n\n// ===== PERFORMANCE HELPERS =====\n\n/**\n * Benchmark authentication performance\n */\nexport async function benchmarkNextAuth(\n  request: NextRequest,\n  iterations: number = 100\n): Promise<Record<string, any>> {\n  const monitor = AuthPerformanceMonitor.getInstance();\n  const results: number[] = [];\n\n  for (let i = 0; i < iterations; i++) {\n    const endTiming = monitor.startTiming('benchmark');\n    await nextAuthMiddleware(request);\n    const duration = endTiming();\n    results.push(duration);\n  }\n\n  const sorted = results.sort((a, b) => a - b);\n  const sum = results.reduce((a, b) => a + b, 0);\n\n  return {\n    iterations,\n    average: sum / iterations,\n    median: sorted[Math.floor(sorted.length / 2)],\n    p95: sorted[Math.floor(sorted.length * 0.95)],\n    p99: sorted[Math.floor(sorted.length * 0.99)],\n    min: sorted[0],\n    max: sorted[sorted.length - 1]\n  };\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "3dec2afb3e62248f7797e5f82cbf90cfd951632a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_q2zukk598 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_q2zukk598();
cov_q2zukk598().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_q2zukk598().s[1]++;
exports.nextAuthMiddleware = nextAuthMiddleware;
/* istanbul ignore next */
cov_q2zukk598().s[2]++;
exports.nextOptionalAuth = nextOptionalAuth;
/* istanbul ignore next */
cov_q2zukk598().s[3]++;
exports.nextRoleMiddleware = nextRoleMiddleware;
/* istanbul ignore next */
cov_q2zukk598().s[4]++;
exports.nextAdminMiddleware = nextAdminMiddleware;
/* istanbul ignore next */
cov_q2zukk598().s[5]++;
exports.withNextAuth = withNextAuth;
/* istanbul ignore next */
cov_q2zukk598().s[6]++;
exports.withNextAdminAuth = withNextAdminAuth;
/* istanbul ignore next */
cov_q2zukk598().s[7]++;
exports.withNextRoleAuth = withNextRoleAuth;
/* istanbul ignore next */
cov_q2zukk598().s[8]++;
exports.createNextHealthResponse = createNextHealthResponse;
/* istanbul ignore next */
cov_q2zukk598().s[9]++;
exports.getUserFromSessionCookie = getUserFromSessionCookie;
/* istanbul ignore next */
cov_q2zukk598().s[10]++;
exports.extractUserFromRequest = extractUserFromRequest;
/* istanbul ignore next */
cov_q2zukk598().s[11]++;
exports.benchmarkNextAuth = benchmarkNextAuth;
const server_1 =
/* istanbul ignore next */
(cov_q2zukk598().s[12]++, require("next/server"));
const core_1 =
/* istanbul ignore next */
(cov_q2zukk598().s[13]++, require("../core"));
const types_1 =
/* istanbul ignore next */
(cov_q2zukk598().s[14]++, require("../types"));
// ===== NEXT.JS MIDDLEWARE FUNCTIONS =====
/**
 * Core authentication middleware for Next.js API routes
 */
async function nextAuthMiddleware(request, options =
/* istanbul ignore next */
(cov_q2zukk598().b[0][0]++, {})) {
  /* istanbul ignore next */
  cov_q2zukk598().f[0]++;
  var _a;
  const monitor =
  /* istanbul ignore next */
  (cov_q2zukk598().s[15]++, core_1.AuthPerformanceMonitor.getInstance());
  const endTiming =
  /* istanbul ignore next */
  (cov_q2zukk598().s[16]++, monitor.startTiming('next-auth-middleware'));
  /* istanbul ignore next */
  cov_q2zukk598().s[17]++;
  try {
    const authHeader =
    /* istanbul ignore next */
    (cov_q2zukk598().s[18]++, request.headers.get('authorization'));
    const authResult =
    /* istanbul ignore next */
    (cov_q2zukk598().s[19]++, await (0, core_1.verifyAuthHeader)(authHeader));
    /* istanbul ignore next */
    cov_q2zukk598().s[20]++;
    if (
    /* istanbul ignore next */
    (cov_q2zukk598().b[2][0]++, !authResult.success) ||
    /* istanbul ignore next */
    (cov_q2zukk598().b[2][1]++, !authResult.user)) {
      /* istanbul ignore next */
      cov_q2zukk598().b[1][0]++;
      const error =
      /* istanbul ignore next */
      (cov_q2zukk598().s[21]++, new core_1.UnifiedAuthError(
      /* istanbul ignore next */
      (cov_q2zukk598().b[3][0]++, authResult.errorCode) ||
      /* istanbul ignore next */
      (cov_q2zukk598().b[3][1]++, types_1.AuthErrorCode.INVALID_TOKEN),
      /* istanbul ignore next */
      (cov_q2zukk598().b[4][0]++, authResult.error) ||
      /* istanbul ignore next */
      (cov_q2zukk598().b[4][1]++, 'Authentication failed')));
      /* istanbul ignore next */
      cov_q2zukk598().s[22]++;
      return {
        success: false,
        user: null,
        response: createErrorResponse(error),
        error: error.message,
        errorCode: error.code
      };
    } else
    /* istanbul ignore next */
    {
      cov_q2zukk598().b[1][1]++;
    }
    // Check roles if required
    cov_q2zukk598().s[23]++;
    if (
    /* istanbul ignore next */
    (cov_q2zukk598().b[7][0]++, (_a = options.requiredRoles) === null) ||
    /* istanbul ignore next */
    (cov_q2zukk598().b[7][1]++, _a === void 0) ?
    /* istanbul ignore next */
    (cov_q2zukk598().b[6][0]++, void 0) :
    /* istanbul ignore next */
    (cov_q2zukk598().b[6][1]++, _a.length)) {
      /* istanbul ignore next */
      cov_q2zukk598().b[5][0]++;
      const auth =
      /* istanbul ignore next */
      (cov_q2zukk598().s[24]++, (0, core_1.getUnifiedAuth)());
      /* istanbul ignore next */
      cov_q2zukk598().s[25]++;
      if (!auth.hasRequiredRoles(authResult.user, options.requiredRoles)) {
        /* istanbul ignore next */
        cov_q2zukk598().b[8][0]++;
        const error =
        /* istanbul ignore next */
        (cov_q2zukk598().s[26]++, core_1.UnifiedAuthError.insufficientPermissions(options.requiredRoles));
        /* istanbul ignore next */
        cov_q2zukk598().s[27]++;
        return {
          success: false,
          user: null,
          response: createErrorResponse(error),
          error: error.message,
          errorCode: error.code
        };
      } else
      /* istanbul ignore next */
      {
        cov_q2zukk598().b[8][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_q2zukk598().b[5][1]++;
    }
    // Custom validation
    cov_q2zukk598().s[28]++;
    if (options.customValidator) {
      /* istanbul ignore next */
      cov_q2zukk598().b[9][0]++;
      const isValid =
      /* istanbul ignore next */
      (cov_q2zukk598().s[29]++, await options.customValidator(authResult.user));
      /* istanbul ignore next */
      cov_q2zukk598().s[30]++;
      if (!isValid) {
        /* istanbul ignore next */
        cov_q2zukk598().b[10][0]++;
        const error =
        /* istanbul ignore next */
        (cov_q2zukk598().s[31]++, new core_1.UnifiedAuthError(types_1.AuthErrorCode.INSUFFICIENT_PERMISSIONS, 'Custom validation failed'));
        /* istanbul ignore next */
        cov_q2zukk598().s[32]++;
        return {
          success: false,
          user: null,
          response: createErrorResponse(error),
          error: error.message,
          errorCode: error.code
        };
      } else
      /* istanbul ignore next */
      {
        cov_q2zukk598().b[10][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_q2zukk598().b[9][1]++;
    }
    cov_q2zukk598().s[33]++;
    endTiming();
    /* istanbul ignore next */
    cov_q2zukk598().s[34]++;
    return {
      success: true,
      user: authResult.user
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_q2zukk598().s[35]++;
    endTiming();
    /* istanbul ignore next */
    cov_q2zukk598().s[36]++;
    console.error('Next.js auth middleware error:', error);
    const authError =
    /* istanbul ignore next */
    (cov_q2zukk598().s[37]++, error instanceof core_1.UnifiedAuthError ?
    /* istanbul ignore next */
    (cov_q2zukk598().b[11][0]++, error) :
    /* istanbul ignore next */
    (cov_q2zukk598().b[11][1]++, new core_1.UnifiedAuthError(types_1.AuthErrorCode.UNKNOWN_ERROR, 'Authentication system error')));
    /* istanbul ignore next */
    cov_q2zukk598().s[38]++;
    return {
      success: false,
      user: null,
      response: createErrorResponse(authError),
      error: authError.message,
      errorCode: authError.code
    };
  }
}
/**
 * Optional authentication middleware (allows anonymous users)
 */
async function nextOptionalAuth(request) {
  /* istanbul ignore next */
  cov_q2zukk598().f[1]++;
  cov_q2zukk598().s[39]++;
  try {
    const authHeader =
    /* istanbul ignore next */
    (cov_q2zukk598().s[40]++, request.headers.get('authorization'));
    const authResult =
    /* istanbul ignore next */
    (cov_q2zukk598().s[41]++, await (0, core_1.verifyAuthHeader)(authHeader));
    /* istanbul ignore next */
    cov_q2zukk598().s[42]++;
    return {
      user: authResult.user,
      isAuthenticated: authResult.success
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_q2zukk598().s[43]++;
    return {
      user: null,
      isAuthenticated: false
    };
  }
}
/**
 * Role-based authentication middleware
 */
async function nextRoleMiddleware(request, requiredRoles) {
  /* istanbul ignore next */
  cov_q2zukk598().f[2]++;
  cov_q2zukk598().s[44]++;
  return nextAuthMiddleware(request, {
    requiredRoles
  });
}
/**
 * Admin-only middleware
 */
async function nextAdminMiddleware(request) {
  /* istanbul ignore next */
  cov_q2zukk598().f[3]++;
  cov_q2zukk598().s[45]++;
  return nextAuthMiddleware(request, {
    requiredRoles: ['admin']
  });
}
// ===== HIGHER-ORDER FUNCTIONS =====
/**
 * Higher-order function to create authenticated API handlers
 */
function withNextAuth(handler, options =
/* istanbul ignore next */
(cov_q2zukk598().b[12][0]++, {})) {
  /* istanbul ignore next */
  cov_q2zukk598().f[4]++;
  cov_q2zukk598().s[46]++;
  return async (request, ...args) => {
    /* istanbul ignore next */
    cov_q2zukk598().f[5]++;
    cov_q2zukk598().s[47]++;
    if (options.skipAuth) {
      /* istanbul ignore next */
      cov_q2zukk598().b[13][0]++;
      cov_q2zukk598().s[48]++;
      return await handler(request, null, ...args);
    } else
    /* istanbul ignore next */
    {
      cov_q2zukk598().b[13][1]++;
    }
    const authResult =
    /* istanbul ignore next */
    (cov_q2zukk598().s[49]++, await nextAuthMiddleware(request, options));
    /* istanbul ignore next */
    cov_q2zukk598().s[50]++;
    if (
    /* istanbul ignore next */
    (cov_q2zukk598().b[15][0]++, !authResult.success) ||
    /* istanbul ignore next */
    (cov_q2zukk598().b[15][1]++, !authResult.user)) {
      /* istanbul ignore next */
      cov_q2zukk598().b[14][0]++;
      cov_q2zukk598().s[51]++;
      return authResult.response;
    } else
    /* istanbul ignore next */
    {
      cov_q2zukk598().b[14][1]++;
    }
    // Call the actual handler with the authenticated user
    cov_q2zukk598().s[52]++;
    return await handler(request, authResult.user, ...args);
  };
}
/**
 * Admin-only handler wrapper
 */
function withNextAdminAuth(handler) {
  /* istanbul ignore next */
  cov_q2zukk598().f[6]++;
  cov_q2zukk598().s[53]++;
  return withNextAuth(handler, {
    requiredRoles: ['admin']
  });
}
/**
 * Role-based handler wrapper
 */
function withNextRoleAuth(handler, requiredRoles) {
  /* istanbul ignore next */
  cov_q2zukk598().f[7]++;
  cov_q2zukk598().s[54]++;
  return withNextAuth(handler, {
    requiredRoles
  });
}
// ===== UTILITY FUNCTIONS =====
/**
 * Create standardized error response for Next.js
 */
function createErrorResponse(error) {
  /* istanbul ignore next */
  cov_q2zukk598().f[8]++;
  cov_q2zukk598().s[55]++;
  return server_1.NextResponse.json({
    error: error.message,
    code: error.code,
    details: error.details
  }, {
    status:
    /* istanbul ignore next */
    (cov_q2zukk598().b[16][0]++, error.statusCode) ||
    /* istanbul ignore next */
    (cov_q2zukk598().b[16][1]++, 500),
    headers: {
      'Content-Type': 'application/json'
    }
  });
}
/**
 * Create health check response
 */
function createNextHealthResponse() {
  /* istanbul ignore next */
  cov_q2zukk598().f[9]++;
  cov_q2zukk598().s[56]++;
  return server_1.NextResponse.json({
    status: 'healthy',
    timestamp: new Date().toISOString(),
    service: 'Next.js Unified Auth Middleware'
  }, {
    status: 200
  });
}
/**
 * Get user from session cookie (for server components)
 */
async function getUserFromSessionCookie(sessionCookie) {
  /* istanbul ignore next */
  cov_q2zukk598().f[10]++;
  cov_q2zukk598().s[57]++;
  try {
    const auth =
    /* istanbul ignore next */
    (cov_q2zukk598().s[58]++, (0, core_1.getUnifiedAuth)());
    const result =
    /* istanbul ignore next */
    (cov_q2zukk598().s[59]++, await auth.verifySessionCookie(sessionCookie));
    /* istanbul ignore next */
    cov_q2zukk598().s[60]++;
    return result.valid ?
    /* istanbul ignore next */
    (cov_q2zukk598().b[17][0]++,
    /* istanbul ignore next */
    (cov_q2zukk598().b[18][0]++, result.user) ||
    /* istanbul ignore next */
    (cov_q2zukk598().b[18][1]++, null)) :
    /* istanbul ignore next */
    (cov_q2zukk598().b[17][1]++, null);
  } catch (error) {
    /* istanbul ignore next */
    cov_q2zukk598().s[61]++;
    console.error('Session cookie verification failed:', error);
    /* istanbul ignore next */
    cov_q2zukk598().s[62]++;
    return null;
  }
}
/**
 * Extract user from Next.js request context
 */
async function extractUserFromRequest(request) {
  /* istanbul ignore next */
  cov_q2zukk598().f[11]++;
  var _a;
  /* istanbul ignore next */
  cov_q2zukk598().s[63]++;
  try {
    // Try Authorization header first
    const authHeader =
    /* istanbul ignore next */
    (cov_q2zukk598().s[64]++, request.headers.get('authorization'));
    /* istanbul ignore next */
    cov_q2zukk598().s[65]++;
    if (authHeader) {
      /* istanbul ignore next */
      cov_q2zukk598().b[19][0]++;
      const authResult =
      /* istanbul ignore next */
      (cov_q2zukk598().s[66]++, await (0, core_1.verifyAuthHeader)(authHeader));
      /* istanbul ignore next */
      cov_q2zukk598().s[67]++;
      if (
      /* istanbul ignore next */
      (cov_q2zukk598().b[21][0]++, authResult.success) &&
      /* istanbul ignore next */
      (cov_q2zukk598().b[21][1]++, authResult.user)) {
        /* istanbul ignore next */
        cov_q2zukk598().b[20][0]++;
        cov_q2zukk598().s[68]++;
        return authResult.user;
      } else
      /* istanbul ignore next */
      {
        cov_q2zukk598().b[20][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_q2zukk598().b[19][1]++;
    }
    // Try session cookie as fallback
    const sessionCookie =
    /* istanbul ignore next */
    (cov_q2zukk598().s[69]++,
    /* istanbul ignore next */
    (cov_q2zukk598().b[23][0]++, (_a = request.cookies.get('session')) === null) ||
    /* istanbul ignore next */
    (cov_q2zukk598().b[23][1]++, _a === void 0) ?
    /* istanbul ignore next */
    (cov_q2zukk598().b[22][0]++, void 0) :
    /* istanbul ignore next */
    (cov_q2zukk598().b[22][1]++, _a.value));
    /* istanbul ignore next */
    cov_q2zukk598().s[70]++;
    if (sessionCookie) {
      /* istanbul ignore next */
      cov_q2zukk598().b[24][0]++;
      cov_q2zukk598().s[71]++;
      return await getUserFromSessionCookie(sessionCookie);
    } else
    /* istanbul ignore next */
    {
      cov_q2zukk598().b[24][1]++;
    }
    cov_q2zukk598().s[72]++;
    return null;
  } catch (error) {
    /* istanbul ignore next */
    cov_q2zukk598().s[73]++;
    console.error('Failed to extract user from request:', error);
    /* istanbul ignore next */
    cov_q2zukk598().s[74]++;
    return null;
  }
}
// ===== PERFORMANCE HELPERS =====
/**
 * Benchmark authentication performance
 */
async function benchmarkNextAuth(request, iterations =
/* istanbul ignore next */
(cov_q2zukk598().b[25][0]++, 100)) {
  /* istanbul ignore next */
  cov_q2zukk598().f[12]++;
  const monitor =
  /* istanbul ignore next */
  (cov_q2zukk598().s[75]++, core_1.AuthPerformanceMonitor.getInstance());
  const results =
  /* istanbul ignore next */
  (cov_q2zukk598().s[76]++, []);
  /* istanbul ignore next */
  cov_q2zukk598().s[77]++;
  for (let i =
  /* istanbul ignore next */
  (cov_q2zukk598().s[78]++, 0); i < iterations; i++) {
    const endTiming =
    /* istanbul ignore next */
    (cov_q2zukk598().s[79]++, monitor.startTiming('benchmark'));
    /* istanbul ignore next */
    cov_q2zukk598().s[80]++;
    await nextAuthMiddleware(request);
    const duration =
    /* istanbul ignore next */
    (cov_q2zukk598().s[81]++, endTiming());
    /* istanbul ignore next */
    cov_q2zukk598().s[82]++;
    results.push(duration);
  }
  const sorted =
  /* istanbul ignore next */
  (cov_q2zukk598().s[83]++, results.sort((a, b) => {
    /* istanbul ignore next */
    cov_q2zukk598().f[13]++;
    cov_q2zukk598().s[84]++;
    return a - b;
  }));
  const sum =
  /* istanbul ignore next */
  (cov_q2zukk598().s[85]++, results.reduce((a, b) => {
    /* istanbul ignore next */
    cov_q2zukk598().f[14]++;
    cov_q2zukk598().s[86]++;
    return a + b;
  }, 0));
  /* istanbul ignore next */
  cov_q2zukk598().s[87]++;
  return {
    iterations,
    average: sum / iterations,
    median: sorted[Math.floor(sorted.length / 2)],
    p95: sorted[Math.floor(sorted.length * 0.95)],
    p99: sorted[Math.floor(sorted.length * 0.99)],
    min: sorted[0],
    max: sorted[sorted.length - 1]
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,