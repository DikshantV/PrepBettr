{"version":3,"names":["cov_51eclg1su","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","mail_1","__importDefault","require","SendGridService","constructor","isInitialized","defaultFromEmail","process","env","SENDGRID_FROM_EMAIL","initializeSendGrid","apiKey","SENDGRID_API_KEY","console","warn","default","setApiKey","log","error","sendEmail","params","success","to","subject","html","text","from","templateId","dynamicTemplateData","categories","customArgs","recipients","Array","isArray","emailRegex","invalidEmails","filter","email","test","length","join","mailData","Object","assign","response","send","statusCode","messageId","headers","_a","toString","errorMessage","body","JSON","stringify","_c","_b","errors","message","sendBulkEmail","results","sent","failed","batchSize","batches","i","push","slice","batch","emailParams","result","Error","verifyEmailAddress","NODE_ENV","testConnection","testResult","includes","sendTemplatedEmail","getStats","stats","service","initialized","exports","sendGridService","awsSESService"],"sources":["/Users/dikshantvashistha/PrepBettr/lib/services/sendgrid-service.ts"],"sourcesContent":["// lib/services/sendgrid-service.ts\n\nimport sgMail from '@sendgrid/mail';\nimport { MailDataRequired } from '@sendgrid/helpers/classes/mail';\n\nexport interface EmailParams {\n  to: string | string[];\n  subject: string;\n  html?: string;\n  text?: string;\n  from?: string;\n  templateId?: string;\n  dynamicTemplateData?: Record<string, any>;\n  categories?: string[];\n  customArgs?: Record<string, string>;\n}\n\nexport class SendGridService {\n  private defaultFromEmail: string;\n  private isInitialized: boolean = false;\n\n  constructor() {\n    this.defaultFromEmail = process.env.SENDGRID_FROM_EMAIL || 'contact@prepbettr.com';\n    this.initializeSendGrid();\n  }\n\n  private initializeSendGrid() {\n    const apiKey = process.env.SENDGRID_API_KEY;\n    \n    if (!apiKey) {\n      console.warn('SENDGRID_API_KEY not found. Email functionality will be limited.');\n      return;\n    }\n\n    try {\n      sgMail.setApiKey(apiKey);\n      this.isInitialized = true;\n      console.log('SendGrid service initialized successfully');\n    } catch (error) {\n      console.error('Failed to initialize SendGrid:', error);\n    }\n  }\n\n  /**\n   * Send a single email using SendGrid\n   */\n  async sendEmail(params: EmailParams): Promise<{ success: boolean; messageId?: string; error?: string }> {\n    if (!this.isInitialized) {\n      return {\n        success: false,\n        error: 'SendGrid service not initialized. Check SENDGRID_API_KEY.'\n      };\n    }\n\n    try {\n      const { to, subject, html, text, from, templateId, dynamicTemplateData, categories, customArgs } = params;\n\n      // Ensure we have either HTML/text content or a template\n      if (!html && !text && !templateId) {\n        return {\n          success: false,\n          error: 'Either HTML/text content or templateId must be provided'\n        };\n      }\n\n      // Convert single recipient to array for consistent handling\n      const recipients = Array.isArray(to) ? to : [to];\n\n      // Validate email addresses\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      const invalidEmails = recipients.filter(email => !emailRegex.test(email));\n      if (invalidEmails.length > 0) {\n        return {\n          success: false,\n          error: `Invalid email addresses: ${invalidEmails.join(', ')}`\n        };\n      }\n\n      // Build email data\n      const mailData: MailDataRequired = {\n        from: from || this.defaultFromEmail,\n        to: recipients,\n        subject: subject,\n        ...(categories && { categories }),\n        ...(customArgs && { customArgs }),\n      };\n\n      // Add content based on what's provided\n      if (templateId) {\n        mailData.templateId = templateId;\n        if (dynamicTemplateData) {\n          mailData.dynamicTemplateData = dynamicTemplateData;\n        }\n      } else {\n        if (html) {\n          mailData.html = html;\n        }\n        if (text) {\n          mailData.text = text;\n        }\n      }\n\n      const [response] = await sgMail.send(mailData);\n\n      console.log(`Email sent successfully via SendGrid to ${recipients.join(', ')}. Status: ${response.statusCode}`);\n\n      return {\n        success: true,\n        messageId: response.headers['x-message-id'] || response.statusCode?.toString(),\n      };\n\n    } catch (error: any) {\n      console.error('Error sending email via SendGrid:', error);\n      \n      let errorMessage = 'Failed to send email';\n      \n      // Handle SendGrid specific errors\n      if (error.response) {\n        const { statusCode, body } = error.response;\n        errorMessage = `SendGrid API error (${statusCode}): ${JSON.stringify(body)}`;\n        \n        // Handle specific error codes\n        switch (statusCode) {\n          case 400:\n            errorMessage = 'Bad request - check email parameters';\n            break;\n          case 401:\n            errorMessage = 'Unauthorized - check SendGrid API key';\n            break;\n          case 403:\n            errorMessage = 'Forbidden - insufficient permissions';\n            break;\n          case 413:\n            errorMessage = 'Email content too large';\n            break;\n          case 429:\n            errorMessage = 'Rate limit exceeded';\n            break;\n          default:\n            errorMessage = `SendGrid error: ${body?.errors?.[0]?.message || 'Unknown error'}`;\n        }\n      } else if (error.message) {\n        errorMessage = error.message;\n      }\n\n      return {\n        success: false,\n        error: errorMessage,\n      };\n    }\n  }\n\n  /**\n   * Send bulk emails (SendGrid supports up to 1000 personalizations per request)\n   */\n  async sendBulkEmail(\n    recipients: string[],\n    subject: string,\n    html?: string,\n    text?: string,\n    from?: string,\n    templateId?: string,\n    dynamicTemplateData?: Record<string, any>\n  ): Promise<{ success: boolean; sent: number; failed: string[]; errors: string[] }> {\n    const results = {\n      success: true,\n      sent: 0,\n      failed: [] as string[],\n      errors: [] as string[],\n    };\n\n    // SendGrid allows up to 1000 personalizations per request\n    const batchSize = 1000;\n    const batches = [];\n\n    for (let i = 0; i < recipients.length; i += batchSize) {\n      batches.push(recipients.slice(i, i + batchSize));\n    }\n\n    for (const batch of batches) {\n      try {\n        const emailParams: EmailParams = {\n          to: batch,\n          subject,\n          html,\n          text,\n          from,\n          templateId,\n          dynamicTemplateData\n        };\n\n        const result = await this.sendEmail(emailParams);\n\n        if (result.success) {\n          results.sent += batch.length;\n        } else {\n          results.failed.push(...batch);\n          results.errors.push(result.error || 'Unknown error');\n          results.success = false;\n        }\n      } catch (error) {\n        results.failed.push(...batch);\n        results.errors.push(error instanceof Error ? error.message : 'Unknown error');\n        results.success = false;\n      }\n    }\n\n    return results;\n  }\n\n  /**\n   * Verify an email address with SendGrid (for sender verification)\n   * Note: SendGrid handles verification differently than SES\n   */\n  async verifyEmailAddress(email: string): Promise<{ success: boolean; error?: string }> {\n    try {\n      // SendGrid doesn't require email verification in the same way as SES\n      // This is handled through sender authentication and domain verification\n      console.log(`Email verification requested for ${email}. Ensure sender authentication is configured in SendGrid.`);\n      \n      // For development/testing, we can simulate verification\n      if (process.env.NODE_ENV === 'development') {\n        console.log(`Simulated verification success for ${email} in development mode`);\n        return { success: true };\n      }\n\n      // In production, sender verification should be handled via SendGrid dashboard\n      return { \n        success: true,\n        error: 'Sender verification should be configured in SendGrid dashboard'\n      };\n    } catch (error) {\n      console.error('Error with email verification:', error);\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Failed to verify email address',\n      };\n    }\n  }\n\n  /**\n   * Check if SendGrid is properly configured\n   */\n  async testConnection(): Promise<{ success: boolean; error?: string }> {\n    if (!this.isInitialized) {\n      return {\n        success: false,\n        error: 'SendGrid service not initialized. Check SENDGRID_API_KEY.'\n      };\n    }\n\n    try {\n      // Test connection by attempting to send a test email to a test address\n      // In a real implementation, you might want to use SendGrid's API to check account status\n      const testResult = await this.sendEmail({\n        to: 'test@example.com',\n        subject: 'SendGrid Connection Test',\n        text: 'This is a connection test. This email should not be delivered.',\n        html: '<p>This is a connection test. This email should not be delivered.</p>'\n      });\n\n      // Even if the test email \"fails\" due to invalid recipient, \n      // a successful API response indicates the connection is working\n      if (testResult.error && testResult.error.includes('Invalid email')) {\n        console.log('SendGrid connection test successful (invalid test email expected)');\n        return { success: true };\n      }\n\n      console.log('SendGrid connection test result:', testResult);\n      \n      return { \n        success: true,\n        error: testResult.error \n      };\n    } catch (error) {\n      console.error('SendGrid connection test failed:', error);\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Connection test failed',\n      };\n    }\n  }\n\n  /**\n   * Send email using SendGrid template\n   */\n  async sendTemplatedEmail(\n    to: string | string[],\n    templateId: string,\n    dynamicTemplateData: Record<string, any>,\n    from?: string,\n    categories?: string[],\n    customArgs?: Record<string, string>\n  ): Promise<{ success: boolean; messageId?: string; error?: string }> {\n    return this.sendEmail({\n      to,\n      subject: '', // Subject is defined in the template\n      templateId,\n      dynamicTemplateData,\n      from,\n      categories,\n      customArgs\n    });\n  }\n\n  /**\n   * Get service statistics (placeholder - SendGrid stats require separate API calls)\n   */\n  async getStats(): Promise<{ success: boolean; stats?: any; error?: string }> {\n    try {\n      // This would require additional SendGrid API calls to get statistics\n      // For now, return success without detailed stats\n      console.log('SendGrid statistics require separate API implementation');\n      \n      return {\n        success: true,\n        stats: {\n          service: 'SendGrid',\n          initialized: this.isInitialized,\n          message: 'Statistics available through SendGrid dashboard'\n        }\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Failed to get stats'\n      };\n    }\n  }\n}\n\n// Export singleton instance\nexport const sendGridService = new SendGridService();\n\n// Export with the same name as the old AWS SES service for easy replacement\nexport const awsSESService = sendGridService;"],"mappings":"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","ignoreList":[]}