{"version":3,"names":["cov_2l0jd7vr92","actualCoverage","MOCK_USERS","s","uid","email","displayName","emailVerified","photoURL","currentMockUser","mockAuthListeners","mockAuth","currentUser","signInWithPopup","auth","provider","f","console","log","Promise","resolve","setTimeout","mockUser","Math","floor","random","length","forEach","listener","user","credential","accessToken","idToken","generateMockJWT","signOut","onAuthStateChanged","callback","push","filter","getIdToken","forceRefresh","b","mockGoogleProvider","setCustomParameters","params","addScope","scope","Error","header","alg","kid","typ","now","Date","payload","iss","aud","auth_time","user_id","sub","iat","exp","email_verified","name","picture","firebase","identities","sign_in_provider","encodedHeader","btoa","JSON","stringify","replace","m","encodedPayload","mockSignature","toString","substring","jwt","expires","toISOString","tokenPreview","shouldUseMockAuth","hasRealFirebaseConfig","process","env","NEXT_PUBLIC_FIREBASE_API_KEY","NEXT_PUBLIC_FIREBASE_CLIENT_KEY","isDevelopment","NODE_ENV","forceMock","NEXT_PUBLIC_USE_MOCK_AUTH","getMockFirebaseServices","googleProvider","isFirebaseReady","initializeFirebaseAsync","mockAuthSession","setSession","token","fetch","method","headers","body","mock","error","clearSession"],"sources":["mock-auth.js"],"sourcesContent":["/**\n * Mock Authentication Service\n * \n * Provides a fallback authentication system when Firebase is not properly configured\n * This allows development to continue without proper Firebase credentials\n */\n\n// Mock user data\nconst MOCK_USERS = [\n  {\n    uid: 'mock-user-1',\n    email: 'demo@prepbettr.com',\n    displayName: 'Demo User',\n    emailVerified: true,\n    photoURL: 'https://via.placeholder.com/150/2563eb/ffffff?text=DU'\n  },\n  {\n    uid: 'mock-user-2', \n    email: 'test@prepbettr.com',\n    displayName: 'Test User',\n    emailVerified: true,\n    photoURL: 'https://via.placeholder.com/150/059669/ffffff?text=TU'\n  }\n];\n\n// Current mock user session\nlet currentMockUser = null;\nlet mockAuthListeners = [];\n\n/**\n * Mock Firebase Auth Methods\n */\nexport const mockAuth = {\n  currentUser: null,\n  \n  // Mock sign in with popup (Google)\n  signInWithPopup: async (auth, provider) => {\n    console.log('ðŸ”’ Mock: Simulating Google sign-in...');\n    \n    // Simulate loading delay\n    await new Promise(resolve => setTimeout(resolve, 1500));\n    \n    // Select a random mock user\n    const mockUser = MOCK_USERS[Math.floor(Math.random() * MOCK_USERS.length)];\n    currentMockUser = mockUser;\n    mockAuth.currentUser = mockUser;\n    \n    console.log('ðŸ”’ Mock: Sign-in successful', mockUser);\n    \n    // Notify listeners\n    mockAuthListeners.forEach(listener => listener(mockUser));\n    \n    return {\n      user: mockUser,\n      credential: {\n        accessToken: 'mock-access-token',\n        idToken: generateMockJWT(mockUser)\n      }\n    };\n  },\n  \n  // Mock sign out\n  signOut: async () => {\n    console.log('ðŸ”’ Mock: Signing out...');\n    currentMockUser = null;\n    mockAuth.currentUser = null;\n    \n    // Notify listeners\n    mockAuthListeners.forEach(listener => listener(null));\n  },\n  \n  // Mock auth state listener\n  onAuthStateChanged: (callback) => {\n    console.log('ðŸ”’ Mock: Auth state listener registered');\n    mockAuthListeners.push(callback);\n    \n    // Immediately call with current user\n    callback(currentMockUser);\n    \n    // Return unsubscribe function\n    return () => {\n      mockAuthListeners = mockAuthListeners.filter(listener => listener !== callback);\n    };\n  },\n  \n  // Mock get ID token\n  getIdToken: async (user, forceRefresh = false) => {\n    console.log('ðŸ”’ Mock: Getting ID token', { forceRefresh });\n    return generateMockJWT(user || currentMockUser);\n  }\n};\n\n/**\n * Mock Google Auth Provider\n */\nexport const mockGoogleProvider = {\n  setCustomParameters: (params) => {\n    console.log('ðŸ”’ Mock: Google provider custom parameters set', params);\n  },\n  addScope: (scope) => {\n    console.log('ðŸ”’ Mock: Google provider scope added', scope);\n  }\n};\n\n/**\n * Generate a mock JWT token for testing\n */\nfunction generateMockJWT(user) {\n  if (!user) {\n    throw new Error('No user provided for JWT generation');\n  }\n  \n  const header = {\n    alg: 'RS256',\n    kid: 'mock-key-id',\n    typ: 'JWT'\n  };\n  \n  const now = Math.floor(Date.now() / 1000);\n  const payload = {\n    iss: 'https://securetoken.google.com/prepbettr',\n    aud: 'prepbettr',\n    auth_time: now - 60,\n    user_id: user.uid,\n    uid: user.uid,\n    sub: user.uid,\n    iat: now,\n    exp: now + (60 * 60), // 1 hour\n    email: user.email,\n    email_verified: user.emailVerified,\n    name: user.displayName,\n    picture: user.photoURL,\n    firebase: {\n      identities: {\n        'google.com': [user.uid],\n        email: [user.email]\n      },\n      sign_in_provider: 'google.com'\n    }\n  };\n  \n  // Create a mock JWT (base64url encoded header.payload.signature)\n  const encodedHeader = btoa(JSON.stringify(header)).replace(/[+\\/=]/g, (m) => ({ '+': '-', '/': '_', '=': '' })[m]);\n  const encodedPayload = btoa(JSON.stringify(payload)).replace(/[+\\/=]/g, (m) => ({ '+': '-', '/': '_', '=': '' })[m]);\n  const mockSignature = 'mock-signature-' + Math.random().toString(36).substring(2, 15);\n  \n  const jwt = `${encodedHeader}.${encodedPayload}.${mockSignature}`;\n  console.log('ðŸ”’ Mock: Generated JWT token', { \n    user: user.email, \n    expires: new Date(payload.exp * 1000).toISOString(),\n    tokenPreview: jwt.substring(0, 50) + '...'\n  });\n  \n  return jwt;\n}\n\n/**\n * Check if we should use mock authentication\n */\nexport function shouldUseMockAuth() {\n  const hasRealFirebaseConfig = !!(\n    process.env.NEXT_PUBLIC_FIREBASE_API_KEY ||\n    process.env.NEXT_PUBLIC_FIREBASE_CLIENT_KEY\n  );\n  \n  const isDevelopment = process.env.NODE_ENV === 'development';\n  const forceMock = process.env.NEXT_PUBLIC_USE_MOCK_AUTH === 'true';\n  \n  return !hasRealFirebaseConfig || forceMock || isDevelopment;\n}\n\n/**\n * Get mock authentication services\n */\nexport function getMockFirebaseServices() {\n  console.log('ðŸ”’ Mock: Using mock Firebase authentication services');\n  \n  return {\n    auth: () => mockAuth,\n    googleProvider: () => mockGoogleProvider,\n    isFirebaseReady: () => true,\n    initializeFirebaseAsync: async () => {\n      console.log('ðŸ”’ Mock: Firebase async initialization completed');\n      return Promise.resolve();\n    }\n  };\n}\n\n/**\n * Session management for mock auth\n */\nexport const mockAuthSession = {\n  // Set mock session cookie\n  setSession: async (user) => {\n    const token = generateMockJWT(user);\n    \n    // Set session cookie via API\n    try {\n      await fetch('/api/auth/signin', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          idToken: token,\n          mock: true\n        })\n      });\n      \n      console.log('ðŸ”’ Mock: Session set successfully');\n    } catch (error) {\n      console.error('ðŸ”’ Mock: Failed to set session', error);\n    }\n  },\n  \n  // Clear mock session cookie\n  clearSession: async () => {\n    try {\n      await fetch('/api/auth/signout', {\n        method: 'POST'\n      });\n      \n      console.log('ðŸ”’ Mock: Session cleared successfully');\n    } catch (error) {\n      console.error('ðŸ”’ Mock: Failed to clear session', error);\n    }\n  }\n};\n\nexport default {\n  mockAuth,\n  mockGoogleProvider,\n  shouldUseMockAuth,\n  getMockFirebaseServices,\n  mockAuthSession\n};"],"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","ignoreList":[]}