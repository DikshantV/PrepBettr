3674f48c20cf65205526692bf4bb9f5c
"use strict";

/**
 * POST /api/voice/session/[id]/stop
 *
 * Stops an active Azure AI Foundry voice session and cleans up resources.
 */
/* istanbul ignore next */
function cov_yuak0kkkp() {
  var path = "/Users/dikshantvashistha/PrepBettr/app/api/voice/session/[id]/stop/route.ts";
  var hash = "9d70e1aef41d17004162dcdf60785d06fefad103";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dikshantvashistha/PrepBettr/app/api/voice/session/[id]/stop/route.ts",
    statementMap: {
      "0": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 7,
          column: 62
        }
      },
      "1": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 20
        }
      },
      "2": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 18
        }
      },
      "3": {
        start: {
          line: 10,
          column: 17
        },
        end: {
          line: 10,
          column: 39
        }
      },
      "4": {
        start: {
          line: 11,
          column: 28
        },
        end: {
          line: 11,
          column: 85
        }
      },
      "5": {
        start: {
          line: 12,
          column: 24
        },
        end: {
          line: 12,
          column: 77
        }
      },
      "6": {
        start: {
          line: 13,
          column: 32
        },
        end: {
          line: 13,
          column: 93
        }
      },
      "7": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 20,
          column: 5
        }
      },
      "8": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 67
        }
      },
      "9": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 23,
          column: 5
        }
      },
      "10": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 70
        }
      },
      "11": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 27,
          column: 5
        }
      },
      "12": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 83
        }
      },
      "13": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 28,
          column: 29
        }
      },
      "14": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 118,
          column: 5
        }
      },
      "15": {
        start: {
          line: 36,
          column: 31
        },
        end: {
          line: 36,
          column: 43
        }
      },
      "16": {
        start: {
          line: 37,
          column: 26
        },
        end: {
          line: 37,
          column: 43
        }
      },
      "17": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 69
        }
      },
      "18": {
        start: {
          line: 40,
          column: 34
        },
        end: {
          line: 40,
          column: 62
        }
      },
      "19": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 50,
          column: 9
        }
      },
      "20": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 42,
          column: 82
        }
      },
      "21": {
        start: {
          line: 43,
          column: 12
        },
        end: {
          line: 49,
          column: 32
        }
      },
      "22": {
        start: {
          line: 52,
          column: 19
        },
        end: {
          line: 52,
          column: 21
        }
      },
      "23": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 62,
          column: 9
        }
      },
      "24": {
        start: {
          line: 54,
          column: 32
        },
        end: {
          line: 54,
          column: 52
        }
      },
      "25": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 57,
          column: 13
        }
      },
      "26": {
        start: {
          line: 56,
          column: 16
        },
        end: {
          line: 56,
          column: 47
        }
      },
      "27": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 60,
          column: 90
        }
      },
      "28": {
        start: {
          line: 63,
          column: 25
        },
        end: {
          line: 63,
          column: 83
        }
      },
      "29": {
        start: {
          line: 65,
          column: 28
        },
        end: {
          line: 65,
          column: 73
        }
      },
      "30": {
        start: {
          line: 66,
          column: 28
        },
        end: {
          line: 66,
          column: 61
        }
      },
      "31": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 76,
          column: 9
        }
      },
      "32": {
        start: {
          line: 68,
          column: 12
        },
        end: {
          line: 68,
          column: 69
        }
      },
      "33": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 75,
          column: 32
        }
      },
      "34": {
        start: {
          line: 78,
          column: 29
        },
        end: {
          line: 78,
          column: 87
        }
      },
      "35": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 105,
          column: 9
        }
      },
      "36": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 80,
          column: 46
        }
      },
      "37": {
        start: {
          line: 82,
          column: 35
        },
        end: {
          line: 82,
          column: 88
        }
      },
      "38": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 83,
          column: 52
        }
      },
      "39": {
        start: {
          line: 84,
          column: 12
        },
        end: {
          line: 84,
          column: 71
        }
      },
      "40": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 90,
          column: 32
        }
      },
      "41": {
        start: {
          line: 93,
          column: 12
        },
        end: {
          line: 93,
          column: 85
        }
      },
      "42": {
        start: {
          line: 95,
          column: 12
        },
        end: {
          line: 95,
          column: 49
        }
      },
      "43": {
        start: {
          line: 96,
          column: 35
        },
        end: {
          line: 96,
          column: 88
        }
      },
      "44": {
        start: {
          line: 97,
          column: 12
        },
        end: {
          line: 97,
          column: 52
        }
      },
      "45": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 104,
          column: 32
        }
      },
      "46": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 108,
          column: 70
        }
      },
      "47": {
        start: {
          line: 109,
          column: 31
        },
        end: {
          line: 109,
          column: 43
        }
      },
      "48": {
        start: {
          line: 110,
          column: 26
        },
        end: {
          line: 110,
          column: 56
        }
      },
      "49": {
        start: {
          line: 111,
          column: 8
        },
        end: {
          line: 117,
          column: 28
        }
      },
      "50": {
        start: {
          line: 124,
          column: 27
        },
        end: {
          line: 124,
          column: 39
        }
      },
      "51": {
        start: {
          line: 125,
          column: 22
        },
        end: {
          line: 125,
          column: 39
        }
      },
      "52": {
        start: {
          line: 127,
          column: 30
        },
        end: {
          line: 127,
          column: 58
        }
      },
      "53": {
        start: {
          line: 128,
          column: 4
        },
        end: {
          line: 132,
          column: 5
        }
      },
      "54": {
        start: {
          line: 129,
          column: 8
        },
        end: {
          line: 131,
          column: 28
        }
      },
      "55": {
        start: {
          line: 134,
          column: 24
        },
        end: {
          line: 134,
          column: 69
        }
      },
      "56": {
        start: {
          line: 135,
          column: 24
        },
        end: {
          line: 135,
          column: 57
        }
      },
      "57": {
        start: {
          line: 136,
          column: 4
        },
        end: {
          line: 142,
          column: 5
        }
      },
      "58": {
        start: {
          line: 137,
          column: 8
        },
        end: {
          line: 141,
          column: 28
        }
      },
      "59": {
        start: {
          line: 143,
          column: 4
        },
        end: {
          line: 149,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "validateSessionId",
        decl: {
          start: {
            line: 17,
            column: 9
          },
          end: {
            line: 17,
            column: 26
          }
        },
        loc: {
          start: {
            line: 17,
            column: 38
          },
          end: {
            line: 29,
            column: 1
          }
        },
        line: 17
      },
      "1": {
        name: "POST",
        decl: {
          start: {
            line: 33,
            column: 15
          },
          end: {
            line: 33,
            column: 19
          }
        },
        loc: {
          start: {
            line: 33,
            column: 41
          },
          end: {
            line: 119,
            column: 1
          }
        },
        line: 33
      },
      "2": {
        name: "GET",
        decl: {
          start: {
            line: 123,
            column: 15
          },
          end: {
            line: 123,
            column: 18
          }
        },
        loc: {
          start: {
            line: 123,
            column: 40
          },
          end: {
            line: 150,
            column: 1
          }
        },
        line: 123
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 20,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 20,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 18
      },
      "1": {
        loc: {
          start: {
            line: 18,
            column: 8
          },
          end: {
            line: 18,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 8
          },
          end: {
            line: 18,
            column: 18
          }
        }, {
          start: {
            line: 18,
            column: 22
          },
          end: {
            line: 18,
            column: 51
          }
        }],
        line: 18
      },
      "2": {
        loc: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 23,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 23,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 21
      },
      "3": {
        loc: {
          start: {
            line: 21,
            column: 8
          },
          end: {
            line: 21,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 21,
            column: 8
          },
          end: {
            line: 21,
            column: 29
          }
        }, {
          start: {
            line: 21,
            column: 33
          },
          end: {
            line: 21,
            column: 55
          }
        }],
        line: 21
      },
      "4": {
        loc: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 25
      },
      "5": {
        loc: {
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 50,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 50,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 41
      },
      "6": {
        loc: {
          start: {
            line: 55,
            column: 12
          },
          end: {
            line: 57,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 12
          },
          end: {
            line: 57,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 55
      },
      "7": {
        loc: {
          start: {
            line: 63,
            column: 25
          },
          end: {
            line: 63,
            column: 83
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 63,
            column: 74
          },
          end: {
            line: 63,
            column: 76
          }
        }, {
          start: {
            line: 63,
            column: 79
          },
          end: {
            line: 63,
            column: 83
          }
        }],
        line: 63
      },
      "8": {
        loc: {
          start: {
            line: 63,
            column: 25
          },
          end: {
            line: 63,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 63,
            column: 25
          },
          end: {
            line: 63,
            column: 54
          }
        }, {
          start: {
            line: 63,
            column: 58
          },
          end: {
            line: 63,
            column: 71
          }
        }],
        line: 63
      },
      "9": {
        loc: {
          start: {
            line: 67,
            column: 8
          },
          end: {
            line: 76,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 67,
            column: 8
          },
          end: {
            line: 76,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 67
      },
      "10": {
        loc: {
          start: {
            line: 88,
            column: 25
          },
          end: {
            line: 88,
            column: 90
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 88,
            column: 36
          },
          end: {
            line: 88,
            column: 64
          }
        }, {
          start: {
            line: 88,
            column: 67
          },
          end: {
            line: 88,
            column: 90
          }
        }],
        line: 88
      },
      "11": {
        loc: {
          start: {
            line: 102,
            column: 23
          },
          end: {
            line: 102,
            column: 99
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 102,
            column: 52
          },
          end: {
            line: 102,
            column: 69
          }
        }, {
          start: {
            line: 102,
            column: 72
          },
          end: {
            line: 102,
            column: 99
          }
        }],
        line: 102
      },
      "12": {
        loc: {
          start: {
            line: 110,
            column: 26
          },
          end: {
            line: 110,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 110,
            column: 26
          },
          end: {
            line: 110,
            column: 43
          }
        }, {
          start: {
            line: 110,
            column: 47
          },
          end: {
            line: 110,
            column: 56
          }
        }],
        line: 110
      },
      "13": {
        loc: {
          start: {
            line: 115,
            column: 19
          },
          end: {
            line: 115,
            column: 83
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 115,
            column: 44
          },
          end: {
            line: 115,
            column: 57
          }
        }, {
          start: {
            line: 115,
            column: 60
          },
          end: {
            line: 115,
            column: 83
          }
        }],
        line: 115
      },
      "14": {
        loc: {
          start: {
            line: 128,
            column: 4
          },
          end: {
            line: 132,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 128,
            column: 4
          },
          end: {
            line: 132,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 128
      },
      "15": {
        loc: {
          start: {
            line: 136,
            column: 4
          },
          end: {
            line: 142,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 136,
            column: 4
          },
          end: {
            line: 142,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 136
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/dikshantvashistha/PrepBettr/app/api/voice/session/[id]/stop/route.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/dikshantvashistha/PrepBettr/app/api/voice/session/[id]/stop/route.ts"],
      sourcesContent: ["/**\n * POST /api/voice/session/[id]/stop\n * \n * Stops an active Azure AI Foundry voice session and cleans up resources.\n */\n\nimport { NextRequest, NextResponse } from 'next/server';\nimport { getVoiceLiveClient } from '@/lib/azure-ai-foundry/voice/voice-live-client';\nimport { VoiceSession } from '@/lib/azure-ai-foundry/voice/voice-session';\nimport { getVoiceSessionStorage } from '@/lib/azure-ai-foundry/voice/voice-session-storage';\n\n/**\n * Request body schema\n */\ninterface StopSessionRequest {\n  graceful?: boolean;\n}\n\n/**\n * Response schema\n */\ninterface StopSessionResponse {\n  success: boolean;\n  sessionId: string;\n  message: string;\n  error?: string;\n  stoppedAt: string;\n}\n\n/**\n * Route parameters\n */\ninterface RouteParams {\n  id: string;\n}\n\n/**\n * Validate session ID format\n */\nfunction validateSessionId(sessionId: string): { isValid: boolean; error?: string } {\n  if (!sessionId || typeof sessionId !== 'string') {\n    return { isValid: false, error: 'Session ID is required' };\n  }\n\n  if (sessionId.length < 10 || sessionId.length > 100) {\n    return { isValid: false, error: 'Invalid session ID format' };\n  }\n\n  // Basic format validation (adjust as needed for Azure session IDs)\n  if (!/^[a-zA-Z0-9\\-_]+$/.test(sessionId)) {\n    return { isValid: false, error: 'Session ID contains invalid characters' };\n  }\n\n  return { isValid: true };\n}\n\n/**\n * POST handler for stopping voice sessions\n */\nexport async function POST(\n  request: NextRequest,\n  { params }: { params: Promise<RouteParams> }\n): Promise<NextResponse<StopSessionResponse>> {\n  try {\n    const resolvedParams = await params;\n    const sessionId = resolvedParams.id;\n    console.log(`\uD83D\uDED1 [API] Stopping voice session: ${sessionId}`);\n\n    // Validate session ID\n    const sessionValidation = validateSessionId(sessionId);\n    if (!sessionValidation.isValid) {\n      console.error('\u274C [API] Invalid session ID:', sessionValidation.error);\n      return NextResponse.json({\n        success: false,\n        sessionId,\n        message: 'Failed to stop session',\n        error: sessionValidation.error,\n        stoppedAt: new Date().toISOString()\n      }, { status: 400 });\n    }\n\n    // Parse request body\n    let body: StopSessionRequest = {};\n    try {\n      const requestBody = await request.text();\n      if (requestBody.trim()) {\n        body = JSON.parse(requestBody);\n      }\n    } catch (error) {\n      console.warn('\u26A0\uFE0F [API] Invalid JSON in request body, using defaults:', error);\n      // Continue with defaults if JSON is invalid\n    }\n\n    const graceful = body.graceful ?? true;\n\n    // Get voice client and find session\n    const voiceClient = getVoiceLiveClient();\n    const sessionMeta = voiceClient.getSession(sessionId);\n\n    if (!sessionMeta) {\n      console.warn(`\u26A0\uFE0F [API] Session not found: ${sessionId}`);\n      return NextResponse.json({\n        success: false,\n        sessionId,\n        message: 'Session not found',\n        error: 'Session does not exist or has already been stopped',\n        stoppedAt: new Date().toISOString()\n      }, { status: 404 });\n    }\n\n    // Create VoiceSession instance and stop it\n    const voiceSession = new VoiceSession(voiceClient, sessionMeta);\n    \n    try {\n      await voiceSession.stop(graceful);\n      \n      // Clean up edge-compatible storage as well\n      const sessionStorage = getVoiceSessionStorage();\n      sessionStorage.removeSession(sessionId);\n      \n      console.log(`\u2705 [API] Voice session stopped: ${sessionId}`);\n      \n      return NextResponse.json({\n        success: true,\n        sessionId,\n        message: graceful ? 'Session stopped gracefully' : 'Session force stopped',\n        stoppedAt: new Date().toISOString()\n      }, { status: 200 });\n\n    } catch (stopError) {\n      console.error(`\u274C [API] Error stopping session ${sessionId}:`, stopError);\n      \n      // Even if stopping failed, remove from both client's active sessions and edge storage\n      voiceClient.removeSession(sessionId);\n      const sessionStorage = getVoiceSessionStorage();\n      sessionStorage.removeSession(sessionId);\n      \n      return NextResponse.json({\n        success: false,\n        sessionId,\n        message: 'Session stopped with errors',\n        error: stopError instanceof Error ? stopError.message : 'Unknown error during stop',\n        stoppedAt: new Date().toISOString()\n      }, { status: 500 });\n    }\n\n  } catch (error) {\n    console.error('\u274C [API] Failed to stop voice session:', error);\n    \n    const resolvedParams = await params;\n    const sessionId = resolvedParams.id || 'unknown';\n    \n    return NextResponse.json({\n      success: false,\n      sessionId,\n      message: 'Failed to stop session',\n      error: error instanceof Error ? error.message : 'Internal server error',\n      stoppedAt: new Date().toISOString()\n    }, { status: 500 });\n  }\n}\n\n/**\n * GET handler for session status check\n */\nexport async function GET(\n  request: NextRequest,\n  { params }: { params: Promise<RouteParams> }\n): Promise<NextResponse> {\n  const resolvedParams = await params;\n  const sessionId = resolvedParams.id;\n  \n  // Validate session ID\n  const sessionValidation = validateSessionId(sessionId);\n  if (!sessionValidation.isValid) {\n    return NextResponse.json({\n      error: sessionValidation.error\n    }, { status: 400 });\n  }\n\n  // Get voice client and check session status\n  const voiceClient = getVoiceLiveClient();\n  const sessionMeta = voiceClient.getSession(sessionId);\n\n  if (!sessionMeta) {\n    return NextResponse.json({\n      sessionId,\n      exists: false,\n      message: 'Session not found'\n    }, { status: 404 });\n  }\n\n  return NextResponse.json({\n    sessionId,\n    exists: true,\n    createdAt: sessionMeta.createdAt.toISOString(),\n    options: sessionMeta.options,\n    message: 'Session is active'\n  });\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "9d70e1aef41d17004162dcdf60785d06fefad103"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_yuak0kkkp = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_yuak0kkkp();
cov_yuak0kkkp().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_yuak0kkkp().s[1]++;
exports.POST = POST;
/* istanbul ignore next */
cov_yuak0kkkp().s[2]++;
exports.GET = GET;
const server_1 =
/* istanbul ignore next */
(cov_yuak0kkkp().s[3]++, require("next/server"));
const voice_live_client_1 =
/* istanbul ignore next */
(cov_yuak0kkkp().s[4]++, require("@/lib/azure-ai-foundry/voice/voice-live-client"));
const voice_session_1 =
/* istanbul ignore next */
(cov_yuak0kkkp().s[5]++, require("@/lib/azure-ai-foundry/voice/voice-session"));
const voice_session_storage_1 =
/* istanbul ignore next */
(cov_yuak0kkkp().s[6]++, require("@/lib/azure-ai-foundry/voice/voice-session-storage"));
/**
 * Validate session ID format
 */
function validateSessionId(sessionId) {
  /* istanbul ignore next */
  cov_yuak0kkkp().f[0]++;
  cov_yuak0kkkp().s[7]++;
  if (
  /* istanbul ignore next */
  (cov_yuak0kkkp().b[1][0]++, !sessionId) ||
  /* istanbul ignore next */
  (cov_yuak0kkkp().b[1][1]++, typeof sessionId !== 'string')) {
    /* istanbul ignore next */
    cov_yuak0kkkp().b[0][0]++;
    cov_yuak0kkkp().s[8]++;
    return {
      isValid: false,
      error: 'Session ID is required'
    };
  } else
  /* istanbul ignore next */
  {
    cov_yuak0kkkp().b[0][1]++;
  }
  cov_yuak0kkkp().s[9]++;
  if (
  /* istanbul ignore next */
  (cov_yuak0kkkp().b[3][0]++, sessionId.length < 10) ||
  /* istanbul ignore next */
  (cov_yuak0kkkp().b[3][1]++, sessionId.length > 100)) {
    /* istanbul ignore next */
    cov_yuak0kkkp().b[2][0]++;
    cov_yuak0kkkp().s[10]++;
    return {
      isValid: false,
      error: 'Invalid session ID format'
    };
  } else
  /* istanbul ignore next */
  {
    cov_yuak0kkkp().b[2][1]++;
  }
  // Basic format validation (adjust as needed for Azure session IDs)
  cov_yuak0kkkp().s[11]++;
  if (!/^[a-zA-Z0-9\-_]+$/.test(sessionId)) {
    /* istanbul ignore next */
    cov_yuak0kkkp().b[4][0]++;
    cov_yuak0kkkp().s[12]++;
    return {
      isValid: false,
      error: 'Session ID contains invalid characters'
    };
  } else
  /* istanbul ignore next */
  {
    cov_yuak0kkkp().b[4][1]++;
  }
  cov_yuak0kkkp().s[13]++;
  return {
    isValid: true
  };
}
/**
 * POST handler for stopping voice sessions
 */
async function POST(request, {
  params
}) {
  /* istanbul ignore next */
  cov_yuak0kkkp().f[1]++;
  var _a;
  /* istanbul ignore next */
  cov_yuak0kkkp().s[14]++;
  try {
    const resolvedParams =
    /* istanbul ignore next */
    (cov_yuak0kkkp().s[15]++, await params);
    const sessionId =
    /* istanbul ignore next */
    (cov_yuak0kkkp().s[16]++, resolvedParams.id);
    /* istanbul ignore next */
    cov_yuak0kkkp().s[17]++;
    console.log(`🛑 [API] Stopping voice session: ${sessionId}`);
    // Validate session ID
    const sessionValidation =
    /* istanbul ignore next */
    (cov_yuak0kkkp().s[18]++, validateSessionId(sessionId));
    /* istanbul ignore next */
    cov_yuak0kkkp().s[19]++;
    if (!sessionValidation.isValid) {
      /* istanbul ignore next */
      cov_yuak0kkkp().b[5][0]++;
      cov_yuak0kkkp().s[20]++;
      console.error('❌ [API] Invalid session ID:', sessionValidation.error);
      /* istanbul ignore next */
      cov_yuak0kkkp().s[21]++;
      return server_1.NextResponse.json({
        success: false,
        sessionId,
        message: 'Failed to stop session',
        error: sessionValidation.error,
        stoppedAt: new Date().toISOString()
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_yuak0kkkp().b[5][1]++;
    }
    // Parse request body
    let body =
    /* istanbul ignore next */
    (cov_yuak0kkkp().s[22]++, {});
    /* istanbul ignore next */
    cov_yuak0kkkp().s[23]++;
    try {
      const requestBody =
      /* istanbul ignore next */
      (cov_yuak0kkkp().s[24]++, await request.text());
      /* istanbul ignore next */
      cov_yuak0kkkp().s[25]++;
      if (requestBody.trim()) {
        /* istanbul ignore next */
        cov_yuak0kkkp().b[6][0]++;
        cov_yuak0kkkp().s[26]++;
        body = JSON.parse(requestBody);
      } else
      /* istanbul ignore next */
      {
        cov_yuak0kkkp().b[6][1]++;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_yuak0kkkp().s[27]++;
      console.warn('⚠️ [API] Invalid JSON in request body, using defaults:', error);
      // Continue with defaults if JSON is invalid
    }
    const graceful =
    /* istanbul ignore next */
    (cov_yuak0kkkp().s[28]++,
    /* istanbul ignore next */
    (cov_yuak0kkkp().b[8][0]++, (_a = body.graceful) !== null) &&
    /* istanbul ignore next */
    (cov_yuak0kkkp().b[8][1]++, _a !== void 0) ?
    /* istanbul ignore next */
    (cov_yuak0kkkp().b[7][0]++, _a) :
    /* istanbul ignore next */
    (cov_yuak0kkkp().b[7][1]++, true));
    // Get voice client and find session
    const voiceClient =
    /* istanbul ignore next */
    (cov_yuak0kkkp().s[29]++, (0, voice_live_client_1.getVoiceLiveClient)());
    const sessionMeta =
    /* istanbul ignore next */
    (cov_yuak0kkkp().s[30]++, voiceClient.getSession(sessionId));
    /* istanbul ignore next */
    cov_yuak0kkkp().s[31]++;
    if (!sessionMeta) {
      /* istanbul ignore next */
      cov_yuak0kkkp().b[9][0]++;
      cov_yuak0kkkp().s[32]++;
      console.warn(`⚠️ [API] Session not found: ${sessionId}`);
      /* istanbul ignore next */
      cov_yuak0kkkp().s[33]++;
      return server_1.NextResponse.json({
        success: false,
        sessionId,
        message: 'Session not found',
        error: 'Session does not exist or has already been stopped',
        stoppedAt: new Date().toISOString()
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_yuak0kkkp().b[9][1]++;
    }
    // Create VoiceSession instance and stop it
    const voiceSession =
    /* istanbul ignore next */
    (cov_yuak0kkkp().s[34]++, new voice_session_1.VoiceSession(voiceClient, sessionMeta));
    /* istanbul ignore next */
    cov_yuak0kkkp().s[35]++;
    try {
      /* istanbul ignore next */
      cov_yuak0kkkp().s[36]++;
      await voiceSession.stop(graceful);
      // Clean up edge-compatible storage as well
      const sessionStorage =
      /* istanbul ignore next */
      (cov_yuak0kkkp().s[37]++, (0, voice_session_storage_1.getVoiceSessionStorage)());
      /* istanbul ignore next */
      cov_yuak0kkkp().s[38]++;
      sessionStorage.removeSession(sessionId);
      /* istanbul ignore next */
      cov_yuak0kkkp().s[39]++;
      console.log(`✅ [API] Voice session stopped: ${sessionId}`);
      /* istanbul ignore next */
      cov_yuak0kkkp().s[40]++;
      return server_1.NextResponse.json({
        success: true,
        sessionId,
        message: graceful ?
        /* istanbul ignore next */
        (cov_yuak0kkkp().b[10][0]++, 'Session stopped gracefully') :
        /* istanbul ignore next */
        (cov_yuak0kkkp().b[10][1]++, 'Session force stopped'),
        stoppedAt: new Date().toISOString()
      }, {
        status: 200
      });
    } catch (stopError) {
      /* istanbul ignore next */
      cov_yuak0kkkp().s[41]++;
      console.error(`❌ [API] Error stopping session ${sessionId}:`, stopError);
      // Even if stopping failed, remove from both client's active sessions and edge storage
      /* istanbul ignore next */
      cov_yuak0kkkp().s[42]++;
      voiceClient.removeSession(sessionId);
      const sessionStorage =
      /* istanbul ignore next */
      (cov_yuak0kkkp().s[43]++, (0, voice_session_storage_1.getVoiceSessionStorage)());
      /* istanbul ignore next */
      cov_yuak0kkkp().s[44]++;
      sessionStorage.removeSession(sessionId);
      /* istanbul ignore next */
      cov_yuak0kkkp().s[45]++;
      return server_1.NextResponse.json({
        success: false,
        sessionId,
        message: 'Session stopped with errors',
        error: stopError instanceof Error ?
        /* istanbul ignore next */
        (cov_yuak0kkkp().b[11][0]++, stopError.message) :
        /* istanbul ignore next */
        (cov_yuak0kkkp().b[11][1]++, 'Unknown error during stop'),
        stoppedAt: new Date().toISOString()
      }, {
        status: 500
      });
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_yuak0kkkp().s[46]++;
    console.error('❌ [API] Failed to stop voice session:', error);
    const resolvedParams =
    /* istanbul ignore next */
    (cov_yuak0kkkp().s[47]++, await params);
    const sessionId =
    /* istanbul ignore next */
    (cov_yuak0kkkp().s[48]++,
    /* istanbul ignore next */
    (cov_yuak0kkkp().b[12][0]++, resolvedParams.id) ||
    /* istanbul ignore next */
    (cov_yuak0kkkp().b[12][1]++, 'unknown'));
    /* istanbul ignore next */
    cov_yuak0kkkp().s[49]++;
    return server_1.NextResponse.json({
      success: false,
      sessionId,
      message: 'Failed to stop session',
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_yuak0kkkp().b[13][0]++, error.message) :
      /* istanbul ignore next */
      (cov_yuak0kkkp().b[13][1]++, 'Internal server error'),
      stoppedAt: new Date().toISOString()
    }, {
      status: 500
    });
  }
}
/**
 * GET handler for session status check
 */
async function GET(request, {
  params
}) {
  /* istanbul ignore next */
  cov_yuak0kkkp().f[2]++;
  const resolvedParams =
  /* istanbul ignore next */
  (cov_yuak0kkkp().s[50]++, await params);
  const sessionId =
  /* istanbul ignore next */
  (cov_yuak0kkkp().s[51]++, resolvedParams.id);
  // Validate session ID
  const sessionValidation =
  /* istanbul ignore next */
  (cov_yuak0kkkp().s[52]++, validateSessionId(sessionId));
  /* istanbul ignore next */
  cov_yuak0kkkp().s[53]++;
  if (!sessionValidation.isValid) {
    /* istanbul ignore next */
    cov_yuak0kkkp().b[14][0]++;
    cov_yuak0kkkp().s[54]++;
    return server_1.NextResponse.json({
      error: sessionValidation.error
    }, {
      status: 400
    });
  } else
  /* istanbul ignore next */
  {
    cov_yuak0kkkp().b[14][1]++;
  }
  // Get voice client and check session status
  const voiceClient =
  /* istanbul ignore next */
  (cov_yuak0kkkp().s[55]++, (0, voice_live_client_1.getVoiceLiveClient)());
  const sessionMeta =
  /* istanbul ignore next */
  (cov_yuak0kkkp().s[56]++, voiceClient.getSession(sessionId));
  /* istanbul ignore next */
  cov_yuak0kkkp().s[57]++;
  if (!sessionMeta) {
    /* istanbul ignore next */
    cov_yuak0kkkp().b[15][0]++;
    cov_yuak0kkkp().s[58]++;
    return server_1.NextResponse.json({
      sessionId,
      exists: false,
      message: 'Session not found'
    }, {
      status: 404
    });
  } else
  /* istanbul ignore next */
  {
    cov_yuak0kkkp().b[15][1]++;
  }
  cov_yuak0kkkp().s[59]++;
  return server_1.NextResponse.json({
    sessionId,
    exists: true,
    createdAt: sessionMeta.createdAt.toISOString(),
    options: sessionMeta.options,
    message: 'Session is active'
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,