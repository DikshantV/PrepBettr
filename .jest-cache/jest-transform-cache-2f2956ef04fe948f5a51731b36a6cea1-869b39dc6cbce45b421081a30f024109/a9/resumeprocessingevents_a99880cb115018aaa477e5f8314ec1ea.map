{"version":3,"names":["cov_2363va5hcq","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","exports","createResumeProcessedEvent","createATSScoreComputedEvent","createJobMatchComputedEvent","ResumeProcessingTelemetry","constructor","window","ReactPlugin","require","ApplicationInsights","process","env","NEXT_PUBLIC_APPINSIGHTS_INSTRUMENTATIONKEY","reactPlugin","telemetry","config","instrumentationKey","extensions","extensionConfig","identifier","loadAppInsights","appInsights","APPLICATIONINSIGHTS_CONNECTION_STRING","setup","setAutoDependencyCorrelation","setAutoCollectRequests","setAutoCollectPerformance","setAutoCollectExceptions","setAutoCollectDependencies","setAutoCollectConsole","setUseDiskRetryCaching","setSendLiveMetrics","defaultClient","error","console","warn","trackResumeProcessed","event","trackEvent","trackMetric","processingTime","processingMethod","success","toString","hasJobDescription","fileSize","mimeType","log","fileName","trackATSScoreComputed","atsScore","overallGrade","targetIndustry","keywordScore","formatScore","structureScore","contentScore","trackJobMatchComputed","jobMatchScore","matchGrade","targetRole","experienceLevel","semanticSimilarity","criticalGapsCount","missingKeywordsCount","trackFoundryModelUsage","totalTokens","modelType","operation","pagesProcessed","costEstimate","trackResumeProcessingError","errorType","recovery","errorMessage","value","properties","average","stringProperties","Object","entries","forEach","key","JSON","stringify","NODE_ENV","trackDependency","command","startTime","duration","data","Date","withPerformanceTracking","operationName","additionalProperties","now","then","result","catch","assign","message","flush","resumeProcessingTelemetry","userId","options","storageProvider","componentScores","recommendationsCount","criticalIssuesCount"],"sources":["/Users/dikshantvashistha/PrepBettr/lib/monitoring/resume-processing-events.ts"],"sourcesContent":["/**\n * Application Insights Custom Events for Resume Processing\n * \n * Provides structured logging and monitoring for the enhanced resume processing pipeline.\n * Integrates with Azure Application Insights for dashboard visualization and alerting.\n */\n\n// Define Attributes interface for telemetry events\ninterface Attributes {\n  [key: string]: string | number | boolean | undefined;\n}\n\nexport interface ResumeProcessedEvent extends Attributes {\n  userId: string;\n  fileName: string;\n  fileSize: number;\n  mimeType: string;\n  processingMethod: 'foundry-document-intelligence' | 'azure-form-recognizer' | 'openai-extraction';\n  processingTime: number;\n  confidence?: number;\n  success: boolean;\n  errorMessage?: string;\n  retryCount?: number;\n  storageProvider: 'firebase' | 'azure-blob';\n  hasJobDescription: boolean;\n  targetRole?: string;\n  targetIndustry?: string;\n  experienceLevel?: string;\n}\n\nexport interface ATSScoreComputedEvent extends Attributes {\n  userId: string;\n  atsScore: number;\n  overallGrade: string;\n  processingTime: number;\n  keywordScore: number;\n  formatScore: number;\n  structureScore: number;\n  contentScore: number;\n  hasJobDescription: boolean;\n  targetIndustry?: string;\n  recommendationsCount: number;\n  criticalIssuesCount: number;\n  success: boolean;\n  errorMessage?: string;\n}\n\nexport interface JobMatchComputedEvent extends Attributes {\n  userId: string;\n  jobMatchScore: number;\n  matchGrade: string;\n  processingTime: number;\n  skillsMatchScore: number;\n  experienceMatchScore: number;\n  educationMatchScore: number;\n  culturalFitScore: number;\n  semanticSimilarity: number;\n  criticalGapsCount: number;\n  missingKeywordsCount: number;\n  targetRole?: string;\n  experienceLevel?: string;\n  success: boolean;\n  errorMessage?: string;\n}\n\nexport interface FoundryModelUsageEvent extends Attributes {\n  userId: string;\n  modelType: 'document-intelligence' | 'openai-gpt-4' | 'openai-embeddings';\n  operation: 'resume-analysis' | 'ats-optimization' | 'job-matching' | 'skills-normalization';\n  inputTokens?: number;\n  outputTokens?: number;\n  totalTokens?: number;\n  pagesProcessed?: number;\n  documentsProcessed?: number;\n  processingTime: number;\n  costEstimate?: number;\n  success: boolean;\n  errorType?: string;\n  rateLimited?: boolean;\n}\n\nexport interface ResumeProcessingErrorEvent extends Attributes {\n  userId: string;\n  errorType: 'extraction-failed' | 'ats-analysis-failed' | 'job-matching-failed' | 'storage-failed' | 'validation-failed';\n  errorMessage: string;\n  errorStack?: string;\n  processingMethod: string;\n  retryAttempt: number;\n  fileName?: string;\n  fileSize?: number;\n  processingTime: number;\n  recovery: 'fallback-used' | 'retry-scheduled' | 'failed-permanently';\n}\n\n/**\n * Resume Processing Telemetry Service\n */\nclass ResumeProcessingTelemetry {\n  private telemetry: any;\n\n  constructor() {\n    // Initialize Application Insights if available\n    if (typeof window !== 'undefined') {\n      // Client-side - use React Application Insights\n      const { ReactPlugin } = require('@microsoft/applicationinsights-react-js');\n      const { ApplicationInsights } = require('@microsoft/applicationinsights-web');\n      \n      if (process.env.NEXT_PUBLIC_APPINSIGHTS_INSTRUMENTATIONKEY) {\n        const reactPlugin = new ReactPlugin();\n        this.telemetry = new ApplicationInsights({\n          config: {\n            instrumentationKey: process.env.NEXT_PUBLIC_APPINSIGHTS_INSTRUMENTATIONKEY,\n            extensions: [reactPlugin],\n            extensionConfig: {\n              [reactPlugin.identifier]: {}\n            }\n          }\n        });\n        this.telemetry.loadAppInsights();\n      }\n    } else {\n      // Server-side - use Node.js Application Insights\n      try {\n        const appInsights = require('applicationinsights');\n        \n        if (process.env.APPLICATIONINSIGHTS_CONNECTION_STRING) {\n          appInsights.setup(process.env.APPLICATIONINSIGHTS_CONNECTION_STRING)\n            .setAutoDependencyCorrelation(true)\n            .setAutoCollectRequests(true)\n            .setAutoCollectPerformance(true, true)\n            .setAutoCollectExceptions(true)\n            .setAutoCollectDependencies(true)\n            .setAutoCollectConsole(true)\n            .setUseDiskRetryCaching(true)\n            .setSendLiveMetrics(true)\n            .start();\n            \n          this.telemetry = appInsights.defaultClient;\n        }\n      } catch (error) {\n        console.warn('Application Insights not available:', error);\n      }\n    }\n  }\n\n  /**\n   * Track resume processing completion\n   */\n  trackResumeProcessed(event: ResumeProcessedEvent): void {\n    this.trackEvent('ResumeProcessed', event);\n    \n    // Track processing time as a metric\n    this.trackMetric('ResumeProcessingTime', event.processingTime, {\n      processingMethod: event.processingMethod,\n      success: event.success.toString(),\n      hasJobDescription: event.hasJobDescription.toString()\n    });\n    \n    // Track file size distribution\n    this.trackMetric('ResumeFileSize', event.fileSize, {\n      mimeType: event.mimeType\n    });\n    \n    console.log(`📊 Resume processed: ${event.fileName} (${event.processingMethod}) in ${event.processingTime}ms`);\n  }\n\n  /**\n   * Track ATS score computation\n   */\n  trackATSScoreComputed(event: ATSScoreComputedEvent): void {\n    this.trackEvent('ATSScoreComputed', event);\n    \n    // Track ATS score distribution\n    this.trackMetric('ATSScore', event.atsScore, {\n      overallGrade: event.overallGrade,\n      hasJobDescription: event.hasJobDescription.toString(),\n      targetIndustry: event.targetIndustry || 'unknown'\n    });\n    \n    // Track individual component scores\n    this.trackMetric('ATSKeywordScore', event.keywordScore);\n    this.trackMetric('ATSFormatScore', event.formatScore);\n    this.trackMetric('ATSStructureScore', event.structureScore);\n    this.trackMetric('ATSContentScore', event.contentScore);\n    \n    console.log(`🎯 ATS score computed: ${event.atsScore}/100 (${event.overallGrade}) in ${event.processingTime}ms`);\n  }\n\n  /**\n   * Track job matching computation\n   */\n  trackJobMatchComputed(event: JobMatchComputedEvent): void {\n    this.trackEvent('JobMatchComputed', event);\n    \n    // Track job match score distribution\n    this.trackMetric('JobMatchScore', event.jobMatchScore, {\n      matchGrade: event.matchGrade,\n      targetRole: event.targetRole || 'unknown',\n      experienceLevel: event.experienceLevel || 'unknown'\n    });\n    \n    // Track semantic similarity effectiveness\n    this.trackMetric('SemanticSimilarity', event.semanticSimilarity);\n    \n    // Track skill gaps\n    this.trackMetric('CriticalSkillGaps', event.criticalGapsCount);\n    this.trackMetric('MissingKeywords', event.missingKeywordsCount);\n    \n    console.log(`🎯 Job match computed: ${event.jobMatchScore}/100 (${event.matchGrade}) in ${event.processingTime}ms`);\n  }\n\n  /**\n   * Track Foundry model usage for billing and quota monitoring\n   */\n  trackFoundryModelUsage(event: FoundryModelUsageEvent): void {\n    this.trackEvent('FoundryModelUsage', event);\n    \n    // Track token usage for cost monitoring\n    if (event.totalTokens) {\n      this.trackMetric('FoundryTokensUsed', event.totalTokens, {\n        modelType: event.modelType,\n        operation: event.operation\n      });\n    }\n    \n    // Track pages processed for Document Intelligence\n    if (event.pagesProcessed) {\n      this.trackMetric('FoundryPagesProcessed', event.pagesProcessed, {\n        modelType: event.modelType\n      });\n    }\n    \n    // Track estimated cost\n    if (event.costEstimate) {\n      this.trackMetric('FoundryCostEstimate', event.costEstimate, {\n        modelType: event.modelType,\n        operation: event.operation\n      });\n    }\n    \n    console.log(`💰 Foundry usage: ${event.modelType} (${event.operation}) - ${event.totalTokens || event.pagesProcessed} units`);\n  }\n\n  /**\n   * Track processing errors\n   */\n  trackResumeProcessingError(event: ResumeProcessingErrorEvent): void {\n    this.trackEvent('ResumeProcessingError', event);\n    \n    // Track error frequency by type\n    this.trackMetric('ResumeProcessingErrors', 1, {\n      errorType: event.errorType,\n      processingMethod: event.processingMethod,\n      recovery: event.recovery\n    });\n    \n    console.error(`❌ Resume processing error: ${event.errorType} - ${event.errorMessage}`);\n  }\n\n  /**\n   * Track custom metric\n   */\n  trackMetric(name: string, value: number, properties?: Record<string, string>): void {\n    if (this.telemetry) {\n      if (typeof window !== 'undefined') {\n        // Client-side\n        this.telemetry.trackMetric({ name, average: value }, properties);\n      } else {\n        // Server-side\n        this.telemetry.trackMetric({ name, value }, properties);\n      }\n    }\n  }\n\n  /**\n   * Track custom event\n   */\n  trackEvent(name: string, properties: Record<string, any>): void {\n    if (this.telemetry) {\n      // Convert all property values to strings for Application Insights\n      const stringProperties: Record<string, string> = {};\n      Object.entries(properties).forEach(([key, value]) => {\n        if (value !== null && value !== undefined) {\n          stringProperties[key] = typeof value === 'string' ? value : JSON.stringify(value);\n        }\n      });\n\n      if (typeof window !== 'undefined') {\n        // Client-side\n        this.telemetry.trackEvent({ name }, stringProperties);\n      } else {\n        // Server-side\n        this.telemetry.trackEvent({ name, properties: stringProperties });\n      }\n    }\n    \n    // Also log to console in development\n    if (process.env.NODE_ENV === 'development') {\n      console.log(`🔍 Event: ${name}`, properties);\n    }\n  }\n\n  /**\n   * Track dependency call (external service calls)\n   */\n  trackDependency(\n    name: string,\n    command: string,\n    startTime: number,\n    duration: number,\n    success: boolean,\n    properties?: Record<string, string>\n  ): void {\n    if (this.telemetry && typeof window === 'undefined') {\n      // Server-side only\n      this.telemetry.trackDependency({\n        name,\n        data: command,\n        startTime: new Date(startTime),\n        duration,\n        success,\n        properties\n      });\n    }\n  }\n\n  /**\n   * Create performance tracking wrapper for async operations\n   */\n  withPerformanceTracking<T>(\n    operationName: string,\n    operation: () => Promise<T>,\n    additionalProperties?: Record<string, string>\n  ): Promise<T> {\n    const startTime = Date.now();\n    \n    return operation()\n      .then(result => {\n        const duration = Date.now() - startTime;\n        \n        this.trackMetric(`${operationName}Duration`, duration, additionalProperties);\n        this.trackDependency(\n          operationName,\n          'internal-operation',\n          startTime,\n          duration,\n          true,\n          additionalProperties\n        );\n        \n        return result;\n      })\n      .catch(error => {\n        const duration = Date.now() - startTime;\n        \n        this.trackMetric(`${operationName}Duration`, duration, {\n          ...additionalProperties,\n          success: 'false'\n        });\n        \n        this.trackDependency(\n          operationName,\n          'internal-operation',\n          startTime,\n          duration,\n          false,\n          {\n            ...additionalProperties,\n            error: error.message\n          }\n        );\n        \n        throw error;\n      });\n  }\n\n  /**\n   * Flush telemetry (useful for serverless environments)\n   */\n  flush(): void {\n    if (this.telemetry) {\n      if (typeof window !== 'undefined') {\n        // Client-side\n        this.telemetry.flush();\n      } else {\n        // Server-side\n        this.telemetry.flush();\n      }\n    }\n  }\n}\n\n// Export singleton instance\nexport const resumeProcessingTelemetry = new ResumeProcessingTelemetry();\n\n// Export helper functions\nexport function createResumeProcessedEvent(\n  userId: string,\n  fileName: string,\n  fileSize: number,\n  mimeType: string,\n  processingMethod: ResumeProcessedEvent['processingMethod'],\n  processingTime: number,\n  success: boolean,\n  options: Partial<ResumeProcessedEvent> = {}\n): ResumeProcessedEvent {\n  return {\n    userId,\n    fileName,\n    fileSize,\n    mimeType,\n    processingMethod,\n    processingTime,\n    success,\n    storageProvider: 'firebase', // default\n    hasJobDescription: false, // default\n    ...options\n  };\n}\n\nexport function createATSScoreComputedEvent(\n  userId: string,\n  atsScore: number,\n  overallGrade: string,\n  processingTime: number,\n  componentScores: {\n    keywordScore: number;\n    formatScore: number;\n    structureScore: number;\n    contentScore: number;\n  },\n  options: Partial<ATSScoreComputedEvent> = {}\n): ATSScoreComputedEvent {\n  return {\n    userId,\n    atsScore,\n    overallGrade,\n    processingTime,\n    ...componentScores,\n    hasJobDescription: false, // default\n    recommendationsCount: 0, // default\n    criticalIssuesCount: 0, // default\n    success: true, // default\n    ...options\n  };\n}\n\nexport function createJobMatchComputedEvent(\n  userId: string,\n  jobMatchScore: number,\n  matchGrade: string,\n  processingTime: number,\n  componentScores: {\n    skillsMatchScore: number;\n    experienceMatchScore: number;\n    educationMatchScore: number;\n    culturalFitScore: number;\n    semanticSimilarity: number;\n  },\n  options: Partial<JobMatchComputedEvent> = {}\n): JobMatchComputedEvent {\n  return {\n    userId,\n    jobMatchScore,\n    matchGrade,\n    processingTime,\n    ...componentScores,\n    criticalGapsCount: 0, // default\n    missingKeywordsCount: 0, // default\n    success: true, // default\n    ...options\n  };\n}\n"],"mappings":";;AAAA;;;;;;AAAA;AAAA,SAAAA,ecAAA;MAAAC,IAAA;MAAAC,QAAA;MAAAC,KAAA;MAAAC,OAAA;MAAAC,cAAA;MAAAC,OAAA;IAAA;IAAAC,eAAA;IAAA5B,IAAA;EAAA;EAAA,IAAA6B,QAAA,GAAA5B,MAAA,CAAAE,GAAA,MAAAF,MAAA,CAAAE,GAAA;EAAA,KAAA0B,QAAA,CAAA9B,IAAA,KAAA8B,QAAA,CAAA9B,IAAA,EAAAC,IAAA,KAAAA,IAAA;IAAA6B,QAAA,CAAA9B,IAAA,IAAAK,YAAA;EAAA;EAAA,IAAA0B,cAAA,GAAAD,QAAA,CAAA9B,IAAA;EAAA;IAiGM;IAAAD,cAAA,YAAAA,CAAA;MAAA,OAAAgC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAhC,cAAA;AAAAA,cAAA,GAAAoB,CAAA;;;;;;;;;AA2SNa,OAAA,CAAAC,0BAAA,GAAAA,0BAAA;AAsBC;AAAAlC,cAAA,GAAAoB,CAAA;AAEDa,OAAA,CAAAE,2BAAA,GAAAA,2BAAA;AAyBC;AAAAnC,cAAA,GAAAoB,CAAA;AAEDa,OAAA,CAAAG,2BAAA,GAAAA,2BAAA;AAjWA;;;AAGA,MAAMC,yBAAyB;EAG7BC,YAAA;IAAA;IAAAtC,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IACE;IACA,IAAI,OAAOmB,MAAM,KAAK,WAAW,EAAE;MAAA;MAAAvC,cAAA,GAAAsB,CAAA;MACjC;MACA,MAAM;QAAEkB;MAAW,CAAE;MAAA;MAAA,CAAAxC,cAAA,GAAAoB,CAAA,OAAGqB,OAAO,CAAC,yCAAyC,CAAC;MAC1E,MAAM;QAAEC;MAAmB,CAAE;MAAA;MAAA,CAAA1C,cAAA,GAAAoB,CAAA,OAAGqB,OAAO,CAAC,oCAAoC,CAAC;MAAC;MAAAzC,cAAA,GAAAoB,CAAA;MAE9E,IAAIuB,OAAO,CAACC,GAAG,CAACC,0CAA0C,EAAE;QAAA;QAAA7C,cAAA,GAAAsB,CAAA;QAC1D,MAAMwB,WAAW;QAAA;QAAA,CAAA9C,cAAA,GAAAoB,CAAA,OAAG,IAAIoB,WAAW,EAAE;QAAC;QAAAxC,cAAA,GAAAoB,CAAA;QACtC,IAAI,CAAC2B,SAAS,GAAG,IAAIL,mBAAmB,CAAC;UACvCM,MAAM,EAAE;YACNC,kBAAkB,EAAEN,OAAO,CAACC,GAAG,CAACC,0CAA0C;YAC1EK,UAAU,EAAE,CAACJ,WAAW,CAAC;YACzBK,eAAe,EAAE;cACf,CAACL,WAAW,CAACM,UAAU,GAAG;;;SAG/B,CAAC;QAAC;QAAApD,cAAA,GAAAoB,CAAA;QACH,IAAI,CAAC2B,SAAS,CAACM,eAAe,EAAE;MAClC,CAAC;MAAA;MAAA;QAAArD,cAAA,GAAAsB,CAAA;MAAA;IACH,CAAC,MAAM;MAAA;MAAAtB,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MACL;MACA,IAAI;QACF,MAAMkC,WAAW;QAAA;QAAA,CAAAtD,cAAA,GAAAoB,CAAA,QAAGqB,OAAO,CAAC,qBAAqB,CAAC;QAAC;QAAAzC,cAAA,GAAAoB,CAAA;QAEnD,IAAIuB,OAAO,CAACC,GAAG,CAACW,qCAAqC,EAAE;UAAA;UAAAvD,cAAA,GAAAsB,CAAA;UAAAtB,cAAA,GAAAoB,CAAA;UACrDkC,WAAW,CAACE,KAAK,CAACb,OAAO,CAACC,GAAG,CAACW,qCAAqC,CAAC,CACjEE,4BAA4B,CAAC,IAAI,CAAC,CAClCC,sBAAsB,CAAC,IAAI,CAAC,CAC5BC,yBAAyB,CAAC,IAAI,EAAE,IAAI,CAAC,CACrCC,wBAAwB,CAAC,IAAI,CAAC,CAC9BC,0BAA0B,CAAC,IAAI,CAAC,CAChCC,qBAAqB,CAAC,IAAI,CAAC,CAC3BC,sBAAsB,CAAC,IAAI,CAAC,CAC5BC,kBAAkB,CAAC,IAAI,CAAC,CACxBxD,KAAK,EAAE;UAAC;UAAAR,cAAA,GAAAoB,CAAA;UAEX,IAAI,CAAC2B,SAAS,GAAGO,WAAW,CAACW,aAAa;QAC5C,CAAC;QAAA;QAAA;UAAAjE,cAAA,GAAAsB,CAAA;QAAA;MACH,CAAC,CAAC,OAAO4C,KAAK,EAAE;QAAA;QAAAlE,cAAA,GAAAoB,CAAA;QACd+C,OAAO,CAACC,IAAI,CAAC,qCAAqC,EAAEF,KAAK,CAAC;MAC5D;IACF;EACF;EAEA;;;EAGAG,oBAAoBA,CAACC,KAA2B;IAAA;IAAAtE,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IAC9C,IAAI,CAACmD,UAAU,CAAC,iBAAiB,EAAED,KAAK,CAAC;IAEzC;IAAA;IAAAtE,cAAA,GAAAoB,CAAA;IACA,IAAI,CAACoD,WAAW,CAAC,sBAAsB,EAAEF,KAAK,CAACG,cAAc,EAAE;MAC7DC,gBAAgB,EAAEJ,KAAK,CAACI,gBAAgB;MACxCC,OAAO,EAAEL,KAAK,CAACK,OAAO,CAACC,QAAQ,EAAE;MACjCC,iBAAiB,EAAEP,KAAK,CAACO,iBAAiB,CAACD,QAAQ;KACpD,CAAC;IAEF;IAAA;IAAA5E,cAAA,GAAAoB,CAAA;IACA,IAAI,CAACoD,WAAW,CAAC,gBAAgB,EAAEF,KAAK,CAACQ,QAAQ,EAAE;MACjDC,QAAQ,EAAET,KAAK,CAACS;KACjB,CAAC;IAAC;IAAA/E,cAAA,GAAAoB,CAAA;IAEH+C,OAAO,CAACa,GAAG,CAAC,wBAAwBV,KAAK,CAACW,QAAQ,KAAKX,KAAK,CAACI,gBAAgB,QAAQJ,KAAK,CAACG,cAAc,IAAI,CAAC;EAChH;EAEA;;;EAGAS,qBAAqBA,CAACZ,KAA4B;IAAA;IAAAtE,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IAChD,IAAI,CAACmD,UAAU,CAAC,kBAAkB,EAAED,KAAK,CAAC;IAE1C;IAAA;IAAAtE,cAAA,GAAAoB,CAAA;IACA,IAAI,CAACoD,WAAW,CAAC,UAAU,EAAEF,KAAK,CAACa,QAAQ,EAAE;MAC3CC,YAAY,EAAEd,KAAK,CAACc,YAAY;MAChCP,iBAAiB,EAAEP,KAAK,CAACO,iBAAiB,CAACD,QAAQ,EAAE;MACrDS,cAAc;MAAE;MAAA,CAAArF,cAAA,GAAAsB,CAAA,UAAAgD,KAAK,CAACe,cAAc;MAAA;MAAA,CAAArF,cAAA,GAAAsB,CAAA,UAAI,SAAS;KAClD,CAAC;IAEF;IAAA;IAAAtB,cAAA,GAAAoB,CAAA;IACA,IAAI,CAACoD,WAAW,CAAC,iBAAiB,EAAEF,KAAK,CAACgB,YAAY,CAAC;IAAC;IAAAtF,cAAA,GAAAoB,CAAA;IACxD,IAAI,CAACoD,WAAW,CAAC,gBAAgB,EAAEF,KAAK,CAACiB,WAAW,CAAC;IAAC;IAAAvF,cAAA,GAAAoB,CAAA;IACtD,IAAI,CAACoD,WAAW,CAAC,mBAAmB,EAAEF,KAAK,CAACkB,cAAc,CAAC;IAAC;IAAAxF,cAAA,GAAAoB,CAAA;IAC5D,IAAI,CAACoD,WAAW,CAAC,iBAAiB,EAAEF,KAAK,CAACmB,YAAY,CAAC;IAAC;IAAAzF,cAAA,GAAAoB,CAAA;IAExD+C,OAAO,CAACa,GAAG,CAAC,0BAA0BV,KAAK,CAACa,QAAQ,SAASb,KAAK,CAACc,YAAY,QAAQd,KAAK,CAACG,cAAc,IAAI,CAAC;EAClH;EAEA;;;EAGAiB,qBAAqBA,CAACpB,KAA4B;IAAA;IAAAtE,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IAChD,IAAI,CAACmD,UAAU,CAAC,kBAAkB,EAAED,KAAK,CAAC;IAE1C;IAAA;IAAAtE,cAAA,GAAAoB,CAAA;IACA,IAAI,CAACoD,WAAW,CAAC,eAAe,EAAEF,KAAK,CAACqB,aAAa,EAAE;MACrDC,UAAU,EAAEtB,KAAK,CAACsB,UAAU;MAC5BC,UAAU;MAAE;MAAA,CAAA7F,cAAA,GAAAsB,CAAA,UAAAgD,KAAK,CAACuB,UAAU;MAAA;MAAA,CAAA7F,cAAA,GAAAsB,CAAA,UAAI,SAAS;MACzCwE,eAAe;MAAE;MAAA,CAAA9F,cAAA,GAAAsB,CAAA,UAAAgD,KAAK,CAACwB,eAAe;MAAA;MAAA,CAAA9F,cAAA,GAAAsB,CAAA,UAAI,SAAS;KACpD,CAAC;IAEF;IAAA;IAAAtB,cAAA,GAAAoB,CAAA;IACA,IAAI,CAACoD,WAAW,CAAC,oBAAoB,EAAEF,KAAK,CAACyB,kBAAkB,CAAC;IAEhE;IAAA;IAAA/F,cAAA,GAAAoB,CAAA;IACA,IAAI,CAACoD,WAAW,CAAC,mBAAmB,EAAEF,KAAK,CAAC0B,iBAAiB,CAAC;IAAC;IAAAhG,cAAA,GAAAoB,CAAA;IAC/D,IAAI,CAACoD,WAAW,CAAC,iBAAiB,EAAEF,KAAK,CAAC2B,oBAAoB,CAAC;IAAC;IAAAjG,cAAA,GAAAoB,CAAA;IAEhE+C,OAAO,CAACa,GAAG,CAAC,0BAA0BV,KAAK,CAACqB,aAAa,SAASrB,KAAK,CAACsB,UAAU,QAAQtB,KAAK,CAACG,cAAc,IAAI,CAAC;EACrH;EAEA;;;EAGAyB,sBAAsBA,CAAC5B,KAA6B;IAAA;IAAAtE,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IAClD,IAAI,CAACmD,UAAU,CAAC,mBAAmB,EAAED,KAAK,CAAC;IAE3C;IAAA;IAAAtE,cAAA,GAAAoB,CAAA;IACA,IAAIkD,KAAK,CAAC6B,WAAW,EAAE;MAAA;MAAAnG,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MACrB,IAAI,CAACoD,WAAW,CAAC,mBAAmB,EAAEF,KAAK,CAAC6B,WAAW,EAAE;QACvDC,SAAS,EAAE9B,KAAK,CAAC8B,SAAS;QAC1BC,SAAS,EAAE/B,KAAK,CAAC+B;OAClB,CAAC;IACJ,CAAC;IAAA;IAAA;MAAArG,cAAA,GAAAsB,CAAA;IAAA;IAED;IAAAtB,cAAA,GAAAoB,CAAA;IACA,IAAIkD,KAAK,CAACgC,cAAc,EAAE;MAAA;MAAAtG,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MACxB,IAAI,CAACoD,WAAW,CAAC,uBAAuB,EAAEF,KAAK,CAACgC,cAAc,EAAE;QAC9DF,SAAS,EAAE9B,KAAK,CAAC8B;OAClB,CAAC;IACJ,CAAC;IAAA;IAAA;MAAApG,cAAA,GAAAsB,CAAA;IAAA;IAED;IAAAtB,cAAA,GAAAoB,CAAA;IACA,IAAIkD,KAAK,CAACiC,YAAY,EAAE;MAAA;MAAAvG,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MACtB,IAAI,CAACoD,WAAW,CAAC,qBAAqB,EAAEF,KAAK,CAACiC,YAAY,EAAE;QAC1DH,SAAS,EAAE9B,KAAK,CAAC8B,SAAS;QAC1BC,SAAS,EAAE/B,KAAK,CAAC+B;OAClB,CAAC;IACJ,CAAC;IAAA;IAAA;MAAArG,cAAA,GAAAsB,CAAA;IAAA;IAAAtB,cAAA,GAAAoB,CAAA;IAED+C,OAAO,CAACa,GAAG,CAAC,qBAAqBV,KAAK,CAAC8B,SAAS,KAAK9B,KAAK,CAAC+B,SAAS;IAAO;IAAA,CAAArG,cAAA,GAAAsB,CAAA,UAAAgD,KAAK,CAAC6B,WAAW;IAAA;IAAA,CAAAnG,cAAA,GAAAsB,CAAA,UAAIgD,KAAK,CAACgC,cAAc,SAAQ,CAAC;EAC/H;EAEA;;;EAGAE,0BAA0BA,CAAClC,KAAiC;IAAA;IAAAtE,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IAC1D,IAAI,CAACmD,UAAU,CAAC,uBAAuB,EAAED,KAAK,CAAC;IAE/C;IAAA;IAAAtE,cAAA,GAAAoB,CAAA;IACA,IAAI,CAACoD,WAAW,CAAC,wBAAwB,EAAE,CAAC,EAAE;MAC5CiC,SAAS,EAAEnC,KAAK,CAACmC,SAAS;MAC1B/B,gBAAgB,EAAEJ,KAAK,CAACI,gBAAgB;MACxCgC,QAAQ,EAAEpC,KAAK,CAACoC;KACjB,CAAC;IAAC;IAAA1G,cAAA,GAAAoB,CAAA;IAEH+C,OAAO,CAACD,KAAK,CAAC,8BAA8BI,KAAK,CAACmC,SAAS,MAAMnC,KAAK,CAACqC,YAAY,EAAE,CAAC;EACxF;EAEA;;;EAGAnC,WAAWA,CAAC3D,IAAY,EAAE+F,KAAa,EAAEC,UAAmC;IAAA;IAAA7G,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IAC1E,IAAI,IAAI,CAAC2B,SAAS,EAAE;MAAA;MAAA/C,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MAClB,IAAI,OAAOmB,MAAM,KAAK,WAAW,EAAE;QAAA;QAAAvC,cAAA,GAAAsB,CAAA;QAAAtB,cAAA,GAAAoB,CAAA;QACjC;QACA,IAAI,CAAC2B,SAAS,CAACyB,WAAW,CAAC;UAAE3D,IAAI;UAAEiG,OAAO,EAAEF;QAAK,CAAE,EAAEC,UAAU,CAAC;MAClE,CAAC,MAAM;QAAA;QAAA7G,cAAA,GAAAsB,CAAA;QAAAtB,cAAA,GAAAoB,CAAA;QACL;QACA,IAAI,CAAC2B,SAAS,CAACyB,WAAW,CAAC;UAAE3D,IAAI;UAAE+F;QAAK,CAAE,EAAEC,UAAU,CAAC;MACzD;IACF,CAAC;IAAA;IAAA;MAAA7G,cAAA,GAAAsB,CAAA;IAAA;EACH;EAEA;;;EAGAiD,UAAUA,CAAC1D,IAAY,EAAEgG,UAA+B;IAAA;IAAA7G,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IACtD,IAAI,IAAI,CAAC2B,SAAS,EAAE;MAAA;MAAA/C,cAAA,GAAAsB,CAAA;MAClB;MACA,MAAMyF,gBAAgB;MAAA;MAAA,CAAA/G,cAAA,GAAAoB,CAAA,QAA2B,EAAE;MAAC;MAAApB,cAAA,GAAAoB,CAAA;MACpD4F,MAAM,CAACC,OAAO,CAACJ,UAAU,CAAC,CAACK,OAAO,CAAC,CAAC,CAACC,GAAG,EAAEP,KAAK,CAAC,KAAI;QAAA;QAAA5G,cAAA,GAAAqB,CAAA;QAAArB,cAAA,GAAAoB,CAAA;QAClD;QAAI;QAAA,CAAApB,cAAA,GAAAsB,CAAA,WAAAsF,KAAK,KAAK,IAAI;QAAA;QAAA,CAAA5G,cAAA,GAAAsB,CAAA,WAAIsF,KAAK,KAAKzF,SAAS,GAAE;UAAA;UAAAnB,cAAA,GAAAsB,CAAA;UAAAtB,cAAA,GAAAoB,CAAA;UACzC2F,gBAAgB,CAACI,GAAG,CAAC,GAAG,OAAOP,KAAK,KAAK,QAAQ;UAAA;UAAA,CAAA5G,cAAA,GAAAsB,CAAA,WAAGsF,KAAK;UAAA;UAAA,CAAA5G,cAAA,GAAAsB,CAAA,WAAG8F,IAAI,CAACC,SAAS,CAACT,KAAK,CAAC;QACnF,CAAC;QAAA;QAAA;UAAA5G,cAAA,GAAAsB,CAAA;QAAA;MACH,CAAC,CAAC;MAAC;MAAAtB,cAAA,GAAAoB,CAAA;MAEH,IAAI,OAAOmB,MAAM,KAAK,WAAW,EAAE;QAAA;QAAAvC,cAAA,GAAAsB,CAAA;QAAAtB,cAAA,GAAAoB,CAAA;QACjC;QACA,IAAI,CAAC2B,SAAS,CAACwB,UAAU,CAAC;UAAE1D;QAAI,CAAE,EAAEkG,gBAAgB,CAAC;MACvD,CAAC,MAAM;QAAA;QAAA/G,cAAA,GAAAsB,CAAA;QAAAtB,cAAA,GAAAoB,CAAA;QACL;QACA,IAAI,CAAC2B,SAAS,CAACwB,UAAU,CAAC;UAAE1D,IAAI;UAAEgG,UAAU,EAAEE;QAAgB,CAAE,CAAC;MACnE;IACF,CAAC;IAAA;IAAA;MAAA/G,cAAA,GAAAsB,CAAA;IAAA;IAED;IAAAtB,cAAA,GAAAoB,CAAA;IACA,IAAIuB,OAAO,CAACC,GAAG,CAAC0E,QAAQ,KAAK,aAAa,EAAE;MAAA;MAAAtH,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MAC1C+C,OAAO,CAACa,GAAG,CAAC,aAAanE,IAAI,EAAE,EAAEgG,UAAU,CAAC;IAC9C,CAAC;IAAA;IAAA;MAAA7G,cAAA,GAAAsB,CAAA;IAAA;EACH;EAEA;;;EAGAiG,eAAeA,CACb1G,IAAY,EACZ2G,OAAe,EACfC,SAAiB,EACjBC,QAAgB,EAChB/C,OAAgB,EAChBkC,UAAmC;IAAA;IAAA7G,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IAEnC;IAAI;IAAA,CAAApB,cAAA,GAAAsB,CAAA,eAAI,CAACyB,SAAS;IAAA;IAAA,CAAA/C,cAAA,GAAAsB,CAAA,WAAI,OAAOiB,MAAM,KAAK,WAAW,GAAE;MAAA;MAAAvC,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MACnD;MACA,IAAI,CAAC2B,SAAS,CAACwE,eAAe,CAAC;QAC7B1G,IAAI;QACJ8G,IAAI,EAAEH,OAAO;QACbC,SAAS,EAAE,IAAIG,IAAI,CAACH,SAAS,CAAC;QAC9BC,QAAQ;QACR/C,OAAO;QACPkC;OACD,CAAC;IACJ,CAAC;IAAA;IAAA;MAAA7G,cAAA,GAAAsB,CAAA;IAAA;EACH;EAEA;;;EAGAuG,uBAAuBA,CACrBC,aAAqB,EACrBzB,SAA2B,EAC3B0B,oBAA6C;IAAA;IAAA/H,cAAA,GAAAqB,CAAA;IAE7C,MAAMoG,SAAS;IAAA;IAAA,CAAAzH,cAAA,GAAAoB,CAAA,QAAGwG,IAAI,CAACI,GAAG,EAAE;IAAC;IAAAhI,cAAA,GAAAoB,CAAA;IAE7B,OAAOiF,SAAS,EAAE,CACf4B,IAAI,CAACC,MAAM,IAAG;MAAA;MAAAlI,cAAA,GAAAqB,CAAA;MACb,MAAMqG,QAAQ;MAAA;MAAA,CAAA1H,cAAA,GAAAoB,CAAA,QAAGwG,IAAI,CAACI,GAAG,EAAE,GAAGP,SAAS;MAAC;MAAAzH,cAAA,GAAAoB,CAAA;MAExC,IAAI,CAACoD,WAAW,CAAC,GAAGsD,aAAa,UAAU,EAAEJ,QAAQ,EAAEK,oBAAoB,CAAC;MAAC;MAAA/H,cAAA,GAAAoB,CAAA;MAC7E,IAAI,CAACmG,eAAe,CAClBO,aAAa,EACb,oBAAoB,EACpBL,SAAS,EACTC,QAAQ,EACR,IAAI,EACJK,oBAAoB,CACrB;MAAC;MAAA/H,cAAA,GAAAoB,CAAA;MAEF,OAAO8G,MAAM;IACf,CAAC,CAAC,CACDC,KAAK,CAACjE,KAAK,IAAG;MAAA;MAAAlE,cAAA,GAAAqB,CAAA;MACb,MAAMqG,QAAQ;MAAA;MAAA,CAAA1H,cAAA,GAAAoB,CAAA,QAAGwG,IAAI,CAACI,GAAG,EAAE,GAAGP,SAAS;MAAC;MAAAzH,cAAA,GAAAoB,CAAA;MAExC,IAAI,CAACoD,WAAW,CAAC,GAAGsD,aAAa,UAAU,EAAEJ,QAAQ,EAAAV,MAAA,CAAAoB,MAAA,CAAApB,MAAA,CAAAoB,MAAA,KAChDL,oBAAoB;QACvBpD,OAAO,EAAE;MAAO,GAChB;MAAC;MAAA3E,cAAA,GAAAoB,CAAA;MAEH,IAAI,CAACmG,eAAe,CAClBO,aAAa,EACb,oBAAoB,EACpBL,SAAS,EACTC,QAAQ,EACR,KAAK,EAAAV,MAAA,CAAAoB,MAAA,CAAApB,MAAA,CAAAoB,MAAA,KAEAL,oBAAoB;QACvB7D,KAAK,EAAEA,KAAK,CAACmE;MAAO,GAEvB;MAAC;MAAArI,cAAA,GAAAoB,CAAA;MAEF,MAAM8C,KAAK;IACb,CAAC,CAAC;EACN;EAEA;;;EAGAoE,KAAKA,CAAA;IAAA;IAAAtI,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IACH,IAAI,IAAI,CAAC2B,SAAS,EAAE;MAAA;MAAA/C,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MAClB,IAAI,OAAOmB,MAAM,KAAK,WAAW,EAAE;QAAA;QAAAvC,cAAA,GAAAsB,CAAA;QAAAtB,cAAA,GAAAoB,CAAA;QACjC;QACA,IAAI,CAAC2B,SAAS,CAACuF,KAAK,EAAE;MACxB,CAAC,MAAM;QAAA;QAAAtI,cAAA,GAAAsB,CAAA;QAAAtB,cAAA,GAAAoB,CAAA;QACL;QACA,IAAI,CAAC2B,SAAS,CAACuF,KAAK,EAAE;MACxB;IACF,CAAC;IAAA;IAAA;MAAAtI,cAAA,GAAAsB,CAAA;IAAA;EACH;;AAGF;AAAA;AAAAtB,cAAA,GAAAoB,CAAA;AACaa,OAAA,CAAAsG,yBAAyB,GAAG,IAAIlG,yBAAyB,EAAE;AAExE;AACA,SAAgBH,0BAA0BA,CACxCsG,MAAc,EACdvD,QAAgB,EAChBH,QAAgB,EAChBC,QAAgB,EAChBL,gBAA0D,EAC1DD,cAAsB,EACtBE,OAAgB,EAChB8D,OAAA;AAAA;AAAA,CAAAzI,cAAA,GAAAsB,CAAA,WAAyC,EAAE;EAAA;EAAAtB,cAAA,GAAAqB,CAAA;EAAArB,cAAA,GAAAoB,CAAA;EAE3C,OAAA4F,MAAA,CAAAoB,MAAA;IACEI,MAAM;IACNvD,QAAQ;IACRH,QAAQ;IACRC,QAAQ;IACRL,gBAAgB;IAChBD,cAAc;IACdE,OAAO;IACP+D,eAAe,EAAE,UAAU;IAC3B7D,iBAAiB,EAAE;EAAK,GACrB4D,OAAO;AAEd;AAEA,SAAgBtG,2BAA2BA,CACzCqG,MAAc,EACdrD,QAAgB,EAChBC,YAAoB,EACpBX,cAAsB,EACtBkE,eAKC,EACDF,OAAA;AAAA;AAAA,CAAAzI,cAAA,GAAAsB,CAAA,WAA0C,EAAE;EAAA;EAAAtB,cAAA,GAAAqB,CAAA;EAAArB,cAAA,GAAAoB,CAAA;EAE5C,OAAA4F,MAAA,CAAAoB,MAAA,CAAApB,MAAA,CAAAoB,MAAA,CAAApB,MAAA,CAAAoB,MAAA;IACEI,MAAM;IACNrD,QAAQ;IACRC,YAAY;IACZX;EAAc,GACXkE,eAAe;IAClB9D,iBAAiB,EAAE,KAAK;IACxB+D,oBAAoB,EAAE,CAAC;IACvBC,mBAAmB,EAAE,CAAC;IACtBlE,OAAO,EAAE;EAAI,IACV8D,OAAO;AAEd;AAEA,SAAgBrG,2BAA2BA,CACzCoG,MAAc,EACd7C,aAAqB,EACrBC,UAAkB,EAClBnB,cAAsB,EACtBkE,eAMC,EACDF,OAAA;AAAA;AAAA,CAAAzI,cAAA,GAAAsB,CAAA,WAA0C,EAAE;EAAA;EAAAtB,cAAA,GAAAqB,CAAA;EAAArB,cAAA,GAAAoB,CAAA;EAE5C,OAAA4F,MAAA,CAAAoB,MAAA,CAAApB,MAAA,CAAAoB,MAAA,CAAApB,MAAA,CAAAoB,MAAA;IACEI,MAAM;IACN7C,aAAa;IACbC,UAAU;IACVnB;EAAc,GACXkE,eAAe;IAClB3C,iBAAiB,EAAE,CAAC;IACpBC,oBAAoB,EAAE,CAAC;IACvBtB,OAAO,EAAE;EAAI,IACV8D,OAAO;AAEd","ignoreList":[]}