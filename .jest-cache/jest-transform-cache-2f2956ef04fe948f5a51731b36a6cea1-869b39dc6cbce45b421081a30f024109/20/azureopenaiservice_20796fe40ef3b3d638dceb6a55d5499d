f99acabf96db8609230c133030d4206e
"use strict";

/**
 * @deprecated This service is deprecated due to security concerns.
 * It attempts to initialize Azure OpenAI from browser environment variables,
 * which exposes credentials in the client-side code.
 *
 * Use azure-openai-service-server.ts for server-side API routes instead.
 * This file is kept for backward compatibility but should not be used in production.
 */
/* istanbul ignore next */
function cov_18shj8vvy8() {
  var path = "/Users/dikshantvashistha/PrepBettr/azure/lib/services/azure-openai-service.ts";
  var hash = "c9fefe713e16795483f425e03d26b0ab0986aa86";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dikshantvashistha/PrepBettr/azure/lib/services/azure-openai-service.ts",
    statementMap: {
      "0": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 10,
          column: 62
        }
      },
      "1": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 65
        }
      },
      "2": {
        start: {
          line: 12,
          column: 17
        },
        end: {
          line: 12,
          column: 34
        }
      },
      "3": {
        start: {
          line: 13,
          column: 31
        },
        end: {
          line: 13,
          column: 75
        }
      },
      "4": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 27
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 35
        }
      },
      "6": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 40
        }
      },
      "7": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 38
        }
      },
      "8": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 25,
          column: 10
        }
      },
      "9": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 33,
          column: 10
        }
      },
      "10": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 29
        }
      },
      "11": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 35
        }
      },
      "12": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 63,
          column: 9
        }
      },
      "13": {
        start: {
          line: 42,
          column: 28
        },
        end: {
          line: 42,
          column: 81
        }
      },
      "14": {
        start: {
          line: 43,
          column: 12
        },
        end: {
          line: 46,
          column: 13
        }
      },
      "15": {
        start: {
          line: 44,
          column: 16
        },
        end: {
          line: 44,
          column: 74
        }
      },
      "16": {
        start: {
          line: 45,
          column: 16
        },
        end: {
          line: 45,
          column: 29
        }
      },
      "17": {
        start: {
          line: 47,
          column: 12
        },
        end: {
          line: 53,
          column: 15
        }
      },
      "18": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 55,
          column: 65
        }
      },
      "19": {
        start: {
          line: 56,
          column: 12
        },
        end: {
          line: 56,
          column: 38
        }
      },
      "20": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 57,
          column: 62
        }
      },
      "21": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 58,
          column: 24
        }
      },
      "22": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 61,
          column: 81
        }
      },
      "23": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 62,
          column: 25
        }
      },
      "24": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 73,
          column: 526
        }
      },
      "25": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 74,
          column: 76
        }
      },
      "26": {
        start: {
          line: 80,
          column: 71
        },
        end: {
          line: 80,
          column: 92
        }
      },
      "27": {
        start: {
          line: 81,
          column: 92
        },
        end: {
          line: 81,
          column: 113
        }
      },
      "28": {
        start: {
          line: 82,
          column: 27
        },
        end: {
          line: 82,
          column: 107
        }
      },
      "29": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 83,
          column: 47
        }
      },
      "30": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 84,
          column: 59
        }
      },
      "31": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 85,
          column: 55
        }
      },
      "32": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 86,
          column: 70
        }
      },
      "33": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 87,
          column: 57
        }
      },
      "34": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 88,
          column: 50
        }
      },
      "35": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 89,
          column: 99
        }
      },
      "36": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 90,
          column: 78
        }
      },
      "37": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 91,
          column: 73
        }
      },
      "38": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 92,
          column: 66
        }
      },
      "39": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 93,
          column: 90
        }
      },
      "40": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 94,
          column: 52
        }
      },
      "41": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 95,
          column: 104
        }
      },
      "42": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 96,
          column: 124
        }
      },
      "43": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 97,
          column: 97
        }
      },
      "44": {
        start: {
          line: 98,
          column: 8
        },
        end: {
          line: 98,
          column: 109
        }
      },
      "45": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 99,
          column: 82
        }
      },
      "46": {
        start: {
          line: 100,
          column: 8
        },
        end: {
          line: 102,
          column: 9
        }
      },
      "47": {
        start: {
          line: 101,
          column: 12
        },
        end: {
          line: 101,
          column: 54
        }
      },
      "48": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 105,
          column: 9
        }
      },
      "49": {
        start: {
          line: 104,
          column: 12
        },
        end: {
          line: 104,
          column: 52
        }
      },
      "50": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 108,
          column: 9
        }
      },
      "51": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 107,
          column: 64
        }
      },
      "52": {
        start: {
          line: 109,
          column: 8
        },
        end: {
          line: 118,
          column: 9
        }
      },
      "53": {
        start: {
          line: 111,
          column: 16
        },
        end: {
          line: 111,
          column: 228
        }
      },
      "54": {
        start: {
          line: 112,
          column: 16
        },
        end: {
          line: 112,
          column: 22
        }
      },
      "55": {
        start: {
          line: 114,
          column: 16
        },
        end: {
          line: 114,
          column: 182
        }
      },
      "56": {
        start: {
          line: 115,
          column: 16
        },
        end: {
          line: 115,
          column: 22
        }
      },
      "57": {
        start: {
          line: 117,
          column: 16
        },
        end: {
          line: 117,
          column: 202
        }
      },
      "58": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 119,
          column: 98
        }
      },
      "59": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 120,
          column: 28
        }
      },
      "60": {
        start: {
          line: 126,
          column: 114
        },
        end: {
          line: 126,
          column: 135
        }
      },
      "61": {
        start: {
          line: 127,
          column: 25
        },
        end: {
          line: 127,
          column: 1015
        }
      },
      "62": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 130,
          column: 9
        }
      },
      "63": {
        start: {
          line: 129,
          column: 12
        },
        end: {
          line: 129,
          column: 52
        }
      },
      "64": {
        start: {
          line: 131,
          column: 8
        },
        end: {
          line: 133,
          column: 9
        }
      },
      "65": {
        start: {
          line: 132,
          column: 12
        },
        end: {
          line: 132,
          column: 50
        }
      },
      "66": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 136,
          column: 9
        }
      },
      "67": {
        start: {
          line: 135,
          column: 12
        },
        end: {
          line: 135,
          column: 62
        }
      },
      "68": {
        start: {
          line: 137,
          column: 8
        },
        end: {
          line: 146,
          column: 9
        }
      },
      "69": {
        start: {
          line: 139,
          column: 16
        },
        end: {
          line: 139,
          column: 179
        }
      },
      "70": {
        start: {
          line: 140,
          column: 16
        },
        end: {
          line: 140,
          column: 22
        }
      },
      "71": {
        start: {
          line: 142,
          column: 16
        },
        end: {
          line: 142,
          column: 171
        }
      },
      "72": {
        start: {
          line: 143,
          column: 16
        },
        end: {
          line: 143,
          column: 22
        }
      },
      "73": {
        start: {
          line: 145,
          column: 16
        },
        end: {
          line: 145,
          column: 124
        }
      },
      "74": {
        start: {
          line: 147,
          column: 8
        },
        end: {
          line: 147,
          column: 96
        }
      },
      "75": {
        start: {
          line: 148,
          column: 8
        },
        end: {
          line: 148,
          column: 26
        }
      },
      "76": {
        start: {
          line: 155,
          column: 8
        },
        end: {
          line: 160,
          column: 9
        }
      },
      "77": {
        start: {
          line: 156,
          column: 32
        },
        end: {
          line: 156,
          column: 55
        }
      },
      "78": {
        start: {
          line: 157,
          column: 12
        },
        end: {
          line: 159,
          column: 13
        }
      },
      "79": {
        start: {
          line: 158,
          column: 16
        },
        end: {
          line: 158,
          column: 28
        }
      },
      "80": {
        start: {
          line: 161,
          column: 8
        },
        end: {
          line: 161,
          column: 27
        }
      },
      "81": {
        start: {
          line: 167,
          column: 8
        },
        end: {
          line: 169,
          column: 9
        }
      },
      "82": {
        start: {
          line: 168,
          column: 12
        },
        end: {
          line: 168,
          column: 68
        }
      },
      "83": {
        start: {
          line: 171,
          column: 8
        },
        end: {
          line: 171,
          column: 38
        }
      },
      "84": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 172,
          column: 29
        }
      },
      "85": {
        start: {
          line: 173,
          column: 8
        },
        end: {
          line: 173,
          column: 35
        }
      },
      "86": {
        start: {
          line: 175,
          column: 8
        },
        end: {
          line: 175,
          column: 59
        }
      },
      "87": {
        start: {
          line: 176,
          column: 8
        },
        end: {
          line: 176,
          column: 55
        }
      },
      "88": {
        start: {
          line: 178,
          column: 25
        },
        end: {
          line: 178,
          column: 129
        }
      },
      "89": {
        start: {
          line: 179,
          column: 30
        },
        end: {
          line: 179,
          column: 53
        }
      },
      "90": {
        start: {
          line: 180,
          column: 31
        },
        end: {
          line: 180,
          column: 64
        }
      },
      "91": {
        start: {
          line: 181,
          column: 8
        },
        end: {
          line: 185,
          column: 10
        }
      },
      "92": {
        start: {
          line: 192,
          column: 29
        },
        end: {
          line: 192,
          column: 50
        }
      },
      "93": {
        start: {
          line: 193,
          column: 23
        },
        end: {
          line: 193,
          column: 25
        }
      },
      "94": {
        start: {
          line: 194,
          column: 8
        },
        end: {
          line: 196,
          column: 9
        }
      },
      "95": {
        start: {
          line: 195,
          column: 12
        },
        end: {
          line: 195,
          column: 67
        }
      },
      "96": {
        start: {
          line: 197,
          column: 8
        },
        end: {
          line: 206,
          column: 9
        }
      },
      "97": {
        start: {
          line: 199,
          column: 29
        },
        end: {
          line: 199,
          column: 67
        }
      },
      "98": {
        start: {
          line: 200,
          column: 12
        },
        end: {
          line: 200,
          column: 39
        }
      },
      "99": {
        start: {
          line: 203,
          column: 12
        },
        end: {
          line: 203,
          column: 72
        }
      },
      "100": {
        start: {
          line: 205,
          column: 12
        },
        end: {
          line: 205,
          column: 57
        }
      },
      "101": {
        start: {
          line: 213,
          column: 8
        },
        end: {
          line: 215,
          column: 9
        }
      },
      "102": {
        start: {
          line: 214,
          column: 12
        },
        end: {
          line: 214,
          column: 68
        }
      },
      "103": {
        start: {
          line: 217,
          column: 8
        },
        end: {
          line: 260,
          column: 9
        }
      },
      "104": {
        start: {
          line: 219,
          column: 12
        },
        end: {
          line: 259,
          column: 13
        }
      },
      "105": {
        start: {
          line: 221,
          column: 37
        },
        end: {
          line: 221,
          column: 114
        }
      },
      "106": {
        start: {
          line: 222,
          column: 16
        },
        end: {
          line: 222,
          column: 85
        }
      },
      "107": {
        start: {
          line: 224,
          column: 16
        },
        end: {
          line: 224,
          column: 35
        }
      },
      "108": {
        start: {
          line: 226,
          column: 16
        },
        end: {
          line: 258,
          column: 17
        }
      },
      "109": {
        start: {
          line: 227,
          column: 41
        },
        end: {
          line: 227,
          column: 79
        }
      },
      "110": {
        start: {
          line: 228,
          column: 20
        },
        end: {
          line: 232,
          column: 22
        }
      },
      "111": {
        start: {
          line: 236,
          column: 20
        },
        end: {
          line: 236,
          column: 70
        }
      },
      "112": {
        start: {
          line: 238,
          column: 20
        },
        end: {
          line: 238,
          column: 67
        }
      },
      "113": {
        start: {
          line: 240,
          column: 42
        },
        end: {
          line: 240,
          column: 67
        }
      },
      "114": {
        start: {
          line: 242,
          column: 20
        },
        end: {
          line: 244,
          column: 22
        }
      },
      "115": {
        start: {
          line: 246,
          column: 47
        },
        end: {
          line: 246,
          column: 98
        }
      },
      "116": {
        start: {
          line: 247,
          column: 20
        },
        end: {
          line: 247,
          column: 103
        }
      },
      "117": {
        start: {
          line: 249,
          column: 43
        },
        end: {
          line: 249,
          column: 73
        }
      },
      "118": {
        start: {
          line: 250,
          column: 20
        },
        end: {
          line: 250,
          column: 98
        }
      },
      "119": {
        start: {
          line: 252,
          column: 20
        },
        end: {
          line: 252,
          column: 67
        }
      },
      "120": {
        start: {
          line: 253,
          column: 20
        },
        end: {
          line: 257,
          column: 22
        }
      },
      "121": {
        start: {
          line: 263,
          column: 8
        },
        end: {
          line: 263,
          column: 79
        }
      },
      "122": {
        start: {
          line: 264,
          column: 8
        },
        end: {
          line: 292,
          column: 9
        }
      },
      "123": {
        start: {
          line: 265,
          column: 31
        },
        end: {
          line: 273,
          column: 14
        }
      },
      "124": {
        start: {
          line: 274,
          column: 38
        },
        end: {
          line: 274,
          column: 240
        }
      },
      "125": {
        start: {
          line: 276,
          column: 12
        },
        end: {
          line: 276,
          column: 93
        }
      },
      "126": {
        start: {
          line: 278,
          column: 41
        },
        end: {
          line: 278,
          column: 94
        }
      },
      "127": {
        start: {
          line: 279,
          column: 33
        },
        end: {
          line: 279,
          column: 73
        }
      },
      "128": {
        start: {
          line: 281,
          column: 12
        },
        end: {
          line: 281,
          column: 78
        }
      },
      "129": {
        start: {
          line: 282,
          column: 12
        },
        end: {
          line: 287,
          column: 14
        }
      },
      "130": {
        start: {
          line: 290,
          column: 12
        },
        end: {
          line: 290,
          column: 72
        }
      },
      "131": {
        start: {
          line: 291,
          column: 12
        },
        end: {
          line: 291,
          column: 59
        }
      },
      "132": {
        start: {
          line: 298,
          column: 25
        },
        end: {
          line: 298,
          column: 46
        }
      },
      "133": {
        start: {
          line: 299,
          column: 8
        },
        end: {
          line: 318,
          column: 9
        }
      },
      "134": {
        start: {
          line: 301,
          column: 16
        },
        end: {
          line: 305,
          column: 18
        }
      },
      "135": {
        start: {
          line: 307,
          column: 16
        },
        end: {
          line: 311,
          column: 18
        }
      },
      "136": {
        start: {
          line: 313,
          column: 16
        },
        end: {
          line: 317,
          column: 18
        }
      },
      "137": {
        start: {
          line: 326,
          column: 8
        },
        end: {
          line: 328,
          column: 9
        }
      },
      "138": {
        start: {
          line: 327,
          column: 12
        },
        end: {
          line: 327,
          column: 68
        }
      },
      "139": {
        start: {
          line: 330,
          column: 47
        },
        end: {
          line: 330,
          column: 68
        }
      },
      "140": {
        start: {
          line: 331,
          column: 71
        },
        end: {
          line: 331,
          column: 92
        }
      },
      "141": {
        start: {
          line: 332,
          column: 29
        },
        end: {
          line: 332,
          column: 72
        }
      },
      "142": {
        start: {
          line: 334,
          column: 8
        },
        end: {
          line: 364,
          column: 9
        }
      },
      "143": {
        start: {
          line: 336,
          column: 16
        },
        end: {
          line: 336,
          column: 85
        }
      },
      "144": {
        start: {
          line: 337,
          column: 16
        },
        end: {
          line: 337,
          column: 115
        }
      },
      "145": {
        start: {
          line: 338,
          column: 16
        },
        end: {
          line: 338,
          column: 97
        }
      },
      "146": {
        start: {
          line: 339,
          column: 16
        },
        end: {
          line: 339,
          column: 84
        }
      },
      "147": {
        start: {
          line: 340,
          column: 16
        },
        end: {
          line: 340,
          column: 76
        }
      },
      "148": {
        start: {
          line: 341,
          column: 16
        },
        end: {
          line: 341,
          column: 75
        }
      },
      "149": {
        start: {
          line: 342,
          column: 16
        },
        end: {
          line: 342,
          column: 75
        }
      },
      "150": {
        start: {
          line: 343,
          column: 16
        },
        end: {
          line: 343,
          column: 74
        }
      },
      "151": {
        start: {
          line: 344,
          column: 16
        },
        end: {
          line: 344,
          column: 22
        }
      },
      "152": {
        start: {
          line: 346,
          column: 16
        },
        end: {
          line: 346,
          column: 88
        }
      },
      "153": {
        start: {
          line: 347,
          column: 16
        },
        end: {
          line: 347,
          column: 86
        }
      },
      "154": {
        start: {
          line: 348,
          column: 16
        },
        end: {
          line: 348,
          column: 89
        }
      },
      "155": {
        start: {
          line: 349,
          column: 16
        },
        end: {
          line: 349,
          column: 72
        }
      },
      "156": {
        start: {
          line: 350,
          column: 16
        },
        end: {
          line: 350,
          column: 75
        }
      },
      "157": {
        start: {
          line: 351,
          column: 16
        },
        end: {
          line: 351,
          column: 69
        }
      },
      "158": {
        start: {
          line: 352,
          column: 16
        },
        end: {
          line: 352,
          column: 70
        }
      },
      "159": {
        start: {
          line: 353,
          column: 16
        },
        end: {
          line: 353,
          column: 68
        }
      },
      "160": {
        start: {
          line: 354,
          column: 16
        },
        end: {
          line: 354,
          column: 22
        }
      },
      "161": {
        start: {
          line: 356,
          column: 16
        },
        end: {
          line: 356,
          column: 82
        }
      },
      "162": {
        start: {
          line: 357,
          column: 16
        },
        end: {
          line: 357,
          column: 78
        }
      },
      "163": {
        start: {
          line: 358,
          column: 16
        },
        end: {
          line: 358,
          column: 86
        }
      },
      "164": {
        start: {
          line: 359,
          column: 16
        },
        end: {
          line: 359,
          column: 61
        }
      },
      "165": {
        start: {
          line: 360,
          column: 16
        },
        end: {
          line: 360,
          column: 71
        }
      },
      "166": {
        start: {
          line: 361,
          column: 16
        },
        end: {
          line: 361,
          column: 75
        }
      },
      "167": {
        start: {
          line: 362,
          column: 16
        },
        end: {
          line: 362,
          column: 67
        }
      },
      "168": {
        start: {
          line: 363,
          column: 16
        },
        end: {
          line: 363,
          column: 76
        }
      },
      "169": {
        start: {
          line: 366,
          column: 8
        },
        end: {
          line: 368,
          column: 9
        }
      },
      "170": {
        start: {
          line: 367,
          column: 12
        },
        end: {
          line: 367,
          column: 67
        }
      },
      "171": {
        start: {
          line: 370,
          column: 8
        },
        end: {
          line: 372,
          column: 9
        }
      },
      "172": {
        start: {
          line: 371,
          column: 12
        },
        end: {
          line: 371,
          column: 79
        }
      },
      "173": {
        start: {
          line: 374,
          column: 8
        },
        end: {
          line: 374,
          column: 48
        }
      },
      "174": {
        start: {
          line: 375,
          column: 8
        },
        end: {
          line: 375,
          column: 74
        }
      },
      "175": {
        start: {
          line: 376,
          column: 8
        },
        end: {
          line: 376,
          column: 55
        }
      },
      "176": {
        start: {
          line: 377,
          column: 8
        },
        end: {
          line: 377,
          column: 55
        }
      },
      "177": {
        start: {
          line: 378,
          column: 8
        },
        end: {
          line: 378,
          column: 81
        }
      },
      "178": {
        start: {
          line: 380,
          column: 30
        },
        end: {
          line: 380,
          column: 64
        }
      },
      "179": {
        start: {
          line: 381,
          column: 8
        },
        end: {
          line: 383,
          column: 9
        }
      },
      "180": {
        start: {
          line: 382,
          column: 12
        },
        end: {
          line: 382,
          column: 97
        }
      },
      "181": {
        start: {
          line: 384,
          column: 8
        },
        end: {
          line: 414,
          column: 9
        }
      },
      "182": {
        start: {
          line: 386,
          column: 29
        },
        end: {
          line: 396,
          column: 13
        }
      },
      "183": {
        start: {
          line: 397,
          column: 31
        },
        end: {
          line: 405,
          column: 14
        }
      },
      "184": {
        start: {
          line: 406,
          column: 29
        },
        end: {
          line: 407,
          column: 42
        }
      },
      "185": {
        start: {
          line: 408,
          column: 12
        },
        end: {
          line: 408,
          column: 35
        }
      },
      "186": {
        start: {
          line: 411,
          column: 12
        },
        end: {
          line: 411,
          column: 75
        }
      },
      "187": {
        start: {
          line: 413,
          column: 12
        },
        end: {
          line: 413,
          column: 46
        }
      },
      "188": {
        start: {
          line: 420,
          column: 25
        },
        end: {
          line: 420,
          column: 46
        }
      },
      "189": {
        start: {
          line: 421,
          column: 60
        },
        end: {
          line: 421,
          column: 81
        }
      },
      "190": {
        start: {
          line: 422,
          column: 8
        },
        end: {
          line: 429,
          column: 9
        }
      },
      "191": {
        start: {
          line: 424,
          column: 16
        },
        end: {
          line: 424,
          column: 147
        }
      },
      "192": {
        start: {
          line: 426,
          column: 16
        },
        end: {
          line: 426,
          column: 131
        }
      },
      "193": {
        start: {
          line: 428,
          column: 16
        },
        end: {
          line: 428,
          column: 118
        }
      },
      "194": {
        start: {
          line: 436,
          column: 8
        },
        end: {
          line: 438,
          column: 9
        }
      },
      "195": {
        start: {
          line: 437,
          column: 12
        },
        end: {
          line: 437,
          column: 68
        }
      },
      "196": {
        start: {
          line: 439,
          column: 8
        },
        end: {
          line: 456,
          column: 9
        }
      },
      "197": {
        start: {
          line: 440,
          column: 31
        },
        end: {
          line: 450,
          column: 14
        }
      },
      "198": {
        start: {
          line: 451,
          column: 12
        },
        end: {
          line: 451,
          column: 189
        }
      },
      "199": {
        start: {
          line: 454,
          column: 12
        },
        end: {
          line: 454,
          column: 67
        }
      },
      "200": {
        start: {
          line: 455,
          column: 12
        },
        end: {
          line: 455,
          column: 61
        }
      },
      "201": {
        start: {
          line: 463,
          column: 8
        },
        end: {
          line: 465,
          column: 9
        }
      },
      "202": {
        start: {
          line: 464,
          column: 12
        },
        end: {
          line: 464,
          column: 68
        }
      },
      "203": {
        start: {
          line: 466,
          column: 30
        },
        end: {
          line: 469,
          column: 9
        }
      },
      "204": {
        start: {
          line: 470,
          column: 8
        },
        end: {
          line: 482,
          column: 9
        }
      },
      "205": {
        start: {
          line: 471,
          column: 31
        },
        end: {
          line: 476,
          column: 14
        }
      },
      "206": {
        start: {
          line: 477,
          column: 12
        },
        end: {
          line: 477,
          column: 186
        }
      },
      "207": {
        start: {
          line: 480,
          column: 12
        },
        end: {
          line: 480,
          column: 74
        }
      },
      "208": {
        start: {
          line: 481,
          column: 12
        },
        end: {
          line: 481,
          column: 58
        }
      },
      "209": {
        start: {
          line: 488,
          column: 8
        },
        end: {
          line: 488,
          column: 77
        }
      },
      "210": {
        start: {
          line: 488,
          column: 54
        },
        end: {
          line: 488,
          column: 75
        }
      },
      "211": {
        start: {
          line: 494,
          column: 8
        },
        end: {
          line: 494,
          column: 38
        }
      },
      "212": {
        start: {
          line: 495,
          column: 8
        },
        end: {
          line: 495,
          column: 55
        }
      },
      "213": {
        start: {
          line: 496,
          column: 8
        },
        end: {
          line: 496,
          column: 59
        }
      },
      "214": {
        start: {
          line: 497,
          column: 8
        },
        end: {
          line: 497,
          column: 29
        }
      },
      "215": {
        start: {
          line: 498,
          column: 8
        },
        end: {
          line: 498,
          column: 35
        }
      },
      "216": {
        start: {
          line: 499,
          column: 8
        },
        end: {
          line: 499,
          column: 55
        }
      },
      "217": {
        start: {
          line: 505,
          column: 8
        },
        end: {
          line: 505,
          column: 58
        }
      },
      "218": {
        start: {
          line: 511,
          column: 8
        },
        end: {
          line: 511,
          column: 27
        }
      },
      "219": {
        start: {
          line: 512,
          column: 8
        },
        end: {
          line: 512,
          column: 35
        }
      },
      "220": {
        start: {
          line: 513,
          column: 8
        },
        end: {
          line: 513,
          column: 38
        }
      },
      "221": {
        start: {
          line: 514,
          column: 8
        },
        end: {
          line: 514,
          column: 56
        }
      },
      "222": {
        start: {
          line: 517,
          column: 0
        },
        end: {
          line: 517,
          column: 48
        }
      },
      "223": {
        start: {
          line: 519,
          column: 0
        },
        end: {
          line: 519,
          column: 54
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 18
          },
          end: {
            line: 36,
            column: 5
          }
        },
        line: 15
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 40,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        },
        loc: {
          start: {
            line: 40,
            column: 23
          },
          end: {
            line: 64,
            column: 5
          }
        },
        line: 40
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 68,
            column: 4
          },
          end: {
            line: 68,
            column: 5
          }
        },
        loc: {
          start: {
            line: 68,
            column: 33
          },
          end: {
            line: 75,
            column: 5
          }
        },
        line: 68
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 79,
            column: 4
          },
          end: {
            line: 79,
            column: 5
          }
        },
        loc: {
          start: {
            line: 79,
            column: 25
          },
          end: {
            line: 121,
            column: 5
          }
        },
        line: 79
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 125,
            column: 4
          },
          end: {
            line: 125,
            column: 5
          }
        },
        loc: {
          start: {
            line: 125,
            column: 22
          },
          end: {
            line: 149,
            column: 5
          }
        },
        line: 125
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 154,
            column: 4
          },
          end: {
            line: 154,
            column: 5
          }
        },
        loc: {
          start: {
            line: 154,
            column: 22
          },
          end: {
            line: 162,
            column: 5
          }
        },
        line: 154
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 166,
            column: 4
          },
          end: {
            line: 166,
            column: 5
          }
        },
        loc: {
          start: {
            line: 166,
            column: 39
          },
          end: {
            line: 186,
            column: 5
          }
        },
        line: 166
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 191,
            column: 4
          },
          end: {
            line: 191,
            column: 5
          }
        },
        loc: {
          start: {
            line: 191,
            column: 30
          },
          end: {
            line: 207,
            column: 5
          }
        },
        line: 191
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 211,
            column: 4
          },
          end: {
            line: 211,
            column: 5
          }
        },
        loc: {
          start: {
            line: 211,
            column: 44
          },
          end: {
            line: 293,
            column: 5
          }
        },
        line: 211
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 297,
            column: 4
          },
          end: {
            line: 297,
            column: 5
          }
        },
        loc: {
          start: {
            line: 297,
            column: 34
          },
          end: {
            line: 319,
            column: 5
          }
        },
        line: 297
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 324,
            column: 4
          },
          end: {
            line: 324,
            column: 5
          }
        },
        loc: {
          start: {
            line: 324,
            column: 38
          },
          end: {
            line: 415,
            column: 5
          }
        },
        line: 324
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 419,
            column: 4
          },
          end: {
            line: 419,
            column: 5
          }
        },
        loc: {
          start: {
            line: 419,
            column: 26
          },
          end: {
            line: 430,
            column: 5
          }
        },
        line: 419
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 434,
            column: 4
          },
          end: {
            line: 434,
            column: 5
          }
        },
        loc: {
          start: {
            line: 434,
            column: 37
          },
          end: {
            line: 457,
            column: 5
          }
        },
        line: 434
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 461,
            column: 4
          },
          end: {
            line: 461,
            column: 5
          }
        },
        loc: {
          start: {
            line: 461,
            column: 37
          },
          end: {
            line: 483,
            column: 5
          }
        },
        line: 461
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 487,
            column: 4
          },
          end: {
            line: 487,
            column: 5
          }
        },
        loc: {
          start: {
            line: 487,
            column: 29
          },
          end: {
            line: 489,
            column: 5
          }
        },
        line: 487
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 488,
            column: 47
          },
          end: {
            line: 488,
            column: 48
          }
        },
        loc: {
          start: {
            line: 488,
            column: 54
          },
          end: {
            line: 488,
            column: 75
          }
        },
        line: 488
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 493,
            column: 4
          },
          end: {
            line: 493,
            column: 5
          }
        },
        loc: {
          start: {
            line: 493,
            column: 24
          },
          end: {
            line: 500,
            column: 5
          }
        },
        line: 493
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 504,
            column: 4
          },
          end: {
            line: 504,
            column: 5
          }
        },
        loc: {
          start: {
            line: 504,
            column: 14
          },
          end: {
            line: 506,
            column: 5
          }
        },
        line: 504
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 510,
            column: 4
          },
          end: {
            line: 510,
            column: 5
          }
        },
        loc: {
          start: {
            line: 510,
            column: 14
          },
          end: {
            line: 515,
            column: 5
          }
        },
        line: 510
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 43,
            column: 12
          },
          end: {
            line: 46,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 12
          },
          end: {
            line: 46,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 43
      },
      "1": {
        loc: {
          start: {
            line: 43,
            column: 16
          },
          end: {
            line: 43,
            column: 105
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 43,
            column: 16
          },
          end: {
            line: 43,
            column: 39
          }
        }, {
          start: {
            line: 43,
            column: 43
          },
          end: {
            line: 43,
            column: 71
          }
        }, {
          start: {
            line: 43,
            column: 75
          },
          end: {
            line: 43,
            column: 105
          }
        }],
        line: 43
      },
      "2": {
        loc: {
          start: {
            line: 73,
            column: 34
          },
          end: {
            line: 73,
            column: 191
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 73,
            column: 181
          },
          end: {
            line: 73,
            column: 183
          }
        }, {
          start: {
            line: 73,
            column: 186
          },
          end: {
            line: 73,
            column: 191
          }
        }],
        line: 73
      },
      "3": {
        loc: {
          start: {
            line: 73,
            column: 34
          },
          end: {
            line: 73,
            column: 178
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 73,
            column: 34
          },
          end: {
            line: 73,
            column: 161
          }
        }, {
          start: {
            line: 73,
            column: 165
          },
          end: {
            line: 73,
            column: 178
          }
        }],
        line: 73
      },
      "4": {
        loc: {
          start: {
            line: 73,
            column: 40
          },
          end: {
            line: 73,
            column: 151
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 73,
            column: 104
          },
          end: {
            line: 73,
            column: 106
          }
        }, {
          start: {
            line: 73,
            column: 109
          },
          end: {
            line: 73,
            column: 151
          }
        }],
        line: 73
      },
      "5": {
        loc: {
          start: {
            line: 73,
            column: 40
          },
          end: {
            line: 73,
            column: 101
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 73,
            column: 40
          },
          end: {
            line: 73,
            column: 84
          }
        }, {
          start: {
            line: 73,
            column: 88
          },
          end: {
            line: 73,
            column: 101
          }
        }],
        line: 73
      },
      "6": {
        loc: {
          start: {
            line: 73,
            column: 215
          },
          end: {
            line: 73,
            column: 368
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 73,
            column: 362
          },
          end: {
            line: 73,
            column: 364
          }
        }, {
          start: {
            line: 73,
            column: 367
          },
          end: {
            line: 73,
            column: 368
          }
        }],
        line: 73
      },
      "7": {
        loc: {
          start: {
            line: 73,
            column: 215
          },
          end: {
            line: 73,
            column: 359
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 73,
            column: 215
          },
          end: {
            line: 73,
            column: 342
          }
        }, {
          start: {
            line: 73,
            column: 346
          },
          end: {
            line: 73,
            column: 359
          }
        }],
        line: 73
      },
      "8": {
        loc: {
          start: {
            line: 73,
            column: 221
          },
          end: {
            line: 73,
            column: 332
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 73,
            column: 285
          },
          end: {
            line: 73,
            column: 287
          }
        }, {
          start: {
            line: 73,
            column: 290
          },
          end: {
            line: 73,
            column: 332
          }
        }],
        line: 73
      },
      "9": {
        loc: {
          start: {
            line: 73,
            column: 221
          },
          end: {
            line: 73,
            column: 282
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 73,
            column: 221
          },
          end: {
            line: 73,
            column: 265
          }
        }, {
          start: {
            line: 73,
            column: 269
          },
          end: {
            line: 73,
            column: 282
          }
        }],
        line: 73
      },
      "10": {
        loc: {
          start: {
            line: 73,
            column: 384
          },
          end: {
            line: 73,
            column: 522
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 73,
            column: 515
          },
          end: {
            line: 73,
            column: 517
          }
        }, {
          start: {
            line: 73,
            column: 520
          },
          end: {
            line: 73,
            column: 522
          }
        }],
        line: 73
      },
      "11": {
        loc: {
          start: {
            line: 73,
            column: 384
          },
          end: {
            line: 73,
            column: 512
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 73,
            column: 384
          },
          end: {
            line: 73,
            column: 495
          }
        }, {
          start: {
            line: 73,
            column: 499
          },
          end: {
            line: 73,
            column: 512
          }
        }],
        line: 73
      },
      "12": {
        loc: {
          start: {
            line: 73,
            column: 390
          },
          end: {
            line: 73,
            column: 485
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 73,
            column: 446
          },
          end: {
            line: 73,
            column: 448
          }
        }, {
          start: {
            line: 73,
            column: 451
          },
          end: {
            line: 73,
            column: 485
          }
        }],
        line: 73
      },
      "13": {
        loc: {
          start: {
            line: 73,
            column: 390
          },
          end: {
            line: 73,
            column: 443
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 73,
            column: 390
          },
          end: {
            line: 73,
            column: 426
          }
        }, {
          start: {
            line: 73,
            column: 430
          },
          end: {
            line: 73,
            column: 443
          }
        }],
        line: 73
      },
      "14": {
        loc: {
          start: {
            line: 96,
            column: 70
          },
          end: {
            line: 96,
            column: 95
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 96,
            column: 70
          },
          end: {
            line: 96,
            column: 90
          }
        }, {
          start: {
            line: 96,
            column: 94
          },
          end: {
            line: 96,
            column: 95
          }
        }],
        line: 96
      },
      "15": {
        loc: {
          start: {
            line: 100,
            column: 8
          },
          end: {
            line: 102,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 100,
            column: 8
          },
          end: {
            line: 102,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 100
      },
      "16": {
        loc: {
          start: {
            line: 103,
            column: 8
          },
          end: {
            line: 105,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 103,
            column: 8
          },
          end: {
            line: 105,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 103
      },
      "17": {
        loc: {
          start: {
            line: 106,
            column: 8
          },
          end: {
            line: 108,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 106,
            column: 8
          },
          end: {
            line: 108,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 106
      },
      "18": {
        loc: {
          start: {
            line: 109,
            column: 8
          },
          end: {
            line: 118,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 110,
            column: 12
          },
          end: {
            line: 112,
            column: 22
          }
        }, {
          start: {
            line: 113,
            column: 12
          },
          end: {
            line: 115,
            column: 22
          }
        }, {
          start: {
            line: 116,
            column: 12
          },
          end: {
            line: 117,
            column: 202
          }
        }],
        line: 109
      },
      "19": {
        loc: {
          start: {
            line: 127,
            column: 643
          },
          end: {
            line: 127,
            column: 668
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 127,
            column: 643
          },
          end: {
            line: 127,
            column: 663
          }
        }, {
          start: {
            line: 127,
            column: 667
          },
          end: {
            line: 127,
            column: 668
          }
        }],
        line: 127
      },
      "20": {
        loc: {
          start: {
            line: 128,
            column: 8
          },
          end: {
            line: 130,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 128,
            column: 8
          },
          end: {
            line: 130,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 128
      },
      "21": {
        loc: {
          start: {
            line: 131,
            column: 8
          },
          end: {
            line: 133,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 131,
            column: 8
          },
          end: {
            line: 133,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 131
      },
      "22": {
        loc: {
          start: {
            line: 134,
            column: 8
          },
          end: {
            line: 136,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 134,
            column: 8
          },
          end: {
            line: 136,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 134
      },
      "23": {
        loc: {
          start: {
            line: 137,
            column: 8
          },
          end: {
            line: 146,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 138,
            column: 12
          },
          end: {
            line: 140,
            column: 22
          }
        }, {
          start: {
            line: 141,
            column: 12
          },
          end: {
            line: 143,
            column: 22
          }
        }, {
          start: {
            line: 144,
            column: 12
          },
          end: {
            line: 145,
            column: 124
          }
        }],
        line: 137
      },
      "24": {
        loc: {
          start: {
            line: 155,
            column: 8
          },
          end: {
            line: 160,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 155,
            column: 8
          },
          end: {
            line: 160,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 155
      },
      "25": {
        loc: {
          start: {
            line: 157,
            column: 12
          },
          end: {
            line: 159,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 157,
            column: 12
          },
          end: {
            line: 159,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 157
      },
      "26": {
        loc: {
          start: {
            line: 167,
            column: 8
          },
          end: {
            line: 169,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 167,
            column: 8
          },
          end: {
            line: 169,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 167
      },
      "27": {
        loc: {
          start: {
            line: 167,
            column: 12
          },
          end: {
            line: 167,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 167,
            column: 12
          },
          end: {
            line: 167,
            column: 31
          }
        }, {
          start: {
            line: 167,
            column: 35
          },
          end: {
            line: 167,
            column: 47
          }
        }],
        line: 167
      },
      "28": {
        loc: {
          start: {
            line: 194,
            column: 8
          },
          end: {
            line: 196,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 194,
            column: 8
          },
          end: {
            line: 196,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 194
      },
      "29": {
        loc: {
          start: {
            line: 213,
            column: 8
          },
          end: {
            line: 215,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 213,
            column: 8
          },
          end: {
            line: 215,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 213
      },
      "30": {
        loc: {
          start: {
            line: 213,
            column: 12
          },
          end: {
            line: 213,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 213,
            column: 12
          },
          end: {
            line: 213,
            column: 31
          }
        }, {
          start: {
            line: 213,
            column: 35
          },
          end: {
            line: 213,
            column: 47
          }
        }],
        line: 213
      },
      "31": {
        loc: {
          start: {
            line: 217,
            column: 8
          },
          end: {
            line: 260,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 217,
            column: 8
          },
          end: {
            line: 260,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 217
      },
      "32": {
        loc: {
          start: {
            line: 219,
            column: 12
          },
          end: {
            line: 259,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 219,
            column: 12
          },
          end: {
            line: 259,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 219
      },
      "33": {
        loc: {
          start: {
            line: 226,
            column: 16
          },
          end: {
            line: 258,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 226,
            column: 16
          },
          end: {
            line: 258,
            column: 17
          }
        }, {
          start: {
            line: 234,
            column: 21
          },
          end: {
            line: 258,
            column: 17
          }
        }],
        line: 226
      },
      "34": {
        loc: {
          start: {
            line: 246,
            column: 47
          },
          end: {
            line: 246,
            column: 98
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 246,
            column: 47
          },
          end: {
            line: 246,
            column: 92
          }
        }, {
          start: {
            line: 246,
            column: 96
          },
          end: {
            line: 246,
            column: 98
          }
        }],
        line: 246
      },
      "35": {
        loc: {
          start: {
            line: 274,
            column: 38
          },
          end: {
            line: 274,
            column: 240
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 274,
            column: 39
          },
          end: {
            line: 274,
            column: 170
          }
        }, {
          start: {
            line: 274,
            column: 175
          },
          end: {
            line: 274,
            column: 240
          }
        }],
        line: 274
      },
      "36": {
        loc: {
          start: {
            line: 274,
            column: 39
          },
          end: {
            line: 274,
            column: 170
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 274,
            column: 151
          },
          end: {
            line: 274,
            column: 157
          }
        }, {
          start: {
            line: 274,
            column: 160
          },
          end: {
            line: 274,
            column: 170
          }
        }],
        line: 274
      },
      "37": {
        loc: {
          start: {
            line: 274,
            column: 39
          },
          end: {
            line: 274,
            column: 148
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 274,
            column: 39
          },
          end: {
            line: 274,
            column: 131
          }
        }, {
          start: {
            line: 274,
            column: 135
          },
          end: {
            line: 274,
            column: 148
          }
        }],
        line: 274
      },
      "38": {
        loc: {
          start: {
            line: 274,
            column: 45
          },
          end: {
            line: 274,
            column: 121
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 274,
            column: 102
          },
          end: {
            line: 274,
            column: 108
          }
        }, {
          start: {
            line: 274,
            column: 111
          },
          end: {
            line: 274,
            column: 121
          }
        }],
        line: 274
      },
      "39": {
        loc: {
          start: {
            line: 274,
            column: 45
          },
          end: {
            line: 274,
            column: 99
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 274,
            column: 45
          },
          end: {
            line: 274,
            column: 82
          }
        }, {
          start: {
            line: 274,
            column: 86
          },
          end: {
            line: 274,
            column: 99
          }
        }],
        line: 274
      },
      "40": {
        loc: {
          start: {
            line: 278,
            column: 42
          },
          end: {
            line: 278,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 278,
            column: 42
          },
          end: {
            line: 278,
            column: 84
          }
        }, {
          start: {
            line: 278,
            column: 88
          },
          end: {
            line: 278,
            column: 89
          }
        }],
        line: 278
      },
      "41": {
        loc: {
          start: {
            line: 279,
            column: 33
          },
          end: {
            line: 279,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 279,
            column: 33
          },
          end: {
            line: 279,
            column: 67
          }
        }, {
          start: {
            line: 279,
            column: 71
          },
          end: {
            line: 279,
            column: 73
          }
        }],
        line: 279
      },
      "42": {
        loc: {
          start: {
            line: 299,
            column: 8
          },
          end: {
            line: 318,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 300,
            column: 12
          },
          end: {
            line: 305,
            column: 18
          }
        }, {
          start: {
            line: 306,
            column: 12
          },
          end: {
            line: 311,
            column: 18
          }
        }, {
          start: {
            line: 312,
            column: 12
          },
          end: {
            line: 317,
            column: 18
          }
        }],
        line: 299
      },
      "43": {
        loc: {
          start: {
            line: 326,
            column: 8
          },
          end: {
            line: 328,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 326,
            column: 8
          },
          end: {
            line: 328,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 326
      },
      "44": {
        loc: {
          start: {
            line: 326,
            column: 12
          },
          end: {
            line: 326,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 326,
            column: 12
          },
          end: {
            line: 326,
            column: 31
          }
        }, {
          start: {
            line: 326,
            column: 35
          },
          end: {
            line: 326,
            column: 47
          }
        }],
        line: 326
      },
      "45": {
        loc: {
          start: {
            line: 334,
            column: 8
          },
          end: {
            line: 364,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 335,
            column: 12
          },
          end: {
            line: 344,
            column: 22
          }
        }, {
          start: {
            line: 345,
            column: 12
          },
          end: {
            line: 354,
            column: 22
          }
        }, {
          start: {
            line: 355,
            column: 12
          },
          end: {
            line: 363,
            column: 76
          }
        }],
        line: 334
      },
      "46": {
        loc: {
          start: {
            line: 337,
            column: 74
          },
          end: {
            line: 337,
            column: 109
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 337,
            column: 74
          },
          end: {
            line: 337,
            column: 83
          }
        }, {
          start: {
            line: 337,
            column: 87
          },
          end: {
            line: 337,
            column: 109
          }
        }],
        line: 337
      },
      "47": {
        loc: {
          start: {
            line: 338,
            column: 55
          },
          end: {
            line: 338,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 338,
            column: 55
          },
          end: {
            line: 338,
            column: 70
          }
        }, {
          start: {
            line: 338,
            column: 74
          },
          end: {
            line: 338,
            column: 85
          }
        }],
        line: 338
      },
      "48": {
        loc: {
          start: {
            line: 347,
            column: 51
          },
          end: {
            line: 347,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 347,
            column: 51
          },
          end: {
            line: 347,
            column: 62
          }
        }, {
          start: {
            line: 347,
            column: 66
          },
          end: {
            line: 347,
            column: 80
          }
        }],
        line: 347
      },
      "49": {
        loc: {
          start: {
            line: 348,
            column: 49
          },
          end: {
            line: 348,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 348,
            column: 49
          },
          end: {
            line: 348,
            column: 64
          }
        }, {
          start: {
            line: 348,
            column: 68
          },
          end: {
            line: 348,
            column: 77
          }
        }],
        line: 348
      },
      "50": {
        loc: {
          start: {
            line: 357,
            column: 43
          },
          end: {
            line: 357,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 357,
            column: 43
          },
          end: {
            line: 357,
            column: 54
          }
        }, {
          start: {
            line: 357,
            column: 58
          },
          end: {
            line: 357,
            column: 72
          }
        }],
        line: 357
      },
      "51": {
        loc: {
          start: {
            line: 358,
            column: 45
          },
          end: {
            line: 358,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 358,
            column: 45
          },
          end: {
            line: 358,
            column: 54
          }
        }, {
          start: {
            line: 358,
            column: 58
          },
          end: {
            line: 358,
            column: 80
          }
        }],
        line: 358
      },
      "52": {
        loc: {
          start: {
            line: 366,
            column: 8
          },
          end: {
            line: 368,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 366,
            column: 8
          },
          end: {
            line: 368,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 366
      },
      "53": {
        loc: {
          start: {
            line: 370,
            column: 8
          },
          end: {
            line: 372,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 370,
            column: 8
          },
          end: {
            line: 372,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 370
      },
      "54": {
        loc: {
          start: {
            line: 381,
            column: 8
          },
          end: {
            line: 383,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 381,
            column: 8
          },
          end: {
            line: 383,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 381
      },
      "55": {
        loc: {
          start: {
            line: 406,
            column: 29
          },
          end: {
            line: 407,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 406,
            column: 30
          },
          end: {
            line: 406,
            column: 161
          }
        }, {
          start: {
            line: 407,
            column: 16
          },
          end: {
            line: 407,
            column: 42
          }
        }],
        line: 406
      },
      "56": {
        loc: {
          start: {
            line: 406,
            column: 30
          },
          end: {
            line: 406,
            column: 161
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 406,
            column: 142
          },
          end: {
            line: 406,
            column: 148
          }
        }, {
          start: {
            line: 406,
            column: 151
          },
          end: {
            line: 406,
            column: 161
          }
        }],
        line: 406
      },
      "57": {
        loc: {
          start: {
            line: 406,
            column: 30
          },
          end: {
            line: 406,
            column: 139
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 406,
            column: 30
          },
          end: {
            line: 406,
            column: 122
          }
        }, {
          start: {
            line: 406,
            column: 126
          },
          end: {
            line: 406,
            column: 139
          }
        }],
        line: 406
      },
      "58": {
        loc: {
          start: {
            line: 406,
            column: 36
          },
          end: {
            line: 406,
            column: 112
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 406,
            column: 93
          },
          end: {
            line: 406,
            column: 99
          }
        }, {
          start: {
            line: 406,
            column: 102
          },
          end: {
            line: 406,
            column: 112
          }
        }],
        line: 406
      },
      "59": {
        loc: {
          start: {
            line: 406,
            column: 36
          },
          end: {
            line: 406,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 406,
            column: 36
          },
          end: {
            line: 406,
            column: 73
          }
        }, {
          start: {
            line: 406,
            column: 77
          },
          end: {
            line: 406,
            column: 90
          }
        }],
        line: 406
      },
      "60": {
        loc: {
          start: {
            line: 422,
            column: 8
          },
          end: {
            line: 429,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 423,
            column: 12
          },
          end: {
            line: 424,
            column: 147
          }
        }, {
          start: {
            line: 425,
            column: 12
          },
          end: {
            line: 426,
            column: 131
          }
        }, {
          start: {
            line: 427,
            column: 12
          },
          end: {
            line: 428,
            column: 118
          }
        }],
        line: 422
      },
      "61": {
        loc: {
          start: {
            line: 424,
            column: 83
          },
          end: {
            line: 424,
            column: 121
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 424,
            column: 83
          },
          end: {
            line: 424,
            column: 92
          }
        }, {
          start: {
            line: 424,
            column: 96
          },
          end: {
            line: 424,
            column: 121
          }
        }],
        line: 424
      },
      "62": {
        loc: {
          start: {
            line: 436,
            column: 8
          },
          end: {
            line: 438,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 436,
            column: 8
          },
          end: {
            line: 438,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 436
      },
      "63": {
        loc: {
          start: {
            line: 436,
            column: 12
          },
          end: {
            line: 436,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 436,
            column: 12
          },
          end: {
            line: 436,
            column: 31
          }
        }, {
          start: {
            line: 436,
            column: 35
          },
          end: {
            line: 436,
            column: 47
          }
        }],
        line: 436
      },
      "64": {
        loc: {
          start: {
            line: 451,
            column: 19
          },
          end: {
            line: 451,
            column: 188
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 451,
            column: 20
          },
          end: {
            line: 451,
            column: 151
          }
        }, {
          start: {
            line: 451,
            column: 156
          },
          end: {
            line: 451,
            column: 188
          }
        }],
        line: 451
      },
      "65": {
        loc: {
          start: {
            line: 451,
            column: 20
          },
          end: {
            line: 451,
            column: 151
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 451,
            column: 132
          },
          end: {
            line: 451,
            column: 138
          }
        }, {
          start: {
            line: 451,
            column: 141
          },
          end: {
            line: 451,
            column: 151
          }
        }],
        line: 451
      },
      "66": {
        loc: {
          start: {
            line: 451,
            column: 20
          },
          end: {
            line: 451,
            column: 129
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 451,
            column: 20
          },
          end: {
            line: 451,
            column: 112
          }
        }, {
          start: {
            line: 451,
            column: 116
          },
          end: {
            line: 451,
            column: 129
          }
        }],
        line: 451
      },
      "67": {
        loc: {
          start: {
            line: 451,
            column: 26
          },
          end: {
            line: 451,
            column: 102
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 451,
            column: 83
          },
          end: {
            line: 451,
            column: 89
          }
        }, {
          start: {
            line: 451,
            column: 92
          },
          end: {
            line: 451,
            column: 102
          }
        }],
        line: 451
      },
      "68": {
        loc: {
          start: {
            line: 451,
            column: 26
          },
          end: {
            line: 451,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 451,
            column: 26
          },
          end: {
            line: 451,
            column: 63
          }
        }, {
          start: {
            line: 451,
            column: 67
          },
          end: {
            line: 451,
            column: 80
          }
        }],
        line: 451
      },
      "69": {
        loc: {
          start: {
            line: 463,
            column: 8
          },
          end: {
            line: 465,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 463,
            column: 8
          },
          end: {
            line: 465,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 463
      },
      "70": {
        loc: {
          start: {
            line: 463,
            column: 12
          },
          end: {
            line: 463,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 463,
            column: 12
          },
          end: {
            line: 463,
            column: 31
          }
        }, {
          start: {
            line: 463,
            column: 35
          },
          end: {
            line: 463,
            column: 47
          }
        }],
        line: 463
      },
      "71": {
        loc: {
          start: {
            line: 477,
            column: 19
          },
          end: {
            line: 477,
            column: 185
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 477,
            column: 20
          },
          end: {
            line: 477,
            column: 151
          }
        }, {
          start: {
            line: 477,
            column: 156
          },
          end: {
            line: 477,
            column: 185
          }
        }],
        line: 477
      },
      "72": {
        loc: {
          start: {
            line: 477,
            column: 20
          },
          end: {
            line: 477,
            column: 151
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 477,
            column: 132
          },
          end: {
            line: 477,
            column: 138
          }
        }, {
          start: {
            line: 477,
            column: 141
          },
          end: {
            line: 477,
            column: 151
          }
        }],
        line: 477
      },
      "73": {
        loc: {
          start: {
            line: 477,
            column: 20
          },
          end: {
            line: 477,
            column: 129
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 477,
            column: 20
          },
          end: {
            line: 477,
            column: 112
          }
        }, {
          start: {
            line: 477,
            column: 116
          },
          end: {
            line: 477,
            column: 129
          }
        }],
        line: 477
      },
      "74": {
        loc: {
          start: {
            line: 477,
            column: 26
          },
          end: {
            line: 477,
            column: 102
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 477,
            column: 83
          },
          end: {
            line: 477,
            column: 89
          }
        }, {
          start: {
            line: 477,
            column: 92
          },
          end: {
            line: 477,
            column: 102
          }
        }],
        line: 477
      },
      "75": {
        loc: {
          start: {
            line: 477,
            column: 26
          },
          end: {
            line: 477,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 477,
            column: 26
          },
          end: {
            line: 477,
            column: 63
          }
        }, {
          start: {
            line: 477,
            column: 67
          },
          end: {
            line: 477,
            column: 80
          }
        }],
        line: 477
      },
      "76": {
        loc: {
          start: {
            line: 505,
            column: 15
          },
          end: {
            line: 505,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 505,
            column: 15
          },
          end: {
            line: 505,
            column: 33
          }
        }, {
          start: {
            line: 505,
            column: 37
          },
          end: {
            line: 505,
            column: 57
          }
        }],
        line: 505
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0],
      "66": [0, 0],
      "67": [0, 0],
      "68": [0, 0],
      "69": [0, 0],
      "70": [0, 0],
      "71": [0, 0],
      "72": [0, 0],
      "73": [0, 0],
      "74": [0, 0],
      "75": [0, 0],
      "76": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/dikshantvashistha/PrepBettr/azure/lib/services/azure-openai-service.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/dikshantvashistha/PrepBettr/azure/lib/services/azure-openai-service.ts"],
      sourcesContent: ["/**\n * @deprecated This service is deprecated due to security concerns.\n * It attempts to initialize Azure OpenAI from browser environment variables,\n * which exposes credentials in the client-side code.\n * \n * Use azure-openai-service-server.ts for server-side API routes instead.\n * This file is kept for backward compatibility but should not be used in production.\n */\n\nimport { AzureOpenAI } from 'openai';\nimport { fetchAzureSecrets } from '../../../lib/azure-config-browser';\n\nexport interface ConversationMessage {\n  role: 'system' | 'user' | 'assistant';\n  content: string;\n}\n\nexport interface CandidateProfile {\n  currentRole?: string;\n  techStack?: string;\n  yearsExperience?: string;\n  keySkills?: string;\n  questionCount?: string;\n}\n\nexport interface InterviewContext {\n  type: 'technical' | 'behavioral' | 'general';\n  position?: string;\n  company?: string;\n  difficulty?: 'easy' | 'medium' | 'hard';\n  preliminaryCollected?: boolean; // Default: false - Indicates if preliminary info has been collected\n  currentQuestionCount?: number; // Current number of questions asked in the interview\n  maxQuestions?: number; // Default: 10 - Maximum number of questions for the interview\n}\n\nexport interface GenerationResponse {\n  content: string;\n  questionNumber?: number;\n  isComplete?: boolean;\n  followUpSuggestions?: string[];\n}\n\nexport class AzureOpenAIService {\n  private client: AzureOpenAI | null = null;\n  private isInitialized = false;\n  private modelDeployment: string = 'gpt-4o'; // Store the deployment name as model\n  private conversationHistory: ConversationMessage[] = [];\n  private interviewContext: InterviewContext = { \n    type: 'general',\n    preliminaryCollected: false,\n    currentQuestionCount: 0,\n    maxQuestions: 10\n  };\n  \n  // Preliminary questions for gathering candidate profile\n  private prelimQuestions = [\n    'What is your current role?',\n    'What primary tech stack do you use?',\n    'How many years of experience do you have?',\n    'What are your key skills?',\n    'How many interview questions would you like?'\n  ];\n  private prelimIndex = 0;\n  private candidateProfile: Record<string, string> = {};\n\n  /**\n   * Initialize the Azure OpenAI service\n   */\n  async initialize(): Promise<boolean> {\n    try {\n      const secrets = await fetchAzureSecrets();\n      \n      if (!secrets.azureOpenAIKey || !secrets.azureOpenAIEndpoint || !secrets.azureOpenAIDeployment) {\n        console.warn('\u26A0\uFE0F Azure OpenAI credentials not available');\n        return false;\n      }\n\n      this.client = new AzureOpenAI({\n        apiKey: secrets.azureOpenAIKey,\n        endpoint: secrets.azureOpenAIEndpoint,\n        deployment: secrets.azureOpenAIDeployment,\n        apiVersion: '2024-02-15-preview', // Using stable API version\n        dangerouslyAllowBrowser: true\n      });\n      \n      // Store the deployment name for use as model in API calls\n      this.modelDeployment = secrets.azureOpenAIDeployment;\n\n      this.isInitialized = true;\n      console.log('\u2705 Azure OpenAI Service initialized');\n      return true;\n    } catch (error) {\n      console.error('\u274C Failed to initialize Azure OpenAI Service:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Set interview context for conversation management\n   */\n  setInterviewContext(context: Partial<InterviewContext>): void {\n    // Merge context while preserving defaults\n    this.interviewContext = { \n      ...this.interviewContext, \n      ...context,\n      // Ensure defaults are set if not provided\n      preliminaryCollected: context.preliminaryCollected ?? this.interviewContext.preliminaryCollected ?? false,\n      currentQuestionCount: context.currentQuestionCount ?? this.interviewContext.currentQuestionCount ?? 0,\n      maxQuestions: context.maxQuestions ?? this.interviewContext.maxQuestions ?? 10\n    };\n    console.log('\uD83D\uDCCB Interview context updated:', this.interviewContext);\n  }\n\n  /**\n   * Build system context from candidate profile\n   */\n  private buildSystemContext(): string {\n    const { currentRole, techStack, yearsExperience, keySkills } = this.candidateProfile;\n    const { type, position, company, difficulty, currentQuestionCount, maxQuestions } = this.interviewContext;\n    \n    let systemPrompt = `You are an AI interviewer conducting a ${type} interview with a candidate.\\n\\n`;\n    systemPrompt += `Candidate Profile:\\n`;\n    systemPrompt += `- Current Role: ${currentRole}\\n`;\n    systemPrompt += `- Tech Stack: ${techStack}\\n`;\n    systemPrompt += `- Years of Experience: ${yearsExperience}\\n`;\n    systemPrompt += `- Key Skills: ${keySkills}\\n\\n`;\n    \n    systemPrompt += `Interview Guidelines:\\n`;\n    systemPrompt += `1. Ask relevant, engaging questions tailored to their experience level\\n`;\n    systemPrompt += `2. Follow up on answers with clarifying questions\\n`;\n    systemPrompt += `3. Maintain a professional but friendly tone\\n`;\n    systemPrompt += `4. Keep responses concise and focused\\n`;\n    systemPrompt += `5. Adapt difficulty based on their experience and responses\\n\\n`;\n    \n    systemPrompt += `Interview Flow Control:\\n`;\n    systemPrompt += `\u2022 Preliminary questions have already been collected - do NOT ask them again\\n`;\n    systemPrompt += `\u2022 You are currently on interview question ${(currentQuestionCount || 0) + 1} of ${maxQuestions}\\n`;\n    systemPrompt += `\u2022 Continue with interview questions based on the candidate's profile\\n`;\n    systemPrompt += `\u2022 After question ${maxQuestions}, conclude the interview and thank the candidate\\n`;\n    systemPrompt += `\u2022 Do NOT exceed ${maxQuestions} interview questions\\n\\n`;\n    \n    if (position) {\n      systemPrompt += `Position: ${position}\\n`;\n    }\n    if (company) {\n      systemPrompt += `Company: ${company}\\n`;\n    }\n    if (difficulty) {\n      systemPrompt += `Difficulty Level: ${difficulty}\\n`;\n    }\n    \n    switch (type) {\n      case 'technical':\n        systemPrompt += `\\nFocus on technical skills relevant to their tech stack (${techStack}), problem-solving, coding concepts, and system design appropriate for someone with ${yearsExperience} years of experience.`;\n        break;\n      case 'behavioral':\n        systemPrompt += `\\nFocus on behavioral questions about teamwork, leadership, conflict resolution, and past experiences relevant to someone in a ${currentRole} role.`;\n        break;\n      default:\n        systemPrompt += `\\nAsk a mix of questions about background, experience, goals, and general fit for the role, considering their ${yearsExperience} years of experience in ${currentRole}.`;\n    }\n    \n    systemPrompt += `\\n\\nKeep your responses under 100 words and ask one question at a time.`;\n    return systemPrompt;\n  }\n\n  /**\n   * Get system prompt based on interview context\n   */\n  private getSystemPrompt(): string {\n    const { type, position, company, difficulty, preliminaryCollected, currentQuestionCount, maxQuestions } = this.interviewContext;\n    \n    let basePrompt = `You are an AI interviewer conducting a ${type} interview. You should:\\n\\n1. Ask relevant, engaging questions\\n2. Follow up on answers with clarifying questions\\n3. Maintain a professional but friendly tone\\n4. Keep responses concise and focused\\n5. Adapt difficulty based on candidate responses\\n\\nInterview Flow Instructions:\\n\u2022 Ask preliminary questions (role, tech stack, experience, skills) only once at the beginning\\n\u2022 After preliminary data is collected (preliminaryCollected = ${preliminaryCollected}), switch to actual interview questions\\n\u2022 Keep track of question numbers - you are currently on question ${(currentQuestionCount || 0) + 1} of ${maxQuestions}\\n\u2022 Increment the question number each time you ask a new interview question\\n\u2022 Stop asking questions after reaching ${maxQuestions} questions and thank the candidate for their time\\n\u2022 Do NOT repeat preliminary questions once they have been collected\\n\u2022 Do NOT exceed the maximum number of questions (${maxQuestions})\\n\\n`;\n\n    if (position) {\n      basePrompt += `Position: ${position}\\n`;\n    }\n    if (company) {\n      basePrompt += `Company: ${company}\\n`;\n    }\n    if (difficulty) {\n      basePrompt += `Difficulty Level: ${difficulty}\\n`;\n    }\n\n    switch (type) {\n      case 'technical':\n        basePrompt += `\\nFocus on technical skills, problem-solving, coding concepts, and system design. Ask about specific technologies, algorithms, and best practices.`;\n        break;\n      case 'behavioral':\n        basePrompt += `\\nFocus on behavioral questions about teamwork, leadership, conflict resolution, and past experiences. Use the STAR method for evaluation.`;\n        break;\n      default:\n        basePrompt += `\\nAsk a mix of questions about background, experience, goals, and general fit for the role.`;\n    }\n\n    basePrompt += `\\n\\nKeep your responses under 100 words and ask one question at a time.`;\n    return basePrompt;\n  }\n\n  /**\n   * Get the OpenAI client instance\n   * @returns The AzureOpenAI client instance or null if not initialized\n   */\n  async getClient(): Promise<AzureOpenAI | null> {\n    if (!this.isInitialized) {\n      const initialized = await this.initialize();\n      if (!initialized) {\n        return null;\n      }\n    }\n    return this.client;\n  }\n\n  /**\n   * Start a new interview conversation\n   */\n  async startInterviewConversation(): Promise<GenerationResponse> {\n    if (!this.isInitialized || !this.client) {\n      throw new Error('Azure OpenAI Service not initialized');\n    }\n\n    // Reset conversation history and preliminary questions state\n    this.conversationHistory = [];\n    this.prelimIndex = 0;\n    this.candidateProfile = {};\n    // Reset interview context flags\n    this.interviewContext.preliminaryCollected = false;\n    this.interviewContext.currentQuestionCount = 0;\n\n    // Send greeting + first preliminary question\n    const greeting = \"Hello! Welcome to your interview practice session. Before we begin, I'd like to learn a bit about you.\";\n    const firstQuestion = this.prelimQuestions[0];\n    const openingMessage = `${greeting}\\n\\n${firstQuestion}`;\n\n    return {\n      content: openingMessage,\n      questionNumber: 0, // 0 indicates preliminary questions\n      isComplete: false\n    };\n  }\n\n  /**\n   * Get opening message based on interview type\n   * Uses generateInterviewQuestion helper for domain-specific questions\n   */\n  private async getOpeningMessage(): Promise<string> {\n    const { position } = this.interviewContext;\n    \n    let greeting = \"\";\n    \n    if (position) {\n      greeting += `Let's discuss the ${position} position. `;\n    }\n    \n    try {\n      // Use the helper to generate a domain-specific opening question\n      const question = await this.generateInterviewQuestion();\n      return greeting + question;\n    } catch (error) {\n      console.warn('\u26A0\uFE0F Falling back to default opening question');\n      // Fallback to a simpler approach if generation fails\n      return greeting + this.getFallbackQuestion();\n    }\n  }\n\n  /**\n   * Process user response and generate next question or comment\n   */\n  async processUserResponse(userResponse: string): Promise<GenerationResponse> {\n    if (!this.isInitialized || !this.client) {\n      throw new Error('Azure OpenAI Service not initialized');\n    }\n\n    // Check if we're still collecting preliminary information\n    if (!this.interviewContext.preliminaryCollected) {\n      // We're in preliminary phase - check if we still have questions to ask\n      if (this.prelimIndex < this.prelimQuestions.length) {\n        // Store the user's answer to the current preliminary question\n        const questionKeys = ['currentRole', 'techStack', 'yearsExperience', 'keySkills', 'questionCount'];\n        this.candidateProfile[questionKeys[this.prelimIndex]] = userResponse;\n        \n        // Increment to next preliminary question\n        this.prelimIndex++;\n        \n        // If there are more preliminary questions, return the next one\n        if (this.prelimIndex < this.prelimQuestions.length) {\n          const nextQuestion = this.prelimQuestions[this.prelimIndex];\n          return {\n            content: `Thank you! ${nextQuestion}`,\n            questionNumber: 0, // Still in preliminary phase - keep at 0\n            isComplete: false\n          };\n        } else {\n          // All preliminary questions collected - mark as complete\n          this.interviewContext.preliminaryCollected = true;\n          // Keep currentQuestionCount at 0 as we haven't asked real questions yet\n          this.interviewContext.currentQuestionCount = 0;\n          \n          // Build system context from collected profile\n          const systemContext = this.buildSystemContext();\n          \n          // Initialize conversation history with system context\n          this.conversationHistory = [\n            { role: 'system', content: systemContext }\n          ];\n          \n          // Set max questions from user's response\n          const requestedQuestions = parseInt(this.candidateProfile.questionCount) || 10;\n          this.interviewContext.maxQuestions = Math.min(Math.max(requestedQuestions, 5), 20); // Between 5 and 20\n          \n          // Generate the first real interview question\n          const openingMessage = await this.getOpeningMessage();\n          this.conversationHistory.push({ role: 'assistant', content: openingMessage });\n          \n          // Increment question count for the first real question\n          this.interviewContext.currentQuestionCount = 1;\n          \n          return {\n            content: `Great! I now have a better understanding of your background. Let's begin the interview.\\n\\n${openingMessage}`,\n            questionNumber: 1, // First real question\n            isComplete: false\n          };\n        }\n      }\n    }\n\n    // Normal interview flow - preliminary info has been collected\n    // Add user response to conversation history\n    this.conversationHistory.push({ role: 'user', content: userResponse });\n\n    try {\n      const completion = await this.client.chat.completions.create({\n        model: this.modelDeployment,\n        messages: this.conversationHistory,\n        temperature: 0.7,\n        max_tokens: 200,\n        top_p: 0.9,\n        frequency_penalty: 0.1,\n        presence_penalty: 0.1,\n      });\n\n      const assistantResponse = completion.choices[0]?.message?.content || 'I\\'m sorry, I didn\\'t catch that. Could you repeat your answer?';\n      \n      // Add assistant response to conversation history\n      this.conversationHistory.push({ role: 'assistant', content: assistantResponse });\n\n      // Increment question count for the next question\n      const currentQuestionCount = (this.interviewContext.currentQuestionCount || 0) + 1;\n      const maxQuestions = this.interviewContext.maxQuestions || 10;\n      \n      // Update question count in context\n      this.interviewContext.currentQuestionCount = currentQuestionCount;\n\n      return {\n        content: assistantResponse,\n        questionNumber: currentQuestionCount,\n        isComplete: currentQuestionCount >= maxQuestions,\n        followUpSuggestions: this.generateFollowUpSuggestions()\n      };\n    } catch (error) {\n      console.error('\u274C Error generating OpenAI response:', error);\n      throw new Error('Failed to generate response');\n    }\n  }\n\n  /**\n   * Generate follow-up suggestions based on conversation\n   */\n  private generateFollowUpSuggestions(): string[] {\n    const { type } = this.interviewContext;\n    \n    switch (type) {\n      case 'technical':\n        return [\n          \"Can you explain your thought process?\",\n          \"What would you do differently?\",\n          \"How would this scale?\"\n        ];\n      case 'behavioral':\n        return [\n          \"What was the outcome?\",\n          \"What did you learn?\",\n          \"How would you handle it now?\"\n        ];\n      default:\n        return [\n          \"Can you elaborate on that?\",\n          \"What was your biggest challenge?\",\n          \"What motivates you?\"\n        ];\n    }\n  }\n\n  /**\n   * Generate a domain-specific interview question based on context and conversation history\n   * This helper generates a single, concise question tailored to the interview type and candidate profile\n   */\n  async generateInterviewQuestion(): Promise<string> {\n    if (!this.isInitialized || !this.client) {\n      throw new Error('Azure OpenAI Service not initialized');\n    }\n\n    // Build the appropriate system prompt based on interview type and profile\n    const { type, difficulty, position } = this.interviewContext;\n    const { currentRole, techStack, yearsExperience, keySkills } = this.candidateProfile;\n    \n    let questionPrompt = `Generate one concise interview question. `;\n    \n    // Add context-specific instructions based on interview type\n    switch (type) {\n      case 'technical':\n        questionPrompt += `Focus on technical skills and problem-solving.\\n`;\n        questionPrompt += `Consider the candidate's tech stack: ${techStack || 'various technologies'}.\\n`;\n        questionPrompt += `Experience level: ${yearsExperience || 'mid-level'} years.\\n`;\n        questionPrompt += `Include specific technical scenarios such as:\\n`;\n        questionPrompt += `- Code/architecture design challenges\\n`;\n        questionPrompt += `- Debugging or optimization problems\\n`;\n        questionPrompt += `- Technology-specific best practices\\n`;\n        questionPrompt += `- System scalability considerations\\n`;\n        break;\n        \n      case 'behavioral':\n        questionPrompt += `Focus on behavioral assessment using STAR method.\\n`;\n        questionPrompt += `Current role: ${currentRole || 'professional'}.\\n`;\n        questionPrompt += `Experience: ${yearsExperience || 'several'} years.\\n`;\n        questionPrompt += `Create STAR-format prompts about:\\n`;\n        questionPrompt += `- Leadership and teamwork situations\\n`;\n        questionPrompt += `- Conflict resolution examples\\n`;\n        questionPrompt += `- Project management challenges\\n`;\n        questionPrompt += `- Professional growth moments\\n`;\n        break;\n        \n      default: // 'general'\n        questionPrompt += `Focus on overall experience and motivation.\\n`;\n        questionPrompt += `Role: ${currentRole || 'professional'}.\\n`;\n        questionPrompt += `Skills: ${keySkills || 'various competencies'}.\\n`;\n        questionPrompt += `Cover aspects such as:\\n`;\n        questionPrompt += `- Career journey and transitions\\n`;\n        questionPrompt += `- Professional motivations and goals\\n`;\n        questionPrompt += `- Work style and preferences\\n`;\n        questionPrompt += `- Learning and adaptation experiences\\n`;\n    }\n    \n    // Add difficulty adjustment\n    if (difficulty) {\n      questionPrompt += `\\nDifficulty level: ${difficulty}.`;\n    }\n    \n    // Add position context if available\n    if (position) {\n      questionPrompt += `\\nPosition being interviewed for: ${position}.`;\n    }\n    \n    // Add instruction for question format\n    questionPrompt += `\\n\\nRequirements:\\n`;\n    questionPrompt += `- Make the question specific and actionable\\n`;\n    questionPrompt += `- Keep it under 50 words\\n`;\n    questionPrompt += `- Avoid yes/no questions\\n`;\n    questionPrompt += `- Ensure it's appropriate for the experience level\\n`;\n    \n    // Consider conversation history for context continuity\n    const recentContext = this.conversationHistory.slice(-4); // Last 2 exchanges\n    if (recentContext.length > 0) {\n      questionPrompt += `\\n\\nBuild upon but don't repeat topics from recent conversation.`;\n    }\n\n    try {\n      // Create the messages array with system context and the prompt\n      const messages: ConversationMessage[] = [\n        {\n          role: 'system',\n          content: this.buildSystemContext()\n        },\n        ...recentContext,\n        {\n          role: 'user',\n          content: questionPrompt\n        }\n      ];\n\n      const completion = await this.client.chat.completions.create({\n        model: this.modelDeployment,\n        messages,\n        temperature: 0.8, // Slightly higher for more variety\n        max_tokens: 100,\n        top_p: 0.9,\n        frequency_penalty: 0.3, // Reduce repetition\n        presence_penalty: 0.2,\n      });\n\n      const question = completion.choices[0]?.message?.content || \n        this.getFallbackQuestion();\n      \n      return question.trim();\n    } catch (error) {\n      console.error('\u274C Error generating interview question:', error);\n      // Return a fallback question based on type\n      return this.getFallbackQuestion();\n    }\n  }\n\n  /**\n   * Get a fallback question when generation fails\n   */\n  private getFallbackQuestion(): string {\n    const { type } = this.interviewContext;\n    const { currentRole, techStack, yearsExperience } = this.candidateProfile;\n    \n    switch (type) {\n      case 'technical':\n        return `Can you describe a technical challenge you've faced with ${techStack || 'your current tech stack'} and how you solved it?`;\n      case 'behavioral':\n        return `Tell me about a time when you had to work with a difficult team member. How did you handle the situation?`;\n      default:\n        return `What interests you most about this opportunity and how does it align with your career goals?`;\n    }\n  }\n\n  /**\n   * Generate a completion for a given prompt\n   */\n  async generateCompletion(prompt: string): Promise<string> {\n    if (!this.isInitialized || !this.client) {\n      throw new Error('Azure OpenAI Service not initialized');\n    }\n\n    try {\n      const completion = await this.client.chat.completions.create({\n        model: this.modelDeployment,\n        messages: [\n          {\n            role: 'user',\n            content: prompt\n          }\n        ],\n        temperature: 0.7,\n        max_tokens: 1000,\n      });\n\n      return completion.choices[0]?.message?.content || 'Unable to generate completion.';\n    } catch (error) {\n      console.error('\u274C Error generating completion:', error);\n      throw new Error('Failed to generate completion');\n    }\n  }\n\n  /**\n   * Generate interview summary and feedback\n   */\n  async generateInterviewSummary(): Promise<string> {\n    if (!this.isInitialized || !this.client) {\n      throw new Error('Azure OpenAI Service not initialized');\n    }\n\n    const summaryPrompt = {\n      role: 'system' as const,\n      content: `Based on the interview conversation, provide a brief summary of the candidate's performance, highlighting:\\n1. Key strengths demonstrated\\n2. Areas for improvement\\n3. Overall assessment\\n4. Recommendation\\n\\nKeep it concise and constructive (under 200 words).`\n    };\n\n    try {\n      const completion = await this.client.chat.completions.create({\n        model: this.modelDeployment,\n        messages: [...this.conversationHistory, summaryPrompt],\n        temperature: 0.3,\n        max_tokens: 300,\n      });\n\n      return completion.choices[0]?.message?.content || 'Unable to generate summary.';\n    } catch (error) {\n      console.error('\u274C Error generating interview summary:', error);\n      throw new Error('Failed to generate summary');\n    }\n  }\n\n  /**\n   * Get conversation history\n   */\n  getConversationHistory(): ConversationMessage[] {\n    return this.conversationHistory.filter(msg => msg.role !== 'system');\n  }\n\n  /**\n   * Clear conversation history\n   */\n  clearConversation(): void {\n    this.conversationHistory = [];\n    this.interviewContext.currentQuestionCount = 0;\n    this.interviewContext.preliminaryCollected = false;\n    this.prelimIndex = 0;\n    this.candidateProfile = {};\n    console.log('\uD83E\uDDF9 Conversation history cleared');\n  }\n\n  /**\n   * Check if service is ready\n   */\n  isReady(): boolean {\n    return this.isInitialized && this.client !== null;\n  }\n\n  /**\n   * Dispose of resources\n   */\n  dispose(): void {\n    this.client = null;\n    this.isInitialized = false;\n    this.conversationHistory = [];\n    console.log('\uD83E\uDDF9 Azure OpenAI Service disposed');\n  }\n}\n\n// Export singleton instance\nexport const azureOpenAIService = new AzureOpenAIService();\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c9fefe713e16795483f425e03d26b0ab0986aa86"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_18shj8vvy8 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_18shj8vvy8();
cov_18shj8vvy8().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_18shj8vvy8().s[1]++;
exports.azureOpenAIService = exports.AzureOpenAIService = void 0;
const openai_1 =
/* istanbul ignore next */
(cov_18shj8vvy8().s[2]++, require("openai"));
const azure_config_browser_1 =
/* istanbul ignore next */
(cov_18shj8vvy8().s[3]++, require("../../../lib/azure-config-browser"));
class AzureOpenAIService {
  constructor() {
    /* istanbul ignore next */
    cov_18shj8vvy8().f[0]++;
    cov_18shj8vvy8().s[4]++;
    this.client = null;
    /* istanbul ignore next */
    cov_18shj8vvy8().s[5]++;
    this.isInitialized = false;
    /* istanbul ignore next */
    cov_18shj8vvy8().s[6]++;
    this.modelDeployment = 'gpt-4o'; // Store the deployment name as model
    /* istanbul ignore next */
    cov_18shj8vvy8().s[7]++;
    this.conversationHistory = [];
    /* istanbul ignore next */
    cov_18shj8vvy8().s[8]++;
    this.interviewContext = {
      type: 'general',
      preliminaryCollected: false,
      currentQuestionCount: 0,
      maxQuestions: 10
    };
    // Preliminary questions for gathering candidate profile
    /* istanbul ignore next */
    cov_18shj8vvy8().s[9]++;
    this.prelimQuestions = ['What is your current role?', 'What primary tech stack do you use?', 'How many years of experience do you have?', 'What are your key skills?', 'How many interview questions would you like?'];
    /* istanbul ignore next */
    cov_18shj8vvy8().s[10]++;
    this.prelimIndex = 0;
    /* istanbul ignore next */
    cov_18shj8vvy8().s[11]++;
    this.candidateProfile = {};
  }
  /**
   * Initialize the Azure OpenAI service
   */
  async initialize() {
    /* istanbul ignore next */
    cov_18shj8vvy8().f[1]++;
    cov_18shj8vvy8().s[12]++;
    try {
      const secrets =
      /* istanbul ignore next */
      (cov_18shj8vvy8().s[13]++, await (0, azure_config_browser_1.fetchAzureSecrets)());
      /* istanbul ignore next */
      cov_18shj8vvy8().s[14]++;
      if (
      /* istanbul ignore next */
      (cov_18shj8vvy8().b[1][0]++, !secrets.azureOpenAIKey) ||
      /* istanbul ignore next */
      (cov_18shj8vvy8().b[1][1]++, !secrets.azureOpenAIEndpoint) ||
      /* istanbul ignore next */
      (cov_18shj8vvy8().b[1][2]++, !secrets.azureOpenAIDeployment)) {
        /* istanbul ignore next */
        cov_18shj8vvy8().b[0][0]++;
        cov_18shj8vvy8().s[15]++;
        console.warn('⚠️ Azure OpenAI credentials not available');
        /* istanbul ignore next */
        cov_18shj8vvy8().s[16]++;
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_18shj8vvy8().b[0][1]++;
      }
      cov_18shj8vvy8().s[17]++;
      this.client = new openai_1.AzureOpenAI({
        apiKey: secrets.azureOpenAIKey,
        endpoint: secrets.azureOpenAIEndpoint,
        deployment: secrets.azureOpenAIDeployment,
        apiVersion: '2024-02-15-preview',
        // Using stable API version
        dangerouslyAllowBrowser: true
      });
      // Store the deployment name for use as model in API calls
      /* istanbul ignore next */
      cov_18shj8vvy8().s[18]++;
      this.modelDeployment = secrets.azureOpenAIDeployment;
      /* istanbul ignore next */
      cov_18shj8vvy8().s[19]++;
      this.isInitialized = true;
      /* istanbul ignore next */
      cov_18shj8vvy8().s[20]++;
      console.log('✅ Azure OpenAI Service initialized');
      /* istanbul ignore next */
      cov_18shj8vvy8().s[21]++;
      return true;
    } catch (error) {
      /* istanbul ignore next */
      cov_18shj8vvy8().s[22]++;
      console.error('❌ Failed to initialize Azure OpenAI Service:', error);
      /* istanbul ignore next */
      cov_18shj8vvy8().s[23]++;
      return false;
    }
  }
  /**
   * Set interview context for conversation management
   */
  setInterviewContext(context) {
    /* istanbul ignore next */
    cov_18shj8vvy8().f[2]++;
    var _a, _b, _c, _d, _e, _f;
    // Merge context while preserving defaults
    /* istanbul ignore next */
    cov_18shj8vvy8().s[24]++;
    this.interviewContext = Object.assign(Object.assign(Object.assign({}, this.interviewContext), context), {
      // Ensure defaults are set if not provided
      preliminaryCollected:
      /* istanbul ignore next */
      (cov_18shj8vvy8().b[3][0]++, (_b =
      /* istanbul ignore next */
      (cov_18shj8vvy8().b[5][0]++, (_a = context.preliminaryCollected) !== null) &&
      /* istanbul ignore next */
      (cov_18shj8vvy8().b[5][1]++, _a !== void 0) ?
      /* istanbul ignore next */
      (cov_18shj8vvy8().b[4][0]++, _a) :
      /* istanbul ignore next */
      (cov_18shj8vvy8().b[4][1]++, this.interviewContext.preliminaryCollected)) !== null) &&
      /* istanbul ignore next */
      (cov_18shj8vvy8().b[3][1]++, _b !== void 0) ?
      /* istanbul ignore next */
      (cov_18shj8vvy8().b[2][0]++, _b) :
      /* istanbul ignore next */
      (cov_18shj8vvy8().b[2][1]++, false),
      currentQuestionCount:
      /* istanbul ignore next */
      (cov_18shj8vvy8().b[7][0]++, (_d =
      /* istanbul ignore next */
      (cov_18shj8vvy8().b[9][0]++, (_c = context.currentQuestionCount) !== null) &&
      /* istanbul ignore next */
      (cov_18shj8vvy8().b[9][1]++, _c !== void 0) ?
      /* istanbul ignore next */
      (cov_18shj8vvy8().b[8][0]++, _c) :
      /* istanbul ignore next */
      (cov_18shj8vvy8().b[8][1]++, this.interviewContext.currentQuestionCount)) !== null) &&
      /* istanbul ignore next */
      (cov_18shj8vvy8().b[7][1]++, _d !== void 0) ?
      /* istanbul ignore next */
      (cov_18shj8vvy8().b[6][0]++, _d) :
      /* istanbul ignore next */
      (cov_18shj8vvy8().b[6][1]++, 0),
      maxQuestions:
      /* istanbul ignore next */
      (cov_18shj8vvy8().b[11][0]++, (_f =
      /* istanbul ignore next */
      (cov_18shj8vvy8().b[13][0]++, (_e = context.maxQuestions) !== null) &&
      /* istanbul ignore next */
      (cov_18shj8vvy8().b[13][1]++, _e !== void 0) ?
      /* istanbul ignore next */
      (cov_18shj8vvy8().b[12][0]++, _e) :
      /* istanbul ignore next */
      (cov_18shj8vvy8().b[12][1]++, this.interviewContext.maxQuestions)) !== null) &&
      /* istanbul ignore next */
      (cov_18shj8vvy8().b[11][1]++, _f !== void 0) ?
      /* istanbul ignore next */
      (cov_18shj8vvy8().b[10][0]++, _f) :
      /* istanbul ignore next */
      (cov_18shj8vvy8().b[10][1]++, 10)
    });
    /* istanbul ignore next */
    cov_18shj8vvy8().s[25]++;
    console.log('📋 Interview context updated:', this.interviewContext);
  }
  /**
   * Build system context from candidate profile
   */
  buildSystemContext() {
    /* istanbul ignore next */
    cov_18shj8vvy8().f[3]++;
    const {
      currentRole,
      techStack,
      yearsExperience,
      keySkills
    } =
    /* istanbul ignore next */
    (cov_18shj8vvy8().s[26]++, this.candidateProfile);
    const {
      type,
      position,
      company,
      difficulty,
      currentQuestionCount,
      maxQuestions
    } =
    /* istanbul ignore next */
    (cov_18shj8vvy8().s[27]++, this.interviewContext);
    let systemPrompt =
    /* istanbul ignore next */
    (cov_18shj8vvy8().s[28]++, `You are an AI interviewer conducting a ${type} interview with a candidate.\n\n`);
    /* istanbul ignore next */
    cov_18shj8vvy8().s[29]++;
    systemPrompt += `Candidate Profile:\n`;
    /* istanbul ignore next */
    cov_18shj8vvy8().s[30]++;
    systemPrompt += `- Current Role: ${currentRole}\n`;
    /* istanbul ignore next */
    cov_18shj8vvy8().s[31]++;
    systemPrompt += `- Tech Stack: ${techStack}\n`;
    /* istanbul ignore next */
    cov_18shj8vvy8().s[32]++;
    systemPrompt += `- Years of Experience: ${yearsExperience}\n`;
    /* istanbul ignore next */
    cov_18shj8vvy8().s[33]++;
    systemPrompt += `- Key Skills: ${keySkills}\n\n`;
    /* istanbul ignore next */
    cov_18shj8vvy8().s[34]++;
    systemPrompt += `Interview Guidelines:\n`;
    /* istanbul ignore next */
    cov_18shj8vvy8().s[35]++;
    systemPrompt += `1. Ask relevant, engaging questions tailored to their experience level\n`;
    /* istanbul ignore next */
    cov_18shj8vvy8().s[36]++;
    systemPrompt += `2. Follow up on answers with clarifying questions\n`;
    /* istanbul ignore next */
    cov_18shj8vvy8().s[37]++;
    systemPrompt += `3. Maintain a professional but friendly tone\n`;
    /* istanbul ignore next */
    cov_18shj8vvy8().s[38]++;
    systemPrompt += `4. Keep responses concise and focused\n`;
    /* istanbul ignore next */
    cov_18shj8vvy8().s[39]++;
    systemPrompt += `5. Adapt difficulty based on their experience and responses\n\n`;
    /* istanbul ignore next */
    cov_18shj8vvy8().s[40]++;
    systemPrompt += `Interview Flow Control:\n`;
    /* istanbul ignore next */
    cov_18shj8vvy8().s[41]++;
    systemPrompt += `• Preliminary questions have already been collected - do NOT ask them again\n`;
    /* istanbul ignore next */
    cov_18shj8vvy8().s[42]++;
    systemPrompt += `• You are currently on interview question ${(
    /* istanbul ignore next */
    (cov_18shj8vvy8().b[14][0]++, currentQuestionCount) ||
    /* istanbul ignore next */
    (cov_18shj8vvy8().b[14][1]++, 0)) + 1} of ${maxQuestions}\n`;
    /* istanbul ignore next */
    cov_18shj8vvy8().s[43]++;
    systemPrompt += `• Continue with interview questions based on the candidate's profile\n`;
    /* istanbul ignore next */
    cov_18shj8vvy8().s[44]++;
    systemPrompt += `• After question ${maxQuestions}, conclude the interview and thank the candidate\n`;
    /* istanbul ignore next */
    cov_18shj8vvy8().s[45]++;
    systemPrompt += `• Do NOT exceed ${maxQuestions} interview questions\n\n`;
    /* istanbul ignore next */
    cov_18shj8vvy8().s[46]++;
    if (position) {
      /* istanbul ignore next */
      cov_18shj8vvy8().b[15][0]++;
      cov_18shj8vvy8().s[47]++;
      systemPrompt += `Position: ${position}\n`;
    } else
    /* istanbul ignore next */
    {
      cov_18shj8vvy8().b[15][1]++;
    }
    cov_18shj8vvy8().s[48]++;
    if (company) {
      /* istanbul ignore next */
      cov_18shj8vvy8().b[16][0]++;
      cov_18shj8vvy8().s[49]++;
      systemPrompt += `Company: ${company}\n`;
    } else
    /* istanbul ignore next */
    {
      cov_18shj8vvy8().b[16][1]++;
    }
    cov_18shj8vvy8().s[50]++;
    if (difficulty) {
      /* istanbul ignore next */
      cov_18shj8vvy8().b[17][0]++;
      cov_18shj8vvy8().s[51]++;
      systemPrompt += `Difficulty Level: ${difficulty}\n`;
    } else
    /* istanbul ignore next */
    {
      cov_18shj8vvy8().b[17][1]++;
    }
    cov_18shj8vvy8().s[52]++;
    switch (type) {
      case 'technical':
        /* istanbul ignore next */
        cov_18shj8vvy8().b[18][0]++;
        cov_18shj8vvy8().s[53]++;
        systemPrompt += `\nFocus on technical skills relevant to their tech stack (${techStack}), problem-solving, coding concepts, and system design appropriate for someone with ${yearsExperience} years of experience.`;
        /* istanbul ignore next */
        cov_18shj8vvy8().s[54]++;
        break;
      case 'behavioral':
        /* istanbul ignore next */
        cov_18shj8vvy8().b[18][1]++;
        cov_18shj8vvy8().s[55]++;
        systemPrompt += `\nFocus on behavioral questions about teamwork, leadership, conflict resolution, and past experiences relevant to someone in a ${currentRole} role.`;
        /* istanbul ignore next */
        cov_18shj8vvy8().s[56]++;
        break;
      default:
        /* istanbul ignore next */
        cov_18shj8vvy8().b[18][2]++;
        cov_18shj8vvy8().s[57]++;
        systemPrompt += `\nAsk a mix of questions about background, experience, goals, and general fit for the role, considering their ${yearsExperience} years of experience in ${currentRole}.`;
    }
    /* istanbul ignore next */
    cov_18shj8vvy8().s[58]++;
    systemPrompt += `\n\nKeep your responses under 100 words and ask one question at a time.`;
    /* istanbul ignore next */
    cov_18shj8vvy8().s[59]++;
    return systemPrompt;
  }
  /**
   * Get system prompt based on interview context
   */
  getSystemPrompt() {
    /* istanbul ignore next */
    cov_18shj8vvy8().f[4]++;
    const {
      type,
      position,
      company,
      difficulty,
      preliminaryCollected,
      currentQuestionCount,
      maxQuestions
    } =
    /* istanbul ignore next */
    (cov_18shj8vvy8().s[60]++, this.interviewContext);
    let basePrompt =
    /* istanbul ignore next */
    (cov_18shj8vvy8().s[61]++, `You are an AI interviewer conducting a ${type} interview. You should:\n\n1. Ask relevant, engaging questions\n2. Follow up on answers with clarifying questions\n3. Maintain a professional but friendly tone\n4. Keep responses concise and focused\n5. Adapt difficulty based on candidate responses\n\nInterview Flow Instructions:\n• Ask preliminary questions (role, tech stack, experience, skills) only once at the beginning\n• After preliminary data is collected (preliminaryCollected = ${preliminaryCollected}), switch to actual interview questions\n• Keep track of question numbers - you are currently on question ${(
    /* istanbul ignore next */
    (cov_18shj8vvy8().b[19][0]++, currentQuestionCount) ||
    /* istanbul ignore next */
    (cov_18shj8vvy8().b[19][1]++, 0)) + 1} of ${maxQuestions}\n• Increment the question number each time you ask a new interview question\n• Stop asking questions after reaching ${maxQuestions} questions and thank the candidate for their time\n• Do NOT repeat preliminary questions once they have been collected\n• Do NOT exceed the maximum number of questions (${maxQuestions})\n\n`);
    /* istanbul ignore next */
    cov_18shj8vvy8().s[62]++;
    if (position) {
      /* istanbul ignore next */
      cov_18shj8vvy8().b[20][0]++;
      cov_18shj8vvy8().s[63]++;
      basePrompt += `Position: ${position}\n`;
    } else
    /* istanbul ignore next */
    {
      cov_18shj8vvy8().b[20][1]++;
    }
    cov_18shj8vvy8().s[64]++;
    if (company) {
      /* istanbul ignore next */
      cov_18shj8vvy8().b[21][0]++;
      cov_18shj8vvy8().s[65]++;
      basePrompt += `Company: ${company}\n`;
    } else
    /* istanbul ignore next */
    {
      cov_18shj8vvy8().b[21][1]++;
    }
    cov_18shj8vvy8().s[66]++;
    if (difficulty) {
      /* istanbul ignore next */
      cov_18shj8vvy8().b[22][0]++;
      cov_18shj8vvy8().s[67]++;
      basePrompt += `Difficulty Level: ${difficulty}\n`;
    } else
    /* istanbul ignore next */
    {
      cov_18shj8vvy8().b[22][1]++;
    }
    cov_18shj8vvy8().s[68]++;
    switch (type) {
      case 'technical':
        /* istanbul ignore next */
        cov_18shj8vvy8().b[23][0]++;
        cov_18shj8vvy8().s[69]++;
        basePrompt += `\nFocus on technical skills, problem-solving, coding concepts, and system design. Ask about specific technologies, algorithms, and best practices.`;
        /* istanbul ignore next */
        cov_18shj8vvy8().s[70]++;
        break;
      case 'behavioral':
        /* istanbul ignore next */
        cov_18shj8vvy8().b[23][1]++;
        cov_18shj8vvy8().s[71]++;
        basePrompt += `\nFocus on behavioral questions about teamwork, leadership, conflict resolution, and past experiences. Use the STAR method for evaluation.`;
        /* istanbul ignore next */
        cov_18shj8vvy8().s[72]++;
        break;
      default:
        /* istanbul ignore next */
        cov_18shj8vvy8().b[23][2]++;
        cov_18shj8vvy8().s[73]++;
        basePrompt += `\nAsk a mix of questions about background, experience, goals, and general fit for the role.`;
    }
    /* istanbul ignore next */
    cov_18shj8vvy8().s[74]++;
    basePrompt += `\n\nKeep your responses under 100 words and ask one question at a time.`;
    /* istanbul ignore next */
    cov_18shj8vvy8().s[75]++;
    return basePrompt;
  }
  /**
   * Get the OpenAI client instance
   * @returns The AzureOpenAI client instance or null if not initialized
   */
  async getClient() {
    /* istanbul ignore next */
    cov_18shj8vvy8().f[5]++;
    cov_18shj8vvy8().s[76]++;
    if (!this.isInitialized) {
      /* istanbul ignore next */
      cov_18shj8vvy8().b[24][0]++;
      const initialized =
      /* istanbul ignore next */
      (cov_18shj8vvy8().s[77]++, await this.initialize());
      /* istanbul ignore next */
      cov_18shj8vvy8().s[78]++;
      if (!initialized) {
        /* istanbul ignore next */
        cov_18shj8vvy8().b[25][0]++;
        cov_18shj8vvy8().s[79]++;
        return null;
      } else
      /* istanbul ignore next */
      {
        cov_18shj8vvy8().b[25][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_18shj8vvy8().b[24][1]++;
    }
    cov_18shj8vvy8().s[80]++;
    return this.client;
  }
  /**
   * Start a new interview conversation
   */
  async startInterviewConversation() {
    /* istanbul ignore next */
    cov_18shj8vvy8().f[6]++;
    cov_18shj8vvy8().s[81]++;
    if (
    /* istanbul ignore next */
    (cov_18shj8vvy8().b[27][0]++, !this.isInitialized) ||
    /* istanbul ignore next */
    (cov_18shj8vvy8().b[27][1]++, !this.client)) {
      /* istanbul ignore next */
      cov_18shj8vvy8().b[26][0]++;
      cov_18shj8vvy8().s[82]++;
      throw new Error('Azure OpenAI Service not initialized');
    } else
    /* istanbul ignore next */
    {
      cov_18shj8vvy8().b[26][1]++;
    }
    // Reset conversation history and preliminary questions state
    cov_18shj8vvy8().s[83]++;
    this.conversationHistory = [];
    /* istanbul ignore next */
    cov_18shj8vvy8().s[84]++;
    this.prelimIndex = 0;
    /* istanbul ignore next */
    cov_18shj8vvy8().s[85]++;
    this.candidateProfile = {};
    // Reset interview context flags
    /* istanbul ignore next */
    cov_18shj8vvy8().s[86]++;
    this.interviewContext.preliminaryCollected = false;
    /* istanbul ignore next */
    cov_18shj8vvy8().s[87]++;
    this.interviewContext.currentQuestionCount = 0;
    // Send greeting + first preliminary question
    const greeting =
    /* istanbul ignore next */
    (cov_18shj8vvy8().s[88]++, "Hello! Welcome to your interview practice session. Before we begin, I'd like to learn a bit about you.");
    const firstQuestion =
    /* istanbul ignore next */
    (cov_18shj8vvy8().s[89]++, this.prelimQuestions[0]);
    const openingMessage =
    /* istanbul ignore next */
    (cov_18shj8vvy8().s[90]++, `${greeting}\n\n${firstQuestion}`);
    /* istanbul ignore next */
    cov_18shj8vvy8().s[91]++;
    return {
      content: openingMessage,
      questionNumber: 0,
      // 0 indicates preliminary questions
      isComplete: false
    };
  }
  /**
   * Get opening message based on interview type
   * Uses generateInterviewQuestion helper for domain-specific questions
   */
  async getOpeningMessage() {
    /* istanbul ignore next */
    cov_18shj8vvy8().f[7]++;
    const {
      position
    } =
    /* istanbul ignore next */
    (cov_18shj8vvy8().s[92]++, this.interviewContext);
    let greeting =
    /* istanbul ignore next */
    (cov_18shj8vvy8().s[93]++, "");
    /* istanbul ignore next */
    cov_18shj8vvy8().s[94]++;
    if (position) {
      /* istanbul ignore next */
      cov_18shj8vvy8().b[28][0]++;
      cov_18shj8vvy8().s[95]++;
      greeting += `Let's discuss the ${position} position. `;
    } else
    /* istanbul ignore next */
    {
      cov_18shj8vvy8().b[28][1]++;
    }
    cov_18shj8vvy8().s[96]++;
    try {
      // Use the helper to generate a domain-specific opening question
      const question =
      /* istanbul ignore next */
      (cov_18shj8vvy8().s[97]++, await this.generateInterviewQuestion());
      /* istanbul ignore next */
      cov_18shj8vvy8().s[98]++;
      return greeting + question;
    } catch (error) {
      /* istanbul ignore next */
      cov_18shj8vvy8().s[99]++;
      console.warn('⚠️ Falling back to default opening question');
      // Fallback to a simpler approach if generation fails
      /* istanbul ignore next */
      cov_18shj8vvy8().s[100]++;
      return greeting + this.getFallbackQuestion();
    }
  }
  /**
   * Process user response and generate next question or comment
   */
  async processUserResponse(userResponse) {
    /* istanbul ignore next */
    cov_18shj8vvy8().f[8]++;
    var _a, _b;
    /* istanbul ignore next */
    cov_18shj8vvy8().s[101]++;
    if (
    /* istanbul ignore next */
    (cov_18shj8vvy8().b[30][0]++, !this.isInitialized) ||
    /* istanbul ignore next */
    (cov_18shj8vvy8().b[30][1]++, !this.client)) {
      /* istanbul ignore next */
      cov_18shj8vvy8().b[29][0]++;
      cov_18shj8vvy8().s[102]++;
      throw new Error('Azure OpenAI Service not initialized');
    } else
    /* istanbul ignore next */
    {
      cov_18shj8vvy8().b[29][1]++;
    }
    // Check if we're still collecting preliminary information
    cov_18shj8vvy8().s[103]++;
    if (!this.interviewContext.preliminaryCollected) {
      /* istanbul ignore next */
      cov_18shj8vvy8().b[31][0]++;
      cov_18shj8vvy8().s[104]++;
      // We're in preliminary phase - check if we still have questions to ask
      if (this.prelimIndex < this.prelimQuestions.length) {
        /* istanbul ignore next */
        cov_18shj8vvy8().b[32][0]++;
        // Store the user's answer to the current preliminary question
        const questionKeys =
        /* istanbul ignore next */
        (cov_18shj8vvy8().s[105]++, ['currentRole', 'techStack', 'yearsExperience', 'keySkills', 'questionCount']);
        /* istanbul ignore next */
        cov_18shj8vvy8().s[106]++;
        this.candidateProfile[questionKeys[this.prelimIndex]] = userResponse;
        // Increment to next preliminary question
        /* istanbul ignore next */
        cov_18shj8vvy8().s[107]++;
        this.prelimIndex++;
        // If there are more preliminary questions, return the next one
        /* istanbul ignore next */
        cov_18shj8vvy8().s[108]++;
        if (this.prelimIndex < this.prelimQuestions.length) {
          /* istanbul ignore next */
          cov_18shj8vvy8().b[33][0]++;
          const nextQuestion =
          /* istanbul ignore next */
          (cov_18shj8vvy8().s[109]++, this.prelimQuestions[this.prelimIndex]);
          /* istanbul ignore next */
          cov_18shj8vvy8().s[110]++;
          return {
            content: `Thank you! ${nextQuestion}`,
            questionNumber: 0,
            // Still in preliminary phase - keep at 0
            isComplete: false
          };
        } else {
          /* istanbul ignore next */
          cov_18shj8vvy8().b[33][1]++;
          cov_18shj8vvy8().s[111]++;
          // All preliminary questions collected - mark as complete
          this.interviewContext.preliminaryCollected = true;
          // Keep currentQuestionCount at 0 as we haven't asked real questions yet
          /* istanbul ignore next */
          cov_18shj8vvy8().s[112]++;
          this.interviewContext.currentQuestionCount = 0;
          // Build system context from collected profile
          const systemContext =
          /* istanbul ignore next */
          (cov_18shj8vvy8().s[113]++, this.buildSystemContext());
          // Initialize conversation history with system context
          /* istanbul ignore next */
          cov_18shj8vvy8().s[114]++;
          this.conversationHistory = [{
            role: 'system',
            content: systemContext
          }];
          // Set max questions from user's response
          const requestedQuestions =
          /* istanbul ignore next */
          (cov_18shj8vvy8().s[115]++,
          /* istanbul ignore next */
          (cov_18shj8vvy8().b[34][0]++, parseInt(this.candidateProfile.questionCount)) ||
          /* istanbul ignore next */
          (cov_18shj8vvy8().b[34][1]++, 10));
          /* istanbul ignore next */
          cov_18shj8vvy8().s[116]++;
          this.interviewContext.maxQuestions = Math.min(Math.max(requestedQuestions, 5), 20); // Between 5 and 20
          // Generate the first real interview question
          const openingMessage =
          /* istanbul ignore next */
          (cov_18shj8vvy8().s[117]++, await this.getOpeningMessage());
          /* istanbul ignore next */
          cov_18shj8vvy8().s[118]++;
          this.conversationHistory.push({
            role: 'assistant',
            content: openingMessage
          });
          // Increment question count for the first real question
          /* istanbul ignore next */
          cov_18shj8vvy8().s[119]++;
          this.interviewContext.currentQuestionCount = 1;
          /* istanbul ignore next */
          cov_18shj8vvy8().s[120]++;
          return {
            content: `Great! I now have a better understanding of your background. Let's begin the interview.\n\n${openingMessage}`,
            questionNumber: 1,
            // First real question
            isComplete: false
          };
        }
      } else
      /* istanbul ignore next */
      {
        cov_18shj8vvy8().b[32][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_18shj8vvy8().b[31][1]++;
    }
    // Normal interview flow - preliminary info has been collected
    // Add user response to conversation history
    cov_18shj8vvy8().s[121]++;
    this.conversationHistory.push({
      role: 'user',
      content: userResponse
    });
    /* istanbul ignore next */
    cov_18shj8vvy8().s[122]++;
    try {
      const completion =
      /* istanbul ignore next */
      (cov_18shj8vvy8().s[123]++, await this.client.chat.completions.create({
        model: this.modelDeployment,
        messages: this.conversationHistory,
        temperature: 0.7,
        max_tokens: 200,
        top_p: 0.9,
        frequency_penalty: 0.1,
        presence_penalty: 0.1
      }));
      const assistantResponse =
      /* istanbul ignore next */
      (cov_18shj8vvy8().s[124]++,
      /* istanbul ignore next */
      (cov_18shj8vvy8().b[35][0]++,
      /* istanbul ignore next */
      (cov_18shj8vvy8().b[37][0]++, (_b =
      /* istanbul ignore next */
      (cov_18shj8vvy8().b[39][0]++, (_a = completion.choices[0]) === null) ||
      /* istanbul ignore next */
      (cov_18shj8vvy8().b[39][1]++, _a === void 0) ?
      /* istanbul ignore next */
      (cov_18shj8vvy8().b[38][0]++, void 0) :
      /* istanbul ignore next */
      (cov_18shj8vvy8().b[38][1]++, _a.message)) === null) ||
      /* istanbul ignore next */
      (cov_18shj8vvy8().b[37][1]++, _b === void 0) ?
      /* istanbul ignore next */
      (cov_18shj8vvy8().b[36][0]++, void 0) :
      /* istanbul ignore next */
      (cov_18shj8vvy8().b[36][1]++, _b.content)) ||
      /* istanbul ignore next */
      (cov_18shj8vvy8().b[35][1]++, 'I\'m sorry, I didn\'t catch that. Could you repeat your answer?'));
      // Add assistant response to conversation history
      /* istanbul ignore next */
      cov_18shj8vvy8().s[125]++;
      this.conversationHistory.push({
        role: 'assistant',
        content: assistantResponse
      });
      // Increment question count for the next question
      const currentQuestionCount =
      /* istanbul ignore next */
      (cov_18shj8vvy8().s[126]++, (
      /* istanbul ignore next */
      (cov_18shj8vvy8().b[40][0]++, this.interviewContext.currentQuestionCount) ||
      /* istanbul ignore next */
      (cov_18shj8vvy8().b[40][1]++, 0)) + 1);
      const maxQuestions =
      /* istanbul ignore next */
      (cov_18shj8vvy8().s[127]++,
      /* istanbul ignore next */
      (cov_18shj8vvy8().b[41][0]++, this.interviewContext.maxQuestions) ||
      /* istanbul ignore next */
      (cov_18shj8vvy8().b[41][1]++, 10));
      // Update question count in context
      /* istanbul ignore next */
      cov_18shj8vvy8().s[128]++;
      this.interviewContext.currentQuestionCount = currentQuestionCount;
      /* istanbul ignore next */
      cov_18shj8vvy8().s[129]++;
      return {
        content: assistantResponse,
        questionNumber: currentQuestionCount,
        isComplete: currentQuestionCount >= maxQuestions,
        followUpSuggestions: this.generateFollowUpSuggestions()
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_18shj8vvy8().s[130]++;
      console.error('❌ Error generating OpenAI response:', error);
      /* istanbul ignore next */
      cov_18shj8vvy8().s[131]++;
      throw new Error('Failed to generate response');
    }
  }
  /**
   * Generate follow-up suggestions based on conversation
   */
  generateFollowUpSuggestions() {
    /* istanbul ignore next */
    cov_18shj8vvy8().f[9]++;
    const {
      type
    } =
    /* istanbul ignore next */
    (cov_18shj8vvy8().s[132]++, this.interviewContext);
    /* istanbul ignore next */
    cov_18shj8vvy8().s[133]++;
    switch (type) {
      case 'technical':
        /* istanbul ignore next */
        cov_18shj8vvy8().b[42][0]++;
        cov_18shj8vvy8().s[134]++;
        return ["Can you explain your thought process?", "What would you do differently?", "How would this scale?"];
      case 'behavioral':
        /* istanbul ignore next */
        cov_18shj8vvy8().b[42][1]++;
        cov_18shj8vvy8().s[135]++;
        return ["What was the outcome?", "What did you learn?", "How would you handle it now?"];
      default:
        /* istanbul ignore next */
        cov_18shj8vvy8().b[42][2]++;
        cov_18shj8vvy8().s[136]++;
        return ["Can you elaborate on that?", "What was your biggest challenge?", "What motivates you?"];
    }
  }
  /**
   * Generate a domain-specific interview question based on context and conversation history
   * This helper generates a single, concise question tailored to the interview type and candidate profile
   */
  async generateInterviewQuestion() {
    /* istanbul ignore next */
    cov_18shj8vvy8().f[10]++;
    var _a, _b;
    /* istanbul ignore next */
    cov_18shj8vvy8().s[137]++;
    if (
    /* istanbul ignore next */
    (cov_18shj8vvy8().b[44][0]++, !this.isInitialized) ||
    /* istanbul ignore next */
    (cov_18shj8vvy8().b[44][1]++, !this.client)) {
      /* istanbul ignore next */
      cov_18shj8vvy8().b[43][0]++;
      cov_18shj8vvy8().s[138]++;
      throw new Error('Azure OpenAI Service not initialized');
    } else
    /* istanbul ignore next */
    {
      cov_18shj8vvy8().b[43][1]++;
    }
    // Build the appropriate system prompt based on interview type and profile
    const {
      type,
      difficulty,
      position
    } =
    /* istanbul ignore next */
    (cov_18shj8vvy8().s[139]++, this.interviewContext);
    const {
      currentRole,
      techStack,
      yearsExperience,
      keySkills
    } =
    /* istanbul ignore next */
    (cov_18shj8vvy8().s[140]++, this.candidateProfile);
    let questionPrompt =
    /* istanbul ignore next */
    (cov_18shj8vvy8().s[141]++, `Generate one concise interview question. `);
    // Add context-specific instructions based on interview type
    /* istanbul ignore next */
    cov_18shj8vvy8().s[142]++;
    switch (type) {
      case 'technical':
        /* istanbul ignore next */
        cov_18shj8vvy8().b[45][0]++;
        cov_18shj8vvy8().s[143]++;
        questionPrompt += `Focus on technical skills and problem-solving.\n`;
        /* istanbul ignore next */
        cov_18shj8vvy8().s[144]++;
        questionPrompt += `Consider the candidate's tech stack: ${
        /* istanbul ignore next */
        (cov_18shj8vvy8().b[46][0]++, techStack) ||
        /* istanbul ignore next */
        (cov_18shj8vvy8().b[46][1]++, 'various technologies')}.\n`;
        /* istanbul ignore next */
        cov_18shj8vvy8().s[145]++;
        questionPrompt += `Experience level: ${
        /* istanbul ignore next */
        (cov_18shj8vvy8().b[47][0]++, yearsExperience) ||
        /* istanbul ignore next */
        (cov_18shj8vvy8().b[47][1]++, 'mid-level')} years.\n`;
        /* istanbul ignore next */
        cov_18shj8vvy8().s[146]++;
        questionPrompt += `Include specific technical scenarios such as:\n`;
        /* istanbul ignore next */
        cov_18shj8vvy8().s[147]++;
        questionPrompt += `- Code/architecture design challenges\n`;
        /* istanbul ignore next */
        cov_18shj8vvy8().s[148]++;
        questionPrompt += `- Debugging or optimization problems\n`;
        /* istanbul ignore next */
        cov_18shj8vvy8().s[149]++;
        questionPrompt += `- Technology-specific best practices\n`;
        /* istanbul ignore next */
        cov_18shj8vvy8().s[150]++;
        questionPrompt += `- System scalability considerations\n`;
        /* istanbul ignore next */
        cov_18shj8vvy8().s[151]++;
        break;
      case 'behavioral':
        /* istanbul ignore next */
        cov_18shj8vvy8().b[45][1]++;
        cov_18shj8vvy8().s[152]++;
        questionPrompt += `Focus on behavioral assessment using STAR method.\n`;
        /* istanbul ignore next */
        cov_18shj8vvy8().s[153]++;
        questionPrompt += `Current role: ${
        /* istanbul ignore next */
        (cov_18shj8vvy8().b[48][0]++, currentRole) ||
        /* istanbul ignore next */
        (cov_18shj8vvy8().b[48][1]++, 'professional')}.\n`;
        /* istanbul ignore next */
        cov_18shj8vvy8().s[154]++;
        questionPrompt += `Experience: ${
        /* istanbul ignore next */
        (cov_18shj8vvy8().b[49][0]++, yearsExperience) ||
        /* istanbul ignore next */
        (cov_18shj8vvy8().b[49][1]++, 'several')} years.\n`;
        /* istanbul ignore next */
        cov_18shj8vvy8().s[155]++;
        questionPrompt += `Create STAR-format prompts about:\n`;
        /* istanbul ignore next */
        cov_18shj8vvy8().s[156]++;
        questionPrompt += `- Leadership and teamwork situations\n`;
        /* istanbul ignore next */
        cov_18shj8vvy8().s[157]++;
        questionPrompt += `- Conflict resolution examples\n`;
        /* istanbul ignore next */
        cov_18shj8vvy8().s[158]++;
        questionPrompt += `- Project management challenges\n`;
        /* istanbul ignore next */
        cov_18shj8vvy8().s[159]++;
        questionPrompt += `- Professional growth moments\n`;
        /* istanbul ignore next */
        cov_18shj8vvy8().s[160]++;
        break;
      default:
        /* istanbul ignore next */
        cov_18shj8vvy8().b[45][2]++;
        cov_18shj8vvy8().s[161]++;
        // 'general'
        questionPrompt += `Focus on overall experience and motivation.\n`;
        /* istanbul ignore next */
        cov_18shj8vvy8().s[162]++;
        questionPrompt += `Role: ${
        /* istanbul ignore next */
        (cov_18shj8vvy8().b[50][0]++, currentRole) ||
        /* istanbul ignore next */
        (cov_18shj8vvy8().b[50][1]++, 'professional')}.\n`;
        /* istanbul ignore next */
        cov_18shj8vvy8().s[163]++;
        questionPrompt += `Skills: ${
        /* istanbul ignore next */
        (cov_18shj8vvy8().b[51][0]++, keySkills) ||
        /* istanbul ignore next */
        (cov_18shj8vvy8().b[51][1]++, 'various competencies')}.\n`;
        /* istanbul ignore next */
        cov_18shj8vvy8().s[164]++;
        questionPrompt += `Cover aspects such as:\n`;
        /* istanbul ignore next */
        cov_18shj8vvy8().s[165]++;
        questionPrompt += `- Career journey and transitions\n`;
        /* istanbul ignore next */
        cov_18shj8vvy8().s[166]++;
        questionPrompt += `- Professional motivations and goals\n`;
        /* istanbul ignore next */
        cov_18shj8vvy8().s[167]++;
        questionPrompt += `- Work style and preferences\n`;
        /* istanbul ignore next */
        cov_18shj8vvy8().s[168]++;
        questionPrompt += `- Learning and adaptation experiences\n`;
    }
    // Add difficulty adjustment
    /* istanbul ignore next */
    cov_18shj8vvy8().s[169]++;
    if (difficulty) {
      /* istanbul ignore next */
      cov_18shj8vvy8().b[52][0]++;
      cov_18shj8vvy8().s[170]++;
      questionPrompt += `\nDifficulty level: ${difficulty}.`;
    } else
    /* istanbul ignore next */
    {
      cov_18shj8vvy8().b[52][1]++;
    }
    // Add position context if available
    cov_18shj8vvy8().s[171]++;
    if (position) {
      /* istanbul ignore next */
      cov_18shj8vvy8().b[53][0]++;
      cov_18shj8vvy8().s[172]++;
      questionPrompt += `\nPosition being interviewed for: ${position}.`;
    } else
    /* istanbul ignore next */
    {
      cov_18shj8vvy8().b[53][1]++;
    }
    // Add instruction for question format
    cov_18shj8vvy8().s[173]++;
    questionPrompt += `\n\nRequirements:\n`;
    /* istanbul ignore next */
    cov_18shj8vvy8().s[174]++;
    questionPrompt += `- Make the question specific and actionable\n`;
    /* istanbul ignore next */
    cov_18shj8vvy8().s[175]++;
    questionPrompt += `- Keep it under 50 words\n`;
    /* istanbul ignore next */
    cov_18shj8vvy8().s[176]++;
    questionPrompt += `- Avoid yes/no questions\n`;
    /* istanbul ignore next */
    cov_18shj8vvy8().s[177]++;
    questionPrompt += `- Ensure it's appropriate for the experience level\n`;
    // Consider conversation history for context continuity
    const recentContext =
    /* istanbul ignore next */
    (cov_18shj8vvy8().s[178]++, this.conversationHistory.slice(-4)); // Last 2 exchanges
    /* istanbul ignore next */
    cov_18shj8vvy8().s[179]++;
    if (recentContext.length > 0) {
      /* istanbul ignore next */
      cov_18shj8vvy8().b[54][0]++;
      cov_18shj8vvy8().s[180]++;
      questionPrompt += `\n\nBuild upon but don't repeat topics from recent conversation.`;
    } else
    /* istanbul ignore next */
    {
      cov_18shj8vvy8().b[54][1]++;
    }
    cov_18shj8vvy8().s[181]++;
    try {
      // Create the messages array with system context and the prompt
      const messages =
      /* istanbul ignore next */
      (cov_18shj8vvy8().s[182]++, [{
        role: 'system',
        content: this.buildSystemContext()
      }, ...recentContext, {
        role: 'user',
        content: questionPrompt
      }]);
      const completion =
      /* istanbul ignore next */
      (cov_18shj8vvy8().s[183]++, await this.client.chat.completions.create({
        model: this.modelDeployment,
        messages,
        temperature: 0.8,
        // Slightly higher for more variety
        max_tokens: 100,
        top_p: 0.9,
        frequency_penalty: 0.3,
        // Reduce repetition
        presence_penalty: 0.2
      }));
      const question =
      /* istanbul ignore next */
      (cov_18shj8vvy8().s[184]++,
      /* istanbul ignore next */
      (cov_18shj8vvy8().b[55][0]++,
      /* istanbul ignore next */
      (cov_18shj8vvy8().b[57][0]++, (_b =
      /* istanbul ignore next */
      (cov_18shj8vvy8().b[59][0]++, (_a = completion.choices[0]) === null) ||
      /* istanbul ignore next */
      (cov_18shj8vvy8().b[59][1]++, _a === void 0) ?
      /* istanbul ignore next */
      (cov_18shj8vvy8().b[58][0]++, void 0) :
      /* istanbul ignore next */
      (cov_18shj8vvy8().b[58][1]++, _a.message)) === null) ||
      /* istanbul ignore next */
      (cov_18shj8vvy8().b[57][1]++, _b === void 0) ?
      /* istanbul ignore next */
      (cov_18shj8vvy8().b[56][0]++, void 0) :
      /* istanbul ignore next */
      (cov_18shj8vvy8().b[56][1]++, _b.content)) ||
      /* istanbul ignore next */
      (cov_18shj8vvy8().b[55][1]++, this.getFallbackQuestion()));
      /* istanbul ignore next */
      cov_18shj8vvy8().s[185]++;
      return question.trim();
    } catch (error) {
      /* istanbul ignore next */
      cov_18shj8vvy8().s[186]++;
      console.error('❌ Error generating interview question:', error);
      // Return a fallback question based on type
      /* istanbul ignore next */
      cov_18shj8vvy8().s[187]++;
      return this.getFallbackQuestion();
    }
  }
  /**
   * Get a fallback question when generation fails
   */
  getFallbackQuestion() {
    /* istanbul ignore next */
    cov_18shj8vvy8().f[11]++;
    const {
      type
    } =
    /* istanbul ignore next */
    (cov_18shj8vvy8().s[188]++, this.interviewContext);
    const {
      currentRole,
      techStack,
      yearsExperience
    } =
    /* istanbul ignore next */
    (cov_18shj8vvy8().s[189]++, this.candidateProfile);
    /* istanbul ignore next */
    cov_18shj8vvy8().s[190]++;
    switch (type) {
      case 'technical':
        /* istanbul ignore next */
        cov_18shj8vvy8().b[60][0]++;
        cov_18shj8vvy8().s[191]++;
        return `Can you describe a technical challenge you've faced with ${
        /* istanbul ignore next */
        (cov_18shj8vvy8().b[61][0]++, techStack) ||
        /* istanbul ignore next */
        (cov_18shj8vvy8().b[61][1]++, 'your current tech stack')} and how you solved it?`;
      case 'behavioral':
        /* istanbul ignore next */
        cov_18shj8vvy8().b[60][1]++;
        cov_18shj8vvy8().s[192]++;
        return `Tell me about a time when you had to work with a difficult team member. How did you handle the situation?`;
      default:
        /* istanbul ignore next */
        cov_18shj8vvy8().b[60][2]++;
        cov_18shj8vvy8().s[193]++;
        return `What interests you most about this opportunity and how does it align with your career goals?`;
    }
  }
  /**
   * Generate a completion for a given prompt
   */
  async generateCompletion(prompt) {
    /* istanbul ignore next */
    cov_18shj8vvy8().f[12]++;
    var _a, _b;
    /* istanbul ignore next */
    cov_18shj8vvy8().s[194]++;
    if (
    /* istanbul ignore next */
    (cov_18shj8vvy8().b[63][0]++, !this.isInitialized) ||
    /* istanbul ignore next */
    (cov_18shj8vvy8().b[63][1]++, !this.client)) {
      /* istanbul ignore next */
      cov_18shj8vvy8().b[62][0]++;
      cov_18shj8vvy8().s[195]++;
      throw new Error('Azure OpenAI Service not initialized');
    } else
    /* istanbul ignore next */
    {
      cov_18shj8vvy8().b[62][1]++;
    }
    cov_18shj8vvy8().s[196]++;
    try {
      const completion =
      /* istanbul ignore next */
      (cov_18shj8vvy8().s[197]++, await this.client.chat.completions.create({
        model: this.modelDeployment,
        messages: [{
          role: 'user',
          content: prompt
        }],
        temperature: 0.7,
        max_tokens: 1000
      }));
      /* istanbul ignore next */
      cov_18shj8vvy8().s[198]++;
      return /* istanbul ignore next */(cov_18shj8vvy8().b[64][0]++,
      /* istanbul ignore next */
      (cov_18shj8vvy8().b[66][0]++, (_b =
      /* istanbul ignore next */
      (cov_18shj8vvy8().b[68][0]++, (_a = completion.choices[0]) === null) ||
      /* istanbul ignore next */
      (cov_18shj8vvy8().b[68][1]++, _a === void 0) ?
      /* istanbul ignore next */
      (cov_18shj8vvy8().b[67][0]++, void 0) :
      /* istanbul ignore next */
      (cov_18shj8vvy8().b[67][1]++, _a.message)) === null) ||
      /* istanbul ignore next */
      (cov_18shj8vvy8().b[66][1]++, _b === void 0) ?
      /* istanbul ignore next */
      (cov_18shj8vvy8().b[65][0]++, void 0) :
      /* istanbul ignore next */
      (cov_18shj8vvy8().b[65][1]++, _b.content)) ||
      /* istanbul ignore next */
      (cov_18shj8vvy8().b[64][1]++, 'Unable to generate completion.');
    } catch (error) {
      /* istanbul ignore next */
      cov_18shj8vvy8().s[199]++;
      console.error('❌ Error generating completion:', error);
      /* istanbul ignore next */
      cov_18shj8vvy8().s[200]++;
      throw new Error('Failed to generate completion');
    }
  }
  /**
   * Generate interview summary and feedback
   */
  async generateInterviewSummary() {
    /* istanbul ignore next */
    cov_18shj8vvy8().f[13]++;
    var _a, _b;
    /* istanbul ignore next */
    cov_18shj8vvy8().s[201]++;
    if (
    /* istanbul ignore next */
    (cov_18shj8vvy8().b[70][0]++, !this.isInitialized) ||
    /* istanbul ignore next */
    (cov_18shj8vvy8().b[70][1]++, !this.client)) {
      /* istanbul ignore next */
      cov_18shj8vvy8().b[69][0]++;
      cov_18shj8vvy8().s[202]++;
      throw new Error('Azure OpenAI Service not initialized');
    } else
    /* istanbul ignore next */
    {
      cov_18shj8vvy8().b[69][1]++;
    }
    const summaryPrompt =
    /* istanbul ignore next */
    (cov_18shj8vvy8().s[203]++, {
      role: 'system',
      content: `Based on the interview conversation, provide a brief summary of the candidate's performance, highlighting:\n1. Key strengths demonstrated\n2. Areas for improvement\n3. Overall assessment\n4. Recommendation\n\nKeep it concise and constructive (under 200 words).`
    });
    /* istanbul ignore next */
    cov_18shj8vvy8().s[204]++;
    try {
      const completion =
      /* istanbul ignore next */
      (cov_18shj8vvy8().s[205]++, await this.client.chat.completions.create({
        model: this.modelDeployment,
        messages: [...this.conversationHistory, summaryPrompt],
        temperature: 0.3,
        max_tokens: 300
      }));
      /* istanbul ignore next */
      cov_18shj8vvy8().s[206]++;
      return /* istanbul ignore next */(cov_18shj8vvy8().b[71][0]++,
      /* istanbul ignore next */
      (cov_18shj8vvy8().b[73][0]++, (_b =
      /* istanbul ignore next */
      (cov_18shj8vvy8().b[75][0]++, (_a = completion.choices[0]) === null) ||
      /* istanbul ignore next */
      (cov_18shj8vvy8().b[75][1]++, _a === void 0) ?
      /* istanbul ignore next */
      (cov_18shj8vvy8().b[74][0]++, void 0) :
      /* istanbul ignore next */
      (cov_18shj8vvy8().b[74][1]++, _a.message)) === null) ||
      /* istanbul ignore next */
      (cov_18shj8vvy8().b[73][1]++, _b === void 0) ?
      /* istanbul ignore next */
      (cov_18shj8vvy8().b[72][0]++, void 0) :
      /* istanbul ignore next */
      (cov_18shj8vvy8().b[72][1]++, _b.content)) ||
      /* istanbul ignore next */
      (cov_18shj8vvy8().b[71][1]++, 'Unable to generate summary.');
    } catch (error) {
      /* istanbul ignore next */
      cov_18shj8vvy8().s[207]++;
      console.error('❌ Error generating interview summary:', error);
      /* istanbul ignore next */
      cov_18shj8vvy8().s[208]++;
      throw new Error('Failed to generate summary');
    }
  }
  /**
   * Get conversation history
   */
  getConversationHistory() {
    /* istanbul ignore next */
    cov_18shj8vvy8().f[14]++;
    cov_18shj8vvy8().s[209]++;
    return this.conversationHistory.filter(msg => {
      /* istanbul ignore next */
      cov_18shj8vvy8().f[15]++;
      cov_18shj8vvy8().s[210]++;
      return msg.role !== 'system';
    });
  }
  /**
   * Clear conversation history
   */
  clearConversation() {
    /* istanbul ignore next */
    cov_18shj8vvy8().f[16]++;
    cov_18shj8vvy8().s[211]++;
    this.conversationHistory = [];
    /* istanbul ignore next */
    cov_18shj8vvy8().s[212]++;
    this.interviewContext.currentQuestionCount = 0;
    /* istanbul ignore next */
    cov_18shj8vvy8().s[213]++;
    this.interviewContext.preliminaryCollected = false;
    /* istanbul ignore next */
    cov_18shj8vvy8().s[214]++;
    this.prelimIndex = 0;
    /* istanbul ignore next */
    cov_18shj8vvy8().s[215]++;
    this.candidateProfile = {};
    /* istanbul ignore next */
    cov_18shj8vvy8().s[216]++;
    console.log('🧹 Conversation history cleared');
  }
  /**
   * Check if service is ready
   */
  isReady() {
    /* istanbul ignore next */
    cov_18shj8vvy8().f[17]++;
    cov_18shj8vvy8().s[217]++;
    return /* istanbul ignore next */(cov_18shj8vvy8().b[76][0]++, this.isInitialized) &&
    /* istanbul ignore next */
    (cov_18shj8vvy8().b[76][1]++, this.client !== null);
  }
  /**
   * Dispose of resources
   */
  dispose() {
    /* istanbul ignore next */
    cov_18shj8vvy8().f[18]++;
    cov_18shj8vvy8().s[218]++;
    this.client = null;
    /* istanbul ignore next */
    cov_18shj8vvy8().s[219]++;
    this.isInitialized = false;
    /* istanbul ignore next */
    cov_18shj8vvy8().s[220]++;
    this.conversationHistory = [];
    /* istanbul ignore next */
    cov_18shj8vvy8().s[221]++;
    console.log('🧹 Azure OpenAI Service disposed');
  }
}
/* istanbul ignore next */
cov_18shj8vvy8().s[222]++;
exports.AzureOpenAIService = AzureOpenAIService;
// Export singleton instance
/* istanbul ignore next */
cov_18shj8vvy8().s[223]++;
exports.azureOpenAIService = new AzureOpenAIService();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,