8694681f5bb8a308ce81207b25985b79
"use strict";

/* istanbul ignore next */
function cov_1liooiurah() {
  var path = "/Users/dikshantvashistha/PrepBettr/app/api/auth/google/callback/route.ts";
  var hash = "e6039f2e85eb713dc1e3e013a89bf652f21651fd";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dikshantvashistha/PrepBettr/app/api/auth/google/callback/route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 18
        }
      },
      "2": {
        start: {
          line: 4,
          column: 17
        },
        end: {
          line: 4,
          column: 39
        }
      },
      "3": {
        start: {
          line: 5,
          column: 18
        },
        end: {
          line: 5,
          column: 41
        }
      },
      "4": {
        start: {
          line: 6,
          column: 25
        },
        end: {
          line: 6,
          column: 60
        }
      },
      "5": {
        start: {
          line: 7,
          column: 29
        },
        end: {
          line: 7,
          column: 61
        }
      },
      "6": {
        start: {
          line: 8,
          column: 21
        },
        end: {
          line: 8,
          column: 72
        }
      },
      "7": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 97,
          column: 5
        }
      },
      "8": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 69
        }
      },
      "9": {
        start: {
          line: 13,
          column: 29
        },
        end: {
          line: 13,
          column: 57
        }
      },
      "10": {
        start: {
          line: 14,
          column: 21
        },
        end: {
          line: 14,
          column: 45
        }
      },
      "11": {
        start: {
          line: 15,
          column: 22
        },
        end: {
          line: 15,
          column: 47
        }
      },
      "12": {
        start: {
          line: 16,
          column: 22
        },
        end: {
          line: 16,
          column: 47
        }
      },
      "13": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 20,
          column: 9
        }
      },
      "14": {
        start: {
          line: 18,
          column: 12
        },
        end: {
          line: 18,
          column: 75
        }
      },
      "15": {
        start: {
          line: 19,
          column: 12
        },
        end: {
          line: 19,
          column: 95
        }
      },
      "16": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 24,
          column: 9
        }
      },
      "17": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 22,
          column: 77
        }
      },
      "18": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 23,
          column: 98
        }
      },
      "19": {
        start: {
          line: 26,
          column: 28
        },
        end: {
          line: 26,
          column: 58
        }
      },
      "20": {
        start: {
          line: 27,
          column: 28
        },
        end: {
          line: 27,
          column: 111
        }
      },
      "21": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 31,
          column: 9
        }
      },
      "22": {
        start: {
          line: 29,
          column: 12
        },
        end: {
          line: 29,
          column: 79
        }
      },
      "23": {
        start: {
          line: 30,
          column: 12
        },
        end: {
          line: 30,
          column: 97
        }
      },
      "24": {
        start: {
          line: 33,
          column: 30
        },
        end: {
          line: 45,
          column: 10
        }
      },
      "25": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 50,
          column: 9
        }
      },
      "26": {
        start: {
          line: 47,
          column: 31
        },
        end: {
          line: 47,
          column: 57
        }
      },
      "27": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 48,
          column: 90
        }
      },
      "28": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 49,
          column: 105
        }
      },
      "29": {
        start: {
          line: 51,
          column: 23
        },
        end: {
          line: 51,
          column: 49
        }
      },
      "30": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 52,
          column: 78
        }
      },
      "31": {
        start: {
          line: 54,
          column: 29
        },
        end: {
          line: 58,
          column: 10
        }
      },
      "32": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 62,
          column: 9
        }
      },
      "33": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 60,
          column: 81
        }
      },
      "34": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 61,
          column: 100
        }
      },
      "35": {
        start: {
          line: 63,
          column: 27
        },
        end: {
          line: 63,
          column: 52
        }
      },
      "36": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 64,
          column: 87
        }
      },
      "37": {
        start: {
          line: 66,
          column: 31
        },
        end: {
          line: 77,
          column: 9
        }
      },
      "38": {
        start: {
          line: 79,
          column: 26
        },
        end: {
          line: 79,
          column: 125
        }
      },
      "39": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 87,
          column: 11
        }
      },
      "40": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 89,
          column: 42
        }
      },
      "41": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 90,
          column: 101
        }
      },
      "42": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 92,
          column: 75
        }
      },
      "43": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 95,
          column: 64
        }
      },
      "44": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 96,
          column: 94
        }
      }
    },
    fnMap: {
      "0": {
        name: "GET",
        decl: {
          start: {
            line: 9,
            column: 15
          },
          end: {
            line: 9,
            column: 18
          }
        },
        loc: {
          start: {
            line: 9,
            column: 28
          },
          end: {
            line: 98,
            column: 1
          }
        },
        line: 9
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 8,
            column: 21
          },
          end: {
            line: 8,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 21
          },
          end: {
            line: 8,
            column: 45
          }
        }, {
          start: {
            line: 8,
            column: 49
          },
          end: {
            line: 8,
            column: 72
          }
        }],
        line: 8
      },
      "1": {
        loc: {
          start: {
            line: 17,
            column: 8
          },
          end: {
            line: 20,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 17,
            column: 8
          },
          end: {
            line: 20,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 17
      },
      "2": {
        loc: {
          start: {
            line: 21,
            column: 8
          },
          end: {
            line: 24,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 21,
            column: 8
          },
          end: {
            line: 24,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 21
      },
      "3": {
        loc: {
          start: {
            line: 21,
            column: 12
          },
          end: {
            line: 21,
            column: 27
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 21,
            column: 12
          },
          end: {
            line: 21,
            column: 17
          }
        }, {
          start: {
            line: 21,
            column: 21
          },
          end: {
            line: 21,
            column: 27
          }
        }],
        line: 21
      },
      "4": {
        loc: {
          start: {
            line: 27,
            column: 28
          },
          end: {
            line: 27,
            column: 111
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 27,
            column: 94
          },
          end: {
            line: 27,
            column: 100
          }
        }, {
          start: {
            line: 27,
            column: 103
          },
          end: {
            line: 27,
            column: 111
          }
        }],
        line: 27
      },
      "5": {
        loc: {
          start: {
            line: 27,
            column: 28
          },
          end: {
            line: 27,
            column: 91
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 28
          },
          end: {
            line: 27,
            column: 74
          }
        }, {
          start: {
            line: 27,
            column: 78
          },
          end: {
            line: 27,
            column: 91
          }
        }],
        line: 27
      },
      "6": {
        loc: {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 31,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 31,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "7": {
        loc: {
          start: {
            line: 46,
            column: 8
          },
          end: {
            line: 50,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 46,
            column: 8
          },
          end: {
            line: 50,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 46
      },
      "8": {
        loc: {
          start: {
            line: 59,
            column: 8
          },
          end: {
            line: 62,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 59,
            column: 8
          },
          end: {
            line: 62,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 59
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/dikshantvashistha/PrepBettr/app/api/auth/google/callback/route.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/dikshantvashistha/PrepBettr/app/api/auth/google/callback/route.ts"],
      sourcesContent: ["import { NextRequest, NextResponse } from 'next/server';\nimport { cookies } from 'next/headers';\n\nconst GOOGLE_CLIENT_ID = process.env.GOOGLE_CLIENT_ID_SUFFIX;\nconst GOOGLE_CLIENT_SECRET = process.env.GOOGLE_CLIENT_SECRET;\nconst NEXTAUTH_URL = process.env.NEXTAUTH_URL || 'http://localhost:3000';\n\ninterface GoogleTokenResponse {\n  access_token: string;\n  expires_in: number;\n  refresh_token?: string;\n  scope: string;\n  token_type: string;\n  id_token: string;\n}\n\ninterface GoogleUserInfo {\n  id: string;\n  email: string;\n  verified_email: boolean;\n  name: string;\n  given_name?: string;\n  family_name?: string;\n  picture?: string;\n}\n\nexport async function GET(request: NextRequest) {\n  try {\n    console.log('\uD83C\uDF10 Google OAuth callback: Processing response');\n    \n    const searchParams = request.nextUrl.searchParams;\n    const code = searchParams.get('code');\n    const state = searchParams.get('state');\n    const error = searchParams.get('error');\n\n    if (error) {\n      console.error('\uD83C\uDF10 Google OAuth callback: OAuth error:', error);\n      return NextResponse.redirect(`${NEXTAUTH_URL}/sign-in?error=oauth_error`);\n    }\n\n    if (!code || !state) {\n      console.error('\uD83C\uDF10 Google OAuth callback: Missing code or state');\n      return NextResponse.redirect(`${NEXTAUTH_URL}/sign-in?error=missing_params`);\n    }\n\n    // Verify state parameter\n    const cookieStore = await cookies();\n    const storedState = cookieStore.get('oauth_state')?.value;\n    \n    if (storedState !== state) {\n      console.error('\uD83C\uDF10 Google OAuth callback: Invalid state parameter');\n      return NextResponse.redirect(`${NEXTAUTH_URL}/sign-in?error=invalid_state`);\n    }\n\n    // Exchange code for tokens\n    const tokenResponse = await fetch('https://oauth2.googleapis.com/token', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      body: new URLSearchParams({\n        client_id: GOOGLE_CLIENT_ID!,\n        client_secret: GOOGLE_CLIENT_SECRET!,\n        code,\n        grant_type: 'authorization_code',\n        redirect_uri: `${NEXTAUTH_URL}/api/auth/google/callback`,\n      }),\n    });\n\n    if (!tokenResponse.ok) {\n      const tokenError = await tokenResponse.text();\n      console.error('\uD83C\uDF10 Google OAuth callback: Token exchange failed:', tokenError);\n      return NextResponse.redirect(`${NEXTAUTH_URL}/sign-in?error=token_exchange_failed`);\n    }\n\n    const tokens: GoogleTokenResponse = await tokenResponse.json();\n    console.log('\uD83C\uDF10 Google OAuth callback: Tokens received successfully');\n\n    // Get user info from Google\n    const userResponse = await fetch('https://www.googleapis.com/oauth2/v1/userinfo', {\n      headers: {\n        Authorization: `Bearer ${tokens.access_token}`,\n      },\n    });\n\n    if (!userResponse.ok) {\n      console.error('\uD83C\uDF10 Google OAuth callback: Failed to fetch user info');\n      return NextResponse.redirect(`${NEXTAUTH_URL}/sign-in?error=user_info_failed`);\n    }\n\n    const googleUser: GoogleUserInfo = await userResponse.json();\n    console.log('\uD83C\uDF10 Google OAuth callback: User info received:', googleUser.email);\n\n    // Create a simple JWT-like token for session (mock Firebase token structure)\n    const mockJwtPayload = {\n      uid: `google-${googleUser.id}`,\n      email: googleUser.email,\n      email_verified: googleUser.verified_email,\n      name: googleUser.name,\n      picture: googleUser.picture,\n      provider: 'google.com',\n      iss: 'prepbettr-server-auth',\n      aud: 'prepbettr',\n      exp: Math.floor(Date.now() / 1000) + (24 * 60 * 60), // 24 hours\n      iat: Math.floor(Date.now() / 1000),\n    };\n\n    // Create a simple base64 encoded token (not secure for production, but works for development)\n    const mockToken = `eyJhbGciOiJub25lIiwidHlwIjoiSldUIn0.${btoa(JSON.stringify(mockJwtPayload))}.server-auth-signature`;\n\n    // Set session cookie\n    cookieStore.set('session', mockToken, {\n      httpOnly: true,\n      secure: process.env.NODE_ENV === 'production',\n      maxAge: 24 * 60 * 60, // 24 hours\n      path: '/',\n      sameSite: 'lax',\n    });\n\n    // Clear the OAuth state cookie\n    cookieStore.delete('oauth_state');\n\n    console.log('\uD83C\uDF10 Google OAuth callback: Authentication successful, redirecting to dashboard');\n    \n    // Redirect to dashboard\n    return NextResponse.redirect(`${NEXTAUTH_URL}/dashboard`);\n\n  } catch (error) {\n    console.error('\uD83C\uDF10 Google OAuth callback error:', error);\n    return NextResponse.redirect(`${NEXTAUTH_URL}/sign-in?error=callback_error`);\n  }\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e6039f2e85eb713dc1e3e013a89bf652f21651fd"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1liooiurah = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1liooiurah();
cov_1liooiurah().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1liooiurah().s[1]++;
exports.GET = GET;
const server_1 =
/* istanbul ignore next */
(cov_1liooiurah().s[2]++, require("next/server"));
const headers_1 =
/* istanbul ignore next */
(cov_1liooiurah().s[3]++, require("next/headers"));
const GOOGLE_CLIENT_ID =
/* istanbul ignore next */
(cov_1liooiurah().s[4]++, process.env.GOOGLE_CLIENT_ID_SUFFIX);
const GOOGLE_CLIENT_SECRET =
/* istanbul ignore next */
(cov_1liooiurah().s[5]++, process.env.GOOGLE_CLIENT_SECRET);
const NEXTAUTH_URL =
/* istanbul ignore next */
(cov_1liooiurah().s[6]++,
/* istanbul ignore next */
(cov_1liooiurah().b[0][0]++, process.env.NEXTAUTH_URL) ||
/* istanbul ignore next */
(cov_1liooiurah().b[0][1]++, 'http://localhost:3000'));
async function GET(request) {
  /* istanbul ignore next */
  cov_1liooiurah().f[0]++;
  var _a;
  /* istanbul ignore next */
  cov_1liooiurah().s[7]++;
  try {
    /* istanbul ignore next */
    cov_1liooiurah().s[8]++;
    console.log('🌐 Google OAuth callback: Processing response');
    const searchParams =
    /* istanbul ignore next */
    (cov_1liooiurah().s[9]++, request.nextUrl.searchParams);
    const code =
    /* istanbul ignore next */
    (cov_1liooiurah().s[10]++, searchParams.get('code'));
    const state =
    /* istanbul ignore next */
    (cov_1liooiurah().s[11]++, searchParams.get('state'));
    const error =
    /* istanbul ignore next */
    (cov_1liooiurah().s[12]++, searchParams.get('error'));
    /* istanbul ignore next */
    cov_1liooiurah().s[13]++;
    if (error) {
      /* istanbul ignore next */
      cov_1liooiurah().b[1][0]++;
      cov_1liooiurah().s[14]++;
      console.error('🌐 Google OAuth callback: OAuth error:', error);
      /* istanbul ignore next */
      cov_1liooiurah().s[15]++;
      return server_1.NextResponse.redirect(`${NEXTAUTH_URL}/sign-in?error=oauth_error`);
    } else
    /* istanbul ignore next */
    {
      cov_1liooiurah().b[1][1]++;
    }
    cov_1liooiurah().s[16]++;
    if (
    /* istanbul ignore next */
    (cov_1liooiurah().b[3][0]++, !code) ||
    /* istanbul ignore next */
    (cov_1liooiurah().b[3][1]++, !state)) {
      /* istanbul ignore next */
      cov_1liooiurah().b[2][0]++;
      cov_1liooiurah().s[17]++;
      console.error('🌐 Google OAuth callback: Missing code or state');
      /* istanbul ignore next */
      cov_1liooiurah().s[18]++;
      return server_1.NextResponse.redirect(`${NEXTAUTH_URL}/sign-in?error=missing_params`);
    } else
    /* istanbul ignore next */
    {
      cov_1liooiurah().b[2][1]++;
    }
    // Verify state parameter
    const cookieStore =
    /* istanbul ignore next */
    (cov_1liooiurah().s[19]++, await (0, headers_1.cookies)());
    const storedState =
    /* istanbul ignore next */
    (cov_1liooiurah().s[20]++,
    /* istanbul ignore next */
    (cov_1liooiurah().b[5][0]++, (_a = cookieStore.get('oauth_state')) === null) ||
    /* istanbul ignore next */
    (cov_1liooiurah().b[5][1]++, _a === void 0) ?
    /* istanbul ignore next */
    (cov_1liooiurah().b[4][0]++, void 0) :
    /* istanbul ignore next */
    (cov_1liooiurah().b[4][1]++, _a.value));
    /* istanbul ignore next */
    cov_1liooiurah().s[21]++;
    if (storedState !== state) {
      /* istanbul ignore next */
      cov_1liooiurah().b[6][0]++;
      cov_1liooiurah().s[22]++;
      console.error('🌐 Google OAuth callback: Invalid state parameter');
      /* istanbul ignore next */
      cov_1liooiurah().s[23]++;
      return server_1.NextResponse.redirect(`${NEXTAUTH_URL}/sign-in?error=invalid_state`);
    } else
    /* istanbul ignore next */
    {
      cov_1liooiurah().b[6][1]++;
    }
    // Exchange code for tokens
    const tokenResponse =
    /* istanbul ignore next */
    (cov_1liooiurah().s[24]++, await fetch('https://oauth2.googleapis.com/token', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/x-www-form-urlencoded'
      },
      body: new URLSearchParams({
        client_id: GOOGLE_CLIENT_ID,
        client_secret: GOOGLE_CLIENT_SECRET,
        code,
        grant_type: 'authorization_code',
        redirect_uri: `${NEXTAUTH_URL}/api/auth/google/callback`
      })
    }));
    /* istanbul ignore next */
    cov_1liooiurah().s[25]++;
    if (!tokenResponse.ok) {
      /* istanbul ignore next */
      cov_1liooiurah().b[7][0]++;
      const tokenError =
      /* istanbul ignore next */
      (cov_1liooiurah().s[26]++, await tokenResponse.text());
      /* istanbul ignore next */
      cov_1liooiurah().s[27]++;
      console.error('🌐 Google OAuth callback: Token exchange failed:', tokenError);
      /* istanbul ignore next */
      cov_1liooiurah().s[28]++;
      return server_1.NextResponse.redirect(`${NEXTAUTH_URL}/sign-in?error=token_exchange_failed`);
    } else
    /* istanbul ignore next */
    {
      cov_1liooiurah().b[7][1]++;
    }
    const tokens =
    /* istanbul ignore next */
    (cov_1liooiurah().s[29]++, await tokenResponse.json());
    /* istanbul ignore next */
    cov_1liooiurah().s[30]++;
    console.log('🌐 Google OAuth callback: Tokens received successfully');
    // Get user info from Google
    const userResponse =
    /* istanbul ignore next */
    (cov_1liooiurah().s[31]++, await fetch('https://www.googleapis.com/oauth2/v1/userinfo', {
      headers: {
        Authorization: `Bearer ${tokens.access_token}`
      }
    }));
    /* istanbul ignore next */
    cov_1liooiurah().s[32]++;
    if (!userResponse.ok) {
      /* istanbul ignore next */
      cov_1liooiurah().b[8][0]++;
      cov_1liooiurah().s[33]++;
      console.error('🌐 Google OAuth callback: Failed to fetch user info');
      /* istanbul ignore next */
      cov_1liooiurah().s[34]++;
      return server_1.NextResponse.redirect(`${NEXTAUTH_URL}/sign-in?error=user_info_failed`);
    } else
    /* istanbul ignore next */
    {
      cov_1liooiurah().b[8][1]++;
    }
    const googleUser =
    /* istanbul ignore next */
    (cov_1liooiurah().s[35]++, await userResponse.json());
    /* istanbul ignore next */
    cov_1liooiurah().s[36]++;
    console.log('🌐 Google OAuth callback: User info received:', googleUser.email);
    // Create a simple JWT-like token for session (mock Firebase token structure)
    const mockJwtPayload =
    /* istanbul ignore next */
    (cov_1liooiurah().s[37]++, {
      uid: `google-${googleUser.id}`,
      email: googleUser.email,
      email_verified: googleUser.verified_email,
      name: googleUser.name,
      picture: googleUser.picture,
      provider: 'google.com',
      iss: 'prepbettr-server-auth',
      aud: 'prepbettr',
      exp: Math.floor(Date.now() / 1000) + 24 * 60 * 60,
      // 24 hours
      iat: Math.floor(Date.now() / 1000)
    });
    // Create a simple base64 encoded token (not secure for production, but works for development)
    const mockToken =
    /* istanbul ignore next */
    (cov_1liooiurah().s[38]++, `eyJhbGciOiJub25lIiwidHlwIjoiSldUIn0.${btoa(JSON.stringify(mockJwtPayload))}.server-auth-signature`);
    // Set session cookie
    /* istanbul ignore next */
    cov_1liooiurah().s[39]++;
    cookieStore.set('session', mockToken, {
      httpOnly: true,
      secure: process.env.NODE_ENV === 'production',
      maxAge: 24 * 60 * 60,
      // 24 hours
      path: '/',
      sameSite: 'lax'
    });
    // Clear the OAuth state cookie
    /* istanbul ignore next */
    cov_1liooiurah().s[40]++;
    cookieStore.delete('oauth_state');
    /* istanbul ignore next */
    cov_1liooiurah().s[41]++;
    console.log('🌐 Google OAuth callback: Authentication successful, redirecting to dashboard');
    // Redirect to dashboard
    /* istanbul ignore next */
    cov_1liooiurah().s[42]++;
    return server_1.NextResponse.redirect(`${NEXTAUTH_URL}/dashboard`);
  } catch (error) {
    /* istanbul ignore next */
    cov_1liooiurah().s[43]++;
    console.error('🌐 Google OAuth callback error:', error);
    /* istanbul ignore next */
    cov_1liooiurah().s[44]++;
    return server_1.NextResponse.redirect(`${NEXTAUTH_URL}/sign-in?error=callback_error`);
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,