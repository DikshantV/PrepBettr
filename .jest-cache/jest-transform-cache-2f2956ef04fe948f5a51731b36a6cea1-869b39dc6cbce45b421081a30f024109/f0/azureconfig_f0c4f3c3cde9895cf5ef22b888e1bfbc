e72e70f6b9c85355b0ae336bfd4343a0
"use strict";

/* istanbul ignore next */
function cov_2gkmfq21ic() {
  var path = "/Users/dikshantvashistha/PrepBettr/azure/lib/azure-config.ts";
  var hash = "7eb5903aeb771273e8387faee13775b522e0c9b5";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dikshantvashistha/PrepBettr/azure/lib/azure-config.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 46
        }
      },
      "2": {
        start: {
          line: 4,
          column: 0
        },
        end: {
          line: 4,
          column: 64
        }
      },
      "3": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 40
        }
      },
      "4": {
        start: {
          line: 6,
          column: 19
        },
        end: {
          line: 6,
          column: 45
        }
      },
      "5": {
        start: {
          line: 7,
          column: 27
        },
        end: {
          line: 7,
          column: 61
        }
      },
      "6": {
        start: {
          line: 9,
          column: 28
        },
        end: {
          line: 9,
          column: 112
        }
      },
      "7": {
        start: {
          line: 10,
          column: 20
        },
        end: {
          line: 10,
          column: 24
        }
      },
      "8": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 17,
          column: 5
        }
      },
      "9": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 80
        }
      },
      "10": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 26,
          column: 5
        }
      },
      "11": {
        start: {
          line: 19,
          column: 27
        },
        end: {
          line: 19,
          column: 66
        }
      },
      "12": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 84
        }
      },
      "13": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 75
        }
      },
      "14": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 97
        }
      },
      "15": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 20
        }
      },
      "16": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 35,
          column: 5
        }
      },
      "17": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 29
        }
      },
      "18": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 94,
          column: 5
        }
      },
      "19": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 67
        }
      },
      "20": {
        start: {
          line: 38,
          column: 23
        },
        end: {
          line: 38,
          column: 45
        }
      },
      "21": {
        start: {
          line: 40,
          column: 222
        },
        end: {
          line: 52,
          column: 10
        }
      },
      "22": {
        start: {
          line: 46,
          column: 74
        },
        end: {
          line: 46,
          column: 78
        }
      },
      "23": {
        start: {
          line: 47,
          column: 74
        },
        end: {
          line: 47,
          column: 78
        }
      },
      "24": {
        start: {
          line: 48,
          column: 71
        },
        end: {
          line: 48,
          column: 75
        }
      },
      "25": {
        start: {
          line: 49,
          column: 70
        },
        end: {
          line: 49,
          column: 74
        }
      },
      "26": {
        start: {
          line: 50,
          column: 75
        },
        end: {
          line: 50,
          column: 79
        }
      },
      "27": {
        start: {
          line: 51,
          column: 70
        },
        end: {
          line: 51,
          column: 74
        }
      },
      "28": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 55,
          column: 9
        }
      },
      "29": {
        start: {
          line: 54,
          column: 12
        },
        end: {
          line: 54,
          column: 93
        }
      },
      "30": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 68,
          column: 10
        }
      },
      "31": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 69,
          column: 59
        }
      },
      "32": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 70,
          column: 29
        }
      },
      "33": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 73,
          column: 65
        }
      },
      "34": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 75,
          column: 67
        }
      },
      "35": {
        start: {
          line: 76,
          column: 32
        },
        end: {
          line: 88,
          column: 9
        }
      },
      "36": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 91,
          column: 9
        }
      },
      "37": {
        start: {
          line: 90,
          column: 12
        },
        end: {
          line: 90,
          column: 102
        }
      },
      "38": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 92,
          column: 40
        }
      },
      "39": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 93,
          column: 29
        }
      },
      "40": {
        start: {
          line: 101,
          column: 4
        },
        end: {
          line: 122,
          column: 5
        }
      },
      "41": {
        start: {
          line: 102,
          column: 24
        },
        end: {
          line: 102,
          column: 49
        }
      },
      "42": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 104,
          column: 63
        }
      },
      "43": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 105,
          column: 73
        }
      },
      "44": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 106,
          column: 62
        }
      },
      "45": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 107,
          column: 72
        }
      },
      "46": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 108,
          column: 76
        }
      },
      "47": {
        start: {
          line: 109,
          column: 8
        },
        end: {
          line: 109,
          column: 87
        }
      },
      "48": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 110,
          column: 87
        }
      },
      "49": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 112,
          column: 78
        }
      },
      "50": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 113,
          column: 84
        }
      },
      "51": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 114,
          column: 88
        }
      },
      "52": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 115,
          column: 99
        }
      },
      "53": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 116,
          column: 99
        }
      },
      "54": {
        start: {
          line: 117,
          column: 8
        },
        end: {
          line: 117,
          column: 69
        }
      },
      "55": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 120,
          column: 74
        }
      },
      "56": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 121,
          column: 20
        }
      },
      "57": {
        start: {
          line: 128,
          column: 4
        },
        end: {
          line: 145,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "createKeyVaultClient",
        decl: {
          start: {
            line: 14,
            column: 9
          },
          end: {
            line: 14,
            column: 29
          }
        },
        loc: {
          start: {
            line: 14,
            column: 32
          },
          end: {
            line: 27,
            column: 1
          }
        },
        line: 14
      },
      "1": {
        name: "fetchAzureSecrets",
        decl: {
          start: {
            line: 31,
            column: 15
          },
          end: {
            line: 31,
            column: 32
          }
        },
        loc: {
          start: {
            line: 31,
            column: 35
          },
          end: {
            line: 95,
            column: 1
          }
        },
        line: 31
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 46,
            column: 68
          },
          end: {
            line: 46,
            column: 69
          }
        },
        loc: {
          start: {
            line: 46,
            column: 74
          },
          end: {
            line: 46,
            column: 78
          }
        },
        line: 46
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 47,
            column: 68
          },
          end: {
            line: 47,
            column: 69
          }
        },
        loc: {
          start: {
            line: 47,
            column: 74
          },
          end: {
            line: 47,
            column: 78
          }
        },
        line: 47
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 48,
            column: 65
          },
          end: {
            line: 48,
            column: 66
          }
        },
        loc: {
          start: {
            line: 48,
            column: 71
          },
          end: {
            line: 48,
            column: 75
          }
        },
        line: 48
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 49,
            column: 64
          },
          end: {
            line: 49,
            column: 65
          }
        },
        loc: {
          start: {
            line: 49,
            column: 70
          },
          end: {
            line: 49,
            column: 74
          }
        },
        line: 49
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 50,
            column: 69
          },
          end: {
            line: 50,
            column: 70
          }
        },
        loc: {
          start: {
            line: 50,
            column: 75
          },
          end: {
            line: 50,
            column: 79
          }
        },
        line: 50
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 51,
            column: 64
          },
          end: {
            line: 51,
            column: 65
          }
        },
        loc: {
          start: {
            line: 51,
            column: 70
          },
          end: {
            line: 51,
            column: 74
          }
        },
        line: 51
      },
      "8": {
        name: "initializeAzureEnvironment",
        decl: {
          start: {
            line: 100,
            column: 15
          },
          end: {
            line: 100,
            column: 41
          }
        },
        loc: {
          start: {
            line: 100,
            column: 44
          },
          end: {
            line: 123,
            column: 1
          }
        },
        line: 100
      },
      "9": {
        name: "getAzureConfig",
        decl: {
          start: {
            line: 127,
            column: 9
          },
          end: {
            line: 127,
            column: 23
          }
        },
        loc: {
          start: {
            line: 127,
            column: 26
          },
          end: {
            line: 146,
            column: 1
          }
        },
        line: 127
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 9,
            column: 28
          },
          end: {
            line: 9,
            column: 112
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 9,
            column: 28
          },
          end: {
            line: 9,
            column: 59
          }
        }, {
          start: {
            line: 9,
            column: 63
          },
          end: {
            line: 9,
            column: 112
          }
        }],
        line: 9
      },
      "1": {
        loc: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 17,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 17,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 15
      },
      "2": {
        loc: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 33
      },
      "3": {
        loc: {
          start: {
            line: 53,
            column: 8
          },
          end: {
            line: 55,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 53,
            column: 8
          },
          end: {
            line: 55,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 53
      },
      "4": {
        loc: {
          start: {
            line: 53,
            column: 12
          },
          end: {
            line: 53,
            column: 140
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 53,
            column: 12
          },
          end: {
            line: 53,
            column: 28
          }
        }, {
          start: {
            line: 53,
            column: 32
          },
          end: {
            line: 53,
            column: 53
          }
        }, {
          start: {
            line: 53,
            column: 57
          },
          end: {
            line: 53,
            column: 78
          }
        }, {
          start: {
            line: 53,
            column: 82
          },
          end: {
            line: 53,
            column: 108
          }
        }, {
          start: {
            line: 53,
            column: 112
          },
          end: {
            line: 53,
            column: 140
          }
        }],
        line: 53
      },
      "5": {
        loc: {
          start: {
            line: 62,
            column: 40
          },
          end: {
            line: 62,
            column: 144
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 62,
            column: 41
          },
          end: {
            line: 62,
            column: 131
          }
        }, {
          start: {
            line: 62,
            column: 136
          },
          end: {
            line: 62,
            column: 144
          }
        }],
        line: 62
      },
      "6": {
        loc: {
          start: {
            line: 62,
            column: 41
          },
          end: {
            line: 62,
            column: 131
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 62,
            column: 100
          },
          end: {
            line: 62,
            column: 106
          }
        }, {
          start: {
            line: 62,
            column: 109
          },
          end: {
            line: 62,
            column: 131
          }
        }],
        line: 62
      },
      "7": {
        loc: {
          start: {
            line: 62,
            column: 41
          },
          end: {
            line: 62,
            column: 97
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 62,
            column: 41
          },
          end: {
            line: 62,
            column: 66
          }
        }, {
          start: {
            line: 62,
            column: 70
          },
          end: {
            line: 62,
            column: 97
          }
        }],
        line: 62
      },
      "8": {
        loc: {
          start: {
            line: 63,
            column: 40
          },
          end: {
            line: 63,
            column: 144
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 63,
            column: 41
          },
          end: {
            line: 63,
            column: 131
          }
        }, {
          start: {
            line: 63,
            column: 136
          },
          end: {
            line: 63,
            column: 144
          }
        }],
        line: 63
      },
      "9": {
        loc: {
          start: {
            line: 63,
            column: 41
          },
          end: {
            line: 63,
            column: 131
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 63,
            column: 100
          },
          end: {
            line: 63,
            column: 106
          }
        }, {
          start: {
            line: 63,
            column: 109
          },
          end: {
            line: 63,
            column: 131
          }
        }],
        line: 63
      },
      "10": {
        loc: {
          start: {
            line: 63,
            column: 41
          },
          end: {
            line: 63,
            column: 97
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 63,
            column: 41
          },
          end: {
            line: 63,
            column: 66
          }
        }, {
          start: {
            line: 63,
            column: 70
          },
          end: {
            line: 63,
            column: 97
          }
        }],
        line: 63
      },
      "11": {
        loc: {
          start: {
            line: 64,
            column: 37
          },
          end: {
            line: 64,
            column: 133
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 64,
            column: 100
          },
          end: {
            line: 64,
            column: 106
          }
        }, {
          start: {
            line: 64,
            column: 109
          },
          end: {
            line: 64,
            column: 133
          }
        }],
        line: 64
      },
      "12": {
        loc: {
          start: {
            line: 64,
            column: 37
          },
          end: {
            line: 64,
            column: 97
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 64,
            column: 37
          },
          end: {
            line: 64,
            column: 64
          }
        }, {
          start: {
            line: 64,
            column: 68
          },
          end: {
            line: 64,
            column: 97
          }
        }],
        line: 64
      },
      "13": {
        loc: {
          start: {
            line: 65,
            column: 36
          },
          end: {
            line: 65,
            column: 129
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 65,
            column: 97
          },
          end: {
            line: 65,
            column: 103
          }
        }, {
          start: {
            line: 65,
            column: 106
          },
          end: {
            line: 65,
            column: 129
          }
        }],
        line: 65
      },
      "14": {
        loc: {
          start: {
            line: 65,
            column: 36
          },
          end: {
            line: 65,
            column: 94
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 65,
            column: 36
          },
          end: {
            line: 65,
            column: 62
          }
        }, {
          start: {
            line: 65,
            column: 66
          },
          end: {
            line: 65,
            column: 94
          }
        }],
        line: 65
      },
      "15": {
        loc: {
          start: {
            line: 66,
            column: 41
          },
          end: {
            line: 66,
            column: 149
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 66,
            column: 112
          },
          end: {
            line: 66,
            column: 118
          }
        }, {
          start: {
            line: 66,
            column: 121
          },
          end: {
            line: 66,
            column: 149
          }
        }],
        line: 66
      },
      "16": {
        loc: {
          start: {
            line: 66,
            column: 41
          },
          end: {
            line: 66,
            column: 109
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 66,
            column: 41
          },
          end: {
            line: 66,
            column: 72
          }
        }, {
          start: {
            line: 66,
            column: 76
          },
          end: {
            line: 66,
            column: 109
          }
        }],
        line: 66
      },
      "17": {
        loc: {
          start: {
            line: 67,
            column: 36
          },
          end: {
            line: 67,
            column: 129
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 67,
            column: 97
          },
          end: {
            line: 67,
            column: 103
          }
        }, {
          start: {
            line: 67,
            column: 106
          },
          end: {
            line: 67,
            column: 129
          }
        }],
        line: 67
      },
      "18": {
        loc: {
          start: {
            line: 67,
            column: 36
          },
          end: {
            line: 67,
            column: 94
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 67,
            column: 36
          },
          end: {
            line: 67,
            column: 62
          }
        }, {
          start: {
            line: 67,
            column: 66
          },
          end: {
            line: 67,
            column: 94
          }
        }],
        line: 67
      },
      "19": {
        loc: {
          start: {
            line: 77,
            column: 23
          },
          end: {
            line: 77,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 77,
            column: 23
          },
          end: {
            line: 77,
            column: 45
          }
        }, {
          start: {
            line: 77,
            column: 49
          },
          end: {
            line: 77,
            column: 83
          }
        }, {
          start: {
            line: 77,
            column: 87
          },
          end: {
            line: 77,
            column: 89
          }
        }],
        line: 77
      },
      "20": {
        loc: {
          start: {
            line: 78,
            column: 28
          },
          end: {
            line: 78,
            column: 104
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 78,
            column: 28
          },
          end: {
            line: 78,
            column: 55
          }
        }, {
          start: {
            line: 78,
            column: 59
          },
          end: {
            line: 78,
            column: 98
          }
        }, {
          start: {
            line: 78,
            column: 102
          },
          end: {
            line: 78,
            column: 104
          }
        }],
        line: 78
      },
      "21": {
        loc: {
          start: {
            line: 79,
            column: 28
          },
          end: {
            line: 79,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 79,
            column: 28
          },
          end: {
            line: 79,
            column: 56
          }
        }, {
          start: {
            line: 79,
            column: 60
          },
          end: {
            line: 79,
            column: 62
          }
        }],
        line: 79
      },
      "22": {
        loc: {
          start: {
            line: 80,
            column: 33
          },
          end: {
            line: 80,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 80,
            column: 33
          },
          end: {
            line: 80,
            column: 66
          }
        }, {
          start: {
            line: 80,
            column: 70
          },
          end: {
            line: 80,
            column: 72
          }
        }],
        line: 80
      },
      "23": {
        loc: {
          start: {
            line: 81,
            column: 35
          },
          end: {
            line: 81,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 81,
            column: 35
          },
          end: {
            line: 81,
            column: 70
          }
        }, {
          start: {
            line: 81,
            column: 74
          },
          end: {
            line: 81,
            column: 76
          }
        }],
        line: 81
      },
      "24": {
        loc: {
          start: {
            line: 82,
            column: 40
          },
          end: {
            line: 82,
            column: 93
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 82,
            column: 40
          },
          end: {
            line: 82,
            column: 81
          }
        }, {
          start: {
            line: 82,
            column: 85
          },
          end: {
            line: 82,
            column: 93
          }
        }],
        line: 82
      },
      "25": {
        loc: {
          start: {
            line: 83,
            column: 40
          },
          end: {
            line: 83,
            column: 93
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 83,
            column: 40
          },
          end: {
            line: 83,
            column: 81
          }
        }, {
          start: {
            line: 83,
            column: 85
          },
          end: {
            line: 83,
            column: 93
          }
        }],
        line: 83
      },
      "26": {
        loc: {
          start: {
            line: 89,
            column: 8
          },
          end: {
            line: 91,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 89,
            column: 8
          },
          end: {
            line: 91,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 89
      },
      "27": {
        loc: {
          start: {
            line: 89,
            column: 12
          },
          end: {
            line: 89,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 89,
            column: 12
          },
          end: {
            line: 89,
            column: 38
          }
        }, {
          start: {
            line: 89,
            column: 42
          },
          end: {
            line: 89,
            column: 73
          }
        }],
        line: 89
      },
      "28": {
        loc: {
          start: {
            line: 142,
            column: 24
          },
          end: {
            line: 142,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 142,
            column: 24
          },
          end: {
            line: 142,
            column: 65
          }
        }, {
          start: {
            line: 142,
            column: 69
          },
          end: {
            line: 142,
            column: 77
          }
        }],
        line: 142
      },
      "29": {
        loc: {
          start: {
            line: 143,
            column: 19
          },
          end: {
            line: 143,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 143,
            column: 19
          },
          end: {
            line: 143,
            column: 60
          }
        }, {
          start: {
            line: 143,
            column: 64
          },
          end: {
            line: 143,
            column: 72
          }
        }],
        line: 143
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0, 0, 0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0, 0],
      "20": [0, 0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/dikshantvashistha/PrepBettr/azure/lib/azure-config.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/dikshantvashistha/PrepBettr/azure/lib/azure-config.ts"],
      sourcesContent: ["import { DefaultAzureCredential } from '@azure/identity';\nimport { SecretClient } from '@azure/keyvault-secrets';\n\n// Azure Key Vault configuration\nconst AZURE_KEY_VAULT_URI = process.env.AZURE_KEY_VAULT_URI || 'https://prepbettr-keyvault-083.vault.azure.net/';\n\ninterface AzureSecrets {\n  speechKey: string;\n  speechEndpoint: string;\n  azureOpenAIKey: string;\n  azureOpenAIEndpoint: string;\n  azureOpenAIDeployment: string;\n  azureOpenAIGpt35Deployment?: string; // gpt-35-turbo deployment\n  azureOpenAIGpt4oDeployment?: string; // gpt-4o deployment\n  azureStorageAccountName?: string; // Azure Storage Account Name\n  azureStorageAccountKey?: string; // Azure Storage Account Key\n  azureFormRecognizerEndpoint?: string; // Azure Form Recognizer Endpoint\n  azureFormRecognizerKey?: string; // Azure Form Recognizer Key\n}\n\nlet cachedSecrets: AzureSecrets | null = null;\n\n/**\n * Initialize Azure Key Vault client\n */\nfunction createKeyVaultClient(): SecretClient {\n  if (!AZURE_KEY_VAULT_URI) {\n    throw new Error('AZURE_KEY_VAULT_URI environment variable is required');\n  }\n  \n  try {\n    const credential = new DefaultAzureCredential();\n    return new SecretClient(AZURE_KEY_VAULT_URI, credential);\n  } catch (error) {\n    console.error('\u274C Failed to create DefaultAzureCredential:', error);\n    console.error('\uD83D\uDCA1 Hint: Ensure you are logged in with \"az login\" for local development');\n    throw error;\n  }\n}\n\n/**\n * Fetch secrets from Azure Key Vault\n */\nexport async function fetchAzureSecrets(): Promise<AzureSecrets> {\n  // Return cached secrets if available\n  if (cachedSecrets) {\n    return cachedSecrets;\n  }\n\n  try {\n    console.log('\uD83D\uDD11 Fetching secrets from Azure Key Vault...');\n    const client = createKeyVaultClient();\n\n    // Fetch all required secrets\n    const [speechKey, speechEndpoint, azureOpenAIKey, azureOpenAIEndpoint, azureOpenAIDeployment, azureOpenAIGpt35, azureOpenAIGpt4o, storageAccountName, storageAccountKey, formRecognizerEndpoint, formRecognizerKey] = await Promise.all([\n      client.getSecret('speech-key'),\n      client.getSecret('speech-endpoint'),\n      client.getSecret('azure-openai-key'),\n      client.getSecret('azure-openai-endpoint'),\n      client.getSecret('azure-openai-deployment'),\n      client.getSecret('azure-openai-gpt35-deployment').catch(() => null), // Optional\n      client.getSecret('azure-openai-gpt4o-deployment').catch(() => null),  // Optional\n      client.getSecret('azure-storage-account-name').catch(() => null), // Optional\n      client.getSecret('azure-storage-account-key').catch(() => null), // Optional\n      client.getSecret('azure-form-recognizer-endpoint').catch(() => null), // Optional\n      client.getSecret('azure-form-recognizer-key').catch(() => null) // Optional\n    ]);\n\n    if (!speechKey.value || !speechEndpoint.value || !azureOpenAIKey.value || !azureOpenAIEndpoint.value || !azureOpenAIDeployment.value) {\n      throw new Error('One or more required secrets are missing from Azure Key Vault');\n    }\n\n    cachedSecrets = {\n      speechKey: speechKey.value,\n      speechEndpoint: speechEndpoint.value,\n      azureOpenAIKey: azureOpenAIKey.value,\n      azureOpenAIEndpoint: azureOpenAIEndpoint.value,\n      azureOpenAIDeployment: azureOpenAIDeployment.value,\n      azureOpenAIGpt35Deployment: azureOpenAIGpt35?.value || 'gpt-4o',\n      azureOpenAIGpt4oDeployment: azureOpenAIGpt4o?.value || 'gpt-4o',\n      azureStorageAccountName: storageAccountName?.value,\n      azureStorageAccountKey: storageAccountKey?.value,\n      azureFormRecognizerEndpoint: formRecognizerEndpoint?.value,\n      azureFormRecognizerKey: formRecognizerKey?.value\n    };\n\n    console.log('\u2705 Azure secrets loaded successfully');\n    return cachedSecrets;\n\n  } catch (error) {\n    console.error('\u274C Failed to fetch Azure secrets:', error);\n    \n    // Fallback to environment variables if Key Vault fails\n    console.log('\uD83D\uDD04 Falling back to environment variables...');\n    const fallbackSecrets = {\n      speechKey: process.env.SPEECH_KEY || process.env.NEXT_PUBLIC_SPEECH_KEY || '',\n      speechEndpoint: process.env.SPEECH_ENDPOINT || process.env.NEXT_PUBLIC_SPEECH_ENDPOINT || '',\n      azureOpenAIKey: process.env.AZURE_OPENAI_KEY || '',\n      azureOpenAIEndpoint: process.env.AZURE_OPENAI_ENDPOINT || '',\n      azureOpenAIDeployment: process.env.AZURE_OPENAI_DEPLOYMENT || '',\n      azureOpenAIGpt35Deployment: process.env.AZURE_OPENAI_GPT35_DEPLOYMENT || 'gpt-4o',\n      azureOpenAIGpt4oDeployment: process.env.AZURE_OPENAI_GPT4O_DEPLOYMENT || 'gpt-4o',\n      azureStorageAccountName: process.env.AZURE_STORAGE_ACCOUNT_NAME,\n      azureStorageAccountKey: process.env.AZURE_STORAGE_ACCOUNT_KEY,\n      azureFormRecognizerEndpoint: process.env.AZURE_FORM_RECOGNIZER_ENDPOINT,\n      azureFormRecognizerKey: process.env.AZURE_FORM_RECOGNIZER_KEY\n    };\n\n    if (!fallbackSecrets.speechKey || !fallbackSecrets.azureOpenAIKey) {\n      console.warn('\u26A0\uFE0F Some secrets are missing from both Key Vault and environment variables');\n    }\n\n    cachedSecrets = fallbackSecrets;\n    return cachedSecrets;\n  }\n}\n\n/**\n * Initialize environment variables from Azure Key Vault\n * This should be called at application startup\n */\nexport async function initializeAzureEnvironment(): Promise<void> {\n  try {\n    const secrets = await fetchAzureSecrets();\n    \n    // Set environment variables for the application\n    process.env.NEXT_PUBLIC_SPEECH_KEY = secrets.speechKey;\n    process.env.NEXT_PUBLIC_SPEECH_ENDPOINT = secrets.speechEndpoint;\n    process.env.AZURE_OPENAI_KEY = secrets.azureOpenAIKey;\n    process.env.AZURE_OPENAI_ENDPOINT = secrets.azureOpenAIEndpoint;\n    process.env.AZURE_OPENAI_DEPLOYMENT = secrets.azureOpenAIDeployment;\n    process.env.AZURE_OPENAI_GPT35_DEPLOYMENT = secrets.azureOpenAIGpt35Deployment;\n    process.env.AZURE_OPENAI_GPT4O_DEPLOYMENT = secrets.azureOpenAIGpt4oDeployment;\n\n    // Set Azure OpenAI keys for public environment\n    process.env.NEXT_PUBLIC_AZURE_OPENAI_API_KEY = secrets.azureOpenAIKey;\n    process.env.NEXT_PUBLIC_AZURE_OPENAI_ENDPOINT = secrets.azureOpenAIEndpoint;\n    process.env.NEXT_PUBLIC_AZURE_OPENAI_DEPLOYMENT = secrets.azureOpenAIDeployment;\n    process.env.NEXT_PUBLIC_AZURE_OPENAI_GPT35_DEPLOYMENT = secrets.azureOpenAIGpt35Deployment;\n    process.env.NEXT_PUBLIC_AZURE_OPENAI_GPT4O_DEPLOYMENT = secrets.azureOpenAIGpt4oDeployment;\n\n    console.log('\uD83C\uDF1F Azure environment initialized successfully');\n  } catch (error) {\n    console.error('\u274C Failed to initialize Azure environment:', error);\n    throw error;\n  }\n}\n\n/**\n * Get current Azure configuration (for debugging)\n */\nexport function getAzureConfig() {\n  return {\n    keyVaultUri: AZURE_KEY_VAULT_URI,\n    hasSecretsCache: !!cachedSecrets,\n    environment: {\n      speechKey: !!process.env.NEXT_PUBLIC_SPEECH_KEY,\n      speechEndpoint: !!process.env.NEXT_PUBLIC_SPEECH_ENDPOINT,\n      azureOpenAIKey: !!process.env.AZURE_OPENAI_KEY,\n      azureOpenAIEndpoint: !!process.env.AZURE_OPENAI_ENDPOINT,\n      azureOpenAIDeployment: !!process.env.AZURE_OPENAI_DEPLOYMENT,\n      azureOpenAIGpt35Deployment: !!process.env.AZURE_OPENAI_GPT35_DEPLOYMENT,\n      azureOpenAIGpt4oDeployment: !!process.env.AZURE_OPENAI_GPT4O_DEPLOYMENT\n    },\n    deployments: {\n      default: process.env.AZURE_OPENAI_DEPLOYMENT,\n      gpt35Turbo: process.env.AZURE_OPENAI_GPT35_DEPLOYMENT || 'gpt-4o',\n      gpt4o: process.env.AZURE_OPENAI_GPT4O_DEPLOYMENT || 'gpt-4o'\n    }\n  };\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "7eb5903aeb771273e8387faee13775b522e0c9b5"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2gkmfq21ic = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2gkmfq21ic();
cov_2gkmfq21ic().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2gkmfq21ic().s[1]++;
exports.fetchAzureSecrets = fetchAzureSecrets;
/* istanbul ignore next */
cov_2gkmfq21ic().s[2]++;
exports.initializeAzureEnvironment = initializeAzureEnvironment;
/* istanbul ignore next */
cov_2gkmfq21ic().s[3]++;
exports.getAzureConfig = getAzureConfig;
const identity_1 =
/* istanbul ignore next */
(cov_2gkmfq21ic().s[4]++, require("@azure/identity"));
const keyvault_secrets_1 =
/* istanbul ignore next */
(cov_2gkmfq21ic().s[5]++, require("@azure/keyvault-secrets"));
// Azure Key Vault configuration
const AZURE_KEY_VAULT_URI =
/* istanbul ignore next */
(cov_2gkmfq21ic().s[6]++,
/* istanbul ignore next */
(cov_2gkmfq21ic().b[0][0]++, process.env.AZURE_KEY_VAULT_URI) ||
/* istanbul ignore next */
(cov_2gkmfq21ic().b[0][1]++, 'https://prepbettr-keyvault-083.vault.azure.net/'));
let cachedSecrets =
/* istanbul ignore next */
(cov_2gkmfq21ic().s[7]++, null);
/**
 * Initialize Azure Key Vault client
 */
function createKeyVaultClient() {
  /* istanbul ignore next */
  cov_2gkmfq21ic().f[0]++;
  cov_2gkmfq21ic().s[8]++;
  if (!AZURE_KEY_VAULT_URI) {
    /* istanbul ignore next */
    cov_2gkmfq21ic().b[1][0]++;
    cov_2gkmfq21ic().s[9]++;
    throw new Error('AZURE_KEY_VAULT_URI environment variable is required');
  } else
  /* istanbul ignore next */
  {
    cov_2gkmfq21ic().b[1][1]++;
  }
  cov_2gkmfq21ic().s[10]++;
  try {
    const credential =
    /* istanbul ignore next */
    (cov_2gkmfq21ic().s[11]++, new identity_1.DefaultAzureCredential());
    /* istanbul ignore next */
    cov_2gkmfq21ic().s[12]++;
    return new keyvault_secrets_1.SecretClient(AZURE_KEY_VAULT_URI, credential);
  } catch (error) {
    /* istanbul ignore next */
    cov_2gkmfq21ic().s[13]++;
    console.error('❌ Failed to create DefaultAzureCredential:', error);
    /* istanbul ignore next */
    cov_2gkmfq21ic().s[14]++;
    console.error('💡 Hint: Ensure you are logged in with "az login" for local development');
    /* istanbul ignore next */
    cov_2gkmfq21ic().s[15]++;
    throw error;
  }
}
/**
 * Fetch secrets from Azure Key Vault
 */
async function fetchAzureSecrets() {
  /* istanbul ignore next */
  cov_2gkmfq21ic().f[1]++;
  cov_2gkmfq21ic().s[16]++;
  // Return cached secrets if available
  if (cachedSecrets) {
    /* istanbul ignore next */
    cov_2gkmfq21ic().b[2][0]++;
    cov_2gkmfq21ic().s[17]++;
    return cachedSecrets;
  } else
  /* istanbul ignore next */
  {
    cov_2gkmfq21ic().b[2][1]++;
  }
  cov_2gkmfq21ic().s[18]++;
  try {
    /* istanbul ignore next */
    cov_2gkmfq21ic().s[19]++;
    console.log('🔑 Fetching secrets from Azure Key Vault...');
    const client =
    /* istanbul ignore next */
    (cov_2gkmfq21ic().s[20]++, createKeyVaultClient());
    // Fetch all required secrets
    const [speechKey, speechEndpoint, azureOpenAIKey, azureOpenAIEndpoint, azureOpenAIDeployment, azureOpenAIGpt35, azureOpenAIGpt4o, storageAccountName, storageAccountKey, formRecognizerEndpoint, formRecognizerKey] =
    /* istanbul ignore next */
    (cov_2gkmfq21ic().s[21]++, await Promise.all([client.getSecret('speech-key'), client.getSecret('speech-endpoint'), client.getSecret('azure-openai-key'), client.getSecret('azure-openai-endpoint'), client.getSecret('azure-openai-deployment'), client.getSecret('azure-openai-gpt35-deployment').catch(() => {
      /* istanbul ignore next */
      cov_2gkmfq21ic().f[2]++;
      cov_2gkmfq21ic().s[22]++;
      return null;
    }),
    // Optional
    client.getSecret('azure-openai-gpt4o-deployment').catch(() => {
      /* istanbul ignore next */
      cov_2gkmfq21ic().f[3]++;
      cov_2gkmfq21ic().s[23]++;
      return null;
    }),
    // Optional
    client.getSecret('azure-storage-account-name').catch(() => {
      /* istanbul ignore next */
      cov_2gkmfq21ic().f[4]++;
      cov_2gkmfq21ic().s[24]++;
      return null;
    }),
    // Optional
    client.getSecret('azure-storage-account-key').catch(() => {
      /* istanbul ignore next */
      cov_2gkmfq21ic().f[5]++;
      cov_2gkmfq21ic().s[25]++;
      return null;
    }),
    // Optional
    client.getSecret('azure-form-recognizer-endpoint').catch(() => {
      /* istanbul ignore next */
      cov_2gkmfq21ic().f[6]++;
      cov_2gkmfq21ic().s[26]++;
      return null;
    }),
    // Optional
    client.getSecret('azure-form-recognizer-key').catch(() => {
      /* istanbul ignore next */
      cov_2gkmfq21ic().f[7]++;
      cov_2gkmfq21ic().s[27]++;
      return null;
    }) // Optional
    ]));
    /* istanbul ignore next */
    cov_2gkmfq21ic().s[28]++;
    if (
    /* istanbul ignore next */
    (cov_2gkmfq21ic().b[4][0]++, !speechKey.value) ||
    /* istanbul ignore next */
    (cov_2gkmfq21ic().b[4][1]++, !speechEndpoint.value) ||
    /* istanbul ignore next */
    (cov_2gkmfq21ic().b[4][2]++, !azureOpenAIKey.value) ||
    /* istanbul ignore next */
    (cov_2gkmfq21ic().b[4][3]++, !azureOpenAIEndpoint.value) ||
    /* istanbul ignore next */
    (cov_2gkmfq21ic().b[4][4]++, !azureOpenAIDeployment.value)) {
      /* istanbul ignore next */
      cov_2gkmfq21ic().b[3][0]++;
      cov_2gkmfq21ic().s[29]++;
      throw new Error('One or more required secrets are missing from Azure Key Vault');
    } else
    /* istanbul ignore next */
    {
      cov_2gkmfq21ic().b[3][1]++;
    }
    cov_2gkmfq21ic().s[30]++;
    cachedSecrets = {
      speechKey: speechKey.value,
      speechEndpoint: speechEndpoint.value,
      azureOpenAIKey: azureOpenAIKey.value,
      azureOpenAIEndpoint: azureOpenAIEndpoint.value,
      azureOpenAIDeployment: azureOpenAIDeployment.value,
      azureOpenAIGpt35Deployment:
      /* istanbul ignore next */
      (cov_2gkmfq21ic().b[5][0]++,
      /* istanbul ignore next */
      (cov_2gkmfq21ic().b[7][0]++, azureOpenAIGpt35 === null) ||
      /* istanbul ignore next */
      (cov_2gkmfq21ic().b[7][1]++, azureOpenAIGpt35 === void 0) ?
      /* istanbul ignore next */
      (cov_2gkmfq21ic().b[6][0]++, void 0) :
      /* istanbul ignore next */
      (cov_2gkmfq21ic().b[6][1]++, azureOpenAIGpt35.value)) ||
      /* istanbul ignore next */
      (cov_2gkmfq21ic().b[5][1]++, 'gpt-4o'),
      azureOpenAIGpt4oDeployment:
      /* istanbul ignore next */
      (cov_2gkmfq21ic().b[8][0]++,
      /* istanbul ignore next */
      (cov_2gkmfq21ic().b[10][0]++, azureOpenAIGpt4o === null) ||
      /* istanbul ignore next */
      (cov_2gkmfq21ic().b[10][1]++, azureOpenAIGpt4o === void 0) ?
      /* istanbul ignore next */
      (cov_2gkmfq21ic().b[9][0]++, void 0) :
      /* istanbul ignore next */
      (cov_2gkmfq21ic().b[9][1]++, azureOpenAIGpt4o.value)) ||
      /* istanbul ignore next */
      (cov_2gkmfq21ic().b[8][1]++, 'gpt-4o'),
      azureStorageAccountName:
      /* istanbul ignore next */
      (cov_2gkmfq21ic().b[12][0]++, storageAccountName === null) ||
      /* istanbul ignore next */
      (cov_2gkmfq21ic().b[12][1]++, storageAccountName === void 0) ?
      /* istanbul ignore next */
      (cov_2gkmfq21ic().b[11][0]++, void 0) :
      /* istanbul ignore next */
      (cov_2gkmfq21ic().b[11][1]++, storageAccountName.value),
      azureStorageAccountKey:
      /* istanbul ignore next */
      (cov_2gkmfq21ic().b[14][0]++, storageAccountKey === null) ||
      /* istanbul ignore next */
      (cov_2gkmfq21ic().b[14][1]++, storageAccountKey === void 0) ?
      /* istanbul ignore next */
      (cov_2gkmfq21ic().b[13][0]++, void 0) :
      /* istanbul ignore next */
      (cov_2gkmfq21ic().b[13][1]++, storageAccountKey.value),
      azureFormRecognizerEndpoint:
      /* istanbul ignore next */
      (cov_2gkmfq21ic().b[16][0]++, formRecognizerEndpoint === null) ||
      /* istanbul ignore next */
      (cov_2gkmfq21ic().b[16][1]++, formRecognizerEndpoint === void 0) ?
      /* istanbul ignore next */
      (cov_2gkmfq21ic().b[15][0]++, void 0) :
      /* istanbul ignore next */
      (cov_2gkmfq21ic().b[15][1]++, formRecognizerEndpoint.value),
      azureFormRecognizerKey:
      /* istanbul ignore next */
      (cov_2gkmfq21ic().b[18][0]++, formRecognizerKey === null) ||
      /* istanbul ignore next */
      (cov_2gkmfq21ic().b[18][1]++, formRecognizerKey === void 0) ?
      /* istanbul ignore next */
      (cov_2gkmfq21ic().b[17][0]++, void 0) :
      /* istanbul ignore next */
      (cov_2gkmfq21ic().b[17][1]++, formRecognizerKey.value)
    };
    /* istanbul ignore next */
    cov_2gkmfq21ic().s[31]++;
    console.log('✅ Azure secrets loaded successfully');
    /* istanbul ignore next */
    cov_2gkmfq21ic().s[32]++;
    return cachedSecrets;
  } catch (error) {
    /* istanbul ignore next */
    cov_2gkmfq21ic().s[33]++;
    console.error('❌ Failed to fetch Azure secrets:', error);
    // Fallback to environment variables if Key Vault fails
    /* istanbul ignore next */
    cov_2gkmfq21ic().s[34]++;
    console.log('🔄 Falling back to environment variables...');
    const fallbackSecrets =
    /* istanbul ignore next */
    (cov_2gkmfq21ic().s[35]++, {
      speechKey:
      /* istanbul ignore next */
      (cov_2gkmfq21ic().b[19][0]++, process.env.SPEECH_KEY) ||
      /* istanbul ignore next */
      (cov_2gkmfq21ic().b[19][1]++, process.env.NEXT_PUBLIC_SPEECH_KEY) ||
      /* istanbul ignore next */
      (cov_2gkmfq21ic().b[19][2]++, ''),
      speechEndpoint:
      /* istanbul ignore next */
      (cov_2gkmfq21ic().b[20][0]++, process.env.SPEECH_ENDPOINT) ||
      /* istanbul ignore next */
      (cov_2gkmfq21ic().b[20][1]++, process.env.NEXT_PUBLIC_SPEECH_ENDPOINT) ||
      /* istanbul ignore next */
      (cov_2gkmfq21ic().b[20][2]++, ''),
      azureOpenAIKey:
      /* istanbul ignore next */
      (cov_2gkmfq21ic().b[21][0]++, process.env.AZURE_OPENAI_KEY) ||
      /* istanbul ignore next */
      (cov_2gkmfq21ic().b[21][1]++, ''),
      azureOpenAIEndpoint:
      /* istanbul ignore next */
      (cov_2gkmfq21ic().b[22][0]++, process.env.AZURE_OPENAI_ENDPOINT) ||
      /* istanbul ignore next */
      (cov_2gkmfq21ic().b[22][1]++, ''),
      azureOpenAIDeployment:
      /* istanbul ignore next */
      (cov_2gkmfq21ic().b[23][0]++, process.env.AZURE_OPENAI_DEPLOYMENT) ||
      /* istanbul ignore next */
      (cov_2gkmfq21ic().b[23][1]++, ''),
      azureOpenAIGpt35Deployment:
      /* istanbul ignore next */
      (cov_2gkmfq21ic().b[24][0]++, process.env.AZURE_OPENAI_GPT35_DEPLOYMENT) ||
      /* istanbul ignore next */
      (cov_2gkmfq21ic().b[24][1]++, 'gpt-4o'),
      azureOpenAIGpt4oDeployment:
      /* istanbul ignore next */
      (cov_2gkmfq21ic().b[25][0]++, process.env.AZURE_OPENAI_GPT4O_DEPLOYMENT) ||
      /* istanbul ignore next */
      (cov_2gkmfq21ic().b[25][1]++, 'gpt-4o'),
      azureStorageAccountName: process.env.AZURE_STORAGE_ACCOUNT_NAME,
      azureStorageAccountKey: process.env.AZURE_STORAGE_ACCOUNT_KEY,
      azureFormRecognizerEndpoint: process.env.AZURE_FORM_RECOGNIZER_ENDPOINT,
      azureFormRecognizerKey: process.env.AZURE_FORM_RECOGNIZER_KEY
    });
    /* istanbul ignore next */
    cov_2gkmfq21ic().s[36]++;
    if (
    /* istanbul ignore next */
    (cov_2gkmfq21ic().b[27][0]++, !fallbackSecrets.speechKey) ||
    /* istanbul ignore next */
    (cov_2gkmfq21ic().b[27][1]++, !fallbackSecrets.azureOpenAIKey)) {
      /* istanbul ignore next */
      cov_2gkmfq21ic().b[26][0]++;
      cov_2gkmfq21ic().s[37]++;
      console.warn('⚠️ Some secrets are missing from both Key Vault and environment variables');
    } else
    /* istanbul ignore next */
    {
      cov_2gkmfq21ic().b[26][1]++;
    }
    cov_2gkmfq21ic().s[38]++;
    cachedSecrets = fallbackSecrets;
    /* istanbul ignore next */
    cov_2gkmfq21ic().s[39]++;
    return cachedSecrets;
  }
}
/**
 * Initialize environment variables from Azure Key Vault
 * This should be called at application startup
 */
async function initializeAzureEnvironment() {
  /* istanbul ignore next */
  cov_2gkmfq21ic().f[8]++;
  cov_2gkmfq21ic().s[40]++;
  try {
    const secrets =
    /* istanbul ignore next */
    (cov_2gkmfq21ic().s[41]++, await fetchAzureSecrets());
    // Set environment variables for the application
    /* istanbul ignore next */
    cov_2gkmfq21ic().s[42]++;
    process.env.NEXT_PUBLIC_SPEECH_KEY = secrets.speechKey;
    /* istanbul ignore next */
    cov_2gkmfq21ic().s[43]++;
    process.env.NEXT_PUBLIC_SPEECH_ENDPOINT = secrets.speechEndpoint;
    /* istanbul ignore next */
    cov_2gkmfq21ic().s[44]++;
    process.env.AZURE_OPENAI_KEY = secrets.azureOpenAIKey;
    /* istanbul ignore next */
    cov_2gkmfq21ic().s[45]++;
    process.env.AZURE_OPENAI_ENDPOINT = secrets.azureOpenAIEndpoint;
    /* istanbul ignore next */
    cov_2gkmfq21ic().s[46]++;
    process.env.AZURE_OPENAI_DEPLOYMENT = secrets.azureOpenAIDeployment;
    /* istanbul ignore next */
    cov_2gkmfq21ic().s[47]++;
    process.env.AZURE_OPENAI_GPT35_DEPLOYMENT = secrets.azureOpenAIGpt35Deployment;
    /* istanbul ignore next */
    cov_2gkmfq21ic().s[48]++;
    process.env.AZURE_OPENAI_GPT4O_DEPLOYMENT = secrets.azureOpenAIGpt4oDeployment;
    // Set Azure OpenAI keys for public environment
    /* istanbul ignore next */
    cov_2gkmfq21ic().s[49]++;
    process.env.NEXT_PUBLIC_AZURE_OPENAI_API_KEY = secrets.azureOpenAIKey;
    /* istanbul ignore next */
    cov_2gkmfq21ic().s[50]++;
    process.env.NEXT_PUBLIC_AZURE_OPENAI_ENDPOINT = secrets.azureOpenAIEndpoint;
    /* istanbul ignore next */
    cov_2gkmfq21ic().s[51]++;
    process.env.NEXT_PUBLIC_AZURE_OPENAI_DEPLOYMENT = secrets.azureOpenAIDeployment;
    /* istanbul ignore next */
    cov_2gkmfq21ic().s[52]++;
    process.env.NEXT_PUBLIC_AZURE_OPENAI_GPT35_DEPLOYMENT = secrets.azureOpenAIGpt35Deployment;
    /* istanbul ignore next */
    cov_2gkmfq21ic().s[53]++;
    process.env.NEXT_PUBLIC_AZURE_OPENAI_GPT4O_DEPLOYMENT = secrets.azureOpenAIGpt4oDeployment;
    /* istanbul ignore next */
    cov_2gkmfq21ic().s[54]++;
    console.log('🌟 Azure environment initialized successfully');
  } catch (error) {
    /* istanbul ignore next */
    cov_2gkmfq21ic().s[55]++;
    console.error('❌ Failed to initialize Azure environment:', error);
    /* istanbul ignore next */
    cov_2gkmfq21ic().s[56]++;
    throw error;
  }
}
/**
 * Get current Azure configuration (for debugging)
 */
function getAzureConfig() {
  /* istanbul ignore next */
  cov_2gkmfq21ic().f[9]++;
  cov_2gkmfq21ic().s[57]++;
  return {
    keyVaultUri: AZURE_KEY_VAULT_URI,
    hasSecretsCache: !!cachedSecrets,
    environment: {
      speechKey: !!process.env.NEXT_PUBLIC_SPEECH_KEY,
      speechEndpoint: !!process.env.NEXT_PUBLIC_SPEECH_ENDPOINT,
      azureOpenAIKey: !!process.env.AZURE_OPENAI_KEY,
      azureOpenAIEndpoint: !!process.env.AZURE_OPENAI_ENDPOINT,
      azureOpenAIDeployment: !!process.env.AZURE_OPENAI_DEPLOYMENT,
      azureOpenAIGpt35Deployment: !!process.env.AZURE_OPENAI_GPT35_DEPLOYMENT,
      azureOpenAIGpt4oDeployment: !!process.env.AZURE_OPENAI_GPT4O_DEPLOYMENT
    },
    deployments: {
      default: process.env.AZURE_OPENAI_DEPLOYMENT,
      gpt35Turbo:
      /* istanbul ignore next */
      (cov_2gkmfq21ic().b[28][0]++, process.env.AZURE_OPENAI_GPT35_DEPLOYMENT) ||
      /* istanbul ignore next */
      (cov_2gkmfq21ic().b[28][1]++, 'gpt-4o'),
      gpt4o:
      /* istanbul ignore next */
      (cov_2gkmfq21ic().b[29][0]++, process.env.AZURE_OPENAI_GPT4O_DEPLOYMENT) ||
      /* istanbul ignore next */
      (cov_2gkmfq21ic().b[29][1]++, 'gpt-4o')
    }
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,