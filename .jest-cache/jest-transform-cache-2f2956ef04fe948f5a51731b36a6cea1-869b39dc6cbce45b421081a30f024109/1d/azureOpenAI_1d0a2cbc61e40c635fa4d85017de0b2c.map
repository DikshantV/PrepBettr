{"version":3,"names":["cov_2on40lfhcj","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","azure_openai_service_1","require","azure_openai_enhanced_1","retry_with_backoff_1","AzureOpenAIAdapter","constructor","isInitialized","useEnhancedService","DEFAULT_TEMPERATURE","DEFAULT_MAX_TOKENS","RELEVANCY_TEMPERATURE","RELEVANCY_MAX_TOKENS","initialize","enhancedAzureOpenAIService","console","log","warn","azureOpenAIService","error","isReady","generateCoverLetter","resumeText","jobDescription","userId","Error","retryWithExponentialBackoff","generateWithAzureOpenAI","getCoverLetterPrompt","maxRetries","baseDelay","maxDelay","calculateRelevancy","prompt","getRelevancyPrompt","response","scoreMatch","trim","match","score","parseInt","Math","max","min","tailorResume","generateQuestions","resumeInfo","temperature","maxTokens","messages","role","content","completion","createCompletion","topP","frequencyPenalty","presencePenalty","_b","_a","choices","message","dispose","exports"],"sources":["/Users/dikshantvashistha/PrepBettr/lib/ai/azureOpenAI.ts"],"sourcesContent":["/**\n * Azure OpenAI Provider Adapter\n * \n * This adapter wraps Azure OpenAI API to provide a consistent interface\n * for the AI service layer. Reuses the existing AzureOpenAIService for\n * consistent configuration and error handling.\n */\n\nimport { azureOpenAIService } from '@/lib/services/azure-openai-service';\nimport { migrationOpenAIClient } from '@/lib/azure-ai-foundry/clients/migration-wrapper';\nimport { enhancedAzureOpenAIService } from '@/lib/services/azure-openai-enhanced';\nimport { AIProvider, ResumeInfo } from './index';\nimport { retryWithExponentialBackoff, RetryOptions } from '@/lib/utils/retry-with-backoff';\n\nexport class AzureOpenAIAdapter implements AIProvider {\n  public name = 'Azure OpenAI (Enhanced)';\n  private isInitialized = false;\n  private useEnhancedService = true; // Feature flag for enhanced multi-deployment service\n  \n  // Default parameters for optimal Azure OpenAI performance\n  private readonly DEFAULT_TEMPERATURE = 0.7; // Balanced creativity\n  private readonly DEFAULT_MAX_TOKENS = 1500;  // Comprehensive responses\n  private readonly RELEVANCY_TEMPERATURE = 0.1; // For precise scoring\n  private readonly RELEVANCY_MAX_TOKENS = 50;   // Short numeric response\n\n  /**\n   * Initialize the Azure OpenAI service\n   */\n  async initialize(): Promise<boolean> {\n    try {\n      // Try enhanced service first, fallback to standard service\n      if (this.useEnhancedService) {\n        this.isInitialized = await enhancedAzureOpenAIService.initialize();\n        if (this.isInitialized) {\n          console.log('✅ Azure OpenAI adapter initialized with enhanced service');\n          return true;\n        }\n        console.warn('⚠️ Enhanced service failed, falling back to standard service');\n        this.useEnhancedService = false;\n      }\n      \n      // Fallback to standard service\n      this.isInitialized = await azureOpenAIService.initialize();\n      \n      if (this.isInitialized) {\n        console.log('✅ Azure OpenAI adapter initialized with standard service');\n      } else {\n        console.warn('⚠️ Azure OpenAI adapter failed to initialize');\n      }\n      \n      return this.isInitialized;\n    } catch (error) {\n      console.error('❌ Failed to initialize Azure OpenAI adapter:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Check if the adapter is ready\n   */\n  isReady(): boolean {\n    if (this.useEnhancedService) {\n      return this.isInitialized && enhancedAzureOpenAIService.isReady();\n    }\n    return this.isInitialized && azureOpenAIService.isReady();\n  }\n\n  /**\n   * Generate a cover letter using Azure OpenAI with retry logic\n   */\n  async generateCoverLetter(resumeText: string, jobDescription: string, userId?: string): Promise<string> {\n    if (!this.isReady()) {\n      throw new Error('Azure OpenAI adapter not initialized');\n    }\n\n    return await retryWithExponentialBackoff(\n      async () => {\n        // Use enhanced service if available for optimal model selection\n        if (this.useEnhancedService) {\n          return await enhancedAzureOpenAIService.generateCoverLetter(resumeText, jobDescription);\n        }\n\n        // Fallback to custom implementation\n        return await this.generateWithAzureOpenAI(this.getCoverLetterPrompt(resumeText, jobDescription));\n      },\n      'generate_cover_letter',\n      userId,\n      {\n        maxRetries: 3,\n        baseDelay: 2000, // 2 seconds base delay for AI operations\n        maxDelay: 60000  // 1 minute max delay\n      }\n    );\n  }\n\n  /**\n   * Calculate relevancy score between resume and job description with retry logic\n   */\n  async calculateRelevancy(resumeText: string, jobDescription: string, userId?: string): Promise<number> {\n    if (!this.isReady()) {\n      throw new Error('Azure OpenAI adapter not initialized');\n    }\n\n    return await retryWithExponentialBackoff(\n      async () => {\n        // Use enhanced service for efficient gpt-35-turbo scoring\n        if (this.useEnhancedService) {\n          return await enhancedAzureOpenAIService.calculateRelevancy(resumeText, jobDescription);\n        }\n\n        // Fallback implementation\n        const prompt = this.getRelevancyPrompt(resumeText, jobDescription);\n        const response = await this.generateWithAzureOpenAI(prompt, this.RELEVANCY_TEMPERATURE, this.RELEVANCY_MAX_TOKENS);\n        \n        // Extract number from response\n        const scoreMatch = response.trim().match(/\\d+/);\n        if (!scoreMatch) {\n          throw new Error('Could not extract relevancy score from response');\n        }\n        \n        const score = parseInt(scoreMatch[0], 10);\n        return Math.max(0, Math.min(100, score)); // Ensure score is between 0-100\n      },\n      'calculate_relevancy',\n      userId,\n      {\n        maxRetries: 2, // Fewer retries for quick scoring operations\n        baseDelay: 1000,\n        maxDelay: 30000\n      }\n    );\n  }\n\n  /**\n   * Tailor resume to match job description with retry logic\n   */\n  async tailorResume(resumeText: string, jobDescription: string, userId?: string): Promise<string> {\n    if (!this.isReady()) {\n      throw new Error('Azure OpenAI adapter not initialized');\n    }\n\n    return await retryWithExponentialBackoff(\n      async () => {\n        // Use enhanced service for optimal gpt-4o quality\n        if (this.useEnhancedService) {\n          return await enhancedAzureOpenAIService.tailorResume(resumeText, jobDescription);\n        }\n\n        // Fallback to standard service\n        return await azureOpenAIService.tailorResume(resumeText, jobDescription);\n      },\n      'tailor_resume',\n      userId,\n      {\n        maxRetries: 3,\n        baseDelay: 3000, // 3 seconds base delay for complex operations\n        maxDelay: 90000  // 1.5 minutes max delay\n      }\n    );\n  }\n\n  /**\n   * Generate interview questions based on resume information with retry logic\n   */\n  async generateQuestions(resumeInfo: ResumeInfo, userId?: string): Promise<string[]> {\n    if (!this.isReady()) {\n      throw new Error('Azure OpenAI adapter not initialized');\n    }\n\n    return await retryWithExponentialBackoff(\n      async () => {\n        // Use enhanced service for efficient gpt-35-turbo question generation\n        if (this.useEnhancedService) {\n          return await enhancedAzureOpenAIService.generateQuestions(resumeInfo);\n        }\n\n        // Fallback to standard service\n        return await azureOpenAIService.generateQuestions(resumeInfo);\n      },\n      'generate_questions',\n      userId,\n      {\n        maxRetries: 2,\n        baseDelay: 1500,\n        maxDelay: 45000\n      }\n    );\n  }\n\n  /**\n   * Generate content using Azure OpenAI with retry logic\n   * Uses optimized parameters for consistent high-quality responses\n   */\n  private async generateWithAzureOpenAI(\n    prompt: string, \n    temperature: number = this.DEFAULT_TEMPERATURE, \n    maxTokens: number = this.DEFAULT_MAX_TOKENS\n  ): Promise<string> {\n    const messages = [{ role: 'user' as const, content: prompt }];\n    \n    try {\n      const completion = await azureOpenAIService.createCompletion(messages, {\n        temperature,\n        maxTokens,\n        topP: 0.9,           // Balanced creativity settings\n        frequencyPenalty: 0.1, // Reduce repetition\n        presencePenalty: 0.1   // Encourage diverse content\n      });\n      \n      const content = completion.choices[0]?.message?.content;\n      if (!content) {\n        throw new Error('Empty response from Azure OpenAI');\n      }\n      \n      return content;\n    } catch (error) {\n      console.error('❌ Error generating content with Azure OpenAI:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Get cover letter generation prompt with optimized structure\n   */\n  private getCoverLetterPrompt(resumeText: string, jobDescription: string): string {\n    return `You are an expert career coach and professional writer. Please generate a compelling cover letter based on the provided resume and job description.\n\nJOB DESCRIPTION:\n${jobDescription}\n\nRESUME:\n${resumeText}\n\nPlease generate a cover letter that:\n1. Is tailored to the specific job description\n2. Highlights the most relevant skills and experiences from the resume\n3. Has a professional and engaging tone\n4. Is well-structured and easy to read\n5. Is approximately 3-4 paragraphs long\n\nReturn ONLY the cover letter content with no additional commentary or explanations.`;\n  }\n\n  /**\n   * Get relevancy analysis prompt with structured requirements\n   */\n  private getRelevancyPrompt(resumeText: string, jobDescription: string): string {\n    return `You are an expert ATS (Applicant Tracking System) analyzer. Please analyze the relevancy between this resume and job description.\n\nJOB DESCRIPTION:\n${jobDescription}\n\nRESUME:\n${resumeText}\n\nAnalyze the match between the resume and job description considering:\n1. Skills alignment (technical and soft skills)\n2. Experience relevance (years and type of experience)\n3. Education and certifications match\n4. Industry experience\n5. Role responsibilities alignment\n6. Keywords and terminology match\n\nReturn ONLY a single number between 0 and 100 representing the percentage match/relevancy score. No explanations or additional text.`;\n  }\n\n  /**\n   * Dispose of resources\n   */\n  dispose(): void {\n    // The underlying service manages its own resources\n    this.isInitialized = false;\n    this.useEnhancedService = true; // Reset for next initialization\n    console.log('🧹 Azure OpenAI adapter disposed');\n  }\n}\n"],"mappings":"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","ignoreList":[]}