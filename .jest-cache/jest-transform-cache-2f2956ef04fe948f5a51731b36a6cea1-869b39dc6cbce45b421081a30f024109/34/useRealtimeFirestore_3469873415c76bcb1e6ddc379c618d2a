37153ee5f437e378258c0fc3da89f406
"use strict";

/**
 * Realtime Firestore Hooks Compatibility Layer
 *
 * SWR-based implementations of realtime Firestore hooks for backward compatibility
 * Components using these should be migrated to Azure services with SignalR
 */
/* istanbul ignore next */
function cov_v2texumxd() {
  var path = "/Users/dikshantvashistha/PrepBettr/lib/hooks/useRealtimeFirestore.ts";
  var hash = "a31a173181be7ffae36d1e6c9b860ea66425786e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dikshantvashistha/PrepBettr/lib/hooks/useRealtimeFirestore.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 62
        }
      },
      "1": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 52
        }
      },
      "2": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 10,
          column: 68
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 62
        }
      },
      "4": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 66
        }
      },
      "5": {
        start: {
          line: 13,
          column: 0
        },
        end: {
          line: 13,
          column: 50
        }
      },
      "6": {
        start: {
          line: 14,
          column: 16
        },
        end: {
          line: 14,
          column: 32
        }
      },
      "7": {
        start: {
          line: 21,
          column: 38
        },
        end: {
          line: 21,
          column: 65
        }
      },
      "8": {
        start: {
          line: 22,
          column: 34
        },
        end: {
          line: 22,
          column: 61
        }
      },
      "9": {
        start: {
          line: 23,
          column: 30
        },
        end: {
          line: 23,
          column: 57
        }
      },
      "10": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 54,
          column: 22
        }
      },
      "11": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 28,
          column: 9
        }
      },
      "12": {
        start: {
          line: 26,
          column: 12
        },
        end: {
          line: 26,
          column: 30
        }
      },
      "13": {
        start: {
          line: 27,
          column: 12
        },
        end: {
          line: 27,
          column: 19
        }
      },
      "14": {
        start: {
          line: 30,
          column: 22
        },
        end: {
          line: 41,
          column: 16
        }
      },
      "15": {
        start: {
          line: 31,
          column: 12
        },
        end: {
          line: 39,
          column: 15
        }
      },
      "16": {
        start: {
          line: 40,
          column: 12
        },
        end: {
          line: 40,
          column: 30
        }
      },
      "17": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 53,
          column: 10
        }
      },
      "18": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 51,
          column: 32
        }
      },
      "19": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 59,
          column: 6
        }
      },
      "20": {
        start: {
          line: 67,
          column: 32
        },
        end: {
          line: 67,
          column: 59
        }
      },
      "21": {
        start: {
          line: 68,
          column: 34
        },
        end: {
          line: 68,
          column: 61
        }
      },
      "22": {
        start: {
          line: 69,
          column: 30
        },
        end: {
          line: 69,
          column: 57
        }
      },
      "23": {
        start: {
          line: 70,
          column: 4
        },
        end: {
          line: 114,
          column: 24
        }
      },
      "24": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 74,
          column: 9
        }
      },
      "25": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 72,
          column: 30
        }
      },
      "26": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 73,
          column: 19
        }
      },
      "27": {
        start: {
          line: 76,
          column: 23
        },
        end: {
          line: 76,
          column: 24
        }
      },
      "28": {
        start: {
          line: 77,
          column: 23
        },
        end: {
          line: 83,
          column: 9
        }
      },
      "29": {
        start: {
          line: 84,
          column: 29
        },
        end: {
          line: 104,
          column: 9
        }
      },
      "30": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 103,
          column: 13
        }
      },
      "31": {
        start: {
          line: 86,
          column: 16
        },
        end: {
          line: 86,
          column: 31
        }
      },
      "32": {
        start: {
          line: 87,
          column: 35
        },
        end: {
          line: 87,
          column: 64
        }
      },
      "33": {
        start: {
          line: 88,
          column: 16
        },
        end: {
          line: 99,
          column: 19
        }
      },
      "34": {
        start: {
          line: 100,
          column: 16
        },
        end: {
          line: 102,
          column: 17
        }
      },
      "35": {
        start: {
          line: 101,
          column: 20
        },
        end: {
          line: 101,
          column: 38
        }
      },
      "36": {
        start: {
          line: 105,
          column: 29
        },
        end: {
          line: 108,
          column: 15
        }
      },
      "37": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 106,
          column: 27
        }
      },
      "38": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 107,
          column: 30
        }
      },
      "39": {
        start: {
          line: 109,
          column: 30
        },
        end: {
          line: 109,
          column: 61
        }
      },
      "40": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 113,
          column: 10
        }
      },
      "41": {
        start: {
          line: 111,
          column: 12
        },
        end: {
          line: 111,
          column: 39
        }
      },
      "42": {
        start: {
          line: 112,
          column: 12
        },
        end: {
          line: 112,
          column: 41
        }
      },
      "43": {
        start: {
          line: 115,
          column: 4
        },
        end: {
          line: 119,
          column: 6
        }
      },
      "44": {
        start: {
          line: 124,
          column: 23
        },
        end: {
          line: 137,
          column: 10
        }
      },
      "45": {
        start: {
          line: 138,
          column: 4
        },
        end: {
          line: 142,
          column: 6
        }
      },
      "46": {
        start: {
          line: 146,
          column: 23
        },
        end: {
          line: 183,
          column: 21
        }
      },
      "47": {
        start: {
          line: 184,
          column: 4
        },
        end: {
          line: 188,
          column: 6
        }
      },
      "48": {
        start: {
          line: 191,
          column: 36
        },
        end: {
          line: 191,
          column: 63
        }
      },
      "49": {
        start: {
          line: 192,
          column: 34
        },
        end: {
          line: 192,
          column: 61
        }
      },
      "50": {
        start: {
          line: 193,
          column: 30
        },
        end: {
          line: 193,
          column: 57
        }
      },
      "51": {
        start: {
          line: 194,
          column: 4
        },
        end: {
          line: 210,
          column: 22
        }
      },
      "52": {
        start: {
          line: 195,
          column: 8
        },
        end: {
          line: 198,
          column: 9
        }
      },
      "53": {
        start: {
          line: 196,
          column: 12
        },
        end: {
          line: 196,
          column: 30
        }
      },
      "54": {
        start: {
          line: 197,
          column: 12
        },
        end: {
          line: 197,
          column: 19
        }
      },
      "55": {
        start: {
          line: 200,
          column: 8
        },
        end: {
          line: 209,
          column: 17
        }
      },
      "56": {
        start: {
          line: 201,
          column: 12
        },
        end: {
          line: 207,
          column: 15
        }
      },
      "57": {
        start: {
          line: 208,
          column: 12
        },
        end: {
          line: 208,
          column: 30
        }
      },
      "58": {
        start: {
          line: 211,
          column: 4
        },
        end: {
          line: 211,
          column: 40
        }
      }
    },
    fnMap: {
      "0": {
        name: "useRealtimeInterview",
        decl: {
          start: {
            line: 20,
            column: 9
          },
          end: {
            line: 20,
            column: 29
          }
        },
        loc: {
          start: {
            line: 20,
            column: 43
          },
          end: {
            line: 60,
            column: 1
          }
        },
        line: 20
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 24,
            column: 27
          },
          end: {
            line: 24,
            column: 28
          }
        },
        loc: {
          start: {
            line: 24,
            column: 33
          },
          end: {
            line: 54,
            column: 5
          }
        },
        line: 24
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 30,
            column: 33
          },
          end: {
            line: 30,
            column: 34
          }
        },
        loc: {
          start: {
            line: 30,
            column: 39
          },
          end: {
            line: 41,
            column: 9
          }
        },
        line: 30
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 50,
            column: 15
          },
          end: {
            line: 50,
            column: 16
          }
        },
        loc: {
          start: {
            line: 50,
            column: 21
          },
          end: {
            line: 53,
            column: 9
          }
        },
        line: 50
      },
      "4": {
        name: "useRealtimeApplicationStatus",
        decl: {
          start: {
            line: 66,
            column: 9
          },
          end: {
            line: 66,
            column: 37
          }
        },
        loc: {
          start: {
            line: 66,
            column: 53
          },
          end: {
            line: 120,
            column: 1
          }
        },
        line: 66
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 70,
            column: 27
          },
          end: {
            line: 70,
            column: 28
          }
        },
        loc: {
          start: {
            line: 70,
            column: 33
          },
          end: {
            line: 114,
            column: 5
          }
        },
        line: 70
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 84,
            column: 29
          },
          end: {
            line: 84,
            column: 30
          }
        },
        loc: {
          start: {
            line: 84,
            column: 35
          },
          end: {
            line: 104,
            column: 9
          }
        },
        line: 84
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 105,
            column: 40
          },
          end: {
            line: 105,
            column: 41
          }
        },
        loc: {
          start: {
            line: 105,
            column: 46
          },
          end: {
            line: 108,
            column: 9
          }
        },
        line: 105
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 110,
            column: 15
          },
          end: {
            line: 110,
            column: 16
          }
        },
        loc: {
          start: {
            line: 110,
            column: 21
          },
          end: {
            line: 113,
            column: 9
          }
        },
        line: 110
      },
      "9": {
        name: "useRealtimeUserInterviews",
        decl: {
          start: {
            line: 122,
            column: 9
          },
          end: {
            line: 122,
            column: 34
          }
        },
        loc: {
          start: {
            line: 122,
            column: 43
          },
          end: {
            line: 143,
            column: 1
          }
        },
        line: 122
      },
      "10": {
        name: "useRealtimePublicInterviews",
        decl: {
          start: {
            line: 144,
            column: 9
          },
          end: {
            line: 144,
            column: 36
          }
        },
        loc: {
          start: {
            line: 144,
            column: 48
          },
          end: {
            line: 189,
            column: 1
          }
        },
        line: 144
      },
      "11": {
        name: "useRealtimeFeedback",
        decl: {
          start: {
            line: 190,
            column: 9
          },
          end: {
            line: 190,
            column: 28
          }
        },
        loc: {
          start: {
            line: 190,
            column: 42
          },
          end: {
            line: 212,
            column: 1
          }
        },
        line: 190
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 194,
            column: 27
          },
          end: {
            line: 194,
            column: 28
          }
        },
        loc: {
          start: {
            line: 194,
            column: 33
          },
          end: {
            line: 210,
            column: 5
          }
        },
        line: 194
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 200,
            column: 19
          },
          end: {
            line: 200,
            column: 20
          }
        },
        loc: {
          start: {
            line: 200,
            column: 25
          },
          end: {
            line: 209,
            column: 9
          }
        },
        line: 200
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 28,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 28,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 25
      },
      "1": {
        loc: {
          start: {
            line: 71,
            column: 8
          },
          end: {
            line: 74,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 71,
            column: 8
          },
          end: {
            line: 74,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 71
      },
      "2": {
        loc: {
          start: {
            line: 85,
            column: 12
          },
          end: {
            line: 103,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 85,
            column: 12
          },
          end: {
            line: 103,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 85
      },
      "3": {
        loc: {
          start: {
            line: 91,
            column: 28
          },
          end: {
            line: 91,
            column: 71
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 91,
            column: 45
          },
          end: {
            line: 91,
            column: 57
          }
        }, {
          start: {
            line: 91,
            column: 60
          },
          end: {
            line: 91,
            column: 71
          }
        }],
        line: 91
      },
      "4": {
        loc: {
          start: {
            line: 94,
            column: 31
          },
          end: {
            line: 94,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 94,
            column: 31
          },
          end: {
            line: 94,
            column: 49
          }
        }, {
          start: {
            line: 94,
            column: 53
          },
          end: {
            line: 94,
            column: 64
          }
        }],
        line: 94
      },
      "5": {
        loc: {
          start: {
            line: 96,
            column: 41
          },
          end: {
            line: 96,
            column: 93
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 96,
            column: 57
          },
          end: {
            line: 96,
            column: 81
          }
        }, {
          start: {
            line: 96,
            column: 84
          },
          end: {
            line: 96,
            column: 93
          }
        }],
        line: 96
      },
      "6": {
        loc: {
          start: {
            line: 100,
            column: 16
          },
          end: {
            line: 102,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 100,
            column: 16
          },
          end: {
            line: 102,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 100
      },
      "7": {
        loc: {
          start: {
            line: 124,
            column: 23
          },
          end: {
            line: 137,
            column: 10
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 124,
            column: 32
          },
          end: {
            line: 137,
            column: 5
          }
        }, {
          start: {
            line: 137,
            column: 8
          },
          end: {
            line: 137,
            column: 10
          }
        }],
        line: 124
      },
      "8": {
        loc: {
          start: {
            line: 144,
            column: 37
          },
          end: {
            line: 144,
            column: 46
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 144,
            column: 45
          },
          end: {
            line: 144,
            column: 46
          }
        }],
        line: 144
      },
      "9": {
        loc: {
          start: {
            line: 195,
            column: 8
          },
          end: {
            line: 198,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 195,
            column: 8
          },
          end: {
            line: 198,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 195
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0],
      "9": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/dikshantvashistha/PrepBettr/lib/hooks/useRealtimeFirestore.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/dikshantvashistha/PrepBettr/lib/hooks/useRealtimeFirestore.ts"],
      sourcesContent: ["/**\n * Realtime Firestore Hooks Compatibility Layer\n * \n * SWR-based implementations of realtime Firestore hooks for backward compatibility\n * Components using these should be migrated to Azure services with SignalR\n */\n\nimport { useState, useEffect } from 'react';\n\n// Mock data structures\ninterface Interview {\n  id: string;\n  userId: string;\n  status: 'pending' | 'in-progress' | 'completed';\n  questions: string[];\n  answers: string[];\n  feedback?: string;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\ninterface ApplicationStatus {\n  id: string;\n  userId: string;\n  status: 'processing' | 'completed' | 'error';\n  progress: number;\n  details: {\n    stage: string;\n    message: string;\n    warningMessages?: string[];\n  };\n  updatedAt: Date;\n}\n\n/**\n * Mock useRealtimeInterview hook\n * @param interviewId - Interview ID to watch\n * @returns Realtime interview data\n */\nexport function useRealtimeInterview(interviewId: string) {\n  const [interview, setInterview] = useState<Interview | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    if (!interviewId) {\n      setLoading(false);\n      return;\n    }\n\n    // Mock realtime updates\n    const timer = setTimeout(() => {\n      setInterview({\n        id: interviewId,\n        userId: 'mock-user',\n        status: 'in-progress',\n        questions: ['What is your experience?', 'What are your goals?'],\n        answers: ['I have 5 years experience', 'I want to grow'],\n        createdAt: new Date(),\n        updatedAt: new Date()\n      });\n      setLoading(false);\n    }, 1000);\n\n    // Remove periodic updates to prevent polling loops\n    // Real implementations should use SignalR or WebSocket connections\n    // const updateTimer = setInterval(() => {\n    //   setInterview(prev => prev ? {\n    //     ...prev,\n    //     updatedAt: new Date()\n    //   } : null);\n    // }, 10000);\n\n    return () => {\n      clearTimeout(timer);\n      // clearInterval(updateTimer); // Commented out since updateTimer is no longer defined\n    };\n  }, [interviewId]);\n\n  return {\n    interview,\n    loading,\n    error\n  };\n}\n\n/**\n * Mock useRealtimeApplicationStatus hook\n * @param applicationId - Application ID to watch\n * @returns Realtime application status\n */\nexport function useRealtimeApplicationStatus(applicationId: string) {\n  const [status, setStatus] = useState<ApplicationStatus | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    if (!applicationId) {\n      setLoading(false);\n      return;\n    }\n\n    // Mock realtime status updates\n    let progress = 0;\n    const stages = [\n      'Initializing application',\n      'Processing documents',\n      'Analyzing requirements',\n      'Generating response',\n      'Finalizing application'\n    ];\n\n    const updateStatus = () => {\n      if (progress < 100) {\n        progress += 20;\n        const stageIndex = Math.floor(progress / 20) - 1;\n        \n        setStatus({\n          id: applicationId,\n          userId: 'mock-user',\n          status: progress < 100 ? 'processing' : 'completed',\n          progress,\n          details: {\n            stage: stages[stageIndex] || 'Completed',\n            message: `Processing... ${progress}% complete`,\n            warningMessages: progress > 60 ? ['Quality check passed'] : undefined\n          },\n          updatedAt: new Date()\n        });\n\n        if (progress >= 100) {\n          setLoading(false);\n        }\n      }\n    };\n\n    const initialTimer = setTimeout(() => {\n      updateStatus();\n      setLoading(false);\n    }, 500);\n\n    const progressTimer = setInterval(updateStatus, 2000);\n\n    return () => {\n      clearTimeout(initialTimer);\n      clearInterval(progressTimer);\n    };\n  }, [applicationId]);\n\n  return {\n    status,\n    loading,\n    error\n  };\n}\n\n// Static mock data for dashboard - no API calls\nexport function useRealtimeUserInterviews(userId?: string) {\n  // Return static mock data immediately, no API calls\n  const interviews = userId ? [\n    {\n      id: 'mock-interview-user',\n      userId,\n      role: 'Software Engineer',\n      type: 'technical',\n      techstack: ['React', 'TypeScript'],\n      status: 'completed',\n      questions: ['Tell me about yourself'],\n      answers: ['I am a developer'],\n      createdAt: new Date().toISOString(),\n      updatedAt: new Date().toISOString()\n    }\n  ] : [];\n\n  return { \n    data: interviews,\n    isLoading: false,\n    error: null\n  };\n}\n\nexport function useRealtimePublicInterviews(limit: number = 4) {\n  // Return static mock data immediately, no API calls\n  const interviews = [\n    {\n      id: 'public-interview-1',\n      userId: 'public-user-1',\n      role: 'Frontend Developer',\n      type: 'technical',\n      techstack: ['React', 'JavaScript'],\n      status: 'completed',\n      questions: ['How do you handle state management?'],\n      answers: ['I use React hooks and context'],\n      createdAt: new Date().toISOString(),\n      updatedAt: new Date().toISOString()\n    },\n    {\n      id: 'public-interview-2',\n      userId: 'public-user-2',\n      role: 'Backend Developer',\n      type: 'technical', \n      techstack: ['Node.js', 'Python'],\n      status: 'completed',\n      questions: ['Explain REST API design'],\n      answers: ['REST follows HTTP principles with resources'],\n      createdAt: new Date().toISOString(),\n      updatedAt: new Date().toISOString()\n    },\n    {\n      id: 'public-interview-3',\n      userId: 'public-user-3',\n      role: 'Data Scientist',\n      type: 'technical',\n      techstack: ['Python', 'Machine Learning'],\n      status: 'completed',\n      questions: ['Explain supervised learning'],\n      answers: ['Uses labeled data to train models'],\n      createdAt: new Date().toISOString(),\n      updatedAt: new Date().toISOString()\n    }\n  ].slice(0, limit);\n\n  return { \n    data: interviews,\n    isLoading: false,\n    error: null\n  };\n}\n\nexport function useRealtimeFeedback(interviewId: string) {\n  const [feedback, setFeedback] = useState<any>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    if (!interviewId) {\n      setLoading(false);\n      return;\n    }\n\n    // Mock feedback loading\n    setTimeout(() => {\n      setFeedback({\n        id: interviewId,\n        score: 85,\n        comments: 'Great performance!',\n        areas: ['Technical skills', 'Communication'],\n        createdAt: new Date()\n      });\n      setLoading(false);\n    }, 1000);\n  }, [interviewId]);\n\n  return { feedback, loading, error };\n}\n\nexport type { Interview, ApplicationStatus };\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a31a173181be7ffae36d1e6c9b860ea66425786e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_v2texumxd = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_v2texumxd();
cov_v2texumxd().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_v2texumxd().s[1]++;
exports.useRealtimeInterview = useRealtimeInterview;
/* istanbul ignore next */
cov_v2texumxd().s[2]++;
exports.useRealtimeApplicationStatus = useRealtimeApplicationStatus;
/* istanbul ignore next */
cov_v2texumxd().s[3]++;
exports.useRealtimeUserInterviews = useRealtimeUserInterviews;
/* istanbul ignore next */
cov_v2texumxd().s[4]++;
exports.useRealtimePublicInterviews = useRealtimePublicInterviews;
/* istanbul ignore next */
cov_v2texumxd().s[5]++;
exports.useRealtimeFeedback = useRealtimeFeedback;
const react_1 =
/* istanbul ignore next */
(cov_v2texumxd().s[6]++, require("react"));
/**
 * Mock useRealtimeInterview hook
 * @param interviewId - Interview ID to watch
 * @returns Realtime interview data
 */
function useRealtimeInterview(interviewId) {
  /* istanbul ignore next */
  cov_v2texumxd().f[0]++;
  const [interview, setInterview] =
  /* istanbul ignore next */
  (cov_v2texumxd().s[7]++, (0, react_1.useState)(null));
  const [loading, setLoading] =
  /* istanbul ignore next */
  (cov_v2texumxd().s[8]++, (0, react_1.useState)(true));
  const [error, setError] =
  /* istanbul ignore next */
  (cov_v2texumxd().s[9]++, (0, react_1.useState)(null));
  /* istanbul ignore next */
  cov_v2texumxd().s[10]++;
  (0, react_1.useEffect)(() => {
    /* istanbul ignore next */
    cov_v2texumxd().f[1]++;
    cov_v2texumxd().s[11]++;
    if (!interviewId) {
      /* istanbul ignore next */
      cov_v2texumxd().b[0][0]++;
      cov_v2texumxd().s[12]++;
      setLoading(false);
      /* istanbul ignore next */
      cov_v2texumxd().s[13]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_v2texumxd().b[0][1]++;
    }
    // Mock realtime updates
    const timer =
    /* istanbul ignore next */
    (cov_v2texumxd().s[14]++, setTimeout(() => {
      /* istanbul ignore next */
      cov_v2texumxd().f[2]++;
      cov_v2texumxd().s[15]++;
      setInterview({
        id: interviewId,
        userId: 'mock-user',
        status: 'in-progress',
        questions: ['What is your experience?', 'What are your goals?'],
        answers: ['I have 5 years experience', 'I want to grow'],
        createdAt: new Date(),
        updatedAt: new Date()
      });
      /* istanbul ignore next */
      cov_v2texumxd().s[16]++;
      setLoading(false);
    }, 1000));
    // Remove periodic updates to prevent polling loops
    // Real implementations should use SignalR or WebSocket connections
    // const updateTimer = setInterval(() => {
    //   setInterview(prev => prev ? {
    //     ...prev,
    //     updatedAt: new Date()
    //   } : null);
    // }, 10000);
    /* istanbul ignore next */
    cov_v2texumxd().s[17]++;
    return () => {
      /* istanbul ignore next */
      cov_v2texumxd().f[3]++;
      cov_v2texumxd().s[18]++;
      clearTimeout(timer);
      // clearInterval(updateTimer); // Commented out since updateTimer is no longer defined
    };
  }, [interviewId]);
  /* istanbul ignore next */
  cov_v2texumxd().s[19]++;
  return {
    interview,
    loading,
    error
  };
}
/**
 * Mock useRealtimeApplicationStatus hook
 * @param applicationId - Application ID to watch
 * @returns Realtime application status
 */
function useRealtimeApplicationStatus(applicationId) {
  /* istanbul ignore next */
  cov_v2texumxd().f[4]++;
  const [status, setStatus] =
  /* istanbul ignore next */
  (cov_v2texumxd().s[20]++, (0, react_1.useState)(null));
  const [loading, setLoading] =
  /* istanbul ignore next */
  (cov_v2texumxd().s[21]++, (0, react_1.useState)(true));
  const [error, setError] =
  /* istanbul ignore next */
  (cov_v2texumxd().s[22]++, (0, react_1.useState)(null));
  /* istanbul ignore next */
  cov_v2texumxd().s[23]++;
  (0, react_1.useEffect)(() => {
    /* istanbul ignore next */
    cov_v2texumxd().f[5]++;
    cov_v2texumxd().s[24]++;
    if (!applicationId) {
      /* istanbul ignore next */
      cov_v2texumxd().b[1][0]++;
      cov_v2texumxd().s[25]++;
      setLoading(false);
      /* istanbul ignore next */
      cov_v2texumxd().s[26]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_v2texumxd().b[1][1]++;
    }
    // Mock realtime status updates
    let progress =
    /* istanbul ignore next */
    (cov_v2texumxd().s[27]++, 0);
    const stages =
    /* istanbul ignore next */
    (cov_v2texumxd().s[28]++, ['Initializing application', 'Processing documents', 'Analyzing requirements', 'Generating response', 'Finalizing application']);
    /* istanbul ignore next */
    cov_v2texumxd().s[29]++;
    const updateStatus = () => {
      /* istanbul ignore next */
      cov_v2texumxd().f[6]++;
      cov_v2texumxd().s[30]++;
      if (progress < 100) {
        /* istanbul ignore next */
        cov_v2texumxd().b[2][0]++;
        cov_v2texumxd().s[31]++;
        progress += 20;
        const stageIndex =
        /* istanbul ignore next */
        (cov_v2texumxd().s[32]++, Math.floor(progress / 20) - 1);
        /* istanbul ignore next */
        cov_v2texumxd().s[33]++;
        setStatus({
          id: applicationId,
          userId: 'mock-user',
          status: progress < 100 ?
          /* istanbul ignore next */
          (cov_v2texumxd().b[3][0]++, 'processing') :
          /* istanbul ignore next */
          (cov_v2texumxd().b[3][1]++, 'completed'),
          progress,
          details: {
            stage:
            /* istanbul ignore next */
            (cov_v2texumxd().b[4][0]++, stages[stageIndex]) ||
            /* istanbul ignore next */
            (cov_v2texumxd().b[4][1]++, 'Completed'),
            message: `Processing... ${progress}% complete`,
            warningMessages: progress > 60 ?
            /* istanbul ignore next */
            (cov_v2texumxd().b[5][0]++, ['Quality check passed']) :
            /* istanbul ignore next */
            (cov_v2texumxd().b[5][1]++, undefined)
          },
          updatedAt: new Date()
        });
        /* istanbul ignore next */
        cov_v2texumxd().s[34]++;
        if (progress >= 100) {
          /* istanbul ignore next */
          cov_v2texumxd().b[6][0]++;
          cov_v2texumxd().s[35]++;
          setLoading(false);
        } else
        /* istanbul ignore next */
        {
          cov_v2texumxd().b[6][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_v2texumxd().b[2][1]++;
      }
    };
    const initialTimer =
    /* istanbul ignore next */
    (cov_v2texumxd().s[36]++, setTimeout(() => {
      /* istanbul ignore next */
      cov_v2texumxd().f[7]++;
      cov_v2texumxd().s[37]++;
      updateStatus();
      /* istanbul ignore next */
      cov_v2texumxd().s[38]++;
      setLoading(false);
    }, 500));
    const progressTimer =
    /* istanbul ignore next */
    (cov_v2texumxd().s[39]++, setInterval(updateStatus, 2000));
    /* istanbul ignore next */
    cov_v2texumxd().s[40]++;
    return () => {
      /* istanbul ignore next */
      cov_v2texumxd().f[8]++;
      cov_v2texumxd().s[41]++;
      clearTimeout(initialTimer);
      /* istanbul ignore next */
      cov_v2texumxd().s[42]++;
      clearInterval(progressTimer);
    };
  }, [applicationId]);
  /* istanbul ignore next */
  cov_v2texumxd().s[43]++;
  return {
    status,
    loading,
    error
  };
}
// Static mock data for dashboard - no API calls
function useRealtimeUserInterviews(userId) {
  /* istanbul ignore next */
  cov_v2texumxd().f[9]++;
  // Return static mock data immediately, no API calls
  const interviews =
  /* istanbul ignore next */
  (cov_v2texumxd().s[44]++, userId ?
  /* istanbul ignore next */
  (cov_v2texumxd().b[7][0]++, [{
    id: 'mock-interview-user',
    userId,
    role: 'Software Engineer',
    type: 'technical',
    techstack: ['React', 'TypeScript'],
    status: 'completed',
    questions: ['Tell me about yourself'],
    answers: ['I am a developer'],
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString()
  }]) :
  /* istanbul ignore next */
  (cov_v2texumxd().b[7][1]++, []));
  /* istanbul ignore next */
  cov_v2texumxd().s[45]++;
  return {
    data: interviews,
    isLoading: false,
    error: null
  };
}
function useRealtimePublicInterviews(limit =
/* istanbul ignore next */
(cov_v2texumxd().b[8][0]++, 4)) {
  /* istanbul ignore next */
  cov_v2texumxd().f[10]++;
  // Return static mock data immediately, no API calls
  const interviews =
  /* istanbul ignore next */
  (cov_v2texumxd().s[46]++, [{
    id: 'public-interview-1',
    userId: 'public-user-1',
    role: 'Frontend Developer',
    type: 'technical',
    techstack: ['React', 'JavaScript'],
    status: 'completed',
    questions: ['How do you handle state management?'],
    answers: ['I use React hooks and context'],
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString()
  }, {
    id: 'public-interview-2',
    userId: 'public-user-2',
    role: 'Backend Developer',
    type: 'technical',
    techstack: ['Node.js', 'Python'],
    status: 'completed',
    questions: ['Explain REST API design'],
    answers: ['REST follows HTTP principles with resources'],
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString()
  }, {
    id: 'public-interview-3',
    userId: 'public-user-3',
    role: 'Data Scientist',
    type: 'technical',
    techstack: ['Python', 'Machine Learning'],
    status: 'completed',
    questions: ['Explain supervised learning'],
    answers: ['Uses labeled data to train models'],
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString()
  }].slice(0, limit));
  /* istanbul ignore next */
  cov_v2texumxd().s[47]++;
  return {
    data: interviews,
    isLoading: false,
    error: null
  };
}
function useRealtimeFeedback(interviewId) {
  /* istanbul ignore next */
  cov_v2texumxd().f[11]++;
  const [feedback, setFeedback] =
  /* istanbul ignore next */
  (cov_v2texumxd().s[48]++, (0, react_1.useState)(null));
  const [loading, setLoading] =
  /* istanbul ignore next */
  (cov_v2texumxd().s[49]++, (0, react_1.useState)(true));
  const [error, setError] =
  /* istanbul ignore next */
  (cov_v2texumxd().s[50]++, (0, react_1.useState)(null));
  /* istanbul ignore next */
  cov_v2texumxd().s[51]++;
  (0, react_1.useEffect)(() => {
    /* istanbul ignore next */
    cov_v2texumxd().f[12]++;
    cov_v2texumxd().s[52]++;
    if (!interviewId) {
      /* istanbul ignore next */
      cov_v2texumxd().b[9][0]++;
      cov_v2texumxd().s[53]++;
      setLoading(false);
      /* istanbul ignore next */
      cov_v2texumxd().s[54]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_v2texumxd().b[9][1]++;
    }
    // Mock feedback loading
    cov_v2texumxd().s[55]++;
    setTimeout(() => {
      /* istanbul ignore next */
      cov_v2texumxd().f[13]++;
      cov_v2texumxd().s[56]++;
      setFeedback({
        id: interviewId,
        score: 85,
        comments: 'Great performance!',
        areas: ['Technical skills', 'Communication'],
        createdAt: new Date()
      });
      /* istanbul ignore next */
      cov_v2texumxd().s[57]++;
      setLoading(false);
    }, 1000);
  }, [interviewId]);
  /* istanbul ignore next */
  cov_v2texumxd().s[58]++;
  return {
    feedback,
    loading,
    error
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,