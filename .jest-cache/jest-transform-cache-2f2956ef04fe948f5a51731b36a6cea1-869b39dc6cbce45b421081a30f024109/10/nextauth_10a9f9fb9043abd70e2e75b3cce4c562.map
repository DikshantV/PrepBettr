{"version":3,"names":["cov_q2zukk598","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","exports","nextAuthMiddleware","nextOptionalAuth","nextRoleMiddleware","nextAdminMiddleware","withNextAuth","withNextAdminAuth","withNextRoleAuth","createNextHealthResponse","getUserFromSessionCookie","extractUserFromRequest","benchmarkNextAuth","server_1","require","core_1","types_1","request","options","monitor","AuthPerformanceMonitor","getInstance","endTiming","startTiming","authHeader","headers","get","authResult","verifyAuthHeader","success","user","error","UnifiedAuthError","errorCode","AuthErrorCode","INVALID_TOKEN","response","createErrorResponse","message","code","_a","requiredRoles","length","auth","getUnifiedAuth","hasRequiredRoles","insufficientPermissions","customValidator","isValid","INSUFFICIENT_PERMISSIONS","console","authError","UNKNOWN_ERROR","isAuthenticated","handler","args","skipAuth","NextResponse","json","details","status","statusCode","timestamp","Date","toISOString","service","sessionCookie","result","verifySessionCookie","valid","cookies","value","iterations","results","i","duration","push","sorted","sort","a","sum","reduce","average","median","Math","floor","p95","p99","min","max"],"sources":["/Users/dikshantvashistha/PrepBettr/lib/shared/auth/adapters/next-auth.ts"],"sourcesContent":["/**\n * Next.js Authentication Middleware Adapter\n * \n * Provides Next.js-specific authentication middleware using the unified auth library\n */\n\nimport { NextRequest, NextResponse } from 'next/server';\nimport { \n  getUnifiedAuth, \n  verifyAuthHeader, \n  UnifiedAuthError,\n  AuthPerformanceMonitor \n} from '../core';\nimport { \n  AuthenticatedUser, \n  AuthMiddlewareOptions, \n  AuthMiddlewareResult,\n  AuthErrorCode \n} from '../types';\n\n// ===== NEXT.JS MIDDLEWARE FUNCTIONS =====\n\n/**\n * Core authentication middleware for Next.js API routes\n */\nexport async function nextAuthMiddleware(\n  request: NextRequest, \n  options: AuthMiddlewareOptions = {}\n): Promise<AuthMiddlewareResult<NextResponse>> {\n  const monitor = AuthPerformanceMonitor.getInstance();\n  const endTiming = monitor.startTiming('next-auth-middleware');\n\n  try {\n    const authHeader = request.headers.get('authorization');\n    const authResult = await verifyAuthHeader(authHeader);\n\n    if (!authResult.success || !authResult.user) {\n      const error = new UnifiedAuthError(\n        authResult.errorCode || AuthErrorCode.INVALID_TOKEN,\n        authResult.error || 'Authentication failed'\n      );\n\n      return {\n        success: false,\n        user: null,\n        response: createErrorResponse(error),\n        error: error.message,\n        errorCode: error.code\n      };\n    }\n\n    // Check roles if required\n    if (options.requiredRoles?.length) {\n      const auth = getUnifiedAuth();\n      if (!auth.hasRequiredRoles(authResult.user, options.requiredRoles)) {\n        const error = UnifiedAuthError.insufficientPermissions(options.requiredRoles);\n        return {\n          success: false,\n          user: null,\n          response: createErrorResponse(error),\n          error: error.message,\n          errorCode: error.code\n        };\n      }\n    }\n\n    // Custom validation\n    if (options.customValidator) {\n      const isValid = await options.customValidator(authResult.user);\n      if (!isValid) {\n        const error = new UnifiedAuthError(\n          AuthErrorCode.INSUFFICIENT_PERMISSIONS,\n          'Custom validation failed'\n        );\n        return {\n          success: false,\n          user: null,\n          response: createErrorResponse(error),\n          error: error.message,\n          errorCode: error.code\n        };\n      }\n    }\n\n    endTiming();\n    return {\n      success: true,\n      user: authResult.user\n    };\n\n  } catch (error) {\n    endTiming();\n    console.error('Next.js auth middleware error:', error);\n    \n    const authError = error instanceof UnifiedAuthError ? error : \n      new UnifiedAuthError(AuthErrorCode.UNKNOWN_ERROR, 'Authentication system error');\n\n    return {\n      success: false,\n      user: null,\n      response: createErrorResponse(authError),\n      error: authError.message,\n      errorCode: authError.code\n    };\n  }\n}\n\n/**\n * Optional authentication middleware (allows anonymous users)\n */\nexport async function nextOptionalAuth(request: NextRequest): Promise<{\n  user: AuthenticatedUser | null;\n  isAuthenticated: boolean;\n}> {\n  try {\n    const authHeader = request.headers.get('authorization');\n    const authResult = await verifyAuthHeader(authHeader);\n\n    return {\n      user: authResult.user,\n      isAuthenticated: authResult.success\n    };\n  } catch (error) {\n    return {\n      user: null,\n      isAuthenticated: false\n    };\n  }\n}\n\n/**\n * Role-based authentication middleware\n */\nexport async function nextRoleMiddleware(\n  request: NextRequest,\n  requiredRoles: string[]\n): Promise<AuthMiddlewareResult<NextResponse>> {\n  return nextAuthMiddleware(request, { requiredRoles });\n}\n\n/**\n * Admin-only middleware\n */\nexport async function nextAdminMiddleware(\n  request: NextRequest\n): Promise<AuthMiddlewareResult<NextResponse>> {\n  return nextAuthMiddleware(request, { requiredRoles: ['admin'] });\n}\n\n// ===== HIGHER-ORDER FUNCTIONS =====\n\n/**\n * Higher-order function to create authenticated API handlers\n */\nexport function withNextAuth<T extends any[]>(\n  handler: (request: NextRequest, user: AuthenticatedUser, ...args: T) => Promise<NextResponse>,\n  options: AuthMiddlewareOptions = {}\n) {\n  return async (request: NextRequest, ...args: T): Promise<NextResponse> => {\n    if (options.skipAuth) {\n      return await handler(request, null as any, ...args);\n    }\n\n    const authResult = await nextAuthMiddleware(request, options);\n\n    if (!authResult.success || !authResult.user) {\n      return authResult.response!;\n    }\n\n    // Call the actual handler with the authenticated user\n    return await handler(request, authResult.user, ...args);\n  };\n}\n\n/**\n * Admin-only handler wrapper\n */\nexport function withNextAdminAuth<T extends any[]>(\n  handler: (request: NextRequest, user: AuthenticatedUser, ...args: T) => Promise<NextResponse>\n) {\n  return withNextAuth(handler, { requiredRoles: ['admin'] });\n}\n\n/**\n * Role-based handler wrapper\n */\nexport function withNextRoleAuth<T extends any[]>(\n  handler: (request: NextRequest, user: AuthenticatedUser, ...args: T) => Promise<NextResponse>,\n  requiredRoles: string[]\n) {\n  return withNextAuth(handler, { requiredRoles });\n}\n\n// ===== UTILITY FUNCTIONS =====\n\n/**\n * Create standardized error response for Next.js\n */\nfunction createErrorResponse(error: UnifiedAuthError): NextResponse {\n  return NextResponse.json(\n    {\n      error: error.message,\n      code: error.code,\n      details: error.details\n    },\n    { \n      status: error.statusCode || 500,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }\n  );\n}\n\n/**\n * Create health check response\n */\nexport function createNextHealthResponse(): NextResponse {\n  return NextResponse.json(\n    {\n      status: 'healthy',\n      timestamp: new Date().toISOString(),\n      service: 'Next.js Unified Auth Middleware'\n    },\n    { status: 200 }\n  );\n}\n\n/**\n * Get user from session cookie (for server components)\n */\nexport async function getUserFromSessionCookie(sessionCookie: string): Promise<AuthenticatedUser | null> {\n  try {\n    const auth = getUnifiedAuth();\n    const result = await auth.verifySessionCookie(sessionCookie);\n    \n    return result.valid ? result.user || null : null;\n  } catch (error) {\n    console.error('Session cookie verification failed:', error);\n    return null;\n  }\n}\n\n/**\n * Extract user from Next.js request context\n */\nexport async function extractUserFromRequest(request: NextRequest): Promise<AuthenticatedUser | null> {\n  try {\n    // Try Authorization header first\n    const authHeader = request.headers.get('authorization');\n    if (authHeader) {\n      const authResult = await verifyAuthHeader(authHeader);\n      if (authResult.success && authResult.user) {\n        return authResult.user;\n      }\n    }\n\n    // Try session cookie as fallback\n    const sessionCookie = request.cookies.get('session')?.value;\n    if (sessionCookie) {\n      return await getUserFromSessionCookie(sessionCookie);\n    }\n\n    return null;\n  } catch (error) {\n    console.error('Failed to extract user from request:', error);\n    return null;\n  }\n}\n\n// ===== PERFORMANCE HELPERS =====\n\n/**\n * Benchmark authentication performance\n */\nexport async function benchmarkNextAuth(\n  request: NextRequest,\n  iterations: number = 100\n): Promise<Record<string, any>> {\n  const monitor = AuthPerformanceMonitor.getInstance();\n  const results: number[] = [];\n\n  for (let i = 0; i < iterations; i++) {\n    const endTiming = monitor.startTiming('benchmark');\n    await nextAuthMiddleware(request);\n    const duration = endTiming();\n    results.push(duration);\n  }\n\n  const sorted = results.sort((a, b) => a - b);\n  const sum = results.reduce((a, b) => a + b, 0);\n\n  return {\n    iterations,\n    average: sum / iterations,\n    median: sorted[Math.floor(sorted.length / 2)],\n    p95: sorted[Math.floor(sorted.length * 0.95)],\n    p99: sorted[Math.floor(sorted.length * 0.99)],\n    min: sorted[0],\n    max: sorted[sorted.length - 1]\n  };\n}\n"],"mappings":";;AAAA;;;;;AAAA;AAAA,SAAAA,cAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAA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","ignoreList":[]}