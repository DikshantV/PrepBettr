760540dea59d7d33e4568e4badae7469
"use strict";

/**
 * Auth Middleware Compatibility Layer
 *
 * Provides backward compatibility for existing middleware usage
 * Routes to the unified auth system
 */
/* istanbul ignore next */
function cov_49d6g4lhu() {
  var path = "/Users/dikshantvashistha/PrepBettr/lib/middleware/authMiddleware.ts";
  var hash = "5d449c87a21aeabd156c2ba9a98d3780f9bd96fd";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dikshantvashistha/PrepBettr/lib/middleware/authMiddleware.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 62
        }
      },
      "1": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 50
        }
      },
      "2": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 10,
          column: 52
        }
      },
      "3": {
        start: {
          line: 11,
          column: 15
        },
        end: {
          line: 11,
          column: 43
        }
      },
      "4": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 32,
          column: 5
        }
      },
      "5": {
        start: {
          line: 19,
          column: 23
        },
        end: {
          line: 19,
          column: 59
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 24,
          column: 10
        }
      },
      "7": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 31,
          column: 10
        }
      },
      "8": {
        start: {
          line: 40,
          column: 19
        },
        end: {
          line: 40,
          column: 51
        }
      },
      "9": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 41,
          column: 47
        }
      }
    },
    fnMap: {
      "0": {
        name: "verifyFirebaseToken",
        decl: {
          start: {
            line: 17,
            column: 15
          },
          end: {
            line: 17,
            column: 34
          }
        },
        loc: {
          start: {
            line: 17,
            column: 42
          },
          end: {
            line: 33,
            column: 1
          }
        },
        line: 17
      },
      "1": {
        name: "extractUserFromToken",
        decl: {
          start: {
            line: 39,
            column: 15
          },
          end: {
            line: 39,
            column: 35
          }
        },
        loc: {
          start: {
            line: 39,
            column: 43
          },
          end: {
            line: 42,
            column: 1
          }
        },
        line: 39
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 22,
            column: 18
          },
          end: {
            line: 22,
            column: 37
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 22,
            column: 18
          },
          end: {
            line: 22,
            column: 29
          }
        }, {
          start: {
            line: 22,
            column: 33
          },
          end: {
            line: 22,
            column: 37
          }
        }],
        line: 22
      },
      "1": {
        loc: {
          start: {
            line: 30,
            column: 19
          },
          end: {
            line: 30,
            column: 87
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 30,
            column: 44
          },
          end: {
            line: 30,
            column: 57
          }
        }, {
          start: {
            line: 30,
            column: 60
          },
          end: {
            line: 30,
            column: 87
          }
        }],
        line: 30
      },
      "2": {
        loc: {
          start: {
            line: 41,
            column: 11
          },
          end: {
            line: 41,
            column: 46
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 41,
            column: 28
          },
          end: {
            line: 41,
            column: 39
          }
        }, {
          start: {
            line: 41,
            column: 42
          },
          end: {
            line: 41,
            column: 46
          }
        }],
        line: 41
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/dikshantvashistha/PrepBettr/lib/middleware/authMiddleware.ts",
      mappings: ";AAAA;;;;;GAKG;;AAaH,kDAeC;AAOD,oDAGC;AApCD,4CAI2B;AAE3B;;;;GAIG;AACI,KAAK,UAAU,mBAAmB,CAAC,KAAa;IACrD,IAAI,CAAC;QACH,MAAM,MAAM,GAAG,MAAM,IAAA,kBAAW,EAAC,KAAK,CAAC,CAAC;QACxC,OAAO;YACL,OAAO,EAAE,MAAM,CAAC,KAAK;YACrB,IAAI,EAAE,MAAM,CAAC,IAAI,IAAI,IAAI;YACzB,KAAK,EAAE,MAAM,CAAC,KAAK;SACpB,CAAC;IACJ,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO;YACL,OAAO,EAAE,KAAK;YACd,IAAI,EAAE,IAAI;YACV,KAAK,EAAE,KAAK,YAAY,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,2BAA2B;SAC5E,CAAC;IACJ,CAAC;AACH,CAAC;AAED;;;;GAIG;AACI,KAAK,UAAU,oBAAoB,CAAC,KAAa;IACtD,MAAM,MAAM,GAAG,MAAM,mBAAmB,CAAC,KAAK,CAAC,CAAC;IAChD,OAAO,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC;AAC7C,CAAC",
      names: [],
      sources: ["/Users/dikshantvashistha/PrepBettr/lib/middleware/authMiddleware.ts"],
      sourcesContent: ["/**\n * Auth Middleware Compatibility Layer\n * \n * Provides backward compatibility for existing middleware usage\n * Routes to the unified auth system\n */\n\nimport {\n  verifyToken,\n  AuthResult,\n  AuthenticatedUser\n} from '@/lib/shared/auth';\n\n/**\n * Verify Firebase token (legacy compatibility function)\n * @param token - Firebase ID token to verify\n * @returns Promise<AuthResult>\n */\nexport async function verifyFirebaseToken(token: string): Promise<AuthResult> {\n  try {\n    const result = await verifyToken(token);\n    return {\n      success: result.valid,\n      user: result.user || null,\n      error: result.error\n    };\n  } catch (error) {\n    return {\n      success: false,\n      user: null,\n      error: error instanceof Error ? error.message : 'Token verification failed'\n    };\n  }\n}\n\n/**\n * Extract user from token\n * @param token - Auth token\n * @returns Promise<AuthenticatedUser | null>\n */\nexport async function extractUserFromToken(token: string): Promise<AuthenticatedUser | null> {\n  const result = await verifyFirebaseToken(token);\n  return result.success ? result.user : null;\n}\n\n// Re-export types\nexport type { AuthResult, AuthenticatedUser };\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "5d449c87a21aeabd156c2ba9a98d3780f9bd96fd"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_49d6g4lhu = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_49d6g4lhu();
cov_49d6g4lhu().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_49d6g4lhu().s[1]++;
exports.verifyFirebaseToken = verifyFirebaseToken;
/* istanbul ignore next */
cov_49d6g4lhu().s[2]++;
exports.extractUserFromToken = extractUserFromToken;
const auth_1 =
/* istanbul ignore next */
(cov_49d6g4lhu().s[3]++, require("@/lib/shared/auth"));
/**
 * Verify Firebase token (legacy compatibility function)
 * @param token - Firebase ID token to verify
 * @returns Promise<AuthResult>
 */
async function verifyFirebaseToken(token) {
  /* istanbul ignore next */
  cov_49d6g4lhu().f[0]++;
  cov_49d6g4lhu().s[4]++;
  try {
    const result =
    /* istanbul ignore next */
    (cov_49d6g4lhu().s[5]++, await (0, auth_1.verifyToken)(token));
    /* istanbul ignore next */
    cov_49d6g4lhu().s[6]++;
    return {
      success: result.valid,
      user:
      /* istanbul ignore next */
      (cov_49d6g4lhu().b[0][0]++, result.user) ||
      /* istanbul ignore next */
      (cov_49d6g4lhu().b[0][1]++, null),
      error: result.error
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_49d6g4lhu().s[7]++;
    return {
      success: false,
      user: null,
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_49d6g4lhu().b[1][0]++, error.message) :
      /* istanbul ignore next */
      (cov_49d6g4lhu().b[1][1]++, 'Token verification failed')
    };
  }
}
/**
 * Extract user from token
 * @param token - Auth token
 * @returns Promise<AuthenticatedUser | null>
 */
async function extractUserFromToken(token) {
  /* istanbul ignore next */
  cov_49d6g4lhu().f[1]++;
  const result =
  /* istanbul ignore next */
  (cov_49d6g4lhu().s[8]++, await verifyFirebaseToken(token));
  /* istanbul ignore next */
  cov_49d6g4lhu().s[9]++;
  return result.success ?
  /* istanbul ignore next */
  (cov_49d6g4lhu().b[2][0]++, result.user) :
  /* istanbul ignore next */
  (cov_49d6g4lhu().b[2][1]++, null);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfNDlkNmc0bGh1IiwicGF0aCIsImhhc2giLCJnbG9iYWwiLCJGdW5jdGlvbiIsImdjdiIsImNvdmVyYWdlRGF0YSIsInN0YXRlbWVudE1hcCIsInN0YXJ0IiwibGluZSIsImNvbHVtbiIsImVuZCIsImZuTWFwIiwibmFtZSIsImRlY2wiLCJsb2MiLCJicmFuY2hNYXAiLCJ0eXBlIiwibG9jYXRpb25zIiwicyIsImYiLCJiIiwiaW5wdXRTb3VyY2VNYXAiLCJmaWxlIiwibWFwcGluZ3MiLCJuYW1lcyIsInNvdXJjZXMiLCJzb3VyY2VzQ29udGVudCIsInZlcnNpb24iLCJfY292ZXJhZ2VTY2hlbWEiLCJjb3ZlcmFnZSIsImFjdHVhbENvdmVyYWdlIiwiZXhwb3J0cyIsInZlcmlmeUZpcmViYXNlVG9rZW4iLCJleHRyYWN0VXNlckZyb21Ub2tlbiIsImF1dGhfMSIsInJlcXVpcmUiLCJ0b2tlbiIsInJlc3VsdCIsInZlcmlmeVRva2VuIiwic3VjY2VzcyIsInZhbGlkIiwidXNlciIsImVycm9yIiwiRXJyb3IiLCJtZXNzYWdlIl0sInNvdXJjZXMiOlsiL1VzZXJzL2Rpa3NoYW50dmFzaGlzdGhhL1ByZXBCZXR0ci9saWIvbWlkZGxld2FyZS9hdXRoTWlkZGxld2FyZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEF1dGggTWlkZGxld2FyZSBDb21wYXRpYmlsaXR5IExheWVyXG4gKiBcbiAqIFByb3ZpZGVzIGJhY2t3YXJkIGNvbXBhdGliaWxpdHkgZm9yIGV4aXN0aW5nIG1pZGRsZXdhcmUgdXNhZ2VcbiAqIFJvdXRlcyB0byB0aGUgdW5pZmllZCBhdXRoIHN5c3RlbVxuICovXG5cbmltcG9ydCB7XG4gIHZlcmlmeVRva2VuLFxuICBBdXRoUmVzdWx0LFxuICBBdXRoZW50aWNhdGVkVXNlclxufSBmcm9tICdAL2xpYi9zaGFyZWQvYXV0aCc7XG5cbi8qKlxuICogVmVyaWZ5IEZpcmViYXNlIHRva2VuIChsZWdhY3kgY29tcGF0aWJpbGl0eSBmdW5jdGlvbilcbiAqIEBwYXJhbSB0b2tlbiAtIEZpcmViYXNlIElEIHRva2VuIHRvIHZlcmlmeVxuICogQHJldHVybnMgUHJvbWlzZTxBdXRoUmVzdWx0PlxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gdmVyaWZ5RmlyZWJhc2VUb2tlbih0b2tlbjogc3RyaW5nKTogUHJvbWlzZTxBdXRoUmVzdWx0PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgdmVyaWZ5VG9rZW4odG9rZW4pO1xuICAgIHJldHVybiB7XG4gICAgICBzdWNjZXNzOiByZXN1bHQudmFsaWQsXG4gICAgICB1c2VyOiByZXN1bHQudXNlciB8fCBudWxsLFxuICAgICAgZXJyb3I6IHJlc3VsdC5lcnJvclxuICAgIH07XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgdXNlcjogbnVsbCxcbiAgICAgIGVycm9yOiBlcnJvciBpbnN0YW5jZW9mIEVycm9yID8gZXJyb3IubWVzc2FnZSA6ICdUb2tlbiB2ZXJpZmljYXRpb24gZmFpbGVkJ1xuICAgIH07XG4gIH1cbn1cblxuLyoqXG4gKiBFeHRyYWN0IHVzZXIgZnJvbSB0b2tlblxuICogQHBhcmFtIHRva2VuIC0gQXV0aCB0b2tlblxuICogQHJldHVybnMgUHJvbWlzZTxBdXRoZW50aWNhdGVkVXNlciB8IG51bGw+XG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBleHRyYWN0VXNlckZyb21Ub2tlbih0b2tlbjogc3RyaW5nKTogUHJvbWlzZTxBdXRoZW50aWNhdGVkVXNlciB8IG51bGw+IHtcbiAgY29uc3QgcmVzdWx0ID0gYXdhaXQgdmVyaWZ5RmlyZWJhc2VUb2tlbih0b2tlbik7XG4gIHJldHVybiByZXN1bHQuc3VjY2VzcyA/IHJlc3VsdC51c2VyIDogbnVsbDtcbn1cblxuLy8gUmUtZXhwb3J0IHR5cGVzXG5leHBvcnQgdHlwZSB7IEF1dGhSZXN1bHQsIEF1dGhlbnRpY2F0ZWRVc2VyIH07XG4iXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7OztBQUFBO0FBQUEsU0FBQUEsY0FBQTtFQUFBLElBQUFDLElBQUE7RUFBQSxJQUFBQyxJQUFBO0VBQUEsSUFBQUMsTUFBQSxPQUFBQyxRQUFBO0VBQUEsSUFBQUMsR0FBQTtFQUFBLElBQUFDLFlBQUE7SUFBQUwsSUFBQTtJQUFBTSxZQUFBO01BQUE7UUFBQUMsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7SUFBQTtJQUFBRSxLQUFBO01BQUE7UUFBQUMsSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO0lBQUE7SUFBQU8sU0FBQTtNQUFBO1FBQUFELEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtJQUFBO0lBQUFVLENBQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtJQUFBO0lBQUFDLENBQUE7TUFBQTtNQUFBO0lBQUE7SUFBQUMsQ0FBQTtNQUFBO01BQUE7TUFBQTtJQUFBO0lBQUFDLGNBQUE7TUFBQUMsSUFBQTtNQUFBQyxRQUFBO01BQUFDLEtBQUE7TUFBQUMsT0FBQTtNQUFBQyxjQUFBO01BQUFDLE9BQUE7SUFBQTtJQUFBQyxlQUFBO0lBQUEzQixJQUFBO0VBQUE7RUFBQSxJQUFBNEIsUUFBQSxHQUFBM0IsTUFBQSxDQUFBRSxHQUFBLE1BQUFGLE1BQUEsQ0FBQUUsR0FBQTtFQUFBLEtBQUF5QixRQUFBLENBQUE3QixJQUFBLEtBQUE2QixRQUFBLENBQUE3QixJQUFBLEVBQUFDLElBQUEsS0FBQUEsSUFBQTtJQUFBNEIsUUFBQSxDQUFBN0IsSUFBQSxJQUFBSyxZQUFBO0VBQUE7RUFBQSxJQUFBeUIsY0FBQSxHQUFBRCxRQUFBLENBQUE3QixJQUFBO0VBQUE7SUFpQkc7SUFBQUQsYUFBQSxZQUFBQSxDQUFBO01BQUEsT0FBQStCLGNBQUE7SUFBQTtFQUFBO0VBQUEsT0FBQUEsY0FBQTtBQUFBO0FBQUEvQixhQUFBO0FBQUFBLGFBQUEsR0FBQW1CLENBQUE7Ozs7OztBQUNIYSxPQUFBLENBQUFDLG1CQUFBLEdBQUFBLG1CQUFBO0FBZUM7QUFBQWpDLGFBQUEsR0FBQW1CLENBQUE7QUFPRGEsT0FBQSxDQUFBRSxvQkFBQSxHQUFBQSxvQkFBQTtBQWpDQSxNQUFBQyxNQUFBO0FBQUE7QUFBQSxDQUFBbkMsYUFBQSxHQUFBbUIsQ0FBQSxPQUFBaUIsT0FBQTtBQU1BOzs7OztBQUtPLGVBQWVILG1CQUFtQkEsQ0FBQ0ksS0FBYTtFQUFBO0VBQUFyQyxhQUFBLEdBQUFvQixDQUFBO0VBQUFwQixhQUFBLEdBQUFtQixDQUFBO0VBQ3JELElBQUk7SUFDRixNQUFNbUIsTUFBTTtJQUFBO0lBQUEsQ0FBQXRDLGFBQUEsR0FBQW1CLENBQUEsT0FBRyxNQUFNLElBQUFnQixNQUFBLENBQUFJLFdBQVcsRUFBQ0YsS0FBSyxDQUFDO0lBQUM7SUFBQXJDLGFBQUEsR0FBQW1CLENBQUE7SUFDeEMsT0FBTztNQUNMcUIsT0FBTyxFQUFFRixNQUFNLENBQUNHLEtBQUs7TUFDckJDLElBQUk7TUFBRTtNQUFBLENBQUExQyxhQUFBLEdBQUFxQixDQUFBLFVBQUFpQixNQUFNLENBQUNJLElBQUk7TUFBQTtNQUFBLENBQUExQyxhQUFBLEdBQUFxQixDQUFBLFVBQUksSUFBSTtNQUN6QnNCLEtBQUssRUFBRUwsTUFBTSxDQUFDSztLQUNmO0VBQ0gsQ0FBQyxDQUFDLE9BQU9BLEtBQUssRUFBRTtJQUFBO0lBQUEzQyxhQUFBLEdBQUFtQixDQUFBO0lBQ2QsT0FBTztNQUNMcUIsT0FBTyxFQUFFLEtBQUs7TUFDZEUsSUFBSSxFQUFFLElBQUk7TUFDVkMsS0FBSyxFQUFFQSxLQUFLLFlBQVlDLEtBQUs7TUFBQTtNQUFBLENBQUE1QyxhQUFBLEdBQUFxQixDQUFBLFVBQUdzQixLQUFLLENBQUNFLE9BQU87TUFBQTtNQUFBLENBQUE3QyxhQUFBLEdBQUFxQixDQUFBLFVBQUcsMkJBQTJCO0tBQzVFO0VBQ0g7QUFDRjtBQUVBOzs7OztBQUtPLGVBQWVhLG9CQUFvQkEsQ0FBQ0csS0FBYTtFQUFBO0VBQUFyQyxhQUFBLEdBQUFvQixDQUFBO0VBQ3RELE1BQU1rQixNQUFNO0VBQUE7RUFBQSxDQUFBdEMsYUFBQSxHQUFBbUIsQ0FBQSxPQUFHLE1BQU1jLG1CQUFtQixDQUFDSSxLQUFLLENBQUM7RUFBQztFQUFBckMsYUFBQSxHQUFBbUIsQ0FBQTtFQUNoRCxPQUFPbUIsTUFBTSxDQUFDRSxPQUFPO0VBQUE7RUFBQSxDQUFBeEMsYUFBQSxHQUFBcUIsQ0FBQSxVQUFHaUIsTUFBTSxDQUFDSSxJQUFJO0VBQUE7RUFBQSxDQUFBMUMsYUFBQSxHQUFBcUIsQ0FBQSxVQUFHLElBQUk7QUFDNUMiLCJpZ25vcmVMaXN0IjpbXX0=