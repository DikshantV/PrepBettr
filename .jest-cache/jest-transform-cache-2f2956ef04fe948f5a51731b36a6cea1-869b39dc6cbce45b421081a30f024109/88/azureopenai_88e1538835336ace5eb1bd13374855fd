06b271aaed8254be2c41083df387a0fc
"use strict";

/* istanbul ignore next */
function cov_1h3we8zce1() {
  var path = "/Users/dikshantvashistha/PrepBettr/lib/services/azure-openai.ts";
  var hash = "bc647d12d2da2b648db66bf4170c3754cc7ec317";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dikshantvashistha/PrepBettr/lib/services/azure-openai.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 42
        }
      },
      "4": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 7,
          column: 34
        }
      },
      "5": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 36
        }
      },
      "6": {
        start: {
          line: 9,
          column: 17
        },
        end: {
          line: 9,
          column: 51
        }
      },
      "7": {
        start: {
          line: 11,
          column: 25
        },
        end: {
          line: 11,
          column: 53
        }
      },
      "8": {
        start: {
          line: 12,
          column: 30
        },
        end: {
          line: 12,
          column: 63
        }
      },
      "9": {
        start: {
          line: 13,
          column: 32
        },
        end: {
          line: 13,
          column: 67
        }
      },
      "10": {
        start: {
          line: 15,
          column: 19
        },
        end: {
          line: 15,
          column: 23
        }
      },
      "11": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 22,
          column: 5
        }
      },
      "12": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 28
        }
      },
      "13": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 26,
          column: 5
        }
      },
      "14": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 77
        }
      },
      "15": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 29,
          column: 5
        }
      },
      "16": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 82
        }
      },
      "17": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 32,
          column: 5
        }
      },
      "18": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 84
        }
      },
      "19": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 41,
          column: 7
        }
      },
      "20": {
        start: {
          line: 42,
          column: 4
        },
        end: {
          line: 42,
          column: 24
        }
      },
      "21": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 78,
          column: 5
        }
      },
      "22": {
        start: {
          line: 60,
          column: 23
        },
        end: {
          line: 60,
          column: 40
        }
      },
      "23": {
        start: {
          line: 61,
          column: 27
        },
        end: {
          line: 67,
          column: 10
        }
      },
      "24": {
        start: {
          line: 68,
          column: 24
        },
        end: {
          line: 68,
          column: 155
        }
      },
      "25": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 71,
          column: 9
        }
      },
      "26": {
        start: {
          line: 70,
          column: 12
        },
        end: {
          line: 70,
          column: 70
        }
      },
      "27": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 72,
          column: 23
        }
      },
      "28": {
        start: {
          line: 76,
          column: 32
        },
        end: {
          line: 76,
          column: 64
        }
      },
      "29": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 77,
          column: 30
        }
      },
      "30": {
        start: {
          line: 86,
          column: 4
        },
        end: {
          line: 88,
          column: 5
        }
      },
      "31": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 87,
          column: 109
        }
      },
      "32": {
        start: {
          line: 90,
          column: 4
        },
        end: {
          line: 118,
          column: 5
        }
      },
      "33": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 117,
          column: 9
        }
      },
      "34": {
        start: {
          line: 93,
          column: 16
        },
        end: {
          line: 93,
          column: 99
        }
      },
      "35": {
        start: {
          line: 95,
          column: 16
        },
        end: {
          line: 95,
          column: 123
        }
      },
      "36": {
        start: {
          line: 97,
          column: 35
        },
        end: {
          line: 97,
          column: 110
        }
      },
      "37": {
        start: {
          line: 98,
          column: 37
        },
        end: {
          line: 100,
          column: 59
        }
      },
      "38": {
        start: {
          line: 101,
          column: 16
        },
        end: {
          line: 101,
          column: 85
        }
      },
      "39": {
        start: {
          line: 104,
          column: 16
        },
        end: {
          line: 106,
          column: 17
        }
      },
      "40": {
        start: {
          line: 105,
          column: 20
        },
        end: {
          line: 105,
          column: 121
        }
      },
      "41": {
        start: {
          line: 107,
          column: 16
        },
        end: {
          line: 107,
          column: 98
        }
      },
      "42": {
        start: {
          line: 109,
          column: 16
        },
        end: {
          line: 109,
          column: 119
        }
      },
      "43": {
        start: {
          line: 114,
          column: 16
        },
        end: {
          line: 114,
          column: 109
        }
      },
      "44": {
        start: {
          line: 116,
          column: 16
        },
        end: {
          line: 116,
          column: 110
        }
      },
      "45": {
        start: {
          line: 120,
          column: 4
        },
        end: {
          line: 122,
          column: 5
        }
      },
      "46": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 121,
          column: 66
        }
      },
      "47": {
        start: {
          line: 124,
          column: 4
        },
        end: {
          line: 124,
          column: 95
        }
      },
      "48": {
        start: {
          line: 130,
          column: 4
        },
        end: {
          line: 130,
          column: 24
        }
      },
      "49": {
        start: {
          line: 136,
          column: 4
        },
        end: {
          line: 136,
          column: 84
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "getOpenAIClient",
        decl: {
          start: {
            line: 19,
            column: 9
          },
          end: {
            line: 19,
            column: 24
          }
        },
        loc: {
          start: {
            line: 19,
            column: 27
          },
          end: {
            line: 43,
            column: 1
          }
        },
        line: 19
      },
      "2": {
        name: "generateContent",
        decl: {
          start: {
            line: 57,
            column: 15
          },
          end: {
            line: 57,
            column: 30
          }
        },
        loc: {
          start: {
            line: 57,
            column: 58
          },
          end: {
            line: 79,
            column: 1
          }
        },
        line: 57
      },
      "3": {
        name: "translateAzureOpenAIError",
        decl: {
          start: {
            line: 83,
            column: 9
          },
          end: {
            line: 83,
            column: 34
          }
        },
        loc: {
          start: {
            line: 83,
            column: 42
          },
          end: {
            line: 125,
            column: 1
          }
        },
        line: 83
      },
      "4": {
        name: "resetClient",
        decl: {
          start: {
            line: 129,
            column: 9
          },
          end: {
            line: 129,
            column: 20
          }
        },
        loc: {
          start: {
            line: 129,
            column: 23
          },
          end: {
            line: 131,
            column: 1
          }
        },
        line: 129
      },
      "5": {
        name: "isConfigured",
        decl: {
          start: {
            line: 135,
            column: 9
          },
          end: {
            line: 135,
            column: 21
          }
        },
        loc: {
          start: {
            line: 135,
            column: 24
          },
          end: {
            line: 137,
            column: 1
          }
        },
        line: 135
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 20
      },
      "4": {
        loc: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 26,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 26,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 24
      },
      "5": {
        loc: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 27
      },
      "6": {
        loc: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "7": {
        loc: {
          start: {
            line: 57,
            column: 39
          },
          end: {
            line: 57,
            column: 56
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 57,
            column: 53
          },
          end: {
            line: 57,
            column: 56
          }
        }],
        line: 57
      },
      "8": {
        loc: {
          start: {
            line: 68,
            column: 24
          },
          end: {
            line: 68,
            column: 155
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 68,
            column: 136
          },
          end: {
            line: 68,
            column: 142
          }
        }, {
          start: {
            line: 68,
            column: 145
          },
          end: {
            line: 68,
            column: 155
          }
        }],
        line: 68
      },
      "9": {
        loc: {
          start: {
            line: 68,
            column: 24
          },
          end: {
            line: 68,
            column: 133
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 68,
            column: 24
          },
          end: {
            line: 68,
            column: 116
          }
        }, {
          start: {
            line: 68,
            column: 120
          },
          end: {
            line: 68,
            column: 133
          }
        }],
        line: 68
      },
      "10": {
        loc: {
          start: {
            line: 68,
            column: 30
          },
          end: {
            line: 68,
            column: 106
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 68,
            column: 87
          },
          end: {
            line: 68,
            column: 93
          }
        }, {
          start: {
            line: 68,
            column: 96
          },
          end: {
            line: 68,
            column: 106
          }
        }],
        line: 68
      },
      "11": {
        loc: {
          start: {
            line: 68,
            column: 30
          },
          end: {
            line: 68,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 68,
            column: 30
          },
          end: {
            line: 68,
            column: 67
          }
        }, {
          start: {
            line: 68,
            column: 71
          },
          end: {
            line: 68,
            column: 84
          }
        }],
        line: 68
      },
      "12": {
        loc: {
          start: {
            line: 69,
            column: 8
          },
          end: {
            line: 71,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 69,
            column: 8
          },
          end: {
            line: 71,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 69
      },
      "13": {
        loc: {
          start: {
            line: 86,
            column: 4
          },
          end: {
            line: 88,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 86,
            column: 4
          },
          end: {
            line: 88,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 86
      },
      "14": {
        loc: {
          start: {
            line: 86,
            column: 8
          },
          end: {
            line: 86,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 86,
            column: 8
          },
          end: {
            line: 86,
            column: 34
          }
        }, {
          start: {
            line: 86,
            column: 38
          },
          end: {
            line: 86,
            column: 67
          }
        }],
        line: 86
      },
      "15": {
        loc: {
          start: {
            line: 90,
            column: 4
          },
          end: {
            line: 118,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 90,
            column: 4
          },
          end: {
            line: 118,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 90
      },
      "16": {
        loc: {
          start: {
            line: 91,
            column: 8
          },
          end: {
            line: 117,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 92,
            column: 12
          },
          end: {
            line: 93,
            column: 99
          }
        }, {
          start: {
            line: 94,
            column: 12
          },
          end: {
            line: 95,
            column: 123
          }
        }, {
          start: {
            line: 96,
            column: 12
          },
          end: {
            line: 101,
            column: 85
          }
        }, {
          start: {
            line: 102,
            column: 12
          },
          end: {
            line: 107,
            column: 98
          }
        }, {
          start: {
            line: 108,
            column: 12
          },
          end: {
            line: 109,
            column: 119
          }
        }, {
          start: {
            line: 110,
            column: 12
          },
          end: {
            line: 110,
            column: 21
          }
        }, {
          start: {
            line: 111,
            column: 12
          },
          end: {
            line: 111,
            column: 21
          }
        }, {
          start: {
            line: 112,
            column: 12
          },
          end: {
            line: 112,
            column: 21
          }
        }, {
          start: {
            line: 113,
            column: 12
          },
          end: {
            line: 114,
            column: 109
          }
        }, {
          start: {
            line: 115,
            column: 12
          },
          end: {
            line: 116,
            column: 110
          }
        }],
        line: 91
      },
      "17": {
        loc: {
          start: {
            line: 97,
            column: 35
          },
          end: {
            line: 97,
            column: 110
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 97,
            column: 84
          },
          end: {
            line: 97,
            column: 90
          }
        }, {
          start: {
            line: 97,
            column: 93
          },
          end: {
            line: 97,
            column: 110
          }
        }],
        line: 97
      },
      "18": {
        loc: {
          start: {
            line: 97,
            column: 35
          },
          end: {
            line: 97,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 97,
            column: 35
          },
          end: {
            line: 97,
            column: 64
          }
        }, {
          start: {
            line: 97,
            column: 68
          },
          end: {
            line: 97,
            column: 81
          }
        }],
        line: 97
      },
      "19": {
        loc: {
          start: {
            line: 98,
            column: 37
          },
          end: {
            line: 100,
            column: 59
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 99,
            column: 22
          },
          end: {
            line: 99,
            column: 66
          }
        }, {
          start: {
            line: 100,
            column: 22
          },
          end: {
            line: 100,
            column: 59
          }
        }],
        line: 98
      },
      "20": {
        loc: {
          start: {
            line: 104,
            column: 16
          },
          end: {
            line: 106,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 104,
            column: 16
          },
          end: {
            line: 106,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 104
      },
      "21": {
        loc: {
          start: {
            line: 104,
            column: 20
          },
          end: {
            line: 104,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 104,
            column: 20
          },
          end: {
            line: 104,
            column: 33
          }
        }, {
          start: {
            line: 104,
            column: 37
          },
          end: {
            line: 104,
            column: 77
          }
        }],
        line: 104
      },
      "22": {
        loc: {
          start: {
            line: 107,
            column: 49
          },
          end: {
            line: 107,
            column: 94
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 107,
            column: 49
          },
          end: {
            line: 107,
            column: 62
          }
        }, {
          start: {
            line: 107,
            column: 66
          },
          end: {
            line: 107,
            column: 94
          }
        }],
        line: 107
      },
      "23": {
        loc: {
          start: {
            line: 116,
            column: 74
          },
          end: {
            line: 116,
            column: 106
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 116,
            column: 74
          },
          end: {
            line: 116,
            column: 87
          }
        }, {
          start: {
            line: 116,
            column: 91
          },
          end: {
            line: 116,
            column: 106
          }
        }],
        line: 116
      },
      "24": {
        loc: {
          start: {
            line: 120,
            column: 4
          },
          end: {
            line: 122,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 120,
            column: 4
          },
          end: {
            line: 122,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 120
      },
      "25": {
        loc: {
          start: {
            line: 120,
            column: 8
          },
          end: {
            line: 120,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 120,
            column: 8
          },
          end: {
            line: 120,
            column: 21
          }
        }, {
          start: {
            line: 120,
            column: 25
          },
          end: {
            line: 120,
            column: 71
          }
        }],
        line: 120
      },
      "26": {
        loc: {
          start: {
            line: 124,
            column: 44
          },
          end: {
            line: 124,
            column: 91
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 124,
            column: 44
          },
          end: {
            line: 124,
            column: 57
          }
        }, {
          start: {
            line: 124,
            column: 61
          },
          end: {
            line: 124,
            column: 91
          }
        }],
        line: 124
      },
      "27": {
        loc: {
          start: {
            line: 136,
            column: 14
          },
          end: {
            line: 136,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 136,
            column: 14
          },
          end: {
            line: 136,
            column: 30
          }
        }, {
          start: {
            line: 136,
            column: 34
          },
          end: {
            line: 136,
            column: 55
          }
        }, {
          start: {
            line: 136,
            column: 59
          },
          end: {
            line: 136,
            column: 82
          }
        }],
        line: 136
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0, 0]
    },
    inputSourceMap: {
      file: "/Users/dikshantvashistha/PrepBettr/lib/services/azure-openai.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/dikshantvashistha/PrepBettr/lib/services/azure-openai.ts"],
      sourcesContent: ["import OpenAI from 'openai';\n\n// Environment variables for Azure OpenAI configuration\nconst AZURE_OPENAI_KEY = process.env.AZURE_OPENAI_KEY;\nconst AZURE_OPENAI_ENDPOINT = process.env.AZURE_OPENAI_ENDPOINT;\nconst AZURE_OPENAI_DEPLOYMENT = process.env.AZURE_OPENAI_DEPLOYMENT;\n\n// Cached OpenAI client instance for reuse\nlet openAIClient: OpenAI | null = null;\n\n/**\n * Initialize and cache the Azure OpenAI client\n */\nfunction getOpenAIClient(): OpenAI {\n  if (openAIClient) {\n    return openAIClient;\n  }\n\n  // Validate required environment variables\n  if (!AZURE_OPENAI_KEY) {\n    throw new Error('AZURE_OPENAI_KEY environment variable is required');\n  }\n  if (!AZURE_OPENAI_ENDPOINT) {\n    throw new Error('AZURE_OPENAI_ENDPOINT environment variable is required');\n  }\n  if (!AZURE_OPENAI_DEPLOYMENT) {\n    throw new Error('AZURE_OPENAI_DEPLOYMENT environment variable is required');\n  }\n\n  // Create and cache the OpenAI client configured for Azure\n  openAIClient = new OpenAI({\n    apiKey: AZURE_OPENAI_KEY,\n    baseURL: `${AZURE_OPENAI_ENDPOINT}/openai/deployments/${AZURE_OPENAI_DEPLOYMENT}`,\n    defaultQuery: { 'api-version': '2024-02-15-preview' }, // Using stable API version\n    defaultHeaders: {\n      'api-key': AZURE_OPENAI_KEY,\n    },\n  });\n\n  return openAIClient;\n}\n\n/**\n * Generate content using Azure OpenAI with centralized error handling\n * \n * @param prompt - The prompt to send to the AI model\n * @param temperature - Controls randomness (0.0 = deterministic, 1.0 = creative). Default: 0.7\n * @returns Promise resolving to the generated text content\n * \n * @throws Error with translated user-friendly messages for common issues:\n * - Authentication errors (401, 403)\n * - Rate limiting (429) with retry suggestions\n * - Service unavailable (500, 502, 503, 504)\n * - Content policy violations (400 with content_filter)\n */\nexport async function generateContent(prompt: string, temperature: number = 0.7): Promise<string> {\n  try {\n    const client = getOpenAIClient();\n    \n    const completion = await client.chat.completions.create({\n      model: AZURE_OPENAI_DEPLOYMENT!,\n      messages: [{ role: 'user', content: prompt }],\n      temperature,\n      max_tokens: 1000,\n      top_p: 0.9,\n    });\n\n    const content = completion.choices[0]?.message?.content;\n    if (!content) {\n      throw new Error('No content generated from Azure OpenAI');\n    }\n\n    return content;\n  } catch (error: any) {\n    // Centralized error translation for better user experience\n    const translatedError = translateAzureOpenAIError(error);\n    throw translatedError;\n  }\n}\n\n/**\n * Translate Azure OpenAI errors into user-friendly messages\n */\nfunction translateAzureOpenAIError(error: any): Error {\n  // Network or connection errors\n  if (error.code === 'ENOTFOUND' || error.code === 'ECONNREFUSED') {\n    return new Error('Unable to connect to Azure OpenAI service. Please check your network connection.');\n  }\n\n  // Azure OpenAI API errors\n  if (error.status) {\n    switch (error.status) {\n      case 401:\n        return new Error('Azure OpenAI authentication failed. Please check your API key.');\n      \n      case 403:\n        return new Error('Access forbidden. Your Azure OpenAI subscription may not have access to this resource.');\n      \n      case 429:\n        const retryAfter = error.headers?.['retry-after'];\n        const retryMessage = retryAfter \n          ? ` Please retry after ${retryAfter} seconds.`\n          : ' Please try again in a few moments.';\n        return new Error(`Azure OpenAI rate limit exceeded.${retryMessage}`);\n      \n      case 400:\n        // Check for content filtering\n        if (error.message && error.message.includes('content_filter')) {\n          return new Error('Content was filtered by Azure OpenAI content policy. Please modify your request.');\n        }\n        return new Error(`Bad request: ${error.message || 'Invalid request parameters'}`);\n      \n      case 404:\n        return new Error('Azure OpenAI deployment not found. Please check your deployment name and endpoint.');\n      \n      case 500:\n      case 502:\n      case 503:\n      case 504:\n        return new Error('Azure OpenAI service is temporarily unavailable. Please try again later.');\n      \n      default:\n        return new Error(`Azure OpenAI error (${error.status}): ${error.message || 'Unknown error'}`);\n    }\n  }\n\n  // Configuration errors\n  if (error.message && error.message.includes('environment variable')) {\n    return new Error(`Configuration error: ${error.message}`);\n  }\n\n  // Generic fallback\n  return new Error(`Azure OpenAI error: ${error.message || 'An unexpected error occurred'}`);\n}\n\n/**\n * Reset the cached client (useful for testing or credential updates)\n */\nexport function resetClient(): void {\n  openAIClient = null;\n}\n\n/**\n * Check if Azure OpenAI is properly configured\n */\nexport function isConfigured(): boolean {\n  return !!(AZURE_OPENAI_KEY && AZURE_OPENAI_ENDPOINT && AZURE_OPENAI_DEPLOYMENT);\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "bc647d12d2da2b648db66bf4170c3754cc7ec317"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1h3we8zce1 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1h3we8zce1();
var __importDefault =
/* istanbul ignore next */
(cov_1h3we8zce1().s[0]++,
/* istanbul ignore next */
(cov_1h3we8zce1().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1h3we8zce1().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_1h3we8zce1().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_1h3we8zce1().f[0]++;
  cov_1h3we8zce1().s[1]++;
  return /* istanbul ignore next */(cov_1h3we8zce1().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_1h3we8zce1().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_1h3we8zce1().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_1h3we8zce1().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_1h3we8zce1().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1h3we8zce1().s[3]++;
exports.generateContent = generateContent;
/* istanbul ignore next */
cov_1h3we8zce1().s[4]++;
exports.resetClient = resetClient;
/* istanbul ignore next */
cov_1h3we8zce1().s[5]++;
exports.isConfigured = isConfigured;
const openai_1 =
/* istanbul ignore next */
(cov_1h3we8zce1().s[6]++, __importDefault(require("openai")));
// Environment variables for Azure OpenAI configuration
const AZURE_OPENAI_KEY =
/* istanbul ignore next */
(cov_1h3we8zce1().s[7]++, process.env.AZURE_OPENAI_KEY);
const AZURE_OPENAI_ENDPOINT =
/* istanbul ignore next */
(cov_1h3we8zce1().s[8]++, process.env.AZURE_OPENAI_ENDPOINT);
const AZURE_OPENAI_DEPLOYMENT =
/* istanbul ignore next */
(cov_1h3we8zce1().s[9]++, process.env.AZURE_OPENAI_DEPLOYMENT);
// Cached OpenAI client instance for reuse
let openAIClient =
/* istanbul ignore next */
(cov_1h3we8zce1().s[10]++, null);
/**
 * Initialize and cache the Azure OpenAI client
 */
function getOpenAIClient() {
  /* istanbul ignore next */
  cov_1h3we8zce1().f[1]++;
  cov_1h3we8zce1().s[11]++;
  if (openAIClient) {
    /* istanbul ignore next */
    cov_1h3we8zce1().b[3][0]++;
    cov_1h3we8zce1().s[12]++;
    return openAIClient;
  } else
  /* istanbul ignore next */
  {
    cov_1h3we8zce1().b[3][1]++;
  }
  // Validate required environment variables
  cov_1h3we8zce1().s[13]++;
  if (!AZURE_OPENAI_KEY) {
    /* istanbul ignore next */
    cov_1h3we8zce1().b[4][0]++;
    cov_1h3we8zce1().s[14]++;
    throw new Error('AZURE_OPENAI_KEY environment variable is required');
  } else
  /* istanbul ignore next */
  {
    cov_1h3we8zce1().b[4][1]++;
  }
  cov_1h3we8zce1().s[15]++;
  if (!AZURE_OPENAI_ENDPOINT) {
    /* istanbul ignore next */
    cov_1h3we8zce1().b[5][0]++;
    cov_1h3we8zce1().s[16]++;
    throw new Error('AZURE_OPENAI_ENDPOINT environment variable is required');
  } else
  /* istanbul ignore next */
  {
    cov_1h3we8zce1().b[5][1]++;
  }
  cov_1h3we8zce1().s[17]++;
  if (!AZURE_OPENAI_DEPLOYMENT) {
    /* istanbul ignore next */
    cov_1h3we8zce1().b[6][0]++;
    cov_1h3we8zce1().s[18]++;
    throw new Error('AZURE_OPENAI_DEPLOYMENT environment variable is required');
  } else
  /* istanbul ignore next */
  {
    cov_1h3we8zce1().b[6][1]++;
  }
  // Create and cache the OpenAI client configured for Azure
  cov_1h3we8zce1().s[19]++;
  openAIClient = new openai_1.default({
    apiKey: AZURE_OPENAI_KEY,
    baseURL: `${AZURE_OPENAI_ENDPOINT}/openai/deployments/${AZURE_OPENAI_DEPLOYMENT}`,
    defaultQuery: {
      'api-version': '2024-02-15-preview'
    },
    // Using stable API version
    defaultHeaders: {
      'api-key': AZURE_OPENAI_KEY
    }
  });
  /* istanbul ignore next */
  cov_1h3we8zce1().s[20]++;
  return openAIClient;
}
/**
 * Generate content using Azure OpenAI with centralized error handling
 *
 * @param prompt - The prompt to send to the AI model
 * @param temperature - Controls randomness (0.0 = deterministic, 1.0 = creative). Default: 0.7
 * @returns Promise resolving to the generated text content
 *
 * @throws Error with translated user-friendly messages for common issues:
 * - Authentication errors (401, 403)
 * - Rate limiting (429) with retry suggestions
 * - Service unavailable (500, 502, 503, 504)
 * - Content policy violations (400 with content_filter)
 */
async function generateContent(prompt, temperature =
/* istanbul ignore next */
(cov_1h3we8zce1().b[7][0]++, 0.7)) {
  /* istanbul ignore next */
  cov_1h3we8zce1().f[2]++;
  var _a, _b;
  /* istanbul ignore next */
  cov_1h3we8zce1().s[21]++;
  try {
    const client =
    /* istanbul ignore next */
    (cov_1h3we8zce1().s[22]++, getOpenAIClient());
    const completion =
    /* istanbul ignore next */
    (cov_1h3we8zce1().s[23]++, await client.chat.completions.create({
      model: AZURE_OPENAI_DEPLOYMENT,
      messages: [{
        role: 'user',
        content: prompt
      }],
      temperature,
      max_tokens: 1000,
      top_p: 0.9
    }));
    const content =
    /* istanbul ignore next */
    (cov_1h3we8zce1().s[24]++,
    /* istanbul ignore next */
    (cov_1h3we8zce1().b[9][0]++, (_b =
    /* istanbul ignore next */
    (cov_1h3we8zce1().b[11][0]++, (_a = completion.choices[0]) === null) ||
    /* istanbul ignore next */
    (cov_1h3we8zce1().b[11][1]++, _a === void 0) ?
    /* istanbul ignore next */
    (cov_1h3we8zce1().b[10][0]++, void 0) :
    /* istanbul ignore next */
    (cov_1h3we8zce1().b[10][1]++, _a.message)) === null) ||
    /* istanbul ignore next */
    (cov_1h3we8zce1().b[9][1]++, _b === void 0) ?
    /* istanbul ignore next */
    (cov_1h3we8zce1().b[8][0]++, void 0) :
    /* istanbul ignore next */
    (cov_1h3we8zce1().b[8][1]++, _b.content));
    /* istanbul ignore next */
    cov_1h3we8zce1().s[25]++;
    if (!content) {
      /* istanbul ignore next */
      cov_1h3we8zce1().b[12][0]++;
      cov_1h3we8zce1().s[26]++;
      throw new Error('No content generated from Azure OpenAI');
    } else
    /* istanbul ignore next */
    {
      cov_1h3we8zce1().b[12][1]++;
    }
    cov_1h3we8zce1().s[27]++;
    return content;
  } catch (error) {
    // Centralized error translation for better user experience
    const translatedError =
    /* istanbul ignore next */
    (cov_1h3we8zce1().s[28]++, translateAzureOpenAIError(error));
    /* istanbul ignore next */
    cov_1h3we8zce1().s[29]++;
    throw translatedError;
  }
}
/**
 * Translate Azure OpenAI errors into user-friendly messages
 */
function translateAzureOpenAIError(error) {
  /* istanbul ignore next */
  cov_1h3we8zce1().f[3]++;
  var _a;
  // Network or connection errors
  /* istanbul ignore next */
  cov_1h3we8zce1().s[30]++;
  if (
  /* istanbul ignore next */
  (cov_1h3we8zce1().b[14][0]++, error.code === 'ENOTFOUND') ||
  /* istanbul ignore next */
  (cov_1h3we8zce1().b[14][1]++, error.code === 'ECONNREFUSED')) {
    /* istanbul ignore next */
    cov_1h3we8zce1().b[13][0]++;
    cov_1h3we8zce1().s[31]++;
    return new Error('Unable to connect to Azure OpenAI service. Please check your network connection.');
  } else
  /* istanbul ignore next */
  {
    cov_1h3we8zce1().b[13][1]++;
  }
  // Azure OpenAI API errors
  cov_1h3we8zce1().s[32]++;
  if (error.status) {
    /* istanbul ignore next */
    cov_1h3we8zce1().b[15][0]++;
    cov_1h3we8zce1().s[33]++;
    switch (error.status) {
      case 401:
        /* istanbul ignore next */
        cov_1h3we8zce1().b[16][0]++;
        cov_1h3we8zce1().s[34]++;
        return new Error('Azure OpenAI authentication failed. Please check your API key.');
      case 403:
        /* istanbul ignore next */
        cov_1h3we8zce1().b[16][1]++;
        cov_1h3we8zce1().s[35]++;
        return new Error('Access forbidden. Your Azure OpenAI subscription may not have access to this resource.');
      case 429:
        /* istanbul ignore next */
        cov_1h3we8zce1().b[16][2]++;
        const retryAfter =
        /* istanbul ignore next */
        (cov_1h3we8zce1().s[36]++,
        /* istanbul ignore next */
        (cov_1h3we8zce1().b[18][0]++, (_a = error.headers) === null) ||
        /* istanbul ignore next */
        (cov_1h3we8zce1().b[18][1]++, _a === void 0) ?
        /* istanbul ignore next */
        (cov_1h3we8zce1().b[17][0]++, void 0) :
        /* istanbul ignore next */
        (cov_1h3we8zce1().b[17][1]++, _a['retry-after']));
        const retryMessage =
        /* istanbul ignore next */
        (cov_1h3we8zce1().s[37]++, retryAfter ?
        /* istanbul ignore next */
        (cov_1h3we8zce1().b[19][0]++, ` Please retry after ${retryAfter} seconds.`) :
        /* istanbul ignore next */
        (cov_1h3we8zce1().b[19][1]++, ' Please try again in a few moments.'));
        /* istanbul ignore next */
        cov_1h3we8zce1().s[38]++;
        return new Error(`Azure OpenAI rate limit exceeded.${retryMessage}`);
      case 400:
        /* istanbul ignore next */
        cov_1h3we8zce1().b[16][3]++;
        cov_1h3we8zce1().s[39]++;
        // Check for content filtering
        if (
        /* istanbul ignore next */
        (cov_1h3we8zce1().b[21][0]++, error.message) &&
        /* istanbul ignore next */
        (cov_1h3we8zce1().b[21][1]++, error.message.includes('content_filter'))) {
          /* istanbul ignore next */
          cov_1h3we8zce1().b[20][0]++;
          cov_1h3we8zce1().s[40]++;
          return new Error('Content was filtered by Azure OpenAI content policy. Please modify your request.');
        } else
        /* istanbul ignore next */
        {
          cov_1h3we8zce1().b[20][1]++;
        }
        cov_1h3we8zce1().s[41]++;
        return new Error(`Bad request: ${
        /* istanbul ignore next */
        (cov_1h3we8zce1().b[22][0]++, error.message) ||
        /* istanbul ignore next */
        (cov_1h3we8zce1().b[22][1]++, 'Invalid request parameters')}`);
      case 404:
        /* istanbul ignore next */
        cov_1h3we8zce1().b[16][4]++;
        cov_1h3we8zce1().s[42]++;
        return new Error('Azure OpenAI deployment not found. Please check your deployment name and endpoint.');
      case 500:
        /* istanbul ignore next */
        cov_1h3we8zce1().b[16][5]++;
      case 502:
        /* istanbul ignore next */
        cov_1h3we8zce1().b[16][6]++;
      case 503:
        /* istanbul ignore next */
        cov_1h3we8zce1().b[16][7]++;
      case 504:
        /* istanbul ignore next */
        cov_1h3we8zce1().b[16][8]++;
        cov_1h3we8zce1().s[43]++;
        return new Error('Azure OpenAI service is temporarily unavailable. Please try again later.');
      default:
        /* istanbul ignore next */
        cov_1h3we8zce1().b[16][9]++;
        cov_1h3we8zce1().s[44]++;
        return new Error(`Azure OpenAI error (${error.status}): ${
        /* istanbul ignore next */
        (cov_1h3we8zce1().b[23][0]++, error.message) ||
        /* istanbul ignore next */
        (cov_1h3we8zce1().b[23][1]++, 'Unknown error')}`);
    }
  } else
  /* istanbul ignore next */
  {
    cov_1h3we8zce1().b[15][1]++;
  }
  // Configuration errors
  cov_1h3we8zce1().s[45]++;
  if (
  /* istanbul ignore next */
  (cov_1h3we8zce1().b[25][0]++, error.message) &&
  /* istanbul ignore next */
  (cov_1h3we8zce1().b[25][1]++, error.message.includes('environment variable'))) {
    /* istanbul ignore next */
    cov_1h3we8zce1().b[24][0]++;
    cov_1h3we8zce1().s[46]++;
    return new Error(`Configuration error: ${error.message}`);
  } else
  /* istanbul ignore next */
  {
    cov_1h3we8zce1().b[24][1]++;
  }
  // Generic fallback
  cov_1h3we8zce1().s[47]++;
  return new Error(`Azure OpenAI error: ${
  /* istanbul ignore next */
  (cov_1h3we8zce1().b[26][0]++, error.message) ||
  /* istanbul ignore next */
  (cov_1h3we8zce1().b[26][1]++, 'An unexpected error occurred')}`);
}
/**
 * Reset the cached client (useful for testing or credential updates)
 */
function resetClient() {
  /* istanbul ignore next */
  cov_1h3we8zce1().f[4]++;
  cov_1h3we8zce1().s[48]++;
  openAIClient = null;
}
/**
 * Check if Azure OpenAI is properly configured
 */
function isConfigured() {
  /* istanbul ignore next */
  cov_1h3we8zce1().f[5]++;
  cov_1h3we8zce1().s[49]++;
  return !!(
  /* istanbul ignore next */
  (cov_1h3we8zce1().b[27][0]++, AZURE_OPENAI_KEY) &&
  /* istanbul ignore next */
  (cov_1h3we8zce1().b[27][1]++, AZURE_OPENAI_ENDPOINT) &&
  /* istanbul ignore next */
  (cov_1h3we8zce1().b[27][2]++, AZURE_OPENAI_DEPLOYMENT));
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,