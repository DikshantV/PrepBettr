{"version":3,"names":["cov_o9f72v8j8","actualCoverage","s","calculateYearlyPrice","monthlyPrice","f","calculateMonthlyEquivalent","yearlyPrice","PREPBETTR_PRICING","INDIVIDUAL","monthly","amount","currency","interval","savings","displayPrice","paypalPlanId","b","process","env","PAYPAL_INDIVIDUAL_MONTHLY_PLAN_ID","yearly","monthlyEquivalent","monthsFree","displayMonthlyEquivalent","PAYPAL_INDIVIDUAL_YEARLY_PLAN_ID","ENTERPRISE","PAYPAL_ENTERPRISE_MONTHLY_PLAN_ID","PAYPAL_ENTERPRISE_YEARLY_PLAN_ID","PREPBETTR_PLANS","individual","id","name","description","category","icon","popular","recommended","features","limits","resumes","interviews","coverLetters","users","pricing","trial","enabled","duration","unit","enterprise","pricingUtils","formatPrice","options","Intl","NumberFormat","style","minimumFractionDigits","showCents","maximumFractionDigits","format","calculateYearlySavings","planType","toUpperCase","monthlyTotal","getFormattedYearlySavings","calculateSavingsPercentage","Math","round","getPlan","planId","getAllPlans","Object","values","getPopularPlans","filter","plan","getRecommendedPlans","comparePlans","planId1","planId2","plan1","plan2","length","difference","validatePricing","errors","entries","forEach","push","expectedYearly","abs","expectedMonthlyEquiv","isValid","plans","utils","NODE_ENV","validation","console","warn"],"sources":["pricing-config.js"],"sourcesContent":["// lib/pricing-config.js\n\n/**\n * PrepBettr Pricing Structure and Configuration\n * Centralized pricing logic with 17% yearly savings (2 months free)\n */\n\n// Calculate yearly pricing with 17% savings (2 months free)\nconst calculateYearlyPrice = (monthlyPrice) => {\n  return monthlyPrice * 10; // 12 months - 2 free months = 10 months\n};\n\nconst calculateMonthlyEquivalent = (yearlyPrice) => {\n  return yearlyPrice / 12;\n};\n\nexport const PREPBETTR_PRICING = {\n  INDIVIDUAL: {\n    monthly: {\n      amount: 49.00,\n      currency: 'USD',\n      interval: 'month',\n      savings: null,\n      displayPrice: '$49',\n      paypalPlanId: process.env.PAYPAL_INDIVIDUAL_MONTHLY_PLAN_ID || 'individual-monthly'\n    },\n    yearly: {\n      amount: calculateYearlyPrice(49), // $490\n      currency: 'USD', \n      interval: 'year',\n      monthlyEquivalent: calculateMonthlyEquivalent(calculateYearlyPrice(49)), // $40.83\n      savings: 17,\n      monthsFree: 2,\n      displayPrice: '$490',\n      displayMonthlyEquivalent: '$40.83',\n      paypalPlanId: process.env.PAYPAL_INDIVIDUAL_YEARLY_PLAN_ID || 'individual-yearly'\n    }\n  },\n  ENTERPRISE: {\n    monthly: {\n      amount: 199.00,\n      currency: 'USD',\n      interval: 'month',\n      savings: null,\n      displayPrice: '$199',\n      paypalPlanId: process.env.PAYPAL_ENTERPRISE_MONTHLY_PLAN_ID || 'enterprise-monthly'\n    },\n    yearly: {\n      amount: calculateYearlyPrice(199), // $1990\n      currency: 'USD',\n      interval: 'year', \n      monthlyEquivalent: calculateMonthlyEquivalent(calculateYearlyPrice(199)), // $165.83\n      savings: 17,\n      monthsFree: 2,\n      displayPrice: '$1990',\n      displayMonthlyEquivalent: '$165.83',\n      paypalPlanId: process.env.PAYPAL_ENTERPRISE_YEARLY_PLAN_ID || 'enterprise-yearly'\n    }\n  }\n};\n\n// Plan definitions with features and limits\nexport const PREPBETTR_PLANS = {\n  individual: {\n    id: 'individual',\n    name: 'Individual',\n    description: 'Perfect for job seekers',\n    category: 'personal',\n    icon: 'zap',\n    popular: false,\n    recommended: false,\n    features: [\n      'Resume processing and optimization',\n      'AI-powered interview preparation', \n      'Cover letter generation',\n      'Basic career insights',\n      'Email support',\n      'Up to 10 resumes per month',\n      'Up to 20 interview sessions per month',\n      'Up to 5 cover letters per month'\n    ],\n    limits: {\n      resumes: 10,\n      interviews: 20,\n      coverLetters: 5,\n      users: 1\n    },\n    pricing: PREPBETTR_PRICING.INDIVIDUAL,\n    trial: {\n      enabled: true,\n      duration: 7,\n      unit: 'days'\n    }\n  },\n  enterprise: {\n    id: 'enterprise',\n    name: 'Enterprise',\n    description: 'For teams and organizations',\n    category: 'business',\n    icon: 'building2',\n    popular: true,\n    recommended: true,\n    features: [\n      'Everything in Individual plan',\n      'Unlimited resume processing',\n      'Unlimited interview sessions',\n      'Unlimited cover letters',\n      'Advanced career analytics',\n      'Priority support',\n      'Custom branding options',\n      'Team collaboration features',\n      'API access',\n      'Dedicated account manager'\n    ],\n    limits: {\n      resumes: -1, // -1 means unlimited\n      interviews: -1,\n      coverLetters: -1,\n      users: -1\n    },\n    pricing: PREPBETTR_PRICING.ENTERPRISE,\n    trial: {\n      enabled: true,\n      duration: 7,\n      unit: 'days'\n    }\n  }\n};\n\n// Utility functions for pricing calculations\nexport const pricingUtils = {\n  /**\n   * Format price for display\n   */\n  formatPrice(amount, currency = 'USD', options = {}) {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency,\n      minimumFractionDigits: options.showCents ? 2 : 0,\n      maximumFractionDigits: options.showCents ? 2 : 2,\n      ...options\n    }).format(amount);\n  },\n\n  /**\n   * Calculate total yearly savings\n   */\n  calculateYearlySavings(planType) {\n    const pricing = PREPBETTR_PRICING[planType.toUpperCase()];\n    if (!pricing) return 0;\n    \n    const monthlyTotal = pricing.monthly.amount * 12;\n    const yearlyPrice = pricing.yearly.amount;\n    return monthlyTotal - yearlyPrice;\n  },\n\n  /**\n   * Get formatted yearly savings\n   */\n  getFormattedYearlySavings(planType) {\n    const savings = this.calculateYearlySavings(planType);\n    return savings > 0 ? this.formatPrice(savings) : null;\n  },\n\n  /**\n   * Calculate savings percentage\n   */\n  calculateSavingsPercentage(planType) {\n    const pricing = PREPBETTR_PRICING[planType.toUpperCase()];\n    if (!pricing) return 0;\n    \n    const monthlyTotal = pricing.monthly.amount * 12;\n    const yearlyPrice = pricing.yearly.amount;\n    return Math.round(((monthlyTotal - yearlyPrice) / monthlyTotal) * 100);\n  },\n\n  /**\n   * Get plan by ID\n   */\n  getPlan(planId) {\n    return PREPBETTR_PLANS[planId] || null;\n  },\n\n  /**\n   * Get all plans\n   */\n  getAllPlans() {\n    return Object.values(PREPBETTR_PLANS);\n  },\n\n  /**\n   * Get popular plans\n   */\n  getPopularPlans() {\n    return Object.values(PREPBETTR_PLANS).filter(plan => plan.popular);\n  },\n\n  /**\n   * Get recommended plans\n   */\n  getRecommendedPlans() {\n    return Object.values(PREPBETTR_PLANS).filter(plan => plan.recommended);\n  },\n\n  /**\n   * Compare two plans\n   */\n  comparePlans(planId1, planId2) {\n    const plan1 = PREPBETTR_PLANS[planId1];\n    const plan2 = PREPBETTR_PLANS[planId2];\n    \n    if (!plan1 || !plan2) return null;\n    \n    return {\n      plan1: {\n        name: plan1.name,\n        monthlyPrice: plan1.pricing.monthly.amount,\n        yearlyPrice: plan1.pricing.yearly.amount,\n        features: plan1.features.length\n      },\n      plan2: {\n        name: plan2.name,\n        monthlyPrice: plan2.pricing.monthly.amount,\n        yearlyPrice: plan2.pricing.yearly.amount,\n        features: plan2.features.length\n      },\n      difference: {\n        monthly: plan2.pricing.monthly.amount - plan1.pricing.monthly.amount,\n        yearly: plan2.pricing.yearly.amount - plan1.pricing.yearly.amount,\n        features: plan2.features.length - plan1.features.length\n      }\n    };\n  },\n\n  /**\n   * Validate pricing configuration\n   */\n  validatePricing() {\n    const errors = [];\n    \n    Object.entries(PREPBETTR_PRICING).forEach(([planType, pricing]) => {\n      // Validate monthly pricing\n      if (!pricing.monthly?.amount || pricing.monthly.amount <= 0) {\n        errors.push(`Invalid monthly amount for ${planType}`);\n      }\n      \n      // Validate yearly pricing\n      if (!pricing.yearly?.amount || pricing.yearly.amount <= 0) {\n        errors.push(`Invalid yearly amount for ${planType}`);\n      }\n      \n      // Validate savings calculation\n      const expectedYearly = pricing.monthly.amount * 10; // 2 months free\n      if (Math.abs(pricing.yearly.amount - expectedYearly) > 0.01) {\n        errors.push(`Yearly pricing for ${planType} doesn't match expected savings`);\n      }\n      \n      // Validate monthly equivalent\n      const expectedMonthlyEquiv = pricing.yearly.amount / 12;\n      if (Math.abs(pricing.yearly.monthlyEquivalent - expectedMonthlyEquiv) > 0.01) {\n        errors.push(`Monthly equivalent for ${planType} doesn't match calculation`);\n      }\n    });\n    \n    return {\n      isValid: errors.length === 0,\n      errors\n    };\n  }\n};\n\n// Export default configuration\nexport default {\n  pricing: PREPBETTR_PRICING,\n  plans: PREPBETTR_PLANS,\n  utils: pricingUtils\n};\n\n// Validation check on import\nif (process.env.NODE_ENV !== 'production') {\n  const validation = pricingUtils.validatePricing();\n  if (!validation.isValid) {\n    console.warn('Pricing configuration validation failed:', validation.errors);\n  }\n}"],"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","ignoreList":[]}