{"version":3,"names":["cov_1ibl20y9gd","actualCoverage","s","exports","POST","server_1","require","headers_1","authMiddleware_1","firebase_user_service_1","SESSION_COOKIE_NAME","SESSION_DURATION_S","request","f","timestamp","Date","toISOString","console","log","b","_a","headers","get","substring","email","password","idToken","bypass","json","hasEmail","hasPassword","hasIdToken","isBypass","idTokenPrefix","authResult","sessionToken","parts","split","length","payload","JSON","parse","atob","replace","success","user","uid","name","email_verified","Error","error","NextResponse","status","startsCorrectly","startsWith","preview","verifyFirebaseToken","hasUser","_b","verifyError","message","emailVerified","signInResult","firebaseUserService","signInWithEmailAndPassword","displayName","token","userProfile","ensureUserProfile","cookieStore","cookies","set","httpOnly","secure","process","env","NODE_ENV","maxAge","path","sameSite","plan","profilePictureUrl","createdAt","updatedAt","profileError"],"sources":["/Users/dikshantvashistha/PrepBettr/app/api/auth/signin/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { cookies } from 'next/headers';\nimport { verifyFirebaseToken } from '@/lib/middleware/authMiddleware';\nimport { firebaseUserService } from '@/lib/services/firebase-user-service';\n\nconst SESSION_COOKIE_NAME = 'session';\nconst SESSION_DURATION_S = 7 * 24 * 60 * 60; // 7 days\n\nexport async function POST(request: NextRequest) {\n  const timestamp = new Date().toISOString();\n  console.log(`üîë [${timestamp}] AUTH SIGNIN POST called - User-Agent: ${request.headers.get('user-agent')?.substring(0, 50)}`);\n  try {\n    const { email, password, idToken, bypass } = await request.json();\n    \n    console.log(`üîë [${timestamp}] Signin request details:`, {\n      hasEmail: !!email,\n      hasPassword: !!password,\n      hasIdToken: !!idToken,\n      isBypass: !!bypass,\n      idTokenPrefix: idToken ? idToken.substring(0, 50) + '...' : 'none'\n    });\n\n    let authResult;\n    let sessionToken = idToken;\n\n    if (idToken && bypass) {\n      // Handle bypass/development token flow\n      console.log(`üîê [${timestamp}] Processing bypass token for development authentication`);\n      \n      try {\n        // For bypass tokens, we can decode them directly since they're mock tokens\n        const parts = idToken.split('.');\n        if (parts.length >= 3) {\n          const payload = JSON.parse(atob(parts[1].replace(/-/g, '+').replace(/_/g, '/')));\n          \n          authResult = {\n            success: true,\n            user: {\n              uid: payload.uid,\n              email: payload.email,\n              name: payload.name,\n              email_verified: payload.email_verified || true\n            }\n          };\n          \n          sessionToken = idToken; // Use the bypass token as session token\n          console.log(`‚úÖ [${timestamp}] Bypass token processed for uid: ${authResult.user.uid}`);\n        } else {\n          throw new Error('Invalid bypass token format');\n        }\n      } catch (error) {\n        console.error(`‚ùå [${timestamp}] Bypass token processing failed:`, error);\n        return NextResponse.json(\n          { error: 'Invalid bypass token' },\n          { status: 401 }\n        );\n      }\n      \n    } else if (idToken) {\n      // Handle Firebase ID token flow (for Google Sign-in)\n      console.log(`üîê [${timestamp}] Verifying Firebase ID token for Google Sign-in`);\n      console.log(`üîê [${timestamp}] ID Token format check:`, {\n        length: idToken.length,\n        parts: idToken.split('.').length,\n        startsCorrectly: idToken.startsWith('eyJ'),\n        preview: idToken.substring(0, 100) + '...'\n      });\n      \n      try {\n        authResult = await verifyFirebaseToken(idToken);\n        console.log(`üîê [${timestamp}] Firebase token verification result:`, {\n          success: authResult.success,\n          hasUser: !!authResult.user,\n          uid: authResult.user?.uid,\n          error: authResult.error\n        });\n      } catch (verifyError) {\n        console.error(`üîê [${timestamp}] Firebase token verification threw error:`, verifyError);\n        authResult = {\n          success: false,\n          user: null,\n          error: verifyError instanceof Error ? verifyError.message : 'Token verification failed'\n        };\n      }\n      \n      if (!authResult.success || !authResult.user) {\n        console.error(`‚ùå [${timestamp}] Firebase ID token verification failed:`, {\n          error: authResult.error,\n          success: authResult.success,\n          hasUser: !!authResult.user\n        });\n        return NextResponse.json(\n          { error: `Invalid ID token: ${authResult.error}` },\n          { status: 401 }\n        );\n      }\n      \n      console.log(`‚úÖ [${timestamp}] Firebase ID token verified for uid: ${authResult.user.uid}`);\n      console.log(`‚úÖ [${timestamp}] Token claims:`, {\n        email: authResult.user.email,\n        name: authResult.user.name,\n        emailVerified: authResult.user.email_verified\n      });\n      \n    } else if (email && password) {\n      // Handle email/password flow with real Firebase\n      console.log(`üîê Attempting email/password sign-in for: ${email}`);\n      try {\n        const signInResult = await firebaseUserService.signInWithEmailAndPassword(email, password);\n        \n        authResult = {\n          success: true,\n          user: {\n            uid: signInResult.user.uid,\n            email: signInResult.user.email,\n            name: signInResult.user.displayName,\n            email_verified: signInResult.user.emailVerified\n          }\n        };\n\n        // Use the custom token from Firebase\n        sessionToken = signInResult.token;\n        console.log(`‚úÖ Email/password sign-in successful for uid: ${authResult.user.uid}`);\n      } catch (error) {\n        console.error('‚ùå Firebase email/password sign-in failed:', error);\n        return NextResponse.json(\n          { error: 'Invalid email or password' },\n          { status: 401 }\n        );\n      }\n    } else {\n      return NextResponse.json(\n        { error: 'Email and password or ID token is required' },\n        { status: 400 }\n      );\n    }\n\n    // Ensure user is properly authenticated\n    if (!authResult.user || !authResult.user.uid) {\n      console.error('‚ùå Authentication failed - no user data');\n      return NextResponse.json(\n        { error: 'Authentication failed' },\n        { status: 401 }\n      );\n    }\n    \n    try {\n      // Ensure user profile exists in Firestore\n      console.log(`üîç Ensuring user profile exists for uid: ${authResult.user.uid}`);\n      const userProfile = await firebaseUserService.ensureUserProfile(authResult.user.uid, {\n        email: authResult.user.email!,\n        displayName: authResult.user.name,\n        emailVerified: authResult.user.email_verified\n      });\n      \n      console.log(`‚úÖ User profile confirmed for uid: ${authResult.user.uid}`);\n      \n      // Set session cookie with the actual token\n      const cookieStore = await cookies();\n      cookieStore.set(SESSION_COOKIE_NAME, sessionToken, {\n        httpOnly: true,\n        secure: process.env.NODE_ENV === 'production',\n        maxAge: SESSION_DURATION_S,\n        path: '/',\n        sameSite: 'lax',\n      });\n      \n      console.log(`üç™ Session cookie set for uid: ${authResult.user.uid}`);\n\n      // Return user data with auth token for localStorage\n      return NextResponse.json({\n        success: true,\n        token: sessionToken, // Include token for frontend storage\n        user: {\n          uid: userProfile.uid,\n          email: userProfile.email,\n          name: userProfile.displayName,\n          email_verified: userProfile.emailVerified,\n          plan: userProfile.plan,\n          profilePictureUrl: userProfile.profilePictureUrl,\n          createdAt: userProfile.createdAt,\n          updatedAt: userProfile.updatedAt\n        }\n      });\n      \n    } catch (profileError) {\n      console.error('‚ùå Failed to handle user profile:', profileError);\n      return NextResponse.json(\n        { error: 'Failed to create or retrieve user profile' },\n        { status: 500 }\n      );\n    }\n\n  } catch (error) {\n    console.error('‚ùå Signin error:', error);\n    return NextResponse.json(\n      { error: 'Internal server error' },\n      { status: 500 }\n    );\n  }\n}\n"],"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","ignoreList":[]}