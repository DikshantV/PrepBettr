73de636d02ff8da721a9cad35eda2269
"use strict";

/* istanbul ignore next */
function cov_9oh7uszaz() {
  var path = "/Users/dikshantvashistha/PrepBettr/lib/services/azure-application-insights-service.ts";
  var hash = "d3b84ec9542f74534069ee329c9c9d839f143546";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dikshantvashistha/PrepBettr/lib/services/azure-application-insights-service.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 12,
          column: 3
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "2": {
        start: {
          line: 3,
          column: 26
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "3": {
        start: {
          line: 4,
          column: 15
        },
        end: {
          line: 4,
          column: 52
        }
      },
      "4": {
        start: {
          line: 5,
          column: 4
        },
        end: {
          line: 7,
          column: 5
        }
      },
      "5": {
        start: {
          line: 6,
          column: 6
        },
        end: {
          line: 6,
          column: 68
        }
      },
      "6": {
        start: {
          line: 6,
          column: 51
        },
        end: {
          line: 6,
          column: 63
        }
      },
      "7": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 8,
          column: 39
        }
      },
      "8": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "9": {
        start: {
          line: 10,
          column: 26
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "10": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 11,
          column: 17
        }
      },
      "11": {
        start: {
          line: 13,
          column: 25
        },
        end: {
          line: 17,
          column: 2
        }
      },
      "12": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 72
        }
      },
      "13": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 21
        }
      },
      "14": {
        start: {
          line: 18,
          column: 19
        },
        end: {
          line: 34,
          column: 4
        }
      },
      "15": {
        start: {
          line: 19,
          column: 18
        },
        end: {
          line: 26,
          column: 5
        }
      },
      "16": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 24,
          column: 10
        }
      },
      "17": {
        start: {
          line: 21,
          column: 21
        },
        end: {
          line: 21,
          column: 23
        }
      },
      "18": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "19": {
        start: {
          line: 22,
          column: 29
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "20": {
        start: {
          line: 22,
          column: 77
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "21": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 23,
          column: 22
        }
      },
      "22": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 26
        }
      },
      "23": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 33,
          column: 6
        }
      },
      "24": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 46
        }
      },
      "25": {
        start: {
          line: 28,
          column: 35
        },
        end: {
          line: 28,
          column: 46
        }
      },
      "26": {
        start: {
          line: 29,
          column: 21
        },
        end: {
          line: 29,
          column: 23
        }
      },
      "27": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "28": {
        start: {
          line: 30,
          column: 25
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "29": {
        start: {
          line: 30,
          column: 38
        },
        end: {
          line: 30,
          column: 50
        }
      },
      "30": {
        start: {
          line: 30,
          column: 56
        },
        end: {
          line: 30,
          column: 57
        }
      },
      "31": {
        start: {
          line: 30,
          column: 78
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "32": {
        start: {
          line: 30,
          column: 102
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "33": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 40
        }
      },
      "34": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 22
        }
      },
      "35": {
        start: {
          line: 35,
          column: 0
        },
        end: {
          line: 35,
          column: 62
        }
      },
      "36": {
        start: {
          line: 36,
          column: 0
        },
        end: {
          line: 36,
          column: 42
        }
      },
      "37": {
        start: {
          line: 37,
          column: 20
        },
        end: {
          line: 37,
          column: 64
        }
      },
      "38": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 36
        }
      },
      "39": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 41,
          column: 33
        }
      },
      "40": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 99
        }
      },
      "41": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 95
        }
      },
      "42": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 47,
          column: 19
        }
      },
      "43": {
        start: {
          line: 47,
          column: 12
        },
        end: {
          line: 47,
          column: 19
        }
      },
      "44": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 77,
          column: 9
        }
      },
      "45": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 52,
          column: 13
        }
      },
      "46": {
        start: {
          line: 50,
          column: 16
        },
        end: {
          line: 50,
          column: 129
        }
      },
      "47": {
        start: {
          line: 51,
          column: 16
        },
        end: {
          line: 51,
          column: 23
        }
      },
      "48": {
        start: {
          line: 54,
          column: 12
        },
        end: {
          line: 59,
          column: 13
        }
      },
      "49": {
        start: {
          line: 55,
          column: 16
        },
        end: {
          line: 55,
          column: 57
        }
      },
      "50": {
        start: {
          line: 58,
          column: 16
        },
        end: {
          line: 58,
          column: 59
        }
      },
      "51": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 61,
          column: 112
        }
      },
      "52": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 67,
          column: 14
        }
      },
      "53": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 69,
          column: 32
        }
      },
      "54": {
        start: {
          line: 70,
          column: 12
        },
        end: {
          line: 70,
          column: 61
        }
      },
      "55": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 71,
          column: 36
        }
      },
      "56": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 72,
          column: 68
        }
      },
      "57": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 75,
          column: 87
        }
      },
      "58": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 76,
          column: 24
        }
      },
      "59": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 83,
          column: 32
        }
      },
      "60": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 87,
          column: 9
        }
      },
      "61": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 85,
          column: 69
        }
      },
      "62": {
        start: {
          line: 86,
          column: 12
        },
        end: {
          line: 86,
          column: 19
        }
      },
      "63": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 98,
          column: 9
        }
      },
      "64": {
        start: {
          line: 89,
          column: 12
        },
        end: {
          line: 93,
          column: 15
        }
      },
      "65": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 94,
          column: 59
        }
      },
      "66": {
        start: {
          line: 97,
          column: 12
        },
        end: {
          line: 97,
          column: 59
        }
      },
      "67": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 104,
          column: 32
        }
      },
      "68": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 108,
          column: 9
        }
      },
      "69": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 106,
          column: 69
        }
      },
      "70": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 107,
          column: 19
        }
      },
      "71": {
        start: {
          line: 109,
          column: 8
        },
        end: {
          line: 122,
          column: 9
        }
      },
      "72": {
        start: {
          line: 110,
          column: 12
        },
        end: {
          line: 117,
          column: 15
        }
      },
      "73": {
        start: {
          line: 118,
          column: 12
        },
        end: {
          line: 118,
          column: 66
        }
      },
      "74": {
        start: {
          line: 121,
          column: 12
        },
        end: {
          line: 121,
          column: 63
        }
      },
      "75": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 131,
          column: 11
        }
      },
      "76": {
        start: {
          line: 137,
          column: 8
        },
        end: {
          line: 143,
          column: 11
        }
      },
      "77": {
        start: {
          line: 149,
          column: 8
        },
        end: {
          line: 160,
          column: 11
        }
      },
      "78": {
        start: {
          line: 166,
          column: 8
        },
        end: {
          line: 177,
          column: 11
        }
      },
      "79": {
        start: {
          line: 183,
          column: 8
        },
        end: {
          line: 190,
          column: 11
        }
      },
      "80": {
        start: {
          line: 196,
          column: 8
        },
        end: {
          line: 203,
          column: 11
        }
      },
      "81": {
        start: {
          line: 209,
          column: 8
        },
        end: {
          line: 217,
          column: 11
        }
      },
      "82": {
        start: {
          line: 223,
          column: 8
        },
        end: {
          line: 223,
          column: 32
        }
      },
      "83": {
        start: {
          line: 224,
          column: 8
        },
        end: {
          line: 227,
          column: 9
        }
      },
      "84": {
        start: {
          line: 225,
          column: 12
        },
        end: {
          line: 225,
          column: 69
        }
      },
      "85": {
        start: {
          line: 226,
          column: 12
        },
        end: {
          line: 226,
          column: 19
        }
      },
      "86": {
        start: {
          line: 228,
          column: 8
        },
        end: {
          line: 237,
          column: 9
        }
      },
      "87": {
        start: {
          line: 229,
          column: 12
        },
        end: {
          line: 232,
          column: 15
        }
      },
      "88": {
        start: {
          line: 233,
          column: 12
        },
        end: {
          line: 233,
          column: 62
        }
      },
      "89": {
        start: {
          line: 236,
          column: 12
        },
        end: {
          line: 236,
          column: 67
        }
      },
      "90": {
        start: {
          line: 243,
          column: 8
        },
        end: {
          line: 243,
          column: 32
        }
      },
      "91": {
        start: {
          line: 244,
          column: 8
        },
        end: {
          line: 247,
          column: 9
        }
      },
      "92": {
        start: {
          line: 245,
          column: 12
        },
        end: {
          line: 245,
          column: 69
        }
      },
      "93": {
        start: {
          line: 246,
          column: 12
        },
        end: {
          line: 246,
          column: 19
        }
      },
      "94": {
        start: {
          line: 248,
          column: 8
        },
        end: {
          line: 260,
          column: 9
        }
      },
      "95": {
        start: {
          line: 249,
          column: 12
        },
        end: {
          line: 255,
          column: 15
        }
      },
      "96": {
        start: {
          line: 256,
          column: 12
        },
        end: {
          line: 256,
          column: 79
        }
      },
      "97": {
        start: {
          line: 259,
          column: 12
        },
        end: {
          line: 259,
          column: 60
        }
      },
      "98": {
        start: {
          line: 266,
          column: 8
        },
        end: {
          line: 266,
          column: 32
        }
      },
      "99": {
        start: {
          line: 267,
          column: 8
        },
        end: {
          line: 270,
          column: 9
        }
      },
      "100": {
        start: {
          line: 268,
          column: 12
        },
        end: {
          line: 268,
          column: 69
        }
      },
      "101": {
        start: {
          line: 269,
          column: 12
        },
        end: {
          line: 269,
          column: 19
        }
      },
      "102": {
        start: {
          line: 271,
          column: 8
        },
        end: {
          line: 283,
          column: 9
        }
      },
      "103": {
        start: {
          line: 272,
          column: 12
        },
        end: {
          line: 278,
          column: 15
        }
      },
      "104": {
        start: {
          line: 279,
          column: 12
        },
        end: {
          line: 279,
          column: 75
        }
      },
      "105": {
        start: {
          line: 282,
          column: 12
        },
        end: {
          line: 282,
          column: 65
        }
      },
      "106": {
        start: {
          line: 289,
          column: 8
        },
        end: {
          line: 289,
          column: 32
        }
      },
      "107": {
        start: {
          line: 290,
          column: 8
        },
        end: {
          line: 293,
          column: 9
        }
      },
      "108": {
        start: {
          line: 291,
          column: 12
        },
        end: {
          line: 291,
          column: 69
        }
      },
      "109": {
        start: {
          line: 292,
          column: 12
        },
        end: {
          line: 292,
          column: 19
        }
      },
      "110": {
        start: {
          line: 294,
          column: 8
        },
        end: {
          line: 307,
          column: 9
        }
      },
      "111": {
        start: {
          line: 295,
          column: 12
        },
        end: {
          line: 302,
          column: 15
        }
      },
      "112": {
        start: {
          line: 303,
          column: 12
        },
        end: {
          line: 303,
          column: 74
        }
      },
      "113": {
        start: {
          line: 306,
          column: 12
        },
        end: {
          line: 306,
          column: 64
        }
      },
      "114": {
        start: {
          line: 313,
          column: 8
        },
        end: {
          line: 313,
          column: 32
        }
      },
      "115": {
        start: {
          line: 314,
          column: 8
        },
        end: {
          line: 317,
          column: 9
        }
      },
      "116": {
        start: {
          line: 315,
          column: 12
        },
        end: {
          line: 315,
          column: 69
        }
      },
      "117": {
        start: {
          line: 316,
          column: 12
        },
        end: {
          line: 316,
          column: 19
        }
      },
      "118": {
        start: {
          line: 318,
          column: 8
        },
        end: {
          line: 327,
          column: 9
        }
      },
      "119": {
        start: {
          line: 320,
          column: 12
        },
        end: {
          line: 322,
          column: 13
        }
      },
      "120": {
        start: {
          line: 321,
          column: 16
        },
        end: {
          line: 321,
          column: 126
        }
      },
      "121": {
        start: {
          line: 323,
          column: 12
        },
        end: {
          line: 323,
          column: 58
        }
      },
      "122": {
        start: {
          line: 326,
          column: 12
        },
        end: {
          line: 326,
          column: 64
        }
      },
      "123": {
        start: {
          line: 333,
          column: 8
        },
        end: {
          line: 333,
          column: 32
        }
      },
      "124": {
        start: {
          line: 334,
          column: 8
        },
        end: {
          line: 337,
          column: 9
        }
      },
      "125": {
        start: {
          line: 335,
          column: 12
        },
        end: {
          line: 335,
          column: 69
        }
      },
      "126": {
        start: {
          line: 336,
          column: 12
        },
        end: {
          line: 336,
          column: 19
        }
      },
      "127": {
        start: {
          line: 338,
          column: 8
        },
        end: {
          line: 348,
          column: 9
        }
      },
      "128": {
        start: {
          line: 340,
          column: 12
        },
        end: {
          line: 343,
          column: 13
        }
      },
      "129": {
        start: {
          line: 341,
          column: 16
        },
        end: {
          line: 341,
          column: 68
        }
      },
      "130": {
        start: {
          line: 342,
          column: 16
        },
        end: {
          line: 342,
          column: 71
        }
      },
      "131": {
        start: {
          line: 344,
          column: 12
        },
        end: {
          line: 344,
          column: 51
        }
      },
      "132": {
        start: {
          line: 347,
          column: 12
        },
        end: {
          line: 347,
          column: 66
        }
      },
      "133": {
        start: {
          line: 354,
          column: 8
        },
        end: {
          line: 354,
          column: 32
        }
      },
      "134": {
        start: {
          line: 355,
          column: 8
        },
        end: {
          line: 357,
          column: 9
        }
      },
      "135": {
        start: {
          line: 356,
          column: 12
        },
        end: {
          line: 356,
          column: 19
        }
      },
      "136": {
        start: {
          line: 358,
          column: 8
        },
        end: {
          line: 364,
          column: 9
        }
      },
      "137": {
        start: {
          line: 359,
          column: 12
        },
        end: {
          line: 359,
          column: 41
        }
      },
      "138": {
        start: {
          line: 360,
          column: 12
        },
        end: {
          line: 360,
          column: 53
        }
      },
      "139": {
        start: {
          line: 363,
          column: 12
        },
        end: {
          line: 363,
          column: 63
        }
      },
      "140": {
        start: {
          line: 370,
          column: 8
        },
        end: {
          line: 376,
          column: 11
        }
      },
      "141": {
        start: {
          line: 382,
          column: 8
        },
        end: {
          line: 390,
          column: 11
        }
      },
      "142": {
        start: {
          line: 396,
          column: 8
        },
        end: {
          line: 400,
          column: 11
        }
      },
      "143": {
        start: {
          line: 406,
          column: 8
        },
        end: {
          line: 423,
          column: 9
        }
      },
      "144": {
        start: {
          line: 407,
          column: 12
        },
        end: {
          line: 407,
          column: 36
        }
      },
      "145": {
        start: {
          line: 408,
          column: 12
        },
        end: {
          line: 410,
          column: 13
        }
      },
      "146": {
        start: {
          line: 409,
          column: 16
        },
        end: {
          line: 409,
          column: 70
        }
      },
      "147": {
        start: {
          line: 412,
          column: 12
        },
        end: {
          line: 417,
          column: 15
        }
      },
      "148": {
        start: {
          line: 418,
          column: 12
        },
        end: {
          line: 418,
          column: 64
        }
      },
      "149": {
        start: {
          line: 421,
          column: 12
        },
        end: {
          line: 421,
          column: 84
        }
      },
      "150": {
        start: {
          line: 422,
          column: 12
        },
        end: {
          line: 422,
          column: 66
        }
      },
      "151": {
        start: {
          line: 427,
          column: 0
        },
        end: {
          line: 427,
          column: 73
        }
      },
      "152": {
        start: {
          line: 428,
          column: 0
        },
        end: {
          line: 428,
          column: 51
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 2,
            column: 75
          }
        },
        loc: {
          start: {
            line: 2,
            column: 96
          },
          end: {
            line: 9,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 6,
            column: 38
          },
          end: {
            line: 6,
            column: 39
          }
        },
        loc: {
          start: {
            line: 6,
            column: 49
          },
          end: {
            line: 6,
            column: 65
          }
        },
        line: 6
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 9,
            column: 7
          }
        },
        loc: {
          start: {
            line: 9,
            column: 28
          },
          end: {
            line: 12,
            column: 1
          }
        },
        line: 9
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 13,
            column: 81
          }
        },
        loc: {
          start: {
            line: 13,
            column: 95
          },
          end: {
            line: 15,
            column: 1
          }
        },
        line: 13
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 15,
            column: 6
          }
        },
        loc: {
          start: {
            line: 15,
            column: 20
          },
          end: {
            line: 17,
            column: 1
          }
        },
        line: 15
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 18,
            column: 51
          },
          end: {
            line: 18,
            column: 52
          }
        },
        loc: {
          start: {
            line: 18,
            column: 63
          },
          end: {
            line: 34,
            column: 1
          }
        },
        line: 18
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 19,
            column: 18
          },
          end: {
            line: 19,
            column: 19
          }
        },
        loc: {
          start: {
            line: 19,
            column: 30
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 19
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 20,
            column: 48
          },
          end: {
            line: 20,
            column: 49
          }
        },
        loc: {
          start: {
            line: 20,
            column: 61
          },
          end: {
            line: 24,
            column: 9
          }
        },
        line: 20
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 27,
            column: 11
          },
          end: {
            line: 27,
            column: 12
          }
        },
        loc: {
          start: {
            line: 27,
            column: 26
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 27
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        },
        loc: {
          start: {
            line: 39,
            column: 18
          },
          end: {
            line: 44,
            column: 5
          }
        },
        line: 39
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 45,
            column: 4
          },
          end: {
            line: 45,
            column: 5
          }
        },
        loc: {
          start: {
            line: 45,
            column: 23
          },
          end: {
            line: 78,
            column: 5
          }
        },
        line: 45
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 82,
            column: 4
          },
          end: {
            line: 82,
            column: 5
          }
        },
        loc: {
          start: {
            line: 82,
            column: 28
          },
          end: {
            line: 99,
            column: 5
          }
        },
        line: 82
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 103,
            column: 4
          },
          end: {
            line: 103,
            column: 5
          }
        },
        loc: {
          start: {
            line: 103,
            column: 34
          },
          end: {
            line: 123,
            column: 5
          }
        },
        line: 103
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 127,
            column: 4
          },
          end: {
            line: 127,
            column: 5
          }
        },
        loc: {
          start: {
            line: 127,
            column: 34
          },
          end: {
            line: 132,
            column: 5
          }
        },
        line: 127
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 136,
            column: 4
          },
          end: {
            line: 136,
            column: 5
          }
        },
        loc: {
          start: {
            line: 136,
            column: 59
          },
          end: {
            line: 144,
            column: 5
          }
        },
        line: 136
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 148,
            column: 4
          },
          end: {
            line: 148,
            column: 5
          }
        },
        loc: {
          start: {
            line: 148,
            column: 81
          },
          end: {
            line: 161,
            column: 5
          }
        },
        line: 148
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 165,
            column: 4
          },
          end: {
            line: 165,
            column: 5
          }
        },
        loc: {
          start: {
            line: 165,
            column: 72
          },
          end: {
            line: 178,
            column: 5
          }
        },
        line: 165
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 182,
            column: 4
          },
          end: {
            line: 182,
            column: 5
          }
        },
        loc: {
          start: {
            line: 182,
            column: 48
          },
          end: {
            line: 191,
            column: 5
          }
        },
        line: 182
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 195,
            column: 4
          },
          end: {
            line: 195,
            column: 5
          }
        },
        loc: {
          start: {
            line: 195,
            column: 41
          },
          end: {
            line: 204,
            column: 5
          }
        },
        line: 195
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 208,
            column: 4
          },
          end: {
            line: 208,
            column: 5
          }
        },
        loc: {
          start: {
            line: 208,
            column: 50
          },
          end: {
            line: 218,
            column: 5
          }
        },
        line: 208
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 222,
            column: 4
          },
          end: {
            line: 222,
            column: 5
          }
        },
        loc: {
          start: {
            line: 222,
            column: 45
          },
          end: {
            line: 238,
            column: 5
          }
        },
        line: 222
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 242,
            column: 4
          },
          end: {
            line: 242,
            column: 5
          }
        },
        loc: {
          start: {
            line: 242,
            column: 30
          },
          end: {
            line: 261,
            column: 5
          }
        },
        line: 242
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 265,
            column: 4
          },
          end: {
            line: 265,
            column: 5
          }
        },
        loc: {
          start: {
            line: 265,
            column: 70
          },
          end: {
            line: 284,
            column: 5
          }
        },
        line: 265
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 288,
            column: 4
          },
          end: {
            line: 288,
            column: 5
          }
        },
        loc: {
          start: {
            line: 288,
            column: 63
          },
          end: {
            line: 308,
            column: 5
          }
        },
        line: 288
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 312,
            column: 4
          },
          end: {
            line: 312,
            column: 5
          }
        },
        loc: {
          start: {
            line: 312,
            column: 52
          },
          end: {
            line: 328,
            column: 5
          }
        },
        line: 312
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 332,
            column: 4
          },
          end: {
            line: 332,
            column: 5
          }
        },
        loc: {
          start: {
            line: 332,
            column: 29
          },
          end: {
            line: 349,
            column: 5
          }
        },
        line: 332
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 353,
            column: 4
          },
          end: {
            line: 353,
            column: 5
          }
        },
        loc: {
          start: {
            line: 353,
            column: 18
          },
          end: {
            line: 365,
            column: 5
          }
        },
        line: 353
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 369,
            column: 4
          },
          end: {
            line: 369,
            column: 5
          }
        },
        loc: {
          start: {
            line: 369,
            column: 69
          },
          end: {
            line: 377,
            column: 5
          }
        },
        line: 369
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 381,
            column: 4
          },
          end: {
            line: 381,
            column: 5
          }
        },
        loc: {
          start: {
            line: 381,
            column: 62
          },
          end: {
            line: 391,
            column: 5
          }
        },
        line: 381
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 395,
            column: 4
          },
          end: {
            line: 395,
            column: 5
          }
        },
        loc: {
          start: {
            line: 395,
            column: 69
          },
          end: {
            line: 401,
            column: 5
          }
        },
        line: 395
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 405,
            column: 4
          },
          end: {
            line: 405,
            column: 5
          }
        },
        loc: {
          start: {
            line: 405,
            column: 24
          },
          end: {
            line: 424,
            column: 5
          }
        },
        line: 405
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 12,
            column: 3
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 9,
            column: 1
          }
        }, {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 12,
            column: 1
          }
        }],
        line: 2
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 5
      },
      "4": {
        loc: {
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 13
          }
        }, {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "5": {
        loc: {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 47
          }
        }, {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "6": {
        loc: {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 63
          }
        }, {
          start: {
            line: 5,
            column: 67
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "7": {
        loc: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 10
      },
      "8": {
        loc: {
          start: {
            line: 13,
            column: 25
          },
          end: {
            line: 17,
            column: 2
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 26
          },
          end: {
            line: 13,
            column: 30
          }
        }, {
          start: {
            line: 13,
            column: 34
          },
          end: {
            line: 13,
            column: 57
          }
        }, {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "9": {
        loc: {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 15,
            column: 1
          }
        }, {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "10": {
        loc: {
          start: {
            line: 18,
            column: 19
          },
          end: {
            line: 34,
            column: 4
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 20
          },
          end: {
            line: 18,
            column: 24
          }
        }, {
          start: {
            line: 18,
            column: 28
          },
          end: {
            line: 18,
            column: 45
          }
        }, {
          start: {
            line: 18,
            column: 50
          },
          end: {
            line: 34,
            column: 4
          }
        }],
        line: 18
      },
      "11": {
        loc: {
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 24,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 20,
            column: 44
          }
        }, {
          start: {
            line: 20,
            column: 48
          },
          end: {
            line: 24,
            column: 9
          }
        }],
        line: 20
      },
      "12": {
        loc: {
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 22,
            column: 95
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 22,
            column: 95
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "13": {
        loc: {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 46
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 46
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "14": {
        loc: {
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 15
          }
        }, {
          start: {
            line: 28,
            column: 19
          },
          end: {
            line: 28,
            column: 33
          }
        }],
        line: 28
      },
      "15": {
        loc: {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "16": {
        loc: {
          start: {
            line: 30,
            column: 78
          },
          end: {
            line: 30,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 78
          },
          end: {
            line: 30,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "17": {
        loc: {
          start: {
            line: 42,
            column: 34
          },
          end: {
            line: 42,
            column: 98
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 42,
            column: 34
          },
          end: {
            line: 42,
            column: 92
          }
        }, {
          start: {
            line: 42,
            column: 96
          },
          end: {
            line: 42,
            column: 98
          }
        }],
        line: 42
      },
      "18": {
        loc: {
          start: {
            line: 43,
            column: 32
          },
          end: {
            line: 43,
            column: 94
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 43,
            column: 32
          },
          end: {
            line: 43,
            column: 88
          }
        }, {
          start: {
            line: 43,
            column: 92
          },
          end: {
            line: 43,
            column: 94
          }
        }],
        line: 43
      },
      "19": {
        loc: {
          start: {
            line: 46,
            column: 8
          },
          end: {
            line: 47,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 46,
            column: 8
          },
          end: {
            line: 47,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 46
      },
      "20": {
        loc: {
          start: {
            line: 49,
            column: 12
          },
          end: {
            line: 52,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 12
          },
          end: {
            line: 52,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 49
      },
      "21": {
        loc: {
          start: {
            line: 49,
            column: 16
          },
          end: {
            line: 49,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 49,
            column: 16
          },
          end: {
            line: 49,
            column: 38
          }
        }, {
          start: {
            line: 49,
            column: 42
          },
          end: {
            line: 49,
            column: 66
          }
        }],
        line: 49
      },
      "22": {
        loc: {
          start: {
            line: 54,
            column: 12
          },
          end: {
            line: 59,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 12
          },
          end: {
            line: 59,
            column: 13
          }
        }, {
          start: {
            line: 57,
            column: 17
          },
          end: {
            line: 59,
            column: 13
          }
        }],
        line: 54
      },
      "23": {
        loc: {
          start: {
            line: 65,
            column: 29
          },
          end: {
            line: 65,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 65,
            column: 29
          },
          end: {
            line: 65,
            column: 49
          }
        }, {
          start: {
            line: 65,
            column: 53
          },
          end: {
            line: 65,
            column: 66
          }
        }],
        line: 65
      },
      "24": {
        loc: {
          start: {
            line: 66,
            column: 25
          },
          end: {
            line: 66,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 66,
            column: 25
          },
          end: {
            line: 66,
            column: 56
          }
        }, {
          start: {
            line: 66,
            column: 60
          },
          end: {
            line: 66,
            column: 67
          }
        }],
        line: 66
      },
      "25": {
        loc: {
          start: {
            line: 84,
            column: 8
          },
          end: {
            line: 87,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 84,
            column: 8
          },
          end: {
            line: 87,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 84
      },
      "26": {
        loc: {
          start: {
            line: 105,
            column: 8
          },
          end: {
            line: 108,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 105,
            column: 8
          },
          end: {
            line: 108,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 105
      },
      "27": {
        loc: {
          start: {
            line: 130,
            column: 96
          },
          end: {
            line: 130,
            column: 124
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 130,
            column: 96
          },
          end: {
            line: 130,
            column: 109
          }
        }, {
          start: {
            line: 130,
            column: 113
          },
          end: {
            line: 130,
            column: 124
          }
        }],
        line: 130
      },
      "28": {
        loc: {
          start: {
            line: 139,
            column: 70
          },
          end: {
            line: 139,
            column: 91
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 139,
            column: 70
          },
          end: {
            line: 139,
            column: 76
          }
        }, {
          start: {
            line: 139,
            column: 80
          },
          end: {
            line: 139,
            column: 91
          }
        }],
        line: 139
      },
      "29": {
        loc: {
          start: {
            line: 224,
            column: 8
          },
          end: {
            line: 227,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 224,
            column: 8
          },
          end: {
            line: 227,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 224
      },
      "30": {
        loc: {
          start: {
            line: 231,
            column: 52
          },
          end: {
            line: 231,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 231,
            column: 52
          },
          end: {
            line: 231,
            column: 58
          }
        }, {
          start: {
            line: 231,
            column: 62
          },
          end: {
            line: 231,
            column: 73
          }
        }],
        line: 231
      },
      "31": {
        loc: {
          start: {
            line: 244,
            column: 8
          },
          end: {
            line: 247,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 244,
            column: 8
          },
          end: {
            line: 247,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 244
      },
      "32": {
        loc: {
          start: {
            line: 267,
            column: 8
          },
          end: {
            line: 270,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 267,
            column: 8
          },
          end: {
            line: 270,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 267
      },
      "33": {
        loc: {
          start: {
            line: 276,
            column: 28
          },
          end: {
            line: 276,
            column: 142
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 276,
            column: 29
          },
          end: {
            line: 276,
            column: 112
          }
        }, {
          start: {
            line: 276,
            column: 118
          },
          end: {
            line: 276,
            column: 141
          }
        }],
        line: 276
      },
      "34": {
        loc: {
          start: {
            line: 276,
            column: 29
          },
          end: {
            line: 276,
            column: 112
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 276,
            column: 80
          },
          end: {
            line: 276,
            column: 86
          }
        }, {
          start: {
            line: 276,
            column: 89
          },
          end: {
            line: 276,
            column: 112
          }
        }],
        line: 276
      },
      "35": {
        loc: {
          start: {
            line: 276,
            column: 29
          },
          end: {
            line: 276,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 276,
            column: 29
          },
          end: {
            line: 276,
            column: 50
          }
        }, {
          start: {
            line: 276,
            column: 54
          },
          end: {
            line: 276,
            column: 77
          }
        }],
        line: 276
      },
      "36": {
        loc: {
          start: {
            line: 276,
            column: 118
          },
          end: {
            line: 276,
            column: 141
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 276,
            column: 128
          },
          end: {
            line: 276,
            column: 133
          }
        }, {
          start: {
            line: 276,
            column: 136
          },
          end: {
            line: 276,
            column: 141
          }
        }],
        line: 276
      },
      "37": {
        loc: {
          start: {
            line: 290,
            column: 8
          },
          end: {
            line: 293,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 290,
            column: 8
          },
          end: {
            line: 293,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 290
      },
      "38": {
        loc: {
          start: {
            line: 301,
            column: 28
          },
          end: {
            line: 301,
            column: 47
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 301,
            column: 38
          },
          end: {
            line: 301,
            column: 41
          }
        }, {
          start: {
            line: 301,
            column: 44
          },
          end: {
            line: 301,
            column: 47
          }
        }],
        line: 301
      },
      "39": {
        loc: {
          start: {
            line: 314,
            column: 8
          },
          end: {
            line: 317,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 314,
            column: 8
          },
          end: {
            line: 317,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 314
      },
      "40": {
        loc: {
          start: {
            line: 320,
            column: 12
          },
          end: {
            line: 322,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 320,
            column: 12
          },
          end: {
            line: 322,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 320
      },
      "41": {
        loc: {
          start: {
            line: 334,
            column: 8
          },
          end: {
            line: 337,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 334,
            column: 8
          },
          end: {
            line: 337,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 334
      },
      "42": {
        loc: {
          start: {
            line: 340,
            column: 12
          },
          end: {
            line: 343,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 340,
            column: 12
          },
          end: {
            line: 343,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 340
      },
      "43": {
        loc: {
          start: {
            line: 355,
            column: 8
          },
          end: {
            line: 357,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 355,
            column: 8
          },
          end: {
            line: 357,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 355
      },
      "44": {
        loc: {
          start: {
            line: 372,
            column: 68
          },
          end: {
            line: 372,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 372,
            column: 68
          },
          end: {
            line: 372,
            column: 74
          }
        }, {
          start: {
            line: 372,
            column: 78
          },
          end: {
            line: 372,
            column: 89
          }
        }],
        line: 372
      },
      "45": {
        loc: {
          start: {
            line: 387,
            column: 24
          },
          end: {
            line: 387,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 387,
            column: 24
          },
          end: {
            line: 387,
            column: 30
          }
        }, {
          start: {
            line: 387,
            column: 34
          },
          end: {
            line: 387,
            column: 45
          }
        }],
        line: 387
      },
      "46": {
        loc: {
          start: {
            line: 398,
            column: 64
          },
          end: {
            line: 398,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 398,
            column: 64
          },
          end: {
            line: 398,
            column: 70
          }
        }, {
          start: {
            line: 398,
            column: 74
          },
          end: {
            line: 398,
            column: 85
          }
        }],
        line: 398
      },
      "47": {
        loc: {
          start: {
            line: 399,
            column: 21
          },
          end: {
            line: 399,
            column: 50
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 399,
            column: 29
          },
          end: {
            line: 399,
            column: 38
          }
        }, {
          start: {
            line: 399,
            column: 41
          },
          end: {
            line: 399,
            column: 50
          }
        }],
        line: 399
      },
      "48": {
        loc: {
          start: {
            line: 408,
            column: 12
          },
          end: {
            line: 410,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 408,
            column: 12
          },
          end: {
            line: 410,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 408
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0, 0],
      "9": [0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/dikshantvashistha/PrepBettr/lib/services/azure-application-insights-service.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/dikshantvashistha/PrepBettr/lib/services/azure-application-insights-service.ts"],
      sourcesContent: ["import * as appInsights from 'applicationinsights';\nimport type { TelemetryClient } from 'applicationinsights';\n\nexport interface CustomEvent {\n  name: string;\n  properties?: { [key: string]: string };\n  metrics?: { [key: string]: number };\n}\n\nexport interface PageView {\n  name: string;\n  url?: string;\n  duration?: number;\n  properties?: { [key: string]: string };\n  measurements?: { [key: string]: number };\n}\n\nexport interface UserAction {\n  action: string;\n  feature: string;\n  userId?: string;\n  properties?: { [key: string]: string };\n}\n\nexport interface PerformanceMetric {\n  name: string;\n  value: number;\n  count?: number;\n  min?: number;\n  max?: number;\n}\n\nclass AzureApplicationInsightsService {\n  private telemetryClient: TelemetryClient | null = null;\n  private initialized = false;\n  private instrumentationKey: string;\n  private connectionString: string;\n\n  constructor() {\n    this.instrumentationKey = process.env.AZURE_APPLICATION_INSIGHTS_INSTRUMENTATION_KEY || '';\n    this.connectionString = process.env.AZURE_APPLICATION_INSIGHTS_CONNECTION_STRING || '';\n  }\n\n  async initialize(): Promise<void> {\n    if (this.initialized) return;\n\n    try {\n      if (!this.connectionString && !this.instrumentationKey) {\n        console.warn('\u26A0\uFE0F Azure Application Insights not configured - missing connection string and instrumentation key');\n        return;\n      }\n\n      // Configure Application Insights\n      if (this.connectionString) {\n        appInsights.setup(this.connectionString);\n      } else {\n        appInsights.setup(this.instrumentationKey);\n      }\n\n      // Configure telemetry settings\n      appInsights.Configuration.setDistributedTracingMode(appInsights.DistributedTracingModes.AI_AND_W3C);\n      \n      // Set common properties\n      appInsights.defaultClient.commonProperties = {\n        application: 'PrepBettr',\n        environment: process.env.NODE_ENV || 'development',\n        version: process.env.npm_package_version || '1.0.0'\n      };\n\n      // Start collecting telemetry\n      appInsights.start();\n\n      this.telemetryClient = appInsights.defaultClient;\n      this.initialized = true;\n\n      console.log('\u2705 Azure Application Insights initialized');\n    } catch (error) {\n      console.error('\u274C Failed to initialize Azure Application Insights:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Track a custom event\n   */\n  async trackEvent(event: CustomEvent): Promise<void> {\n    await this.initialize();\n\n    if (!this.telemetryClient) {\n      console.warn('Azure Application Insights not available');\n      return;\n    }\n\n    try {\n      this.telemetryClient.trackEvent({\n        name: event.name,\n        properties: event.properties,\n        measurements: event.metrics\n      });\n\n      console.log(`\uD83D\uDCCA Tracked event: ${event.name}`);\n    } catch (error) {\n      console.error('Failed to track event:', error);\n    }\n  }\n\n  /**\n   * Track a page view\n   */\n  async trackPageView(pageView: PageView): Promise<void> {\n    await this.initialize();\n\n    if (!this.telemetryClient) {\n      console.warn('Azure Application Insights not available');\n      return;\n    }\n\n    try {\n      this.telemetryClient.trackPageView({\n        name: pageView.name,\n        url: pageView.url,\n        duration: pageView.duration,\n        properties: pageView.properties,\n        measurements: pageView.measurements,\n        id: `page_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`\n      });\n\n      console.log(`\uD83D\uDC40 Tracked page view: ${pageView.name}`);\n    } catch (error) {\n      console.error('Failed to track page view:', error);\n    }\n  }\n\n  /**\n   * Track user action\n   */\n  async trackUserAction(action: UserAction): Promise<void> {\n    await this.trackEvent({\n      name: 'UserAction',\n      properties: {\n        action: action.action,\n        feature: action.feature,\n        userId: action.userId || 'anonymous',\n        timestamp: new Date().toISOString(),\n        ...action.properties\n      }\n    });\n  }\n\n  /**\n   * Track feature usage\n   */\n  async trackFeatureUsage(featureName: string, userId?: string, metadata?: { [key: string]: string }): Promise<void> {\n    await this.trackEvent({\n      name: 'FeatureUsage',\n      properties: {\n        feature: featureName,\n        userId: userId || 'anonymous',\n        timestamp: new Date().toISOString(),\n        ...metadata\n      },\n      metrics: {\n        usageCount: 1\n      }\n    });\n  }\n\n  /**\n   * Track interview completion\n   */\n  async trackInterviewCompletion(userId: string, interviewId: string, questionCount: number, duration: number): Promise<void> {\n    await this.trackEvent({\n      name: 'InterviewCompleted',\n      properties: {\n        userId,\n        interviewId,\n        timestamp: new Date().toISOString()\n      },\n      metrics: {\n        questionCount,\n        durationMinutes: Math.round(duration / 60)\n      }\n    });\n  }\n\n  /**\n   * Track resume upload\n   */\n  async trackResumeUpload(userId: string, fileSize: number, mimeType: string, processingTime: number): Promise<void> {\n    await this.trackEvent({\n      name: 'ResumeUploaded',\n      properties: {\n        userId,\n        mimeType,\n        timestamp: new Date().toISOString()\n      },\n      metrics: {\n        fileSizeKB: Math.round(fileSize / 1024),\n        processingTimeSeconds: Math.round(processingTime / 1000)\n      }\n    });\n  }\n\n  /**\n   * Track user registration\n   */\n  async trackUserRegistration(userId: string, method: string): Promise<void> {\n    await this.trackEvent({\n      name: 'UserRegistered',\n      properties: {\n        userId,\n        registrationMethod: method,\n        timestamp: new Date().toISOString()\n      }\n    });\n  }\n\n  /**\n   * Track user login\n   */\n  async trackUserLogin(userId: string, method: string): Promise<void> {\n    await this.trackEvent({\n      name: 'UserLogin',\n      properties: {\n        userId,\n        loginMethod: method,\n        timestamp: new Date().toISOString()\n      }\n    });\n  }\n\n  /**\n   * Track subscription events\n   */\n  async trackSubscription(userId: string, action: 'upgrade' | 'downgrade' | 'cancel', plan: string): Promise<void> {\n    await this.trackEvent({\n      name: 'SubscriptionEvent',\n      properties: {\n        userId,\n        action,\n        plan,\n        timestamp: new Date().toISOString()\n      }\n    });\n  }\n\n  /**\n   * Track errors and exceptions\n   */\n  async trackError(error: Error, userId?: string, context?: { [key: string]: string }): Promise<void> {\n    await this.initialize();\n\n    if (!this.telemetryClient) {\n      console.warn('Azure Application Insights not available');\n      return;\n    }\n\n    try {\n      this.telemetryClient.trackException({\n        exception: error,\n        properties: {\n          userId: userId || 'anonymous',\n          timestamp: new Date().toISOString(),\n          ...context\n        }\n      });\n\n      console.log(`\uD83D\uDEA8 Tracked error: ${error.message}`);\n    } catch (trackingError) {\n      console.error('Failed to track error:', trackingError);\n    }\n  }\n\n  /**\n   * Track custom metric\n   */\n  async trackMetric(metric: PerformanceMetric): Promise<void> {\n    await this.initialize();\n\n    if (!this.telemetryClient) {\n      console.warn('Azure Application Insights not available');\n      return;\n    }\n\n    try {\n      this.telemetryClient.trackMetric({\n        name: metric.name,\n        value: metric.value,\n        count: metric.count,\n        min: metric.min,\n        max: metric.max\n      });\n\n      console.log(`\uD83D\uDCC8 Tracked metric: ${metric.name} = ${metric.value}`);\n    } catch (error) {\n      console.error('Failed to track metric:', error);\n    }\n  }\n\n  /**\n   * Track API request duration\n   */\n  async trackAPIRequest(name: string, url: string, duration: number, success: boolean, responseCode?: number): Promise<void> {\n    await this.initialize();\n\n    if (!this.telemetryClient) {\n      console.warn('Azure Application Insights not available');\n      return;\n    }\n\n    try {\n      this.telemetryClient.trackRequest({\n        name,\n        url,\n        duration,\n        resultCode: responseCode?.toString() || (success ? '200' : '500'),\n        success\n      });\n\n      console.log(`\uD83C\uDF10 Tracked API request: ${name} (${duration}ms)`);\n    } catch (error) {\n      console.error('Failed to track API request:', error);\n    }\n  }\n\n  /**\n   * Track dependency calls (external services)\n   */\n  async trackDependency(name: string, type: string, data: string, duration: number, success: boolean): Promise<void> {\n    await this.initialize();\n\n    if (!this.telemetryClient) {\n      console.warn('Azure Application Insights not available');\n      return;\n    }\n\n    try {\n      this.telemetryClient.trackDependency({\n        name,\n        dependencyTypeName: type,\n        data,\n        duration,\n        success,\n        resultCode: success ? 200 : 500\n      });\n\n      console.log(`\uD83D\uDD17 Tracked dependency: ${name} (${duration}ms)`);\n    } catch (error) {\n      console.error('Failed to track dependency:', error);\n    }\n  }\n\n  /**\n   * Set user context\n   */\n  async setUserContext(userId: string, email?: string, properties?: { [key: string]: string }): Promise<void> {\n    await this.initialize();\n\n    if (!this.telemetryClient) {\n      console.warn('Azure Application Insights not available');\n      return;\n    }\n\n    try {\n      // Add user context via common properties since API methods vary\n      if (this.telemetryClient.commonProperties) {\n        Object.assign(this.telemetryClient.commonProperties, {\n          userId,\n          userEmail: email,\n          ...properties\n        });\n      }\n\n      console.log(`\uD83D\uDC64 Set user context: ${userId}`);\n    } catch (error) {\n      console.error('Failed to set user context:', error);\n    }\n  }\n\n  /**\n   * Clear user context (on logout)\n   */\n  async clearUserContext(): Promise<void> {\n    await this.initialize();\n\n    if (!this.telemetryClient) {\n      console.warn('Azure Application Insights not available');\n      return;\n    }\n\n    try {\n      // Remove user-specific properties\n      if (this.telemetryClient.commonProperties) {\n        delete this.telemetryClient.commonProperties.userId;\n        delete this.telemetryClient.commonProperties.userEmail;\n      }\n      \n      console.log('\uD83D\uDC64 Cleared user context');\n    } catch (error) {\n      console.error('Failed to clear user context:', error);\n    }\n  }\n\n  /**\n   * Flush telemetry data immediately\n   */\n  async flush(): Promise<void> {\n    await this.initialize();\n\n    if (!this.telemetryClient) {\n      return;\n    }\n\n    try {\n      this.telemetryClient.flush();\n      console.log('\uD83D\uDD04 Flushed telemetry data');\n    } catch (error) {\n      console.error('Failed to flush telemetry:', error);\n    }\n  }\n\n  /**\n   * Track business metrics\n   */\n  async trackBusinessMetric(metricName: string, value: number, userId?: string, properties?: { [key: string]: string }): Promise<void> {\n    await this.trackEvent({\n      name: 'BusinessMetric',\n      properties: {\n        metric: metricName,\n        userId: userId || 'anonymous',\n        timestamp: new Date().toISOString(),\n        ...properties\n      },\n      metrics: {\n        value\n      }\n    });\n  }\n\n  /**\n   * Track A/B test participation\n   */\n  async trackABTestParticipation(testName: string, variant: string, userId?: string): Promise<void> {\n    await this.trackEvent({\n      name: 'ABTestParticipation',\n      properties: {\n        testName,\n        variant,\n        userId: userId || 'anonymous',\n        timestamp: new Date().toISOString()\n      }\n    });\n  }\n\n  /**\n   * Track conversion events\n   */\n  async trackConversion(conversionType: string, value?: number, userId?: string, properties?: { [key: string]: string }): Promise<void> {\n    await this.trackEvent({\n      name: 'Conversion',\n      properties: {\n        conversionType,\n        userId: userId || 'anonymous',\n        timestamp: new Date().toISOString(),\n        ...properties\n      },\n      metrics: value ? { value } : undefined\n    });\n  }\n\n  /**\n   * Health check\n   */\n  async healthCheck(): Promise<{ status: 'healthy' | 'unhealthy'; timestamp: Date }> {\n    try {\n      await this.initialize();\n\n      if (!this.telemetryClient) {\n        return { status: 'unhealthy', timestamp: new Date() };\n      }\n\n      // Try to track a test event\n      await this.trackEvent({\n        name: 'HealthCheck',\n        properties: {\n          timestamp: new Date().toISOString()\n        }\n      });\n\n      return { status: 'healthy', timestamp: new Date() };\n    } catch (error) {\n      console.error('Azure Application Insights health check failed:', error);\n      return { status: 'unhealthy', timestamp: new Date() };\n    }\n  }\n}\n\n// Export singleton instance\nexport const azureApplicationInsights = new AzureApplicationInsightsService();\nexport default azureApplicationInsights;\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d3b84ec9542f74534069ee329c9c9d839f143546"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_9oh7uszaz = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_9oh7uszaz();
var __createBinding =
/* istanbul ignore next */
(cov_9oh7uszaz().s[0]++,
/* istanbul ignore next */
(cov_9oh7uszaz().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_9oh7uszaz().b[0][1]++, this.__createBinding) ||
/* istanbul ignore next */
(cov_9oh7uszaz().b[0][2]++, Object.create ?
/* istanbul ignore next */
(cov_9oh7uszaz().b[1][0]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_9oh7uszaz().f[0]++;
  cov_9oh7uszaz().s[1]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_9oh7uszaz().b[2][0]++;
    cov_9oh7uszaz().s[2]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_9oh7uszaz().b[2][1]++;
  }
  var desc =
  /* istanbul ignore next */
  (cov_9oh7uszaz().s[3]++, Object.getOwnPropertyDescriptor(m, k));
  /* istanbul ignore next */
  cov_9oh7uszaz().s[4]++;
  if (
  /* istanbul ignore next */
  (cov_9oh7uszaz().b[4][0]++, !desc) ||
  /* istanbul ignore next */
  (cov_9oh7uszaz().b[4][1]++, "get" in desc ?
  /* istanbul ignore next */
  (cov_9oh7uszaz().b[5][0]++, !m.__esModule) :
  /* istanbul ignore next */
  (cov_9oh7uszaz().b[5][1]++,
  /* istanbul ignore next */
  (cov_9oh7uszaz().b[6][0]++, desc.writable) ||
  /* istanbul ignore next */
  (cov_9oh7uszaz().b[6][1]++, desc.configurable)))) {
    /* istanbul ignore next */
    cov_9oh7uszaz().b[3][0]++;
    cov_9oh7uszaz().s[5]++;
    desc = {
      enumerable: true,
      get: function () {
        /* istanbul ignore next */
        cov_9oh7uszaz().f[1]++;
        cov_9oh7uszaz().s[6]++;
        return m[k];
      }
    };
  } else
  /* istanbul ignore next */
  {
    cov_9oh7uszaz().b[3][1]++;
  }
  cov_9oh7uszaz().s[7]++;
  Object.defineProperty(o, k2, desc);
}) :
/* istanbul ignore next */
(cov_9oh7uszaz().b[1][1]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_9oh7uszaz().f[2]++;
  cov_9oh7uszaz().s[8]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_9oh7uszaz().b[7][0]++;
    cov_9oh7uszaz().s[9]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_9oh7uszaz().b[7][1]++;
  }
  cov_9oh7uszaz().s[10]++;
  o[k2] = m[k];
})));
var __setModuleDefault =
/* istanbul ignore next */
(cov_9oh7uszaz().s[11]++,
/* istanbul ignore next */
(cov_9oh7uszaz().b[8][0]++, this) &&
/* istanbul ignore next */
(cov_9oh7uszaz().b[8][1]++, this.__setModuleDefault) ||
/* istanbul ignore next */
(cov_9oh7uszaz().b[8][2]++, Object.create ?
/* istanbul ignore next */
(cov_9oh7uszaz().b[9][0]++, function (o, v) {
  /* istanbul ignore next */
  cov_9oh7uszaz().f[3]++;
  cov_9oh7uszaz().s[12]++;
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
}) :
/* istanbul ignore next */
(cov_9oh7uszaz().b[9][1]++, function (o, v) {
  /* istanbul ignore next */
  cov_9oh7uszaz().f[4]++;
  cov_9oh7uszaz().s[13]++;
  o["default"] = v;
})));
var __importStar =
/* istanbul ignore next */
(cov_9oh7uszaz().s[14]++,
/* istanbul ignore next */
(cov_9oh7uszaz().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_9oh7uszaz().b[10][1]++, this.__importStar) ||
/* istanbul ignore next */
(cov_9oh7uszaz().b[10][2]++, function () {
  /* istanbul ignore next */
  cov_9oh7uszaz().f[5]++;
  cov_9oh7uszaz().s[15]++;
  var ownKeys = function (o) {
    /* istanbul ignore next */
    cov_9oh7uszaz().f[6]++;
    cov_9oh7uszaz().s[16]++;
    ownKeys =
    /* istanbul ignore next */
    (cov_9oh7uszaz().b[11][0]++, Object.getOwnPropertyNames) ||
    /* istanbul ignore next */
    (cov_9oh7uszaz().b[11][1]++, function (o) {
      /* istanbul ignore next */
      cov_9oh7uszaz().f[7]++;
      var ar =
      /* istanbul ignore next */
      (cov_9oh7uszaz().s[17]++, []);
      /* istanbul ignore next */
      cov_9oh7uszaz().s[18]++;
      for (var k in o) {
        /* istanbul ignore next */
        cov_9oh7uszaz().s[19]++;
        if (Object.prototype.hasOwnProperty.call(o, k)) {
          /* istanbul ignore next */
          cov_9oh7uszaz().b[12][0]++;
          cov_9oh7uszaz().s[20]++;
          ar[ar.length] = k;
        } else
        /* istanbul ignore next */
        {
          cov_9oh7uszaz().b[12][1]++;
        }
      }
      /* istanbul ignore next */
      cov_9oh7uszaz().s[21]++;
      return ar;
    });
    /* istanbul ignore next */
    cov_9oh7uszaz().s[22]++;
    return ownKeys(o);
  };
  /* istanbul ignore next */
  cov_9oh7uszaz().s[23]++;
  return function (mod) {
    /* istanbul ignore next */
    cov_9oh7uszaz().f[8]++;
    cov_9oh7uszaz().s[24]++;
    if (
    /* istanbul ignore next */
    (cov_9oh7uszaz().b[14][0]++, mod) &&
    /* istanbul ignore next */
    (cov_9oh7uszaz().b[14][1]++, mod.__esModule)) {
      /* istanbul ignore next */
      cov_9oh7uszaz().b[13][0]++;
      cov_9oh7uszaz().s[25]++;
      return mod;
    } else
    /* istanbul ignore next */
    {
      cov_9oh7uszaz().b[13][1]++;
    }
    var result =
    /* istanbul ignore next */
    (cov_9oh7uszaz().s[26]++, {});
    /* istanbul ignore next */
    cov_9oh7uszaz().s[27]++;
    if (mod != null) {
      /* istanbul ignore next */
      cov_9oh7uszaz().b[15][0]++;
      cov_9oh7uszaz().s[28]++;
      for (var k =
        /* istanbul ignore next */
        (cov_9oh7uszaz().s[29]++, ownKeys(mod)), i =
        /* istanbul ignore next */
        (cov_9oh7uszaz().s[30]++, 0); i < k.length; i++) {
        /* istanbul ignore next */
        cov_9oh7uszaz().s[31]++;
        if (k[i] !== "default") {
          /* istanbul ignore next */
          cov_9oh7uszaz().b[16][0]++;
          cov_9oh7uszaz().s[32]++;
          __createBinding(result, mod, k[i]);
        } else
        /* istanbul ignore next */
        {
          cov_9oh7uszaz().b[16][1]++;
        }
      }
    } else
    /* istanbul ignore next */
    {
      cov_9oh7uszaz().b[15][1]++;
    }
    cov_9oh7uszaz().s[33]++;
    __setModuleDefault(result, mod);
    /* istanbul ignore next */
    cov_9oh7uszaz().s[34]++;
    return result;
  };
}()));
/* istanbul ignore next */
cov_9oh7uszaz().s[35]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_9oh7uszaz().s[36]++;
exports.azureApplicationInsights = void 0;
const appInsights =
/* istanbul ignore next */
(cov_9oh7uszaz().s[37]++, __importStar(require("applicationinsights")));
class AzureApplicationInsightsService {
  constructor() {
    /* istanbul ignore next */
    cov_9oh7uszaz().f[9]++;
    cov_9oh7uszaz().s[38]++;
    this.telemetryClient = null;
    /* istanbul ignore next */
    cov_9oh7uszaz().s[39]++;
    this.initialized = false;
    /* istanbul ignore next */
    cov_9oh7uszaz().s[40]++;
    this.instrumentationKey =
    /* istanbul ignore next */
    (cov_9oh7uszaz().b[17][0]++, process.env.AZURE_APPLICATION_INSIGHTS_INSTRUMENTATION_KEY) ||
    /* istanbul ignore next */
    (cov_9oh7uszaz().b[17][1]++, '');
    /* istanbul ignore next */
    cov_9oh7uszaz().s[41]++;
    this.connectionString =
    /* istanbul ignore next */
    (cov_9oh7uszaz().b[18][0]++, process.env.AZURE_APPLICATION_INSIGHTS_CONNECTION_STRING) ||
    /* istanbul ignore next */
    (cov_9oh7uszaz().b[18][1]++, '');
  }
  async initialize() {
    /* istanbul ignore next */
    cov_9oh7uszaz().f[10]++;
    cov_9oh7uszaz().s[42]++;
    if (this.initialized) {
      /* istanbul ignore next */
      cov_9oh7uszaz().b[19][0]++;
      cov_9oh7uszaz().s[43]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_9oh7uszaz().b[19][1]++;
    }
    cov_9oh7uszaz().s[44]++;
    try {
      /* istanbul ignore next */
      cov_9oh7uszaz().s[45]++;
      if (
      /* istanbul ignore next */
      (cov_9oh7uszaz().b[21][0]++, !this.connectionString) &&
      /* istanbul ignore next */
      (cov_9oh7uszaz().b[21][1]++, !this.instrumentationKey)) {
        /* istanbul ignore next */
        cov_9oh7uszaz().b[20][0]++;
        cov_9oh7uszaz().s[46]++;
        console.warn('⚠️ Azure Application Insights not configured - missing connection string and instrumentation key');
        /* istanbul ignore next */
        cov_9oh7uszaz().s[47]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_9oh7uszaz().b[20][1]++;
      }
      // Configure Application Insights
      cov_9oh7uszaz().s[48]++;
      if (this.connectionString) {
        /* istanbul ignore next */
        cov_9oh7uszaz().b[22][0]++;
        cov_9oh7uszaz().s[49]++;
        appInsights.setup(this.connectionString);
      } else {
        /* istanbul ignore next */
        cov_9oh7uszaz().b[22][1]++;
        cov_9oh7uszaz().s[50]++;
        appInsights.setup(this.instrumentationKey);
      }
      // Configure telemetry settings
      /* istanbul ignore next */
      cov_9oh7uszaz().s[51]++;
      appInsights.Configuration.setDistributedTracingMode(appInsights.DistributedTracingModes.AI_AND_W3C);
      // Set common properties
      /* istanbul ignore next */
      cov_9oh7uszaz().s[52]++;
      appInsights.defaultClient.commonProperties = {
        application: 'PrepBettr',
        environment:
        /* istanbul ignore next */
        (cov_9oh7uszaz().b[23][0]++, process.env.NODE_ENV) ||
        /* istanbul ignore next */
        (cov_9oh7uszaz().b[23][1]++, 'development'),
        version:
        /* istanbul ignore next */
        (cov_9oh7uszaz().b[24][0]++, process.env.npm_package_version) ||
        /* istanbul ignore next */
        (cov_9oh7uszaz().b[24][1]++, '1.0.0')
      };
      // Start collecting telemetry
      /* istanbul ignore next */
      cov_9oh7uszaz().s[53]++;
      appInsights.start();
      /* istanbul ignore next */
      cov_9oh7uszaz().s[54]++;
      this.telemetryClient = appInsights.defaultClient;
      /* istanbul ignore next */
      cov_9oh7uszaz().s[55]++;
      this.initialized = true;
      /* istanbul ignore next */
      cov_9oh7uszaz().s[56]++;
      console.log('✅ Azure Application Insights initialized');
    } catch (error) {
      /* istanbul ignore next */
      cov_9oh7uszaz().s[57]++;
      console.error('❌ Failed to initialize Azure Application Insights:', error);
      /* istanbul ignore next */
      cov_9oh7uszaz().s[58]++;
      throw error;
    }
  }
  /**
   * Track a custom event
   */
  async trackEvent(event) {
    /* istanbul ignore next */
    cov_9oh7uszaz().f[11]++;
    cov_9oh7uszaz().s[59]++;
    await this.initialize();
    /* istanbul ignore next */
    cov_9oh7uszaz().s[60]++;
    if (!this.telemetryClient) {
      /* istanbul ignore next */
      cov_9oh7uszaz().b[25][0]++;
      cov_9oh7uszaz().s[61]++;
      console.warn('Azure Application Insights not available');
      /* istanbul ignore next */
      cov_9oh7uszaz().s[62]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_9oh7uszaz().b[25][1]++;
    }
    cov_9oh7uszaz().s[63]++;
    try {
      /* istanbul ignore next */
      cov_9oh7uszaz().s[64]++;
      this.telemetryClient.trackEvent({
        name: event.name,
        properties: event.properties,
        measurements: event.metrics
      });
      /* istanbul ignore next */
      cov_9oh7uszaz().s[65]++;
      console.log(`📊 Tracked event: ${event.name}`);
    } catch (error) {
      /* istanbul ignore next */
      cov_9oh7uszaz().s[66]++;
      console.error('Failed to track event:', error);
    }
  }
  /**
   * Track a page view
   */
  async trackPageView(pageView) {
    /* istanbul ignore next */
    cov_9oh7uszaz().f[12]++;
    cov_9oh7uszaz().s[67]++;
    await this.initialize();
    /* istanbul ignore next */
    cov_9oh7uszaz().s[68]++;
    if (!this.telemetryClient) {
      /* istanbul ignore next */
      cov_9oh7uszaz().b[26][0]++;
      cov_9oh7uszaz().s[69]++;
      console.warn('Azure Application Insights not available');
      /* istanbul ignore next */
      cov_9oh7uszaz().s[70]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_9oh7uszaz().b[26][1]++;
    }
    cov_9oh7uszaz().s[71]++;
    try {
      /* istanbul ignore next */
      cov_9oh7uszaz().s[72]++;
      this.telemetryClient.trackPageView({
        name: pageView.name,
        url: pageView.url,
        duration: pageView.duration,
        properties: pageView.properties,
        measurements: pageView.measurements,
        id: `page_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`
      });
      /* istanbul ignore next */
      cov_9oh7uszaz().s[73]++;
      console.log(`👀 Tracked page view: ${pageView.name}`);
    } catch (error) {
      /* istanbul ignore next */
      cov_9oh7uszaz().s[74]++;
      console.error('Failed to track page view:', error);
    }
  }
  /**
   * Track user action
   */
  async trackUserAction(action) {
    /* istanbul ignore next */
    cov_9oh7uszaz().f[13]++;
    cov_9oh7uszaz().s[75]++;
    await this.trackEvent({
      name: 'UserAction',
      properties: Object.assign({
        action: action.action,
        feature: action.feature,
        userId:
        /* istanbul ignore next */
        (cov_9oh7uszaz().b[27][0]++, action.userId) ||
        /* istanbul ignore next */
        (cov_9oh7uszaz().b[27][1]++, 'anonymous'),
        timestamp: new Date().toISOString()
      }, action.properties)
    });
  }
  /**
   * Track feature usage
   */
  async trackFeatureUsage(featureName, userId, metadata) {
    /* istanbul ignore next */
    cov_9oh7uszaz().f[14]++;
    cov_9oh7uszaz().s[76]++;
    await this.trackEvent({
      name: 'FeatureUsage',
      properties: Object.assign({
        feature: featureName,
        userId:
        /* istanbul ignore next */
        (cov_9oh7uszaz().b[28][0]++, userId) ||
        /* istanbul ignore next */
        (cov_9oh7uszaz().b[28][1]++, 'anonymous'),
        timestamp: new Date().toISOString()
      }, metadata),
      metrics: {
        usageCount: 1
      }
    });
  }
  /**
   * Track interview completion
   */
  async trackInterviewCompletion(userId, interviewId, questionCount, duration) {
    /* istanbul ignore next */
    cov_9oh7uszaz().f[15]++;
    cov_9oh7uszaz().s[77]++;
    await this.trackEvent({
      name: 'InterviewCompleted',
      properties: {
        userId,
        interviewId,
        timestamp: new Date().toISOString()
      },
      metrics: {
        questionCount,
        durationMinutes: Math.round(duration / 60)
      }
    });
  }
  /**
   * Track resume upload
   */
  async trackResumeUpload(userId, fileSize, mimeType, processingTime) {
    /* istanbul ignore next */
    cov_9oh7uszaz().f[16]++;
    cov_9oh7uszaz().s[78]++;
    await this.trackEvent({
      name: 'ResumeUploaded',
      properties: {
        userId,
        mimeType,
        timestamp: new Date().toISOString()
      },
      metrics: {
        fileSizeKB: Math.round(fileSize / 1024),
        processingTimeSeconds: Math.round(processingTime / 1000)
      }
    });
  }
  /**
   * Track user registration
   */
  async trackUserRegistration(userId, method) {
    /* istanbul ignore next */
    cov_9oh7uszaz().f[17]++;
    cov_9oh7uszaz().s[79]++;
    await this.trackEvent({
      name: 'UserRegistered',
      properties: {
        userId,
        registrationMethod: method,
        timestamp: new Date().toISOString()
      }
    });
  }
  /**
   * Track user login
   */
  async trackUserLogin(userId, method) {
    /* istanbul ignore next */
    cov_9oh7uszaz().f[18]++;
    cov_9oh7uszaz().s[80]++;
    await this.trackEvent({
      name: 'UserLogin',
      properties: {
        userId,
        loginMethod: method,
        timestamp: new Date().toISOString()
      }
    });
  }
  /**
   * Track subscription events
   */
  async trackSubscription(userId, action, plan) {
    /* istanbul ignore next */
    cov_9oh7uszaz().f[19]++;
    cov_9oh7uszaz().s[81]++;
    await this.trackEvent({
      name: 'SubscriptionEvent',
      properties: {
        userId,
        action,
        plan,
        timestamp: new Date().toISOString()
      }
    });
  }
  /**
   * Track errors and exceptions
   */
  async trackError(error, userId, context) {
    /* istanbul ignore next */
    cov_9oh7uszaz().f[20]++;
    cov_9oh7uszaz().s[82]++;
    await this.initialize();
    /* istanbul ignore next */
    cov_9oh7uszaz().s[83]++;
    if (!this.telemetryClient) {
      /* istanbul ignore next */
      cov_9oh7uszaz().b[29][0]++;
      cov_9oh7uszaz().s[84]++;
      console.warn('Azure Application Insights not available');
      /* istanbul ignore next */
      cov_9oh7uszaz().s[85]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_9oh7uszaz().b[29][1]++;
    }
    cov_9oh7uszaz().s[86]++;
    try {
      /* istanbul ignore next */
      cov_9oh7uszaz().s[87]++;
      this.telemetryClient.trackException({
        exception: error,
        properties: Object.assign({
          userId:
          /* istanbul ignore next */
          (cov_9oh7uszaz().b[30][0]++, userId) ||
          /* istanbul ignore next */
          (cov_9oh7uszaz().b[30][1]++, 'anonymous'),
          timestamp: new Date().toISOString()
        }, context)
      });
      /* istanbul ignore next */
      cov_9oh7uszaz().s[88]++;
      console.log(`🚨 Tracked error: ${error.message}`);
    } catch (trackingError) {
      /* istanbul ignore next */
      cov_9oh7uszaz().s[89]++;
      console.error('Failed to track error:', trackingError);
    }
  }
  /**
   * Track custom metric
   */
  async trackMetric(metric) {
    /* istanbul ignore next */
    cov_9oh7uszaz().f[21]++;
    cov_9oh7uszaz().s[90]++;
    await this.initialize();
    /* istanbul ignore next */
    cov_9oh7uszaz().s[91]++;
    if (!this.telemetryClient) {
      /* istanbul ignore next */
      cov_9oh7uszaz().b[31][0]++;
      cov_9oh7uszaz().s[92]++;
      console.warn('Azure Application Insights not available');
      /* istanbul ignore next */
      cov_9oh7uszaz().s[93]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_9oh7uszaz().b[31][1]++;
    }
    cov_9oh7uszaz().s[94]++;
    try {
      /* istanbul ignore next */
      cov_9oh7uszaz().s[95]++;
      this.telemetryClient.trackMetric({
        name: metric.name,
        value: metric.value,
        count: metric.count,
        min: metric.min,
        max: metric.max
      });
      /* istanbul ignore next */
      cov_9oh7uszaz().s[96]++;
      console.log(`📈 Tracked metric: ${metric.name} = ${metric.value}`);
    } catch (error) {
      /* istanbul ignore next */
      cov_9oh7uszaz().s[97]++;
      console.error('Failed to track metric:', error);
    }
  }
  /**
   * Track API request duration
   */
  async trackAPIRequest(name, url, duration, success, responseCode) {
    /* istanbul ignore next */
    cov_9oh7uszaz().f[22]++;
    cov_9oh7uszaz().s[98]++;
    await this.initialize();
    /* istanbul ignore next */
    cov_9oh7uszaz().s[99]++;
    if (!this.telemetryClient) {
      /* istanbul ignore next */
      cov_9oh7uszaz().b[32][0]++;
      cov_9oh7uszaz().s[100]++;
      console.warn('Azure Application Insights not available');
      /* istanbul ignore next */
      cov_9oh7uszaz().s[101]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_9oh7uszaz().b[32][1]++;
    }
    cov_9oh7uszaz().s[102]++;
    try {
      /* istanbul ignore next */
      cov_9oh7uszaz().s[103]++;
      this.telemetryClient.trackRequest({
        name,
        url,
        duration,
        resultCode:
        /* istanbul ignore next */
        (cov_9oh7uszaz().b[33][0]++,
        /* istanbul ignore next */
        (cov_9oh7uszaz().b[35][0]++, responseCode === null) ||
        /* istanbul ignore next */
        (cov_9oh7uszaz().b[35][1]++, responseCode === void 0) ?
        /* istanbul ignore next */
        (cov_9oh7uszaz().b[34][0]++, void 0) :
        /* istanbul ignore next */
        (cov_9oh7uszaz().b[34][1]++, responseCode.toString())) ||
        /* istanbul ignore next */
        (cov_9oh7uszaz().b[33][1]++, success ?
        /* istanbul ignore next */
        (cov_9oh7uszaz().b[36][0]++, '200') :
        /* istanbul ignore next */
        (cov_9oh7uszaz().b[36][1]++, '500')),
        success
      });
      /* istanbul ignore next */
      cov_9oh7uszaz().s[104]++;
      console.log(`🌐 Tracked API request: ${name} (${duration}ms)`);
    } catch (error) {
      /* istanbul ignore next */
      cov_9oh7uszaz().s[105]++;
      console.error('Failed to track API request:', error);
    }
  }
  /**
   * Track dependency calls (external services)
   */
  async trackDependency(name, type, data, duration, success) {
    /* istanbul ignore next */
    cov_9oh7uszaz().f[23]++;
    cov_9oh7uszaz().s[106]++;
    await this.initialize();
    /* istanbul ignore next */
    cov_9oh7uszaz().s[107]++;
    if (!this.telemetryClient) {
      /* istanbul ignore next */
      cov_9oh7uszaz().b[37][0]++;
      cov_9oh7uszaz().s[108]++;
      console.warn('Azure Application Insights not available');
      /* istanbul ignore next */
      cov_9oh7uszaz().s[109]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_9oh7uszaz().b[37][1]++;
    }
    cov_9oh7uszaz().s[110]++;
    try {
      /* istanbul ignore next */
      cov_9oh7uszaz().s[111]++;
      this.telemetryClient.trackDependency({
        name,
        dependencyTypeName: type,
        data,
        duration,
        success,
        resultCode: success ?
        /* istanbul ignore next */
        (cov_9oh7uszaz().b[38][0]++, 200) :
        /* istanbul ignore next */
        (cov_9oh7uszaz().b[38][1]++, 500)
      });
      /* istanbul ignore next */
      cov_9oh7uszaz().s[112]++;
      console.log(`🔗 Tracked dependency: ${name} (${duration}ms)`);
    } catch (error) {
      /* istanbul ignore next */
      cov_9oh7uszaz().s[113]++;
      console.error('Failed to track dependency:', error);
    }
  }
  /**
   * Set user context
   */
  async setUserContext(userId, email, properties) {
    /* istanbul ignore next */
    cov_9oh7uszaz().f[24]++;
    cov_9oh7uszaz().s[114]++;
    await this.initialize();
    /* istanbul ignore next */
    cov_9oh7uszaz().s[115]++;
    if (!this.telemetryClient) {
      /* istanbul ignore next */
      cov_9oh7uszaz().b[39][0]++;
      cov_9oh7uszaz().s[116]++;
      console.warn('Azure Application Insights not available');
      /* istanbul ignore next */
      cov_9oh7uszaz().s[117]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_9oh7uszaz().b[39][1]++;
    }
    cov_9oh7uszaz().s[118]++;
    try {
      /* istanbul ignore next */
      cov_9oh7uszaz().s[119]++;
      // Add user context via common properties since API methods vary
      if (this.telemetryClient.commonProperties) {
        /* istanbul ignore next */
        cov_9oh7uszaz().b[40][0]++;
        cov_9oh7uszaz().s[120]++;
        Object.assign(this.telemetryClient.commonProperties, Object.assign({
          userId,
          userEmail: email
        }, properties));
      } else
      /* istanbul ignore next */
      {
        cov_9oh7uszaz().b[40][1]++;
      }
      cov_9oh7uszaz().s[121]++;
      console.log(`👤 Set user context: ${userId}`);
    } catch (error) {
      /* istanbul ignore next */
      cov_9oh7uszaz().s[122]++;
      console.error('Failed to set user context:', error);
    }
  }
  /**
   * Clear user context (on logout)
   */
  async clearUserContext() {
    /* istanbul ignore next */
    cov_9oh7uszaz().f[25]++;
    cov_9oh7uszaz().s[123]++;
    await this.initialize();
    /* istanbul ignore next */
    cov_9oh7uszaz().s[124]++;
    if (!this.telemetryClient) {
      /* istanbul ignore next */
      cov_9oh7uszaz().b[41][0]++;
      cov_9oh7uszaz().s[125]++;
      console.warn('Azure Application Insights not available');
      /* istanbul ignore next */
      cov_9oh7uszaz().s[126]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_9oh7uszaz().b[41][1]++;
    }
    cov_9oh7uszaz().s[127]++;
    try {
      /* istanbul ignore next */
      cov_9oh7uszaz().s[128]++;
      // Remove user-specific properties
      if (this.telemetryClient.commonProperties) {
        /* istanbul ignore next */
        cov_9oh7uszaz().b[42][0]++;
        cov_9oh7uszaz().s[129]++;
        delete this.telemetryClient.commonProperties.userId;
        /* istanbul ignore next */
        cov_9oh7uszaz().s[130]++;
        delete this.telemetryClient.commonProperties.userEmail;
      } else
      /* istanbul ignore next */
      {
        cov_9oh7uszaz().b[42][1]++;
      }
      cov_9oh7uszaz().s[131]++;
      console.log('👤 Cleared user context');
    } catch (error) {
      /* istanbul ignore next */
      cov_9oh7uszaz().s[132]++;
      console.error('Failed to clear user context:', error);
    }
  }
  /**
   * Flush telemetry data immediately
   */
  async flush() {
    /* istanbul ignore next */
    cov_9oh7uszaz().f[26]++;
    cov_9oh7uszaz().s[133]++;
    await this.initialize();
    /* istanbul ignore next */
    cov_9oh7uszaz().s[134]++;
    if (!this.telemetryClient) {
      /* istanbul ignore next */
      cov_9oh7uszaz().b[43][0]++;
      cov_9oh7uszaz().s[135]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_9oh7uszaz().b[43][1]++;
    }
    cov_9oh7uszaz().s[136]++;
    try {
      /* istanbul ignore next */
      cov_9oh7uszaz().s[137]++;
      this.telemetryClient.flush();
      /* istanbul ignore next */
      cov_9oh7uszaz().s[138]++;
      console.log('🔄 Flushed telemetry data');
    } catch (error) {
      /* istanbul ignore next */
      cov_9oh7uszaz().s[139]++;
      console.error('Failed to flush telemetry:', error);
    }
  }
  /**
   * Track business metrics
   */
  async trackBusinessMetric(metricName, value, userId, properties) {
    /* istanbul ignore next */
    cov_9oh7uszaz().f[27]++;
    cov_9oh7uszaz().s[140]++;
    await this.trackEvent({
      name: 'BusinessMetric',
      properties: Object.assign({
        metric: metricName,
        userId:
        /* istanbul ignore next */
        (cov_9oh7uszaz().b[44][0]++, userId) ||
        /* istanbul ignore next */
        (cov_9oh7uszaz().b[44][1]++, 'anonymous'),
        timestamp: new Date().toISOString()
      }, properties),
      metrics: {
        value
      }
    });
  }
  /**
   * Track A/B test participation
   */
  async trackABTestParticipation(testName, variant, userId) {
    /* istanbul ignore next */
    cov_9oh7uszaz().f[28]++;
    cov_9oh7uszaz().s[141]++;
    await this.trackEvent({
      name: 'ABTestParticipation',
      properties: {
        testName,
        variant,
        userId:
        /* istanbul ignore next */
        (cov_9oh7uszaz().b[45][0]++, userId) ||
        /* istanbul ignore next */
        (cov_9oh7uszaz().b[45][1]++, 'anonymous'),
        timestamp: new Date().toISOString()
      }
    });
  }
  /**
   * Track conversion events
   */
  async trackConversion(conversionType, value, userId, properties) {
    /* istanbul ignore next */
    cov_9oh7uszaz().f[29]++;
    cov_9oh7uszaz().s[142]++;
    await this.trackEvent({
      name: 'Conversion',
      properties: Object.assign({
        conversionType,
        userId:
        /* istanbul ignore next */
        (cov_9oh7uszaz().b[46][0]++, userId) ||
        /* istanbul ignore next */
        (cov_9oh7uszaz().b[46][1]++, 'anonymous'),
        timestamp: new Date().toISOString()
      }, properties),
      metrics: value ?
      /* istanbul ignore next */
      (cov_9oh7uszaz().b[47][0]++, {
        value
      }) :
      /* istanbul ignore next */
      (cov_9oh7uszaz().b[47][1]++, undefined)
    });
  }
  /**
   * Health check
   */
  async healthCheck() {
    /* istanbul ignore next */
    cov_9oh7uszaz().f[30]++;
    cov_9oh7uszaz().s[143]++;
    try {
      /* istanbul ignore next */
      cov_9oh7uszaz().s[144]++;
      await this.initialize();
      /* istanbul ignore next */
      cov_9oh7uszaz().s[145]++;
      if (!this.telemetryClient) {
        /* istanbul ignore next */
        cov_9oh7uszaz().b[48][0]++;
        cov_9oh7uszaz().s[146]++;
        return {
          status: 'unhealthy',
          timestamp: new Date()
        };
      } else
      /* istanbul ignore next */
      {
        cov_9oh7uszaz().b[48][1]++;
      }
      // Try to track a test event
      cov_9oh7uszaz().s[147]++;
      await this.trackEvent({
        name: 'HealthCheck',
        properties: {
          timestamp: new Date().toISOString()
        }
      });
      /* istanbul ignore next */
      cov_9oh7uszaz().s[148]++;
      return {
        status: 'healthy',
        timestamp: new Date()
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_9oh7uszaz().s[149]++;
      console.error('Azure Application Insights health check failed:', error);
      /* istanbul ignore next */
      cov_9oh7uszaz().s[150]++;
      return {
        status: 'unhealthy',
        timestamp: new Date()
      };
    }
  }
}
// Export singleton instance
/* istanbul ignore next */
cov_9oh7uszaz().s[151]++;
exports.azureApplicationInsights = new AzureApplicationInsightsService();
/* istanbul ignore next */
cov_9oh7uszaz().s[152]++;
exports.default = exports.azureApplicationInsights;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,