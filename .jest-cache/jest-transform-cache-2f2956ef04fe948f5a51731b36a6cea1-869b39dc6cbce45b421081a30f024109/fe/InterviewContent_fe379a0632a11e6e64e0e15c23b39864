371f29bf14112ed75693db4ac08f26a1
/* istanbul ignore next */
"use strict";
"use client";

/* istanbul ignore next */
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = InterviewContent;
var
/* istanbul ignore next */
_react = require("react");
var
/* istanbul ignore next */
_Agent = _interopRequireDefault(require("@/components/Agent"));
var
/* istanbul ignore next */
_CodeEditorWrapper = require("@/components/CodeEditorWrapper");
var
/* istanbul ignore next */
_InterviewHeader = _interopRequireDefault(require("./InterviewHeader"));
/* istanbul ignore next */
var _jsxRuntime = require("react/jsx-runtime");
function cov_ata7ezltw() {
  var path = "/Users/dikshantvashistha/PrepBettr/app/dashboard/interview/[id]/InterviewContent.tsx";
  var hash = "fa3e6449fbfc6c85d1c26227ce21bac9eb4cdac6";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dikshantvashistha/PrepBettr/app/dashboard/interview/[id]/InterviewContent.tsx",
    statementMap: {
      "0": {
        start: {
          line: 39,
          column: 52
        },
        end: {
          line: 39,
          column: 67
        }
      },
      "1": {
        start: {
          line: 40,
          column: 48
        },
        end: {
          line: 40,
          column: 63
        }
      },
      "2": {
        start: {
          line: 41,
          column: 60
        },
        end: {
          line: 41,
          column: 75
        }
      },
      "3": {
        start: {
          line: 42,
          column: 64
        },
        end: {
          line: 42,
          column: 79
        }
      },
      "4": {
        start: {
          line: 44,
          column: 25
        },
        end: {
          line: 46,
          column: 5
        }
      },
      "5": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 47
        }
      },
      "6": {
        start: {
          line: 48,
          column: 33
        },
        end: {
          line: 75,
          column: 5
        }
      },
      "7": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 74,
          column: 9
        }
      },
      "8": {
        start: {
          line: 50,
          column: 12
        },
        end: {
          line: 50,
          column: 44
        }
      },
      "9": {
        start: {
          line: 53,
          column: 27
        },
        end: {
          line: 61,
          column: 14
        }
      },
      "10": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 64,
          column: 62
        }
      },
      "11": {
        start: {
          line: 64,
          column: 48
        },
        end: {
          line: 64,
          column: 60
        }
      },
      "12": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 66,
          column: 42
        }
      },
      "13": {
        start: {
          line: 67,
          column: 12
        },
        end: {
          line: 67,
          column: 36
        }
      },
      "14": {
        start: {
          line: 70,
          column: 12
        },
        end: {
          line: 70,
          column: 66
        }
      },
      "15": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 71,
          column: 126
        }
      },
      "16": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 73,
          column: 45
        }
      },
      "17": {
        start: {
          line: 77,
          column: 4
        },
        end: {
          line: 128,
          column: 6
        }
      },
      "18": {
        start: {
          line: 111,
          column: 72
        },
        end: {
          line: 111,
          column: 81
        }
      }
    },
    fnMap: {
      "0": {
        name: "InterviewContent",
        decl: {
          start: {
            line: 38,
            column: 24
          },
          end: {
            line: 38,
            column: 40
          }
        },
        loc: {
          start: {
            line: 38,
            column: 85
          },
          end: {
            line: 129,
            column: 1
          }
        },
        line: 38
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 44,
            column: 25
          },
          end: {
            line: 44,
            column: 26
          }
        },
        loc: {
          start: {
            line: 44,
            column: 31
          },
          end: {
            line: 46,
            column: 5
          }
        },
        line: 44
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 48,
            column: 33
          },
          end: {
            line: 48,
            column: 34
          }
        },
        loc: {
          start: {
            line: 48,
            column: 45
          },
          end: {
            line: 75,
            column: 5
          }
        },
        line: 48
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 64,
            column: 39
          },
          end: {
            line: 64,
            column: 40
          }
        },
        loc: {
          start: {
            line: 64,
            column: 48
          },
          end: {
            line: 64,
            column: 60
          }
        },
        line: 64
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 111,
            column: 67
          },
          end: {
            line: 111,
            column: 68
          }
        },
        loc: {
          start: {
            line: 111,
            column: 72
          },
          end: {
            line: 111,
            column: 81
          }
        },
        line: 111
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 92,
            column: 17
          },
          end: {
            line: 101,
            column: 17
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 92,
            column: 17
          },
          end: {
            line: 92,
            column: 32
          }
        }, {
          start: {
            line: 93,
            column: 20
          },
          end: {
            line: 100,
            column: 26
          }
        }],
        line: 92
      },
      "1": {
        loc: {
          start: {
            line: 104,
            column: 17
          },
          end: {
            line: 117,
            column: 17
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 104,
            column: 17
          },
          end: {
            line: 104,
            column: 31
          }
        }, {
          start: {
            line: 105,
            column: 20
          },
          end: {
            line: 116,
            column: 26
          }
        }],
        line: 104
      },
      "2": {
        loc: {
          start: {
            line: 120,
            column: 17
          },
          end: {
            line: 125,
            column: 17
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 120,
            column: 17
          },
          end: {
            line: 120,
            column: 33
          }
        }, {
          start: {
            line: 121,
            column: 20
          },
          end: {
            line: 124,
            column: 26
          }
        }],
        line: 120
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "fa3e6449fbfc6c85d1c26227ce21bac9eb4cdac6"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_ata7ezltw = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_ata7ezltw();
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
function InterviewContent({
  interview,
  user
}) {
  /* istanbul ignore next */
  cov_ata7ezltw().f[0]++;
  const [isEditorExpanded, setIsEditorExpanded] =
  /* istanbul ignore next */
  (cov_ata7ezltw().s[0]++,
  /* istanbul ignore next */
  (0,
  /* istanbul ignore next */
  _react.
  /* istanbul ignore next */
  useState)(false));
  const [sessionStarted, setSessionStarted] =
  /* istanbul ignore next */
  (cov_ata7ezltw().s[1]++,
  /* istanbul ignore next */
  (0,
  /* istanbul ignore next */
  _react.
  /* istanbul ignore next */
  useState)(false));
  const [micPermissionGranted, setMicPermissionGranted] =
  /* istanbul ignore next */
  (cov_ata7ezltw().s[2]++,
  /* istanbul ignore next */
  (0,
  /* istanbul ignore next */
  _react.
  /* istanbul ignore next */
  useState)(false));
  const [isRequestingPermission, setIsRequestingPermission] =
  /* istanbul ignore next */
  (cov_ata7ezltw().s[3]++,
  /* istanbul ignore next */
  (0,
  /* istanbul ignore next */
  _react.
  /* istanbul ignore next */
  useState)(false));
  /* istanbul ignore next */
  cov_ata7ezltw().s[4]++;
  const toggleEditor = () => {
    /* istanbul ignore next */
    cov_ata7ezltw().f[1]++;
    cov_ata7ezltw().s[5]++;
    setIsEditorExpanded(!isEditorExpanded);
  };
  /* istanbul ignore next */
  cov_ata7ezltw().s[6]++;
  const handleStartInterview = async () => {
    /* istanbul ignore next */
    cov_ata7ezltw().f[2]++;
    cov_ata7ezltw().s[7]++;
    try {
      /* istanbul ignore next */
      cov_ata7ezltw().s[8]++;
      setIsRequestingPermission(true);

      // Request microphone permission first
      const stream =
      /* istanbul ignore next */
      (cov_ata7ezltw().s[9]++, await navigator.mediaDevices.getUserMedia({
        audio: {
          echoCancellation: true,
          noiseSuppression: true,
          autoGainControl: false,
          sampleRate: 16000,
          channelCount: 1
        }
      }));

      // Stop the stream immediately as we only needed to check permission
      /* istanbul ignore next */
      cov_ata7ezltw().s[10]++;
      stream.getTracks().forEach(track => {
        /* istanbul ignore next */
        cov_ata7ezltw().f[3]++;
        cov_ata7ezltw().s[11]++;
        return track.stop();
      });
      /* istanbul ignore next */
      cov_ata7ezltw().s[12]++;
      setMicPermissionGranted(true);
      /* istanbul ignore next */
      cov_ata7ezltw().s[13]++;
      setSessionStarted(true);
    } catch (error) {
      /* istanbul ignore next */
      cov_ata7ezltw().s[14]++;
      console.error('Microphone permission denied:', error);
      /* istanbul ignore next */
      cov_ata7ezltw().s[15]++;
      alert('Microphone permission is required for the voice interview. Please allow microphone access and try again.');
    } finally {
      /* istanbul ignore next */
      cov_ata7ezltw().s[16]++;
      setIsRequestingPermission(false);
    }
  };
  /* istanbul ignore next */
  cov_ata7ezltw().s[17]++;
  return /*#__PURE__*/ /* istanbul ignore next */(0, _jsxRuntime.jsxs)(
  /* istanbul ignore next */
  "div",
  /* istanbul ignore next */
  {
    className: "space-y-6 p-6 max-w-7xl mx-auto w-full",
    children: [/*#__PURE__*/
    /* istanbul ignore next */
    (0, _jsxRuntime.jsx)(
    /* istanbul ignore next */
    "div",
    /* istanbul ignore next */
    {
      className: "overflow-hidden",
      children: /*#__PURE__*/
      /* istanbul ignore next */
      (0, _jsxRuntime.jsx)(
      /* istanbul ignore next */
      _InterviewHeader.
      /* istanbul ignore next */
      default,
      /* istanbul ignore next */
      {
        role: interview.role,
        techstack: interview.techstack,
        type: interview.type,
        onToggleEditor: toggleEditor
      })
    }), /*#__PURE__*/
    /* istanbul ignore next */
    (0, _jsxRuntime.jsxs)(
    /* istanbul ignore next */
    "div",
    /* istanbul ignore next */
    {
      className: "space-y-6",
      children: [
      /* istanbul ignore next */
      (cov_ata7ezltw().b[0][0]++, !sessionStarted) &&
      /* istanbul ignore next */
      (cov_ata7ezltw().b[0][1]++, /*#__PURE__*/
      /* istanbul ignore next */
      (0, _jsxRuntime.jsx)(
      /* istanbul ignore next */
      "div",
      /* istanbul ignore next */
      {
        className: "flex justify-center p-4",
        children: /*#__PURE__*/
        /* istanbul ignore next */
        (0, _jsxRuntime.jsx)(
        /* istanbul ignore next */
        "button",
        /* istanbul ignore next */
        {
          onClick: handleStartInterview,
          className: "px-8 py-4 bg-blue-600 hover:bg-blue-700 text-white font-semibold rounded-lg transition-colors duration-200 shadow-lg hover:shadow-xl transform hover:scale-105",
          children: "Start Interview"
        })
      })),
      /* istanbul ignore next */
      (cov_ata7ezltw().b[1][0]++, sessionStarted) &&
      /* istanbul ignore next */
      (cov_ata7ezltw().b[1][1]++, /*#__PURE__*/
      /* istanbul ignore next */
      (0, _jsxRuntime.jsxs)(
      /* istanbul ignore next */
      "div",
      /* istanbul ignore next */
      {
        className: "p-2",
        children: [/*#__PURE__*/
        /* istanbul ignore next */
        (0, _jsxRuntime.jsx)(
        /* istanbul ignore next */
        "h3",
        /* istanbul ignore next */
        {
          className: "text-lg font-semibold text-white mb-4",
          children: "Interview Session"
        }), /*#__PURE__*/
        /* istanbul ignore next */
        (0, _jsxRuntime.jsx)(
        /* istanbul ignore next */
        "div",
        /* istanbul ignore next */
        {
          className: "space-y-4",
          children: /*#__PURE__*/
          /* istanbul ignore next */
          (0, _jsxRuntime.jsx)(
          /* istanbul ignore next */
          _Agent.
          /* istanbul ignore next */
          default,
          /* istanbul ignore next */
          {
            interviewId: interview.id,
            type: interview.type,
            questions: interview.questions.map(q => {
              /* istanbul ignore next */
              cov_ata7ezltw().f[4]++;
              cov_ata7ezltw().s[18]++;
              return q.content;
            }),
            userName: user.name,
            userId: user.id
          })
        })]
      })),
      /* istanbul ignore next */
      (cov_ata7ezltw().b[2][0]++, isEditorExpanded) &&
      /* istanbul ignore next */
      (cov_ata7ezltw().b[2][1]++, /*#__PURE__*/
      /* istanbul ignore next */
      (0, _jsxRuntime.jsxs)(
      /* istanbul ignore next */
      "div",
      /* istanbul ignore next */
      {
        className: "p-2",
        children: [/*#__PURE__*/
        /* istanbul ignore next */
        (0, _jsxRuntime.jsx)(
        /* istanbul ignore next */
        "h3",
        /* istanbul ignore next */
        {
          className: "text-lg font-semibold text-white mb-4",
          children: "Code Editor"
        }), /*#__PURE__*/
        /* istanbul ignore next */
        (0, _jsxRuntime.jsx)(
        /* istanbul ignore next */
        _CodeEditorWrapper.
        /* istanbul ignore next */
        CodeEditorWrapper,
        /* istanbul ignore next */
        {})]
      }))]
    })]
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,