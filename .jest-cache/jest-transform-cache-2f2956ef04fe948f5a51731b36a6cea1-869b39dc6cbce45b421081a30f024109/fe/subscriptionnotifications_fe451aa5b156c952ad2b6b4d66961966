a9e4e59e38d7ff14f5a252f308baf70c
/* istanbul ignore next */
function cov_kixbyks9r() {
  var path = "/Users/dikshantvashistha/PrepBettr/lib/subscription-notifications.js";
  var hash = "6a0fcd6584700149a246bffc7d988ad4dda380c0";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dikshantvashistha/PrepBettr/lib/subscription-notifications.js",
    statementMap: {
      "0": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 12
        }
      },
      "1": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 15,
          column: 35
        }
      },
      "2": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 39
        }
      },
      "3": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 17,
          column: 40
        }
      },
      "4": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 18,
          column: 38
        }
      },
      "5": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 38,
          column: 6
        }
      },
      "6": {
        start: {
          line: 40,
          column: 4
        },
        end: {
          line: 40,
          column: 40
        }
      },
      "7": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 45,
          column: 90
        }
      },
      "8": {
        start: {
          line: 46,
          column: 4
        },
        end: {
          line: 46,
          column: 94
        }
      },
      "9": {
        start: {
          line: 47,
          column: 4
        },
        end: {
          line: 47,
          column: 91
        }
      },
      "10": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 48,
          column: 94
        }
      },
      "11": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 51,
          column: 33
        }
      },
      "12": {
        start: {
          line: 53,
          column: 4
        },
        end: {
          line: 53,
          column: 64
        }
      },
      "13": {
        start: {
          line: 60,
          column: 4
        },
        end: {
          line: 120,
          column: 5
        }
      },
      "14": {
        start: {
          line: 67,
          column: 10
        },
        end: {
          line: 67,
          column: 21
        }
      },
      "15": {
        start: {
          line: 69,
          column: 6
        },
        end: {
          line: 69,
          column: 83
        }
      },
      "16": {
        start: {
          line: 72,
          column: 22
        },
        end: {
          line: 81,
          column: 7
        }
      },
      "17": {
        start: {
          line: 83,
          column: 6
        },
        end: {
          line: 87,
          column: 7
        }
      },
      "18": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 84,
          column: 85
        }
      },
      "19": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 85,
          column: 54
        }
      },
      "20": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 86,
          column: 15
        }
      },
      "21": {
        start: {
          line: 90,
          column: 28
        },
        end: {
          line: 90,
          column: 74
        }
      },
      "22": {
        start: {
          line: 91,
          column: 28
        },
        end: {
          line: 91,
          column: 38
        }
      },
      "23": {
        start: {
          line: 92,
          column: 6
        },
        end: {
          line: 92,
          column: 69
        }
      },
      "24": {
        start: {
          line: 94,
          column: 6
        },
        end: {
          line: 94,
          column: 27
        }
      },
      "25": {
        start: {
          line: 95,
          column: 6
        },
        end: {
          line: 95,
          column: 46
        }
      },
      "26": {
        start: {
          line: 96,
          column: 6
        },
        end: {
          line: 96,
          column: 41
        }
      },
      "27": {
        start: {
          line: 98,
          column: 6
        },
        end: {
          line: 98,
          column: 56
        }
      },
      "28": {
        start: {
          line: 101,
          column: 6
        },
        end: {
          line: 101,
          column: 61
        }
      },
      "29": {
        start: {
          line: 104,
          column: 6
        },
        end: {
          line: 104,
          column: 59
        }
      },
      "30": {
        start: {
          line: 107,
          column: 6
        },
        end: {
          line: 107,
          column: 65
        }
      },
      "31": {
        start: {
          line: 110,
          column: 6
        },
        end: {
          line: 115,
          column: 9
        }
      },
      "32": {
        start: {
          line: 118,
          column: 6
        },
        end: {
          line: 118,
          column: 62
        }
      },
      "33": {
        start: {
          line: 119,
          column: 6
        },
        end: {
          line: 119,
          column: 18
        }
      },
      "34": {
        start: {
          line: 127,
          column: 4
        },
        end: {
          line: 152,
          column: 5
        }
      },
      "35": {
        start: {
          line: 128,
          column: 29
        },
        end: {
          line: 128,
          column: 88
        }
      },
      "36": {
        start: {
          line: 130,
          column: 24
        },
        end: {
          line: 137,
          column: 7
        }
      },
      "37": {
        start: {
          line: 139,
          column: 6
        },
        end: {
          line: 139,
          column: 61
        }
      },
      "38": {
        start: {
          line: 142,
          column: 6
        },
        end: {
          line: 145,
          column: 9
        }
      },
      "39": {
        start: {
          line: 147,
          column: 6
        },
        end: {
          line: 147,
          column: 115
        }
      },
      "40": {
        start: {
          line: 150,
          column: 6
        },
        end: {
          line: 150,
          column: 59
        }
      },
      "41": {
        start: {
          line: 151,
          column: 6
        },
        end: {
          line: 151,
          column: 18
        }
      },
      "42": {
        start: {
          line: 159,
          column: 4
        },
        end: {
          line: 179,
          column: 5
        }
      },
      "43": {
        start: {
          line: 160,
          column: 26
        },
        end: {
          line: 167,
          column: 7
        }
      },
      "44": {
        start: {
          line: 169,
          column: 6
        },
        end: {
          line: 169,
          column: 61
        }
      },
      "45": {
        start: {
          line: 172,
          column: 6
        },
        end: {
          line: 172,
          column: 64
        }
      },
      "46": {
        start: {
          line: 174,
          column: 6
        },
        end: {
          line: 174,
          column: 81
        }
      },
      "47": {
        start: {
          line: 177,
          column: 6
        },
        end: {
          line: 177,
          column: 63
        }
      },
      "48": {
        start: {
          line: 178,
          column: 6
        },
        end: {
          line: 178,
          column: 18
        }
      },
      "49": {
        start: {
          line: 186,
          column: 4
        },
        end: {
          line: 202,
          column: 5
        }
      },
      "50": {
        start: {
          line: 187,
          column: 34
        },
        end: {
          line: 187,
          column: 84
        }
      },
      "51": {
        start: {
          line: 189,
          column: 6
        },
        end: {
          line: 198,
          column: 7
        }
      },
      "52": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 197,
          column: 9
        }
      },
      "53": {
        start: {
          line: 191,
          column: 35
        },
        end: {
          line: 191,
          column: 89
        }
      },
      "54": {
        start: {
          line: 194,
          column: 10
        },
        end: {
          line: 196,
          column: 11
        }
      },
      "55": {
        start: {
          line: 195,
          column: 12
        },
        end: {
          line: 195,
          column: 87
        }
      },
      "56": {
        start: {
          line: 201,
          column: 6
        },
        end: {
          line: 201,
          column: 63
        }
      },
      "57": {
        start: {
          line: 209,
          column: 4
        },
        end: {
          line: 225,
          column: 5
        }
      },
      "58": {
        start: {
          line: 210,
          column: 36
        },
        end: {
          line: 210,
          column: 98
        }
      },
      "59": {
        start: {
          line: 212,
          column: 6
        },
        end: {
          line: 221,
          column: 7
        }
      },
      "60": {
        start: {
          line: 213,
          column: 8
        },
        end: {
          line: 220,
          column: 9
        }
      },
      "61": {
        start: {
          line: 214,
          column: 36
        },
        end: {
          line: 214,
          column: 82
        }
      },
      "62": {
        start: {
          line: 217,
          column: 10
        },
        end: {
          line: 219,
          column: 11
        }
      },
      "63": {
        start: {
          line: 218,
          column: 12
        },
        end: {
          line: 218,
          column: 84
        }
      },
      "64": {
        start: {
          line: 224,
          column: 6
        },
        end: {
          line: 224,
          column: 68
        }
      },
      "65": {
        start: {
          line: 232,
          column: 4
        },
        end: {
          line: 243,
          column: 5
        }
      },
      "66": {
        start: {
          line: 233,
          column: 18
        },
        end: {
          line: 233,
          column: 28
        }
      },
      "67": {
        start: {
          line: 235,
          column: 6
        },
        end: {
          line: 239,
          column: 7
        }
      },
      "68": {
        start: {
          line: 236,
          column: 8
        },
        end: {
          line: 238,
          column: 9
        }
      },
      "69": {
        start: {
          line: 237,
          column: 10
        },
        end: {
          line: 237,
          column: 68
        }
      },
      "70": {
        start: {
          line: 242,
          column: 6
        },
        end: {
          line: 242,
          column: 64
        }
      },
      "71": {
        start: {
          line: 250,
          column: 4
        },
        end: {
          line: 267,
          column: 5
        }
      },
      "72": {
        start: {
          line: 251,
          column: 6
        },
        end: {
          line: 251,
          column: 103
        }
      },
      "73": {
        start: {
          line: 255,
          column: 27
        },
        end: {
          line: 255,
          column: 46
        }
      },
      "74": {
        start: {
          line: 257,
          column: 6
        },
        end: {
          line: 263,
          column: 7
        }
      },
      "75": {
        start: {
          line: 259,
          column: 8
        },
        end: {
          line: 259,
          column: 72
        }
      },
      "76": {
        start: {
          line: 262,
          column: 8
        },
        end: {
          line: 262,
          column: 72
        }
      },
      "77": {
        start: {
          line: 266,
          column: 6
        },
        end: {
          line: 266,
          column: 62
        }
      },
      "78": {
        start: {
          line: 274,
          column: 4
        },
        end: {
          line: 308,
          column: 5
        }
      },
      "79": {
        start: {
          line: 275,
          column: 6
        },
        end: {
          line: 275,
          column: 81
        }
      },
      "80": {
        start: {
          line: 278,
          column: 6
        },
        end: {
          line: 278,
          column: 48
        }
      },
      "81": {
        start: {
          line: 281,
          column: 6
        },
        end: {
          line: 281,
          column: 53
        }
      },
      "82": {
        start: {
          line: 284,
          column: 6
        },
        end: {
          line: 284,
          column: 51
        }
      },
      "83": {
        start: {
          line: 287,
          column: 6
        },
        end: {
          line: 290,
          column: 9
        }
      },
      "84": {
        start: {
          line: 293,
          column: 6
        },
        end: {
          line: 293,
          column: 75
        }
      },
      "85": {
        start: {
          line: 296,
          column: 6
        },
        end: {
          line: 302,
          column: 9
        }
      },
      "86": {
        start: {
          line: 304,
          column: 6
        },
        end: {
          line: 304,
          column: 91
        }
      },
      "87": {
        start: {
          line: 307,
          column: 6
        },
        end: {
          line: 307,
          column: 68
        }
      },
      "88": {
        start: {
          line: 315,
          column: 4
        },
        end: {
          line: 347,
          column: 5
        }
      },
      "89": {
        start: {
          line: 316,
          column: 6
        },
        end: {
          line: 316,
          column: 99
        }
      },
      "90": {
        start: {
          line: 318,
          column: 6
        },
        end: {
          line: 331,
          column: 7
        }
      },
      "91": {
        start: {
          line: 319,
          column: 8
        },
        end: {
          line: 319,
          column: 54
        }
      },
      "92": {
        start: {
          line: 322,
          column: 30
        },
        end: {
          line: 322,
          column: 76
        }
      },
      "93": {
        start: {
          line: 323,
          column: 30
        },
        end: {
          line: 323,
          column: 40
        }
      },
      "94": {
        start: {
          line: 324,
          column: 8
        },
        end: {
          line: 324,
          column: 71
        }
      },
      "95": {
        start: {
          line: 326,
          column: 8
        },
        end: {
          line: 326,
          column: 48
        }
      },
      "96": {
        start: {
          line: 327,
          column: 8
        },
        end: {
          line: 327,
          column: 58
        }
      },
      "97": {
        start: {
          line: 330,
          column: 8
        },
        end: {
          line: 330,
          column: 82
        }
      },
      "98": {
        start: {
          line: 334,
          column: 6
        },
        end: {
          line: 341,
          column: 9
        }
      },
      "99": {
        start: {
          line: 343,
          column: 6
        },
        end: {
          line: 343,
          column: 90
        }
      },
      "100": {
        start: {
          line: 346,
          column: 6
        },
        end: {
          line: 346,
          column: 68
        }
      },
      "101": {
        start: {
          line: 354,
          column: 4
        },
        end: {
          line: 385,
          column: 5
        }
      },
      "102": {
        start: {
          line: 355,
          column: 33
        },
        end: {
          line: 355,
          column: 42
        }
      },
      "103": {
        start: {
          line: 356,
          column: 6
        },
        end: {
          line: 356,
          column: 84
        }
      },
      "104": {
        start: {
          line: 359,
          column: 6
        },
        end: {
          line: 359,
          column: 48
        }
      },
      "105": {
        start: {
          line: 362,
          column: 6
        },
        end: {
          line: 362,
          column: 53
        }
      },
      "106": {
        start: {
          line: 365,
          column: 6
        },
        end: {
          line: 369,
          column: 9
        }
      },
      "107": {
        start: {
          line: 372,
          column: 6
        },
        end: {
          line: 372,
          column: 83
        }
      },
      "108": {
        start: {
          line: 377,
          column: 6
        },
        end: {
          line: 381,
          column: 9
        }
      },
      "109": {
        start: {
          line: 384,
          column: 6
        },
        end: {
          line: 384,
          column: 66
        }
      },
      "110": {
        start: {
          line: 392,
          column: 25
        },
        end: {
          line: 404,
          column: 5
        }
      },
      "111": {
        start: {
          line: 406,
          column: 4
        },
        end: {
          line: 406,
          column: 47
        }
      },
      "112": {
        start: {
          line: 410,
          column: 25
        },
        end: {
          line: 421,
          column: 5
        }
      },
      "113": {
        start: {
          line: 423,
          column: 4
        },
        end: {
          line: 423,
          column: 47
        }
      },
      "114": {
        start: {
          line: 427,
          column: 25
        },
        end: {
          line: 438,
          column: 5
        }
      },
      "115": {
        start: {
          line: 440,
          column: 4
        },
        end: {
          line: 440,
          column: 47
        }
      },
      "116": {
        start: {
          line: 444,
          column: 25
        },
        end: {
          line: 454,
          column: 5
        }
      },
      "117": {
        start: {
          line: 456,
          column: 4
        },
        end: {
          line: 456,
          column: 47
        }
      },
      "118": {
        start: {
          line: 460,
          column: 25
        },
        end: {
          line: 472,
          column: 5
        }
      },
      "119": {
        start: {
          line: 474,
          column: 4
        },
        end: {
          line: 474,
          column: 47
        }
      },
      "120": {
        start: {
          line: 478,
          column: 25
        },
        end: {
          line: 489,
          column: 5
        }
      },
      "121": {
        start: {
          line: 491,
          column: 4
        },
        end: {
          line: 491,
          column: 47
        }
      },
      "122": {
        start: {
          line: 495,
          column: 4
        },
        end: {
          line: 514,
          column: 5
        }
      },
      "123": {
        start: {
          line: 496,
          column: 22
        },
        end: {
          line: 496,
          column: 63
        }
      },
      "124": {
        start: {
          line: 497,
          column: 6
        },
        end: {
          line: 499,
          column: 7
        }
      },
      "125": {
        start: {
          line: 498,
          column: 8
        },
        end: {
          line: 498,
          column: 15
        }
      },
      "126": {
        start: {
          line: 501,
          column: 19
        },
        end: {
          line: 501,
          column: 46
        }
      },
      "127": {
        start: {
          line: 502,
          column: 31
        },
        end: {
          line: 502,
          column: 58
        }
      },
      "128": {
        start: {
          line: 503,
          column: 6
        },
        end: {
          line: 503,
          column: 70
        }
      },
      "129": {
        start: {
          line: 506,
          column: 6
        },
        end: {
          line: 510,
          column: 50
        }
      },
      "130": {
        start: {
          line: 507,
          column: 8
        },
        end: {
          line: 507,
          column: 70
        }
      },
      "131": {
        start: {
          line: 509,
          column: 8
        },
        end: {
          line: 509,
          column: 78
        }
      },
      "132": {
        start: {
          line: 513,
          column: 6
        },
        end: {
          line: 513,
          column: 69
        }
      },
      "133": {
        start: {
          line: 518,
          column: 4
        },
        end: {
          line: 542,
          column: 5
        }
      },
      "134": {
        start: {
          line: 519,
          column: 22
        },
        end: {
          line: 519,
          column: 63
        }
      },
      "135": {
        start: {
          line: 520,
          column: 6
        },
        end: {
          line: 520,
          column: 27
        }
      },
      "136": {
        start: {
          line: 520,
          column: 20
        },
        end: {
          line: 520,
          column: 27
        }
      },
      "137": {
        start: {
          line: 522,
          column: 19
        },
        end: {
          line: 522,
          column: 46
        }
      },
      "138": {
        start: {
          line: 523,
          column: 27
        },
        end: {
          line: 535,
          column: 7
        }
      },
      "139": {
        start: {
          line: 537,
          column: 6
        },
        end: {
          line: 537,
          column: 49
        }
      },
      "140": {
        start: {
          line: 538,
          column: 6
        },
        end: {
          line: 538,
          column: 42
        }
      },
      "141": {
        start: {
          line: 541,
          column: 6
        },
        end: {
          line: 541,
          column: 66
        }
      },
      "142": {
        start: {
          line: 546,
          column: 21
        },
        end: {
          line: 551,
          column: 5
        }
      },
      "143": {
        start: {
          line: 552,
          column: 4
        },
        end: {
          line: 552,
          column: 60
        }
      },
      "144": {
        start: {
          line: 559,
          column: 4
        },
        end: {
          line: 573,
          column: 5
        }
      },
      "145": {
        start: {
          line: 560,
          column: 29
        },
        end: {
          line: 560,
          column: 58
        }
      },
      "146": {
        start: {
          line: 561,
          column: 6
        },
        end: {
          line: 561,
          column: 39
        }
      },
      "147": {
        start: {
          line: 562,
          column: 6
        },
        end: {
          line: 562,
          column: 37
        }
      },
      "148": {
        start: {
          line: 563,
          column: 6
        },
        end: {
          line: 563,
          column: 42
        }
      },
      "149": {
        start: {
          line: 565,
          column: 6
        },
        end: {
          line: 565,
          column: 63
        }
      },
      "150": {
        start: {
          line: 569,
          column: 6
        },
        end: {
          line: 569,
          column: 51
        }
      },
      "151": {
        start: {
          line: 572,
          column: 6
        },
        end: {
          line: 572,
          column: 59
        }
      },
      "152": {
        start: {
          line: 577,
          column: 4
        },
        end: {
          line: 594,
          column: 5
        }
      },
      "153": {
        start: {
          line: 578,
          column: 6
        },
        end: {
          line: 578,
          column: 111
        }
      },
      "154": {
        start: {
          line: 582,
          column: 6
        },
        end: {
          line: 582,
          column: 41
        }
      },
      "155": {
        start: {
          line: 585,
          column: 6
        },
        end: {
          line: 585,
          column: 35
        }
      },
      "156": {
        start: {
          line: 586,
          column: 6
        },
        end: {
          line: 586,
          column: 39
        }
      },
      "157": {
        start: {
          line: 588,
          column: 6
        },
        end: {
          line: 588,
          column: 51
        }
      },
      "158": {
        start: {
          line: 591,
          column: 6
        },
        end: {
          line: 591,
          column: 61
        }
      },
      "159": {
        start: {
          line: 592,
          column: 6
        },
        end: {
          line: 592,
          column: 37
        }
      },
      "160": {
        start: {
          line: 593,
          column: 6
        },
        end: {
          line: 593,
          column: 41
        }
      },
      "161": {
        start: {
          line: 598,
          column: 20
        },
        end: {
          line: 606,
          column: 5
        }
      },
      "162": {
        start: {
          line: 608,
          column: 4
        },
        end: {
          line: 608,
          column: 71
        }
      },
      "163": {
        start: {
          line: 615,
          column: 20
        },
        end: {
          line: 615,
          column: 39
        }
      },
      "164": {
        start: {
          line: 616,
          column: 4
        },
        end: {
          line: 616,
          column: 69
        }
      },
      "165": {
        start: {
          line: 617,
          column: 4
        },
        end: {
          line: 617,
          column: 19
        }
      },
      "166": {
        start: {
          line: 621,
          column: 16
        },
        end: {
          line: 621,
          column: 26
        }
      },
      "167": {
        start: {
          line: 622,
          column: 21
        },
        end: {
          line: 622,
          column: 47
        }
      },
      "168": {
        start: {
          line: 623,
          column: 4
        },
        end: {
          line: 623,
          column: 55
        }
      },
      "169": {
        start: {
          line: 627,
          column: 4
        },
        end: {
          line: 627,
          column: 80
        }
      },
      "170": {
        start: {
          line: 632,
          column: 4
        },
        end: {
          line: 636,
          column: 23
        }
      },
      "171": {
        start: {
          line: 633,
          column: 6
        },
        end: {
          line: 633,
          column: 41
        }
      },
      "172": {
        start: {
          line: 634,
          column: 6
        },
        end: {
          line: 634,
          column: 40
        }
      },
      "173": {
        start: {
          line: 635,
          column: 6
        },
        end: {
          line: 635,
          column: 44
        }
      },
      "174": {
        start: {
          line: 639,
          column: 4
        },
        end: {
          line: 641,
          column: 28
        }
      },
      "175": {
        start: {
          line: 640,
          column: 6
        },
        end: {
          line: 640,
          column: 35
        }
      },
      "176": {
        start: {
          line: 645,
          column: 19
        },
        end: {
          line: 645,
          column: 55
        }
      },
      "177": {
        start: {
          line: 648,
          column: 4
        },
        end: {
          line: 652,
          column: 5
        }
      },
      "178": {
        start: {
          line: 649,
          column: 6
        },
        end: {
          line: 651,
          column: 7
        }
      },
      "179": {
        start: {
          line: 650,
          column: 8
        },
        end: {
          line: 650,
          column: 42
        }
      },
      "180": {
        start: {
          line: 655,
          column: 4
        },
        end: {
          line: 659,
          column: 5
        }
      },
      "181": {
        start: {
          line: 656,
          column: 6
        },
        end: {
          line: 658,
          column: 7
        }
      },
      "182": {
        start: {
          line: 657,
          column: 8
        },
        end: {
          line: 657,
          column: 55
        }
      },
      "183": {
        start: {
          line: 661,
          column: 4
        },
        end: {
          line: 661,
          column: 68
        }
      },
      "184": {
        start: {
          line: 669,
          column: 4
        },
        end: {
          line: 669,
          column: 94
        }
      },
      "185": {
        start: {
          line: 674,
          column: 4
        },
        end: {
          line: 674,
          column: 61
        }
      },
      "186": {
        start: {
          line: 675,
          column: 4
        },
        end: {
          line: 675,
          column: 56
        }
      },
      "187": {
        start: {
          line: 676,
          column: 4
        },
        end: {
          line: 676,
          column: 59
        }
      },
      "188": {
        start: {
          line: 681,
          column: 4
        },
        end: {
          line: 681,
          column: 41
        }
      },
      "189": {
        start: {
          line: 686,
          column: 4
        },
        end: {
          line: 686,
          column: 61
        }
      },
      "190": {
        start: {
          line: 687,
          column: 4
        },
        end: {
          line: 687,
          column: 56
        }
      },
      "191": {
        start: {
          line: 688,
          column: 4
        },
        end: {
          line: 688,
          column: 59
        }
      },
      "192": {
        start: {
          line: 695,
          column: 4
        },
        end: {
          line: 695,
          column: 55
        }
      },
      "193": {
        start: {
          line: 699,
          column: 4
        },
        end: {
          line: 699,
          column: 50
        }
      },
      "194": {
        start: {
          line: 703,
          column: 4
        },
        end: {
          line: 703,
          column: 53
        }
      },
      "195": {
        start: {
          line: 707,
          column: 26
        },
        end: {
          line: 709,
          column: 48
        }
      },
      "196": {
        start: {
          line: 708,
          column: 19
        },
        end: {
          line: 708,
          column: 54
        }
      },
      "197": {
        start: {
          line: 709,
          column: 22
        },
        end: {
          line: 709,
          column: 47
        }
      },
      "198": {
        start: {
          line: 711,
          column: 4
        },
        end: {
          line: 711,
          column: 25
        }
      },
      "199": {
        start: {
          line: 716,
          column: 28
        },
        end: {
          line: 716,
          column: 65
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 13,
            column: 2
          },
          end: {
            line: 13,
            column: 3
          }
        },
        loc: {
          start: {
            line: 13,
            column: 16
          },
          end: {
            line: 41,
            column: 3
          }
        },
        line: 13
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 43,
            column: 2
          },
          end: {
            line: 43,
            column: 3
          }
        },
        loc: {
          start: {
            line: 43,
            column: 33
          },
          end: {
            line: 54,
            column: 3
          }
        },
        line: 43
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 59,
            column: 2
          },
          end: {
            line: 59,
            column: 3
          }
        },
        loc: {
          start: {
            line: 59,
            column: 42
          },
          end: {
            line: 121,
            column: 3
          }
        },
        line: 59
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 126,
            column: 2
          },
          end: {
            line: 126,
            column: 3
          }
        },
        loc: {
          start: {
            line: 126,
            column: 52
          },
          end: {
            line: 153,
            column: 3
          }
        },
        line: 126
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 158,
            column: 2
          },
          end: {
            line: 158,
            column: 3
          }
        },
        loc: {
          start: {
            line: 158,
            column: 56
          },
          end: {
            line: 180,
            column: 3
          }
        },
        line: 158
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 185,
            column: 2
          },
          end: {
            line: 185,
            column: 3
          }
        },
        loc: {
          start: {
            line: 185,
            column: 31
          },
          end: {
            line: 203,
            column: 3
          }
        },
        line: 185
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 208,
            column: 2
          },
          end: {
            line: 208,
            column: 3
          }
        },
        loc: {
          start: {
            line: 208,
            column: 35
          },
          end: {
            line: 226,
            column: 3
          }
        },
        line: 208
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 231,
            column: 2
          },
          end: {
            line: 231,
            column: 3
          }
        },
        loc: {
          start: {
            line: 231,
            column: 32
          },
          end: {
            line: 244,
            column: 3
          }
        },
        line: 231
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 249,
            column: 2
          },
          end: {
            line: 249,
            column: 3
          }
        },
        loc: {
          start: {
            line: 249,
            column: 55
          },
          end: {
            line: 268,
            column: 3
          }
        },
        line: 249
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 273,
            column: 2
          },
          end: {
            line: 273,
            column: 3
          }
        },
        loc: {
          start: {
            line: 273,
            column: 61
          },
          end: {
            line: 309,
            column: 3
          }
        },
        line: 273
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 314,
            column: 2
          },
          end: {
            line: 314,
            column: 3
          }
        },
        loc: {
          start: {
            line: 314,
            column: 61
          },
          end: {
            line: 348,
            column: 3
          }
        },
        line: 314
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 353,
            column: 2
          },
          end: {
            line: 353,
            column: 3
          }
        },
        loc: {
          start: {
            line: 353,
            column: 43
          },
          end: {
            line: 386,
            column: 3
          }
        },
        line: 353
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 391,
            column: 2
          },
          end: {
            line: 391,
            column: 3
          }
        },
        loc: {
          start: {
            line: 391,
            column: 50
          },
          end: {
            line: 407,
            column: 3
          }
        },
        line: 391
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 409,
            column: 2
          },
          end: {
            line: 409,
            column: 3
          }
        },
        loc: {
          start: {
            line: 409,
            column: 72
          },
          end: {
            line: 424,
            column: 3
          }
        },
        line: 409
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 426,
            column: 2
          },
          end: {
            line: 426,
            column: 3
          }
        },
        loc: {
          start: {
            line: 426,
            column: 69
          },
          end: {
            line: 441,
            column: 3
          }
        },
        line: 426
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 443,
            column: 2
          },
          end: {
            line: 443,
            column: 3
          }
        },
        loc: {
          start: {
            line: 443,
            column: 66
          },
          end: {
            line: 457,
            column: 3
          }
        },
        line: 443
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 459,
            column: 2
          },
          end: {
            line: 459,
            column: 3
          }
        },
        loc: {
          start: {
            line: 459,
            column: 71
          },
          end: {
            line: 475,
            column: 3
          }
        },
        line: 459
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 477,
            column: 2
          },
          end: {
            line: 477,
            column: 3
          }
        },
        loc: {
          start: {
            line: 477,
            column: 74
          },
          end: {
            line: 492,
            column: 3
          }
        },
        line: 477
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 494,
            column: 2
          },
          end: {
            line: 494,
            column: 3
          }
        },
        loc: {
          start: {
            line: 494,
            column: 63
          },
          end: {
            line: 515,
            column: 3
          }
        },
        line: 494
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 506,
            column: 17
          },
          end: {
            line: 506,
            column: 18
          }
        },
        loc: {
          start: {
            line: 506,
            column: 29
          },
          end: {
            line: 510,
            column: 7
          }
        },
        line: 506
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 517,
            column: 2
          },
          end: {
            line: 517,
            column: 3
          }
        },
        loc: {
          start: {
            line: 517,
            column: 59
          },
          end: {
            line: 543,
            column: 3
          }
        },
        line: 517
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 545,
            column: 2
          },
          end: {
            line: 545,
            column: 3
          }
        },
        loc: {
          start: {
            line: 545,
            column: 26
          },
          end: {
            line: 553,
            column: 3
          }
        },
        line: 545
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 558,
            column: 2
          },
          end: {
            line: 558,
            column: 3
          }
        },
        loc: {
          start: {
            line: 558,
            column: 40
          },
          end: {
            line: 574,
            column: 3
          }
        },
        line: 558
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 576,
            column: 2
          },
          end: {
            line: 576,
            column: 3
          }
        },
        loc: {
          start: {
            line: 576,
            column: 42
          },
          end: {
            line: 595,
            column: 3
          }
        },
        line: 576
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 597,
            column: 2
          },
          end: {
            line: 597,
            column: 3
          }
        },
        loc: {
          start: {
            line: 597,
            column: 32
          },
          end: {
            line: 609,
            column: 3
          }
        },
        line: 597
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 614,
            column: 2
          },
          end: {
            line: 614,
            column: 3
          }
        },
        loc: {
          start: {
            line: 614,
            column: 37
          },
          end: {
            line: 618,
            column: 3
          }
        },
        line: 614
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 620,
            column: 2
          },
          end: {
            line: 620,
            column: 3
          }
        },
        loc: {
          start: {
            line: 620,
            column: 33
          },
          end: {
            line: 624,
            column: 3
          }
        },
        line: 620
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 626,
            column: 2
          },
          end: {
            line: 626,
            column: 3
          }
        },
        loc: {
          start: {
            line: 626,
            column: 27
          },
          end: {
            line: 628,
            column: 3
          }
        },
        line: 626
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 630,
            column: 2
          },
          end: {
            line: 630,
            column: 3
          }
        },
        loc: {
          start: {
            line: 630,
            column: 26
          },
          end: {
            line: 642,
            column: 3
          }
        },
        line: 630
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 632,
            column: 16
          },
          end: {
            line: 632,
            column: 17
          }
        },
        loc: {
          start: {
            line: 632,
            column: 28
          },
          end: {
            line: 636,
            column: 5
          }
        },
        line: 632
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 639,
            column: 16
          },
          end: {
            line: 639,
            column: 17
          }
        },
        loc: {
          start: {
            line: 639,
            column: 22
          },
          end: {
            line: 641,
            column: 5
          }
        },
        line: 639
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 644,
            column: 2
          },
          end: {
            line: 644,
            column: 3
          }
        },
        loc: {
          start: {
            line: 644,
            column: 26
          },
          end: {
            line: 662,
            column: 3
          }
        },
        line: 644
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 667,
            column: 2
          },
          end: {
            line: 667,
            column: 3
          }
        },
        loc: {
          start: {
            line: 667,
            column: 35
          },
          end: {
            line: 670,
            column: 3
          }
        },
        line: 667
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 672,
            column: 2
          },
          end: {
            line: 672,
            column: 3
          }
        },
        loc: {
          start: {
            line: 672,
            column: 37
          },
          end: {
            line: 677,
            column: 3
          }
        },
        line: 672
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 679,
            column: 2
          },
          end: {
            line: 679,
            column: 3
          }
        },
        loc: {
          start: {
            line: 679,
            column: 29
          },
          end: {
            line: 682,
            column: 3
          }
        },
        line: 679
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 684,
            column: 2
          },
          end: {
            line: 684,
            column: 3
          }
        },
        loc: {
          start: {
            line: 684,
            column: 37
          },
          end: {
            line: 689,
            column: 3
          }
        },
        line: 684
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 694,
            column: 2
          },
          end: {
            line: 694,
            column: 3
          }
        },
        loc: {
          start: {
            line: 694,
            column: 45
          },
          end: {
            line: 696,
            column: 3
          }
        },
        line: 694
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 698,
            column: 2
          },
          end: {
            line: 698,
            column: 3
          }
        },
        loc: {
          start: {
            line: 698,
            column: 39
          },
          end: {
            line: 700,
            column: 3
          }
        },
        line: 698
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 702,
            column: 2
          },
          end: {
            line: 702,
            column: 3
          }
        },
        loc: {
          start: {
            line: 702,
            column: 41
          },
          end: {
            line: 704,
            column: 3
          }
        },
        line: 702
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 706,
            column: 2
          },
          end: {
            line: 706,
            column: 3
          }
        },
        loc: {
          start: {
            line: 706,
            column: 47
          },
          end: {
            line: 712,
            column: 3
          }
        },
        line: 706
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 708,
            column: 14
          },
          end: {
            line: 708,
            column: 15
          }
        },
        loc: {
          start: {
            line: 708,
            column: 19
          },
          end: {
            line: 708,
            column: 54
          }
        },
        line: 708
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 709,
            column: 12
          },
          end: {
            line: 709,
            column: 13
          }
        },
        loc: {
          start: {
            line: 709,
            column: 22
          },
          end: {
            line: 709,
            column: 47
          }
        },
        line: 709
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 72,
            column: 22
          },
          end: {
            line: 81,
            column: 7
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 72,
            column: 22
          },
          end: {
            line: 72,
            column: 60
          }
        }, {
          start: {
            line: 72,
            column: 64
          },
          end: {
            line: 81,
            column: 7
          }
        }],
        line: 72
      },
      "1": {
        loc: {
          start: {
            line: 83,
            column: 6
          },
          end: {
            line: 87,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 83,
            column: 6
          },
          end: {
            line: 87,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 83
      },
      "2": {
        loc: {
          start: {
            line: 190,
            column: 8
          },
          end: {
            line: 197,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 190,
            column: 8
          },
          end: {
            line: 197,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 190
      },
      "3": {
        loc: {
          start: {
            line: 190,
            column: 12
          },
          end: {
            line: 190,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 190,
            column: 12
          },
          end: {
            line: 190,
            column: 44
          }
        }, {
          start: {
            line: 190,
            column: 48
          },
          end: {
            line: 190,
            column: 77
          }
        }],
        line: 190
      },
      "4": {
        loc: {
          start: {
            line: 194,
            column: 10
          },
          end: {
            line: 196,
            column: 11
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 194,
            column: 10
          },
          end: {
            line: 196,
            column: 11
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 194
      },
      "5": {
        loc: {
          start: {
            line: 213,
            column: 8
          },
          end: {
            line: 220,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 213,
            column: 8
          },
          end: {
            line: 220,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 213
      },
      "6": {
        loc: {
          start: {
            line: 217,
            column: 10
          },
          end: {
            line: 219,
            column: 11
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 217,
            column: 10
          },
          end: {
            line: 219,
            column: 11
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 217
      },
      "7": {
        loc: {
          start: {
            line: 236,
            column: 8
          },
          end: {
            line: 238,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 236,
            column: 8
          },
          end: {
            line: 238,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 236
      },
      "8": {
        loc: {
          start: {
            line: 236,
            column: 12
          },
          end: {
            line: 236,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 236,
            column: 12
          },
          end: {
            line: 236,
            column: 35
          }
        }, {
          start: {
            line: 236,
            column: 39
          },
          end: {
            line: 236,
            column: 69
          }
        }],
        line: 236
      },
      "9": {
        loc: {
          start: {
            line: 257,
            column: 6
          },
          end: {
            line: 263,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 257,
            column: 6
          },
          end: {
            line: 263,
            column: 7
          }
        }, {
          start: {
            line: 260,
            column: 13
          },
          end: {
            line: 263,
            column: 7
          }
        }],
        line: 257
      },
      "10": {
        loc: {
          start: {
            line: 318,
            column: 6
          },
          end: {
            line: 331,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 318,
            column: 6
          },
          end: {
            line: 331,
            column: 7
          }
        }, {
          start: {
            line: 320,
            column: 13
          },
          end: {
            line: 331,
            column: 7
          }
        }],
        line: 318
      },
      "11": {
        loc: {
          start: {
            line: 413,
            column: 76
          },
          end: {
            line: 413,
            column: 115
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 413,
            column: 101
          },
          end: {
            line: 413,
            column: 106
          }
        }, {
          start: {
            line: 413,
            column: 109
          },
          end: {
            line: 413,
            column: 115
          }
        }],
        line: 413
      },
      "12": {
        loc: {
          start: {
            line: 430,
            column: 63
          },
          end: {
            line: 430,
            column: 103
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 430,
            column: 89
          },
          end: {
            line: 430,
            column: 94
          }
        }, {
          start: {
            line: 430,
            column: 97
          },
          end: {
            line: 430,
            column: 103
          }
        }],
        line: 430
      },
      "13": {
        loc: {
          start: {
            line: 497,
            column: 6
          },
          end: {
            line: 499,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 497,
            column: 6
          },
          end: {
            line: 499,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 497
      },
      "14": {
        loc: {
          start: {
            line: 497,
            column: 10
          },
          end: {
            line: 497,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 497,
            column: 10
          },
          end: {
            line: 497,
            column: 18
          }
        }, {
          start: {
            line: 497,
            column: 22
          },
          end: {
            line: 497,
            column: 58
          }
        }],
        line: 497
      },
      "15": {
        loc: {
          start: {
            line: 520,
            column: 6
          },
          end: {
            line: 520,
            column: 27
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 520,
            column: 6
          },
          end: {
            line: 520,
            column: 27
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 520
      },
      "16": {
        loc: {
          start: {
            line: 552,
            column: 11
          },
          end: {
            line: 552,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 552,
            column: 11
          },
          end: {
            line: 552,
            column: 25
          }
        }, {
          start: {
            line: 552,
            column: 29
          },
          end: {
            line: 552,
            column: 59
          }
        }],
        line: 552
      },
      "17": {
        loc: {
          start: {
            line: 604,
            column: 16
          },
          end: {
            line: 604,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 604,
            column: 16
          },
          end: {
            line: 604,
            column: 37
          }
        }, {
          start: {
            line: 604,
            column: 41
          },
          end: {
            line: 604,
            column: 49
          }
        }],
        line: 604
      },
      "18": {
        loc: {
          start: {
            line: 649,
            column: 6
          },
          end: {
            line: 651,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 649,
            column: 6
          },
          end: {
            line: 651,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 649
      },
      "19": {
        loc: {
          start: {
            line: 649,
            column: 10
          },
          end: {
            line: 649,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 649,
            column: 10
          },
          end: {
            line: 649,
            column: 51
          }
        }, {
          start: {
            line: 649,
            column: 55
          },
          end: {
            line: 649,
            column: 85
          }
        }],
        line: 649
      },
      "20": {
        loc: {
          start: {
            line: 656,
            column: 6
          },
          end: {
            line: 658,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 656,
            column: 6
          },
          end: {
            line: 658,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 656
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0]
    },
    inputSourceMap: null,
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "6a0fcd6584700149a246bffc7d988ad4dda380c0"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_kixbyks9r = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_kixbyks9r();
// lib/subscription-notifications.js

import { EventEmitter } from 'events';
import subscriptionManager from '@/lib/subscription-manager';
import subscriptionMonitor from '@/lib/subscription-monitoring';

/**
 * Subscription Notifications and Grace Period Management
 * Handles payment retry logic, renewal reminders, grace periods, and dunning management
 */

class SubscriptionNotificationManager extends EventEmitter {
  constructor() {
    /* istanbul ignore next */
    cov_kixbyks9r().f[0]++;
    cov_kixbyks9r().s[0]++;
    super();
    /* istanbul ignore next */
    cov_kixbyks9r().s[1]++;
    this.retrySchedule = new Map(); // Payment retry queue
    /* istanbul ignore next */
    cov_kixbyks9r().s[2]++;
    this.notificationQueue = new Map(); // Notification queue
    /* istanbul ignore next */
    cov_kixbyks9r().s[3]++;
    this.gracePeriodsActive = new Map(); // Active grace periods
    /* istanbul ignore next */
    cov_kixbyks9r().s[4]++;
    this.dunningSequences = new Map(); // Active dunning sequences

    // Configuration
    /* istanbul ignore next */
    cov_kixbyks9r().s[5]++;
    this.config = {
      // Payment retry configuration
      maxRetryAttempts: 3,
      retryIntervals: [1, 3, 7],
      // Days between retries
      gracePeriodDays: 7,
      // Notification timing (days before event)
      renewalReminderDays: [7, 3, 1],
      trialEndingReminderDays: [3, 1],
      // Dunning configuration
      dunningSequence: [{
        day: 1,
        type: 'payment_failed',
        severity: 'medium'
      }, {
        day: 3,
        type: 'payment_retry',
        severity: 'medium'
      }, {
        day: 7,
        type: 'final_notice',
        severity: 'high'
      }, {
        day: 14,
        type: 'suspension_notice',
        severity: 'critical'
      }]
    };
    /* istanbul ignore next */
    cov_kixbyks9r().s[6]++;
    this.initializeNotificationSystem();
  }
  initializeNotificationSystem() {
    /* istanbul ignore next */
    cov_kixbyks9r().f[1]++;
    cov_kixbyks9r().s[7]++;
    // Listen to subscription events
    subscriptionManager.on('subscription.created', this.onSubscriptionCreated.bind(this));
    /* istanbul ignore next */
    cov_kixbyks9r().s[8]++;
    subscriptionManager.on('subscription.activated', this.onSubscriptionActivated.bind(this));
    /* istanbul ignore next */
    cov_kixbyks9r().s[9]++;
    subscriptionManager.on('subscription.payment_failed', this.onPaymentFailed.bind(this));
    /* istanbul ignore next */
    cov_kixbyks9r().s[10]++;
    subscriptionManager.on('subscription.cancelled', this.onSubscriptionCancelled.bind(this));

    // Schedule periodic tasks
    /* istanbul ignore next */
    cov_kixbyks9r().s[11]++;
    this.schedulePeriodicTasks();
    /* istanbul ignore next */
    cov_kixbyks9r().s[12]++;
    console.log('Subscription notification system initialized');
  }

  /**
   * Handle payment failure with retry logic
   */
  async handlePaymentFailure(failureData) {
    /* istanbul ignore next */
    cov_kixbyks9r().f[2]++;
    cov_kixbyks9r().s[13]++;
    try {
      const {
        subscriptionId,
        paymentId,
        failureReason,
        amount,
        planId
      } =
      /* istanbul ignore next */
      (cov_kixbyks9r().s[14]++, failureData);
      /* istanbul ignore next */
      cov_kixbyks9r().s[15]++;
      console.log(`Processing payment failure for subscription ${subscriptionId}`);

      // Check if we already have retry attempts for this subscription
      let retryInfo =
      /* istanbul ignore next */
      (cov_kixbyks9r().s[16]++,
      /* istanbul ignore next */
      (cov_kixbyks9r().b[0][0]++, this.retrySchedule.get(subscriptionId)) ||
      /* istanbul ignore next */
      (cov_kixbyks9r().b[0][1]++, {
        subscriptionId,
        attempts: 0,
        lastAttempt: null,
        nextRetryDate: null,
        originalFailureDate: new Date(),
        failureReason,
        amount,
        planId
      }));
      /* istanbul ignore next */
      cov_kixbyks9r().s[17]++;
      if (retryInfo.attempts >= this.config.maxRetryAttempts) {
        /* istanbul ignore next */
        cov_kixbyks9r().b[1][0]++;
        cov_kixbyks9r().s[18]++;
        console.log(`Max retry attempts reached for subscription ${subscriptionId}`);
        /* istanbul ignore next */
        cov_kixbyks9r().s[19]++;
        await this.handleMaxRetriesReached(retryInfo);
        /* istanbul ignore next */
        cov_kixbyks9r().s[20]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_kixbyks9r().b[1][1]++;
      }

      // Schedule next retry
      const nextRetryDays =
      /* istanbul ignore next */
      (cov_kixbyks9r().s[21]++, this.config.retryIntervals[retryInfo.attempts]);
      const nextRetryDate =
      /* istanbul ignore next */
      (cov_kixbyks9r().s[22]++, new Date());
      /* istanbul ignore next */
      cov_kixbyks9r().s[23]++;
      nextRetryDate.setDate(nextRetryDate.getDate() + nextRetryDays);
      /* istanbul ignore next */
      cov_kixbyks9r().s[24]++;
      retryInfo.attempts++;
      /* istanbul ignore next */
      cov_kixbyks9r().s[25]++;
      retryInfo.nextRetryDate = nextRetryDate;
      /* istanbul ignore next */
      cov_kixbyks9r().s[26]++;
      retryInfo.lastAttempt = new Date();
      /* istanbul ignore next */
      cov_kixbyks9r().s[27]++;
      this.retrySchedule.set(subscriptionId, retryInfo);

      // Start grace period
      /* istanbul ignore next */
      cov_kixbyks9r().s[28]++;
      await this.startGracePeriod(subscriptionId, retryInfo);

      // Send payment failure notification
      /* istanbul ignore next */
      cov_kixbyks9r().s[29]++;
      await this.sendPaymentFailureNotification(retryInfo);

      // Start dunning sequence
      /* istanbul ignore next */
      cov_kixbyks9r().s[30]++;
      await this.startDunningSequence(subscriptionId, retryInfo);

      // Emit retry scheduled event
      /* istanbul ignore next */
      cov_kixbyks9r().s[31]++;
      this.emit('payment.retry_scheduled', {
        subscriptionId,
        attempt: retryInfo.attempts,
        nextRetryDate,
        gracePeriodEnd: this.calculateGracePeriodEnd(retryInfo.originalFailureDate)
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_kixbyks9r().s[32]++;
      console.error('Error handling payment failure:', error);
      /* istanbul ignore next */
      cov_kixbyks9r().s[33]++;
      throw error;
    }
  }

  /**
   * Start grace period for failed payment
   */
  async startGracePeriod(subscriptionId, retryInfo) {
    /* istanbul ignore next */
    cov_kixbyks9r().f[3]++;
    cov_kixbyks9r().s[34]++;
    try {
      const gracePeriodEnd =
      /* istanbul ignore next */
      (cov_kixbyks9r().s[35]++, this.calculateGracePeriodEnd(retryInfo.originalFailureDate));
      const graceData =
      /* istanbul ignore next */
      (cov_kixbyks9r().s[36]++, {
        subscriptionId,
        startDate: retryInfo.originalFailureDate,
        endDate: gracePeriodEnd,
        reason: 'payment_failure',
        retryAttempts: retryInfo.attempts,
        status: 'active'
      });
      /* istanbul ignore next */
      cov_kixbyks9r().s[37]++;
      this.gracePeriodsActive.set(subscriptionId, graceData);

      // Update subscription status to indicate grace period
      /* istanbul ignore next */
      cov_kixbyks9r().s[38]++;
      await subscriptionManager.updateSubscriptionStatus(subscriptionId, 'past_due', {
        gracePeriodEnd,
        gracePeriodActive: true
      });
      /* istanbul ignore next */
      cov_kixbyks9r().s[39]++;
      console.log(`Grace period started for subscription ${subscriptionId} until ${gracePeriodEnd.toISOString()}`);
    } catch (error) {
      /* istanbul ignore next */
      cov_kixbyks9r().s[40]++;
      console.error('Error starting grace period:', error);
      /* istanbul ignore next */
      cov_kixbyks9r().s[41]++;
      throw error;
    }
  }

  /**
   * Start dunning management sequence
   */
  async startDunningSequence(subscriptionId, retryInfo) {
    /* istanbul ignore next */
    cov_kixbyks9r().f[4]++;
    cov_kixbyks9r().s[42]++;
    try {
      const dunningData =
      /* istanbul ignore next */
      (cov_kixbyks9r().s[43]++, {
        subscriptionId,
        startDate: new Date(),
        currentStep: 0,
        sequence: this.config.dunningSequence,
        retryInfo,
        status: 'active'
      });
      /* istanbul ignore next */
      cov_kixbyks9r().s[44]++;
      this.dunningSequences.set(subscriptionId, dunningData);

      // Schedule first dunning notification
      /* istanbul ignore next */
      cov_kixbyks9r().s[45]++;
      await this.scheduleDunningNotification(subscriptionId, 0);
      /* istanbul ignore next */
      cov_kixbyks9r().s[46]++;
      console.log(`Dunning sequence started for subscription ${subscriptionId}`);
    } catch (error) {
      /* istanbul ignore next */
      cov_kixbyks9r().s[47]++;
      console.error('Error starting dunning sequence:', error);
      /* istanbul ignore next */
      cov_kixbyks9r().s[48]++;
      throw error;
    }
  }

  /**
   * Send subscription renewal reminders
   */
  async sendRenewalReminders() {
    /* istanbul ignore next */
    cov_kixbyks9r().f[5]++;
    cov_kixbyks9r().s[49]++;
    try {
      const activeSubscriptions =
      /* istanbul ignore next */
      (cov_kixbyks9r().s[50]++, await subscriptionManager.getActiveSubscriptions());
      /* istanbul ignore next */
      cov_kixbyks9r().s[51]++;
      for (const subscription of activeSubscriptions) {
        /* istanbul ignore next */
        cov_kixbyks9r().s[52]++;
        if (
        /* istanbul ignore next */
        (cov_kixbyks9r().b[3][0]++, subscription.status === 'active') &&
        /* istanbul ignore next */
        (cov_kixbyks9r().b[3][1]++, subscription.currentPeriodEnd)) {
          /* istanbul ignore next */
          cov_kixbyks9r().b[2][0]++;
          const daysUntilRenewal =
          /* istanbul ignore next */
          (cov_kixbyks9r().s[53]++, this.calculateDaysUntil(subscription.currentPeriodEnd));

          // Check if we should send a reminder
          /* istanbul ignore next */
          cov_kixbyks9r().s[54]++;
          if (this.config.renewalReminderDays.includes(daysUntilRenewal)) {
            /* istanbul ignore next */
            cov_kixbyks9r().b[4][0]++;
            cov_kixbyks9r().s[55]++;
            await this.sendRenewalReminderNotification(subscription, daysUntilRenewal);
          } else
          /* istanbul ignore next */
          {
            cov_kixbyks9r().b[4][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_kixbyks9r().b[2][1]++;
        }
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_kixbyks9r().s[56]++;
      console.error('Error sending renewal reminders:', error);
    }
  }

  /**
   * Send trial ending reminders
   */
  async sendTrialEndingReminders() {
    /* istanbul ignore next */
    cov_kixbyks9r().f[6]++;
    cov_kixbyks9r().s[57]++;
    try {
      const trialingSubscriptions =
      /* istanbul ignore next */
      (cov_kixbyks9r().s[58]++, await subscriptionManager.getSubscriptionsByStatus('trialing'));
      /* istanbul ignore next */
      cov_kixbyks9r().s[59]++;
      for (const subscription of trialingSubscriptions) {
        /* istanbul ignore next */
        cov_kixbyks9r().s[60]++;
        if (subscription.trialEnd) {
          /* istanbul ignore next */
          cov_kixbyks9r().b[5][0]++;
          const daysUntilTrialEnd =
          /* istanbul ignore next */
          (cov_kixbyks9r().s[61]++, this.calculateDaysUntil(subscription.trialEnd));

          // Check if we should send a reminder
          /* istanbul ignore next */
          cov_kixbyks9r().s[62]++;
          if (this.config.trialEndingReminderDays.includes(daysUntilTrialEnd)) {
            /* istanbul ignore next */
            cov_kixbyks9r().b[6][0]++;
            cov_kixbyks9r().s[63]++;
            await this.sendTrialEndingNotification(subscription, daysUntilTrialEnd);
          } else
          /* istanbul ignore next */
          {
            cov_kixbyks9r().b[6][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_kixbyks9r().b[5][1]++;
        }
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_kixbyks9r().s[64]++;
      console.error('Error sending trial ending reminders:', error);
    }
  }

  /**
   * Process pending payment retries
   */
  async processPaymentRetries() {
    /* istanbul ignore next */
    cov_kixbyks9r().f[7]++;
    cov_kixbyks9r().s[65]++;
    try {
      const now =
      /* istanbul ignore next */
      (cov_kixbyks9r().s[66]++, new Date());
      /* istanbul ignore next */
      cov_kixbyks9r().s[67]++;
      for (const [subscriptionId, retryInfo] of this.retrySchedule.entries()) {
        /* istanbul ignore next */
        cov_kixbyks9r().s[68]++;
        if (
        /* istanbul ignore next */
        (cov_kixbyks9r().b[8][0]++, retryInfo.nextRetryDate) &&
        /* istanbul ignore next */
        (cov_kixbyks9r().b[8][1]++, now >= retryInfo.nextRetryDate)) {
          /* istanbul ignore next */
          cov_kixbyks9r().b[7][0]++;
          cov_kixbyks9r().s[69]++;
          await this.attemptPaymentRetry(subscriptionId, retryInfo);
        } else
        /* istanbul ignore next */
        {
          cov_kixbyks9r().b[7][1]++;
        }
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_kixbyks9r().s[70]++;
      console.error('Error processing payment retries:', error);
    }
  }

  /**
   * Attempt payment retry
   */
  async attemptPaymentRetry(subscriptionId, retryInfo) {
    /* istanbul ignore next */
    cov_kixbyks9r().f[8]++;
    cov_kixbyks9r().s[71]++;
    try {
      /* istanbul ignore next */
      cov_kixbyks9r().s[72]++;
      console.log(`Attempting payment retry ${retryInfo.attempts} for subscription ${subscriptionId}`);

      // TODO: Implement actual payment retry with PayPal
      // For now, simulate the retry attempt
      const retrySuccess =
      /* istanbul ignore next */
      (cov_kixbyks9r().s[73]++, Math.random() > 0.6); // 40% success rate for simulation
      /* istanbul ignore next */
      cov_kixbyks9r().s[74]++;
      if (retrySuccess) {
        /* istanbul ignore next */
        cov_kixbyks9r().b[9][0]++;
        cov_kixbyks9r().s[75]++;
        // Payment succeeded
        await this.handlePaymentRetrySuccess(subscriptionId, retryInfo);
      } else {
        /* istanbul ignore next */
        cov_kixbyks9r().b[9][1]++;
        cov_kixbyks9r().s[76]++;
        // Payment failed again
        await this.handlePaymentRetryFailure(subscriptionId, retryInfo);
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_kixbyks9r().s[77]++;
      console.error('Error attempting payment retry:', error);
    }
  }

  /**
   * Handle successful payment retry
   */
  async handlePaymentRetrySuccess(subscriptionId, retryInfo) {
    /* istanbul ignore next */
    cov_kixbyks9r().f[9]++;
    cov_kixbyks9r().s[78]++;
    try {
      /* istanbul ignore next */
      cov_kixbyks9r().s[79]++;
      console.log(`Payment retry successful for subscription ${subscriptionId}`);

      // Clear retry schedule
      /* istanbul ignore next */
      cov_kixbyks9r().s[80]++;
      this.retrySchedule.delete(subscriptionId);

      // End grace period
      /* istanbul ignore next */
      cov_kixbyks9r().s[81]++;
      this.gracePeriodsActive.delete(subscriptionId);

      // Stop dunning sequence
      /* istanbul ignore next */
      cov_kixbyks9r().s[82]++;
      this.dunningSequences.delete(subscriptionId);

      // Update subscription status
      /* istanbul ignore next */
      cov_kixbyks9r().s[83]++;
      await subscriptionManager.updateSubscriptionStatus(subscriptionId, 'active', {
        gracePeriodActive: false,
        lastSuccessfulPayment: new Date()
      });

      // Send success notification
      /* istanbul ignore next */
      cov_kixbyks9r().s[84]++;
      await this.sendPaymentSuccessNotification(subscriptionId, retryInfo);

      // Log successful payment
      /* istanbul ignore next */
      cov_kixbyks9r().s[85]++;
      subscriptionMonitor.logSuccessfulPayment({
        subscriptionId,
        paymentId: `retry_${Date.now()}`,
        amount: retryInfo.amount,
        planId: retryInfo.planId,
        retryAttempt: retryInfo.attempts
      });
      /* istanbul ignore next */
      cov_kixbyks9r().s[86]++;
      this.emit('payment.retry_success', {
        subscriptionId,
        attempts: retryInfo.attempts
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_kixbyks9r().s[87]++;
      console.error('Error handling payment retry success:', error);
    }
  }

  /**
   * Handle failed payment retry
   */
  async handlePaymentRetryFailure(subscriptionId, retryInfo) {
    /* istanbul ignore next */
    cov_kixbyks9r().f[10]++;
    cov_kixbyks9r().s[88]++;
    try {
      /* istanbul ignore next */
      cov_kixbyks9r().s[89]++;
      console.log(`Payment retry ${retryInfo.attempts} failed for subscription ${subscriptionId}`);
      /* istanbul ignore next */
      cov_kixbyks9r().s[90]++;
      if (retryInfo.attempts >= this.config.maxRetryAttempts) {
        /* istanbul ignore next */
        cov_kixbyks9r().b[10][0]++;
        cov_kixbyks9r().s[91]++;
        await this.handleMaxRetriesReached(retryInfo);
      } else {
        /* istanbul ignore next */
        cov_kixbyks9r().b[10][1]++;
        // Schedule next retry
        const nextRetryDays =
        /* istanbul ignore next */
        (cov_kixbyks9r().s[92]++, this.config.retryIntervals[retryInfo.attempts]);
        const nextRetryDate =
        /* istanbul ignore next */
        (cov_kixbyks9r().s[93]++, new Date());
        /* istanbul ignore next */
        cov_kixbyks9r().s[94]++;
        nextRetryDate.setDate(nextRetryDate.getDate() + nextRetryDays);
        /* istanbul ignore next */
        cov_kixbyks9r().s[95]++;
        retryInfo.nextRetryDate = nextRetryDate;
        /* istanbul ignore next */
        cov_kixbyks9r().s[96]++;
        this.retrySchedule.set(subscriptionId, retryInfo);

        // Send retry failure notification
        /* istanbul ignore next */
        cov_kixbyks9r().s[97]++;
        await this.sendPaymentRetryFailureNotification(subscriptionId, retryInfo);
      }

      // Log failed payment
      /* istanbul ignore next */
      cov_kixbyks9r().s[98]++;
      subscriptionMonitor.logFailedPayment({
        subscriptionId,
        paymentId: `retry_${Date.now()}`,
        amount: retryInfo.amount,
        planId: retryInfo.planId,
        failureReason: 'retry_failed',
        retryAttempt: retryInfo.attempts
      });
      /* istanbul ignore next */
      cov_kixbyks9r().s[99]++;
      this.emit('payment.retry_failed', {
        subscriptionId,
        attempts: retryInfo.attempts
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_kixbyks9r().s[100]++;
      console.error('Error handling payment retry failure:', error);
    }
  }

  /**
   * Handle max retries reached
   */
  async handleMaxRetriesReached(retryInfo) {
    /* istanbul ignore next */
    cov_kixbyks9r().f[11]++;
    cov_kixbyks9r().s[101]++;
    try {
      const {
        subscriptionId
      } =
      /* istanbul ignore next */
      (cov_kixbyks9r().s[102]++, retryInfo);
      /* istanbul ignore next */
      cov_kixbyks9r().s[103]++;
      console.log(`Max payment retries reached for subscription ${subscriptionId}`);

      // Remove from retry schedule
      /* istanbul ignore next */
      cov_kixbyks9r().s[104]++;
      this.retrySchedule.delete(subscriptionId);

      // End grace period
      /* istanbul ignore next */
      cov_kixbyks9r().s[105]++;
      this.gracePeriodsActive.delete(subscriptionId);

      // Update subscription status to suspended
      /* istanbul ignore next */
      cov_kixbyks9r().s[106]++;
      await subscriptionManager.updateSubscriptionStatus(subscriptionId, 'suspended', {
        suspensionReason: 'payment_failure_max_retries',
        suspendedAt: new Date(),
        gracePeriodActive: false
      });

      // Send final suspension notification
      /* istanbul ignore next */
      cov_kixbyks9r().s[107]++;
      await this.sendSubscriptionSuspensionNotification(subscriptionId, retryInfo);

      // Keep dunning sequence active for a few more days
      // In case user wants to manually update payment method
      /* istanbul ignore next */
      cov_kixbyks9r().s[108]++;
      this.emit('subscription.suspended', {
        subscriptionId,
        reason: 'payment_failure_max_retries',
        totalAttempts: retryInfo.attempts
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_kixbyks9r().s[109]++;
      console.error('Error handling max retries reached:', error);
    }
  }

  /**
   * Notification sending methods
   */
  async sendPaymentFailureNotification(retryInfo) {
    /* istanbul ignore next */
    cov_kixbyks9r().f[12]++;
    const notification =
    /* istanbul ignore next */
    (cov_kixbyks9r().s[110]++, {
      type: 'payment_failed',
      subscriptionId: retryInfo.subscriptionId,
      subject: 'Payment Failed - We\'ll Try Again Soon',
      template: 'payment_failed',
      data: {
        amount: retryInfo.amount,
        planId: retryInfo.planId,
        nextRetryDate: retryInfo.nextRetryDate,
        gracePeriodEnd: this.calculateGracePeriodEnd(retryInfo.originalFailureDate),
        attemptNumber: retryInfo.attempts
      }
    });
    /* istanbul ignore next */
    cov_kixbyks9r().s[111]++;
    await this.queueNotification(notification);
  }
  async sendRenewalReminderNotification(subscription, daysUntilRenewal) {
    /* istanbul ignore next */
    cov_kixbyks9r().f[13]++;
    const notification =
    /* istanbul ignore next */
    (cov_kixbyks9r().s[112]++, {
      type: 'renewal_reminder',
      subscriptionId: subscription.id,
      subject: `Your PrepBettr subscription renews in ${daysUntilRenewal} ${daysUntilRenewal === 1 ?
      /* istanbul ignore next */
      (cov_kixbyks9r().b[11][0]++, 'day') :
      /* istanbul ignore next */
      (cov_kixbyks9r().b[11][1]++, 'days')}`,
      template: 'renewal_reminder',
      data: {
        planName: subscription.planConfig?.name,
        renewalDate: subscription.currentPeriodEnd,
        amount: subscription.planConfig?.price,
        daysUntilRenewal
      }
    });
    /* istanbul ignore next */
    cov_kixbyks9r().s[113]++;
    await this.queueNotification(notification);
  }
  async sendTrialEndingNotification(subscription, daysUntilTrialEnd) {
    /* istanbul ignore next */
    cov_kixbyks9r().f[14]++;
    const notification =
    /* istanbul ignore next */
    (cov_kixbyks9r().s[114]++, {
      type: 'trial_ending',
      subscriptionId: subscription.id,
      subject: `Your free trial ends in ${daysUntilTrialEnd} ${daysUntilTrialEnd === 1 ?
      /* istanbul ignore next */
      (cov_kixbyks9r().b[12][0]++, 'day') :
      /* istanbul ignore next */
      (cov_kixbyks9r().b[12][1]++, 'days')}`,
      template: 'trial_ending',
      data: {
        planName: subscription.planConfig?.name,
        trialEndDate: subscription.trialEnd,
        billingAmount: subscription.planConfig?.price,
        daysUntilTrialEnd
      }
    });
    /* istanbul ignore next */
    cov_kixbyks9r().s[115]++;
    await this.queueNotification(notification);
  }
  async sendPaymentSuccessNotification(subscriptionId, retryInfo) {
    /* istanbul ignore next */
    cov_kixbyks9r().f[15]++;
    const notification =
    /* istanbul ignore next */
    (cov_kixbyks9r().s[116]++, {
      type: 'payment_success_after_retry',
      subscriptionId,
      subject: 'Payment Successful - Your Subscription is Active',
      template: 'payment_success_retry',
      data: {
        amount: retryInfo.amount,
        planId: retryInfo.planId,
        retryAttempts: retryInfo.attempts
      }
    });
    /* istanbul ignore next */
    cov_kixbyks9r().s[117]++;
    await this.queueNotification(notification);
  }
  async sendPaymentRetryFailureNotification(subscriptionId, retryInfo) {
    /* istanbul ignore next */
    cov_kixbyks9r().f[16]++;
    const notification =
    /* istanbul ignore next */
    (cov_kixbyks9r().s[118]++, {
      type: 'payment_retry_failed',
      subscriptionId,
      subject: 'Payment Retry Failed - Update Your Payment Method',
      template: 'payment_retry_failed',
      data: {
        amount: retryInfo.amount,
        planId: retryInfo.planId,
        attemptNumber: retryInfo.attempts,
        nextRetryDate: retryInfo.nextRetryDate,
        maxAttempts: this.config.maxRetryAttempts
      }
    });
    /* istanbul ignore next */
    cov_kixbyks9r().s[119]++;
    await this.queueNotification(notification);
  }
  async sendSubscriptionSuspensionNotification(subscriptionId, retryInfo) {
    /* istanbul ignore next */
    cov_kixbyks9r().f[17]++;
    const notification =
    /* istanbul ignore next */
    (cov_kixbyks9r().s[120]++, {
      type: 'subscription_suspended',
      subscriptionId,
      subject: 'Your PrepBettr Subscription Has Been Suspended',
      template: 'subscription_suspended',
      data: {
        amount: retryInfo.amount,
        planId: retryInfo.planId,
        totalAttempts: retryInfo.attempts,
        reactivationUrl: `${process.env.NEXT_PUBLIC_APP_URL}/subscription/reactivate`
      }
    });
    /* istanbul ignore next */
    cov_kixbyks9r().s[121]++;
    await this.queueNotification(notification);
  }
  async scheduleDunningNotification(subscriptionId, stepIndex) {
    /* istanbul ignore next */
    cov_kixbyks9r().f[18]++;
    cov_kixbyks9r().s[122]++;
    try {
      const dunning =
      /* istanbul ignore next */
      (cov_kixbyks9r().s[123]++, this.dunningSequences.get(subscriptionId));
      /* istanbul ignore next */
      cov_kixbyks9r().s[124]++;
      if (
      /* istanbul ignore next */
      (cov_kixbyks9r().b[14][0]++, !dunning) ||
      /* istanbul ignore next */
      (cov_kixbyks9r().b[14][1]++, stepIndex >= dunning.sequence.length)) {
        /* istanbul ignore next */
        cov_kixbyks9r().b[13][0]++;
        cov_kixbyks9r().s[125]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_kixbyks9r().b[13][1]++;
      }
      const step =
      /* istanbul ignore next */
      (cov_kixbyks9r().s[126]++, dunning.sequence[stepIndex]);
      const notificationDate =
      /* istanbul ignore next */
      (cov_kixbyks9r().s[127]++, new Date(dunning.startDate));
      /* istanbul ignore next */
      cov_kixbyks9r().s[128]++;
      notificationDate.setDate(notificationDate.getDate() + step.day);

      // Schedule the notification
      /* istanbul ignore next */
      cov_kixbyks9r().s[129]++;
      setTimeout(async () => {
        /* istanbul ignore next */
        cov_kixbyks9r().f[19]++;
        cov_kixbyks9r().s[130]++;
        await this.sendDunningNotification(subscriptionId, stepIndex);
        // Schedule next step
        /* istanbul ignore next */
        cov_kixbyks9r().s[131]++;
        await this.scheduleDunningNotification(subscriptionId, stepIndex + 1);
      }, notificationDate.getTime() - Date.now());
    } catch (error) {
      /* istanbul ignore next */
      cov_kixbyks9r().s[132]++;
      console.error('Error scheduling dunning notification:', error);
    }
  }
  async sendDunningNotification(subscriptionId, stepIndex) {
    /* istanbul ignore next */
    cov_kixbyks9r().f[20]++;
    cov_kixbyks9r().s[133]++;
    try {
      const dunning =
      /* istanbul ignore next */
      (cov_kixbyks9r().s[134]++, this.dunningSequences.get(subscriptionId));
      /* istanbul ignore next */
      cov_kixbyks9r().s[135]++;
      if (!dunning) {
        /* istanbul ignore next */
        cov_kixbyks9r().b[15][0]++;
        cov_kixbyks9r().s[136]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_kixbyks9r().b[15][1]++;
      }
      const step =
      /* istanbul ignore next */
      (cov_kixbyks9r().s[137]++, dunning.sequence[stepIndex]);
      const notification =
      /* istanbul ignore next */
      (cov_kixbyks9r().s[138]++, {
        type: step.type,
        subscriptionId,
        subject: this.getDunningSubject(step.type),
        template: step.type,
        severity: step.severity,
        data: {
          stepNumber: stepIndex + 1,
          totalSteps: dunning.sequence.length,
          amount: dunning.retryInfo.amount,
          planId: dunning.retryInfo.planId
        }
      });
      /* istanbul ignore next */
      cov_kixbyks9r().s[139]++;
      await this.queueNotification(notification);
      /* istanbul ignore next */
      cov_kixbyks9r().s[140]++;
      dunning.currentStep = stepIndex + 1;
    } catch (error) {
      /* istanbul ignore next */
      cov_kixbyks9r().s[141]++;
      console.error('Error sending dunning notification:', error);
    }
  }
  getDunningSubject(type) {
    /* istanbul ignore next */
    cov_kixbyks9r().f[21]++;
    const subjects =
    /* istanbul ignore next */
    (cov_kixbyks9r().s[142]++, {
      'payment_failed': 'Payment Failed - Action Required',
      'payment_retry': 'Payment Retry Failed - Please Update Your Payment Method',
      'final_notice': 'Final Notice - Subscription Will Be Suspended',
      'suspension_notice': 'Your Subscription Has Been Suspended'
    });
    /* istanbul ignore next */
    cov_kixbyks9r().s[143]++;
    return /* istanbul ignore next */(cov_kixbyks9r().b[16][0]++, subjects[type]) ||
    /* istanbul ignore next */
    (cov_kixbyks9r().b[16][1]++, 'Subscription Update Required');
  }

  /**
   * Notification queue management
   */
  async queueNotification(notification) {
    /* istanbul ignore next */
    cov_kixbyks9r().f[22]++;
    cov_kixbyks9r().s[144]++;
    try {
      const notificationId =
      /* istanbul ignore next */
      (cov_kixbyks9r().s[145]++, this.generateNotificationId());
      /* istanbul ignore next */
      cov_kixbyks9r().s[146]++;
      notification.id = notificationId;
      /* istanbul ignore next */
      cov_kixbyks9r().s[147]++;
      notification.status = 'queued';
      /* istanbul ignore next */
      cov_kixbyks9r().s[148]++;
      notification.createdAt = new Date();
      /* istanbul ignore next */
      cov_kixbyks9r().s[149]++;
      this.notificationQueue.set(notificationId, notification);

      // Process immediately in this implementation
      // In production, you might use a queue system like Redis/BullMQ
      /* istanbul ignore next */
      cov_kixbyks9r().s[150]++;
      await this.processNotification(notification);
    } catch (error) {
      /* istanbul ignore next */
      cov_kixbyks9r().s[151]++;
      console.error('Error queueing notification:', error);
    }
  }
  async processNotification(notification) {
    /* istanbul ignore next */
    cov_kixbyks9r().f[23]++;
    cov_kixbyks9r().s[152]++;
    try {
      /* istanbul ignore next */
      cov_kixbyks9r().s[153]++;
      console.log(`Sending ${notification.type} notification for subscription ${notification.subscriptionId}`);

      // TODO: Implement actual email/SMS sending
      // For now, just log the notification
      /* istanbul ignore next */
      cov_kixbyks9r().s[154]++;
      this.logNotification(notification);

      // Mark as sent
      /* istanbul ignore next */
      cov_kixbyks9r().s[155]++;
      notification.status = 'sent';
      /* istanbul ignore next */
      cov_kixbyks9r().s[156]++;
      notification.sentAt = new Date();
      /* istanbul ignore next */
      cov_kixbyks9r().s[157]++;
      this.emit('notification.sent', notification);
    } catch (error) {
      /* istanbul ignore next */
      cov_kixbyks9r().s[158]++;
      console.error('Error processing notification:', error);
      /* istanbul ignore next */
      cov_kixbyks9r().s[159]++;
      notification.status = 'failed';
      /* istanbul ignore next */
      cov_kixbyks9r().s[160]++;
      notification.error = error.message;
    }
  }
  logNotification(notification) {
    /* istanbul ignore next */
    cov_kixbyks9r().f[24]++;
    const logData =
    /* istanbul ignore next */
    (cov_kixbyks9r().s[161]++, {
      timestamp: new Date().toISOString(),
      service: 'subscription-notifications',
      type: notification.type,
      subscriptionId: notification.subscriptionId,
      subject: notification.subject,
      severity:
      /* istanbul ignore next */
      (cov_kixbyks9r().b[17][0]++, notification.severity) ||
      /* istanbul ignore next */
      (cov_kixbyks9r().b[17][1]++, 'medium'),
      data: notification.data
    });
    /* istanbul ignore next */
    cov_kixbyks9r().s[162]++;
    console.log('SUBSCRIPTION_NOTIFICATION:', JSON.stringify(logData));
  }

  /**
   * Utility methods
   */
  calculateGracePeriodEnd(startDate) {
    /* istanbul ignore next */
    cov_kixbyks9r().f[25]++;
    const endDate =
    /* istanbul ignore next */
    (cov_kixbyks9r().s[163]++, new Date(startDate));
    /* istanbul ignore next */
    cov_kixbyks9r().s[164]++;
    endDate.setDate(endDate.getDate() + this.config.gracePeriodDays);
    /* istanbul ignore next */
    cov_kixbyks9r().s[165]++;
    return endDate;
  }
  calculateDaysUntil(targetDate) {
    /* istanbul ignore next */
    cov_kixbyks9r().f[26]++;
    const now =
    /* istanbul ignore next */
    (cov_kixbyks9r().s[166]++, new Date());
    const diffTime =
    /* istanbul ignore next */
    (cov_kixbyks9r().s[167]++, new Date(targetDate) - now);
    /* istanbul ignore next */
    cov_kixbyks9r().s[168]++;
    return Math.ceil(diffTime / (1000 * 60 * 60 * 24));
  }
  generateNotificationId() {
    /* istanbul ignore next */
    cov_kixbyks9r().f[27]++;
    cov_kixbyks9r().s[169]++;
    return `notif_${Date.now()}_${Math.random().toString(36).substring(2, 15)}`;
  }
  schedulePeriodicTasks() {
    /* istanbul ignore next */
    cov_kixbyks9r().f[28]++;
    cov_kixbyks9r().s[170]++;
    // Run every hour
    setInterval(async () => {
      /* istanbul ignore next */
      cov_kixbyks9r().f[29]++;
      cov_kixbyks9r().s[171]++;
      await this.processPaymentRetries();
      /* istanbul ignore next */
      cov_kixbyks9r().s[172]++;
      await this.sendRenewalReminders();
      /* istanbul ignore next */
      cov_kixbyks9r().s[173]++;
      await this.sendTrialEndingReminders();
    }, 60 * 60 * 1000);

    // Cleanup completed tasks daily
    /* istanbul ignore next */
    cov_kixbyks9r().s[174]++;
    setInterval(() => {
      /* istanbul ignore next */
      cov_kixbyks9r().f[30]++;
      cov_kixbyks9r().s[175]++;
      this.cleanupCompletedTasks();
    }, 24 * 60 * 60 * 1000);
  }
  cleanupCompletedTasks() {
    /* istanbul ignore next */
    cov_kixbyks9r().f[31]++;
    const cutoff =
    /* istanbul ignore next */
    (cov_kixbyks9r().s[176]++, Date.now() - 7 * 24 * 60 * 60 * 1000); // 7 days ago

    // Clean up old notifications
    /* istanbul ignore next */
    cov_kixbyks9r().s[177]++;
    for (const [id, notification] of this.notificationQueue) {
      /* istanbul ignore next */
      cov_kixbyks9r().s[178]++;
      if (
      /* istanbul ignore next */
      (cov_kixbyks9r().b[19][0]++, notification.createdAt.getTime() < cutoff) &&
      /* istanbul ignore next */
      (cov_kixbyks9r().b[19][1]++, notification.status === 'sent')) {
        /* istanbul ignore next */
        cov_kixbyks9r().b[18][0]++;
        cov_kixbyks9r().s[179]++;
        this.notificationQueue.delete(id);
      } else
      /* istanbul ignore next */
      {
        cov_kixbyks9r().b[18][1]++;
      }
    }

    // Clean up expired grace periods
    /* istanbul ignore next */
    cov_kixbyks9r().s[180]++;
    for (const [subscriptionId, grace] of this.gracePeriodsActive) {
      /* istanbul ignore next */
      cov_kixbyks9r().s[181]++;
      if (grace.endDate.getTime() < Date.now()) {
        /* istanbul ignore next */
        cov_kixbyks9r().b[20][0]++;
        cov_kixbyks9r().s[182]++;
        this.gracePeriodsActive.delete(subscriptionId);
      } else
      /* istanbul ignore next */
      {
        cov_kixbyks9r().b[20][1]++;
      }
    }
    /* istanbul ignore next */
    cov_kixbyks9r().s[183]++;
    console.log('Completed periodic cleanup of notification tasks');
  }

  /**
   * Event handlers
   */
  onSubscriptionCreated(eventData) {
    /* istanbul ignore next */
    cov_kixbyks9r().f[32]++;
    cov_kixbyks9r().s[184]++;
    // Set up renewal reminders for new subscription
    console.log(`Setting up notifications for new subscription: ${eventData.subscriptionId}`);
  }
  onSubscriptionActivated(eventData) {
    /* istanbul ignore next */
    cov_kixbyks9r().f[33]++;
    cov_kixbyks9r().s[185]++;
    // Clear any grace periods when subscription is activated
    this.gracePeriodsActive.delete(eventData.subscriptionId);
    /* istanbul ignore next */
    cov_kixbyks9r().s[186]++;
    this.retrySchedule.delete(eventData.subscriptionId);
    /* istanbul ignore next */
    cov_kixbyks9r().s[187]++;
    this.dunningSequences.delete(eventData.subscriptionId);
  }
  onPaymentFailed(eventData) {
    /* istanbul ignore next */
    cov_kixbyks9r().f[34]++;
    cov_kixbyks9r().s[188]++;
    // Handle payment failure
    this.handlePaymentFailure(eventData);
  }
  onSubscriptionCancelled(eventData) {
    /* istanbul ignore next */
    cov_kixbyks9r().f[35]++;
    cov_kixbyks9r().s[189]++;
    // Clean up all scheduled notifications for cancelled subscription
    this.gracePeriodsActive.delete(eventData.subscriptionId);
    /* istanbul ignore next */
    cov_kixbyks9r().s[190]++;
    this.retrySchedule.delete(eventData.subscriptionId);
    /* istanbul ignore next */
    cov_kixbyks9r().s[191]++;
    this.dunningSequences.delete(eventData.subscriptionId);
  }

  /**
   * Public API methods
   */
  async getGracePeriodStatus(subscriptionId) {
    /* istanbul ignore next */
    cov_kixbyks9r().f[36]++;
    cov_kixbyks9r().s[192]++;
    return this.gracePeriodsActive.get(subscriptionId);
  }
  async getRetryStatus(subscriptionId) {
    /* istanbul ignore next */
    cov_kixbyks9r().f[37]++;
    cov_kixbyks9r().s[193]++;
    return this.retrySchedule.get(subscriptionId);
  }
  async getDunningStatus(subscriptionId) {
    /* istanbul ignore next */
    cov_kixbyks9r().f[38]++;
    cov_kixbyks9r().s[194]++;
    return this.dunningSequences.get(subscriptionId);
  }
  async getNotificationHistory(subscriptionId) {
    /* istanbul ignore next */
    cov_kixbyks9r().f[39]++;
    const notifications =
    /* istanbul ignore next */
    (cov_kixbyks9r().s[195]++, Array.from(this.notificationQueue.values()).filter(n => {
      /* istanbul ignore next */
      cov_kixbyks9r().f[40]++;
      cov_kixbyks9r().s[196]++;
      return n.subscriptionId === subscriptionId;
    }).sort((a, b) => {
      /* istanbul ignore next */
      cov_kixbyks9r().f[41]++;
      cov_kixbyks9r().s[197]++;
      return b.createdAt - a.createdAt;
    }));
    /* istanbul ignore next */
    cov_kixbyks9r().s[198]++;
    return notifications;
  }
}

// Create singleton instance
const notificationManager =
/* istanbul ignore next */
(cov_kixbyks9r().s[199]++, new SubscriptionNotificationManager());
export default notificationManager;

// Export class for testing
export { SubscriptionNotificationManager };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,