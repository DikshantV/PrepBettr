6eca3115cb0b91c97f957c0576121656
/* istanbul ignore next */
function cov_1o5xacbhdi() {
  var path = "/Users/dikshantvashistha/PrepBettr/azure/deleteUserData/index.js";
  var hash = "cdb2cf5e70ade6bf8f136a5b8e9f1e12cc0097cd";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dikshantvashistha/PrepBettr/azure/deleteUserData/index.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 14
        },
        end: {
          line: 1,
          column: 39
        }
      },
      "1": {
        start: {
          line: 2,
          column: 25
        },
        end: {
          line: 2,
          column: 49
        }
      },
      "2": {
        start: {
          line: 3,
          column: 30
        },
        end: {
          line: 3,
          column: 60
        }
      },
      "3": {
        start: {
          line: 4,
          column: 35
        },
        end: {
          line: 4,
          column: 61
        }
      },
      "4": {
        start: {
          line: 5,
          column: 25
        },
        end: {
          line: 5,
          column: 59
        }
      },
      "5": {
        start: {
          line: 6,
          column: 56
        },
        end: {
          line: 6,
          column: 91
        }
      },
      "6": {
        start: {
          line: 9,
          column: 26
        },
        end: {
          line: 9,
          column: 31
        }
      },
      "7": {
        start: {
          line: 14,
          column: 2
        },
        end: {
          line: 14,
          column: 71
        }
      },
      "8": {
        start: {
          line: 14,
          column: 64
        },
        end: {
          line: 14,
          column: 71
        }
      },
      "9": {
        start: {
          line: 16,
          column: 2
        },
        end: {
          line: 53,
          column: 3
        }
      },
      "10": {
        start: {
          line: 18,
          column: 23
        },
        end: {
          line: 18,
          column: 51
        }
      },
      "11": {
        start: {
          line: 19,
          column: 22
        },
        end: {
          line: 19,
          column: 53
        }
      },
      "12": {
        start: {
          line: 20,
          column: 16
        },
        end: {
          line: 20,
          column: 54
        }
      },
      "13": {
        start: {
          line: 21,
          column: 25
        },
        end: {
          line: 21,
          column: 58
        }
      },
      "14": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 35,
          column: 5
        }
      },
      "15": {
        start: {
          line: 25,
          column: 35
        },
        end: {
          line: 25,
          column: 95
        }
      },
      "16": {
        start: {
          line: 26,
          column: 29
        },
        end: {
          line: 26,
          column: 67
        }
      },
      "17": {
        start: {
          line: 28,
          column: 6
        },
        end: {
          line: 33,
          column: 7
        }
      },
      "18": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 32,
          column: 11
        }
      },
      "19": {
        start: {
          line: 34,
          column: 6
        },
        end: {
          line: 34,
          column: 33
        }
      },
      "20": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 41,
          column: 5
        }
      },
      "21": {
        start: {
          line: 39,
          column: 31
        },
        end: {
          line: 39,
          column: 76
        }
      },
      "22": {
        start: {
          line: 40,
          column: 6
        },
        end: {
          line: 40,
          column: 56
        }
      },
      "23": {
        start: {
          line: 44,
          column: 4
        },
        end: {
          line: 47,
          column: 5
        }
      },
      "24": {
        start: {
          line: 45,
          column: 38
        },
        end: {
          line: 45,
          column: 81
        }
      },
      "25": {
        start: {
          line: 46,
          column: 6
        },
        end: {
          line: 46,
          column: 90
        }
      },
      "26": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 49,
          column: 57
        }
      },
      "27": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 51,
          column: 59
        }
      },
      "28": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 52,
          column: 16
        }
      },
      "29": {
        start: {
          line: 57,
          column: 30
        },
        end: {
          line: 67,
          column: 1
        }
      },
      "30": {
        start: {
          line: 71,
          column: 20
        },
        end: {
          line: 71,
          column: 30
        }
      },
      "31": {
        start: {
          line: 74,
          column: 2
        },
        end: {
          line: 81,
          column: 4
        }
      },
      "32": {
        start: {
          line: 84,
          column: 2
        },
        end: {
          line: 88,
          column: 3
        }
      },
      "33": {
        start: {
          line: 85,
          column: 4
        },
        end: {
          line: 85,
          column: 29
        }
      },
      "34": {
        start: {
          line: 86,
          column: 4
        },
        end: {
          line: 86,
          column: 26
        }
      },
      "35": {
        start: {
          line: 87,
          column: 4
        },
        end: {
          line: 87,
          column: 11
        }
      },
      "36": {
        start: {
          line: 90,
          column: 2
        },
        end: {
          line: 288,
          column: 3
        }
      },
      "37": {
        start: {
          line: 91,
          column: 4
        },
        end: {
          line: 91,
          column: 31
        }
      },
      "38": {
        start: {
          line: 93,
          column: 42
        },
        end: {
          line: 93,
          column: 56
        }
      },
      "39": {
        start: {
          line: 94,
          column: 29
        },
        end: {
          line: 94,
          column: 50
        }
      },
      "40": {
        start: {
          line: 95,
          column: 20
        },
        end: {
          line: 95,
          column: 86
        }
      },
      "41": {
        start: {
          line: 97,
          column: 4
        },
        end: {
          line: 104,
          column: 5
        }
      },
      "42": {
        start: {
          line: 98,
          column: 6
        },
        end: {
          line: 98,
          column: 31
        }
      },
      "43": {
        start: {
          line: 99,
          column: 6
        },
        end: {
          line: 102,
          column: 8
        }
      },
      "44": {
        start: {
          line: 103,
          column: 6
        },
        end: {
          line: 103,
          column: 13
        }
      },
      "45": {
        start: {
          line: 107,
          column: 4
        },
        end: {
          line: 114,
          column: 5
        }
      },
      "46": {
        start: {
          line: 108,
          column: 6
        },
        end: {
          line: 108,
          column: 31
        }
      },
      "47": {
        start: {
          line: 109,
          column: 6
        },
        end: {
          line: 112,
          column: 8
        }
      },
      "48": {
        start: {
          line: 113,
          column: 6
        },
        end: {
          line: 113,
          column: 13
        }
      },
      "49": {
        start: {
          line: 116,
          column: 21
        },
        end: {
          line: 116,
          column: 57
        }
      },
      "50": {
        start: {
          line: 117,
          column: 31
        },
        end: {
          line: 117,
          column: 33
        }
      },
      "51": {
        start: {
          line: 118,
          column: 27
        },
        end: {
          line: 118,
          column: 29
        }
      },
      "52": {
        start: {
          line: 121,
          column: 30
        },
        end: {
          line: 121,
          column: 105
        }
      },
      "53": {
        start: {
          line: 122,
          column: 28
        },
        end: {
          line: 131,
          column: 5
        }
      },
      "54": {
        start: {
          line: 133,
          column: 4
        },
        end: {
          line: 138,
          column: 5
        }
      },
      "55": {
        start: {
          line: 134,
          column: 6
        },
        end: {
          line: 134,
          column: 77
        }
      },
      "56": {
        start: {
          line: 135,
          column: 6
        },
        end: {
          line: 135,
          column: 88
        }
      },
      "57": {
        start: {
          line: 137,
          column: 6
        },
        end: {
          line: 137,
          column: 76
        }
      },
      "58": {
        start: {
          line: 141,
          column: 4
        },
        end: {
          line: 178,
          column: 5
        }
      },
      "59": {
        start: {
          line: 142,
          column: 6
        },
        end: {
          line: 177,
          column: 7
        }
      },
      "60": {
        start: {
          line: 143,
          column: 26
        },
        end: {
          line: 143,
          column: 59
        }
      },
      "61": {
        start: {
          line: 146,
          column: 26
        },
        end: {
          line: 149,
          column: 9
        }
      },
      "62": {
        start: {
          line: 151,
          column: 41
        },
        end: {
          line: 151,
          column: 90
        }
      },
      "63": {
        start: {
          line: 153,
          column: 8
        },
        end: {
          line: 173,
          column: 9
        }
      },
      "64": {
        start: {
          line: 155,
          column: 28
        },
        end: {
          line: 155,
          column: 30
        }
      },
      "65": {
        start: {
          line: 156,
          column: 29
        },
        end: {
          line: 156,
          column: 30
        }
      },
      "66": {
        start: {
          line: 158,
          column: 10
        },
        end: {
          line: 169,
          column: 11
        }
      },
      "67": {
        start: {
          line: 158,
          column: 23
        },
        end: {
          line: 158,
          column: 24
        }
      },
      "68": {
        start: {
          line: 159,
          column: 26
        },
        end: {
          line: 159,
          column: 59
        }
      },
      "69": {
        start: {
          line: 160,
          column: 35
        },
        end: {
          line: 165,
          column: 13
        }
      },
      "70": {
        start: {
          line: 161,
          column: 14
        },
        end: {
          line: 164,
          column: 16
        }
      },
      "71": {
        start: {
          line: 162,
          column: 16
        },
        end: {
          line: 162,
          column: 100
        }
      },
      "72": {
        start: {
          line: 163,
          column: 16
        },
        end: {
          line: 163,
          column: 28
        }
      },
      "73": {
        start: {
          line: 167,
          column: 28
        },
        end: {
          line: 167,
          column: 61
        }
      },
      "74": {
        start: {
          line: 168,
          column: 12
        },
        end: {
          line: 168,
          column: 77
        }
      },
      "75": {
        start: {
          line: 168,
          column: 53
        },
        end: {
          line: 168,
          column: 68
        }
      },
      "76": {
        start: {
          line: 171,
          column: 10
        },
        end: {
          line: 171,
          column: 86
        }
      },
      "77": {
        start: {
          line: 172,
          column: 10
        },
        end: {
          line: 172,
          column: 81
        }
      },
      "78": {
        start: {
          line: 175,
          column: 8
        },
        end: {
          line: 175,
          column: 74
        }
      },
      "79": {
        start: {
          line: 176,
          column: 8
        },
        end: {
          line: 176,
          column: 81
        }
      },
      "80": {
        start: {
          line: 181,
          column: 4
        },
        end: {
          line: 202,
          column: 5
        }
      },
      "81": {
        start: {
          line: 182,
          column: 30
        },
        end: {
          line: 182,
          column: 80
        }
      },
      "82": {
        start: {
          line: 183,
          column: 21
        },
        end: {
          line: 183,
          column: 39
        }
      },
      "83": {
        start: {
          line: 185,
          column: 30
        },
        end: {
          line: 185,
          column: 31
        }
      },
      "84": {
        start: {
          line: 186,
          column: 6
        },
        end: {
          line: 193,
          column: 7
        }
      },
      "85": {
        start: {
          line: 187,
          column: 8
        },
        end: {
          line: 192,
          column: 9
        }
      },
      "86": {
        start: {
          line: 188,
          column: 10
        },
        end: {
          line: 188,
          column: 54
        }
      },
      "87": {
        start: {
          line: 189,
          column: 10
        },
        end: {
          line: 189,
          column: 30
        }
      },
      "88": {
        start: {
          line: 191,
          column: 10
        },
        end: {
          line: 191,
          column: 73
        }
      },
      "89": {
        start: {
          line: 195,
          column: 6
        },
        end: {
          line: 198,
          column: 7
        }
      },
      "90": {
        start: {
          line: 196,
          column: 8
        },
        end: {
          line: 196,
          column: 91
        }
      },
      "91": {
        start: {
          line: 197,
          column: 8
        },
        end: {
          line: 197,
          column: 77
        }
      },
      "92": {
        start: {
          line: 200,
          column: 6
        },
        end: {
          line: 200,
          column: 69
        }
      },
      "93": {
        start: {
          line: 201,
          column: 6
        },
        end: {
          line: 201,
          column: 81
        }
      },
      "94": {
        start: {
          line: 205,
          column: 4
        },
        end: {
          line: 212,
          column: 5
        }
      },
      "95": {
        start: {
          line: 206,
          column: 6
        },
        end: {
          line: 206,
          column: 44
        }
      },
      "96": {
        start: {
          line: 207,
          column: 6
        },
        end: {
          line: 207,
          column: 73
        }
      },
      "97": {
        start: {
          line: 208,
          column: 6
        },
        end: {
          line: 208,
          column: 80
        }
      },
      "98": {
        start: {
          line: 210,
          column: 6
        },
        end: {
          line: 210,
          column: 71
        }
      },
      "99": {
        start: {
          line: 211,
          column: 6
        },
        end: {
          line: 211,
          column: 81
        }
      },
      "100": {
        start: {
          line: 215,
          column: 4
        },
        end: {
          line: 227,
          column: 5
        }
      },
      "101": {
        start: {
          line: 216,
          column: 29
        },
        end: {
          line: 222,
          column: 7
        }
      },
      "102": {
        start: {
          line: 224,
          column: 6
        },
        end: {
          line: 224,
          column: 103
        }
      },
      "103": {
        start: {
          line: 226,
          column: 6
        },
        end: {
          line: 226,
          column: 76
        }
      },
      "104": {
        start: {
          line: 230,
          column: 4
        },
        end: {
          line: 244,
          column: 5
        }
      },
      "105": {
        start: {
          line: 231,
          column: 6
        },
        end: {
          line: 241,
          column: 9
        }
      },
      "106": {
        start: {
          line: 236,
          column: 56
        },
        end: {
          line: 236,
          column: 68
        }
      },
      "107": {
        start: {
          line: 243,
          column: 6
        },
        end: {
          line: 243,
          column: 62
        }
      },
      "108": {
        start: {
          line: 246,
          column: 21
        },
        end: {
          line: 246,
          column: 43
        }
      },
      "109": {
        start: {
          line: 247,
          column: 4
        },
        end: {
          line: 247,
          column: 80
        }
      },
      "110": {
        start: {
          line: 249,
          column: 25
        },
        end: {
          line: 249,
          column: 84
        }
      },
      "111": {
        start: {
          line: 249,
          column: 65
        },
        end: {
          line: 249,
          column: 80
        }
      },
      "112": {
        start: {
          line: 251,
          column: 4
        },
        end: {
          line: 251,
          column: 29
        }
      },
      "113": {
        start: {
          line: 252,
          column: 4
        },
        end: {
          line: 262,
          column: 6
        }
      },
      "114": {
        start: {
          line: 265,
          column: 21
        },
        end: {
          line: 265,
          column: 43
        }
      },
      "115": {
        start: {
          line: 266,
          column: 4
        },
        end: {
          line: 266,
          column: 82
        }
      },
      "116": {
        start: {
          line: 269,
          column: 4
        },
        end: {
          line: 280,
          column: 5
        }
      },
      "117": {
        start: {
          line: 270,
          column: 6
        },
        end: {
          line: 279,
          column: 7
        }
      },
      "118": {
        start: {
          line: 271,
          column: 25
        },
        end: {
          line: 271,
          column: 61
        }
      },
      "119": {
        start: {
          line: 272,
          column: 8
        },
        end: {
          line: 276,
          column: 11
        }
      },
      "120": {
        start: {
          line: 278,
          column: 8
        },
        end: {
          line: 278,
          column: 94
        }
      },
      "121": {
        start: {
          line: 282,
          column: 4
        },
        end: {
          line: 282,
          column: 29
        }
      },
      "122": {
        start: {
          line: 283,
          column: 4
        },
        end: {
          line: 287,
          column: 6
        }
      },
      "123": {
        start: {
          line: 292,
          column: 0
        },
        end: {
          line: 292,
          column: 67
        }
      }
    },
    fnMap: {
      "0": {
        name: "initializeServices",
        decl: {
          start: {
            line: 13,
            column: 15
          },
          end: {
            line: 13,
            column: 33
          }
        },
        loc: {
          start: {
            line: 13,
            column: 36
          },
          end: {
            line: 54,
            column: 1
          }
        },
        line: 13
      },
      "1": {
        name: "handleDeleteUserData",
        decl: {
          start: {
            line: 70,
            column: 15
          },
          end: {
            line: 70,
            column: 35
          }
        },
        loc: {
          start: {
            line: 70,
            column: 69
          },
          end: {
            line: 289,
            column: 1
          }
        },
        line: 70
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 160,
            column: 45
          },
          end: {
            line: 160,
            column: 46
          }
        },
        loc: {
          start: {
            line: 161,
            column: 14
          },
          end: {
            line: 164,
            column: 16
          }
        },
        line: 161
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 161,
            column: 60
          },
          end: {
            line: 161,
            column: 61
          }
        },
        loc: {
          start: {
            line: 161,
            column: 67
          },
          end: {
            line: 164,
            column: 15
          }
        },
        line: 161
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 168,
            column: 43
          },
          end: {
            line: 168,
            column: 44
          }
        },
        loc: {
          start: {
            line: 168,
            column: 53
          },
          end: {
            line: 168,
            column: 68
          }
        },
        line: 168
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 236,
            column: 51
          },
          end: {
            line: 236,
            column: 52
          }
        },
        loc: {
          start: {
            line: 236,
            column: 56
          },
          end: {
            line: 236,
            column: 68
          }
        },
        line: 236
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 249,
            column: 51
          },
          end: {
            line: 249,
            column: 52
          }
        },
        loc: {
          start: {
            line: 249,
            column: 65
          },
          end: {
            line: 249,
            column: 80
          }
        },
        line: 249
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 14,
            column: 2
          },
          end: {
            line: 14,
            column: 71
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 14,
            column: 2
          },
          end: {
            line: 14,
            column: 71
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 14
      },
      "1": {
        loc: {
          start: {
            line: 14,
            column: 6
          },
          end: {
            line: 14,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 14,
            column: 6
          },
          end: {
            line: 14,
            column: 25
          }
        }, {
          start: {
            line: 14,
            column: 29
          },
          end: {
            line: 14,
            column: 41
          }
        }, {
          start: {
            line: 14,
            column: 45
          },
          end: {
            line: 14,
            column: 62
          }
        }],
        line: 14
      },
      "2": {
        loc: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 24
      },
      "3": {
        loc: {
          start: {
            line: 28,
            column: 6
          },
          end: {
            line: 33,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 6
          },
          end: {
            line: 33,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "4": {
        loc: {
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 41,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 41,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 38
      },
      "5": {
        loc: {
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 47,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 47,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 44
      },
      "6": {
        loc: {
          start: {
            line: 84,
            column: 2
          },
          end: {
            line: 88,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 84,
            column: 2
          },
          end: {
            line: 88,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 84
      },
      "7": {
        loc: {
          start: {
            line: 93,
            column: 42
          },
          end: {
            line: 93,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 93,
            column: 42
          },
          end: {
            line: 93,
            column: 50
          }
        }, {
          start: {
            line: 93,
            column: 54
          },
          end: {
            line: 93,
            column: 56
          }
        }],
        line: 93
      },
      "8": {
        loc: {
          start: {
            line: 95,
            column: 20
          },
          end: {
            line: 95,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 95,
            column: 20
          },
          end: {
            line: 95,
            column: 77
          }
        }, {
          start: {
            line: 95,
            column: 81
          },
          end: {
            line: 95,
            column: 86
          }
        }],
        line: 95
      },
      "9": {
        loc: {
          start: {
            line: 97,
            column: 4
          },
          end: {
            line: 104,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 97,
            column: 4
          },
          end: {
            line: 104,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 97
      },
      "10": {
        loc: {
          start: {
            line: 107,
            column: 4
          },
          end: {
            line: 114,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 107,
            column: 4
          },
          end: {
            line: 114,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 107
      },
      "11": {
        loc: {
          start: {
            line: 107,
            column: 8
          },
          end: {
            line: 107,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 107,
            column: 8
          },
          end: {
            line: 107,
            column: 16
          }
        }, {
          start: {
            line: 107,
            column: 20
          },
          end: {
            line: 107,
            column: 47
          }
        }],
        line: 107
      },
      "12": {
        loc: {
          start: {
            line: 121,
            column: 30
          },
          end: {
            line: 121,
            column: 105
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 121,
            column: 30
          },
          end: {
            line: 121,
            column: 39
          }
        }, {
          start: {
            line: 121,
            column: 43
          },
          end: {
            line: 121,
            column: 105
          }
        }],
        line: 121
      },
      "13": {
        loc: {
          start: {
            line: 125,
            column: 19
          },
          end: {
            line: 125,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 125,
            column: 19
          },
          end: {
            line: 125,
            column: 35
          }
        }, {
          start: {
            line: 125,
            column: 39
          },
          end: {
            line: 125,
            column: 45
          }
        }],
        line: 125
      },
      "14": {
        loc: {
          start: {
            line: 127,
            column: 14
          },
          end: {
            line: 127,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 127,
            column: 14
          },
          end: {
            line: 127,
            column: 20
          }
        }, {
          start: {
            line: 127,
            column: 24
          },
          end: {
            line: 127,
            column: 57
          }
        }],
        line: 127
      },
      "15": {
        loc: {
          start: {
            line: 153,
            column: 8
          },
          end: {
            line: 173,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 153,
            column: 8
          },
          end: {
            line: 173,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 153
      },
      "16": {
        loc: {
          start: {
            line: 195,
            column: 6
          },
          end: {
            line: 198,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 195,
            column: 6
          },
          end: {
            line: 198,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 195
      },
      "17": {
        loc: {
          start: {
            line: 218,
            column: 16
          },
          end: {
            line: 218,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 218,
            column: 44
          },
          end: {
            line: 218,
            column: 67
          }
        }, {
          start: {
            line: 218,
            column: 70
          },
          end: {
            line: 218,
            column: 81
          }
        }],
        line: 218
      },
      "18": {
        loc: {
          start: {
            line: 239,
            column: 21
          },
          end: {
            line: 239,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 239,
            column: 21
          },
          end: {
            line: 239,
            column: 37
          }
        }, {
          start: {
            line: 239,
            column: 41
          },
          end: {
            line: 239,
            column: 47
          }
        }],
        line: 239
      },
      "19": {
        loc: {
          start: {
            line: 260,
            column: 14
          },
          end: {
            line: 260,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 260,
            column: 42
          },
          end: {
            line: 260,
            column: 65
          }
        }, {
          start: {
            line: 260,
            column: 68
          },
          end: {
            line: 260,
            column: 79
          }
        }],
        line: 260
      },
      "20": {
        loc: {
          start: {
            line: 261,
            column: 37
          },
          end: {
            line: 261,
            column: 120
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 261,
            column: 65
          },
          end: {
            line: 261,
            column: 93
          }
        }, {
          start: {
            line: 261,
            column: 96
          },
          end: {
            line: 261,
            column: 120
          }
        }],
        line: 261
      },
      "21": {
        loc: {
          start: {
            line: 269,
            column: 4
          },
          end: {
            line: 280,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 269,
            column: 4
          },
          end: {
            line: 280,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 269
      },
      "22": {
        loc: {
          start: {
            line: 269,
            column: 8
          },
          end: {
            line: 269,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 269,
            column: 8
          },
          end: {
            line: 269,
            column: 25
          }
        }, {
          start: {
            line: 269,
            column: 29
          },
          end: {
            line: 269,
            column: 41
          }
        }],
        line: 269
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0]
    },
    inputSourceMap: null,
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "cdb2cf5e70ade6bf8f136a5b8e9f1e12cc0097cd"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1o5xacbhdi = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1o5xacbhdi();
const admin =
/* istanbul ignore next */
(cov_1o5xacbhdi().s[0]++, require('firebase-admin'));
const {
  CosmosClient
} =
/* istanbul ignore next */
(cov_1o5xacbhdi().s[1]++, require('@azure/cosmos'));
const {
  BlobServiceClient
} =
/* istanbul ignore next */
(cov_1o5xacbhdi().s[2]++, require('@azure/storage-blob'));
const {
  DefaultAzureCredential
} =
/* istanbul ignore next */
(cov_1o5xacbhdi().s[3]++, require('@azure/identity'));
const {
  SecretClient
} =
/* istanbul ignore next */
(cov_1o5xacbhdi().s[4]++, require('@azure/keyvault-secrets'));
const {
  createAuthenticatedFunction,
  authMiddleware
} =
/* istanbul ignore next */
(cov_1o5xacbhdi().s[5]++, require('../shared/authMiddleware'));

// Initialize services
let firebaseInitialized =
/* istanbul ignore next */
(cov_1o5xacbhdi().s[6]++, false);
let cosmosClient;
let blobServiceClient;
async function initializeServices() {
  /* istanbul ignore next */
  cov_1o5xacbhdi().f[0]++;
  cov_1o5xacbhdi().s[7]++;
  if (
  /* istanbul ignore next */
  (cov_1o5xacbhdi().b[1][0]++, firebaseInitialized) &&
  /* istanbul ignore next */
  (cov_1o5xacbhdi().b[1][1]++, cosmosClient) &&
  /* istanbul ignore next */
  (cov_1o5xacbhdi().b[1][2]++, blobServiceClient)) {
    /* istanbul ignore next */
    cov_1o5xacbhdi().b[0][0]++;
    cov_1o5xacbhdi().s[8]++;
    return;
  } else
  /* istanbul ignore next */
  {
    cov_1o5xacbhdi().b[0][1]++;
  }
  cov_1o5xacbhdi().s[9]++;
  try {
    // Get secrets from Azure Key Vault
    const credential =
    /* istanbul ignore next */
    (cov_1o5xacbhdi().s[10]++, new DefaultAzureCredential());
    const vaultName =
    /* istanbul ignore next */
    (cov_1o5xacbhdi().s[11]++, process.env.AZURE_KEYVAULT_NAME);
    const url =
    /* istanbul ignore next */
    (cov_1o5xacbhdi().s[12]++, `https://${vaultName}.vault.azure.net`);
    const secretClient =
    /* istanbul ignore next */
    (cov_1o5xacbhdi().s[13]++, new SecretClient(url, credential));

    // Initialize Firebase Admin
    /* istanbul ignore next */
    cov_1o5xacbhdi().s[14]++;
    if (!firebaseInitialized) {
      /* istanbul ignore next */
      cov_1o5xacbhdi().b[2][0]++;
      const serviceAccountSecret =
      /* istanbul ignore next */
      (cov_1o5xacbhdi().s[15]++, await secretClient.getSecret('firebase-service-account-key'));
      const serviceAccount =
      /* istanbul ignore next */
      (cov_1o5xacbhdi().s[16]++, JSON.parse(serviceAccountSecret.value));
      /* istanbul ignore next */
      cov_1o5xacbhdi().s[17]++;
      if (!admin.apps.length) {
        /* istanbul ignore next */
        cov_1o5xacbhdi().b[3][0]++;
        cov_1o5xacbhdi().s[18]++;
        admin.initializeApp({
          credential: admin.credential.cert(serviceAccount),
          projectId: serviceAccount.project_id
        });
      } else
      /* istanbul ignore next */
      {
        cov_1o5xacbhdi().b[3][1]++;
      }
      cov_1o5xacbhdi().s[19]++;
      firebaseInitialized = true;
    } else
    /* istanbul ignore next */
    {
      cov_1o5xacbhdi().b[2][1]++;
    }

    // Initialize Cosmos DB client
    cov_1o5xacbhdi().s[20]++;
    if (!cosmosClient) {
      /* istanbul ignore next */
      cov_1o5xacbhdi().b[4][0]++;
      const connectionString =
      /* istanbul ignore next */
      (cov_1o5xacbhdi().s[21]++, process.env.AZURE_COSMOS_DB_CONNECTION_STRING);
      /* istanbul ignore next */
      cov_1o5xacbhdi().s[22]++;
      cosmosClient = new CosmosClient(connectionString);
    } else
    /* istanbul ignore next */
    {
      cov_1o5xacbhdi().b[4][1]++;
    }

    // Initialize Azure Storage client
    cov_1o5xacbhdi().s[23]++;
    if (!blobServiceClient) {
      /* istanbul ignore next */
      cov_1o5xacbhdi().b[5][0]++;
      const storageConnectionString =
      /* istanbul ignore next */
      (cov_1o5xacbhdi().s[24]++, process.env.AZURE_STORAGE_CONNECTION_STRING);
      /* istanbul ignore next */
      cov_1o5xacbhdi().s[25]++;
      blobServiceClient = BlobServiceClient.fromConnectionString(storageConnectionString);
    } else
    /* istanbul ignore next */
    {
      cov_1o5xacbhdi().b[5][1]++;
    }
    cov_1o5xacbhdi().s[26]++;
    console.log('All services initialized successfully');
  } catch (error) {
    /* istanbul ignore next */
    cov_1o5xacbhdi().s[27]++;
    console.error('Failed to initialize services:', error);
    /* istanbul ignore next */
    cov_1o5xacbhdi().s[28]++;
    throw error;
  }
}

// Collections to delete from Azure Cosmos DB
const COLLECTIONS_TO_DELETE =
/* istanbul ignore next */
(cov_1o5xacbhdi().s[29]++, ['users', 'profiles', 'resumes', 'interviews', 'feedback', 'usage', 'notifications', 'emailVerifications', 'gdprRequests']);

// Internal function that handles the actual deletion logic
async function handleDeleteUserData(context, req, authenticatedUser) {
  /* istanbul ignore next */
  cov_1o5xacbhdi().f[1]++;
  const startTime =
  /* istanbul ignore next */
  (cov_1o5xacbhdi().s[30]++, Date.now());

  // Set CORS headers
  /* istanbul ignore next */
  cov_1o5xacbhdi().s[31]++;
  context.res = {
    headers: {
      'Access-Control-Allow-Origin': '*',
      'Access-Control-Allow-Methods': 'POST, OPTIONS',
      'Access-Control-Allow-Headers': 'Content-Type, Authorization, X-Functions-Key',
      'Content-Type': 'application/json'
    }
  };

  // Handle preflight requests
  /* istanbul ignore next */
  cov_1o5xacbhdi().s[32]++;
  if (req.method === 'OPTIONS') {
    /* istanbul ignore next */
    cov_1o5xacbhdi().b[6][0]++;
    cov_1o5xacbhdi().s[33]++;
    context.res.status = 204;
    /* istanbul ignore next */
    cov_1o5xacbhdi().s[34]++;
    context.res.body = '';
    /* istanbul ignore next */
    cov_1o5xacbhdi().s[35]++;
    return;
  } else
  /* istanbul ignore next */
  {
    cov_1o5xacbhdi().b[6][1]++;
  }
  cov_1o5xacbhdi().s[36]++;
  try {
    /* istanbul ignore next */
    cov_1o5xacbhdi().s[37]++;
    await initializeServices();
    const {
      requestId,
      userId,
      reason
    } =
    /* istanbul ignore next */
    (cov_1o5xacbhdi().s[38]++,
    /* istanbul ignore next */
    (cov_1o5xacbhdi().b[7][0]++, req.body) ||
    /* istanbul ignore next */
    (cov_1o5xacbhdi().b[7][1]++, {}));
    const requestingUserId =
    /* istanbul ignore next */
    (cov_1o5xacbhdi().s[39]++, authenticatedUser.uid);
    const isAdmin =
    /* istanbul ignore next */
    (cov_1o5xacbhdi().s[40]++,
    /* istanbul ignore next */
    (cov_1o5xacbhdi().b[8][0]++, authenticatedUser.custom_claims?.roles?.includes('admin')) ||
    /* istanbul ignore next */
    (cov_1o5xacbhdi().b[8][1]++, false));
    /* istanbul ignore next */
    cov_1o5xacbhdi().s[41]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_1o5xacbhdi().b[9][0]++;
      cov_1o5xacbhdi().s[42]++;
      context.res.status = 400;
      /* istanbul ignore next */
      cov_1o5xacbhdi().s[43]++;
      context.res.body = {
        error: 'User ID is required',
        code: 'MISSING_USER_ID'
      };
      /* istanbul ignore next */
      cov_1o5xacbhdi().s[44]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1o5xacbhdi().b[9][1]++;
    }

    // Verify authorization - either admin or user deleting their own data
    cov_1o5xacbhdi().s[45]++;
    if (
    /* istanbul ignore next */
    (cov_1o5xacbhdi().b[11][0]++, !isAdmin) &&
    /* istanbul ignore next */
    (cov_1o5xacbhdi().b[11][1]++, requestingUserId !== userId)) {
      /* istanbul ignore next */
      cov_1o5xacbhdi().b[10][0]++;
      cov_1o5xacbhdi().s[46]++;
      context.res.status = 403;
      /* istanbul ignore next */
      cov_1o5xacbhdi().s[47]++;
      context.res.body = {
        error: 'Users can only delete their own data. You are authenticated as: ' + requestingUserId,
        code: 'PERMISSION_DENIED'
      };
      /* istanbul ignore next */
      cov_1o5xacbhdi().s[48]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1o5xacbhdi().b[10][1]++;
    }
    const database =
    /* istanbul ignore next */
    (cov_1o5xacbhdi().s[49]++, cosmosClient.database('PrepBettrDB'));
    const deletedCollections =
    /* istanbul ignore next */
    (cov_1o5xacbhdi().s[50]++, []);
    const deletionErrors =
    /* istanbul ignore next */
    (cov_1o5xacbhdi().s[51]++, []);

    // Create deletion request record
    const deletionRequestId =
    /* istanbul ignore next */
    (cov_1o5xacbhdi().s[52]++,
    /* istanbul ignore next */
    (cov_1o5xacbhdi().b[12][0]++, requestId) ||
    /* istanbul ignore next */
    (cov_1o5xacbhdi().b[12][1]++, `del_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`));
    const deletionRequest =
    /* istanbul ignore next */
    (cov_1o5xacbhdi().s[53]++, {
      id: deletionRequestId,
      userId,
      requestedBy:
      /* istanbul ignore next */
      (cov_1o5xacbhdi().b[13][0]++, requestingUserId) ||
      /* istanbul ignore next */
      (cov_1o5xacbhdi().b[13][1]++, userId),
      requestDate: new Date().toISOString(),
      reason:
      /* istanbul ignore next */
      (cov_1o5xacbhdi().b[14][0]++, reason) ||
      /* istanbul ignore next */
      (cov_1o5xacbhdi().b[14][1]++, 'User requested account deletion'),
      status: 'processing',
      deletedData: [],
      errors: []
    });
    /* istanbul ignore next */
    cov_1o5xacbhdi().s[54]++;
    try {
      /* istanbul ignore next */
      cov_1o5xacbhdi().s[55]++;
      await database.container('gdprRequests').items.create(deletionRequest);
      /* istanbul ignore next */
      cov_1o5xacbhdi().s[56]++;
      context.log(`Created deletion request: ${deletionRequestId} for user: ${userId}`);
    } catch (error) {
      /* istanbul ignore next */
      cov_1o5xacbhdi().s[57]++;
      context.log.error('Failed to create deletion request record:', error);
    }

    // Delete from Azure Cosmos DB collections
    /* istanbul ignore next */
    cov_1o5xacbhdi().s[58]++;
    for (const containerName of COLLECTIONS_TO_DELETE) {
      /* istanbul ignore next */
      cov_1o5xacbhdi().s[59]++;
      try {
        const container =
        /* istanbul ignore next */
        (cov_1o5xacbhdi().s[60]++, database.container(containerName));

        // Query for user documents
        const querySpec =
        /* istanbul ignore next */
        (cov_1o5xacbhdi().s[61]++, {
          query: 'SELECT c.id FROM c WHERE c.userId = @userId',
          parameters: [{
            name: '@userId',
            value: userId
          }]
        });
        const {
          resources: documents
        } =
        /* istanbul ignore next */
        (cov_1o5xacbhdi().s[62]++, await container.items.query(querySpec).fetchAll());
        /* istanbul ignore next */
        cov_1o5xacbhdi().s[63]++;
        if (documents.length > 0) {
          /* istanbul ignore next */
          cov_1o5xacbhdi().b[15][0]++;
          // Delete documents in batches
          const batchSize =
          /* istanbul ignore next */
          (cov_1o5xacbhdi().s[64]++, 25);
          let deletedCount =
          /* istanbul ignore next */
          (cov_1o5xacbhdi().s[65]++, 0);
          /* istanbul ignore next */
          cov_1o5xacbhdi().s[66]++;
          for (let i =
          /* istanbul ignore next */
          (cov_1o5xacbhdi().s[67]++, 0); i < documents.length; i += batchSize) {
            const batch =
            /* istanbul ignore next */
            (cov_1o5xacbhdi().s[68]++, documents.slice(i, i + batchSize));
            const deletePromises =
            /* istanbul ignore next */
            (cov_1o5xacbhdi().s[69]++, batch.map(doc => {
              /* istanbul ignore next */
              cov_1o5xacbhdi().f[2]++;
              cov_1o5xacbhdi().s[70]++;
              return container.item(doc.id, userId).delete().catch(err => {
                /* istanbul ignore next */
                cov_1o5xacbhdi().f[3]++;
                cov_1o5xacbhdi().s[71]++;
                context.log.warn(`Failed to delete document ${doc.id} from ${containerName}:`, err);
                /* istanbul ignore next */
                cov_1o5xacbhdi().s[72]++;
                return null;
              });
            }));
            const results =
            /* istanbul ignore next */
            (cov_1o5xacbhdi().s[73]++, await Promise.all(deletePromises));
            /* istanbul ignore next */
            cov_1o5xacbhdi().s[74]++;
            deletedCount += results.filter(result => {
              /* istanbul ignore next */
              cov_1o5xacbhdi().f[4]++;
              cov_1o5xacbhdi().s[75]++;
              return result !== null;
            }).length;
          }
          /* istanbul ignore next */
          cov_1o5xacbhdi().s[76]++;
          deletedCollections.push({
            collection: containerName,
            count: deletedCount
          });
          /* istanbul ignore next */
          cov_1o5xacbhdi().s[77]++;
          context.log(`Deleted ${deletedCount} documents from ${containerName}`);
        } else
        /* istanbul ignore next */
        {
          cov_1o5xacbhdi().b[15][1]++;
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_1o5xacbhdi().s[78]++;
        context.log.error(`Error deleting from ${containerName}:`, error);
        /* istanbul ignore next */
        cov_1o5xacbhdi().s[79]++;
        deletionErrors.push({
          collection: containerName,
          error: error.message
        });
      }
    }

    // Delete from Azure Blob Storage
    /* istanbul ignore next */
    cov_1o5xacbhdi().s[80]++;
    try {
      const containerClient =
      /* istanbul ignore next */
      (cov_1o5xacbhdi().s[81]++, blobServiceClient.getContainerClient('user-files'));
      const prefix =
      /* istanbul ignore next */
      (cov_1o5xacbhdi().s[82]++, `users/${userId}/`);
      let deletedBlobsCount =
      /* istanbul ignore next */
      (cov_1o5xacbhdi().s[83]++, 0);
      /* istanbul ignore next */
      cov_1o5xacbhdi().s[84]++;
      for await (const blob of containerClient.listBlobsFlat({
        prefix
      })) {
        /* istanbul ignore next */
        cov_1o5xacbhdi().s[85]++;
        try {
          /* istanbul ignore next */
          cov_1o5xacbhdi().s[86]++;
          await containerClient.deleteBlob(blob.name);
          /* istanbul ignore next */
          cov_1o5xacbhdi().s[87]++;
          deletedBlobsCount++;
        } catch (error) {
          /* istanbul ignore next */
          cov_1o5xacbhdi().s[88]++;
          context.log.warn(`Failed to delete blob ${blob.name}:`, error);
        }
      }
      /* istanbul ignore next */
      cov_1o5xacbhdi().s[89]++;
      if (deletedBlobsCount > 0) {
        /* istanbul ignore next */
        cov_1o5xacbhdi().b[16][0]++;
        cov_1o5xacbhdi().s[90]++;
        deletedCollections.push({
          collection: 'azure-storage',
          count: deletedBlobsCount
        });
        /* istanbul ignore next */
        cov_1o5xacbhdi().s[91]++;
        context.log(`Deleted ${deletedBlobsCount} files from Azure Storage`);
      } else
      /* istanbul ignore next */
      {
        cov_1o5xacbhdi().b[16][1]++;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_1o5xacbhdi().s[92]++;
      context.log.error('Error deleting from Azure Storage:', error);
      /* istanbul ignore next */
      cov_1o5xacbhdi().s[93]++;
      deletionErrors.push({
        collection: 'azure-storage',
        error: error.message
      });
    }

    // Delete Firebase Authentication record
    /* istanbul ignore next */
    cov_1o5xacbhdi().s[94]++;
    try {
      /* istanbul ignore next */
      cov_1o5xacbhdi().s[95]++;
      await admin.auth().deleteUser(userId);
      /* istanbul ignore next */
      cov_1o5xacbhdi().s[96]++;
      deletedCollections.push({
        collection: 'firebase-auth',
        count: 1
      });
      /* istanbul ignore next */
      cov_1o5xacbhdi().s[97]++;
      context.log(`Deleted Firebase authentication record for user: ${userId}`);
    } catch (error) {
      /* istanbul ignore next */
      cov_1o5xacbhdi().s[98]++;
      context.log.error('Error deleting Firebase auth record:', error);
      /* istanbul ignore next */
      cov_1o5xacbhdi().s[99]++;
      deletionErrors.push({
        collection: 'firebase-auth',
        error: error.message
      });
    }

    // Update deletion request status
    /* istanbul ignore next */
    cov_1o5xacbhdi().s[100]++;
    try {
      const updatedRequest =
      /* istanbul ignore next */
      (cov_1o5xacbhdi().s[101]++, {
        ...deletionRequest,
        status: deletionErrors.length > 0 ?
        /* istanbul ignore next */
        (cov_1o5xacbhdi().b[17][0]++, 'completed-with-errors') :
        /* istanbul ignore next */
        (cov_1o5xacbhdi().b[17][1]++, 'completed'),
        completedDate: new Date().toISOString(),
        deletedData: deletedCollections,
        errors: deletionErrors
      });
      /* istanbul ignore next */
      cov_1o5xacbhdi().s[102]++;
      await database.container('gdprRequests').item(deletionRequestId, userId).replace(updatedRequest);
    } catch (error) {
      /* istanbul ignore next */
      cov_1o5xacbhdi().s[103]++;
      context.log.error('Failed to update deletion request status:', error);
    }

    // Log audit trail
    /* istanbul ignore next */
    cov_1o5xacbhdi().s[104]++;
    try {
      /* istanbul ignore next */
      cov_1o5xacbhdi().s[105]++;
      await database.container('auditLog').items.create({
        id: `audit_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,
        userId,
        action: 'data_deletion_completed',
        timestamp: new Date().toISOString(),
        deletedCollections: deletedCollections.map(c => {
          /* istanbul ignore next */
          cov_1o5xacbhdi().f[5]++;
          cov_1o5xacbhdi().s[106]++;
          return c.collection;
        }),
        errors: deletionErrors,
        requestId: deletionRequestId,
        requestedBy:
        /* istanbul ignore next */
        (cov_1o5xacbhdi().b[18][0]++, requestingUserId) ||
        /* istanbul ignore next */
        (cov_1o5xacbhdi().b[18][1]++, userId),
        duration: Date.now() - startTime
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1o5xacbhdi().s[107]++;
      context.log.error('Failed to create audit log:', error);
    }
    const duration =
    /* istanbul ignore next */
    (cov_1o5xacbhdi().s[108]++, Date.now() - startTime);
    /* istanbul ignore next */
    cov_1o5xacbhdi().s[109]++;
    context.log(`Data deletion completed for user: ${userId} in ${duration}ms`);
    const totalDeleted =
    /* istanbul ignore next */
    (cov_1o5xacbhdi().s[110]++, deletedCollections.reduce((sum, col) => {
      /* istanbul ignore next */
      cov_1o5xacbhdi().f[6]++;
      cov_1o5xacbhdi().s[111]++;
      return sum + col.count;
    }, 0));
    /* istanbul ignore next */
    cov_1o5xacbhdi().s[112]++;
    context.res.status = 200;
    /* istanbul ignore next */
    cov_1o5xacbhdi().s[113]++;
    context.res.body = {
      success: true,
      requestId: deletionRequestId,
      userId,
      totalDeleted,
      deletedCollections,
      errors: deletionErrors,
      duration,
      status: deletionErrors.length > 0 ?
      /* istanbul ignore next */
      (cov_1o5xacbhdi().b[19][0]++, 'completed-with-errors') :
      /* istanbul ignore next */
      (cov_1o5xacbhdi().b[19][1]++, 'completed'),
      message: `User data deletion ${deletionErrors.length > 0 ?
      /* istanbul ignore next */
      (cov_1o5xacbhdi().b[20][0]++, 'completed with some errors') :
      /* istanbul ignore next */
      (cov_1o5xacbhdi().b[20][1]++, 'completed successfully')}`
    };
  } catch (error) {
    const duration =
    /* istanbul ignore next */
    (cov_1o5xacbhdi().s[114]++, Date.now() - startTime);
    /* istanbul ignore next */
    cov_1o5xacbhdi().s[115]++;
    context.log.error(`Error in deleteUserData function (${duration}ms):`, error);

    // Try to update deletion request status to failed
    /* istanbul ignore next */
    cov_1o5xacbhdi().s[116]++;
    if (
    /* istanbul ignore next */
    (cov_1o5xacbhdi().b[22][0]++, deletionRequestId) &&
    /* istanbul ignore next */
    (cov_1o5xacbhdi().b[22][1]++, cosmosClient)) {
      /* istanbul ignore next */
      cov_1o5xacbhdi().b[21][0]++;
      cov_1o5xacbhdi().s[117]++;
      try {
        const database =
        /* istanbul ignore next */
        (cov_1o5xacbhdi().s[118]++, cosmosClient.database('PrepBettrDB'));
        /* istanbul ignore next */
        cov_1o5xacbhdi().s[119]++;
        await database.container('gdprRequests').item(deletionRequestId, userId).patch([{
          op: 'replace',
          path: '/status',
          value: 'failed'
        }, {
          op: 'replace',
          path: '/error',
          value: error.message
        }, {
          op: 'replace',
          path: '/failedAt',
          value: new Date().toISOString()
        }]);
      } catch (updateError) {
        /* istanbul ignore next */
        cov_1o5xacbhdi().s[120]++;
        context.log.error('Failed to update deletion request status to failed:', updateError);
      }
    } else
    /* istanbul ignore next */
    {
      cov_1o5xacbhdi().b[21][1]++;
    }
    cov_1o5xacbhdi().s[121]++;
    context.res.status = 500;
    /* istanbul ignore next */
    cov_1o5xacbhdi().s[122]++;
    context.res.body = {
      error: 'Failed to delete user data',
      code: 'DELETION_FAILED',
      details: error.message
    };
  }
}

// Export authenticated function
/* istanbul ignore next */
cov_1o5xacbhdi().s[123]++;
module.exports = createAuthenticatedFunction(handleDeleteUserData);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,