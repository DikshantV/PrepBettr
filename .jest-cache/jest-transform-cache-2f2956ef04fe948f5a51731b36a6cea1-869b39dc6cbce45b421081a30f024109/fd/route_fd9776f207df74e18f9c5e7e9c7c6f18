e315db5d76c6506088a3816a40fc6d2e
"use strict";

/**
 * GET /api/voice/session/[id]/transcript
 *
 * Retrieves transcript events for an Azure AI Foundry voice session.
 * In future versions, this will use Redis or database for persistence.
 */
/* istanbul ignore next */
function cov_zi46llyr8() {
  var path = "/Users/dikshantvashistha/PrepBettr/app/api/voice/session/[id]/transcript/route.ts";
  var hash = "cd8972fda27088b6db8ed6ae17c54d4f591c4190";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dikshantvashistha/PrepBettr/app/api/voice/session/[id]/transcript/route.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 62
        }
      },
      "1": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 18
        }
      },
      "2": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 10,
          column: 24
        }
      },
      "3": {
        start: {
          line: 11,
          column: 17
        },
        end: {
          line: 11,
          column: 39
        }
      },
      "4": {
        start: {
          line: 12,
          column: 28
        },
        end: {
          line: 12,
          column: 85
        }
      },
      "5": {
        start: {
          line: 17,
          column: 26
        },
        end: {
          line: 17,
          column: 35
        }
      },
      "6": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 24,
          column: 5
        }
      },
      "7": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 45
        }
      },
      "8": {
        start: {
          line: 25,
          column: 24
        },
        end: {
          line: 25,
          column: 56
        }
      },
      "9": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 26,
          column: 28
        }
      },
      "10": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 30,
          column: 5
        }
      },
      "11": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 57
        }
      },
      "12": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 31,
          column: 116
        }
      },
      "13": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 37,
          column: 40
        }
      },
      "14": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 38,
          column: 84
        }
      },
      "15": {
        start: {
          line: 44,
          column: 4
        },
        end: {
          line: 46,
          column: 5
        }
      },
      "16": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 67
        }
      },
      "17": {
        start: {
          line: 47,
          column: 4
        },
        end: {
          line: 49,
          column: 5
        }
      },
      "18": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 48,
          column: 70
        }
      },
      "19": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 53,
          column: 5
        }
      },
      "20": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 52,
          column: 83
        }
      },
      "21": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 54,
          column: 29
        }
      },
      "22": {
        start: {
          line: 60,
          column: 16
        },
        end: {
          line: 60,
          column: 19
        }
      },
      "23": {
        start: {
          line: 61,
          column: 17
        },
        end: {
          line: 61,
          column: 18
        }
      },
      "24": {
        start: {
          line: 62,
          column: 20
        },
        end: {
          line: 62,
          column: 25
        }
      },
      "25": {
        start: {
          line: 65,
          column: 23
        },
        end: {
          line: 65,
          column: 48
        }
      },
      "26": {
        start: {
          line: 66,
          column: 4
        },
        end: {
          line: 72,
          column: 5
        }
      },
      "27": {
        start: {
          line: 67,
          column: 28
        },
        end: {
          line: 67,
          column: 52
        }
      },
      "28": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 70,
          column: 9
        }
      },
      "29": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 69,
          column: 115
        }
      },
      "30": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 71,
          column: 28
        }
      },
      "31": {
        start: {
          line: 74,
          column: 24
        },
        end: {
          line: 74,
          column: 50
        }
      },
      "32": {
        start: {
          line: 75,
          column: 4
        },
        end: {
          line: 81,
          column: 5
        }
      },
      "33": {
        start: {
          line: 76,
          column: 29
        },
        end: {
          line: 76,
          column: 54
        }
      },
      "34": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 79,
          column: 9
        }
      },
      "35": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 78,
          column: 119
        }
      },
      "36": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 80,
          column: 30
        }
      },
      "37": {
        start: {
          line: 83,
          column: 27
        },
        end: {
          line: 83,
          column: 57
        }
      },
      "38": {
        start: {
          line: 84,
          column: 4
        },
        end: {
          line: 86,
          column: 5
        }
      },
      "39": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 85,
          column: 80
        }
      },
      "40": {
        start: {
          line: 88,
          column: 24
        },
        end: {
          line: 88,
          column: 50
        }
      },
      "41": {
        start: {
          line: 89,
          column: 4
        },
        end: {
          line: 94,
          column: 5
        }
      },
      "42": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 92,
          column: 9
        }
      },
      "43": {
        start: {
          line: 91,
          column: 12
        },
        end: {
          line: 91,
          column: 126
        }
      },
      "44": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 93,
          column: 29
        }
      },
      "45": {
        start: {
          line: 95,
          column: 4
        },
        end: {
          line: 95,
          column: 63
        }
      },
      "46": {
        start: {
          line: 101,
          column: 4
        },
        end: {
          line: 173,
          column: 5
        }
      },
      "47": {
        start: {
          line: 102,
          column: 31
        },
        end: {
          line: 102,
          column: 43
        }
      },
      "48": {
        start: {
          line: 103,
          column: 26
        },
        end: {
          line: 103,
          column: 43
        }
      },
      "49": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 104,
          column: 81
        }
      },
      "50": {
        start: {
          line: 106,
          column: 34
        },
        end: {
          line: 106,
          column: 62
        }
      },
      "51": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 117,
          column: 9
        }
      },
      "52": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 108,
          column: 82
        }
      },
      "53": {
        start: {
          line: 109,
          column: 12
        },
        end: {
          line: 116,
          column: 32
        }
      },
      "54": {
        start: {
          line: 119,
          column: 33
        },
        end: {
          line: 119,
          column: 53
        }
      },
      "55": {
        start: {
          line: 120,
          column: 32
        },
        end: {
          line: 120,
          column: 62
        }
      },
      "56": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 131,
          column: 9
        }
      },
      "57": {
        start: {
          line: 122,
          column: 12
        },
        end: {
          line: 122,
          column: 86
        }
      },
      "58": {
        start: {
          line: 123,
          column: 12
        },
        end: {
          line: 130,
          column: 32
        }
      },
      "59": {
        start: {
          line: 132,
          column: 53
        },
        end: {
          line: 132,
          column: 68
        }
      },
      "60": {
        start: {
          line: 134,
          column: 28
        },
        end: {
          line: 134,
          column: 73
        }
      },
      "61": {
        start: {
          line: 135,
          column: 28
        },
        end: {
          line: 135,
          column: 61
        }
      },
      "62": {
        start: {
          line: 136,
          column: 8
        },
        end: {
          line: 139,
          column: 9
        }
      },
      "63": {
        start: {
          line: 137,
          column: 12
        },
        end: {
          line: 137,
          column: 85
        }
      },
      "64": {
        start: {
          line: 141,
          column: 26
        },
        end: {
          line: 141,
          column: 64
        }
      },
      "65": {
        start: {
          line: 143,
          column: 8
        },
        end: {
          line: 145,
          column: 9
        }
      },
      "66": {
        start: {
          line: 144,
          column: 12
        },
        end: {
          line: 144,
          column: 69
        }
      },
      "67": {
        start: {
          line: 144,
          column: 54
        },
        end: {
          line: 144,
          column: 67
        }
      },
      "68": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 148,
          column: 9
        }
      },
      "69": {
        start: {
          line: 147,
          column: 12
        },
        end: {
          line: 147,
          column: 79
        }
      },
      "70": {
        start: {
          line: 147,
          column: 54
        },
        end: {
          line: 147,
          column: 77
        }
      },
      "71": {
        start: {
          line: 149,
          column: 29
        },
        end: {
          line: 149,
          column: 47
        }
      },
      "72": {
        start: {
          line: 151,
          column: 37
        },
        end: {
          line: 151,
          column: 78
        }
      },
      "73": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 152,
          column: 135
        }
      },
      "74": {
        start: {
          line: 153,
          column: 8
        },
        end: {
          line: 159,
          column: 28
        }
      },
      "75": {
        start: {
          line: 162,
          column: 8
        },
        end: {
          line: 162,
          column: 72
        }
      },
      "76": {
        start: {
          line: 163,
          column: 31
        },
        end: {
          line: 163,
          column: 43
        }
      },
      "77": {
        start: {
          line: 164,
          column: 26
        },
        end: {
          line: 164,
          column: 56
        }
      },
      "78": {
        start: {
          line: 165,
          column: 8
        },
        end: {
          line: 172,
          column: 28
        }
      },
      "79": {
        start: {
          line: 179,
          column: 4
        },
        end: {
          line: 204,
          column: 5
        }
      },
      "80": {
        start: {
          line: 180,
          column: 31
        },
        end: {
          line: 180,
          column: 43
        }
      },
      "81": {
        start: {
          line: 181,
          column: 26
        },
        end: {
          line: 181,
          column: 43
        }
      },
      "82": {
        start: {
          line: 182,
          column: 8
        },
        end: {
          line: 182,
          column: 80
        }
      },
      "83": {
        start: {
          line: 184,
          column: 34
        },
        end: {
          line: 184,
          column: 62
        }
      },
      "84": {
        start: {
          line: 185,
          column: 8
        },
        end: {
          line: 189,
          column: 9
        }
      },
      "85": {
        start: {
          line: 186,
          column: 12
        },
        end: {
          line: 188,
          column: 32
        }
      },
      "86": {
        start: {
          line: 191,
          column: 8
        },
        end: {
          line: 191,
          column: 42
        }
      },
      "87": {
        start: {
          line: 192,
          column: 8
        },
        end: {
          line: 197,
          column: 28
        }
      },
      "88": {
        start: {
          line: 200,
          column: 8
        },
        end: {
          line: 200,
          column: 69
        }
      },
      "89": {
        start: {
          line: 201,
          column: 8
        },
        end: {
          line: 203,
          column: 28
        }
      }
    },
    fnMap: {
      "0": {
        name: "addTranscriptEntry",
        decl: {
          start: {
            line: 21,
            column: 9
          },
          end: {
            line: 21,
            column: 27
          }
        },
        loc: {
          start: {
            line: 21,
            column: 46
          },
          end: {
            line: 32,
            column: 1
          }
        },
        line: 21
      },
      "1": {
        name: "clearTranscriptStorage",
        decl: {
          start: {
            line: 36,
            column: 9
          },
          end: {
            line: 36,
            column: 31
          }
        },
        loc: {
          start: {
            line: 36,
            column: 43
          },
          end: {
            line: 39,
            column: 1
          }
        },
        line: 36
      },
      "2": {
        name: "validateSessionId",
        decl: {
          start: {
            line: 43,
            column: 9
          },
          end: {
            line: 43,
            column: 26
          }
        },
        loc: {
          start: {
            line: 43,
            column: 38
          },
          end: {
            line: 55,
            column: 1
          }
        },
        line: 43
      },
      "3": {
        name: "parseQueryParams",
        decl: {
          start: {
            line: 59,
            column: 9
          },
          end: {
            line: 59,
            column: 25
          }
        },
        loc: {
          start: {
            line: 59,
            column: 40
          },
          end: {
            line: 96,
            column: 1
          }
        },
        line: 59
      },
      "4": {
        name: "GET",
        decl: {
          start: {
            line: 100,
            column: 15
          },
          end: {
            line: 100,
            column: 18
          }
        },
        loc: {
          start: {
            line: 100,
            column: 40
          },
          end: {
            line: 174,
            column: 1
          }
        },
        line: 100
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 144,
            column: 45
          },
          end: {
            line: 144,
            column: 46
          }
        },
        loc: {
          start: {
            line: 144,
            column: 54
          },
          end: {
            line: 144,
            column: 67
          }
        },
        line: 144
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 147,
            column: 45
          },
          end: {
            line: 147,
            column: 46
          }
        },
        loc: {
          start: {
            line: 147,
            column: 54
          },
          end: {
            line: 147,
            column: 77
          }
        },
        line: 147
      },
      "7": {
        name: "DELETE",
        decl: {
          start: {
            line: 178,
            column: 15
          },
          end: {
            line: 178,
            column: 21
          }
        },
        loc: {
          start: {
            line: 178,
            column: 43
          },
          end: {
            line: 205,
            column: 1
          }
        },
        line: 178
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "1": {
        loc: {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "2": {
        loc: {
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 44
      },
      "3": {
        loc: {
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 44,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 44,
            column: 18
          }
        }, {
          start: {
            line: 44,
            column: 22
          },
          end: {
            line: 44,
            column: 51
          }
        }],
        line: 44
      },
      "4": {
        loc: {
          start: {
            line: 47,
            column: 4
          },
          end: {
            line: 49,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 4
          },
          end: {
            line: 49,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 47
      },
      "5": {
        loc: {
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 47,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 47,
            column: 29
          }
        }, {
          start: {
            line: 47,
            column: 33
          },
          end: {
            line: 47,
            column: 55
          }
        }],
        line: 47
      },
      "6": {
        loc: {
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 53,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 53,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 51
      },
      "7": {
        loc: {
          start: {
            line: 66,
            column: 4
          },
          end: {
            line: 72,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 66,
            column: 4
          },
          end: {
            line: 72,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 66
      },
      "8": {
        loc: {
          start: {
            line: 68,
            column: 8
          },
          end: {
            line: 70,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 68,
            column: 8
          },
          end: {
            line: 70,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 68
      },
      "9": {
        loc: {
          start: {
            line: 68,
            column: 12
          },
          end: {
            line: 68,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 68,
            column: 12
          },
          end: {
            line: 68,
            column: 30
          }
        }, {
          start: {
            line: 68,
            column: 34
          },
          end: {
            line: 68,
            column: 49
          }
        }, {
          start: {
            line: 68,
            column: 53
          },
          end: {
            line: 68,
            column: 71
          }
        }],
        line: 68
      },
      "10": {
        loc: {
          start: {
            line: 75,
            column: 4
          },
          end: {
            line: 81,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 75,
            column: 4
          },
          end: {
            line: 81,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 75
      },
      "11": {
        loc: {
          start: {
            line: 77,
            column: 8
          },
          end: {
            line: 79,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 77,
            column: 8
          },
          end: {
            line: 79,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 77
      },
      "12": {
        loc: {
          start: {
            line: 77,
            column: 12
          },
          end: {
            line: 77,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 77,
            column: 12
          },
          end: {
            line: 77,
            column: 31
          }
        }, {
          start: {
            line: 77,
            column: 35
          },
          end: {
            line: 77,
            column: 51
          }
        }],
        line: 77
      },
      "13": {
        loc: {
          start: {
            line: 84,
            column: 4
          },
          end: {
            line: 86,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 84,
            column: 4
          },
          end: {
            line: 86,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 84
      },
      "14": {
        loc: {
          start: {
            line: 89,
            column: 4
          },
          end: {
            line: 94,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 89,
            column: 4
          },
          end: {
            line: 94,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 89
      },
      "15": {
        loc: {
          start: {
            line: 90,
            column: 8
          },
          end: {
            line: 92,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 90,
            column: 8
          },
          end: {
            line: 92,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 90
      },
      "16": {
        loc: {
          start: {
            line: 107,
            column: 8
          },
          end: {
            line: 117,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 107,
            column: 8
          },
          end: {
            line: 117,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 107
      },
      "17": {
        loc: {
          start: {
            line: 121,
            column: 8
          },
          end: {
            line: 131,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 121,
            column: 8
          },
          end: {
            line: 131,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 121
      },
      "18": {
        loc: {
          start: {
            line: 136,
            column: 8
          },
          end: {
            line: 139,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 136,
            column: 8
          },
          end: {
            line: 139,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 136
      },
      "19": {
        loc: {
          start: {
            line: 141,
            column: 26
          },
          end: {
            line: 141,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 141,
            column: 26
          },
          end: {
            line: 141,
            column: 58
          }
        }, {
          start: {
            line: 141,
            column: 62
          },
          end: {
            line: 141,
            column: 64
          }
        }],
        line: 141
      },
      "20": {
        loc: {
          start: {
            line: 143,
            column: 8
          },
          end: {
            line: 145,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 143,
            column: 8
          },
          end: {
            line: 145,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 143
      },
      "21": {
        loc: {
          start: {
            line: 146,
            column: 8
          },
          end: {
            line: 148,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 146,
            column: 8
          },
          end: {
            line: 148,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 146
      },
      "22": {
        loc: {
          start: {
            line: 164,
            column: 26
          },
          end: {
            line: 164,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 164,
            column: 26
          },
          end: {
            line: 164,
            column: 43
          }
        }, {
          start: {
            line: 164,
            column: 47
          },
          end: {
            line: 164,
            column: 56
          }
        }],
        line: 164
      },
      "23": {
        loc: {
          start: {
            line: 170,
            column: 19
          },
          end: {
            line: 170,
            column: 83
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 170,
            column: 44
          },
          end: {
            line: 170,
            column: 57
          }
        }, {
          start: {
            line: 170,
            column: 60
          },
          end: {
            line: 170,
            column: 83
          }
        }],
        line: 170
      },
      "24": {
        loc: {
          start: {
            line: 185,
            column: 8
          },
          end: {
            line: 189,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 185,
            column: 8
          },
          end: {
            line: 189,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 185
      },
      "25": {
        loc: {
          start: {
            line: 202,
            column: 19
          },
          end: {
            line: 202,
            column: 83
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 202,
            column: 44
          },
          end: {
            line: 202,
            column: 57
          }
        }, {
          start: {
            line: 202,
            column: 60
          },
          end: {
            line: 202,
            column: 83
          }
        }],
        line: 202
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/dikshantvashistha/PrepBettr/app/api/voice/session/[id]/transcript/route.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/dikshantvashistha/PrepBettr/app/api/voice/session/[id]/transcript/route.ts"],
      sourcesContent: ["/**\n * GET /api/voice/session/[id]/transcript\n * \n * Retrieves transcript events for an Azure AI Foundry voice session.\n * In future versions, this will use Redis or database for persistence.\n */\n\nimport { NextRequest, NextResponse } from 'next/server';\nimport { getVoiceLiveClient } from '@/lib/azure-ai-foundry/voice/voice-live-client';\n\n/**\n * Transcript entry structure\n */\ninterface TranscriptEntry {\n  text: string;\n  timestamp: number;\n  confidence?: number;\n  isFinal: boolean;\n  source: 'user' | 'assistant';\n  duration?: number;\n}\n\n/**\n * Response schema\n */\ninterface TranscriptResponse {\n  success: boolean;\n  sessionId: string;\n  transcripts: TranscriptEntry[];\n  totalEntries: number;\n  error?: string;\n  retrievedAt: string;\n}\n\n/**\n * Route parameters\n */\ninterface RouteParams {\n  id: string;\n}\n\n/**\n * Query parameters\n */\ninterface QueryParams {\n  limit?: string;\n  offset?: string;\n  final_only?: string;\n  source?: string;\n}\n\n/**\n * In-memory storage for transcripts (replace with Redis/database in production)\n * Key: sessionId, Value: array of transcript entries\n */\nconst transcriptStorage = new Map<string, TranscriptEntry[]>();\n\n/**\n * Add transcript entry to storage\n */\nfunction addTranscriptEntry(sessionId: string, entry: TranscriptEntry): void {\n  if (!transcriptStorage.has(sessionId)) {\n    transcriptStorage.set(sessionId, []);\n  }\n  \n  const transcripts = transcriptStorage.get(sessionId)!;\n  transcripts.push(entry);\n  \n  // Limit storage to last 1000 entries per session to prevent memory issues\n  if (transcripts.length > 1000) {\n    transcripts.splice(0, transcripts.length - 1000);\n  }\n  \n  console.log(`\uD83D\uDCDD [TranscriptStorage] Added entry for session ${sessionId}: \"${entry.text.substring(0, 50)}...\"`);\n}\n\n/**\n * Clear transcript storage for a session\n */\nfunction clearTranscriptStorage(sessionId: string): void {\n  transcriptStorage.delete(sessionId);\n  console.log(`\uD83D\uDDD1\uFE0F [TranscriptStorage] Cleared storage for session ${sessionId}`);\n}\n\n/**\n * Validate session ID format\n */\nfunction validateSessionId(sessionId: string): { isValid: boolean; error?: string } {\n  if (!sessionId || typeof sessionId !== 'string') {\n    return { isValid: false, error: 'Session ID is required' };\n  }\n\n  if (sessionId.length < 10 || sessionId.length > 100) {\n    return { isValid: false, error: 'Invalid session ID format' };\n  }\n\n  // Basic format validation\n  if (!/^[a-zA-Z0-9\\-_]+$/.test(sessionId)) {\n    return { isValid: false, error: 'Session ID contains invalid characters' };\n  }\n\n  return { isValid: true };\n}\n\n/**\n * Parse and validate query parameters\n */\nfunction parseQueryParams(searchParams: URLSearchParams): {\n  limit: number;\n  offset: number;\n  finalOnly: boolean;\n  source?: 'user' | 'assistant';\n  isValid: boolean;\n  error?: string;\n} {\n  let limit = 100; // Default limit\n  let offset = 0;  // Default offset\n  let finalOnly = false;\n  let source: 'user' | 'assistant' | undefined;\n\n  // Parse limit\n  const limitParam = searchParams.get('limit');\n  if (limitParam) {\n    const parsedLimit = parseInt(limitParam, 10);\n    if (isNaN(parsedLimit) || parsedLimit < 1 || parsedLimit > 1000) {\n      return { limit, offset, finalOnly, source, isValid: false, error: 'Limit must be between 1 and 1000' };\n    }\n    limit = parsedLimit;\n  }\n\n  // Parse offset\n  const offsetParam = searchParams.get('offset');\n  if (offsetParam) {\n    const parsedOffset = parseInt(offsetParam, 10);\n    if (isNaN(parsedOffset) || parsedOffset < 0) {\n      return { limit, offset, finalOnly, source, isValid: false, error: 'Offset must be a non-negative number' };\n    }\n    offset = parsedOffset;\n  }\n\n  // Parse final_only\n  const finalOnlyParam = searchParams.get('final_only');\n  if (finalOnlyParam) {\n    finalOnly = ['true', '1', 'yes'].includes(finalOnlyParam.toLowerCase());\n  }\n\n  // Parse source filter\n  const sourceParam = searchParams.get('source');\n  if (sourceParam) {\n    if (!['user', 'assistant'].includes(sourceParam)) {\n      return { limit, offset, finalOnly, source, isValid: false, error: 'Source must be either \"user\" or \"assistant\"' };\n    }\n    source = sourceParam as 'user' | 'assistant';\n  }\n\n  return { limit, offset, finalOnly, source, isValid: true };\n}\n\n/**\n * GET handler for retrieving session transcripts\n */\nexport async function GET(\n  request: NextRequest,\n  { params }: { params: Promise<RouteParams> }\n): Promise<NextResponse<TranscriptResponse>> {\n  try {\n    const resolvedParams = await params;\n    const sessionId = resolvedParams.id;\n    console.log(`\uD83D\uDCD6 [API] Retrieving transcripts for session: ${sessionId}`);\n\n    // Validate session ID\n    const sessionValidation = validateSessionId(sessionId);\n    if (!sessionValidation.isValid) {\n      console.error('\u274C [API] Invalid session ID:', sessionValidation.error);\n      return NextResponse.json({\n        success: false,\n        sessionId,\n        transcripts: [],\n        totalEntries: 0,\n        error: sessionValidation.error,\n        retrievedAt: new Date().toISOString()\n      }, { status: 400 });\n    }\n\n    // Parse query parameters\n    const { searchParams } = new URL(request.url);\n    const queryValidation = parseQueryParams(searchParams);\n    if (!queryValidation.isValid) {\n      console.error('\u274C [API] Invalid query parameters:', queryValidation.error);\n      return NextResponse.json({\n        success: false,\n        sessionId,\n        transcripts: [],\n        totalEntries: 0,\n        error: queryValidation.error,\n        retrievedAt: new Date().toISOString()\n      }, { status: 400 });\n    }\n\n    const { limit, offset, finalOnly, source } = queryValidation;\n\n    // Check if session exists in voice client\n    const voiceClient = getVoiceLiveClient();\n    const sessionMeta = voiceClient.getSession(sessionId);\n\n    if (!sessionMeta) {\n      console.warn(`\u26A0\uFE0F [API] Session not found in voice client: ${sessionId}`);\n      // Still check transcript storage in case session was recently stopped\n    }\n\n    // Retrieve transcripts from storage\n    let transcripts = transcriptStorage.get(sessionId) || [];\n\n    // Apply filters\n    if (finalOnly) {\n      transcripts = transcripts.filter(entry => entry.isFinal);\n    }\n\n    if (source) {\n      transcripts = transcripts.filter(entry => entry.source === source);\n    }\n\n    const totalEntries = transcripts.length;\n\n    // Apply pagination\n    const paginatedTranscripts = transcripts.slice(offset, offset + limit);\n\n    console.log(`\uD83D\uDCD6 [API] Retrieved ${paginatedTranscripts.length} transcripts (total: ${totalEntries}) for session ${sessionId}`);\n\n    return NextResponse.json({\n      success: true,\n      sessionId,\n      transcripts: paginatedTranscripts,\n      totalEntries,\n      retrievedAt: new Date().toISOString()\n    }, { status: 200 });\n\n  } catch (error) {\n    console.error('\u274C [API] Failed to retrieve transcripts:', error);\n    \n    const resolvedParams = await params;\n    const sessionId = resolvedParams.id || 'unknown';\n    \n    return NextResponse.json({\n      success: false,\n      sessionId,\n      transcripts: [],\n      totalEntries: 0,\n      error: error instanceof Error ? error.message : 'Internal server error',\n      retrievedAt: new Date().toISOString()\n    }, { status: 500 });\n  }\n}\n\n/**\n * DELETE handler for clearing session transcripts\n */\nexport async function DELETE(\n  request: NextRequest,\n  { params }: { params: Promise<RouteParams> }\n): Promise<NextResponse> {\n  try {\n    const resolvedParams = await params;\n    const sessionId = resolvedParams.id;\n    console.log(`\uD83D\uDDD1\uFE0F [API] Clearing transcripts for session: ${sessionId}`);\n\n    // Validate session ID\n    const sessionValidation = validateSessionId(sessionId);\n    if (!sessionValidation.isValid) {\n      return NextResponse.json({\n        error: sessionValidation.error\n      }, { status: 400 });\n    }\n\n    // Clear transcript storage\n    clearTranscriptStorage(sessionId);\n\n    return NextResponse.json({\n      success: true,\n      sessionId,\n      message: 'Transcripts cleared successfully',\n      clearedAt: new Date().toISOString()\n    }, { status: 200 });\n\n  } catch (error) {\n    console.error('\u274C [API] Failed to clear transcripts:', error);\n    \n    return NextResponse.json({\n      error: error instanceof Error ? error.message : 'Internal server error'\n    }, { status: 500 });\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "cd8972fda27088b6db8ed6ae17c54d4f591c4190"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_zi46llyr8 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_zi46llyr8();
cov_zi46llyr8().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_zi46llyr8().s[1]++;
exports.GET = GET;
/* istanbul ignore next */
cov_zi46llyr8().s[2]++;
exports.DELETE = DELETE;
const server_1 =
/* istanbul ignore next */
(cov_zi46llyr8().s[3]++, require("next/server"));
const voice_live_client_1 =
/* istanbul ignore next */
(cov_zi46llyr8().s[4]++, require("@/lib/azure-ai-foundry/voice/voice-live-client"));
/**
 * In-memory storage for transcripts (replace with Redis/database in production)
 * Key: sessionId, Value: array of transcript entries
 */
const transcriptStorage =
/* istanbul ignore next */
(cov_zi46llyr8().s[5]++, new Map());
/**
 * Add transcript entry to storage
 */
function addTranscriptEntry(sessionId, entry) {
  /* istanbul ignore next */
  cov_zi46llyr8().f[0]++;
  cov_zi46llyr8().s[6]++;
  if (!transcriptStorage.has(sessionId)) {
    /* istanbul ignore next */
    cov_zi46llyr8().b[0][0]++;
    cov_zi46llyr8().s[7]++;
    transcriptStorage.set(sessionId, []);
  } else
  /* istanbul ignore next */
  {
    cov_zi46llyr8().b[0][1]++;
  }
  const transcripts =
  /* istanbul ignore next */
  (cov_zi46llyr8().s[8]++, transcriptStorage.get(sessionId));
  /* istanbul ignore next */
  cov_zi46llyr8().s[9]++;
  transcripts.push(entry);
  // Limit storage to last 1000 entries per session to prevent memory issues
  /* istanbul ignore next */
  cov_zi46llyr8().s[10]++;
  if (transcripts.length > 1000) {
    /* istanbul ignore next */
    cov_zi46llyr8().b[1][0]++;
    cov_zi46llyr8().s[11]++;
    transcripts.splice(0, transcripts.length - 1000);
  } else
  /* istanbul ignore next */
  {
    cov_zi46llyr8().b[1][1]++;
  }
  cov_zi46llyr8().s[12]++;
  console.log(`📝 [TranscriptStorage] Added entry for session ${sessionId}: "${entry.text.substring(0, 50)}..."`);
}
/**
 * Clear transcript storage for a session
 */
function clearTranscriptStorage(sessionId) {
  /* istanbul ignore next */
  cov_zi46llyr8().f[1]++;
  cov_zi46llyr8().s[13]++;
  transcriptStorage.delete(sessionId);
  /* istanbul ignore next */
  cov_zi46llyr8().s[14]++;
  console.log(`🗑️ [TranscriptStorage] Cleared storage for session ${sessionId}`);
}
/**
 * Validate session ID format
 */
function validateSessionId(sessionId) {
  /* istanbul ignore next */
  cov_zi46llyr8().f[2]++;
  cov_zi46llyr8().s[15]++;
  if (
  /* istanbul ignore next */
  (cov_zi46llyr8().b[3][0]++, !sessionId) ||
  /* istanbul ignore next */
  (cov_zi46llyr8().b[3][1]++, typeof sessionId !== 'string')) {
    /* istanbul ignore next */
    cov_zi46llyr8().b[2][0]++;
    cov_zi46llyr8().s[16]++;
    return {
      isValid: false,
      error: 'Session ID is required'
    };
  } else
  /* istanbul ignore next */
  {
    cov_zi46llyr8().b[2][1]++;
  }
  cov_zi46llyr8().s[17]++;
  if (
  /* istanbul ignore next */
  (cov_zi46llyr8().b[5][0]++, sessionId.length < 10) ||
  /* istanbul ignore next */
  (cov_zi46llyr8().b[5][1]++, sessionId.length > 100)) {
    /* istanbul ignore next */
    cov_zi46llyr8().b[4][0]++;
    cov_zi46llyr8().s[18]++;
    return {
      isValid: false,
      error: 'Invalid session ID format'
    };
  } else
  /* istanbul ignore next */
  {
    cov_zi46llyr8().b[4][1]++;
  }
  // Basic format validation
  cov_zi46llyr8().s[19]++;
  if (!/^[a-zA-Z0-9\-_]+$/.test(sessionId)) {
    /* istanbul ignore next */
    cov_zi46llyr8().b[6][0]++;
    cov_zi46llyr8().s[20]++;
    return {
      isValid: false,
      error: 'Session ID contains invalid characters'
    };
  } else
  /* istanbul ignore next */
  {
    cov_zi46llyr8().b[6][1]++;
  }
  cov_zi46llyr8().s[21]++;
  return {
    isValid: true
  };
}
/**
 * Parse and validate query parameters
 */
function parseQueryParams(searchParams) {
  /* istanbul ignore next */
  cov_zi46llyr8().f[3]++;
  let limit =
  /* istanbul ignore next */
  (cov_zi46llyr8().s[22]++, 100); // Default limit
  let offset =
  /* istanbul ignore next */
  (cov_zi46llyr8().s[23]++, 0); // Default offset
  let finalOnly =
  /* istanbul ignore next */
  (cov_zi46llyr8().s[24]++, false);
  let source;
  // Parse limit
  const limitParam =
  /* istanbul ignore next */
  (cov_zi46llyr8().s[25]++, searchParams.get('limit'));
  /* istanbul ignore next */
  cov_zi46llyr8().s[26]++;
  if (limitParam) {
    /* istanbul ignore next */
    cov_zi46llyr8().b[7][0]++;
    const parsedLimit =
    /* istanbul ignore next */
    (cov_zi46llyr8().s[27]++, parseInt(limitParam, 10));
    /* istanbul ignore next */
    cov_zi46llyr8().s[28]++;
    if (
    /* istanbul ignore next */
    (cov_zi46llyr8().b[9][0]++, isNaN(parsedLimit)) ||
    /* istanbul ignore next */
    (cov_zi46llyr8().b[9][1]++, parsedLimit < 1) ||
    /* istanbul ignore next */
    (cov_zi46llyr8().b[9][2]++, parsedLimit > 1000)) {
      /* istanbul ignore next */
      cov_zi46llyr8().b[8][0]++;
      cov_zi46llyr8().s[29]++;
      return {
        limit,
        offset,
        finalOnly,
        source,
        isValid: false,
        error: 'Limit must be between 1 and 1000'
      };
    } else
    /* istanbul ignore next */
    {
      cov_zi46llyr8().b[8][1]++;
    }
    cov_zi46llyr8().s[30]++;
    limit = parsedLimit;
  } else
  /* istanbul ignore next */
  {
    cov_zi46llyr8().b[7][1]++;
  }
  // Parse offset
  const offsetParam =
  /* istanbul ignore next */
  (cov_zi46llyr8().s[31]++, searchParams.get('offset'));
  /* istanbul ignore next */
  cov_zi46llyr8().s[32]++;
  if (offsetParam) {
    /* istanbul ignore next */
    cov_zi46llyr8().b[10][0]++;
    const parsedOffset =
    /* istanbul ignore next */
    (cov_zi46llyr8().s[33]++, parseInt(offsetParam, 10));
    /* istanbul ignore next */
    cov_zi46llyr8().s[34]++;
    if (
    /* istanbul ignore next */
    (cov_zi46llyr8().b[12][0]++, isNaN(parsedOffset)) ||
    /* istanbul ignore next */
    (cov_zi46llyr8().b[12][1]++, parsedOffset < 0)) {
      /* istanbul ignore next */
      cov_zi46llyr8().b[11][0]++;
      cov_zi46llyr8().s[35]++;
      return {
        limit,
        offset,
        finalOnly,
        source,
        isValid: false,
        error: 'Offset must be a non-negative number'
      };
    } else
    /* istanbul ignore next */
    {
      cov_zi46llyr8().b[11][1]++;
    }
    cov_zi46llyr8().s[36]++;
    offset = parsedOffset;
  } else
  /* istanbul ignore next */
  {
    cov_zi46llyr8().b[10][1]++;
  }
  // Parse final_only
  const finalOnlyParam =
  /* istanbul ignore next */
  (cov_zi46llyr8().s[37]++, searchParams.get('final_only'));
  /* istanbul ignore next */
  cov_zi46llyr8().s[38]++;
  if (finalOnlyParam) {
    /* istanbul ignore next */
    cov_zi46llyr8().b[13][0]++;
    cov_zi46llyr8().s[39]++;
    finalOnly = ['true', '1', 'yes'].includes(finalOnlyParam.toLowerCase());
  } else
  /* istanbul ignore next */
  {
    cov_zi46llyr8().b[13][1]++;
  }
  // Parse source filter
  const sourceParam =
  /* istanbul ignore next */
  (cov_zi46llyr8().s[40]++, searchParams.get('source'));
  /* istanbul ignore next */
  cov_zi46llyr8().s[41]++;
  if (sourceParam) {
    /* istanbul ignore next */
    cov_zi46llyr8().b[14][0]++;
    cov_zi46llyr8().s[42]++;
    if (!['user', 'assistant'].includes(sourceParam)) {
      /* istanbul ignore next */
      cov_zi46llyr8().b[15][0]++;
      cov_zi46llyr8().s[43]++;
      return {
        limit,
        offset,
        finalOnly,
        source,
        isValid: false,
        error: 'Source must be either "user" or "assistant"'
      };
    } else
    /* istanbul ignore next */
    {
      cov_zi46llyr8().b[15][1]++;
    }
    cov_zi46llyr8().s[44]++;
    source = sourceParam;
  } else
  /* istanbul ignore next */
  {
    cov_zi46llyr8().b[14][1]++;
  }
  cov_zi46llyr8().s[45]++;
  return {
    limit,
    offset,
    finalOnly,
    source,
    isValid: true
  };
}
/**
 * GET handler for retrieving session transcripts
 */
async function GET(request, {
  params
}) {
  /* istanbul ignore next */
  cov_zi46llyr8().f[4]++;
  cov_zi46llyr8().s[46]++;
  try {
    const resolvedParams =
    /* istanbul ignore next */
    (cov_zi46llyr8().s[47]++, await params);
    const sessionId =
    /* istanbul ignore next */
    (cov_zi46llyr8().s[48]++, resolvedParams.id);
    /* istanbul ignore next */
    cov_zi46llyr8().s[49]++;
    console.log(`📖 [API] Retrieving transcripts for session: ${sessionId}`);
    // Validate session ID
    const sessionValidation =
    /* istanbul ignore next */
    (cov_zi46llyr8().s[50]++, validateSessionId(sessionId));
    /* istanbul ignore next */
    cov_zi46llyr8().s[51]++;
    if (!sessionValidation.isValid) {
      /* istanbul ignore next */
      cov_zi46llyr8().b[16][0]++;
      cov_zi46llyr8().s[52]++;
      console.error('❌ [API] Invalid session ID:', sessionValidation.error);
      /* istanbul ignore next */
      cov_zi46llyr8().s[53]++;
      return server_1.NextResponse.json({
        success: false,
        sessionId,
        transcripts: [],
        totalEntries: 0,
        error: sessionValidation.error,
        retrievedAt: new Date().toISOString()
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_zi46llyr8().b[16][1]++;
    }
    // Parse query parameters
    const {
      searchParams
    } =
    /* istanbul ignore next */
    (cov_zi46llyr8().s[54]++, new URL(request.url));
    const queryValidation =
    /* istanbul ignore next */
    (cov_zi46llyr8().s[55]++, parseQueryParams(searchParams));
    /* istanbul ignore next */
    cov_zi46llyr8().s[56]++;
    if (!queryValidation.isValid) {
      /* istanbul ignore next */
      cov_zi46llyr8().b[17][0]++;
      cov_zi46llyr8().s[57]++;
      console.error('❌ [API] Invalid query parameters:', queryValidation.error);
      /* istanbul ignore next */
      cov_zi46llyr8().s[58]++;
      return server_1.NextResponse.json({
        success: false,
        sessionId,
        transcripts: [],
        totalEntries: 0,
        error: queryValidation.error,
        retrievedAt: new Date().toISOString()
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_zi46llyr8().b[17][1]++;
    }
    const {
      limit,
      offset,
      finalOnly,
      source
    } =
    /* istanbul ignore next */
    (cov_zi46llyr8().s[59]++, queryValidation);
    // Check if session exists in voice client
    const voiceClient =
    /* istanbul ignore next */
    (cov_zi46llyr8().s[60]++, (0, voice_live_client_1.getVoiceLiveClient)());
    const sessionMeta =
    /* istanbul ignore next */
    (cov_zi46llyr8().s[61]++, voiceClient.getSession(sessionId));
    /* istanbul ignore next */
    cov_zi46llyr8().s[62]++;
    if (!sessionMeta) {
      /* istanbul ignore next */
      cov_zi46llyr8().b[18][0]++;
      cov_zi46llyr8().s[63]++;
      console.warn(`⚠️ [API] Session not found in voice client: ${sessionId}`);
      // Still check transcript storage in case session was recently stopped
    } else
    /* istanbul ignore next */
    {
      cov_zi46llyr8().b[18][1]++;
    }
    // Retrieve transcripts from storage
    let transcripts =
    /* istanbul ignore next */
    (cov_zi46llyr8().s[64]++,
    /* istanbul ignore next */
    (cov_zi46llyr8().b[19][0]++, transcriptStorage.get(sessionId)) ||
    /* istanbul ignore next */
    (cov_zi46llyr8().b[19][1]++, []));
    // Apply filters
    /* istanbul ignore next */
    cov_zi46llyr8().s[65]++;
    if (finalOnly) {
      /* istanbul ignore next */
      cov_zi46llyr8().b[20][0]++;
      cov_zi46llyr8().s[66]++;
      transcripts = transcripts.filter(entry => {
        /* istanbul ignore next */
        cov_zi46llyr8().f[5]++;
        cov_zi46llyr8().s[67]++;
        return entry.isFinal;
      });
    } else
    /* istanbul ignore next */
    {
      cov_zi46llyr8().b[20][1]++;
    }
    cov_zi46llyr8().s[68]++;
    if (source) {
      /* istanbul ignore next */
      cov_zi46llyr8().b[21][0]++;
      cov_zi46llyr8().s[69]++;
      transcripts = transcripts.filter(entry => {
        /* istanbul ignore next */
        cov_zi46llyr8().f[6]++;
        cov_zi46llyr8().s[70]++;
        return entry.source === source;
      });
    } else
    /* istanbul ignore next */
    {
      cov_zi46llyr8().b[21][1]++;
    }
    const totalEntries =
    /* istanbul ignore next */
    (cov_zi46llyr8().s[71]++, transcripts.length);
    // Apply pagination
    const paginatedTranscripts =
    /* istanbul ignore next */
    (cov_zi46llyr8().s[72]++, transcripts.slice(offset, offset + limit));
    /* istanbul ignore next */
    cov_zi46llyr8().s[73]++;
    console.log(`📖 [API] Retrieved ${paginatedTranscripts.length} transcripts (total: ${totalEntries}) for session ${sessionId}`);
    /* istanbul ignore next */
    cov_zi46llyr8().s[74]++;
    return server_1.NextResponse.json({
      success: true,
      sessionId,
      transcripts: paginatedTranscripts,
      totalEntries,
      retrievedAt: new Date().toISOString()
    }, {
      status: 200
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_zi46llyr8().s[75]++;
    console.error('❌ [API] Failed to retrieve transcripts:', error);
    const resolvedParams =
    /* istanbul ignore next */
    (cov_zi46llyr8().s[76]++, await params);
    const sessionId =
    /* istanbul ignore next */
    (cov_zi46llyr8().s[77]++,
    /* istanbul ignore next */
    (cov_zi46llyr8().b[22][0]++, resolvedParams.id) ||
    /* istanbul ignore next */
    (cov_zi46llyr8().b[22][1]++, 'unknown'));
    /* istanbul ignore next */
    cov_zi46llyr8().s[78]++;
    return server_1.NextResponse.json({
      success: false,
      sessionId,
      transcripts: [],
      totalEntries: 0,
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_zi46llyr8().b[23][0]++, error.message) :
      /* istanbul ignore next */
      (cov_zi46llyr8().b[23][1]++, 'Internal server error'),
      retrievedAt: new Date().toISOString()
    }, {
      status: 500
    });
  }
}
/**
 * DELETE handler for clearing session transcripts
 */
async function DELETE(request, {
  params
}) {
  /* istanbul ignore next */
  cov_zi46llyr8().f[7]++;
  cov_zi46llyr8().s[79]++;
  try {
    const resolvedParams =
    /* istanbul ignore next */
    (cov_zi46llyr8().s[80]++, await params);
    const sessionId =
    /* istanbul ignore next */
    (cov_zi46llyr8().s[81]++, resolvedParams.id);
    /* istanbul ignore next */
    cov_zi46llyr8().s[82]++;
    console.log(`🗑️ [API] Clearing transcripts for session: ${sessionId}`);
    // Validate session ID
    const sessionValidation =
    /* istanbul ignore next */
    (cov_zi46llyr8().s[83]++, validateSessionId(sessionId));
    /* istanbul ignore next */
    cov_zi46llyr8().s[84]++;
    if (!sessionValidation.isValid) {
      /* istanbul ignore next */
      cov_zi46llyr8().b[24][0]++;
      cov_zi46llyr8().s[85]++;
      return server_1.NextResponse.json({
        error: sessionValidation.error
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_zi46llyr8().b[24][1]++;
    }
    // Clear transcript storage
    cov_zi46llyr8().s[86]++;
    clearTranscriptStorage(sessionId);
    /* istanbul ignore next */
    cov_zi46llyr8().s[87]++;
    return server_1.NextResponse.json({
      success: true,
      sessionId,
      message: 'Transcripts cleared successfully',
      clearedAt: new Date().toISOString()
    }, {
      status: 200
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_zi46llyr8().s[88]++;
    console.error('❌ [API] Failed to clear transcripts:', error);
    /* istanbul ignore next */
    cov_zi46llyr8().s[89]++;
    return server_1.NextResponse.json({
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_zi46llyr8().b[25][0]++, error.message) :
      /* istanbul ignore next */
      (cov_zi46llyr8().b[25][1]++, 'Internal server error')
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,