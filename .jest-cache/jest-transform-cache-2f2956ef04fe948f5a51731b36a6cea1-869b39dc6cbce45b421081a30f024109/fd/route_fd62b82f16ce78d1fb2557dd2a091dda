5cf563e2e30fcff89adf598f10142f60
"use strict";

/* istanbul ignore next */
function cov_1pssjp2l4() {
  var path = "/Users/dikshantvashistha/PrepBettr/app/api/voice/session/[id]/ws/route.ts";
  var hash = "f5826a7855bb6b5b7ca68269f600916472fa0a0f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dikshantvashistha/PrepBettr/app/api/voice/session/[id]/ws/route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 25
        }
      },
      "2": {
        start: {
          line: 4,
          column: 0
        },
        end: {
          line: 4,
          column: 18
        }
      },
      "3": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 25
        }
      },
      "4": {
        start: {
          line: 6,
          column: 32
        },
        end: {
          line: 6,
          column: 93
        }
      },
      "5": {
        start: {
          line: 8,
          column: 27
        },
        end: {
          line: 8,
          column: 39
        }
      },
      "6": {
        start: {
          line: 9,
          column: 22
        },
        end: {
          line: 9,
          column: 39
        }
      },
      "7": {
        start: {
          line: 11,
          column: 27
        },
        end: {
          line: 11,
          column: 80
        }
      },
      "8": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 56
        }
      },
      "9": {
        start: {
          line: 13,
          column: 4
        },
        end: {
          line: 15,
          column: 5
        }
      },
      "10": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 91
        }
      },
      "11": {
        start: {
          line: 17,
          column: 49
        },
        end: {
          line: 17,
          column: 79
        }
      },
      "12": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 19,
          column: 26
        }
      },
      "13": {
        start: {
          line: 20,
          column: 19
        },
        end: {
          line: 20,
          column: 23
        }
      },
      "14": {
        start: {
          line: 21,
          column: 17
        },
        end: {
          line: 21,
          column: 22
        }
      },
      "15": {
        start: {
          line: 22,
          column: 22
        },
        end: {
          line: 34,
          column: 5
        }
      },
      "16": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 24,
          column: 19
        }
      },
      "17": {
        start: {
          line: 24,
          column: 12
        },
        end: {
          line: 24,
          column: 19
        }
      },
      "18": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 22
        }
      },
      "19": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 29,
          column: 22
        }
      },
      "20": {
        start: {
          line: 27,
          column: 12
        },
        end: {
          line: 27,
          column: 45
        }
      },
      "21": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 33,
          column: 22
        }
      },
      "22": {
        start: {
          line: 31,
          column: 12
        },
        end: {
          line: 31,
          column: 93
        }
      },
      "23": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 97,
          column: 5
        }
      },
      "24": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 62
        }
      },
      "25": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 41,
          column: 11
        }
      },
      "26": {
        start: {
          line: 40,
          column: 12
        },
        end: {
          line: 40,
          column: 105
        }
      },
      "27": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 56,
          column: 11
        }
      },
      "28": {
        start: {
          line: 43,
          column: 12
        },
        end: {
          line: 55,
          column: 13
        }
      },
      "29": {
        start: {
          line: 45,
          column: 16
        },
        end: {
          line: 50,
          column: 17
        }
      },
      "30": {
        start: {
          line: 46,
          column: 20
        },
        end: {
          line: 46,
          column: 50
        }
      },
      "31": {
        start: {
          line: 49,
          column: 20
        },
        end: {
          line: 49,
          column: 50
        }
      },
      "32": {
        start: {
          line: 54,
          column: 16
        },
        end: {
          line: 54,
          column: 66
        }
      },
      "33": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 59,
          column: 11
        }
      },
      "34": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 58,
          column: 77
        }
      },
      "35": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 62,
          column: 11
        }
      },
      "36": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 61,
          column: 46
        }
      },
      "37": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 78,
          column: 11
        }
      },
      "38": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 77,
          column: 13
        }
      },
      "39": {
        start: {
          line: 66,
          column: 16
        },
        end: {
          line: 73,
          column: 17
        }
      },
      "40": {
        start: {
          line: 67,
          column: 20
        },
        end: {
          line: 72,
          column: 21
        }
      },
      "41": {
        start: {
          line: 68,
          column: 24
        },
        end: {
          line: 68,
          column: 50
        }
      },
      "42": {
        start: {
          line: 71,
          column: 24
        },
        end: {
          line: 71,
          column: 50
        }
      },
      "43": {
        start: {
          line: 76,
          column: 16
        },
        end: {
          line: 76,
          column: 66
        }
      },
      "44": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 81,
          column: 11
        }
      },
      "45": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 80,
          column: 75
        }
      },
      "46": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 84,
          column: 11
        }
      },
      "47": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 83,
          column: 44
        }
      },
      "48": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 89,
          column: 11
        }
      },
      "49": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 95,
          column: 22
        }
      },
      "50": {
        start: {
          line: 93,
          column: 12
        },
        end: {
          line: 93,
          column: 55
        }
      },
      "51": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 96,
          column: 84
        }
      }
    },
    fnMap: {
      "0": {
        name: "GET",
        decl: {
          start: {
            line: 7,
            column: 15
          },
          end: {
            line: 7,
            column: 18
          }
        },
        loc: {
          start: {
            line: 7,
            column: 36
          },
          end: {
            line: 98,
            column: 1
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 22,
            column: 22
          },
          end: {
            line: 22,
            column: 23
          }
        },
        loc: {
          start: {
            line: 22,
            column: 66
          },
          end: {
            line: 34,
            column: 5
          }
        },
        line: 22
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 38,
            column: 42
          },
          end: {
            line: 38,
            column: 43
          }
        },
        loc: {
          start: {
            line: 38,
            column: 48
          },
          end: {
            line: 41,
            column: 9
          }
        },
        line: 38
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 42,
            column: 45
          },
          end: {
            line: 42,
            column: 46
          }
        },
        loc: {
          start: {
            line: 42,
            column: 56
          },
          end: {
            line: 56,
            column: 9
          }
        },
        line: 42
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 57,
            column: 43
          },
          end: {
            line: 57,
            column: 44
          }
        },
        loc: {
          start: {
            line: 57,
            column: 54
          },
          end: {
            line: 59,
            column: 9
          }
        },
        line: 57
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 60,
            column: 43
          },
          end: {
            line: 60,
            column: 44
          }
        },
        loc: {
          start: {
            line: 60,
            column: 49
          },
          end: {
            line: 62,
            column: 9
          }
        },
        line: 60
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 64,
            column: 49
          },
          end: {
            line: 64,
            column: 50
          }
        },
        loc: {
          start: {
            line: 64,
            column: 60
          },
          end: {
            line: 78,
            column: 9
          }
        },
        line: 64
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 79,
            column: 47
          },
          end: {
            line: 79,
            column: 48
          }
        },
        loc: {
          start: {
            line: 79,
            column: 58
          },
          end: {
            line: 81,
            column: 9
          }
        },
        line: 79
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 82,
            column: 47
          },
          end: {
            line: 82,
            column: 48
          }
        },
        loc: {
          start: {
            line: 82,
            column: 53
          },
          end: {
            line: 84,
            column: 9
          }
        },
        line: 82
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 13
      },
      "1": {
        loc: {
          start: {
            line: 13,
            column: 8
          },
          end: {
            line: 13,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 8
          },
          end: {
            line: 13,
            column: 16
          }
        }, {
          start: {
            line: 13,
            column: 20
          },
          end: {
            line: 13,
            column: 34
          }
        }],
        line: 13
      },
      "2": {
        loc: {
          start: {
            line: 22,
            column: 23
          },
          end: {
            line: 22,
            column: 34
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 22,
            column: 30
          },
          end: {
            line: 22,
            column: 34
          }
        }],
        line: 22
      },
      "3": {
        loc: {
          start: {
            line: 22,
            column: 36
          },
          end: {
            line: 22,
            column: 61
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 22,
            column: 45
          },
          end: {
            line: 22,
            column: 61
          }
        }],
        line: 22
      },
      "4": {
        loc: {
          start: {
            line: 23,
            column: 8
          },
          end: {
            line: 24,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 23,
            column: 8
          },
          end: {
            line: 24,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 23
      },
      "5": {
        loc: {
          start: {
            line: 31,
            column: 12
          },
          end: {
            line: 31,
            column: 92
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 31,
            column: 55
          },
          end: {
            line: 31,
            column: 61
          }
        }, {
          start: {
            line: 31,
            column: 64
          },
          end: {
            line: 31,
            column: 92
          }
        }],
        line: 31
      },
      "6": {
        loc: {
          start: {
            line: 31,
            column: 12
          },
          end: {
            line: 31,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 31,
            column: 12
          },
          end: {
            line: 31,
            column: 29
          }
        }, {
          start: {
            line: 31,
            column: 33
          },
          end: {
            line: 31,
            column: 52
          }
        }],
        line: 31
      },
      "7": {
        loc: {
          start: {
            line: 45,
            column: 16
          },
          end: {
            line: 50,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 45,
            column: 16
          },
          end: {
            line: 50,
            column: 17
          }
        }, {
          start: {
            line: 48,
            column: 21
          },
          end: {
            line: 50,
            column: 17
          }
        }],
        line: 45
      },
      "8": {
        loc: {
          start: {
            line: 45,
            column: 20
          },
          end: {
            line: 45,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 45,
            column: 20
          },
          end: {
            line: 45,
            column: 53
          }
        }, {
          start: {
            line: 45,
            column: 57
          },
          end: {
            line: 45,
            column: 89
          }
        }],
        line: 45
      },
      "9": {
        loc: {
          start: {
            line: 58,
            column: 22
          },
          end: {
            line: 58,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 58,
            column: 22
          },
          end: {
            line: 58,
            column: 32
          }
        }, {
          start: {
            line: 58,
            column: 36
          },
          end: {
            line: 58,
            column: 40
          }
        }],
        line: 58
      },
      "10": {
        loc: {
          start: {
            line: 58,
            column: 42
          },
          end: {
            line: 58,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 58,
            column: 42
          },
          end: {
            line: 58,
            column: 54
          }
        }, {
          start: {
            line: 58,
            column: 58
          },
          end: {
            line: 58,
            column: 75
          }
        }],
        line: 58
      },
      "11": {
        loc: {
          start: {
            line: 66,
            column: 16
          },
          end: {
            line: 73,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 66,
            column: 16
          },
          end: {
            line: 73,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 66
      },
      "12": {
        loc: {
          start: {
            line: 66,
            column: 20
          },
          end: {
            line: 66,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 66,
            column: 20
          },
          end: {
            line: 66,
            column: 28
          }
        }, {
          start: {
            line: 66,
            column: 32
          },
          end: {
            line: 66,
            column: 69
          }
        }],
        line: 66
      },
      "13": {
        loc: {
          start: {
            line: 67,
            column: 20
          },
          end: {
            line: 72,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 67,
            column: 20
          },
          end: {
            line: 72,
            column: 21
          }
        }, {
          start: {
            line: 70,
            column: 25
          },
          end: {
            line: 72,
            column: 21
          }
        }],
        line: 67
      },
      "14": {
        loc: {
          start: {
            line: 67,
            column: 24
          },
          end: {
            line: 67,
            column: 93
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 67,
            column: 24
          },
          end: {
            line: 67,
            column: 57
          }
        }, {
          start: {
            line: 67,
            column: 61
          },
          end: {
            line: 67,
            column: 93
          }
        }],
        line: 67
      },
      "15": {
        loc: {
          start: {
            line: 80,
            column: 22
          },
          end: {
            line: 80,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 80,
            column: 22
          },
          end: {
            line: 80,
            column: 32
          }
        }, {
          start: {
            line: 80,
            column: 36
          },
          end: {
            line: 80,
            column: 40
          }
        }],
        line: 80
      },
      "16": {
        loc: {
          start: {
            line: 80,
            column: 42
          },
          end: {
            line: 80,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 80,
            column: 42
          },
          end: {
            line: 80,
            column: 54
          }
        }, {
          start: {
            line: 80,
            column: 58
          },
          end: {
            line: 80,
            column: 73
          }
        }],
        line: 80
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0],
      "3": [0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/dikshantvashistha/PrepBettr/app/api/voice/session/[id]/ws/route.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/dikshantvashistha/PrepBettr/app/api/voice/session/[id]/ws/route.ts"],
      sourcesContent: ["export const runtime = 'edge';\n\n/**\n * WebSocket proxy for Azure AI Foundry realtime voice sessions\n *\n * Route: /api/voice/session/[id]/ws\n * - Upgrades client HTTP request to WebSocket\n * - Connects to Azure Foundry realtime WebSocket (server-side)\n * - Bi-directionally pipes messages between client and Azure\n * - Ensures API keys remain on server only\n */\n\nimport type { NextRequest } from 'next/server';\nimport { getVoiceSessionStorage } from '@/lib/azure-ai-foundry/voice/voice-session-storage';\n\nexport async function GET(req: NextRequest, { params }: { params: Promise<{ id: string }> }) {\n  const resolvedParams = await params;\n  const sessionId = resolvedParams.id;\n\n  // Validate session\n  const sessionStorage = getVoiceSessionStorage();\n  const session = sessionStorage.getSession(sessionId);\n  if (!session || !session.wsUrl) {\n    return new Response('Session not found or missing WebSocket URL', { status: 404 });\n  }\n\n  // Create a WebSocket pair (client <-> server)\n  const { 0: clientSocket, 1: serverSocket } = new (globalThis as any).WebSocketPair();\n\n  // Accept the client side of the pair\n  (clientSocket as any).accept();\n\n  let upstream: WebSocket | null = null;\n  let closed = false;\n\n  const closeBoth = (code = 1000, reason = 'Normal Closure') => {\n    if (closed) return;\n    closed = true;\n    try { (clientSocket as any).close(code, reason); } catch {}\n    try { upstream?.close(code, reason); } catch {}\n  };\n\n  try {\n    // Connect to Azure Foundry realtime WebSocket\n    upstream = new WebSocket(session.wsUrl, ['realtime']);\n\n    upstream.addEventListener('open', () => {\n      // Connection established with Azure\n      (clientSocket as any).send(JSON.stringify({ type: 'control', data: { connected: true }, sessionId }));\n    });\n\n    upstream.addEventListener('message', (event) => {\n      try {\n        // Forward as-is to client. If binary, forward binary; else text\n        if (event.data instanceof ArrayBuffer || event.data instanceof Uint8Array) {\n          (clientSocket as any).send(event.data as any);\n        } else {\n          (clientSocket as any).send(event.data as any);\n        }\n      } catch (err) {\n        // Swallow send errors and close\n        closeBoth(1011, 'Upstream->Client forward error');\n      }\n    });\n\n    upstream.addEventListener('close', (event) => {\n      closeBoth(event.code || 1000, event.reason || 'Upstream closed');\n    });\n\n    upstream.addEventListener('error', () => {\n      closeBoth(1011, 'Upstream error');\n    });\n\n    // Forward messages from client -> upstream\n    (clientSocket as any).addEventListener('message', (event: MessageEvent) => {\n      try {\n        if (upstream && upstream.readyState === upstream.OPEN) {\n          if (event.data instanceof ArrayBuffer || event.data instanceof Uint8Array) {\n            upstream.send(event.data as any);\n          } else {\n            upstream.send(event.data as any);\n          }\n        }\n      } catch {\n        closeBoth(1011, 'Client->Upstream forward error');\n      }\n    });\n\n    (clientSocket as any).addEventListener('close', (event: CloseEvent) => {\n      closeBoth(event.code || 1000, event.reason || 'Client closed');\n    });\n\n    (clientSocket as any).addEventListener('error', () => {\n      closeBoth(1011, 'Client error');\n    });\n\n    // Return the other end of the pair to complete the upgrade\n    return new Response(null, {\n      status: 101,\n      webSocket: serverSocket,\n    } as any);\n  } catch (err) {\n    try { closeBoth(1011, 'WebSocket setup failure'); } catch {}\n    return new Response('Failed to establish WebSocket proxy', { status: 500 });\n  }\n}\n\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f5826a7855bb6b5b7ca68269f600916472fa0a0f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1pssjp2l4 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1pssjp2l4();
cov_1pssjp2l4().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1pssjp2l4().s[1]++;
exports.runtime = void 0;
/* istanbul ignore next */
cov_1pssjp2l4().s[2]++;
exports.GET = GET;
/* istanbul ignore next */
cov_1pssjp2l4().s[3]++;
exports.runtime = 'edge';
const voice_session_storage_1 =
/* istanbul ignore next */
(cov_1pssjp2l4().s[4]++, require("@/lib/azure-ai-foundry/voice/voice-session-storage"));
async function GET(req, {
  params
}) {
  /* istanbul ignore next */
  cov_1pssjp2l4().f[0]++;
  const resolvedParams =
  /* istanbul ignore next */
  (cov_1pssjp2l4().s[5]++, await params);
  const sessionId =
  /* istanbul ignore next */
  (cov_1pssjp2l4().s[6]++, resolvedParams.id);
  // Validate session
  const sessionStorage =
  /* istanbul ignore next */
  (cov_1pssjp2l4().s[7]++, (0, voice_session_storage_1.getVoiceSessionStorage)());
  const session =
  /* istanbul ignore next */
  (cov_1pssjp2l4().s[8]++, sessionStorage.getSession(sessionId));
  /* istanbul ignore next */
  cov_1pssjp2l4().s[9]++;
  if (
  /* istanbul ignore next */
  (cov_1pssjp2l4().b[1][0]++, !session) ||
  /* istanbul ignore next */
  (cov_1pssjp2l4().b[1][1]++, !session.wsUrl)) {
    /* istanbul ignore next */
    cov_1pssjp2l4().b[0][0]++;
    cov_1pssjp2l4().s[10]++;
    return new Response('Session not found or missing WebSocket URL', {
      status: 404
    });
  } else
  /* istanbul ignore next */
  {
    cov_1pssjp2l4().b[0][1]++;
  }
  // Create a WebSocket pair (client <-> server)
  const {
    0: clientSocket,
    1: serverSocket
  } =
  /* istanbul ignore next */
  (cov_1pssjp2l4().s[11]++, new globalThis.WebSocketPair());
  // Accept the client side of the pair
  /* istanbul ignore next */
  cov_1pssjp2l4().s[12]++;
  clientSocket.accept();
  let upstream =
  /* istanbul ignore next */
  (cov_1pssjp2l4().s[13]++, null);
  let closed =
  /* istanbul ignore next */
  (cov_1pssjp2l4().s[14]++, false);
  /* istanbul ignore next */
  cov_1pssjp2l4().s[15]++;
  const closeBoth = (code =
  /* istanbul ignore next */
  (cov_1pssjp2l4().b[2][0]++, 1000), reason =
  /* istanbul ignore next */
  (cov_1pssjp2l4().b[3][0]++, 'Normal Closure')) => {
    /* istanbul ignore next */
    cov_1pssjp2l4().f[1]++;
    cov_1pssjp2l4().s[16]++;
    if (closed) {
      /* istanbul ignore next */
      cov_1pssjp2l4().b[4][0]++;
      cov_1pssjp2l4().s[17]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1pssjp2l4().b[4][1]++;
    }
    cov_1pssjp2l4().s[18]++;
    closed = true;
    /* istanbul ignore next */
    cov_1pssjp2l4().s[19]++;
    try {
      /* istanbul ignore next */
      cov_1pssjp2l4().s[20]++;
      clientSocket.close(code, reason);
    } catch (_a) {}
    /* istanbul ignore next */
    cov_1pssjp2l4().s[21]++;
    try {
      /* istanbul ignore next */
      cov_1pssjp2l4().s[22]++;
      /* istanbul ignore next */
      (cov_1pssjp2l4().b[6][0]++, upstream === null) ||
      /* istanbul ignore next */
      (cov_1pssjp2l4().b[6][1]++, upstream === void 0) ?
      /* istanbul ignore next */
      (cov_1pssjp2l4().b[5][0]++, void 0) :
      /* istanbul ignore next */
      (cov_1pssjp2l4().b[5][1]++, upstream.close(code, reason));
    } catch (_b) {}
  };
  /* istanbul ignore next */
  cov_1pssjp2l4().s[23]++;
  try {
    /* istanbul ignore next */
    cov_1pssjp2l4().s[24]++;
    // Connect to Azure Foundry realtime WebSocket
    upstream = new WebSocket(session.wsUrl, ['realtime']);
    /* istanbul ignore next */
    cov_1pssjp2l4().s[25]++;
    upstream.addEventListener('open', () => {
      /* istanbul ignore next */
      cov_1pssjp2l4().f[2]++;
      cov_1pssjp2l4().s[26]++;
      // Connection established with Azure
      clientSocket.send(JSON.stringify({
        type: 'control',
        data: {
          connected: true
        },
        sessionId
      }));
    });
    /* istanbul ignore next */
    cov_1pssjp2l4().s[27]++;
    upstream.addEventListener('message', event => {
      /* istanbul ignore next */
      cov_1pssjp2l4().f[3]++;
      cov_1pssjp2l4().s[28]++;
      try {
        /* istanbul ignore next */
        cov_1pssjp2l4().s[29]++;
        // Forward as-is to client. If binary, forward binary; else text
        if (
        /* istanbul ignore next */
        (cov_1pssjp2l4().b[8][0]++, event.data instanceof ArrayBuffer) ||
        /* istanbul ignore next */
        (cov_1pssjp2l4().b[8][1]++, event.data instanceof Uint8Array)) {
          /* istanbul ignore next */
          cov_1pssjp2l4().b[7][0]++;
          cov_1pssjp2l4().s[30]++;
          clientSocket.send(event.data);
        } else {
          /* istanbul ignore next */
          cov_1pssjp2l4().b[7][1]++;
          cov_1pssjp2l4().s[31]++;
          clientSocket.send(event.data);
        }
      } catch (err) {
        /* istanbul ignore next */
        cov_1pssjp2l4().s[32]++;
        // Swallow send errors and close
        closeBoth(1011, 'Upstream->Client forward error');
      }
    });
    /* istanbul ignore next */
    cov_1pssjp2l4().s[33]++;
    upstream.addEventListener('close', event => {
      /* istanbul ignore next */
      cov_1pssjp2l4().f[4]++;
      cov_1pssjp2l4().s[34]++;
      closeBoth(
      /* istanbul ignore next */
      (cov_1pssjp2l4().b[9][0]++, event.code) ||
      /* istanbul ignore next */
      (cov_1pssjp2l4().b[9][1]++, 1000),
      /* istanbul ignore next */
      (cov_1pssjp2l4().b[10][0]++, event.reason) ||
      /* istanbul ignore next */
      (cov_1pssjp2l4().b[10][1]++, 'Upstream closed'));
    });
    /* istanbul ignore next */
    cov_1pssjp2l4().s[35]++;
    upstream.addEventListener('error', () => {
      /* istanbul ignore next */
      cov_1pssjp2l4().f[5]++;
      cov_1pssjp2l4().s[36]++;
      closeBoth(1011, 'Upstream error');
    });
    // Forward messages from client -> upstream
    /* istanbul ignore next */
    cov_1pssjp2l4().s[37]++;
    clientSocket.addEventListener('message', event => {
      /* istanbul ignore next */
      cov_1pssjp2l4().f[6]++;
      cov_1pssjp2l4().s[38]++;
      try {
        /* istanbul ignore next */
        cov_1pssjp2l4().s[39]++;
        if (
        /* istanbul ignore next */
        (cov_1pssjp2l4().b[12][0]++, upstream) &&
        /* istanbul ignore next */
        (cov_1pssjp2l4().b[12][1]++, upstream.readyState === upstream.OPEN)) {
          /* istanbul ignore next */
          cov_1pssjp2l4().b[11][0]++;
          cov_1pssjp2l4().s[40]++;
          if (
          /* istanbul ignore next */
          (cov_1pssjp2l4().b[14][0]++, event.data instanceof ArrayBuffer) ||
          /* istanbul ignore next */
          (cov_1pssjp2l4().b[14][1]++, event.data instanceof Uint8Array)) {
            /* istanbul ignore next */
            cov_1pssjp2l4().b[13][0]++;
            cov_1pssjp2l4().s[41]++;
            upstream.send(event.data);
          } else {
            /* istanbul ignore next */
            cov_1pssjp2l4().b[13][1]++;
            cov_1pssjp2l4().s[42]++;
            upstream.send(event.data);
          }
        } else
        /* istanbul ignore next */
        {
          cov_1pssjp2l4().b[11][1]++;
        }
      } catch (_a) {
        /* istanbul ignore next */
        cov_1pssjp2l4().s[43]++;
        closeBoth(1011, 'Client->Upstream forward error');
      }
    });
    /* istanbul ignore next */
    cov_1pssjp2l4().s[44]++;
    clientSocket.addEventListener('close', event => {
      /* istanbul ignore next */
      cov_1pssjp2l4().f[7]++;
      cov_1pssjp2l4().s[45]++;
      closeBoth(
      /* istanbul ignore next */
      (cov_1pssjp2l4().b[15][0]++, event.code) ||
      /* istanbul ignore next */
      (cov_1pssjp2l4().b[15][1]++, 1000),
      /* istanbul ignore next */
      (cov_1pssjp2l4().b[16][0]++, event.reason) ||
      /* istanbul ignore next */
      (cov_1pssjp2l4().b[16][1]++, 'Client closed'));
    });
    /* istanbul ignore next */
    cov_1pssjp2l4().s[46]++;
    clientSocket.addEventListener('error', () => {
      /* istanbul ignore next */
      cov_1pssjp2l4().f[8]++;
      cov_1pssjp2l4().s[47]++;
      closeBoth(1011, 'Client error');
    });
    // Return the other end of the pair to complete the upgrade
    /* istanbul ignore next */
    cov_1pssjp2l4().s[48]++;
    return new Response(null, {
      status: 101,
      webSocket: serverSocket
    });
  } catch (err) {
    /* istanbul ignore next */
    cov_1pssjp2l4().s[49]++;
    try {
      /* istanbul ignore next */
      cov_1pssjp2l4().s[50]++;
      closeBoth(1011, 'WebSocket setup failure');
    } catch (_a) {}
    /* istanbul ignore next */
    cov_1pssjp2l4().s[51]++;
    return new Response('Failed to establish WebSocket proxy', {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,