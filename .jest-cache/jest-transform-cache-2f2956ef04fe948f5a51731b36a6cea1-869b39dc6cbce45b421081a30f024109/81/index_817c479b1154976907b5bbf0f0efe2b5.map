{"version":3,"names":["cov_16xqln3io0","actualCoverage","app","s","require","timer","schedule","handler","myTimer","context","f","log","Date","toISOString","jobNotificationIntegration","notificationService","now","hour","getUTCHours","processBatchedNotifications","b","getUTCMinutes","processDailySummaries","cleanupOldNotificationEvents","error","sendDailySummaries","result","cleanupOldEvents","deleted"],"sources":["index.js"],"sourcesContent":["const { app } = require('@azure/functions');\n\n// Timer trigger function for scheduled notification processing\n// Runs every 15 minutes for batched notifications and daily at 9 AM for summaries\napp.timer('notificationScheduler', {\n    // Cron expression: \"0 */15 * * * *\" = every 15 minutes\n    // Cron expression: \"0 0 9 * * *\" = daily at 9 AM UTC\n    schedule: '0 */15 * * * *',\n    handler: async (myTimer, context) => {\n        context.log('Notification Scheduler triggered at:', new Date().toISOString());\n\n        try {\n            const { jobNotificationIntegration } = require('../../lib/services/job-notification-integration');\n            const { notificationService } = require('../../lib/services/notification-service');\n\n            const now = new Date();\n            const hour = now.getUTCHours();\n            \n            // Process batched notifications every 15 minutes\n            context.log('Processing batched notifications...');\n            await processBatchedNotifications(context);\n            \n            // Send daily summaries at 9 AM UTC (adjust timezone as needed)\n            if (hour === 9 && now.getUTCMinutes() < 15) {\n                context.log('Processing daily summaries...');\n                await processDailySummaries(context);\n            }\n            \n            // Clean up old notification events once per day at 2 AM UTC\n            if (hour === 2 && now.getUTCMinutes() < 15) {\n                context.log('Cleaning up old notification events...');\n                await cleanupOldNotificationEvents(context);\n            }\n\n            context.log('Notification Scheduler completed successfully');\n\n        } catch (error) {\n            context.log('Error in Notification Scheduler:', error);\n            throw error;\n        }\n    }\n});\n\n/**\n * Process batched notifications for users with hourly/daily frequency preferences\n */\nasync function processBatchedNotifications(context) {\n    try {\n        // Import here to avoid module loading issues\n        const { jobNotificationIntegration } = require('../../lib/services/job-notification-integration');\n        \n        await jobNotificationIntegration.processBatchedNotifications();\n        \n        context.log('Batched notifications processed successfully');\n    } catch (error) {\n        context.log('Error processing batched notifications:', error);\n        throw error;\n    }\n}\n\n/**\n * Process daily summaries for all eligible users\n */\nasync function processDailySummaries(context) {\n    try {\n        // Import here to avoid module loading issues\n        const { jobNotificationIntegration } = require('../../lib/services/job-notification-integration');\n        \n        await jobNotificationIntegration.sendDailySummaries();\n        \n        context.log('Daily summaries processed successfully');\n    } catch (error) {\n        context.log('Error processing daily summaries:', error);\n        throw error;\n    }\n}\n\n/**\n * Clean up old notification events\n */\nasync function cleanupOldNotificationEvents(context) {\n    try {\n        // Import here to avoid module loading issues\n        const { notificationService } = require('../../lib/services/notification-service');\n        \n        // Clean up events older than 90 days\n        const result = await notificationService.cleanupOldEvents(90);\n        \n        context.log(`Cleaned up ${result.deleted} old notification events`);\n    } catch (error) {\n        context.log('Error cleaning up old notification events:', error);\n        throw error;\n    }\n}\n"],"mappings":"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","ignoreList":[]}