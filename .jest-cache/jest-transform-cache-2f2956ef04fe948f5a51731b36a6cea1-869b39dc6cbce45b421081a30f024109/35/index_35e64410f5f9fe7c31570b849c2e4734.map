{"version":3,"names":["cov_d9dft8n5y","actualCoverage","CosmosClient","s","require","axios","cosmosClient","getCosmosClient","f","b","connectionString","process","env","AZURE_COSMOS_DB_CONNECTION_STRING","module","exports","context","myTimer","startTime","Date","now","timeStamp","toISOString","isPastDue","log","client","database","gdprContainer","container","thirtyDaysAgo","setDate","getDate","querySpec","query","parameters","name","value","resources","pendingRequests","items","fetchAll","length","processedCount","successCount","failedCount","duration","results","processed","failed","functionKey","DELETE_USER_DATA_FUNCTION_KEY","functionAppName","AZURE_FUNCTION_APP_NAME","deleteUserDataUrl","request","requestStartTime","id","userId","item","patch","op","path","deletionResponse","post","requestId","reason","requestingUserId","isAdmin","headers","timeout","data","success","push","status","deletedItems","totalDeleted","Error","JSON","stringify","error","errorMessage","response","message","updateError","Promise","resolve","setTimeout","totalDuration","create","Math","random","toString","substr","action","timestamp","auditError","stack"],"sources":["index.js"],"sourcesContent":["const { CosmosClient } = require('@azure/cosmos');\nconst axios = require('axios');\n\n// Initialize Cosmos client\nlet cosmosClient;\n\nfunction getCosmosClient() {\n  if (!cosmosClient) {\n    const connectionString = process.env.AZURE_COSMOS_DB_CONNECTION_STRING;\n    cosmosClient = new CosmosClient(connectionString);\n  }\n  return cosmosClient;\n}\n\nmodule.exports = async function (context, myTimer) {\n  const startTime = Date.now();\n  const timeStamp = new Date().toISOString();\n\n  if (myTimer.isPastDue) {\n    context.log('Timer function is running late!');\n  }\n\n  context.log('Scheduled deletion process started at:', timeStamp);\n\n  try {\n    const client = getCosmosClient();\n    const database = client.database('PrepBettrDB');\n    const gdprContainer = database.container('gdprRequests');\n\n    // Find deletion requests that are 30 days old and still pending\n    const thirtyDaysAgo = new Date();\n    thirtyDaysAgo.setDate(thirtyDaysAgo.getDate() - 30);\n\n    const querySpec = {\n      query: `\n        SELECT c.id, c.userId, c.requestDate, c.reason, c.requestedBy \n        FROM c \n        WHERE c.status = 'pending' \n        AND c.requestDate <= @thirtyDaysAgo\n        ORDER BY c.requestDate ASC\n      `,\n      parameters: [\n        { name: '@thirtyDaysAgo', value: thirtyDaysAgo.toISOString() }\n      ]\n    };\n\n    const { resources: pendingRequests } = await gdprContainer.items.query(querySpec).fetchAll();\n\n    context.log(`Found ${pendingRequests.length} deletion requests to process`);\n\n    if (pendingRequests.length === 0) {\n      context.log('No pending deletion requests to process');\n      return {\n        processedCount: 0,\n        successCount: 0,\n        failedCount: 0,\n        duration: Date.now() - startTime\n      };\n    }\n\n    const results = {\n      processedCount: 0,\n      successCount: 0,\n      failedCount: 0,\n      processed: [],\n      failed: []\n    };\n\n    // Get the function key for calling the deleteUserData function\n    const functionKey = process.env.DELETE_USER_DATA_FUNCTION_KEY;\n    const functionAppName = process.env.AZURE_FUNCTION_APP_NAME;\n    const deleteUserDataUrl = `https://${functionAppName}.azurewebsites.net/api/deleteUserData`;\n\n    // Process each pending request\n    for (const request of pendingRequests) {\n      const requestStartTime = Date.now();\n      \n      try {\n        context.log(`Processing scheduled deletion for request: ${request.id}, user: ${request.userId}`);\n\n        // Mark request as processing\n        await gdprContainer.item(request.id, request.userId).patch([\n          { op: 'replace', path: '/status', value: 'processing' },\n          { op: 'replace', path: '/processingStarted', value: new Date().toISOString() }\n        ]);\n\n        // Call the deleteUserData function\n        const deletionResponse = await axios.post(deleteUserDataUrl, {\n          requestId: request.id,\n          userId: request.userId,\n          reason: 'Automatic 30-day deletion process',\n          requestingUserId: 'system',\n          isAdmin: true\n        }, {\n          headers: {\n            'Content-Type': 'application/json',\n            'X-Functions-Key': functionKey\n          },\n          timeout: 300000 // 5 minute timeout\n        });\n\n        if (deletionResponse.data?.success) {\n          results.successCount++;\n          results.processed.push({\n            requestId: request.id,\n            userId: request.userId,\n            status: 'completed',\n            duration: Date.now() - requestStartTime,\n            deletedItems: deletionResponse.data.totalDeleted\n          });\n\n          context.log(`Successfully processed scheduled deletion for request: ${request.id}`);\n        } else {\n          throw new Error(`Deletion function returned unsuccessful result: ${JSON.stringify(deletionResponse.data)}`);\n        }\n\n      } catch (error) {\n        const errorMessage = error.response?.data?.error || error.message || 'Unknown error';\n        \n        context.log.error(`Error processing deletion request ${request.id}:`, errorMessage);\n\n        // Mark as failed in database\n        try {\n          await gdprContainer.item(request.id, request.userId).patch([\n            { op: 'replace', path: '/status', value: 'failed' },\n            { op: 'replace', path: '/error', value: errorMessage },\n            { op: 'replace', path: '/failedAt', value: new Date().toISOString() }\n          ]);\n        } catch (updateError) {\n          context.log.error(`Failed to update status for request ${request.id}:`, updateError);\n        }\n\n        results.failedCount++;\n        results.failed.push({\n          requestId: request.id,\n          userId: request.userId,\n          error: errorMessage,\n          duration: Date.now() - requestStartTime\n        });\n      }\n\n      results.processedCount++;\n      \n      // Add small delay between requests to avoid overwhelming the system\n      if (results.processedCount < pendingRequests.length) {\n        await new Promise(resolve => setTimeout(resolve, 1000));\n      }\n    }\n\n    // Log summary of scheduled deletion batch\n    const totalDuration = Date.now() - startTime;\n    \n    try {\n      await database.container('auditLog').items.create({\n        id: `scheduled_deletion_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n        action: 'scheduled_deletion_batch',\n        timestamp: new Date().toISOString(),\n        processedCount: results.processedCount,\n        successCount: results.successCount,\n        failedCount: results.failedCount,\n        duration: totalDuration,\n        processed: results.processed,\n        failed: results.failed\n      });\n    } catch (auditError) {\n      context.log.error('Failed to create audit log for scheduled deletion batch:', auditError);\n    }\n\n    context.log(`Scheduled deletion process completed: ${results.successCount}/${results.processedCount} successful in ${totalDuration}ms`);\n\n    return {\n      ...results,\n      duration: totalDuration,\n      timestamp: timeStamp\n    };\n\n  } catch (error) {\n    const duration = Date.now() - startTime;\n    context.log.error(`Error in scheduled deletion process (${duration}ms):`, error);\n    \n    // Log the error for monitoring\n    try {\n      const client = getCosmosClient();\n      const database = client.database('PrepBettrDB');\n      await database.container('auditLog').items.create({\n        id: `scheduled_deletion_error_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n        action: 'scheduled_deletion_error',\n        timestamp: new Date().toISOString(),\n        error: error.message,\n        duration,\n        stack: error.stack\n      });\n    } catch (auditError) {\n      context.log.error('Failed to log scheduled deletion error:', auditError);\n    }\n    \n    throw error;\n  }\n};\n"],"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","ignoreList":[]}