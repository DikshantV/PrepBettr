1ddc76d400258eb20e870b2695af5ada
/* istanbul ignore next */
function cov_d9dft8n5y() {
  var path = "/Users/dikshantvashistha/PrepBettr/azure/processScheduledDeletions/index.js";
  var hash = "29fabcdda69e42581c0cba62e8e8f824e1ea9c33";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dikshantvashistha/PrepBettr/azure/processScheduledDeletions/index.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 25
        },
        end: {
          line: 1,
          column: 49
        }
      },
      "1": {
        start: {
          line: 2,
          column: 14
        },
        end: {
          line: 2,
          column: 30
        }
      },
      "2": {
        start: {
          line: 8,
          column: 2
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "3": {
        start: {
          line: 9,
          column: 29
        },
        end: {
          line: 9,
          column: 74
        }
      },
      "4": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 54
        }
      },
      "5": {
        start: {
          line: 12,
          column: 2
        },
        end: {
          line: 12,
          column: 22
        }
      },
      "6": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 199,
          column: 2
        }
      },
      "7": {
        start: {
          line: 16,
          column: 20
        },
        end: {
          line: 16,
          column: 30
        }
      },
      "8": {
        start: {
          line: 17,
          column: 20
        },
        end: {
          line: 17,
          column: 44
        }
      },
      "9": {
        start: {
          line: 19,
          column: 2
        },
        end: {
          line: 21,
          column: 3
        }
      },
      "10": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 20,
          column: 51
        }
      },
      "11": {
        start: {
          line: 23,
          column: 2
        },
        end: {
          line: 23,
          column: 67
        }
      },
      "12": {
        start: {
          line: 25,
          column: 2
        },
        end: {
          line: 198,
          column: 3
        }
      },
      "13": {
        start: {
          line: 26,
          column: 19
        },
        end: {
          line: 26,
          column: 36
        }
      },
      "14": {
        start: {
          line: 27,
          column: 21
        },
        end: {
          line: 27,
          column: 51
        }
      },
      "15": {
        start: {
          line: 28,
          column: 26
        },
        end: {
          line: 28,
          column: 60
        }
      },
      "16": {
        start: {
          line: 31,
          column: 26
        },
        end: {
          line: 31,
          column: 36
        }
      },
      "17": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 32,
          column: 56
        }
      },
      "18": {
        start: {
          line: 34,
          column: 22
        },
        end: {
          line: 45,
          column: 5
        }
      },
      "19": {
        start: {
          line: 47,
          column: 43
        },
        end: {
          line: 47,
          column: 96
        }
      },
      "20": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 49,
          column: 80
        }
      },
      "21": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 59,
          column: 5
        }
      },
      "22": {
        start: {
          line: 52,
          column: 6
        },
        end: {
          line: 52,
          column: 61
        }
      },
      "23": {
        start: {
          line: 53,
          column: 6
        },
        end: {
          line: 58,
          column: 8
        }
      },
      "24": {
        start: {
          line: 61,
          column: 20
        },
        end: {
          line: 67,
          column: 5
        }
      },
      "25": {
        start: {
          line: 70,
          column: 24
        },
        end: {
          line: 70,
          column: 65
        }
      },
      "26": {
        start: {
          line: 71,
          column: 28
        },
        end: {
          line: 71,
          column: 63
        }
      },
      "27": {
        start: {
          line: 72,
          column: 30
        },
        end: {
          line: 72,
          column: 95
        }
      },
      "28": {
        start: {
          line: 75,
          column: 4
        },
        end: {
          line: 148,
          column: 5
        }
      },
      "29": {
        start: {
          line: 76,
          column: 31
        },
        end: {
          line: 76,
          column: 41
        }
      },
      "30": {
        start: {
          line: 78,
          column: 6
        },
        end: {
          line: 140,
          column: 7
        }
      },
      "31": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 79,
          column: 105
        }
      },
      "32": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 85,
          column: 11
        }
      },
      "33": {
        start: {
          line: 88,
          column: 33
        },
        end: {
          line: 100,
          column: 10
        }
      },
      "34": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 115,
          column: 9
        }
      },
      "35": {
        start: {
          line: 103,
          column: 10
        },
        end: {
          line: 103,
          column: 33
        }
      },
      "36": {
        start: {
          line: 104,
          column: 10
        },
        end: {
          line: 110,
          column: 13
        }
      },
      "37": {
        start: {
          line: 112,
          column: 10
        },
        end: {
          line: 112,
          column: 94
        }
      },
      "38": {
        start: {
          line: 114,
          column: 10
        },
        end: {
          line: 114,
          column: 118
        }
      },
      "39": {
        start: {
          line: 118,
          column: 29
        },
        end: {
          line: 118,
          column: 92
        }
      },
      "40": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 120,
          column: 92
        }
      },
      "41": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 131,
          column: 9
        }
      },
      "42": {
        start: {
          line: 124,
          column: 10
        },
        end: {
          line: 128,
          column: 13
        }
      },
      "43": {
        start: {
          line: 130,
          column: 10
        },
        end: {
          line: 130,
          column: 95
        }
      },
      "44": {
        start: {
          line: 133,
          column: 8
        },
        end: {
          line: 133,
          column: 30
        }
      },
      "45": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 139,
          column: 11
        }
      },
      "46": {
        start: {
          line: 142,
          column: 6
        },
        end: {
          line: 142,
          column: 31
        }
      },
      "47": {
        start: {
          line: 145,
          column: 6
        },
        end: {
          line: 147,
          column: 7
        }
      },
      "48": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 146,
          column: 64
        }
      },
      "49": {
        start: {
          line: 146,
          column: 37
        },
        end: {
          line: 146,
          column: 62
        }
      },
      "50": {
        start: {
          line: 151,
          column: 26
        },
        end: {
          line: 151,
          column: 48
        }
      },
      "51": {
        start: {
          line: 153,
          column: 4
        },
        end: {
          line: 167,
          column: 5
        }
      },
      "52": {
        start: {
          line: 154,
          column: 6
        },
        end: {
          line: 164,
          column: 9
        }
      },
      "53": {
        start: {
          line: 166,
          column: 6
        },
        end: {
          line: 166,
          column: 96
        }
      },
      "54": {
        start: {
          line: 169,
          column: 4
        },
        end: {
          line: 169,
          column: 140
        }
      },
      "55": {
        start: {
          line: 171,
          column: 4
        },
        end: {
          line: 175,
          column: 6
        }
      },
      "56": {
        start: {
          line: 178,
          column: 21
        },
        end: {
          line: 178,
          column: 43
        }
      },
      "57": {
        start: {
          line: 179,
          column: 4
        },
        end: {
          line: 179,
          column: 85
        }
      },
      "58": {
        start: {
          line: 182,
          column: 4
        },
        end: {
          line: 195,
          column: 5
        }
      },
      "59": {
        start: {
          line: 183,
          column: 21
        },
        end: {
          line: 183,
          column: 38
        }
      },
      "60": {
        start: {
          line: 184,
          column: 23
        },
        end: {
          line: 184,
          column: 53
        }
      },
      "61": {
        start: {
          line: 185,
          column: 6
        },
        end: {
          line: 192,
          column: 9
        }
      },
      "62": {
        start: {
          line: 194,
          column: 6
        },
        end: {
          line: 194,
          column: 79
        }
      },
      "63": {
        start: {
          line: 197,
          column: 4
        },
        end: {
          line: 197,
          column: 16
        }
      }
    },
    fnMap: {
      "0": {
        name: "getCosmosClient",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 24
          }
        },
        loc: {
          start: {
            line: 7,
            column: 27
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 15,
            column: 17
          },
          end: {
            line: 15,
            column: 18
          }
        },
        loc: {
          start: {
            line: 15,
            column: 51
          },
          end: {
            line: 199,
            column: 1
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 146,
            column: 26
          },
          end: {
            line: 146,
            column: 27
          }
        },
        loc: {
          start: {
            line: 146,
            column: 37
          },
          end: {
            line: 146,
            column: 62
          }
        },
        line: 146
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 8,
            column: 2
          },
          end: {
            line: 11,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 8,
            column: 2
          },
          end: {
            line: 11,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 8
      },
      "1": {
        loc: {
          start: {
            line: 19,
            column: 2
          },
          end: {
            line: 21,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 19,
            column: 2
          },
          end: {
            line: 21,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 19
      },
      "2": {
        loc: {
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 59,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 59,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 51
      },
      "3": {
        loc: {
          start: {
            line: 102,
            column: 8
          },
          end: {
            line: 115,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 102,
            column: 8
          },
          end: {
            line: 115,
            column: 9
          }
        }, {
          start: {
            line: 113,
            column: 15
          },
          end: {
            line: 115,
            column: 9
          }
        }],
        line: 102
      },
      "4": {
        loc: {
          start: {
            line: 118,
            column: 29
          },
          end: {
            line: 118,
            column: 92
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 118,
            column: 29
          },
          end: {
            line: 118,
            column: 56
          }
        }, {
          start: {
            line: 118,
            column: 60
          },
          end: {
            line: 118,
            column: 73
          }
        }, {
          start: {
            line: 118,
            column: 77
          },
          end: {
            line: 118,
            column: 92
          }
        }],
        line: 118
      },
      "5": {
        loc: {
          start: {
            line: 145,
            column: 6
          },
          end: {
            line: 147,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 145,
            column: 6
          },
          end: {
            line: 147,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 145
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0, 0],
      "5": [0, 0]
    },
    inputSourceMap: null,
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "29fabcdda69e42581c0cba62e8e8f824e1ea9c33"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_d9dft8n5y = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_d9dft8n5y();
const {
  CosmosClient
} =
/* istanbul ignore next */
(cov_d9dft8n5y().s[0]++, require('@azure/cosmos'));
const axios =
/* istanbul ignore next */
(cov_d9dft8n5y().s[1]++, require('axios'));

// Initialize Cosmos client
let cosmosClient;
function getCosmosClient() {
  /* istanbul ignore next */
  cov_d9dft8n5y().f[0]++;
  cov_d9dft8n5y().s[2]++;
  if (!cosmosClient) {
    /* istanbul ignore next */
    cov_d9dft8n5y().b[0][0]++;
    const connectionString =
    /* istanbul ignore next */
    (cov_d9dft8n5y().s[3]++, process.env.AZURE_COSMOS_DB_CONNECTION_STRING);
    /* istanbul ignore next */
    cov_d9dft8n5y().s[4]++;
    cosmosClient = new CosmosClient(connectionString);
  } else
  /* istanbul ignore next */
  {
    cov_d9dft8n5y().b[0][1]++;
  }
  cov_d9dft8n5y().s[5]++;
  return cosmosClient;
}
/* istanbul ignore next */
cov_d9dft8n5y().s[6]++;
module.exports = async function (context, myTimer) {
  /* istanbul ignore next */
  cov_d9dft8n5y().f[1]++;
  const startTime =
  /* istanbul ignore next */
  (cov_d9dft8n5y().s[7]++, Date.now());
  const timeStamp =
  /* istanbul ignore next */
  (cov_d9dft8n5y().s[8]++, new Date().toISOString());
  /* istanbul ignore next */
  cov_d9dft8n5y().s[9]++;
  if (myTimer.isPastDue) {
    /* istanbul ignore next */
    cov_d9dft8n5y().b[1][0]++;
    cov_d9dft8n5y().s[10]++;
    context.log('Timer function is running late!');
  } else
  /* istanbul ignore next */
  {
    cov_d9dft8n5y().b[1][1]++;
  }
  cov_d9dft8n5y().s[11]++;
  context.log('Scheduled deletion process started at:', timeStamp);
  /* istanbul ignore next */
  cov_d9dft8n5y().s[12]++;
  try {
    const client =
    /* istanbul ignore next */
    (cov_d9dft8n5y().s[13]++, getCosmosClient());
    const database =
    /* istanbul ignore next */
    (cov_d9dft8n5y().s[14]++, client.database('PrepBettrDB'));
    const gdprContainer =
    /* istanbul ignore next */
    (cov_d9dft8n5y().s[15]++, database.container('gdprRequests'));

    // Find deletion requests that are 30 days old and still pending
    const thirtyDaysAgo =
    /* istanbul ignore next */
    (cov_d9dft8n5y().s[16]++, new Date());
    /* istanbul ignore next */
    cov_d9dft8n5y().s[17]++;
    thirtyDaysAgo.setDate(thirtyDaysAgo.getDate() - 30);
    const querySpec =
    /* istanbul ignore next */
    (cov_d9dft8n5y().s[18]++, {
      query: `
        SELECT c.id, c.userId, c.requestDate, c.reason, c.requestedBy 
        FROM c 
        WHERE c.status = 'pending' 
        AND c.requestDate <= @thirtyDaysAgo
        ORDER BY c.requestDate ASC
      `,
      parameters: [{
        name: '@thirtyDaysAgo',
        value: thirtyDaysAgo.toISOString()
      }]
    });
    const {
      resources: pendingRequests
    } =
    /* istanbul ignore next */
    (cov_d9dft8n5y().s[19]++, await gdprContainer.items.query(querySpec).fetchAll());
    /* istanbul ignore next */
    cov_d9dft8n5y().s[20]++;
    context.log(`Found ${pendingRequests.length} deletion requests to process`);
    /* istanbul ignore next */
    cov_d9dft8n5y().s[21]++;
    if (pendingRequests.length === 0) {
      /* istanbul ignore next */
      cov_d9dft8n5y().b[2][0]++;
      cov_d9dft8n5y().s[22]++;
      context.log('No pending deletion requests to process');
      /* istanbul ignore next */
      cov_d9dft8n5y().s[23]++;
      return {
        processedCount: 0,
        successCount: 0,
        failedCount: 0,
        duration: Date.now() - startTime
      };
    } else
    /* istanbul ignore next */
    {
      cov_d9dft8n5y().b[2][1]++;
    }
    const results =
    /* istanbul ignore next */
    (cov_d9dft8n5y().s[24]++, {
      processedCount: 0,
      successCount: 0,
      failedCount: 0,
      processed: [],
      failed: []
    });

    // Get the function key for calling the deleteUserData function
    const functionKey =
    /* istanbul ignore next */
    (cov_d9dft8n5y().s[25]++, process.env.DELETE_USER_DATA_FUNCTION_KEY);
    const functionAppName =
    /* istanbul ignore next */
    (cov_d9dft8n5y().s[26]++, process.env.AZURE_FUNCTION_APP_NAME);
    const deleteUserDataUrl =
    /* istanbul ignore next */
    (cov_d9dft8n5y().s[27]++, `https://${functionAppName}.azurewebsites.net/api/deleteUserData`);

    // Process each pending request
    /* istanbul ignore next */
    cov_d9dft8n5y().s[28]++;
    for (const request of pendingRequests) {
      const requestStartTime =
      /* istanbul ignore next */
      (cov_d9dft8n5y().s[29]++, Date.now());
      /* istanbul ignore next */
      cov_d9dft8n5y().s[30]++;
      try {
        /* istanbul ignore next */
        cov_d9dft8n5y().s[31]++;
        context.log(`Processing scheduled deletion for request: ${request.id}, user: ${request.userId}`);

        // Mark request as processing
        /* istanbul ignore next */
        cov_d9dft8n5y().s[32]++;
        await gdprContainer.item(request.id, request.userId).patch([{
          op: 'replace',
          path: '/status',
          value: 'processing'
        }, {
          op: 'replace',
          path: '/processingStarted',
          value: new Date().toISOString()
        }]);

        // Call the deleteUserData function
        const deletionResponse =
        /* istanbul ignore next */
        (cov_d9dft8n5y().s[33]++, await axios.post(deleteUserDataUrl, {
          requestId: request.id,
          userId: request.userId,
          reason: 'Automatic 30-day deletion process',
          requestingUserId: 'system',
          isAdmin: true
        }, {
          headers: {
            'Content-Type': 'application/json',
            'X-Functions-Key': functionKey
          },
          timeout: 300000 // 5 minute timeout
        }));
        /* istanbul ignore next */
        cov_d9dft8n5y().s[34]++;
        if (deletionResponse.data?.success) {
          /* istanbul ignore next */
          cov_d9dft8n5y().b[3][0]++;
          cov_d9dft8n5y().s[35]++;
          results.successCount++;
          /* istanbul ignore next */
          cov_d9dft8n5y().s[36]++;
          results.processed.push({
            requestId: request.id,
            userId: request.userId,
            status: 'completed',
            duration: Date.now() - requestStartTime,
            deletedItems: deletionResponse.data.totalDeleted
          });
          /* istanbul ignore next */
          cov_d9dft8n5y().s[37]++;
          context.log(`Successfully processed scheduled deletion for request: ${request.id}`);
        } else {
          /* istanbul ignore next */
          cov_d9dft8n5y().b[3][1]++;
          cov_d9dft8n5y().s[38]++;
          throw new Error(`Deletion function returned unsuccessful result: ${JSON.stringify(deletionResponse.data)}`);
        }
      } catch (error) {
        const errorMessage =
        /* istanbul ignore next */
        (cov_d9dft8n5y().s[39]++,
        /* istanbul ignore next */
        (cov_d9dft8n5y().b[4][0]++, error.response?.data?.error) ||
        /* istanbul ignore next */
        (cov_d9dft8n5y().b[4][1]++, error.message) ||
        /* istanbul ignore next */
        (cov_d9dft8n5y().b[4][2]++, 'Unknown error'));
        /* istanbul ignore next */
        cov_d9dft8n5y().s[40]++;
        context.log.error(`Error processing deletion request ${request.id}:`, errorMessage);

        // Mark as failed in database
        /* istanbul ignore next */
        cov_d9dft8n5y().s[41]++;
        try {
          /* istanbul ignore next */
          cov_d9dft8n5y().s[42]++;
          await gdprContainer.item(request.id, request.userId).patch([{
            op: 'replace',
            path: '/status',
            value: 'failed'
          }, {
            op: 'replace',
            path: '/error',
            value: errorMessage
          }, {
            op: 'replace',
            path: '/failedAt',
            value: new Date().toISOString()
          }]);
        } catch (updateError) {
          /* istanbul ignore next */
          cov_d9dft8n5y().s[43]++;
          context.log.error(`Failed to update status for request ${request.id}:`, updateError);
        }
        /* istanbul ignore next */
        cov_d9dft8n5y().s[44]++;
        results.failedCount++;
        /* istanbul ignore next */
        cov_d9dft8n5y().s[45]++;
        results.failed.push({
          requestId: request.id,
          userId: request.userId,
          error: errorMessage,
          duration: Date.now() - requestStartTime
        });
      }
      /* istanbul ignore next */
      cov_d9dft8n5y().s[46]++;
      results.processedCount++;

      // Add small delay between requests to avoid overwhelming the system
      /* istanbul ignore next */
      cov_d9dft8n5y().s[47]++;
      if (results.processedCount < pendingRequests.length) {
        /* istanbul ignore next */
        cov_d9dft8n5y().b[5][0]++;
        cov_d9dft8n5y().s[48]++;
        await new Promise(resolve => {
          /* istanbul ignore next */
          cov_d9dft8n5y().f[2]++;
          cov_d9dft8n5y().s[49]++;
          return setTimeout(resolve, 1000);
        });
      } else
      /* istanbul ignore next */
      {
        cov_d9dft8n5y().b[5][1]++;
      }
    }

    // Log summary of scheduled deletion batch
    const totalDuration =
    /* istanbul ignore next */
    (cov_d9dft8n5y().s[50]++, Date.now() - startTime);
    /* istanbul ignore next */
    cov_d9dft8n5y().s[51]++;
    try {
      /* istanbul ignore next */
      cov_d9dft8n5y().s[52]++;
      await database.container('auditLog').items.create({
        id: `scheduled_deletion_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,
        action: 'scheduled_deletion_batch',
        timestamp: new Date().toISOString(),
        processedCount: results.processedCount,
        successCount: results.successCount,
        failedCount: results.failedCount,
        duration: totalDuration,
        processed: results.processed,
        failed: results.failed
      });
    } catch (auditError) {
      /* istanbul ignore next */
      cov_d9dft8n5y().s[53]++;
      context.log.error('Failed to create audit log for scheduled deletion batch:', auditError);
    }
    /* istanbul ignore next */
    cov_d9dft8n5y().s[54]++;
    context.log(`Scheduled deletion process completed: ${results.successCount}/${results.processedCount} successful in ${totalDuration}ms`);
    /* istanbul ignore next */
    cov_d9dft8n5y().s[55]++;
    return {
      ...results,
      duration: totalDuration,
      timestamp: timeStamp
    };
  } catch (error) {
    const duration =
    /* istanbul ignore next */
    (cov_d9dft8n5y().s[56]++, Date.now() - startTime);
    /* istanbul ignore next */
    cov_d9dft8n5y().s[57]++;
    context.log.error(`Error in scheduled deletion process (${duration}ms):`, error);

    // Log the error for monitoring
    /* istanbul ignore next */
    cov_d9dft8n5y().s[58]++;
    try {
      const client =
      /* istanbul ignore next */
      (cov_d9dft8n5y().s[59]++, getCosmosClient());
      const database =
      /* istanbul ignore next */
      (cov_d9dft8n5y().s[60]++, client.database('PrepBettrDB'));
      /* istanbul ignore next */
      cov_d9dft8n5y().s[61]++;
      await database.container('auditLog').items.create({
        id: `scheduled_deletion_error_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,
        action: 'scheduled_deletion_error',
        timestamp: new Date().toISOString(),
        error: error.message,
        duration,
        stack: error.stack
      });
    } catch (auditError) {
      /* istanbul ignore next */
      cov_d9dft8n5y().s[62]++;
      context.log.error('Failed to log scheduled deletion error:', auditError);
    }
    /* istanbul ignore next */
    cov_d9dft8n5y().s[63]++;
    throw error;
  }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,