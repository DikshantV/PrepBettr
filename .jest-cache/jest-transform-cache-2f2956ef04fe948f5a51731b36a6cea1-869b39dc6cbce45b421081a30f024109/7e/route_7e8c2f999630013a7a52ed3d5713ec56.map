{"version":3,"names":["cov_sjxhdvqeg","actualCoverage","s","exports","GET","server_1","require","azure_config_1","request","f","console","log","secrets","fetchAzureSecrets","firebaseConfig","apiKey","b","firebaseClientKey","process","env","NEXT_PUBLIC_FIREBASE_API_KEY","NEXT_PUBLIC_FIREBASE_CLIENT_KEY","authDomain","firebaseProjectId","projectId","FIREBASE_PROJECT_ID","storageBucket","NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET","messagingSenderId","NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID","appId","NEXT_PUBLIC_FIREBASE_APP_ID","error","NextResponse","json","status","hasApiKey","fallbackConfig"],"sources":["/Users/dikshantvashistha/PrepBettr/app/api/config/firebase/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { fetchAzureSecrets } from '@/lib/azure-config';\n\n/**\n * Firebase Configuration API Endpoint\n * \n * Provides Firebase client configuration from Azure Key Vault\n * This is used for client-side Firebase initialization when\n * environment variables are not directly available\n */\nexport async function GET(request: NextRequest) {\n  try {\n    console.log('ðŸ”¥ Fetching Firebase config from Azure Key Vault...');\n    \n    // Get secrets from Azure Key Vault\n    const secrets = await fetchAzureSecrets();\n    \n    // Construct Firebase configuration\n    const firebaseConfig = {\n      apiKey: secrets.firebaseClientKey || process.env.NEXT_PUBLIC_FIREBASE_API_KEY || process.env.NEXT_PUBLIC_FIREBASE_CLIENT_KEY || '',\n      authDomain: `${secrets.firebaseProjectId || 'prepbettr'}.firebaseapp.com`,\n      projectId: secrets.firebaseProjectId || process.env.FIREBASE_PROJECT_ID || 'prepbettr',\n      storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET || `${secrets.firebaseProjectId || 'prepbettr'}.appspot.com`,\n      messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID || '',\n      appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID || ''\n    };\n    \n    // Validate required fields\n    if (!firebaseConfig.projectId) {\n      console.error('ðŸ”¥ Firebase configuration missing: projectId is required');\n      return NextResponse.json(\n        { error: 'Firebase configuration incomplete: missing projectId' },\n        { status: 500 }\n      );\n    }\n    \n    console.log('ðŸ”¥ Firebase config provided:', {\n      projectId: firebaseConfig.projectId,\n      authDomain: firebaseConfig.authDomain,\n      hasApiKey: !!firebaseConfig.apiKey,\n      storageBucket: firebaseConfig.storageBucket\n    });\n    \n    return NextResponse.json(firebaseConfig);\n    \n  } catch (error) {\n    console.error('ðŸ”¥ Error fetching Firebase config:', error);\n    \n    // Fallback to environment variables only\n    const fallbackConfig = {\n      apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY || process.env.NEXT_PUBLIC_FIREBASE_CLIENT_KEY || '',\n      authDomain: `${process.env.FIREBASE_PROJECT_ID || 'prepbettr'}.firebaseapp.com`,\n      projectId: process.env.FIREBASE_PROJECT_ID || 'prepbettr',\n      storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET || `${process.env.FIREBASE_PROJECT_ID || 'prepbettr'}.appspot.com`,\n      messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID || '',\n      appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID || ''\n    };\n    \n    console.log('ðŸ”¥ Using fallback Firebase config:', {\n      projectId: fallbackConfig.projectId,\n      hasApiKey: !!fallbackConfig.apiKey\n    });\n    \n    return NextResponse.json(fallbackConfig);\n  }\n}\n"],"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","ignoreList":[]}