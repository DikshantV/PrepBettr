e04be22903cd93cad25e48ddcc86530e
"use strict";

/* istanbul ignore next */
function cov_250sf7r378() {
  var path = "/Users/dikshantvashistha/PrepBettr/app/api/interview/start-multi-agent/route.ts";
  var hash = "42aaae59baef0a189c6dd36ec6af5601ec573c51";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dikshantvashistha/PrepBettr/app/api/interview/start-multi-agent/route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 20
        }
      },
      "2": {
        start: {
          line: 4,
          column: 0
        },
        end: {
          line: 4,
          column: 18
        }
      },
      "3": {
        start: {
          line: 5,
          column: 17
        },
        end: {
          line: 5,
          column: 39
        }
      },
      "4": {
        start: {
          line: 6,
          column: 29
        },
        end: {
          line: 6,
          column: 91
        }
      },
      "5": {
        start: {
          line: 7,
          column: 17
        },
        end: {
          line: 7,
          column: 34
        }
      },
      "6": {
        start: {
          line: 9,
          column: 15
        },
        end: {
          line: 9,
          column: 19
        }
      },
      "7": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 13,
          column: 5
        }
      },
      "8": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 64
        }
      },
      "9": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 20
        }
      },
      "10": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 102,
          column: 5
        }
      },
      "11": {
        start: {
          line: 37,
          column: 21
        },
        end: {
          line: 37,
          column: 41
        }
      },
      "12": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 44,
          column: 9
        }
      },
      "13": {
        start: {
          line: 40,
          column: 12
        },
        end: {
          line: 43,
          column: 32
        }
      },
      "14": {
        start: {
          line: 46,
          column: 26
        },
        end: {
          line: 46,
          column: 83
        }
      },
      "15": {
        start: {
          line: 48,
          column: 23
        },
        end: {
          line: 81,
          column: 9
        }
      },
      "16": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 82,
          column: 119
        }
      },
      "17": {
        start: {
          line: 84,
          column: 33
        },
        end: {
          line: 84,
          column: 85
        }
      },
      "18": {
        start: {
          line: 86,
          column: 23
        },
        end: {
          line: 86,
          column: 70
        }
      },
      "19": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 92,
          column: 28
        }
      },
      "20": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 95,
          column: 76
        }
      },
      "21": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 101,
          column: 73
        }
      },
      "22": {
        start: {
          line: 110,
          column: 4
        },
        end: {
          line: 153,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "getWorkflow",
        decl: {
          start: {
            line: 10,
            column: 9
          },
          end: {
            line: 10,
            column: 20
          }
        },
        loc: {
          start: {
            line: 10,
            column: 23
          },
          end: {
            line: 15,
            column: 1
          }
        },
        line: 10
      },
      "1": {
        name: "POST",
        decl: {
          start: {
            line: 34,
            column: 15
          },
          end: {
            line: 34,
            column: 19
          }
        },
        loc: {
          start: {
            line: 34,
            column: 29
          },
          end: {
            line: 103,
            column: 1
          }
        },
        line: 34
      },
      "2": {
        name: "GET",
        decl: {
          start: {
            line: 109,
            column: 15
          },
          end: {
            line: 109,
            column: 18
          }
        },
        loc: {
          start: {
            line: 109,
            column: 21
          },
          end: {
            line: 154,
            column: 1
          }
        },
        line: 109
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 11,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 11,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 11
      },
      "1": {
        loc: {
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 44,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 44,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 39
      },
      "2": {
        loc: {
          start: {
            line: 39,
            column: 12
          },
          end: {
            line: 39,
            column: 209
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 39,
            column: 12
          },
          end: {
            line: 39,
            column: 22
          }
        }, {
          start: {
            line: 39,
            column: 26
          },
          end: {
            line: 39,
            column: 47
          }
        }, {
          start: {
            line: 39,
            column: 51
          },
          end: {
            line: 39,
            column: 127
          }
        }, {
          start: {
            line: 39,
            column: 131
          },
          end: {
            line: 39,
            column: 209
          }
        }],
        line: 39
      },
      "3": {
        loc: {
          start: {
            line: 39,
            column: 53
          },
          end: {
            line: 39,
            column: 126
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 39,
            column: 110
          },
          end: {
            line: 39,
            column: 116
          }
        }, {
          start: {
            line: 39,
            column: 119
          },
          end: {
            line: 39,
            column: 126
          }
        }],
        line: 39
      },
      "4": {
        loc: {
          start: {
            line: 39,
            column: 53
          },
          end: {
            line: 39,
            column: 107
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 39,
            column: 53
          },
          end: {
            line: 39,
            column: 90
          }
        }, {
          start: {
            line: 39,
            column: 94
          },
          end: {
            line: 39,
            column: 107
          }
        }],
        line: 39
      },
      "5": {
        loc: {
          start: {
            line: 39,
            column: 133
          },
          end: {
            line: 39,
            column: 208
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 39,
            column: 190
          },
          end: {
            line: 39,
            column: 196
          }
        }, {
          start: {
            line: 39,
            column: 199
          },
          end: {
            line: 39,
            column: 208
          }
        }],
        line: 39
      },
      "6": {
        loc: {
          start: {
            line: 39,
            column: 133
          },
          end: {
            line: 39,
            column: 187
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 39,
            column: 133
          },
          end: {
            line: 39,
            column: 170
          }
        }, {
          start: {
            line: 39,
            column: 174
          },
          end: {
            line: 39,
            column: 187
          }
        }],
        line: 39
      },
      "7": {
        loc: {
          start: {
            line: 46,
            column: 26
          },
          end: {
            line: 46,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 46,
            column: 26
          },
          end: {
            line: 46,
            column: 40
          }
        }, {
          start: {
            line: 46,
            column: 44
          },
          end: {
            line: 46,
            column: 83
          }
        }],
        line: 46
      },
      "8": {
        loc: {
          start: {
            line: 57,
            column: 24
          },
          end: {
            line: 57,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 57,
            column: 24
          },
          end: {
            line: 57,
            column: 52
          }
        }, {
          start: {
            line: 57,
            column: 56
          },
          end: {
            line: 57,
            column: 58
          }
        }],
        line: 57
      },
      "9": {
        loc: {
          start: {
            line: 58,
            column: 31
          },
          end: {
            line: 58,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 58,
            column: 31
          },
          end: {
            line: 58,
            column: 66
          }
        }, {
          start: {
            line: 58,
            column: 70
          },
          end: {
            line: 58,
            column: 72
          }
        }],
        line: 58
      },
      "10": {
        loc: {
          start: {
            line: 61,
            column: 32
          },
          end: {
            line: 61,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 61,
            column: 32
          },
          end: {
            line: 61,
            column: 68
          }
        }, {
          start: {
            line: 61,
            column: 72
          },
          end: {
            line: 61,
            column: 74
          }
        }],
        line: 61
      },
      "11": {
        loc: {
          start: {
            line: 65,
            column: 31
          },
          end: {
            line: 65,
            column: 110
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 65,
            column: 85
          },
          end: {
            line: 65,
            column: 91
          }
        }, {
          start: {
            line: 65,
            column: 94
          },
          end: {
            line: 65,
            column: 110
          }
        }],
        line: 65
      },
      "12": {
        loc: {
          start: {
            line: 65,
            column: 31
          },
          end: {
            line: 65,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 65,
            column: 31
          },
          end: {
            line: 65,
            column: 65
          }
        }, {
          start: {
            line: 65,
            column: 69
          },
          end: {
            line: 65,
            column: 82
          }
        }],
        line: 65
      },
      "13": {
        loc: {
          start: {
            line: 66,
            column: 32
          },
          end: {
            line: 66,
            column: 112
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 66,
            column: 86
          },
          end: {
            line: 66,
            column: 92
          }
        }, {
          start: {
            line: 66,
            column: 95
          },
          end: {
            line: 66,
            column: 112
          }
        }],
        line: 66
      },
      "14": {
        loc: {
          start: {
            line: 66,
            column: 32
          },
          end: {
            line: 66,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 66,
            column: 32
          },
          end: {
            line: 66,
            column: 66
          }
        }, {
          start: {
            line: 66,
            column: 70
          },
          end: {
            line: 66,
            column: 83
          }
        }],
        line: 66
      },
      "15": {
        loc: {
          start: {
            line: 67,
            column: 36
          },
          end: {
            line: 67,
            column: 128
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 67,
            column: 37
          },
          end: {
            line: 67,
            column: 121
          }
        }, {
          start: {
            line: 67,
            column: 126
          },
          end: {
            line: 67,
            column: 128
          }
        }],
        line: 67
      },
      "16": {
        loc: {
          start: {
            line: 67,
            column: 37
          },
          end: {
            line: 67,
            column: 121
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 67,
            column: 91
          },
          end: {
            line: 67,
            column: 97
          }
        }, {
          start: {
            line: 67,
            column: 100
          },
          end: {
            line: 67,
            column: 121
          }
        }],
        line: 67
      },
      "17": {
        loc: {
          start: {
            line: 67,
            column: 37
          },
          end: {
            line: 67,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 67,
            column: 37
          },
          end: {
            line: 67,
            column: 71
          }
        }, {
          start: {
            line: 67,
            column: 75
          },
          end: {
            line: 67,
            column: 88
          }
        }],
        line: 67
      },
      "18": {
        loc: {
          start: {
            line: 68,
            column: 36
          },
          end: {
            line: 68,
            column: 120
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 68,
            column: 90
          },
          end: {
            line: 68,
            column: 96
          }
        }, {
          start: {
            line: 68,
            column: 99
          },
          end: {
            line: 68,
            column: 120
          }
        }],
        line: 68
      },
      "19": {
        loc: {
          start: {
            line: 68,
            column: 36
          },
          end: {
            line: 68,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 68,
            column: 36
          },
          end: {
            line: 68,
            column: 70
          }
        }, {
          start: {
            line: 68,
            column: 74
          },
          end: {
            line: 68,
            column: 87
          }
        }],
        line: 68
      },
      "20": {
        loc: {
          start: {
            line: 69,
            column: 32
          },
          end: {
            line: 69,
            column: 112
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 69,
            column: 86
          },
          end: {
            line: 69,
            column: 92
          }
        }, {
          start: {
            line: 69,
            column: 95
          },
          end: {
            line: 69,
            column: 112
          }
        }],
        line: 69
      },
      "21": {
        loc: {
          start: {
            line: 69,
            column: 32
          },
          end: {
            line: 69,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 69,
            column: 32
          },
          end: {
            line: 69,
            column: 66
          }
        }, {
          start: {
            line: 69,
            column: 70
          },
          end: {
            line: 69,
            column: 83
          }
        }],
        line: 69
      },
      "22": {
        loc: {
          start: {
            line: 70,
            column: 35
          },
          end: {
            line: 70,
            column: 118
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 70,
            column: 89
          },
          end: {
            line: 70,
            column: 95
          }
        }, {
          start: {
            line: 70,
            column: 98
          },
          end: {
            line: 70,
            column: 118
          }
        }],
        line: 70
      },
      "23": {
        loc: {
          start: {
            line: 70,
            column: 35
          },
          end: {
            line: 70,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 70,
            column: 35
          },
          end: {
            line: 70,
            column: 69
          }
        }, {
          start: {
            line: 70,
            column: 73
          },
          end: {
            line: 70,
            column: 86
          }
        }],
        line: 70
      },
      "24": {
        loc: {
          start: {
            line: 71,
            column: 28
          },
          end: {
            line: 71,
            column: 104
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 71,
            column: 82
          },
          end: {
            line: 71,
            column: 88
          }
        }, {
          start: {
            line: 71,
            column: 91
          },
          end: {
            line: 71,
            column: 104
          }
        }],
        line: 71
      },
      "25": {
        loc: {
          start: {
            line: 71,
            column: 28
          },
          end: {
            line: 71,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 71,
            column: 28
          },
          end: {
            line: 71,
            column: 62
          }
        }, {
          start: {
            line: 71,
            column: 66
          },
          end: {
            line: 71,
            column: 79
          }
        }],
        line: 71
      },
      "26": {
        loc: {
          start: {
            line: 74,
            column: 24
          },
          end: {
            line: 74,
            column: 102
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 74,
            column: 25
          },
          end: {
            line: 74,
            column: 92
          }
        }, {
          start: {
            line: 74,
            column: 97
          },
          end: {
            line: 74,
            column: 102
          }
        }],
        line: 74
      },
      "27": {
        loc: {
          start: {
            line: 74,
            column: 25
          },
          end: {
            line: 74,
            column: 92
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 74,
            column: 74
          },
          end: {
            line: 74,
            column: 80
          }
        }, {
          start: {
            line: 74,
            column: 83
          },
          end: {
            line: 74,
            column: 92
          }
        }],
        line: 74
      },
      "28": {
        loc: {
          start: {
            line: 74,
            column: 25
          },
          end: {
            line: 74,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 74,
            column: 25
          },
          end: {
            line: 74,
            column: 54
          }
        }, {
          start: {
            line: 74,
            column: 58
          },
          end: {
            line: 74,
            column: 71
          }
        }],
        line: 74
      },
      "29": {
        loc: {
          start: {
            line: 75,
            column: 29
          },
          end: {
            line: 75,
            column: 101
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 75,
            column: 78
          },
          end: {
            line: 75,
            column: 84
          }
        }, {
          start: {
            line: 75,
            column: 87
          },
          end: {
            line: 75,
            column: 101
          }
        }],
        line: 75
      },
      "30": {
        loc: {
          start: {
            line: 75,
            column: 29
          },
          end: {
            line: 75,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 75,
            column: 29
          },
          end: {
            line: 75,
            column: 58
          }
        }, {
          start: {
            line: 75,
            column: 62
          },
          end: {
            line: 75,
            column: 75
          }
        }],
        line: 75
      },
      "31": {
        loc: {
          start: {
            line: 76,
            column: 30
          },
          end: {
            line: 76,
            column: 103
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 76,
            column: 79
          },
          end: {
            line: 76,
            column: 85
          }
        }, {
          start: {
            line: 76,
            column: 88
          },
          end: {
            line: 76,
            column: 103
          }
        }],
        line: 76
      },
      "32": {
        loc: {
          start: {
            line: 76,
            column: 30
          },
          end: {
            line: 76,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 76,
            column: 30
          },
          end: {
            line: 76,
            column: 59
          }
        }, {
          start: {
            line: 76,
            column: 63
          },
          end: {
            line: 76,
            column: 76
          }
        }],
        line: 76
      },
      "33": {
        loc: {
          start: {
            line: 77,
            column: 31
          },
          end: {
            line: 77,
            column: 122
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 77,
            column: 32
          },
          end: {
            line: 77,
            column: 106
          }
        }, {
          start: {
            line: 77,
            column: 111
          },
          end: {
            line: 77,
            column: 122
          }
        }],
        line: 77
      },
      "34": {
        loc: {
          start: {
            line: 77,
            column: 32
          },
          end: {
            line: 77,
            column: 106
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 77,
            column: 81
          },
          end: {
            line: 77,
            column: 87
          }
        }, {
          start: {
            line: 77,
            column: 90
          },
          end: {
            line: 77,
            column: 106
          }
        }],
        line: 77
      },
      "35": {
        loc: {
          start: {
            line: 77,
            column: 32
          },
          end: {
            line: 77,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 77,
            column: 32
          },
          end: {
            line: 77,
            column: 61
          }
        }, {
          start: {
            line: 77,
            column: 65
          },
          end: {
            line: 77,
            column: 78
          }
        }],
        line: 77
      },
      "36": {
        loc: {
          start: {
            line: 78,
            column: 29
          },
          end: {
            line: 78,
            column: 131
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 78,
            column: 30
          },
          end: {
            line: 78,
            column: 102
          }
        }, {
          start: {
            line: 78,
            column: 107
          },
          end: {
            line: 78,
            column: 131
          }
        }],
        line: 78
      },
      "37": {
        loc: {
          start: {
            line: 78,
            column: 30
          },
          end: {
            line: 78,
            column: 102
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 78,
            column: 79
          },
          end: {
            line: 78,
            column: 85
          }
        }, {
          start: {
            line: 78,
            column: 88
          },
          end: {
            line: 78,
            column: 102
          }
        }],
        line: 78
      },
      "38": {
        loc: {
          start: {
            line: 78,
            column: 30
          },
          end: {
            line: 78,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 78,
            column: 30
          },
          end: {
            line: 78,
            column: 59
          }
        }, {
          start: {
            line: 78,
            column: 63
          },
          end: {
            line: 78,
            column: 76
          }
        }],
        line: 78
      },
      "39": {
        loc: {
          start: {
            line: 79,
            column: 22
          },
          end: {
            line: 79,
            column: 95
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 79,
            column: 23
          },
          end: {
            line: 79,
            column: 88
          }
        }, {
          start: {
            line: 79,
            column: 93
          },
          end: {
            line: 79,
            column: 95
          }
        }],
        line: 79
      },
      "40": {
        loc: {
          start: {
            line: 79,
            column: 23
          },
          end: {
            line: 79,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 79,
            column: 72
          },
          end: {
            line: 79,
            column: 78
          }
        }, {
          start: {
            line: 79,
            column: 81
          },
          end: {
            line: 79,
            column: 88
          }
        }],
        line: 79
      },
      "41": {
        loc: {
          start: {
            line: 79,
            column: 23
          },
          end: {
            line: 79,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 79,
            column: 23
          },
          end: {
            line: 79,
            column: 52
          }
        }, {
          start: {
            line: 79,
            column: 56
          },
          end: {
            line: 79,
            column: 69
          }
        }],
        line: 79
      },
      "42": {
        loc: {
          start: {
            line: 98,
            column: 19
          },
          end: {
            line: 98,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 98,
            column: 19
          },
          end: {
            line: 98,
            column: 32
          }
        }, {
          start: {
            line: 98,
            column: 36
          },
          end: {
            line: 98,
            column: 63
          }
        }],
        line: 98
      },
      "43": {
        loc: {
          start: {
            line: 99,
            column: 18
          },
          end: {
            line: 99,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 99,
            column: 18
          },
          end: {
            line: 99,
            column: 28
          }
        }, {
          start: {
            line: 99,
            column: 32
          },
          end: {
            line: 99,
            column: 47
          }
        }],
        line: 99
      },
      "44": {
        loc: {
          start: {
            line: 100,
            column: 25
          },
          end: {
            line: 100,
            column: 87
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 100,
            column: 78
          },
          end: {
            line: 100,
            column: 80
          }
        }, {
          start: {
            line: 100,
            column: 83
          },
          end: {
            line: 100,
            column: 87
          }
        }],
        line: 100
      },
      "45": {
        loc: {
          start: {
            line: 100,
            column: 25
          },
          end: {
            line: 100,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 100,
            column: 25
          },
          end: {
            line: 100,
            column: 58
          }
        }, {
          start: {
            line: 100,
            column: 62
          },
          end: {
            line: 100,
            column: 75
          }
        }],
        line: 100
      },
      "46": {
        loc: {
          start: {
            line: 101,
            column: 21
          },
          end: {
            line: 101,
            column: 69
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 101,
            column: 60
          },
          end: {
            line: 101,
            column: 63
          }
        }, {
          start: {
            line: 101,
            column: 66
          },
          end: {
            line: 101,
            column: 69
          }
        }],
        line: 101
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0, 0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/dikshantvashistha/PrepBettr/app/api/interview/start-multi-agent/route.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/dikshantvashistha/PrepBettr/app/api/interview/start-multi-agent/route.ts"],
      sourcesContent: ["import { NextRequest, NextResponse } from 'next/server';\nimport { InterviewWorkflow } from '@/lib/azure-ai-foundry/workflows/interview-workflow';\nimport type { InterviewConfig } from '@/lib/azure-ai-foundry/workflows/workflow-types';\nimport { nanoid } from 'nanoid';\n\n// Lazy initialization to avoid build-time issues\nlet workflow: InterviewWorkflow | null = null;\n\nfunction getWorkflow(): InterviewWorkflow {\n  if (!workflow) {\n    workflow = new InterviewWorkflow();\n  }\n  return workflow;\n}\n\n/**\n * POST /api/interview/start-multi-agent\n * \n * Start a new multi-agent interview session\n * \n * Request Body:\n * - role: string (required)\n * - experienceLevel: 'entry' | 'mid' | 'senior' | 'executive' (required)  \n * - industry?: string\n * - candidateProfile: { name, skills, ... } (required)\n * - companyInfo?: { name, industry, size, culture }\n * - customization?: { enabledStages, stageDurations, ... }\n * - metadata?: { source, recruiterId, ... }\n * \n * Response: \n * - sessionId: string\n * - status: WorkflowStatus\n */\nexport async function POST(request: NextRequest) {\n  try {\n    const body = await request.json();\n    \n    // Validate required fields\n    if (!body.role || !body.experienceLevel || !body.candidateProfile?.name || !body.candidateProfile?.skills) {\n      return NextResponse.json({\n        error: 'Missing required fields',\n        required: ['role', 'experienceLevel', 'candidateProfile.name', 'candidateProfile.skills']\n      }, { status: 400 });\n    }\n\n    // Generate session ID if not provided\n    const sessionId = body.sessionId || `interview_${nanoid(12)}`;\n\n    // Build interview configuration\n    const config: InterviewConfig = {\n      sessionId,\n      role: body.role,\n      experienceLevel: body.experienceLevel,\n      industry: body.industry,\n      roleType: body.roleType,\n      candidateProfile: {\n        name: body.candidateProfile.name,\n        email: body.candidateProfile.email,\n        skills: body.candidateProfile.skills || [],\n        previousRoles: body.candidateProfile.previousRoles || [],\n        yearsExperience: body.candidateProfile.yearsExperience,\n        education: body.candidateProfile.education,\n        certifications: body.candidateProfile.certifications || []\n      },\n      companyInfo: body.companyInfo,\n      customization: {\n        enabledStages: body.customization?.enabledStages,\n        stageDurations: body.customization?.stageDurations,\n        maxDurationMinutes: body.customization?.maxDurationMinutes || 45,\n        customInstructions: body.customization?.customInstructions,\n        agentOverrides: body.customization?.agentOverrides,\n        questionsPerStage: body.customization?.questionsPerStage,\n        focusAreas: body.customization?.focusAreas\n      },\n      metadata: {\n        source: body.metadata?.source || 'api',\n        recruiterId: body.metadata?.recruiterId,\n        jobPostingId: body.metadata?.jobPostingId,\n        interviewType: body.metadata?.interviewType || 'screening',\n        scheduledAt: body.metadata?.scheduledAt || new Date().toISOString(),\n        tags: body.metadata?.tags || []\n      }\n    };\n\n    console.log(`[API] Starting multi-agent interview for ${config.candidateProfile.name} - Role: ${config.role}`);\n\n    // Start the interview workflow\n    const startedSessionId = await getWorkflow().startMultiAgentInterview(config);\n    \n    // Get initial status\n    const status = await getWorkflow().getStatus(startedSessionId);\n\n    return NextResponse.json({\n      success: true,\n      sessionId: startedSessionId,\n      status,\n      message: 'Multi-agent interview started successfully'\n    }, { status: 201 });\n\n  } catch (error: any) {\n    console.error('[API] Error starting multi-agent interview:', error);\n    \n    return NextResponse.json({\n      success: false,\n      error: error.message || 'Failed to start interview',\n      code: error.code || 'UNKNOWN_ERROR',\n      recoverable: error.recoverable ?? true\n    }, { status: error.code === 'CONFIGURATION_ERROR' ? 400 : 500 });\n  }\n}\n\n/**\n * GET /api/interview/start-multi-agent\n * \n * Get API documentation and requirements\n */\nexport async function GET() {\n  return NextResponse.json({\n    endpoint: 'POST /api/interview/start-multi-agent',\n    description: 'Start a new multi-agent interview session',\n    requiredFields: [\n      'role',\n      'experienceLevel', \n      'candidateProfile.name',\n      'candidateProfile.skills'\n    ],\n    optionalFields: [\n      'sessionId',\n      'industry',\n      'roleType',\n      'companyInfo',\n      'customization',\n      'metadata'\n    ],\n    experienceLevels: ['entry', 'mid', 'senior', 'executive'],\n    defaultStages: ['technical', 'behavioral', 'industry', 'wrap-up'],\n    defaultDurations: {\n      technical: 15,\n      behavioral: 10,\n      industry: 10,\n      'wrap-up': 5\n    },\n    example: {\n      role: 'Senior Frontend Developer',\n      experienceLevel: 'senior',\n      candidateProfile: {\n        name: 'John Doe',\n        skills: ['React', 'TypeScript', 'Node.js'],\n        yearsExperience: 5\n      },\n      companyInfo: {\n        name: 'Tech Corp',\n        industry: 'technology',\n        size: 'medium'\n      },\n      customization: {\n        enabledStages: ['technical', 'behavioral'],\n        stageDurations: { technical: 20 }\n      }\n    }\n  });\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "42aaae59baef0a189c6dd36ec6af5601ec573c51"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_250sf7r378 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_250sf7r378();
cov_250sf7r378().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_250sf7r378().s[1]++;
exports.POST = POST;
/* istanbul ignore next */
cov_250sf7r378().s[2]++;
exports.GET = GET;
const server_1 =
/* istanbul ignore next */
(cov_250sf7r378().s[3]++, require("next/server"));
const interview_workflow_1 =
/* istanbul ignore next */
(cov_250sf7r378().s[4]++, require("@/lib/azure-ai-foundry/workflows/interview-workflow"));
const nanoid_1 =
/* istanbul ignore next */
(cov_250sf7r378().s[5]++, require("nanoid"));
// Lazy initialization to avoid build-time issues
let workflow =
/* istanbul ignore next */
(cov_250sf7r378().s[6]++, null);
function getWorkflow() {
  /* istanbul ignore next */
  cov_250sf7r378().f[0]++;
  cov_250sf7r378().s[7]++;
  if (!workflow) {
    /* istanbul ignore next */
    cov_250sf7r378().b[0][0]++;
    cov_250sf7r378().s[8]++;
    workflow = new interview_workflow_1.InterviewWorkflow();
  } else
  /* istanbul ignore next */
  {
    cov_250sf7r378().b[0][1]++;
  }
  cov_250sf7r378().s[9]++;
  return workflow;
}
/**
 * POST /api/interview/start-multi-agent
 *
 * Start a new multi-agent interview session
 *
 * Request Body:
 * - role: string (required)
 * - experienceLevel: 'entry' | 'mid' | 'senior' | 'executive' (required)
 * - industry?: string
 * - candidateProfile: { name, skills, ... } (required)
 * - companyInfo?: { name, industry, size, culture }
 * - customization?: { enabledStages, stageDurations, ... }
 * - metadata?: { source, recruiterId, ... }
 *
 * Response:
 * - sessionId: string
 * - status: WorkflowStatus
 */
async function POST(request) {
  /* istanbul ignore next */
  cov_250sf7r378().f[1]++;
  var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r;
  /* istanbul ignore next */
  cov_250sf7r378().s[10]++;
  try {
    const body =
    /* istanbul ignore next */
    (cov_250sf7r378().s[11]++, await request.json());
    // Validate required fields
    /* istanbul ignore next */
    cov_250sf7r378().s[12]++;
    if (
    /* istanbul ignore next */
    (cov_250sf7r378().b[2][0]++, !body.role) ||
    /* istanbul ignore next */
    (cov_250sf7r378().b[2][1]++, !body.experienceLevel) ||
    /* istanbul ignore next */
    (cov_250sf7r378().b[2][2]++, !(
    /* istanbul ignore next */
    (cov_250sf7r378().b[4][0]++, (_a = body.candidateProfile) === null) ||
    /* istanbul ignore next */
    (cov_250sf7r378().b[4][1]++, _a === void 0) ?
    /* istanbul ignore next */
    (cov_250sf7r378().b[3][0]++, void 0) :
    /* istanbul ignore next */
    (cov_250sf7r378().b[3][1]++, _a.name))) ||
    /* istanbul ignore next */
    (cov_250sf7r378().b[2][3]++, !(
    /* istanbul ignore next */
    (cov_250sf7r378().b[6][0]++, (_b = body.candidateProfile) === null) ||
    /* istanbul ignore next */
    (cov_250sf7r378().b[6][1]++, _b === void 0) ?
    /* istanbul ignore next */
    (cov_250sf7r378().b[5][0]++, void 0) :
    /* istanbul ignore next */
    (cov_250sf7r378().b[5][1]++, _b.skills)))) {
      /* istanbul ignore next */
      cov_250sf7r378().b[1][0]++;
      cov_250sf7r378().s[13]++;
      return server_1.NextResponse.json({
        error: 'Missing required fields',
        required: ['role', 'experienceLevel', 'candidateProfile.name', 'candidateProfile.skills']
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_250sf7r378().b[1][1]++;
    }
    // Generate session ID if not provided
    const sessionId =
    /* istanbul ignore next */
    (cov_250sf7r378().s[14]++,
    /* istanbul ignore next */
    (cov_250sf7r378().b[7][0]++, body.sessionId) ||
    /* istanbul ignore next */
    (cov_250sf7r378().b[7][1]++, `interview_${(0, nanoid_1.nanoid)(12)}`));
    // Build interview configuration
    const config =
    /* istanbul ignore next */
    (cov_250sf7r378().s[15]++, {
      sessionId,
      role: body.role,
      experienceLevel: body.experienceLevel,
      industry: body.industry,
      roleType: body.roleType,
      candidateProfile: {
        name: body.candidateProfile.name,
        email: body.candidateProfile.email,
        skills:
        /* istanbul ignore next */
        (cov_250sf7r378().b[8][0]++, body.candidateProfile.skills) ||
        /* istanbul ignore next */
        (cov_250sf7r378().b[8][1]++, []),
        previousRoles:
        /* istanbul ignore next */
        (cov_250sf7r378().b[9][0]++, body.candidateProfile.previousRoles) ||
        /* istanbul ignore next */
        (cov_250sf7r378().b[9][1]++, []),
        yearsExperience: body.candidateProfile.yearsExperience,
        education: body.candidateProfile.education,
        certifications:
        /* istanbul ignore next */
        (cov_250sf7r378().b[10][0]++, body.candidateProfile.certifications) ||
        /* istanbul ignore next */
        (cov_250sf7r378().b[10][1]++, [])
      },
      companyInfo: body.companyInfo,
      customization: {
        enabledStages:
        /* istanbul ignore next */
        (cov_250sf7r378().b[12][0]++, (_c = body.customization) === null) ||
        /* istanbul ignore next */
        (cov_250sf7r378().b[12][1]++, _c === void 0) ?
        /* istanbul ignore next */
        (cov_250sf7r378().b[11][0]++, void 0) :
        /* istanbul ignore next */
        (cov_250sf7r378().b[11][1]++, _c.enabledStages),
        stageDurations:
        /* istanbul ignore next */
        (cov_250sf7r378().b[14][0]++, (_d = body.customization) === null) ||
        /* istanbul ignore next */
        (cov_250sf7r378().b[14][1]++, _d === void 0) ?
        /* istanbul ignore next */
        (cov_250sf7r378().b[13][0]++, void 0) :
        /* istanbul ignore next */
        (cov_250sf7r378().b[13][1]++, _d.stageDurations),
        maxDurationMinutes:
        /* istanbul ignore next */
        (cov_250sf7r378().b[15][0]++,
        /* istanbul ignore next */
        (cov_250sf7r378().b[17][0]++, (_e = body.customization) === null) ||
        /* istanbul ignore next */
        (cov_250sf7r378().b[17][1]++, _e === void 0) ?
        /* istanbul ignore next */
        (cov_250sf7r378().b[16][0]++, void 0) :
        /* istanbul ignore next */
        (cov_250sf7r378().b[16][1]++, _e.maxDurationMinutes)) ||
        /* istanbul ignore next */
        (cov_250sf7r378().b[15][1]++, 45),
        customInstructions:
        /* istanbul ignore next */
        (cov_250sf7r378().b[19][0]++, (_f = body.customization) === null) ||
        /* istanbul ignore next */
        (cov_250sf7r378().b[19][1]++, _f === void 0) ?
        /* istanbul ignore next */
        (cov_250sf7r378().b[18][0]++, void 0) :
        /* istanbul ignore next */
        (cov_250sf7r378().b[18][1]++, _f.customInstructions),
        agentOverrides:
        /* istanbul ignore next */
        (cov_250sf7r378().b[21][0]++, (_g = body.customization) === null) ||
        /* istanbul ignore next */
        (cov_250sf7r378().b[21][1]++, _g === void 0) ?
        /* istanbul ignore next */
        (cov_250sf7r378().b[20][0]++, void 0) :
        /* istanbul ignore next */
        (cov_250sf7r378().b[20][1]++, _g.agentOverrides),
        questionsPerStage:
        /* istanbul ignore next */
        (cov_250sf7r378().b[23][0]++, (_h = body.customization) === null) ||
        /* istanbul ignore next */
        (cov_250sf7r378().b[23][1]++, _h === void 0) ?
        /* istanbul ignore next */
        (cov_250sf7r378().b[22][0]++, void 0) :
        /* istanbul ignore next */
        (cov_250sf7r378().b[22][1]++, _h.questionsPerStage),
        focusAreas:
        /* istanbul ignore next */
        (cov_250sf7r378().b[25][0]++, (_j = body.customization) === null) ||
        /* istanbul ignore next */
        (cov_250sf7r378().b[25][1]++, _j === void 0) ?
        /* istanbul ignore next */
        (cov_250sf7r378().b[24][0]++, void 0) :
        /* istanbul ignore next */
        (cov_250sf7r378().b[24][1]++, _j.focusAreas)
      },
      metadata: {
        source:
        /* istanbul ignore next */
        (cov_250sf7r378().b[26][0]++,
        /* istanbul ignore next */
        (cov_250sf7r378().b[28][0]++, (_k = body.metadata) === null) ||
        /* istanbul ignore next */
        (cov_250sf7r378().b[28][1]++, _k === void 0) ?
        /* istanbul ignore next */
        (cov_250sf7r378().b[27][0]++, void 0) :
        /* istanbul ignore next */
        (cov_250sf7r378().b[27][1]++, _k.source)) ||
        /* istanbul ignore next */
        (cov_250sf7r378().b[26][1]++, 'api'),
        recruiterId:
        /* istanbul ignore next */
        (cov_250sf7r378().b[30][0]++, (_l = body.metadata) === null) ||
        /* istanbul ignore next */
        (cov_250sf7r378().b[30][1]++, _l === void 0) ?
        /* istanbul ignore next */
        (cov_250sf7r378().b[29][0]++, void 0) :
        /* istanbul ignore next */
        (cov_250sf7r378().b[29][1]++, _l.recruiterId),
        jobPostingId:
        /* istanbul ignore next */
        (cov_250sf7r378().b[32][0]++, (_m = body.metadata) === null) ||
        /* istanbul ignore next */
        (cov_250sf7r378().b[32][1]++, _m === void 0) ?
        /* istanbul ignore next */
        (cov_250sf7r378().b[31][0]++, void 0) :
        /* istanbul ignore next */
        (cov_250sf7r378().b[31][1]++, _m.jobPostingId),
        interviewType:
        /* istanbul ignore next */
        (cov_250sf7r378().b[33][0]++,
        /* istanbul ignore next */
        (cov_250sf7r378().b[35][0]++, (_o = body.metadata) === null) ||
        /* istanbul ignore next */
        (cov_250sf7r378().b[35][1]++, _o === void 0) ?
        /* istanbul ignore next */
        (cov_250sf7r378().b[34][0]++, void 0) :
        /* istanbul ignore next */
        (cov_250sf7r378().b[34][1]++, _o.interviewType)) ||
        /* istanbul ignore next */
        (cov_250sf7r378().b[33][1]++, 'screening'),
        scheduledAt:
        /* istanbul ignore next */
        (cov_250sf7r378().b[36][0]++,
        /* istanbul ignore next */
        (cov_250sf7r378().b[38][0]++, (_p = body.metadata) === null) ||
        /* istanbul ignore next */
        (cov_250sf7r378().b[38][1]++, _p === void 0) ?
        /* istanbul ignore next */
        (cov_250sf7r378().b[37][0]++, void 0) :
        /* istanbul ignore next */
        (cov_250sf7r378().b[37][1]++, _p.scheduledAt)) ||
        /* istanbul ignore next */
        (cov_250sf7r378().b[36][1]++, new Date().toISOString()),
        tags:
        /* istanbul ignore next */
        (cov_250sf7r378().b[39][0]++,
        /* istanbul ignore next */
        (cov_250sf7r378().b[41][0]++, (_q = body.metadata) === null) ||
        /* istanbul ignore next */
        (cov_250sf7r378().b[41][1]++, _q === void 0) ?
        /* istanbul ignore next */
        (cov_250sf7r378().b[40][0]++, void 0) :
        /* istanbul ignore next */
        (cov_250sf7r378().b[40][1]++, _q.tags)) ||
        /* istanbul ignore next */
        (cov_250sf7r378().b[39][1]++, [])
      }
    });
    /* istanbul ignore next */
    cov_250sf7r378().s[16]++;
    console.log(`[API] Starting multi-agent interview for ${config.candidateProfile.name} - Role: ${config.role}`);
    // Start the interview workflow
    const startedSessionId =
    /* istanbul ignore next */
    (cov_250sf7r378().s[17]++, await getWorkflow().startMultiAgentInterview(config));
    // Get initial status
    const status =
    /* istanbul ignore next */
    (cov_250sf7r378().s[18]++, await getWorkflow().getStatus(startedSessionId));
    /* istanbul ignore next */
    cov_250sf7r378().s[19]++;
    return server_1.NextResponse.json({
      success: true,
      sessionId: startedSessionId,
      status,
      message: 'Multi-agent interview started successfully'
    }, {
      status: 201
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_250sf7r378().s[20]++;
    console.error('[API] Error starting multi-agent interview:', error);
    /* istanbul ignore next */
    cov_250sf7r378().s[21]++;
    return server_1.NextResponse.json({
      success: false,
      error:
      /* istanbul ignore next */
      (cov_250sf7r378().b[42][0]++, error.message) ||
      /* istanbul ignore next */
      (cov_250sf7r378().b[42][1]++, 'Failed to start interview'),
      code:
      /* istanbul ignore next */
      (cov_250sf7r378().b[43][0]++, error.code) ||
      /* istanbul ignore next */
      (cov_250sf7r378().b[43][1]++, 'UNKNOWN_ERROR'),
      recoverable:
      /* istanbul ignore next */
      (cov_250sf7r378().b[45][0]++, (_r = error.recoverable) !== null) &&
      /* istanbul ignore next */
      (cov_250sf7r378().b[45][1]++, _r !== void 0) ?
      /* istanbul ignore next */
      (cov_250sf7r378().b[44][0]++, _r) :
      /* istanbul ignore next */
      (cov_250sf7r378().b[44][1]++, true)
    }, {
      status: error.code === 'CONFIGURATION_ERROR' ?
      /* istanbul ignore next */
      (cov_250sf7r378().b[46][0]++, 400) :
      /* istanbul ignore next */
      (cov_250sf7r378().b[46][1]++, 500)
    });
  }
}
/**
 * GET /api/interview/start-multi-agent
 *
 * Get API documentation and requirements
 */
async function GET() {
  /* istanbul ignore next */
  cov_250sf7r378().f[2]++;
  cov_250sf7r378().s[22]++;
  return server_1.NextResponse.json({
    endpoint: 'POST /api/interview/start-multi-agent',
    description: 'Start a new multi-agent interview session',
    requiredFields: ['role', 'experienceLevel', 'candidateProfile.name', 'candidateProfile.skills'],
    optionalFields: ['sessionId', 'industry', 'roleType', 'companyInfo', 'customization', 'metadata'],
    experienceLevels: ['entry', 'mid', 'senior', 'executive'],
    defaultStages: ['technical', 'behavioral', 'industry', 'wrap-up'],
    defaultDurations: {
      technical: 15,
      behavioral: 10,
      industry: 10,
      'wrap-up': 5
    },
    example: {
      role: 'Senior Frontend Developer',
      experienceLevel: 'senior',
      candidateProfile: {
        name: 'John Doe',
        skills: ['React', 'TypeScript', 'Node.js'],
        yearsExperience: 5
      },
      companyInfo: {
        name: 'Tech Corp',
        industry: 'technology',
        size: 'medium'
      },
      customization: {
        enabledStages: ['technical', 'behavioral'],
        stageDurations: {
          technical: 20
        }
      }
    }
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,