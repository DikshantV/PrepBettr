87fb60d9cb989b109cc956cdebdcfbc9
"use strict";

/* istanbul ignore next */
function cov_25whrvzxbg() {
  var path = "/Users/dikshantvashistha/PrepBettr/lib/azure-ai-foundry/agents/behavioral-interviewer.ts";
  var hash = "3fe8ec53a700a8980fb6faecbcf67293f3ffd509";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dikshantvashistha/PrepBettr/lib/azure-ai-foundry/agents/behavioral-interviewer.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 39
        }
      },
      "2": {
        start: {
          line: 4,
          column: 21
        },
        end: {
          line: 4,
          column: 44
        }
      },
      "3": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 37
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 43
        }
      },
      "5": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 45
        }
      },
      "6": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 33
        }
      },
      "7": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 34
        }
      },
      "8": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 38,
          column: 91
        }
      },
      "9": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 54,
          column: 10
        }
      },
      "10": {
        start: {
          line: 61,
          column: 75
        },
        end: {
          line: 61,
          column: 82
        }
      },
      "11": {
        start: {
          line: 62,
          column: 21
        },
        end: {
          line: 62,
          column: 111
        }
      },
      "12": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 65,
          column: 9
        }
      },
      "13": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 64,
          column: 48
        }
      },
      "14": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 66,
          column: 48
        }
      },
      "15": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 69,
          column: 9
        }
      },
      "16": {
        start: {
          line: 68,
          column: 12
        },
        end: {
          line: 68,
          column: 77
        }
      },
      "17": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 72,
          column: 9
        }
      },
      "18": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 71,
          column: 78
        }
      },
      "19": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 76,
          column: 9
        }
      },
      "20": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 75,
          column: 67
        }
      },
      "21": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 79,
          column: 9
        }
      },
      "22": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 78,
          column: 195
        }
      },
      "23": {
        start: {
          line: 78,
          column: 98
        },
        end: {
          line: 78,
          column: 111
        }
      },
      "24": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 94,
          column: 108
        }
      },
      "25": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 95,
          column: 22
        }
      },
      "26": {
        start: {
          line: 102,
          column: 32
        },
        end: {
          line: 102,
          column: 195
        }
      },
      "27": {
        start: {
          line: 103,
          column: 34
        },
        end: {
          line: 152,
          column: 9
        }
      },
      "28": {
        start: {
          line: 154,
          column: 8
        },
        end: {
          line: 167,
          column: 9
        }
      },
      "29": {
        start: {
          line: 155,
          column: 12
        },
        end: {
          line: 166,
          column: 15
        }
      },
      "30": {
        start: {
          line: 168,
          column: 8
        },
        end: {
          line: 168,
          column: 33
        }
      },
      "31": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 172,
          column: 28
        }
      },
      "32": {
        start: {
          line: 175,
          column: 8
        },
        end: {
          line: 175,
          column: 123
        }
      },
      "33": {
        start: {
          line: 178,
          column: 0
        },
        end: {
          line: 178,
          column: 54
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 5
          }
        },
        loc: {
          start: {
            line: 10,
            column: 39
          },
          end: {
            line: 55,
            column: 5
          }
        },
        line: 10
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 59,
            column: 4
          },
          end: {
            line: 59,
            column: 5
          }
        },
        loc: {
          start: {
            line: 59,
            column: 25
          },
          end: {
            line: 96,
            column: 5
          }
        },
        line: 59
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 78,
            column: 93
          },
          end: {
            line: 78,
            column: 94
          }
        },
        loc: {
          start: {
            line: 78,
            column: 98
          },
          end: {
            line: 78,
            column: 111
          }
        },
        line: 78
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 100,
            column: 4
          },
          end: {
            line: 100,
            column: 5
          }
        },
        loc: {
          start: {
            line: 100,
            column: 44
          },
          end: {
            line: 169,
            column: 5
          }
        },
        line: 100
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 171,
            column: 4
          },
          end: {
            line: 171,
            column: 5
          }
        },
        loc: {
          start: {
            line: 171,
            column: 26
          },
          end: {
            line: 173,
            column: 5
          }
        },
        line: 171
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 174,
            column: 4
          },
          end: {
            line: 174,
            column: 5
          }
        },
        loc: {
          start: {
            line: 174,
            column: 32
          },
          end: {
            line: 176,
            column: 5
          }
        },
        line: 174
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 63,
            column: 8
          },
          end: {
            line: 65,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 63,
            column: 8
          },
          end: {
            line: 65,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 63
      },
      "1": {
        loc: {
          start: {
            line: 63,
            column: 12
          },
          end: {
            line: 63,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 63,
            column: 61
          },
          end: {
            line: 63,
            column: 67
          }
        }, {
          start: {
            line: 63,
            column: 70
          },
          end: {
            line: 63,
            column: 86
          }
        }],
        line: 63
      },
      "2": {
        loc: {
          start: {
            line: 63,
            column: 12
          },
          end: {
            line: 63,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 63,
            column: 12
          },
          end: {
            line: 63,
            column: 32
          }
        }, {
          start: {
            line: 63,
            column: 36
          },
          end: {
            line: 63,
            column: 58
          }
        }],
        line: 63
      },
      "3": {
        loc: {
          start: {
            line: 67,
            column: 8
          },
          end: {
            line: 69,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 67,
            column: 8
          },
          end: {
            line: 69,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 67
      },
      "4": {
        loc: {
          start: {
            line: 67,
            column: 12
          },
          end: {
            line: 67,
            column: 107
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 67,
            column: 71
          },
          end: {
            line: 67,
            column: 77
          }
        }, {
          start: {
            line: 67,
            column: 80
          },
          end: {
            line: 67,
            column: 107
          }
        }],
        line: 67
      },
      "5": {
        loc: {
          start: {
            line: 67,
            column: 12
          },
          end: {
            line: 67,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 67,
            column: 12
          },
          end: {
            line: 67,
            column: 37
          }
        }, {
          start: {
            line: 67,
            column: 41
          },
          end: {
            line: 67,
            column: 68
          }
        }],
        line: 67
      },
      "6": {
        loc: {
          start: {
            line: 70,
            column: 8
          },
          end: {
            line: 72,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 70,
            column: 8
          },
          end: {
            line: 72,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 70
      },
      "7": {
        loc: {
          start: {
            line: 70,
            column: 12
          },
          end: {
            line: 70,
            column: 157
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 70,
            column: 139
          },
          end: {
            line: 70,
            column: 145
          }
        }, {
          start: {
            line: 70,
            column: 148
          },
          end: {
            line: 70,
            column: 157
          }
        }],
        line: 70
      },
      "8": {
        loc: {
          start: {
            line: 70,
            column: 12
          },
          end: {
            line: 70,
            column: 136
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 70,
            column: 12
          },
          end: {
            line: 70,
            column: 119
          }
        }, {
          start: {
            line: 70,
            column: 123
          },
          end: {
            line: 70,
            column: 136
          }
        }],
        line: 70
      },
      "9": {
        loc: {
          start: {
            line: 70,
            column: 18
          },
          end: {
            line: 70,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 70,
            column: 77
          },
          end: {
            line: 70,
            column: 83
          }
        }, {
          start: {
            line: 70,
            column: 86
          },
          end: {
            line: 70,
            column: 109
          }
        }],
        line: 70
      },
      "10": {
        loc: {
          start: {
            line: 70,
            column: 18
          },
          end: {
            line: 70,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 70,
            column: 18
          },
          end: {
            line: 70,
            column: 43
          }
        }, {
          start: {
            line: 70,
            column: 47
          },
          end: {
            line: 70,
            column: 74
          }
        }],
        line: 70
      },
      "11": {
        loc: {
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 76,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 76,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 74
      },
      "12": {
        loc: {
          start: {
            line: 74,
            column: 12
          },
          end: {
            line: 74,
            column: 105
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 74,
            column: 71
          },
          end: {
            line: 74,
            column: 77
          }
        }, {
          start: {
            line: 74,
            column: 80
          },
          end: {
            line: 74,
            column: 105
          }
        }],
        line: 74
      },
      "13": {
        loc: {
          start: {
            line: 74,
            column: 12
          },
          end: {
            line: 74,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 74,
            column: 12
          },
          end: {
            line: 74,
            column: 37
          }
        }, {
          start: {
            line: 74,
            column: 41
          },
          end: {
            line: 74,
            column: 68
          }
        }],
        line: 74
      },
      "14": {
        loc: {
          start: {
            line: 77,
            column: 8
          },
          end: {
            line: 79,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 77,
            column: 8
          },
          end: {
            line: 79,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 77
      },
      "15": {
        loc: {
          start: {
            line: 77,
            column: 12
          },
          end: {
            line: 77,
            column: 162
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 77,
            column: 144
          },
          end: {
            line: 77,
            column: 150
          }
        }, {
          start: {
            line: 77,
            column: 153
          },
          end: {
            line: 77,
            column: 162
          }
        }],
        line: 77
      },
      "16": {
        loc: {
          start: {
            line: 77,
            column: 12
          },
          end: {
            line: 77,
            column: 141
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 77,
            column: 12
          },
          end: {
            line: 77,
            column: 124
          }
        }, {
          start: {
            line: 77,
            column: 128
          },
          end: {
            line: 77,
            column: 141
          }
        }],
        line: 77
      },
      "17": {
        loc: {
          start: {
            line: 77,
            column: 18
          },
          end: {
            line: 77,
            column: 114
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 77,
            column: 73
          },
          end: {
            line: 77,
            column: 79
          }
        }, {
          start: {
            line: 77,
            column: 82
          },
          end: {
            line: 77,
            column: 114
          }
        }],
        line: 77
      },
      "18": {
        loc: {
          start: {
            line: 77,
            column: 18
          },
          end: {
            line: 77,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 77,
            column: 18
          },
          end: {
            line: 77,
            column: 41
          }
        }, {
          start: {
            line: 77,
            column: 45
          },
          end: {
            line: 77,
            column: 70
          }
        }],
        line: 77
      },
      "19": {
        loc: {
          start: {
            line: 102,
            column: 32
          },
          end: {
            line: 102,
            column: 195
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 102,
            column: 33
          },
          end: {
            line: 102,
            column: 176
          }
        }, {
          start: {
            line: 102,
            column: 181
          },
          end: {
            line: 102,
            column: 195
          }
        }],
        line: 102
      },
      "20": {
        loc: {
          start: {
            line: 102,
            column: 33
          },
          end: {
            line: 102,
            column: 176
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 102,
            column: 151
          },
          end: {
            line: 102,
            column: 157
          }
        }, {
          start: {
            line: 102,
            column: 160
          },
          end: {
            line: 102,
            column: 176
          }
        }],
        line: 102
      },
      "21": {
        loc: {
          start: {
            line: 102,
            column: 33
          },
          end: {
            line: 102,
            column: 148
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 102,
            column: 33
          },
          end: {
            line: 102,
            column: 131
          }
        }, {
          start: {
            line: 102,
            column: 135
          },
          end: {
            line: 102,
            column: 148
          }
        }],
        line: 102
      },
      "22": {
        loc: {
          start: {
            line: 102,
            column: 39
          },
          end: {
            line: 102,
            column: 121
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 102,
            column: 99
          },
          end: {
            line: 102,
            column: 105
          }
        }, {
          start: {
            line: 102,
            column: 108
          },
          end: {
            line: 102,
            column: 121
          }
        }],
        line: 102
      },
      "23": {
        loc: {
          start: {
            line: 102,
            column: 39
          },
          end: {
            line: 102,
            column: 96
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 102,
            column: 39
          },
          end: {
            line: 102,
            column: 79
          }
        }, {
          start: {
            line: 102,
            column: 83
          },
          end: {
            line: 102,
            column: 96
          }
        }],
        line: 102
      },
      "24": {
        loc: {
          start: {
            line: 154,
            column: 8
          },
          end: {
            line: 167,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 154,
            column: 8
          },
          end: {
            line: 167,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 154
      },
      "25": {
        loc: {
          start: {
            line: 154,
            column: 12
          },
          end: {
            line: 154,
            column: 123
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 154,
            column: 12
          },
          end: {
            line: 154,
            column: 46
          }
        }, {
          start: {
            line: 154,
            column: 50
          },
          end: {
            line: 154,
            column: 82
          }
        }, {
          start: {
            line: 154,
            column: 86
          },
          end: {
            line: 154,
            column: 123
          }
        }],
        line: 154
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0, 0]
    },
    inputSourceMap: {
      file: "/Users/dikshantvashistha/PrepBettr/lib/azure-ai-foundry/agents/behavioral-interviewer.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/dikshantvashistha/PrepBettr/lib/azure-ai-foundry/agents/behavioral-interviewer.ts"],
      sourcesContent: ["import { BaseAgent } from './base-agent';\nimport { FoundryClientBase } from '../clients/foundry-client';\nimport { FoundryConfig } from '../config/foundry-config';\nimport { InterviewContext, Question, AgentMetadata } from '../types/agent-types';\n\n/**\n * BehavioralInterviewer agent specializing in behavioral and situational questions\n * Uses GPT-4o model for human-focused behavioral assessment\n */\nexport class BehavioralInterviewer extends BaseAgent {\n  // Required BaseAgent interface properties\n  readonly id = 'behavioral-interviewer';\n  readonly name = 'Behavioral Interviewer';\n  readonly type = 'behavioral' as const;\n  \n  protected readonly modelName = 'gpt-4o';\n  \n  public readonly instructions = `You are a behavioral interview specialist focused on assessing soft skills, leadership potential, and cultural fit.\n\nROLE GUIDELINES:\n- Ask questions about past experiences, challenging situations, and interpersonal skills\n- Focus on STAR method responses (Situation, Task, Action, Result)\n- Assess communication skills, problem-solving approach, and emotional intelligence\n- Adapt questions based on the candidate's seniority level and role requirements\n\nQUESTION TYPES TO FOCUS ON:\n- Leadership and teamwork experiences\n- Conflict resolution and difficult conversations\n- Adaptability and learning from failure\n- Decision-making under pressure\n- Career motivation and goal alignment\n\nINTERVIEW STYLE:\n- Be empathetic and encouraging\n- Ask follow-up questions to understand context and impact\n- Help candidates structure their responses using the STAR method\n- Focus on specific examples rather than hypothetical scenarios\n\nAlways tailor questions to the candidate's background and the specific role requirements.`;\n  \n  public readonly metadata: AgentMetadata = {\n    id: 'behavioral-interviewer',\n    name: 'Behavioral Interviewer',\n    description: 'Specializes in behavioral and soft skills assessment',\n    version: '1.0.0',\n    supportedPhases: ['behavioral', 'cultural-fit'],\n    capabilities: ['behavioral-assessment', 'soft-skills-evaluation', 'cultural-fit-analysis'],\n    modelRequirements: {\n      minimumTokens: 2000,\n      preferredModels: ['gpt-4o', 'gpt-4']\n    },\n    tags: ['behavioral', 'soft-skills', 'teamwork', 'leadership'],\n    // Legacy compatibility\n    maxQuestions: 5,\n    averageDuration: 6\n  };\n\n  constructor(foundryClient: FoundryClientBase, config: FoundryConfig) {\n    super(foundryClient, config);\n  }\n\n\n  /**\n   * Build behavioral-specific prompt based on context\n   */\n  private buildPrompt(context: InterviewContext): string {\n    const { candidateProfile, jobRole, companyInfo, sessionHistory } = context;\n    \n    let prompt = `Generate 5-7 behavioral interview questions for a candidate interviewing for: ${jobRole}`;\n    \n    if (companyInfo?.name) {\n      prompt += ` at ${companyInfo.name}`;\n    }\n    \n    prompt += '\\n\\nCandidate Background:\\n';\n    \n    if (candidateProfile?.experience) {\n      prompt += `- Experience Level: ${candidateProfile.experience}\\n`;\n    }\n    \n    if (candidateProfile?.skills?.length) {\n      prompt += `- Key Skills: ${candidateProfile.skills.join(', ')}\\n`;\n    }\n    \n    // Remove references to undefined properties\n    if (candidateProfile?.industry) {\n      prompt += `- Industry: ${candidateProfile.industry}\\n`;\n    }\n    \n    if (sessionHistory?.previousQuestions?.length) {\n      prompt += `\\nPreviously Asked Questions:\\n${sessionHistory.previousQuestions.map(q => `- ${q.text}`).join('\\n')}\\n\\nAvoid repeating these topics and build upon previous responses.\\n`;\n    }\n    \n    prompt += `\\nFOCUS AREAS:\n- Past experiences demonstrating relevant skills\n- Leadership and teamwork scenarios\n- Problem-solving and decision-making situations\n- Adaptability and learning from challenges\n- Communication and interpersonal skills\n- Career motivation and cultural fit\n\nFORMAT: Return each question as a JSON object with:\n- \"text\": the question text\n- \"category\": behavioral category (leadership, teamwork, problem-solving, etc.)\n- \"followUps\": 1-2 potential follow-up questions\n- \"difficulty\": beginner/intermediate/advanced based on role seniority\n\nEnsure questions encourage STAR method responses and are appropriate for the candidate's experience level.`;\n\n    return prompt;\n  }\n\n  /**\n   * Get fallback behavioral questions when AI generation fails\n   */\n  private getFallbackBehavioralQuestions(context: InterviewContext): Question[] {\n    const experienceLevel = context.candidateProfile?.experience?.toLowerCase() || 'intermediate';\n    \n    const fallbackQuestions: Question[] = [\n      {\n        id: 'behavioral-1',\n        text: 'Tell me about a time when you had to work with a difficult team member. How did you handle the situation?',\n        type: 'behavioral',\n        category: 'behavioral',\n        difficulty: 'medium',\n        expectedDuration: 300,\n        tags: ['teamwork', 'conflict-resolution'],\n        metadata: {\n          topic: 'teamwork'\n        }\n      },\n      {\n        id: 'behavioral-2',\n        text: 'Describe a situation where you had to learn something new quickly to complete a project.',\n        type: 'behavioral',\n        category: 'behavioral',\n        difficulty: 'easy',\n        expectedDuration: 240,\n        tags: ['adaptability', 'learning'],\n        metadata: {\n          topic: 'adaptability'\n        }\n      },\n      {\n        id: 'behavioral-3',\n        text: 'Give me an example of a time when you had to make a decision without having all the information you needed.',\n        type: 'behavioral',\n        category: 'behavioral',\n        difficulty: 'medium',\n        expectedDuration: 360,\n        tags: ['decision-making', 'problem-solving'],\n        metadata: {\n          topic: 'decision-making'\n        }\n      },\n      {\n        id: 'behavioral-4',\n        text: 'Tell me about a time when you received constructive criticism. How did you respond?',\n        type: 'behavioral',\n        category: 'behavioral',\n        difficulty: 'easy',\n        expectedDuration: 240,\n        tags: ['growth-mindset', 'feedback'],\n        metadata: {\n          topic: 'growth-mindset'\n        }\n      }\n    ];\n\n    // Add senior-level questions if appropriate\n    if (experienceLevel.includes('senior') || experienceLevel.includes('lead') || experienceLevel.includes('principal')) {\n      fallbackQuestions.push({\n        id: 'behavioral-5',\n        text: 'Describe a time when you had to influence others without having direct authority over them.',\n        type: 'behavioral',\n        category: 'behavioral',\n        difficulty: 'hard',\n        expectedDuration: 420,\n        tags: ['leadership', 'influence'],\n        metadata: {\n          topic: 'leadership'\n        }\n      });\n    }\n\n    return fallbackQuestions;\n  }\n\n  // Required BaseAgent abstract methods\n  protected getQuestionCategory(): Question['category'] {\n    return 'behavioral';\n  }\n\n  protected getDefaultQuestion(context: InterviewContext): string {\n    return 'Tell me about a time when you had to work with a difficult team member. How did you handle the situation?';\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "3fe8ec53a700a8980fb6faecbcf67293f3ffd509"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_25whrvzxbg = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_25whrvzxbg();
cov_25whrvzxbg().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_25whrvzxbg().s[1]++;
exports.BehavioralInterviewer = void 0;
const base_agent_1 =
/* istanbul ignore next */
(cov_25whrvzxbg().s[2]++, require("./base-agent"));
/**
 * BehavioralInterviewer agent specializing in behavioral and situational questions
 * Uses GPT-4o model for human-focused behavioral assessment
 */
class BehavioralInterviewer extends
/* istanbul ignore next */
(base_agent_1.BaseAgent) {
  constructor(foundryClient, config) {
    /* istanbul ignore next */
    cov_25whrvzxbg().f[0]++;
    cov_25whrvzxbg().s[3]++;
    super(foundryClient, config);
    // Required BaseAgent interface properties
    /* istanbul ignore next */
    cov_25whrvzxbg().s[4]++;
    this.id = 'behavioral-interviewer';
    /* istanbul ignore next */
    cov_25whrvzxbg().s[5]++;
    this.name = 'Behavioral Interviewer';
    /* istanbul ignore next */
    cov_25whrvzxbg().s[6]++;
    this.type = 'behavioral';
    /* istanbul ignore next */
    cov_25whrvzxbg().s[7]++;
    this.modelName = 'gpt-4o';
    /* istanbul ignore next */
    cov_25whrvzxbg().s[8]++;
    this.instructions = `You are a behavioral interview specialist focused on assessing soft skills, leadership potential, and cultural fit.

ROLE GUIDELINES:
- Ask questions about past experiences, challenging situations, and interpersonal skills
- Focus on STAR method responses (Situation, Task, Action, Result)
- Assess communication skills, problem-solving approach, and emotional intelligence
- Adapt questions based on the candidate's seniority level and role requirements

QUESTION TYPES TO FOCUS ON:
- Leadership and teamwork experiences
- Conflict resolution and difficult conversations
- Adaptability and learning from failure
- Decision-making under pressure
- Career motivation and goal alignment

INTERVIEW STYLE:
- Be empathetic and encouraging
- Ask follow-up questions to understand context and impact
- Help candidates structure their responses using the STAR method
- Focus on specific examples rather than hypothetical scenarios

Always tailor questions to the candidate's background and the specific role requirements.`;
    /* istanbul ignore next */
    cov_25whrvzxbg().s[9]++;
    this.metadata = {
      id: 'behavioral-interviewer',
      name: 'Behavioral Interviewer',
      description: 'Specializes in behavioral and soft skills assessment',
      version: '1.0.0',
      supportedPhases: ['behavioral', 'cultural-fit'],
      capabilities: ['behavioral-assessment', 'soft-skills-evaluation', 'cultural-fit-analysis'],
      modelRequirements: {
        minimumTokens: 2000,
        preferredModels: ['gpt-4o', 'gpt-4']
      },
      tags: ['behavioral', 'soft-skills', 'teamwork', 'leadership'],
      // Legacy compatibility
      maxQuestions: 5,
      averageDuration: 6
    };
  }
  /**
   * Build behavioral-specific prompt based on context
   */
  buildPrompt(context) {
    /* istanbul ignore next */
    cov_25whrvzxbg().f[1]++;
    var _a, _b;
    const {
      candidateProfile,
      jobRole,
      companyInfo,
      sessionHistory
    } =
    /* istanbul ignore next */
    (cov_25whrvzxbg().s[10]++, context);
    let prompt =
    /* istanbul ignore next */
    (cov_25whrvzxbg().s[11]++, `Generate 5-7 behavioral interview questions for a candidate interviewing for: ${jobRole}`);
    /* istanbul ignore next */
    cov_25whrvzxbg().s[12]++;
    if (
    /* istanbul ignore next */
    (cov_25whrvzxbg().b[2][0]++, companyInfo === null) ||
    /* istanbul ignore next */
    (cov_25whrvzxbg().b[2][1]++, companyInfo === void 0) ?
    /* istanbul ignore next */
    (cov_25whrvzxbg().b[1][0]++, void 0) :
    /* istanbul ignore next */
    (cov_25whrvzxbg().b[1][1]++, companyInfo.name)) {
      /* istanbul ignore next */
      cov_25whrvzxbg().b[0][0]++;
      cov_25whrvzxbg().s[13]++;
      prompt += ` at ${companyInfo.name}`;
    } else
    /* istanbul ignore next */
    {
      cov_25whrvzxbg().b[0][1]++;
    }
    cov_25whrvzxbg().s[14]++;
    prompt += '\n\nCandidate Background:\n';
    /* istanbul ignore next */
    cov_25whrvzxbg().s[15]++;
    if (
    /* istanbul ignore next */
    (cov_25whrvzxbg().b[5][0]++, candidateProfile === null) ||
    /* istanbul ignore next */
    (cov_25whrvzxbg().b[5][1]++, candidateProfile === void 0) ?
    /* istanbul ignore next */
    (cov_25whrvzxbg().b[4][0]++, void 0) :
    /* istanbul ignore next */
    (cov_25whrvzxbg().b[4][1]++, candidateProfile.experience)) {
      /* istanbul ignore next */
      cov_25whrvzxbg().b[3][0]++;
      cov_25whrvzxbg().s[16]++;
      prompt += `- Experience Level: ${candidateProfile.experience}\n`;
    } else
    /* istanbul ignore next */
    {
      cov_25whrvzxbg().b[3][1]++;
    }
    cov_25whrvzxbg().s[17]++;
    if (
    /* istanbul ignore next */
    (cov_25whrvzxbg().b[8][0]++, (_a =
    /* istanbul ignore next */
    (cov_25whrvzxbg().b[10][0]++, candidateProfile === null) ||
    /* istanbul ignore next */
    (cov_25whrvzxbg().b[10][1]++, candidateProfile === void 0) ?
    /* istanbul ignore next */
    (cov_25whrvzxbg().b[9][0]++, void 0) :
    /* istanbul ignore next */
    (cov_25whrvzxbg().b[9][1]++, candidateProfile.skills)) === null) ||
    /* istanbul ignore next */
    (cov_25whrvzxbg().b[8][1]++, _a === void 0) ?
    /* istanbul ignore next */
    (cov_25whrvzxbg().b[7][0]++, void 0) :
    /* istanbul ignore next */
    (cov_25whrvzxbg().b[7][1]++, _a.length)) {
      /* istanbul ignore next */
      cov_25whrvzxbg().b[6][0]++;
      cov_25whrvzxbg().s[18]++;
      prompt += `- Key Skills: ${candidateProfile.skills.join(', ')}\n`;
    } else
    /* istanbul ignore next */
    {
      cov_25whrvzxbg().b[6][1]++;
    }
    // Remove references to undefined properties
    cov_25whrvzxbg().s[19]++;
    if (
    /* istanbul ignore next */
    (cov_25whrvzxbg().b[13][0]++, candidateProfile === null) ||
    /* istanbul ignore next */
    (cov_25whrvzxbg().b[13][1]++, candidateProfile === void 0) ?
    /* istanbul ignore next */
    (cov_25whrvzxbg().b[12][0]++, void 0) :
    /* istanbul ignore next */
    (cov_25whrvzxbg().b[12][1]++, candidateProfile.industry)) {
      /* istanbul ignore next */
      cov_25whrvzxbg().b[11][0]++;
      cov_25whrvzxbg().s[20]++;
      prompt += `- Industry: ${candidateProfile.industry}\n`;
    } else
    /* istanbul ignore next */
    {
      cov_25whrvzxbg().b[11][1]++;
    }
    cov_25whrvzxbg().s[21]++;
    if (
    /* istanbul ignore next */
    (cov_25whrvzxbg().b[16][0]++, (_b =
    /* istanbul ignore next */
    (cov_25whrvzxbg().b[18][0]++, sessionHistory === null) ||
    /* istanbul ignore next */
    (cov_25whrvzxbg().b[18][1]++, sessionHistory === void 0) ?
    /* istanbul ignore next */
    (cov_25whrvzxbg().b[17][0]++, void 0) :
    /* istanbul ignore next */
    (cov_25whrvzxbg().b[17][1]++, sessionHistory.previousQuestions)) === null) ||
    /* istanbul ignore next */
    (cov_25whrvzxbg().b[16][1]++, _b === void 0) ?
    /* istanbul ignore next */
    (cov_25whrvzxbg().b[15][0]++, void 0) :
    /* istanbul ignore next */
    (cov_25whrvzxbg().b[15][1]++, _b.length)) {
      /* istanbul ignore next */
      cov_25whrvzxbg().b[14][0]++;
      cov_25whrvzxbg().s[22]++;
      prompt += `\nPreviously Asked Questions:\n${sessionHistory.previousQuestions.map(q => {
        /* istanbul ignore next */
        cov_25whrvzxbg().f[2]++;
        cov_25whrvzxbg().s[23]++;
        return `- ${q.text}`;
      }).join('\n')}\n\nAvoid repeating these topics and build upon previous responses.\n`;
    } else
    /* istanbul ignore next */
    {
      cov_25whrvzxbg().b[14][1]++;
    }
    cov_25whrvzxbg().s[24]++;
    prompt += `\nFOCUS AREAS:
- Past experiences demonstrating relevant skills
- Leadership and teamwork scenarios
- Problem-solving and decision-making situations
- Adaptability and learning from challenges
- Communication and interpersonal skills
- Career motivation and cultural fit

FORMAT: Return each question as a JSON object with:
- "text": the question text
- "category": behavioral category (leadership, teamwork, problem-solving, etc.)
- "followUps": 1-2 potential follow-up questions
- "difficulty": beginner/intermediate/advanced based on role seniority

Ensure questions encourage STAR method responses and are appropriate for the candidate's experience level.`;
    /* istanbul ignore next */
    cov_25whrvzxbg().s[25]++;
    return prompt;
  }
  /**
   * Get fallback behavioral questions when AI generation fails
   */
  getFallbackBehavioralQuestions(context) {
    /* istanbul ignore next */
    cov_25whrvzxbg().f[3]++;
    var _a, _b;
    const experienceLevel =
    /* istanbul ignore next */
    (cov_25whrvzxbg().s[26]++,
    /* istanbul ignore next */
    (cov_25whrvzxbg().b[19][0]++,
    /* istanbul ignore next */
    (cov_25whrvzxbg().b[21][0]++, (_b =
    /* istanbul ignore next */
    (cov_25whrvzxbg().b[23][0]++, (_a = context.candidateProfile) === null) ||
    /* istanbul ignore next */
    (cov_25whrvzxbg().b[23][1]++, _a === void 0) ?
    /* istanbul ignore next */
    (cov_25whrvzxbg().b[22][0]++, void 0) :
    /* istanbul ignore next */
    (cov_25whrvzxbg().b[22][1]++, _a.experience)) === null) ||
    /* istanbul ignore next */
    (cov_25whrvzxbg().b[21][1]++, _b === void 0) ?
    /* istanbul ignore next */
    (cov_25whrvzxbg().b[20][0]++, void 0) :
    /* istanbul ignore next */
    (cov_25whrvzxbg().b[20][1]++, _b.toLowerCase())) ||
    /* istanbul ignore next */
    (cov_25whrvzxbg().b[19][1]++, 'intermediate'));
    const fallbackQuestions =
    /* istanbul ignore next */
    (cov_25whrvzxbg().s[27]++, [{
      id: 'behavioral-1',
      text: 'Tell me about a time when you had to work with a difficult team member. How did you handle the situation?',
      type: 'behavioral',
      category: 'behavioral',
      difficulty: 'medium',
      expectedDuration: 300,
      tags: ['teamwork', 'conflict-resolution'],
      metadata: {
        topic: 'teamwork'
      }
    }, {
      id: 'behavioral-2',
      text: 'Describe a situation where you had to learn something new quickly to complete a project.',
      type: 'behavioral',
      category: 'behavioral',
      difficulty: 'easy',
      expectedDuration: 240,
      tags: ['adaptability', 'learning'],
      metadata: {
        topic: 'adaptability'
      }
    }, {
      id: 'behavioral-3',
      text: 'Give me an example of a time when you had to make a decision without having all the information you needed.',
      type: 'behavioral',
      category: 'behavioral',
      difficulty: 'medium',
      expectedDuration: 360,
      tags: ['decision-making', 'problem-solving'],
      metadata: {
        topic: 'decision-making'
      }
    }, {
      id: 'behavioral-4',
      text: 'Tell me about a time when you received constructive criticism. How did you respond?',
      type: 'behavioral',
      category: 'behavioral',
      difficulty: 'easy',
      expectedDuration: 240,
      tags: ['growth-mindset', 'feedback'],
      metadata: {
        topic: 'growth-mindset'
      }
    }]);
    // Add senior-level questions if appropriate
    /* istanbul ignore next */
    cov_25whrvzxbg().s[28]++;
    if (
    /* istanbul ignore next */
    (cov_25whrvzxbg().b[25][0]++, experienceLevel.includes('senior')) ||
    /* istanbul ignore next */
    (cov_25whrvzxbg().b[25][1]++, experienceLevel.includes('lead')) ||
    /* istanbul ignore next */
    (cov_25whrvzxbg().b[25][2]++, experienceLevel.includes('principal'))) {
      /* istanbul ignore next */
      cov_25whrvzxbg().b[24][0]++;
      cov_25whrvzxbg().s[29]++;
      fallbackQuestions.push({
        id: 'behavioral-5',
        text: 'Describe a time when you had to influence others without having direct authority over them.',
        type: 'behavioral',
        category: 'behavioral',
        difficulty: 'hard',
        expectedDuration: 420,
        tags: ['leadership', 'influence'],
        metadata: {
          topic: 'leadership'
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_25whrvzxbg().b[24][1]++;
    }
    cov_25whrvzxbg().s[30]++;
    return fallbackQuestions;
  }
  // Required BaseAgent abstract methods
  getQuestionCategory() {
    /* istanbul ignore next */
    cov_25whrvzxbg().f[4]++;
    cov_25whrvzxbg().s[31]++;
    return 'behavioral';
  }
  getDefaultQuestion(context) {
    /* istanbul ignore next */
    cov_25whrvzxbg().f[5]++;
    cov_25whrvzxbg().s[32]++;
    return 'Tell me about a time when you had to work with a difficult team member. How did you handle the situation?';
  }
}
/* istanbul ignore next */
cov_25whrvzxbg().s[33]++;
exports.BehavioralInterviewer = BehavioralInterviewer;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,