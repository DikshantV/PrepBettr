d16091e182c987df65e9e90ef89f737a
"use strict";

/**
 * Unified Authentication Types
 *
 * Common type definitions for all authentication implementations
 */
/* istanbul ignore next */
function cov_2coqh8j2dq() {
  var path = "/Users/dikshantvashistha/PrepBettr/lib/shared/auth/types.ts";
  var hash = "2d3944942c27eb7c82a6f01b9713a182364d7b12";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dikshantvashistha/PrepBettr/lib/shared/auth/types.ts",
    statementMap: {
      "0": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 7,
          column: 62
        }
      },
      "1": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 31
        }
      },
      "2": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 50
        }
      },
      "3": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 10,
          column: 34
        }
      },
      "4": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 34
        }
      },
      "5": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 25,
          column: 66
        }
      },
      "6": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 15,
          column: 53
        }
      },
      "7": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 53
        }
      },
      "8": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 17,
          column: 53
        }
      },
      "9": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 18,
          column: 57
        }
      },
      "10": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 19,
          column: 75
        }
      },
      "11": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 20,
          column: 65
        }
      },
      "12": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 21,
          column: 55
        }
      },
      "13": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 22,
          column: 49
        }
      },
      "14": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 23,
          column: 53
        }
      },
      "15": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 24,
          column: 53
        }
      },
      "16": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 28,
          column: 73
        }
      },
      "17": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 31,
          column: 106
        }
      },
      "18": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 34,
          column: 111
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 14,
            column: 1
          },
          end: {
            line: 14,
            column: 2
          }
        },
        loc: {
          start: {
            line: 14,
            column: 26
          },
          end: {
            line: 25,
            column: 1
          }
        },
        line: 14
      },
      "1": {
        name: "isAuthenticatedUser",
        decl: {
          start: {
            line: 27,
            column: 9
          },
          end: {
            line: 27,
            column: 28
          }
        },
        loc: {
          start: {
            line: 27,
            column: 34
          },
          end: {
            line: 29,
            column: 1
          }
        },
        line: 27
      },
      "2": {
        name: "isAuthError",
        decl: {
          start: {
            line: 30,
            column: 9
          },
          end: {
            line: 30,
            column: 20
          }
        },
        loc: {
          start: {
            line: 30,
            column: 28
          },
          end: {
            line: 32,
            column: 1
          }
        },
        line: 30
      },
      "3": {
        name: "isTokenInfo",
        decl: {
          start: {
            line: 33,
            column: 9
          },
          end: {
            line: 33,
            column: 20
          }
        },
        loc: {
          start: {
            line: 33,
            column: 26
          },
          end: {
            line: 35,
            column: 1
          }
        },
        line: 33
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 25,
            column: 3
          },
          end: {
            line: 25,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 25,
            column: 3
          },
          end: {
            line: 25,
            column: 16
          }
        }, {
          start: {
            line: 25,
            column: 21
          },
          end: {
            line: 25,
            column: 63
          }
        }],
        line: 25
      },
      "1": {
        loc: {
          start: {
            line: 28,
            column: 11
          },
          end: {
            line: 28,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 11
          },
          end: {
            line: 28,
            column: 14
          }
        }, {
          start: {
            line: 28,
            column: 18
          },
          end: {
            line: 28,
            column: 41
          }
        }, {
          start: {
            line: 28,
            column: 45
          },
          end: {
            line: 28,
            column: 72
          }
        }],
        line: 28
      },
      "2": {
        loc: {
          start: {
            line: 31,
            column: 11
          },
          end: {
            line: 31,
            column: 105
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 31,
            column: 11
          },
          end: {
            line: 31,
            column: 33
          }
        }, {
          start: {
            line: 31,
            column: 37
          },
          end: {
            line: 31,
            column: 52
          }
        }, {
          start: {
            line: 31,
            column: 56
          },
          end: {
            line: 31,
            column: 105
          }
        }],
        line: 31
      },
      "3": {
        loc: {
          start: {
            line: 34,
            column: 11
          },
          end: {
            line: 34,
            column: 110
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 34,
            column: 11
          },
          end: {
            line: 34,
            column: 14
          }
        }, {
          start: {
            line: 34,
            column: 18
          },
          end: {
            line: 34,
            column: 41
          }
        }, {
          start: {
            line: 34,
            column: 45
          },
          end: {
            line: 34,
            column: 77
          }
        }, {
          start: {
            line: 34,
            column: 81
          },
          end: {
            line: 34,
            column: 110
          }
        }],
        line: 34
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0, 0],
      "2": [0, 0, 0],
      "3": [0, 0, 0, 0]
    },
    inputSourceMap: {
      file: "/Users/dikshantvashistha/PrepBettr/lib/shared/auth/types.ts",
      mappings: ";AAAA;;;;GAIG;;;AA0KH,kDAEC;AAED,kCAEC;AAED,kCAEC;AA5ID,0BAA0B;AAE1B,IAAY,aAWX;AAXD,WAAY,aAAa;IACvB,gDAA+B,CAAA;IAC/B,gDAA+B,CAAA;IAC/B,gDAA+B,CAAA;IAC/B,oDAAmC,CAAA;IACnC,sEAAqD,CAAA;IACrD,4DAA2C,CAAA;IAC3C,kDAAiC,CAAA;IACjC,4CAA2B,CAAA;IAC3B,gDAA+B,CAAA;IAC/B,gDAA+B,CAAA;AACjC,CAAC,EAXW,aAAa,6BAAb,aAAa,QAWxB;AAmHD,0BAA0B;AAE1B,SAAgB,mBAAmB,CAAC,GAAQ;IAC1C,OAAO,GAAG,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAI,OAAO,GAAG,CAAC,GAAG,KAAK,QAAQ,CAAC;AACvE,CAAC;AAED,SAAgB,WAAW,CAAC,KAAU;IACpC,OAAO,KAAK,YAAY,KAAK,IAAI,MAAM,IAAI,KAAK,IAAI,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAqB,CAAC,CAAC;AACzH,CAAC;AAED,SAAgB,WAAW,CAAC,GAAQ;IAClC,OAAO,GAAG,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAI,OAAO,GAAG,CAAC,QAAQ,KAAK,QAAQ,IAAI,OAAO,GAAG,CAAC,KAAK,KAAK,QAAQ,CAAC;AAC7G,CAAC",
      names: [],
      sources: ["/Users/dikshantvashistha/PrepBettr/lib/shared/auth/types.ts"],
      sourcesContent: ["/**\n * Unified Authentication Types\n * \n * Common type definitions for all authentication implementations\n */\n\n// ===== USER TYPES =====\n\nexport interface AuthenticatedUser {\n  uid: string;\n  email?: string;\n  name?: string;\n  picture?: string;\n  email_verified: boolean;\n  firebase?: any;\n  custom_claims?: Record<string, any>;\n  provider?: 'firebase' | 'azure' | 'custom';\n}\n\nexport interface UserSession {\n  userId: string;\n  email?: string;\n  verified: boolean;\n  expiresAt?: Date;\n  refreshToken?: string;\n}\n\n// ===== AUTHENTICATION RESULT TYPES =====\n\nexport interface AuthResult {\n  success: boolean;\n  user: AuthenticatedUser | null;\n  error?: string;\n  errorCode?: AuthErrorCode;\n}\n\nexport interface TokenVerificationResult {\n  valid: boolean;\n  user?: AuthenticatedUser;\n  error?: string;\n  errorCode?: AuthErrorCode;\n  expiresAt?: Date;\n}\n\n// ===== ERROR TYPES =====\n\nexport enum AuthErrorCode {\n  MISSING_TOKEN = 'MISSING_TOKEN',\n  INVALID_TOKEN = 'INVALID_TOKEN',\n  EXPIRED_TOKEN = 'EXPIRED_TOKEN',\n  MALFORMED_TOKEN = 'MALFORMED_TOKEN',\n  INSUFFICIENT_PERMISSIONS = 'INSUFFICIENT_PERMISSIONS',\n  SERVICE_UNAVAILABLE = 'SERVICE_UNAVAILABLE',\n  FIREBASE_ERROR = 'FIREBASE_ERROR',\n  AZURE_ERROR = 'AZURE_ERROR',\n  NETWORK_ERROR = 'NETWORK_ERROR',\n  UNKNOWN_ERROR = 'UNKNOWN_ERROR'\n}\n\nexport interface AuthError extends Error {\n  code: AuthErrorCode;\n  details?: Record<string, any>;\n  statusCode?: number;\n}\n\n// ===== CONFIGURATION TYPES =====\n\nexport interface AuthConfig {\n  firebase?: {\n    projectId: string;\n    clientEmail: string;\n    privateKey: string;\n  };\n  azure?: {\n    tenantId: string;\n    clientId: string;\n    clientSecret: string;\n  };\n  security?: {\n    enableTokenRefresh: boolean;\n    tokenExpiryMinutes: number;\n    maxRetryAttempts: number;\n    retryDelayMs: number;\n  };\n  logging?: {\n    enabled: boolean;\n    level: 'debug' | 'info' | 'warn' | 'error';\n    includeTokenDetails: boolean;\n  };\n}\n\n// ===== MIDDLEWARE TYPES =====\n\nexport interface AuthMiddlewareOptions {\n  requiredRoles?: string[];\n  skipAuth?: boolean;\n  allowAnonymous?: boolean;\n  customValidator?: (user: AuthenticatedUser) => Promise<boolean>;\n}\n\nexport interface AuthMiddlewareResult<TResponse = any> {\n  success: boolean;\n  user: AuthenticatedUser | null;\n  response?: TResponse;\n  error?: string;\n  errorCode?: AuthErrorCode;\n}\n\n// ===== PLATFORM-SPECIFIC TYPES =====\n\n// Next.js specific\nexport interface NextAuthRequest {\n  headers: {\n    get(name: string): string | null;\n  };\n}\n\nexport interface NextAuthResponse {\n  json(data: any, init?: { status?: number }): any;\n}\n\n// Azure Functions specific\nexport interface AzureContext {\n  log: {\n    info: (message: string) => void;\n    warn: (message: string) => void;\n    error: (message: string) => void;\n  };\n  res?: any;\n}\n\nexport interface AzureRequest {\n  headers: Record<string, string>;\n  body?: any;\n  query?: Record<string, string>;\n}\n\n// Express.js specific\nexport interface ExpressRequest {\n  headers: Record<string, string>;\n  user?: AuthenticatedUser;\n}\n\nexport interface ExpressResponse {\n  status(code: number): ExpressResponse;\n  json(data: any): ExpressResponse;\n}\n\nexport interface ExpressNext {\n  (error?: any): void;\n}\n\n// ===== UTILITY TYPES =====\n\nexport type TokenProvider = 'firebase' | 'azure' | 'jwt' | 'custom';\n\nexport interface TokenInfo {\n  provider: TokenProvider;\n  value: string;\n  expiresAt?: Date;\n  userId?: string;\n  claims?: Record<string, any>;\n}\n\nexport interface AuthMetrics {\n  totalRequests: number;\n  successfulAuth: number;\n  failedAuth: number;\n  averageVerificationTime: number;\n  errorsByCode: Partial<Record<AuthErrorCode, number>>;\n}\n\n// ===== TYPE GUARDS =====\n\nexport function isAuthenticatedUser(obj: any): obj is AuthenticatedUser {\n  return obj && typeof obj === 'object' && typeof obj.uid === 'string';\n}\n\nexport function isAuthError(error: any): error is AuthError {\n  return error instanceof Error && 'code' in error && Object.values(AuthErrorCode).includes(error.code as AuthErrorCode);\n}\n\nexport function isTokenInfo(obj: any): obj is TokenInfo {\n  return obj && typeof obj === 'object' && typeof obj.provider === 'string' && typeof obj.value === 'string';\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "2d3944942c27eb7c82a6f01b9713a182364d7b12"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2coqh8j2dq = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2coqh8j2dq();
cov_2coqh8j2dq().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2coqh8j2dq().s[1]++;
exports.AuthErrorCode = void 0;
/* istanbul ignore next */
cov_2coqh8j2dq().s[2]++;
exports.isAuthenticatedUser = isAuthenticatedUser;
/* istanbul ignore next */
cov_2coqh8j2dq().s[3]++;
exports.isAuthError = isAuthError;
/* istanbul ignore next */
cov_2coqh8j2dq().s[4]++;
exports.isTokenInfo = isTokenInfo;
// ===== ERROR TYPES =====
var AuthErrorCode;
/* istanbul ignore next */
cov_2coqh8j2dq().s[5]++;
(function (AuthErrorCode) {
  /* istanbul ignore next */
  cov_2coqh8j2dq().f[0]++;
  cov_2coqh8j2dq().s[6]++;
  AuthErrorCode["MISSING_TOKEN"] = "MISSING_TOKEN";
  /* istanbul ignore next */
  cov_2coqh8j2dq().s[7]++;
  AuthErrorCode["INVALID_TOKEN"] = "INVALID_TOKEN";
  /* istanbul ignore next */
  cov_2coqh8j2dq().s[8]++;
  AuthErrorCode["EXPIRED_TOKEN"] = "EXPIRED_TOKEN";
  /* istanbul ignore next */
  cov_2coqh8j2dq().s[9]++;
  AuthErrorCode["MALFORMED_TOKEN"] = "MALFORMED_TOKEN";
  /* istanbul ignore next */
  cov_2coqh8j2dq().s[10]++;
  AuthErrorCode["INSUFFICIENT_PERMISSIONS"] = "INSUFFICIENT_PERMISSIONS";
  /* istanbul ignore next */
  cov_2coqh8j2dq().s[11]++;
  AuthErrorCode["SERVICE_UNAVAILABLE"] = "SERVICE_UNAVAILABLE";
  /* istanbul ignore next */
  cov_2coqh8j2dq().s[12]++;
  AuthErrorCode["FIREBASE_ERROR"] = "FIREBASE_ERROR";
  /* istanbul ignore next */
  cov_2coqh8j2dq().s[13]++;
  AuthErrorCode["AZURE_ERROR"] = "AZURE_ERROR";
  /* istanbul ignore next */
  cov_2coqh8j2dq().s[14]++;
  AuthErrorCode["NETWORK_ERROR"] = "NETWORK_ERROR";
  /* istanbul ignore next */
  cov_2coqh8j2dq().s[15]++;
  AuthErrorCode["UNKNOWN_ERROR"] = "UNKNOWN_ERROR";
})(
/* istanbul ignore next */
(cov_2coqh8j2dq().b[0][0]++, AuthErrorCode) ||
/* istanbul ignore next */
(cov_2coqh8j2dq().b[0][1]++, exports.AuthErrorCode = AuthErrorCode = {}));
// ===== TYPE GUARDS =====
function isAuthenticatedUser(obj) {
  /* istanbul ignore next */
  cov_2coqh8j2dq().f[1]++;
  cov_2coqh8j2dq().s[16]++;
  return /* istanbul ignore next */(cov_2coqh8j2dq().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_2coqh8j2dq().b[1][1]++, typeof obj === 'object') &&
  /* istanbul ignore next */
  (cov_2coqh8j2dq().b[1][2]++, typeof obj.uid === 'string');
}
function isAuthError(error) {
  /* istanbul ignore next */
  cov_2coqh8j2dq().f[2]++;
  cov_2coqh8j2dq().s[17]++;
  return /* istanbul ignore next */(cov_2coqh8j2dq().b[2][0]++, error instanceof Error) &&
  /* istanbul ignore next */
  (cov_2coqh8j2dq().b[2][1]++, 'code' in error) &&
  /* istanbul ignore next */
  (cov_2coqh8j2dq().b[2][2]++, Object.values(AuthErrorCode).includes(error.code));
}
function isTokenInfo(obj) {
  /* istanbul ignore next */
  cov_2coqh8j2dq().f[3]++;
  cov_2coqh8j2dq().s[18]++;
  return /* istanbul ignore next */(cov_2coqh8j2dq().b[3][0]++, obj) &&
  /* istanbul ignore next */
  (cov_2coqh8j2dq().b[3][1]++, typeof obj === 'object') &&
  /* istanbul ignore next */
  (cov_2coqh8j2dq().b[3][2]++, typeof obj.provider === 'string') &&
  /* istanbul ignore next */
  (cov_2coqh8j2dq().b[3][3]++, typeof obj.value === 'string');
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,