{"version":3,"names":["cov_2o2d171xcq","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","azure_openai_service_1","require","Object","defineProperty","exports","enumerable","get","azureOpenAIService","azure_openai_enhanced_1","enhancedAzureOpenAIService","azure_form_recognizer_1","azureFormRecognizer","document_client_1","foundryDocumentIntelligenceService","unified_config_service_1","errors_1","retry_with_backoff_1","AzureAIService","constructor","initialized","availableServices","openai","enhanced","formRecognizer","foundry","initialize","console","log","startTime","Date","now","openaiReady","enhancedReady","formRecognizerReady","Promise","allSettled","status","value","foundryEnabled","unifiedConfigService","error","warn","initTime","duration","services","logServerError","service","action","getStatus","generateCompletion","prompt","options","result","retryWithExponentialBackoff","generateContent","Error","userId","maxRetries","baseDelay","success","data","provider","processingTime","message","generateQuestions","resumeData","questions","filteredQuestions","maxQuestions","slice","defaultQuestions","extractResumeData","fileBuffer","mimeType","forceFoundryProcessing","extraction","analyzeResume","includeAtsAnalysis","modelType","confidence","_a","metadata","overallConfidence","tailorResume","resumeText","jobDescription","tailoredContent","generateCoverLetter","coverLetter","calculateRelevancy","score","Math","max","min","azureAI"],"sources":["/Users/dikshantvashistha/PrepBettr/lib/ai/azure-ai.ts"],"sourcesContent":["/**\n * Unified Azure AI Facade\n * \n * Central entry point for all Azure AI services including OpenAI, Cognitive Services,\n * and Azure AI Foundry. Provides simplified access to Azure's AI capabilities\n * with intelligent routing and fallback mechanisms.\n */\n\nimport { azureOpenAIService } from '@/lib/services/azure-openai-service';\nimport { enhancedAzureOpenAIService } from '@/lib/services/azure-openai-enhanced';\nimport { azureFormRecognizer } from '@/lib/services/azure-form-recognizer';\nimport { foundryDocumentIntelligenceService } from '@/lib/azure-ai-foundry/documents/document-client';\nimport { migrationOpenAIClient } from '@/lib/azure-ai-foundry/clients/migration-wrapper';\nimport { unifiedConfigService } from '@/lib/services/unified-config-service';\nimport { logServerError } from '@/lib/errors';\nimport { retryWithExponentialBackoff } from '@/lib/utils/retry-with-backoff';\n\nexport interface AzureAIResponse<T = any> {\n  success: boolean;\n  data?: T;\n  error?: string;\n  provider: 'azure-openai' | 'azure-foundry' | 'azure-form-recognizer';\n  processingTime?: number;\n  confidence?: number;\n}\n\nexport interface ResumeExtractionOptions {\n  includeAtsAnalysis?: boolean;\n  includeJobMatching?: boolean;\n  jobDescription?: string;\n  forceFoundryProcessing?: boolean;\n}\n\nexport interface QuestionGenerationOptions {\n  maxQuestions?: number;\n  difficulty?: 'easy' | 'medium' | 'hard';\n  focusAreas?: string[];\n  interviewType?: 'behavioral' | 'technical' | 'mixed';\n}\n\n/**\n * Azure AI Unified Service\n * Provides centralized access to all Azure AI capabilities\n */\nclass AzureAIService {\n  private initialized = false;\n  private availableServices = {\n    openai: false,\n    enhanced: false,\n    formRecognizer: false,\n    foundry: false\n  };\n\n  /**\n   * Initialize all Azure AI services\n   */\n  async initialize(): Promise<void> {\n    if (this.initialized) {\n      return;\n    }\n\n    console.log('üöÄ Initializing Azure AI unified service...');\n    const startTime = Date.now();\n\n    try {\n      // Initialize Azure OpenAI services\n      const [openaiReady, enhancedReady, formRecognizerReady] = await Promise.allSettled([\n        azureOpenAIService.initialize(),\n        enhancedAzureOpenAIService.initialize(),\n        azureFormRecognizer.initialize()\n      ]);\n\n      this.availableServices.openai = openaiReady.status === 'fulfilled' && openaiReady.value;\n      this.availableServices.enhanced = enhancedReady.status === 'fulfilled' && enhancedReady.value;\n      this.availableServices.formRecognizer = formRecognizerReady.status === 'fulfilled' && formRecognizerReady.value;\n\n      // Initialize Azure AI Foundry if feature flag is enabled\n      try {\n        const foundryEnabled = await unifiedConfigService.get('features.foundryResumeProcessing', false);\n        if (foundryEnabled) {\n          this.availableServices.foundry = await foundryDocumentIntelligenceService.initialize();\n        }\n      } catch (error) {\n        console.warn('‚ö†Ô∏è Foundry initialization skipped:', error);\n      }\n\n      this.initialized = true;\n      const initTime = Date.now() - startTime;\n      \n      console.log('‚úÖ Azure AI unified service initialized', {\n        duration: `${initTime}ms`,\n        services: this.availableServices\n      });\n    } catch (error) {\n      console.error('‚ùå Azure AI service initialization failed:', error);\n      logServerError(error as Error, { \n        service: 'azure-ai-unified', \n        action: 'initialize' \n      });\n      throw error;\n    }\n  }\n\n  /**\n   * Get service status information\n   */\n  getStatus() {\n    return {\n      initialized: this.initialized,\n      services: this.availableServices\n    };\n  }\n\n  /**\n   * Generate text completions using Azure OpenAI\n   */\n  async generateCompletion(\n    prompt: string, \n    options: {\n      temperature?: number;\n      maxTokens?: number;\n      model?: string;\n      userId?: string;\n    } = {}\n  ): Promise<AzureAIResponse<string>> {\n    await this.initialize();\n\n    const startTime = Date.now();\n    \n    try {\n      // Use enhanced service if available, fallback to standard\n      const service = this.availableServices.enhanced ? enhancedAzureOpenAIService : azureOpenAIService;\n      \n      const result = await retryWithExponentialBackoff(\n        async () => {\n          if (this.availableServices.enhanced) {\n            return await enhancedAzureOpenAIService.generateContent(prompt, 'general');\n          } else {\n            // Fall back to basic service, but it doesn't have generateCompletion\n            throw new Error('Basic Azure OpenAI service does not support completion generation');\n          }\n        },\n        'azure_ai_completion',\n        options.userId,\n        { maxRetries: 3, baseDelay: 1000 }\n      );\n\n      return {\n        success: true,\n        data: result,\n        provider: this.availableServices.enhanced ? 'azure-foundry' : 'azure-openai',\n        processingTime: Date.now() - startTime\n      };\n    } catch (error) {\n      console.error('‚ùå Azure AI completion failed:', error);\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Completion failed',\n        provider: this.availableServices.enhanced ? 'azure-foundry' : 'azure-openai',\n        processingTime: Date.now() - startTime\n      };\n    }\n  }\n\n  /**\n   * Generate interview questions from resume data\n   */\n  async generateQuestions(\n    resumeData: any,\n    options: QuestionGenerationOptions = {}\n  ): Promise<AzureAIResponse<string[]>> {\n    await this.initialize();\n\n    const startTime = Date.now();\n    \n    try {\n      // Use enhanced service if available\n      const service = this.availableServices.enhanced ? enhancedAzureOpenAIService : azureOpenAIService;\n      \n      const questions = await retryWithExponentialBackoff(\n        async () => {\n          if (this.availableServices.enhanced) {\n            return await enhancedAzureOpenAIService.generateQuestions(resumeData);\n          } else {\n            return await azureOpenAIService.generateQuestions(resumeData);\n          }\n        },\n        'azure_ai_questions',\n        undefined,\n        { maxRetries: 2, baseDelay: 1000 }\n      );\n\n      // Filter to max questions if specified\n      const filteredQuestions = options.maxQuestions \n        ? questions.slice(0, options.maxQuestions)\n        : questions;\n\n      return {\n        success: true,\n        data: filteredQuestions,\n        provider: this.availableServices.enhanced ? 'azure-foundry' : 'azure-openai',\n        processingTime: Date.now() - startTime\n      };\n    } catch (error) {\n      console.error('‚ùå Azure AI question generation failed:', error);\n      \n      // Return default questions as fallback\n      const defaultQuestions = [\n        \"Tell me about yourself and your professional background.\",\n        \"What interests you most about this position?\",\n        \"Describe a challenging project you've worked on.\",\n        \"How do you stay updated with industry trends?\",\n        \"Where do you see yourself in 5 years?\",\n        \"What are your greatest strengths?\",\n        \"Describe a time when you had to work under pressure.\",\n        \"How do you handle feedback and criticism?\"\n      ];\n\n      return {\n        success: false,\n        data: defaultQuestions.slice(0, options.maxQuestions || 8),\n        error: error instanceof Error ? error.message : 'Question generation failed',\n        provider: this.availableServices.enhanced ? 'azure-foundry' : 'azure-openai',\n        processingTime: Date.now() - startTime\n      };\n    }\n  }\n\n  /**\n   * Extract data from resume documents\n   */\n  async extractResumeData(\n    fileBuffer: Buffer,\n    mimeType: string,\n    options: ResumeExtractionOptions = {}\n  ): Promise<AzureAIResponse<any>> {\n    await this.initialize();\n\n    const startTime = Date.now();\n\n    try {\n      // Use Azure AI Foundry if available and enabled\n      if (this.availableServices.foundry && (options.forceFoundryProcessing || \n          await unifiedConfigService.get('features.foundryResumeProcessing', false))) {\n        \n        const extraction = await foundryDocumentIntelligenceService.analyzeResume(\n          fileBuffer,\n          mimeType,\n          {\n            includeAtsAnalysis: options.includeAtsAnalysis,\n            modelType: 'resume-analysis'\n          }\n        );\n\n        return {\n          success: true,\n          data: extraction,\n          provider: 'azure-foundry',\n          processingTime: Date.now() - startTime,\n          confidence: extraction.metadata?.overallConfidence\n        };\n      }\n\n      // Fallback to Azure Form Recognizer\n      if (this.availableServices.formRecognizer) {\n        const extraction = await azureFormRecognizer.extractResumeData(fileBuffer, mimeType);\n\n        return {\n          success: true,\n          data: extraction,\n          provider: 'azure-form-recognizer',\n          processingTime: Date.now() - startTime,\n          confidence: 0.85 // Default confidence for Form Recognizer\n        };\n      }\n\n      throw new Error('No Azure document extraction services available');\n    } catch (error) {\n      console.error('‚ùå Azure resume extraction failed:', error);\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Extraction failed',\n        provider: this.availableServices.foundry ? 'azure-foundry' : 'azure-form-recognizer',\n        processingTime: Date.now() - startTime\n      };\n    }\n  }\n\n  /**\n   * Generate tailored resume content\n   */\n  async tailorResume(\n    resumeText: string,\n    jobDescription: string,\n    options: { userId?: string } = {}\n  ): Promise<AzureAIResponse<string>> {\n    await this.initialize();\n\n    const startTime = Date.now();\n\n    try {\n      const service = this.availableServices.enhanced ? enhancedAzureOpenAIService : azureOpenAIService;\n      \n      const tailoredContent = await retryWithExponentialBackoff(\n        async () => {\n          if (this.availableServices.enhanced) {\n            return await enhancedAzureOpenAIService.tailorResume(resumeText, jobDescription);\n          } else {\n            return await azureOpenAIService.tailorResume(resumeText, jobDescription);\n          }\n        },\n        'azure_ai_tailor',\n        options.userId,\n        { maxRetries: 3, baseDelay: 2000 }\n      );\n\n      return {\n        success: true,\n        data: tailoredContent,\n        provider: this.availableServices.enhanced ? 'azure-foundry' : 'azure-openai',\n        processingTime: Date.now() - startTime\n      };\n    } catch (error) {\n      console.error('‚ùå Azure AI resume tailoring failed:', error);\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Resume tailoring failed',\n        provider: this.availableServices.enhanced ? 'azure-foundry' : 'azure-openai',\n        processingTime: Date.now() - startTime\n      };\n    }\n  }\n\n  /**\n   * Generate cover letters\n   */\n  async generateCoverLetter(\n    resumeText: string,\n    jobDescription: string,\n    options: { userId?: string } = {}\n  ): Promise<AzureAIResponse<string>> {\n    await this.initialize();\n\n    const startTime = Date.now();\n\n    try {\n      const service = this.availableServices.enhanced ? enhancedAzureOpenAIService : azureOpenAIService;\n      \n      const coverLetter = await retryWithExponentialBackoff(\n        async () => {\n          if (this.availableServices.enhanced) {\n            return await enhancedAzureOpenAIService.generateCoverLetter(resumeText, jobDescription);\n          } else {\n            throw new Error('Cover letter generation requires enhanced Azure OpenAI service');\n          }\n        },\n        'azure_ai_cover_letter',\n        options.userId,\n        { maxRetries: 3, baseDelay: 2000 }\n      );\n\n      return {\n        success: true,\n        data: coverLetter,\n        provider: this.availableServices.enhanced ? 'azure-foundry' : 'azure-openai',\n        processingTime: Date.now() - startTime\n      };\n    } catch (error) {\n      console.error('‚ùå Azure AI cover letter generation failed:', error);\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Cover letter generation failed',\n        provider: this.availableServices.enhanced ? 'azure-foundry' : 'azure-openai',\n        processingTime: Date.now() - startTime\n      };\n    }\n  }\n\n  /**\n   * Calculate relevancy score between resume and job description\n   */\n  async calculateRelevancy(\n    resumeText: string,\n    jobDescription: string\n  ): Promise<AzureAIResponse<number>> {\n    await this.initialize();\n\n    const startTime = Date.now();\n\n    try {\n      const service = this.availableServices.enhanced ? enhancedAzureOpenAIService : azureOpenAIService;\n      \n      const score = await retryWithExponentialBackoff(\n        async () => {\n          if (this.availableServices.enhanced) {\n            return await enhancedAzureOpenAIService.calculateRelevancy(resumeText, jobDescription);\n          } else {\n            throw new Error('Relevancy calculation requires enhanced Azure OpenAI service');\n          }\n        },\n        'azure_ai_relevancy',\n        undefined,\n        { maxRetries: 2, baseDelay: 1000 }\n      );\n\n      return {\n        success: true,\n        data: Math.max(0, Math.min(100, score)), // Ensure 0-100 range\n        provider: this.availableServices.enhanced ? 'azure-foundry' : 'azure-openai',\n        processingTime: Date.now() - startTime,\n        confidence: 0.9\n      };\n    } catch (error) {\n      console.error('‚ùå Azure AI relevancy calculation failed:', error);\n      return {\n        success: false,\n        data: 50, // Default middle score\n        error: error instanceof Error ? error.message : 'Relevancy calculation failed',\n        provider: this.availableServices.enhanced ? 'azure-foundry' : 'azure-openai',\n        processingTime: Date.now() - startTime\n      };\n    }\n  }\n}\n\n// Export singleton instance\nexport const azureAI = new AzureAIService();\n\n// For backward compatibility, export individual service references\nexport {\n  azureOpenAIService,\n  enhancedAzureOpenAIService,\n  azureFormRecognizer,\n  foundryDocumentIntelligenceService\n};\n\n// Export types with unique names to avoid conflicts\nexport type UnifiedAzureAIResponse<T = any> = AzureAIResponse<T>;\nexport type UnifiedResumeExtractionOptions = ResumeExtractionOptions;\nexport type UnifiedQuestionGenerationOptions = QuestionGenerationOptions;\n"],"mappings":"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","ignoreList":[]}