16cdc8e9773e37c4f5b16970e30f0c55
"use strict";

/* istanbul ignore next */
function cov_12fo6y2j5j() {
  var path = "/Users/dikshantvashistha/PrepBettr/lib/services/feature-flags.ts";
  var hash = "567fd6068ae05e8fc7200298999992ba766ed94e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dikshantvashistha/PrepBettr/lib/services/feature-flags.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 37
        }
      },
      "2": {
        start: {
          line: 4,
          column: 33
        },
        end: {
          line: 4,
          column: 68
        }
      },
      "3": {
        start: {
          line: 5,
          column: 25
        },
        end: {
          line: 5,
          column: 52
        }
      },
      "4": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 10,
          column: 9
        }
      },
      "5": {
        start: {
          line: 9,
          column: 12
        },
        end: {
          line: 9,
          column: 69
        }
      },
      "6": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 44
        }
      },
      "7": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 36,
          column: 9
        }
      },
      "8": {
        start: {
          line: 19,
          column: 30
        },
        end: {
          line: 19,
          column: 52
        }
      },
      "9": {
        start: {
          line: 20,
          column: 32
        },
        end: {
          line: 20,
          column: 105
        }
      },
      "10": {
        start: {
          line: 21,
          column: 12
        },
        end: {
          line: 24,
          column: 13
        }
      },
      "11": {
        start: {
          line: 23,
          column: 16
        },
        end: {
          line: 23,
          column: 29
        }
      },
      "12": {
        start: {
          line: 26,
          column: 34
        },
        end: {
          line: 26,
          column: 97
        }
      },
      "13": {
        start: {
          line: 27,
          column: 12
        },
        end: {
          line: 30,
          column: 13
        }
      },
      "14": {
        start: {
          line: 29,
          column: 16
        },
        end: {
          line: 29,
          column: 35
        }
      },
      "15": {
        start: {
          line: 31,
          column: 12
        },
        end: {
          line: 31,
          column: 95
        }
      },
      "16": {
        start: {
          line: 34,
          column: 12
        },
        end: {
          line: 34,
          column: 76
        }
      },
      "17": {
        start: {
          line: 35,
          column: 12
        },
        end: {
          line: 35,
          column: 25
        }
      },
      "18": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 93,
          column: 9
        }
      },
      "19": {
        start: {
          line: 44,
          column: 31
        },
        end: {
          line: 44,
          column: 102
        }
      },
      "20": {
        start: {
          line: 46,
          column: 32
        },
        end: {
          line: 53,
          column: 13
        }
      },
      "21": {
        start: {
          line: 55,
          column: 34
        },
        end: {
          line: 55,
          column: 101
        }
      },
      "22": {
        start: {
          line: 57,
          column: 34
        },
        end: {
          line: 72,
          column: 13
        }
      },
      "23": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 73,
          column: 33
        }
      },
      "24": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 76,
          column: 69
        }
      },
      "25": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 92,
          column: 14
        }
      },
      "26": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 99,
          column: 48
        }
      },
      "27": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 105,
          column: 53
        }
      },
      "28": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 108,
          column: 56
        }
      },
      "29": {
        start: {
          line: 114,
          column: 30
        },
        end: {
          line: 114,
          column: 101
        }
      },
      "30": {
        start: {
          line: 115,
          column: 30
        },
        end: {
          line: 115,
          column: 97
        }
      },
      "31": {
        start: {
          line: 116,
          column: 27
        },
        end: {
          line: 116,
          column: 58
        }
      },
      "32": {
        start: {
          line: 117,
          column: 23
        },
        end: {
          line: 117,
          column: 79
        }
      },
      "33": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 131,
          column: 10
        }
      },
      "34": {
        start: {
          line: 137,
          column: 8
        },
        end: {
          line: 137,
          column: 70
        }
      },
      "35": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 138,
          column: 41
        }
      },
      "36": {
        start: {
          line: 142,
          column: 0
        },
        end: {
          line: 142,
          column: 64
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        },
        loc: {
          start: {
            line: 7,
            column: 25
          },
          end: {
            line: 12,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 35
          },
          end: {
            line: 37,
            column: 5
          }
        },
        line: 16
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 41,
            column: 5
          }
        },
        loc: {
          start: {
            line: 41,
            column: 31
          },
          end: {
            line: 94,
            column: 5
          }
        },
        line: 41
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 98,
            column: 4
          },
          end: {
            line: 98,
            column: 5
          }
        },
        loc: {
          start: {
            line: 98,
            column: 40
          },
          end: {
            line: 100,
            column: 5
          }
        },
        line: 98
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 104,
            column: 4
          },
          end: {
            line: 104,
            column: 5
          }
        },
        loc: {
          start: {
            line: 104,
            column: 36
          },
          end: {
            line: 106,
            column: 5
          }
        },
        line: 104
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 107,
            column: 4
          },
          end: {
            line: 107,
            column: 5
          }
        },
        loc: {
          start: {
            line: 107,
            column: 39
          },
          end: {
            line: 109,
            column: 5
          }
        },
        line: 107
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 113,
            column: 4
          },
          end: {
            line: 113,
            column: 5
          }
        },
        loc: {
          start: {
            line: 113,
            column: 25
          },
          end: {
            line: 132,
            column: 5
          }
        },
        line: 113
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 136,
            column: 4
          },
          end: {
            line: 136,
            column: 5
          }
        },
        loc: {
          start: {
            line: 136,
            column: 32
          },
          end: {
            line: 139,
            column: 5
          }
        },
        line: 136
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 8,
            column: 8
          },
          end: {
            line: 10,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 8,
            column: 8
          },
          end: {
            line: 10,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 8
      },
      "1": {
        loc: {
          start: {
            line: 21,
            column: 12
          },
          end: {
            line: 24,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 21,
            column: 12
          },
          end: {
            line: 24,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 21
      },
      "2": {
        loc: {
          start: {
            line: 27,
            column: 12
          },
          end: {
            line: 30,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 27,
            column: 12
          },
          end: {
            line: 30,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 27
      },
      "3": {
        loc: {
          start: {
            line: 47,
            column: 32
          },
          end: {
            line: 47,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 47,
            column: 32
          },
          end: {
            line: 47,
            column: 69
          }
        }, {
          start: {
            line: 47,
            column: 73
          },
          end: {
            line: 47,
            column: 78
          }
        }],
        line: 47
      },
      "4": {
        loc: {
          start: {
            line: 48,
            column: 35
          },
          end: {
            line: 48,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 48,
            column: 35
          },
          end: {
            line: 48,
            column: 75
          }
        }, {
          start: {
            line: 48,
            column: 79
          },
          end: {
            line: 48,
            column: 84
          }
        }],
        line: 48
      },
      "5": {
        loc: {
          start: {
            line: 49,
            column: 32
          },
          end: {
            line: 49,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 49,
            column: 32
          },
          end: {
            line: 49,
            column: 69
          }
        }, {
          start: {
            line: 49,
            column: 73
          },
          end: {
            line: 49,
            column: 78
          }
        }],
        line: 49
      },
      "6": {
        loc: {
          start: {
            line: 50,
            column: 34
          },
          end: {
            line: 50,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 50,
            column: 34
          },
          end: {
            line: 50,
            column: 73
          }
        }, {
          start: {
            line: 50,
            column: 77
          },
          end: {
            line: 50,
            column: 82
          }
        }],
        line: 50
      },
      "7": {
        loc: {
          start: {
            line: 51,
            column: 33
          },
          end: {
            line: 51,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 51,
            column: 33
          },
          end: {
            line: 51,
            column: 71
          }
        }, {
          start: {
            line: 51,
            column: 75
          },
          end: {
            line: 51,
            column: 80
          }
        }],
        line: 51
      },
      "8": {
        loc: {
          start: {
            line: 52,
            column: 23
          },
          end: {
            line: 52,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 52,
            column: 23
          },
          end: {
            line: 52,
            column: 51
          }
        }, {
          start: {
            line: 52,
            column: 55
          },
          end: {
            line: 52,
            column: 60
          }
        }],
        line: 52
      },
      "9": {
        loc: {
          start: {
            line: 58,
            column: 32
          },
          end: {
            line: 58,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 58,
            column: 32
          },
          end: {
            line: 58,
            column: 58
          }
        }, {
          start: {
            line: 58,
            column: 62
          },
          end: {
            line: 58,
            column: 90
          }
        }],
        line: 58
      },
      "10": {
        loc: {
          start: {
            line: 59,
            column: 35
          },
          end: {
            line: 59,
            column: 99
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 59,
            column: 35
          },
          end: {
            line: 59,
            column: 64
          }
        }, {
          start: {
            line: 59,
            column: 68
          },
          end: {
            line: 59,
            column: 99
          }
        }],
        line: 59
      },
      "11": {
        loc: {
          start: {
            line: 60,
            column: 32
          },
          end: {
            line: 60,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 60,
            column: 32
          },
          end: {
            line: 60,
            column: 58
          }
        }, {
          start: {
            line: 60,
            column: 62
          },
          end: {
            line: 60,
            column: 90
          }
        }],
        line: 60
      },
      "12": {
        loc: {
          start: {
            line: 61,
            column: 34
          },
          end: {
            line: 61,
            column: 96
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 61,
            column: 34
          },
          end: {
            line: 61,
            column: 62
          }
        }, {
          start: {
            line: 61,
            column: 66
          },
          end: {
            line: 61,
            column: 96
          }
        }],
        line: 61
      },
      "13": {
        loc: {
          start: {
            line: 62,
            column: 33
          },
          end: {
            line: 62,
            column: 93
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 62,
            column: 33
          },
          end: {
            line: 62,
            column: 60
          }
        }, {
          start: {
            line: 62,
            column: 64
          },
          end: {
            line: 62,
            column: 93
          }
        }],
        line: 62
      },
      "14": {
        loc: {
          start: {
            line: 63,
            column: 23
          },
          end: {
            line: 63,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 63,
            column: 23
          },
          end: {
            line: 63,
            column: 40
          }
        }, {
          start: {
            line: 63,
            column: 44
          },
          end: {
            line: 63,
            column: 63
          }
        }],
        line: 63
      },
      "15": {
        loc: {
          start: {
            line: 65,
            column: 36
          },
          end: {
            line: 65,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 65,
            column: 36
          },
          end: {
            line: 65,
            column: 64
          }
        }, {
          start: {
            line: 65,
            column: 68
          },
          end: {
            line: 65,
            column: 73
          }
        }],
        line: 65
      },
      "16": {
        loc: {
          start: {
            line: 66,
            column: 39
          },
          end: {
            line: 66,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 66,
            column: 39
          },
          end: {
            line: 66,
            column: 70
          }
        }, {
          start: {
            line: 66,
            column: 74
          },
          end: {
            line: 66,
            column: 79
          }
        }],
        line: 66
      },
      "17": {
        loc: {
          start: {
            line: 67,
            column: 36
          },
          end: {
            line: 67,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 67,
            column: 36
          },
          end: {
            line: 67,
            column: 64
          }
        }, {
          start: {
            line: 67,
            column: 68
          },
          end: {
            line: 67,
            column: 73
          }
        }],
        line: 67
      },
      "18": {
        loc: {
          start: {
            line: 68,
            column: 38
          },
          end: {
            line: 68,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 68,
            column: 38
          },
          end: {
            line: 68,
            column: 68
          }
        }, {
          start: {
            line: 68,
            column: 72
          },
          end: {
            line: 68,
            column: 77
          }
        }],
        line: 68
      },
      "19": {
        loc: {
          start: {
            line: 69,
            column: 37
          },
          end: {
            line: 69,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 69,
            column: 37
          },
          end: {
            line: 69,
            column: 66
          }
        }, {
          start: {
            line: 69,
            column: 70
          },
          end: {
            line: 69,
            column: 75
          }
        }],
        line: 69
      },
      "20": {
        loc: {
          start: {
            line: 70,
            column: 27
          },
          end: {
            line: 70,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 70,
            column: 27
          },
          end: {
            line: 70,
            column: 46
          }
        }, {
          start: {
            line: 70,
            column: 50
          },
          end: {
            line: 70,
            column: 55
          }
        }],
        line: 70
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/dikshantvashistha/PrepBettr/lib/services/feature-flags.ts",
      mappings: ";;;AAAA,qEAAgE;AAChE,qDAA8E;AAwB9E,MAAM,mBAAmB;IAGvB,MAAM,CAAC,WAAW;QAChB,IAAI,CAAC,mBAAmB,CAAC,QAAQ,EAAE,CAAC;YAClC,mBAAmB,CAAC,QAAQ,GAAG,IAAI,mBAAmB,EAAE,CAAC;QAC3D,CAAC;QACD,OAAO,mBAAmB,CAAC,QAAQ,CAAC;IACtC,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,cAAc,CAAC,QAA4B;QAC/C,IAAI,CAAC;YACH,+CAA+C;YAC/C,MAAM,SAAS,GAAG,YAAY,QAAQ,EAAE,CAAC;YACzC,MAAM,WAAW,GAAG,MAAM,6CAAoB,CAAC,GAAG,CAAU,SAAS,EAAE,KAAK,CAAC,CAAC;YAE9E,IAAI,CAAC,WAAW,EAAE,CAAC;gBACjB,qCAAqC;gBACrC,OAAO,KAAK,CAAC;YACf,CAAC;YAED,uDAAuD;YACvD,MAAM,aAAa,GAAG,qCAAoB,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;YACrE,IAAI,CAAC,aAAa,EAAE,CAAC;gBACnB,kDAAkD;gBAClD,OAAO,WAAW,CAAC;YACrB,CAAC;YAED,OAAO,qCAAoB,CAAC,sBAAsB,CAAC,aAAa,CAAC,CAAC;QACpE,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,KAAK,CAAC,8BAA8B,QAAQ,GAAG,EAAE,KAAK,CAAC,CAAC;YAChE,OAAO,KAAK,CAAC,CAAC,+BAA+B;QAC/C,CAAC;IACH,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,kBAAkB;QACtB,IAAI,CAAC;YACH,oDAAoD;YACpD,MAAM,UAAU,GAAG,MAAM,6CAAoB,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;YAElE,iCAAiC;YACjC,MAAM,WAAW,GAAiB;gBAChC,cAAc,EAAE,UAAU,CAAC,yBAAyB,CAAC,IAAI,KAAK;gBAC9D,iBAAiB,EAAE,UAAU,CAAC,4BAA4B,CAAC,IAAI,KAAK;gBACpE,cAAc,EAAE,UAAU,CAAC,yBAAyB,CAAC,IAAI,KAAK;gBAC9D,gBAAgB,EAAE,UAAU,CAAC,2BAA2B,CAAC,IAAI,KAAK;gBAClE,eAAe,EAAE,UAAU,CAAC,0BAA0B,CAAC,IAAI,KAAK;gBAChE,KAAK,EAAE,UAAU,CAAC,gBAAgB,CAAC,IAAI,KAAK;aAC7C,CAAC;YAEF,sCAAsC;YACtC,MAAM,aAAa,GAAG,qCAAoB,CAAC,2BAA2B,EAAE,CAAC;YAEzE,6EAA6E;YAC7E,MAAM,aAAa,GAAyB;gBAC1C,cAAc,EAAE,WAAW,CAAC,cAAc,IAAI,aAAa,CAAC,cAAc;gBAC1E,iBAAiB,EAAE,WAAW,CAAC,iBAAiB,IAAI,aAAa,CAAC,iBAAiB;gBACnF,cAAc,EAAE,WAAW,CAAC,cAAc,IAAI,aAAa,CAAC,cAAc;gBAC1E,gBAAgB,EAAE,WAAW,CAAC,gBAAgB,IAAI,aAAa,CAAC,gBAAgB;gBAChF,eAAe,EAAE,WAAW,CAAC,eAAe,IAAI,aAAa,CAAC,eAAe;gBAC7E,KAAK,EAAE,WAAW,CAAC,KAAK,IAAI,aAAa,CAAC,KAAK;gBAC/C,aAAa,EAAE;oBACb,cAAc,EAAE,aAAa,CAAC,cAAc,IAAI,KAAK;oBACrD,iBAAiB,EAAE,aAAa,CAAC,iBAAiB,IAAI,KAAK;oBAC3D,cAAc,EAAE,aAAa,CAAC,cAAc,IAAI,KAAK;oBACrD,gBAAgB,EAAE,aAAa,CAAC,gBAAgB,IAAI,KAAK;oBACzD,eAAe,EAAE,aAAa,CAAC,eAAe,IAAI,KAAK;oBACvD,KAAK,EAAE,aAAa,CAAC,KAAK,IAAI,KAAK;iBACpC;aACF,CAAC;YAEF,OAAO,aAAa,CAAC;QACvB,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,KAAK,CAAC,kCAAkC,EAAE,KAAK,CAAC,CAAC;YACzD,OAAO;gBACL,cAAc,EAAE,KAAK;gBACrB,iBAAiB,EAAE,KAAK;gBACxB,cAAc,EAAE,KAAK;gBACrB,gBAAgB,EAAE,KAAK;gBACvB,eAAe,EAAE,KAAK;gBACtB,KAAK,EAAE,KAAK;gBACZ,aAAa,EAAE;oBACb,cAAc,EAAE,KAAK;oBACrB,iBAAiB,EAAE,KAAK;oBACxB,cAAc,EAAE,KAAK;oBACrB,gBAAgB,EAAE,KAAK;oBACvB,eAAe,EAAE,KAAK;oBACtB,KAAK,EAAE,KAAK;iBACb;aACF,CAAC;QACJ,CAAC;IACH,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,gBAAgB,CAAC,WAA+B;QACpD,OAAO,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;IAC1C,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,uBAAuB;QAC3B,OAAO,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAAC;IAC/C,CAAC;IAED,KAAK,CAAC,0BAA0B;QAC9B,OAAO,IAAI,CAAC,cAAc,CAAC,mBAAmB,CAAC,CAAC;IAClD,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,YAAY;QAOhB,MAAM,aAAa,GAAG,MAAM,6CAAoB,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;QACrE,MAAM,aAAa,GAAG,qCAAoB,CAAC,2BAA2B,EAAE,CAAC;QACzE,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,kBAAkB,EAAE,CAAC;QACnD,MAAM,MAAM,GAAG,qCAAoB,CAAC,gBAAgB,EAAE,CAAC;QAEvD,OAAO;YACL,aAAa;YACb,aAAa;YACb,UAAU,EAAE;gBACV,cAAc,EAAE,UAAU,CAAC,cAAc;gBACzC,iBAAiB,EAAE,UAAU,CAAC,iBAAiB;gBAC/C,cAAc,EAAE,UAAU,CAAC,cAAc;gBACzC,gBAAgB,EAAE,UAAU,CAAC,gBAAgB;gBAC7C,eAAe,EAAE,UAAU,CAAC,eAAe;gBAC3C,KAAK,EAAE,UAAU,CAAC,KAAK;aACxB;YACD,MAAM;YACN,cAAc,EAAE,qCAAoB,CAAC,eAAe;SACrD,CAAC;IACJ,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,mBAAmB;QACvB,MAAM,6CAAoB,CAAC,OAAO,EAAE,CAAC;QACrC,OAAO,IAAI,CAAC,kBAAkB,EAAE,CAAC;IACnC,CAAC;CACF;AAED,4BAA4B;AACf,QAAA,mBAAmB,GAAG,mBAAmB,CAAC,WAAW,EAAE,CAAC",
      names: [],
      sources: ["/Users/dikshantvashistha/PrepBettr/lib/services/feature-flags.ts"],
      sourcesContent: ["import { unifiedConfigService } from './unified-config-service';\nimport { userTargetingService, UserTargetingService } from './user-targeting';\n\n// Updated interface to match unified config schema\nexport interface FeatureFlags {\n  autoApplyAzure: boolean;\n  portalIntegration: boolean;\n  voiceInterview: boolean;\n  voiceInterviewV2: boolean;\n  premiumFeatures: boolean;\n  newUI: boolean;\n}\n\nexport interface EnhancedFeatureFlags extends FeatureFlags {\n  // Rollout status for each feature\n  rolloutStatus: {\n    autoApplyAzure: boolean;\n    portalIntegration: boolean;\n    voiceInterview: boolean;\n    voiceInterviewV2: boolean;\n    premiumFeatures: boolean;\n    newUI: boolean;\n  };\n}\n\nclass FeatureFlagsService {\n  private static instance: FeatureFlagsService;\n\n  static getInstance(): FeatureFlagsService {\n    if (!FeatureFlagsService.instance) {\n      FeatureFlagsService.instance = new FeatureFlagsService();\n    }\n    return FeatureFlagsService.instance;\n  }\n\n  /**\n   * Get feature flag value considering both remote config and user targeting\n   */\n  async getFeatureFlag(flagName: keyof FeatureFlags): Promise<boolean> {\n    try {\n      // Get feature flag from unified config service\n      const configKey = `features.${flagName}`;\n      const globalValue = await unifiedConfigService.get<boolean>(configKey, false);\n      \n      if (!globalValue) {\n        // If disabled globally, return false\n        return false;\n      }\n\n      // If enabled globally, check if user is in the rollout\n      const rolloutConfig = UserTargetingService.ROLLOUT_CONFIGS[flagName];\n      if (!rolloutConfig) {\n        // If no rollout config, default to global setting\n        return globalValue;\n      }\n\n      return userTargetingService.isCurrentUserInRollout(rolloutConfig);\n    } catch (error) {\n      console.error(`Error getting feature flag ${flagName}:`, error);\n      return false; // Default to disabled on error\n    }\n  }\n\n  /**\n   * Get all feature flags with rollout status\n   */\n  async getAllFeatureFlags(): Promise<EnhancedFeatureFlags> {\n    try {\n      // Get all feature flags from unified config service\n      const allConfigs = await unifiedConfigService.getAll('features.');\n      \n      // Extract flags from config keys\n      const globalFlags: FeatureFlags = {\n        autoApplyAzure: allConfigs['features.autoApplyAzure'] || false,\n        portalIntegration: allConfigs['features.portalIntegration'] || false,\n        voiceInterview: allConfigs['features.voiceInterview'] || false,\n        voiceInterviewV2: allConfigs['features.voiceInterviewV2'] || false,\n        premiumFeatures: allConfigs['features.premiumFeatures'] || false,\n        newUI: allConfigs['features.newUI'] || false\n      };\n      \n      // Get rollout status for current user\n      const rolloutStatus = userTargetingService.getCurrentUserRolloutStatus();\n      \n      // Combine both: feature must be enabled globally AND user must be in rollout\n      const enhancedFlags: EnhancedFeatureFlags = {\n        autoApplyAzure: globalFlags.autoApplyAzure && rolloutStatus.autoApplyAzure,\n        portalIntegration: globalFlags.portalIntegration && rolloutStatus.portalIntegration,\n        voiceInterview: globalFlags.voiceInterview && rolloutStatus.voiceInterview,\n        voiceInterviewV2: globalFlags.voiceInterviewV2 && rolloutStatus.voiceInterviewV2,\n        premiumFeatures: globalFlags.premiumFeatures && rolloutStatus.premiumFeatures,\n        newUI: globalFlags.newUI && rolloutStatus.newUI,\n        rolloutStatus: {\n          autoApplyAzure: rolloutStatus.autoApplyAzure || false,\n          portalIntegration: rolloutStatus.portalIntegration || false,\n          voiceInterview: rolloutStatus.voiceInterview || false,\n          voiceInterviewV2: rolloutStatus.voiceInterviewV2 || false,\n          premiumFeatures: rolloutStatus.premiumFeatures || false,\n          newUI: rolloutStatus.newUI || false\n        },\n      };\n\n      return enhancedFlags;\n    } catch (error) {\n      console.error('Error getting all feature flags:', error);\n      return {\n        autoApplyAzure: false,\n        portalIntegration: false,\n        voiceInterview: false,\n        voiceInterviewV2: false,\n        premiumFeatures: false,\n        newUI: false,\n        rolloutStatus: {\n          autoApplyAzure: false,\n          portalIntegration: false,\n          voiceInterview: false,\n          voiceInterviewV2: false,\n          premiumFeatures: false,\n          newUI: false\n        },\n      };\n    }\n  }\n\n  /**\n   * Check if a specific feature is enabled for the current user\n   */\n  async isFeatureEnabled(featureName: keyof FeatureFlags): Promise<boolean> {\n    return this.getFeatureFlag(featureName);\n  }\n\n  /**\n   * Convenience methods for specific features\n   */\n  async isAutoApplyAzureEnabled(): Promise<boolean> {\n    return this.getFeatureFlag('autoApplyAzure');\n  }\n\n  async isPortalIntegrationEnabled(): Promise<boolean> {\n    return this.getFeatureFlag('portalIntegration');\n  }\n\n  /**\n   * Get debug information about feature flags\n   */\n  async getDebugInfo(): Promise<{\n    unifiedConfig: Record<string, any>;\n    rolloutStatus: Record<string, boolean>;\n    finalFlags: FeatureFlags;\n    userId: string | null;\n    rolloutConfigs: typeof UserTargetingService.ROLLOUT_CONFIGS;\n  }> {\n    const unifiedConfig = await unifiedConfigService.getAll('features.');\n    const rolloutStatus = userTargetingService.getCurrentUserRolloutStatus();\n    const finalFlags = await this.getAllFeatureFlags();\n    const userId = userTargetingService.getCurrentUserId();\n\n    return {\n      unifiedConfig,\n      rolloutStatus,\n      finalFlags: {\n        autoApplyAzure: finalFlags.autoApplyAzure,\n        portalIntegration: finalFlags.portalIntegration,\n        voiceInterview: finalFlags.voiceInterview,\n        voiceInterviewV2: finalFlags.voiceInterviewV2,\n        premiumFeatures: finalFlags.premiumFeatures,\n        newUI: finalFlags.newUI\n      },\n      userId,\n      rolloutConfigs: UserTargetingService.ROLLOUT_CONFIGS,\n    };\n  }\n\n  /**\n   * Force refresh all feature flags\n   */\n  async refreshFeatureFlags(): Promise<EnhancedFeatureFlags> {\n    await unifiedConfigService.refresh();\n    return this.getAllFeatureFlags();\n  }\n}\n\n// Export singleton instance\nexport const featureFlagsService = FeatureFlagsService.getInstance();\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "567fd6068ae05e8fc7200298999992ba766ed94e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_12fo6y2j5j = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_12fo6y2j5j();
cov_12fo6y2j5j().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_12fo6y2j5j().s[1]++;
exports.featureFlagsService = void 0;
const unified_config_service_1 =
/* istanbul ignore next */
(cov_12fo6y2j5j().s[2]++, require("./unified-config-service"));
const user_targeting_1 =
/* istanbul ignore next */
(cov_12fo6y2j5j().s[3]++, require("./user-targeting"));
class FeatureFlagsService {
  static getInstance() {
    /* istanbul ignore next */
    cov_12fo6y2j5j().f[0]++;
    cov_12fo6y2j5j().s[4]++;
    if (!FeatureFlagsService.instance) {
      /* istanbul ignore next */
      cov_12fo6y2j5j().b[0][0]++;
      cov_12fo6y2j5j().s[5]++;
      FeatureFlagsService.instance = new FeatureFlagsService();
    } else
    /* istanbul ignore next */
    {
      cov_12fo6y2j5j().b[0][1]++;
    }
    cov_12fo6y2j5j().s[6]++;
    return FeatureFlagsService.instance;
  }
  /**
   * Get feature flag value considering both remote config and user targeting
   */
  async getFeatureFlag(flagName) {
    /* istanbul ignore next */
    cov_12fo6y2j5j().f[1]++;
    cov_12fo6y2j5j().s[7]++;
    try {
      // Get feature flag from unified config service
      const configKey =
      /* istanbul ignore next */
      (cov_12fo6y2j5j().s[8]++, `features.${flagName}`);
      const globalValue =
      /* istanbul ignore next */
      (cov_12fo6y2j5j().s[9]++, await unified_config_service_1.unifiedConfigService.get(configKey, false));
      /* istanbul ignore next */
      cov_12fo6y2j5j().s[10]++;
      if (!globalValue) {
        /* istanbul ignore next */
        cov_12fo6y2j5j().b[1][0]++;
        cov_12fo6y2j5j().s[11]++;
        // If disabled globally, return false
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_12fo6y2j5j().b[1][1]++;
      }
      // If enabled globally, check if user is in the rollout
      const rolloutConfig =
      /* istanbul ignore next */
      (cov_12fo6y2j5j().s[12]++, user_targeting_1.UserTargetingService.ROLLOUT_CONFIGS[flagName]);
      /* istanbul ignore next */
      cov_12fo6y2j5j().s[13]++;
      if (!rolloutConfig) {
        /* istanbul ignore next */
        cov_12fo6y2j5j().b[2][0]++;
        cov_12fo6y2j5j().s[14]++;
        // If no rollout config, default to global setting
        return globalValue;
      } else
      /* istanbul ignore next */
      {
        cov_12fo6y2j5j().b[2][1]++;
      }
      cov_12fo6y2j5j().s[15]++;
      return user_targeting_1.userTargetingService.isCurrentUserInRollout(rolloutConfig);
    } catch (error) {
      /* istanbul ignore next */
      cov_12fo6y2j5j().s[16]++;
      console.error(`Error getting feature flag ${flagName}:`, error);
      /* istanbul ignore next */
      cov_12fo6y2j5j().s[17]++;
      return false; // Default to disabled on error
    }
  }
  /**
   * Get all feature flags with rollout status
   */
  async getAllFeatureFlags() {
    /* istanbul ignore next */
    cov_12fo6y2j5j().f[2]++;
    cov_12fo6y2j5j().s[18]++;
    try {
      // Get all feature flags from unified config service
      const allConfigs =
      /* istanbul ignore next */
      (cov_12fo6y2j5j().s[19]++, await unified_config_service_1.unifiedConfigService.getAll('features.'));
      // Extract flags from config keys
      const globalFlags =
      /* istanbul ignore next */
      (cov_12fo6y2j5j().s[20]++, {
        autoApplyAzure:
        /* istanbul ignore next */
        (cov_12fo6y2j5j().b[3][0]++, allConfigs['features.autoApplyAzure']) ||
        /* istanbul ignore next */
        (cov_12fo6y2j5j().b[3][1]++, false),
        portalIntegration:
        /* istanbul ignore next */
        (cov_12fo6y2j5j().b[4][0]++, allConfigs['features.portalIntegration']) ||
        /* istanbul ignore next */
        (cov_12fo6y2j5j().b[4][1]++, false),
        voiceInterview:
        /* istanbul ignore next */
        (cov_12fo6y2j5j().b[5][0]++, allConfigs['features.voiceInterview']) ||
        /* istanbul ignore next */
        (cov_12fo6y2j5j().b[5][1]++, false),
        voiceInterviewV2:
        /* istanbul ignore next */
        (cov_12fo6y2j5j().b[6][0]++, allConfigs['features.voiceInterviewV2']) ||
        /* istanbul ignore next */
        (cov_12fo6y2j5j().b[6][1]++, false),
        premiumFeatures:
        /* istanbul ignore next */
        (cov_12fo6y2j5j().b[7][0]++, allConfigs['features.premiumFeatures']) ||
        /* istanbul ignore next */
        (cov_12fo6y2j5j().b[7][1]++, false),
        newUI:
        /* istanbul ignore next */
        (cov_12fo6y2j5j().b[8][0]++, allConfigs['features.newUI']) ||
        /* istanbul ignore next */
        (cov_12fo6y2j5j().b[8][1]++, false)
      });
      // Get rollout status for current user
      const rolloutStatus =
      /* istanbul ignore next */
      (cov_12fo6y2j5j().s[21]++, user_targeting_1.userTargetingService.getCurrentUserRolloutStatus());
      // Combine both: feature must be enabled globally AND user must be in rollout
      const enhancedFlags =
      /* istanbul ignore next */
      (cov_12fo6y2j5j().s[22]++, {
        autoApplyAzure:
        /* istanbul ignore next */
        (cov_12fo6y2j5j().b[9][0]++, globalFlags.autoApplyAzure) &&
        /* istanbul ignore next */
        (cov_12fo6y2j5j().b[9][1]++, rolloutStatus.autoApplyAzure),
        portalIntegration:
        /* istanbul ignore next */
        (cov_12fo6y2j5j().b[10][0]++, globalFlags.portalIntegration) &&
        /* istanbul ignore next */
        (cov_12fo6y2j5j().b[10][1]++, rolloutStatus.portalIntegration),
        voiceInterview:
        /* istanbul ignore next */
        (cov_12fo6y2j5j().b[11][0]++, globalFlags.voiceInterview) &&
        /* istanbul ignore next */
        (cov_12fo6y2j5j().b[11][1]++, rolloutStatus.voiceInterview),
        voiceInterviewV2:
        /* istanbul ignore next */
        (cov_12fo6y2j5j().b[12][0]++, globalFlags.voiceInterviewV2) &&
        /* istanbul ignore next */
        (cov_12fo6y2j5j().b[12][1]++, rolloutStatus.voiceInterviewV2),
        premiumFeatures:
        /* istanbul ignore next */
        (cov_12fo6y2j5j().b[13][0]++, globalFlags.premiumFeatures) &&
        /* istanbul ignore next */
        (cov_12fo6y2j5j().b[13][1]++, rolloutStatus.premiumFeatures),
        newUI:
        /* istanbul ignore next */
        (cov_12fo6y2j5j().b[14][0]++, globalFlags.newUI) &&
        /* istanbul ignore next */
        (cov_12fo6y2j5j().b[14][1]++, rolloutStatus.newUI),
        rolloutStatus: {
          autoApplyAzure:
          /* istanbul ignore next */
          (cov_12fo6y2j5j().b[15][0]++, rolloutStatus.autoApplyAzure) ||
          /* istanbul ignore next */
          (cov_12fo6y2j5j().b[15][1]++, false),
          portalIntegration:
          /* istanbul ignore next */
          (cov_12fo6y2j5j().b[16][0]++, rolloutStatus.portalIntegration) ||
          /* istanbul ignore next */
          (cov_12fo6y2j5j().b[16][1]++, false),
          voiceInterview:
          /* istanbul ignore next */
          (cov_12fo6y2j5j().b[17][0]++, rolloutStatus.voiceInterview) ||
          /* istanbul ignore next */
          (cov_12fo6y2j5j().b[17][1]++, false),
          voiceInterviewV2:
          /* istanbul ignore next */
          (cov_12fo6y2j5j().b[18][0]++, rolloutStatus.voiceInterviewV2) ||
          /* istanbul ignore next */
          (cov_12fo6y2j5j().b[18][1]++, false),
          premiumFeatures:
          /* istanbul ignore next */
          (cov_12fo6y2j5j().b[19][0]++, rolloutStatus.premiumFeatures) ||
          /* istanbul ignore next */
          (cov_12fo6y2j5j().b[19][1]++, false),
          newUI:
          /* istanbul ignore next */
          (cov_12fo6y2j5j().b[20][0]++, rolloutStatus.newUI) ||
          /* istanbul ignore next */
          (cov_12fo6y2j5j().b[20][1]++, false)
        }
      });
      /* istanbul ignore next */
      cov_12fo6y2j5j().s[23]++;
      return enhancedFlags;
    } catch (error) {
      /* istanbul ignore next */
      cov_12fo6y2j5j().s[24]++;
      console.error('Error getting all feature flags:', error);
      /* istanbul ignore next */
      cov_12fo6y2j5j().s[25]++;
      return {
        autoApplyAzure: false,
        portalIntegration: false,
        voiceInterview: false,
        voiceInterviewV2: false,
        premiumFeatures: false,
        newUI: false,
        rolloutStatus: {
          autoApplyAzure: false,
          portalIntegration: false,
          voiceInterview: false,
          voiceInterviewV2: false,
          premiumFeatures: false,
          newUI: false
        }
      };
    }
  }
  /**
   * Check if a specific feature is enabled for the current user
   */
  async isFeatureEnabled(featureName) {
    /* istanbul ignore next */
    cov_12fo6y2j5j().f[3]++;
    cov_12fo6y2j5j().s[26]++;
    return this.getFeatureFlag(featureName);
  }
  /**
   * Convenience methods for specific features
   */
  async isAutoApplyAzureEnabled() {
    /* istanbul ignore next */
    cov_12fo6y2j5j().f[4]++;
    cov_12fo6y2j5j().s[27]++;
    return this.getFeatureFlag('autoApplyAzure');
  }
  async isPortalIntegrationEnabled() {
    /* istanbul ignore next */
    cov_12fo6y2j5j().f[5]++;
    cov_12fo6y2j5j().s[28]++;
    return this.getFeatureFlag('portalIntegration');
  }
  /**
   * Get debug information about feature flags
   */
  async getDebugInfo() {
    /* istanbul ignore next */
    cov_12fo6y2j5j().f[6]++;
    const unifiedConfig =
    /* istanbul ignore next */
    (cov_12fo6y2j5j().s[29]++, await unified_config_service_1.unifiedConfigService.getAll('features.'));
    const rolloutStatus =
    /* istanbul ignore next */
    (cov_12fo6y2j5j().s[30]++, user_targeting_1.userTargetingService.getCurrentUserRolloutStatus());
    const finalFlags =
    /* istanbul ignore next */
    (cov_12fo6y2j5j().s[31]++, await this.getAllFeatureFlags());
    const userId =
    /* istanbul ignore next */
    (cov_12fo6y2j5j().s[32]++, user_targeting_1.userTargetingService.getCurrentUserId());
    /* istanbul ignore next */
    cov_12fo6y2j5j().s[33]++;
    return {
      unifiedConfig,
      rolloutStatus,
      finalFlags: {
        autoApplyAzure: finalFlags.autoApplyAzure,
        portalIntegration: finalFlags.portalIntegration,
        voiceInterview: finalFlags.voiceInterview,
        voiceInterviewV2: finalFlags.voiceInterviewV2,
        premiumFeatures: finalFlags.premiumFeatures,
        newUI: finalFlags.newUI
      },
      userId,
      rolloutConfigs: user_targeting_1.UserTargetingService.ROLLOUT_CONFIGS
    };
  }
  /**
   * Force refresh all feature flags
   */
  async refreshFeatureFlags() {
    /* istanbul ignore next */
    cov_12fo6y2j5j().f[7]++;
    cov_12fo6y2j5j().s[34]++;
    await unified_config_service_1.unifiedConfigService.refresh();
    /* istanbul ignore next */
    cov_12fo6y2j5j().s[35]++;
    return this.getAllFeatureFlags();
  }
}
// Export singleton instance
/* istanbul ignore next */
cov_12fo6y2j5j().s[36]++;
exports.featureFlagsService = FeatureFlagsService.getInstance();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,