284b72b423844f92d482176ad64eef8d
"use strict";

/**
 * Redis Cache Service - Intelligent Caching Layer
 *
 * Features:
 * - Automatic JSON serialization/deserialization
 * - Key namespacing by environment and service
 * - Fallback to in-memory cache for local development
 * - Circuit breaker pattern for Redis failures
 * - Connection pooling and retry logic
 * - Performance metrics tracking
 */
/* istanbul ignore next */
function cov_2in74uxzzh() {
  var path = "/Users/dikshantvashistha/PrepBettr/lib/cache/redis-cache.ts";
  var hash = "8f0ebdbb8f3e97f1a69d4b8ec17149f04f64c306";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dikshantvashistha/PrepBettr/lib/cache/redis-cache.ts",
    statementMap: {
      "0": {
        start: {
          line: 13,
          column: 0
        },
        end: {
          line: 13,
          column: 62
        }
      },
      "1": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 14,
          column: 34
        }
      },
      "2": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 15,
          column: 28
        }
      },
      "3": {
        start: {
          line: 16,
          column: 0
        },
        end: {
          line: 16,
          column: 24
        }
      },
      "4": {
        start: {
          line: 17,
          column: 0
        },
        end: {
          line: 17,
          column: 42
        }
      },
      "5": {
        start: {
          line: 18,
          column: 17
        },
        end: {
          line: 18,
          column: 40
        }
      },
      "6": {
        start: {
          line: 20,
          column: 12
        },
        end: {
          line: 20,
          column: 16
        }
      },
      "7": {
        start: {
          line: 21,
          column: 0
        },
        end: {
          line: 28,
          column: 1
        }
      },
      "8": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 22,
          column: 31
        }
      },
      "9": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 27,
          column: 5
        }
      },
      "10": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 84
        }
      },
      "11": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 27
        }
      },
      "12": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 39
        }
      },
      "13": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 40,
          column: 10
        }
      },
      "14": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 40
        }
      },
      "15": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 37
        }
      },
      "16": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 44,
          column: 50
        }
      },
      "17": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 46,
          column: 36
        }
      },
      "18": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 60,
          column: 10
        }
      },
      "19": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 67,
          column: 9
        }
      },
      "20": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 63,
          column: 35
        }
      },
      "21": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 66,
          column: 86
        }
      },
      "22": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 69,
          column: 36
        }
      },
      "23": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 136,
          column: 9
        }
      },
      "24": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 78,
          column: 13
        }
      },
      "25": {
        start: {
          line: 76,
          column: 16
        },
        end: {
          line: 76,
          column: 88
        }
      },
      "26": {
        start: {
          line: 77,
          column: 16
        },
        end: {
          line: 77,
          column: 23
        }
      },
      "27": {
        start: {
          line: 79,
          column: 12
        },
        end: {
          line: 79,
          column: 55
        }
      },
      "28": {
        start: {
          line: 80,
          column: 33
        },
        end: {
          line: 98,
          column: 13
        }
      },
      "29": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 99,
          column: 50
        }
      },
      "30": {
        start: {
          line: 101,
          column: 12
        },
        end: {
          line: 106,
          column: 15
        }
      },
      "31": {
        start: {
          line: 102,
          column: 16
        },
        end: {
          line: 102,
          column: 62
        }
      },
      "32": {
        start: {
          line: 103,
          column: 16
        },
        end: {
          line: 103,
          column: 58
        }
      },
      "33": {
        start: {
          line: 104,
          column: 16
        },
        end: {
          line: 104,
          column: 48
        }
      },
      "34": {
        start: {
          line: 105,
          column: 16
        },
        end: {
          line: 105,
          column: 45
        }
      },
      "35": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 121,
          column: 15
        }
      },
      "36": {
        start: {
          line: 108,
          column: 16
        },
        end: {
          line: 108,
          column: 66
        }
      },
      "37": {
        start: {
          line: 109,
          column: 16
        },
        end: {
          line: 109,
          column: 61
        }
      },
      "38": {
        start: {
          line: 110,
          column: 16
        },
        end: {
          line: 110,
          column: 53
        }
      },
      "39": {
        start: {
          line: 111,
          column: 16
        },
        end: {
          line: 111,
          column: 36
        }
      },
      "40": {
        start: {
          line: 113,
          column: 16
        },
        end: {
          line: 119,
          column: 17
        }
      },
      "41": {
        start: {
          line: 114,
          column: 20
        },
        end: {
          line: 114,
          column: 47
        }
      },
      "42": {
        start: {
          line: 115,
          column: 20
        },
        end: {
          line: 118,
          column: 21
        }
      },
      "43": {
        start: {
          line: 116,
          column: 24
        },
        end: {
          line: 116,
          column: 55
        }
      },
      "44": {
        start: {
          line: 117,
          column: 24
        },
        end: {
          line: 117,
          column: 103
        }
      },
      "45": {
        start: {
          line: 120,
          column: 16
        },
        end: {
          line: 120,
          column: 102
        }
      },
      "46": {
        start: {
          line: 122,
          column: 12
        },
        end: {
          line: 125,
          column: 15
        }
      },
      "47": {
        start: {
          line: 123,
          column: 16
        },
        end: {
          line: 123,
          column: 56
        }
      },
      "48": {
        start: {
          line: 124,
          column: 16
        },
        end: {
          line: 124,
          column: 59
        }
      },
      "49": {
        start: {
          line: 127,
          column: 12
        },
        end: {
          line: 127,
          column: 40
        }
      },
      "50": {
        start: {
          line: 130,
          column: 12
        },
        end: {
          line: 130,
          column: 66
        }
      },
      "51": {
        start: {
          line: 131,
          column: 12
        },
        end: {
          line: 131,
          column: 57
        }
      },
      "52": {
        start: {
          line: 132,
          column: 12
        },
        end: {
          line: 134,
          column: 13
        }
      },
      "53": {
        start: {
          line: 133,
          column: 16
        },
        end: {
          line: 133,
          column: 28
        }
      },
      "54": {
        start: {
          line: 135,
          column: 12
        },
        end: {
          line: 135,
          column: 64
        }
      },
      "55": {
        start: {
          line: 143,
          column: 24
        },
        end: {
          line: 143,
          column: 42
        }
      },
      "56": {
        start: {
          line: 144,
          column: 26
        },
        end: {
          line: 144,
          column: 36
        }
      },
      "57": {
        start: {
          line: 145,
          column: 8
        },
        end: {
          line: 167,
          column: 9
        }
      },
      "58": {
        start: {
          line: 147,
          column: 12
        },
        end: {
          line: 155,
          column: 13
        }
      },
      "59": {
        start: {
          line: 148,
          column: 30
        },
        end: {
          line: 148,
          column: 60
        }
      },
      "60": {
        start: {
          line: 149,
          column: 16
        },
        end: {
          line: 152,
          column: 17
        }
      },
      "61": {
        start: {
          line: 150,
          column: 20
        },
        end: {
          line: 150,
          column: 59
        }
      },
      "62": {
        start: {
          line: 151,
          column: 20
        },
        end: {
          line: 151,
          column: 51
        }
      },
      "63": {
        start: {
          line: 153,
          column: 16
        },
        end: {
          line: 153,
          column: 56
        }
      },
      "64": {
        start: {
          line: 154,
          column: 16
        },
        end: {
          line: 154,
          column: 28
        }
      },
      "65": {
        start: {
          line: 157,
          column: 12
        },
        end: {
          line: 157,
          column: 47
        }
      },
      "66": {
        start: {
          line: 160,
          column: 12
        },
        end: {
          line: 160,
          column: 68
        }
      },
      "67": {
        start: {
          line: 161,
          column: 12
        },
        end: {
          line: 161,
          column: 31
        }
      },
      "68": {
        start: {
          line: 163,
          column: 12
        },
        end: {
          line: 165,
          column: 13
        }
      },
      "69": {
        start: {
          line: 164,
          column: 16
        },
        end: {
          line: 164,
          column: 51
        }
      },
      "70": {
        start: {
          line: 166,
          column: 12
        },
        end: {
          line: 166,
          column: 24
        }
      },
      "71": {
        start: {
          line: 173,
          column: 24
        },
        end: {
          line: 173,
          column: 42
        }
      },
      "72": {
        start: {
          line: 174,
          column: 20
        },
        end: {
          line: 174,
          column: 57
        }
      },
      "73": {
        start: {
          line: 175,
          column: 32
        },
        end: {
          line: 175,
          column: 71
        }
      },
      "74": {
        start: {
          line: 176,
          column: 8
        },
        end: {
          line: 197,
          column: 9
        }
      },
      "75": {
        start: {
          line: 178,
          column: 12
        },
        end: {
          line: 185,
          column: 13
        }
      },
      "76": {
        start: {
          line: 179,
          column: 31
        },
        end: {
          line: 179,
          column: 85
        }
      },
      "77": {
        start: {
          line: 181,
          column: 16
        },
        end: {
          line: 183,
          column: 17
        }
      },
      "78": {
        start: {
          line: 182,
          column: 20
        },
        end: {
          line: 182,
          column: 67
        }
      },
      "79": {
        start: {
          line: 184,
          column: 16
        },
        end: {
          line: 184,
          column: 39
        }
      },
      "80": {
        start: {
          line: 187,
          column: 12
        },
        end: {
          line: 187,
          column: 71
        }
      },
      "81": {
        start: {
          line: 190,
          column: 12
        },
        end: {
          line: 190,
          column: 68
        }
      },
      "82": {
        start: {
          line: 191,
          column: 12
        },
        end: {
          line: 191,
          column: 31
        }
      },
      "83": {
        start: {
          line: 193,
          column: 12
        },
        end: {
          line: 195,
          column: 13
        }
      },
      "84": {
        start: {
          line: 194,
          column: 16
        },
        end: {
          line: 194,
          column: 75
        }
      },
      "85": {
        start: {
          line: 196,
          column: 12
        },
        end: {
          line: 196,
          column: 25
        }
      },
      "86": {
        start: {
          line: 203,
          column: 24
        },
        end: {
          line: 203,
          column: 42
        }
      },
      "87": {
        start: {
          line: 204,
          column: 8
        },
        end: {
          line: 218,
          column: 9
        }
      },
      "88": {
        start: {
          line: 205,
          column: 12
        },
        end: {
          line: 208,
          column: 13
        }
      },
      "89": {
        start: {
          line: 206,
          column: 31
        },
        end: {
          line: 206,
          column: 61
        }
      },
      "90": {
        start: {
          line: 207,
          column: 16
        },
        end: {
          line: 207,
          column: 34
        }
      },
      "91": {
        start: {
          line: 210,
          column: 12
        },
        end: {
          line: 210,
          column: 54
        }
      },
      "92": {
        start: {
          line: 213,
          column: 12
        },
        end: {
          line: 213,
          column: 68
        }
      },
      "93": {
        start: {
          line: 214,
          column: 12
        },
        end: {
          line: 214,
          column: 31
        }
      },
      "94": {
        start: {
          line: 216,
          column: 12
        },
        end: {
          line: 216,
          column: 47
        }
      },
      "95": {
        start: {
          line: 217,
          column: 12
        },
        end: {
          line: 217,
          column: 25
        }
      },
      "96": {
        start: {
          line: 224,
          column: 24
        },
        end: {
          line: 224,
          column: 42
        }
      },
      "97": {
        start: {
          line: 225,
          column: 8
        },
        end: {
          line: 238,
          column: 9
        }
      },
      "98": {
        start: {
          line: 226,
          column: 12
        },
        end: {
          line: 229,
          column: 13
        }
      },
      "99": {
        start: {
          line: 227,
          column: 31
        },
        end: {
          line: 227,
          column: 64
        }
      },
      "100": {
        start: {
          line: 228,
          column: 16
        },
        end: {
          line: 228,
          column: 36
        }
      },
      "101": {
        start: {
          line: 231,
          column: 27
        },
        end: {
          line: 231,
          column: 58
        }
      },
      "102": {
        start: {
          line: 232,
          column: 12
        },
        end: {
          line: 232,
          column: 70
        }
      },
      "103": {
        start: {
          line: 235,
          column: 12
        },
        end: {
          line: 235,
          column: 71
        }
      },
      "104": {
        start: {
          line: 236,
          column: 12
        },
        end: {
          line: 236,
          column: 31
        }
      },
      "105": {
        start: {
          line: 237,
          column: 12
        },
        end: {
          line: 237,
          column: 25
        }
      },
      "106": {
        start: {
          line: 244,
          column: 24
        },
        end: {
          line: 244,
          column: 42
        }
      },
      "107": {
        start: {
          line: 245,
          column: 8
        },
        end: {
          line: 259,
          column: 9
        }
      },
      "108": {
        start: {
          line: 246,
          column: 12
        },
        end: {
          line: 248,
          column: 13
        }
      },
      "109": {
        start: {
          line: 247,
          column: 16
        },
        end: {
          line: 247,
          column: 64
        }
      },
      "110": {
        start: {
          line: 250,
          column: 28
        },
        end: {
          line: 250,
          column: 52
        }
      },
      "111": {
        start: {
          line: 251,
          column: 29
        },
        end: {
          line: 251,
          column: 44
        }
      },
      "112": {
        start: {
          line: 252,
          column: 12
        },
        end: {
          line: 252,
          column: 42
        }
      },
      "113": {
        start: {
          line: 253,
          column: 12
        },
        end: {
          line: 253,
          column: 28
        }
      },
      "114": {
        start: {
          line: 256,
          column: 12
        },
        end: {
          line: 256,
          column: 69
        }
      },
      "115": {
        start: {
          line: 257,
          column: 12
        },
        end: {
          line: 257,
          column: 31
        }
      },
      "116": {
        start: {
          line: 258,
          column: 12
        },
        end: {
          line: 258,
          column: 21
        }
      },
      "117": {
        start: {
          line: 265,
          column: 24
        },
        end: {
          line: 265,
          column: 42
        }
      },
      "118": {
        start: {
          line: 266,
          column: 8
        },
        end: {
          line: 283,
          column: 9
        }
      },
      "119": {
        start: {
          line: 267,
          column: 12
        },
        end: {
          line: 270,
          column: 13
        }
      },
      "120": {
        start: {
          line: 268,
          column: 31
        },
        end: {
          line: 268,
          column: 69
        }
      },
      "121": {
        start: {
          line: 269,
          column: 16
        },
        end: {
          line: 269,
          column: 36
        }
      },
      "122": {
        start: {
          line: 272,
          column: 27
        },
        end: {
          line: 272,
          column: 58
        }
      },
      "123": {
        start: {
          line: 273,
          column: 12
        },
        end: {
          line: 276,
          column: 13
        }
      },
      "124": {
        start: {
          line: 274,
          column: 16
        },
        end: {
          line: 274,
          column: 58
        }
      },
      "125": {
        start: {
          line: 275,
          column: 16
        },
        end: {
          line: 275,
          column: 28
        }
      },
      "126": {
        start: {
          line: 277,
          column: 12
        },
        end: {
          line: 277,
          column: 25
        }
      },
      "127": {
        start: {
          line: 280,
          column: 12
        },
        end: {
          line: 280,
          column: 71
        }
      },
      "128": {
        start: {
          line: 281,
          column: 12
        },
        end: {
          line: 281,
          column: 31
        }
      },
      "129": {
        start: {
          line: 282,
          column: 12
        },
        end: {
          line: 282,
          column: 25
        }
      },
      "130": {
        start: {
          line: 290,
          column: 25
        },
        end: {
          line: 290,
          column: 60
        }
      },
      "131": {
        start: {
          line: 290,
          column: 41
        },
        end: {
          line: 290,
          column: 59
        }
      },
      "132": {
        start: {
          line: 291,
          column: 23
        },
        end: {
          line: 291,
          column: 25
        }
      },
      "133": {
        start: {
          line: 292,
          column: 8
        },
        end: {
          line: 326,
          column: 9
        }
      },
      "134": {
        start: {
          line: 293,
          column: 12
        },
        end: {
          line: 306,
          column: 13
        }
      },
      "135": {
        start: {
          line: 294,
          column: 31
        },
        end: {
          line: 294,
          column: 63
        }
      },
      "136": {
        start: {
          line: 295,
          column: 16
        },
        end: {
          line: 304,
          column: 19
        }
      },
      "137": {
        start: {
          line: 296,
          column: 34
        },
        end: {
          line: 296,
          column: 47
        }
      },
      "138": {
        start: {
          line: 297,
          column: 20
        },
        end: {
          line: 297,
          column: 82
        }
      },
      "139": {
        start: {
          line: 298,
          column: 20
        },
        end: {
          line: 303,
          column: 21
        }
      },
      "140": {
        start: {
          line: 299,
          column: 24
        },
        end: {
          line: 299,
          column: 42
        }
      },
      "141": {
        start: {
          line: 302,
          column: 24
        },
        end: {
          line: 302,
          column: 44
        }
      },
      "142": {
        start: {
          line: 305,
          column: 16
        },
        end: {
          line: 305,
          column: 30
        }
      },
      "143": {
        start: {
          line: 308,
          column: 12
        },
        end: {
          line: 319,
          column: 15
        }
      },
      "144": {
        start: {
          line: 309,
          column: 32
        },
        end: {
          line: 309,
          column: 50
        }
      },
      "145": {
        start: {
          line: 310,
          column: 31
        },
        end: {
          line: 310,
          column: 62
        }
      },
      "146": {
        start: {
          line: 311,
          column: 16
        },
        end: {
          line: 318,
          column: 17
        }
      },
      "147": {
        start: {
          line: 312,
          column: 20
        },
        end: {
          line: 312,
          column: 47
        }
      },
      "148": {
        start: {
          line: 313,
          column: 20
        },
        end: {
          line: 313,
          column: 38
        }
      },
      "149": {
        start: {
          line: 316,
          column: 20
        },
        end: {
          line: 316,
          column: 39
        }
      },
      "150": {
        start: {
          line: 317,
          column: 20
        },
        end: {
          line: 317,
          column: 40
        }
      },
      "151": {
        start: {
          line: 320,
          column: 12
        },
        end: {
          line: 320,
          column: 26
        }
      },
      "152": {
        start: {
          line: 323,
          column: 12
        },
        end: {
          line: 323,
          column: 54
        }
      },
      "153": {
        start: {
          line: 324,
          column: 12
        },
        end: {
          line: 324,
          column: 31
        }
      },
      "154": {
        start: {
          line: 325,
          column: 12
        },
        end: {
          line: 325,
          column: 26
        }
      },
      "155": {
        start: {
          line: 333,
          column: 8
        },
        end: {
          line: 360,
          column: 9
        }
      },
      "156": {
        start: {
          line: 334,
          column: 12
        },
        end: {
          line: 345,
          column: 13
        }
      },
      "157": {
        start: {
          line: 335,
          column: 31
        },
        end: {
          line: 335,
          column: 52
        }
      },
      "158": {
        start: {
          line: 336,
          column: 29
        },
        end: {
          line: 336,
          column: 63
        }
      },
      "159": {
        start: {
          line: 337,
          column: 16
        },
        end: {
          line: 343,
          column: 17
        }
      },
      "160": {
        start: {
          line: 338,
          column: 37
        },
        end: {
          line: 338,
          column: 59
        }
      },
      "161": {
        start: {
          line: 339,
          column: 20
        },
        end: {
          line: 339,
          column: 61
        }
      },
      "162": {
        start: {
          line: 339,
          column: 42
        },
        end: {
          line: 339,
          column: 59
        }
      },
      "163": {
        start: {
          line: 340,
          column: 20
        },
        end: {
          line: 340,
          column: 41
        }
      },
      "164": {
        start: {
          line: 341,
          column: 36
        },
        end: {
          line: 341,
          column: 57
        }
      },
      "165": {
        start: {
          line: 342,
          column: 20
        },
        end: {
          line: 342,
          column: 99
        }
      },
      "166": {
        start: {
          line: 344,
          column: 16
        },
        end: {
          line: 344,
          column: 25
        }
      },
      "167": {
        start: {
          line: 347,
          column: 26
        },
        end: {
          line: 347,
          column: 27
        }
      },
      "168": {
        start: {
          line: 348,
          column: 12
        },
        end: {
          line: 353,
          column: 13
        }
      },
      "169": {
        start: {
          line: 349,
          column: 16
        },
        end: {
          line: 352,
          column: 17
        }
      },
      "170": {
        start: {
          line: 350,
          column: 20
        },
        end: {
          line: 350,
          column: 51
        }
      },
      "171": {
        start: {
          line: 351,
          column: 20
        },
        end: {
          line: 351,
          column: 30
        }
      },
      "172": {
        start: {
          line: 354,
          column: 12
        },
        end: {
          line: 354,
          column: 27
        }
      },
      "173": {
        start: {
          line: 357,
          column: 12
        },
        end: {
          line: 357,
          column: 67
        }
      },
      "174": {
        start: {
          line: 358,
          column: 12
        },
        end: {
          line: 358,
          column: 31
        }
      },
      "175": {
        start: {
          line: 359,
          column: 12
        },
        end: {
          line: 359,
          column: 21
        }
      },
      "176": {
        start: {
          line: 366,
          column: 8
        },
        end: {
          line: 379,
          column: 9
        }
      },
      "177": {
        start: {
          line: 367,
          column: 12
        },
        end: {
          line: 369,
          column: 13
        }
      },
      "178": {
        start: {
          line: 368,
          column: 16
        },
        end: {
          line: 368,
          column: 44
        }
      },
      "179": {
        start: {
          line: 371,
          column: 12
        },
        end: {
          line: 371,
          column: 39
        }
      },
      "180": {
        start: {
          line: 372,
          column: 12
        },
        end: {
          line: 372,
          column: 57
        }
      },
      "181": {
        start: {
          line: 373,
          column: 12
        },
        end: {
          line: 373,
          column: 24
        }
      },
      "182": {
        start: {
          line: 376,
          column: 12
        },
        end: {
          line: 376,
          column: 58
        }
      },
      "183": {
        start: {
          line: 377,
          column: 12
        },
        end: {
          line: 377,
          column: 31
        }
      },
      "184": {
        start: {
          line: 378,
          column: 12
        },
        end: {
          line: 378,
          column: 25
        }
      },
      "185": {
        start: {
          line: 386,
          column: 30
        },
        end: {
          line: 386,
          column: 65
        }
      },
      "186": {
        start: {
          line: 387,
          column: 8
        },
        end: {
          line: 387,
          column: 94
        }
      },
      "187": {
        start: {
          line: 388,
          column: 8
        },
        end: {
          line: 388,
          column: 101
        }
      },
      "188": {
        start: {
          line: 394,
          column: 8
        },
        end: {
          line: 414,
          column: 9
        }
      },
      "189": {
        start: {
          line: 395,
          column: 12
        },
        end: {
          line: 401,
          column: 13
        }
      },
      "190": {
        start: {
          line: 396,
          column: 16
        },
        end: {
          line: 396,
          column: 41
        }
      },
      "191": {
        start: {
          line: 397,
          column: 16
        },
        end: {
          line: 400,
          column: 18
        }
      },
      "192": {
        start: {
          line: 402,
          column: 12
        },
        end: {
          line: 406,
          column: 14
        }
      },
      "193": {
        start: {
          line: 409,
          column: 12
        },
        end: {
          line: 413,
          column: 14
        }
      },
      "194": {
        start: {
          line: 420,
          column: 8
        },
        end: {
          line: 424,
          column: 9
        }
      },
      "195": {
        start: {
          line: 421,
          column: 12
        },
        end: {
          line: 421,
          column: 43
        }
      },
      "196": {
        start: {
          line: 422,
          column: 12
        },
        end: {
          line: 422,
          column: 31
        }
      },
      "197": {
        start: {
          line: 423,
          column: 12
        },
        end: {
          line: 423,
          column: 57
        }
      },
      "198": {
        start: {
          line: 425,
          column: 8
        },
        end: {
          line: 425,
          column: 35
        }
      },
      "199": {
        start: {
          line: 429,
          column: 8
        },
        end: {
          line: 429,
          column: 48
        }
      },
      "200": {
        start: {
          line: 432,
          column: 8
        },
        end: {
          line: 432,
          column: 52
        }
      },
      "201": {
        start: {
          line: 435,
          column: 8
        },
        end: {
          line: 437,
          column: 37
        }
      },
      "202": {
        start: {
          line: 440,
          column: 27
        },
        end: {
          line: 440,
          column: 48
        }
      },
      "203": {
        start: {
          line: 441,
          column: 8
        },
        end: {
          line: 445,
          column: 9
        }
      },
      "204": {
        start: {
          line: 444,
          column: 12
        },
        end: {
          line: 444,
          column: 30
        }
      },
      "205": {
        start: {
          line: 446,
          column: 8
        },
        end: {
          line: 446,
          column: 26
        }
      },
      "206": {
        start: {
          line: 449,
          column: 8
        },
        end: {
          line: 455,
          column: 9
        }
      },
      "207": {
        start: {
          line: 450,
          column: 12
        },
        end: {
          line: 450,
          column: 37
        }
      },
      "208": {
        start: {
          line: 453,
          column: 12
        },
        end: {
          line: 453,
          column: 72
        }
      },
      "209": {
        start: {
          line: 454,
          column: 12
        },
        end: {
          line: 454,
          column: 25
        }
      },
      "210": {
        start: {
          line: 458,
          column: 8
        },
        end: {
          line: 459,
          column: 19
        }
      },
      "211": {
        start: {
          line: 459,
          column: 12
        },
        end: {
          line: 459,
          column: 19
        }
      },
      "212": {
        start: {
          line: 460,
          column: 25
        },
        end: {
          line: 460,
          column: 47
        }
      },
      "213": {
        start: {
          line: 461,
          column: 8
        },
        end: {
          line: 465,
          column: 11
        }
      },
      "214": {
        start: {
          line: 462,
          column: 27
        },
        end: {
          line: 462,
          column: 48
        }
      },
      "215": {
        start: {
          line: 463,
          column: 12
        },
        end: {
          line: 463,
          column: 39
        }
      },
      "216": {
        start: {
          line: 464,
          column: 12
        },
        end: {
          line: 464,
          column: 41
        }
      },
      "217": {
        start: {
          line: 466,
          column: 8
        },
        end: {
          line: 466,
          column: 30
        }
      },
      "218": {
        start: {
          line: 469,
          column: 23
        },
        end: {
          line: 469,
          column: 50
        }
      },
      "219": {
        start: {
          line: 470,
          column: 8
        },
        end: {
          line: 473,
          column: 9
        }
      },
      "220": {
        start: {
          line: 471,
          column: 12
        },
        end: {
          line: 471,
          column: 31
        }
      },
      "221": {
        start: {
          line: 472,
          column: 12
        },
        end: {
          line: 472,
          column: 24
        }
      },
      "222": {
        start: {
          line: 474,
          column: 8
        },
        end: {
          line: 478,
          column: 9
        }
      },
      "223": {
        start: {
          line: 475,
          column: 12
        },
        end: {
          line: 475,
          column: 43
        }
      },
      "224": {
        start: {
          line: 476,
          column: 12
        },
        end: {
          line: 476,
          column: 31
        }
      },
      "225": {
        start: {
          line: 477,
          column: 12
        },
        end: {
          line: 477,
          column: 24
        }
      },
      "226": {
        start: {
          line: 479,
          column: 8
        },
        end: {
          line: 479,
          column: 26
        }
      },
      "227": {
        start: {
          line: 480,
          column: 8
        },
        end: {
          line: 480,
          column: 28
        }
      },
      "228": {
        start: {
          line: 483,
          column: 8
        },
        end: {
          line: 487,
          column: 11
        }
      },
      "229": {
        start: {
          line: 488,
          column: 8
        },
        end: {
          line: 488,
          column: 20
        }
      },
      "230": {
        start: {
          line: 491,
          column: 8
        },
        end: {
          line: 491,
          column: 26
        }
      },
      "231": {
        start: {
          line: 494,
          column: 8
        },
        end: {
          line: 494,
          column: 28
        }
      },
      "232": {
        start: {
          line: 497,
          column: 8
        },
        end: {
          line: 497,
          column: 28
        }
      },
      "233": {
        start: {
          line: 499,
          column: 8
        },
        end: {
          line: 505,
          column: 9
        }
      },
      "234": {
        start: {
          line: 501,
          column: 12
        },
        end: {
          line: 501,
          column: 44
        }
      },
      "235": {
        start: {
          line: 502,
          column: 12
        },
        end: {
          line: 502,
          column: 41
        }
      },
      "236": {
        start: {
          line: 503,
          column: 12
        },
        end: {
          line: 503,
          column: 54
        }
      },
      "237": {
        start: {
          line: 504,
          column: 12
        },
        end: {
          line: 504,
          column: 58
        }
      },
      "238": {
        start: {
          line: 509,
          column: 8
        },
        end: {
          line: 516,
          column: 26
        }
      },
      "239": {
        start: {
          line: 510,
          column: 24
        },
        end: {
          line: 510,
          column: 34
        }
      },
      "240": {
        start: {
          line: 511,
          column: 12
        },
        end: {
          line: 515,
          column: 13
        }
      },
      "241": {
        start: {
          line: 512,
          column: 16
        },
        end: {
          line: 514,
          column: 17
        }
      },
      "242": {
        start: {
          line: 513,
          column: 20
        },
        end: {
          line: 513,
          column: 51
        }
      },
      "243": {
        start: {
          line: 520,
          column: 20
        },
        end: {
          line: 520,
          column: 24
        }
      },
      "244": {
        start: {
          line: 522,
          column: 26
        },
        end: {
          line: 535,
          column: 5
        }
      },
      "245": {
        start: {
          line: 536,
          column: 4
        },
        end: {
          line: 536,
          column: 90
        }
      },
      "246": {
        start: {
          line: 539,
          column: 4
        },
        end: {
          line: 541,
          column: 5
        }
      },
      "247": {
        start: {
          line: 540,
          column: 8
        },
        end: {
          line: 540,
          column: 40
        }
      },
      "248": {
        start: {
          line: 542,
          column: 4
        },
        end: {
          line: 542,
          column: 25
        }
      },
      "249": {
        start: {
          line: 549,
          column: 4
        },
        end: {
          line: 567,
          column: 6
        }
      },
      "250": {
        start: {
          line: 550,
          column: 23
        },
        end: {
          line: 550,
          column: 39
        }
      },
      "251": {
        start: {
          line: 551,
          column: 8
        },
        end: {
          line: 566,
          column: 10
        }
      },
      "252": {
        start: {
          line: 552,
          column: 26
        },
        end: {
          line: 552,
          column: 36
        }
      },
      "253": {
        start: {
          line: 553,
          column: 24
        },
        end: {
          line: 555,
          column: 86
        }
      },
      "254": {
        start: {
          line: 557,
          column: 33
        },
        end: {
          line: 557,
          column: 53
        }
      },
      "255": {
        start: {
          line: 558,
          column: 12
        },
        end: {
          line: 560,
          column: 13
        }
      },
      "256": {
        start: {
          line: 559,
          column: 16
        },
        end: {
          line: 559,
          column: 36
        }
      },
      "257": {
        start: {
          line: 562,
          column: 27
        },
        end: {
          line: 562,
          column: 57
        }
      },
      "258": {
        start: {
          line: 564,
          column: 12
        },
        end: {
          line: 564,
          column: 50
        }
      },
      "259": {
        start: {
          line: 565,
          column: 12
        },
        end: {
          line: 565,
          column: 26
        }
      },
      "260": {
        start: {
          line: 574,
          column: 18
        },
        end: {
          line: 574,
          column: 28
        }
      },
      "261": {
        start: {
          line: 575,
          column: 4
        },
        end: {
          line: 598,
          column: 6
        }
      },
      "262": {
        start: {
          line: 576,
          column: 8
        },
        end: {
          line: 578,
          column: 9
        }
      },
      "263": {
        start: {
          line: 577,
          column: 12
        },
        end: {
          line: 577,
          column: 26
        }
      },
      "264": {
        start: {
          line: 579,
          column: 20
        },
        end: {
          line: 579,
          column: 56
        }
      },
      "265": {
        start: {
          line: 580,
          column: 31
        },
        end: {
          line: 580,
          column: 51
        }
      },
      "266": {
        start: {
          line: 581,
          column: 8
        },
        end: {
          line: 586,
          column: 9
        }
      },
      "267": {
        start: {
          line: 582,
          column: 12
        },
        end: {
          line: 582,
          column: 44
        }
      },
      "268": {
        start: {
          line: 583,
          column: 12
        },
        end: {
          line: 583,
          column: 46
        }
      },
      "269": {
        start: {
          line: 584,
          column: 12
        },
        end: {
          line: 584,
          column: 42
        }
      },
      "270": {
        start: {
          line: 585,
          column: 12
        },
        end: {
          line: 585,
          column: 19
        }
      },
      "271": {
        start: {
          line: 588,
          column: 29
        },
        end: {
          line: 588,
          column: 37
        }
      },
      "272": {
        start: {
          line: 589,
          column: 8
        },
        end: {
          line: 596,
          column: 10
        }
      },
      "273": {
        start: {
          line: 590,
          column: 12
        },
        end: {
          line: 594,
          column: 24
        }
      },
      "274": {
        start: {
          line: 595,
          column: 12
        },
        end: {
          line: 595,
          column: 42
        }
      },
      "275": {
        start: {
          line: 597,
          column: 8
        },
        end: {
          line: 597,
          column: 15
        }
      },
      "276": {
        start: {
          line: 600,
          column: 0
        },
        end: {
          line: 600,
          column: 27
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 31,
            column: 4
          },
          end: {
            line: 31,
            column: 5
          }
        },
        loc: {
          start: {
            line: 31,
            column: 24
          },
          end: {
            line: 70,
            column: 5
          }
        },
        line: 31
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 72,
            column: 4
          },
          end: {
            line: 72,
            column: 5
          }
        },
        loc: {
          start: {
            line: 72,
            column: 28
          },
          end: {
            line: 137,
            column: 5
          }
        },
        line: 72
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 101,
            column: 38
          },
          end: {
            line: 101,
            column: 39
          }
        },
        loc: {
          start: {
            line: 101,
            column: 44
          },
          end: {
            line: 106,
            column: 13
          }
        },
        line: 101
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 107,
            column: 36
          },
          end: {
            line: 107,
            column: 37
          }
        },
        loc: {
          start: {
            line: 107,
            column: 47
          },
          end: {
            line: 121,
            column: 13
          }
        },
        line: 107
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 122,
            column: 43
          },
          end: {
            line: 122,
            column: 44
          }
        },
        loc: {
          start: {
            line: 122,
            column: 49
          },
          end: {
            line: 125,
            column: 13
          }
        },
        line: 122
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 142,
            column: 4
          },
          end: {
            line: 142,
            column: 5
          }
        },
        loc: {
          start: {
            line: 142,
            column: 19
          },
          end: {
            line: 168,
            column: 5
          }
        },
        line: 142
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 172,
            column: 4
          },
          end: {
            line: 172,
            column: 5
          }
        },
        loc: {
          start: {
            line: 172,
            column: 40
          },
          end: {
            line: 198,
            column: 5
          }
        },
        line: 172
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 202,
            column: 4
          },
          end: {
            line: 202,
            column: 5
          }
        },
        loc: {
          start: {
            line: 202,
            column: 22
          },
          end: {
            line: 219,
            column: 5
          }
        },
        line: 202
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 223,
            column: 4
          },
          end: {
            line: 223,
            column: 5
          }
        },
        loc: {
          start: {
            line: 223,
            column: 22
          },
          end: {
            line: 239,
            column: 5
          }
        },
        line: 223
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 243,
            column: 4
          },
          end: {
            line: 243,
            column: 5
          }
        },
        loc: {
          start: {
            line: 243,
            column: 36
          },
          end: {
            line: 260,
            column: 5
          }
        },
        line: 243
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 264,
            column: 4
          },
          end: {
            line: 264,
            column: 5
          }
        },
        loc: {
          start: {
            line: 264,
            column: 27
          },
          end: {
            line: 284,
            column: 5
          }
        },
        line: 264
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 289,
            column: 4
          },
          end: {
            line: 289,
            column: 5
          }
        },
        loc: {
          start: {
            line: 289,
            column: 21
          },
          end: {
            line: 327,
            column: 5
          }
        },
        line: 289
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 290,
            column: 34
          },
          end: {
            line: 290,
            column: 35
          }
        },
        loc: {
          start: {
            line: 290,
            column: 41
          },
          end: {
            line: 290,
            column: 59
          }
        },
        line: 290
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 295,
            column: 29
          },
          end: {
            line: 295,
            column: 30
          }
        },
        loc: {
          start: {
            line: 295,
            column: 45
          },
          end: {
            line: 304,
            column: 17
          }
        },
        line: 295
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 308,
            column: 25
          },
          end: {
            line: 308,
            column: 26
          }
        },
        loc: {
          start: {
            line: 308,
            column: 32
          },
          end: {
            line: 319,
            column: 13
          }
        },
        line: 308
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 331,
            column: 4
          },
          end: {
            line: 331,
            column: 5
          }
        },
        loc: {
          start: {
            line: 331,
            column: 31
          },
          end: {
            line: 361,
            column: 5
          }
        },
        line: 331
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 339,
            column: 33
          },
          end: {
            line: 339,
            column: 34
          }
        },
        loc: {
          start: {
            line: 339,
            column: 42
          },
          end: {
            line: 339,
            column: 59
          }
        },
        line: 339
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 365,
            column: 4
          },
          end: {
            line: 365,
            column: 5
          }
        },
        loc: {
          start: {
            line: 365,
            column: 18
          },
          end: {
            line: 380,
            column: 5
          }
        },
        line: 365
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 385,
            column: 4
          },
          end: {
            line: 385,
            column: 5
          }
        },
        loc: {
          start: {
            line: 385,
            column: 15
          },
          end: {
            line: 389,
            column: 5
          }
        },
        line: 385
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 393,
            column: 4
          },
          end: {
            line: 393,
            column: 5
          }
        },
        loc: {
          start: {
            line: 393,
            column: 24
          },
          end: {
            line: 415,
            column: 5
          }
        },
        line: 393
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 419,
            column: 4
          },
          end: {
            line: 419,
            column: 5
          }
        },
        loc: {
          start: {
            line: 419,
            column: 18
          },
          end: {
            line: 426,
            column: 5
          }
        },
        line: 419
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 428,
            column: 4
          },
          end: {
            line: 428,
            column: 5
          }
        },
        loc: {
          start: {
            line: 428,
            column: 18
          },
          end: {
            line: 430,
            column: 5
          }
        },
        line: 428
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 431,
            column: 4
          },
          end: {
            line: 431,
            column: 5
          }
        },
        loc: {
          start: {
            line: 431,
            column: 21
          },
          end: {
            line: 433,
            column: 5
          }
        },
        line: 431
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 434,
            column: 4
          },
          end: {
            line: 434,
            column: 5
          }
        },
        loc: {
          start: {
            line: 434,
            column: 23
          },
          end: {
            line: 438,
            column: 5
          }
        },
        line: 434
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 439,
            column: 4
          },
          end: {
            line: 439,
            column: 5
          }
        },
        loc: {
          start: {
            line: 439,
            column: 39
          },
          end: {
            line: 447,
            column: 5
          }
        },
        line: 439
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 448,
            column: 4
          },
          end: {
            line: 448,
            column: 5
          }
        },
        loc: {
          start: {
            line: 448,
            column: 23
          },
          end: {
            line: 456,
            column: 5
          }
        },
        line: 448
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 457,
            column: 4
          },
          end: {
            line: 457,
            column: 5
          }
        },
        loc: {
          start: {
            line: 457,
            column: 34
          },
          end: {
            line: 467,
            column: 5
          }
        },
        line: 457
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 461,
            column: 21
          },
          end: {
            line: 461,
            column: 22
          }
        },
        loc: {
          start: {
            line: 461,
            column: 28
          },
          end: {
            line: 465,
            column: 9
          }
        },
        line: 461
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 468,
            column: 4
          },
          end: {
            line: 468,
            column: 5
          }
        },
        loc: {
          start: {
            line: 468,
            column: 23
          },
          end: {
            line: 481,
            column: 5
          }
        },
        line: 468
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 482,
            column: 4
          },
          end: {
            line: 482,
            column: 5
          }
        },
        loc: {
          start: {
            line: 482,
            column: 39
          },
          end: {
            line: 489,
            column: 5
          }
        },
        line: 482
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 490,
            column: 4
          },
          end: {
            line: 490,
            column: 5
          }
        },
        loc: {
          start: {
            line: 490,
            column: 23
          },
          end: {
            line: 492,
            column: 5
          }
        },
        line: 490
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 493,
            column: 4
          },
          end: {
            line: 493,
            column: 5
          }
        },
        loc: {
          start: {
            line: 493,
            column: 24
          },
          end: {
            line: 495,
            column: 5
          }
        },
        line: 493
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 496,
            column: 4
          },
          end: {
            line: 496,
            column: 5
          }
        },
        loc: {
          start: {
            line: 496,
            column: 18
          },
          end: {
            line: 506,
            column: 5
          }
        },
        line: 496
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 507,
            column: 4
          },
          end: {
            line: 507,
            column: 5
          }
        },
        loc: {
          start: {
            line: 507,
            column: 27
          },
          end: {
            line: 517,
            column: 5
          }
        },
        line: 507
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 509,
            column: 20
          },
          end: {
            line: 509,
            column: 21
          }
        },
        loc: {
          start: {
            line: 509,
            column: 26
          },
          end: {
            line: 516,
            column: 9
          }
        },
        line: 509
      },
      "35": {
        name: "createCache",
        decl: {
          start: {
            line: 521,
            column: 9
          },
          end: {
            line: 521,
            column: 20
          }
        },
        loc: {
          start: {
            line: 521,
            column: 29
          },
          end: {
            line: 537,
            column: 1
          }
        },
        line: 521
      },
      "36": {
        name: "getCache",
        decl: {
          start: {
            line: 538,
            column: 9
          },
          end: {
            line: 538,
            column: 17
          }
        },
        loc: {
          start: {
            line: 538,
            column: 20
          },
          end: {
            line: 543,
            column: 1
          }
        },
        line: 538
      },
      "37": {
        name: "cached",
        decl: {
          start: {
            line: 548,
            column: 9
          },
          end: {
            line: 548,
            column: 15
          }
        },
        loc: {
          start: {
            line: 548,
            column: 41
          },
          end: {
            line: 568,
            column: 1
          }
        },
        line: 548
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 549,
            column: 11
          },
          end: {
            line: 549,
            column: 12
          }
        },
        loc: {
          start: {
            line: 549,
            column: 55
          },
          end: {
            line: 567,
            column: 5
          }
        },
        line: 549
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 551,
            column: 27
          },
          end: {
            line: 551,
            column: 28
          }
        },
        loc: {
          start: {
            line: 551,
            column: 52
          },
          end: {
            line: 566,
            column: 9
          }
        },
        line: 551
      },
      "40": {
        name: "cacheMiddleware",
        decl: {
          start: {
            line: 573,
            column: 9
          },
          end: {
            line: 573,
            column: 24
          }
        },
        loc: {
          start: {
            line: 573,
            column: 35
          },
          end: {
            line: 599,
            column: 1
          }
        },
        line: 573
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 575,
            column: 11
          },
          end: {
            line: 575,
            column: 12
          }
        },
        loc: {
          start: {
            line: 575,
            column: 37
          },
          end: {
            line: 598,
            column: 5
          }
        },
        line: 575
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 589,
            column: 19
          },
          end: {
            line: 589,
            column: 20
          }
        },
        loc: {
          start: {
            line: 589,
            column: 35
          },
          end: {
            line: 596,
            column: 9
          }
        },
        line: 589
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 25
      },
      "1": {
        loc: {
          start: {
            line: 48,
            column: 18
          },
          end: {
            line: 48,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 48,
            column: 18
          },
          end: {
            line: 48,
            column: 29
          }
        }, {
          start: {
            line: 48,
            column: 33
          },
          end: {
            line: 48,
            column: 55
          }
        }, {
          start: {
            line: 48,
            column: 59
          },
          end: {
            line: 48,
            column: 70
          }
        }],
        line: 48
      },
      "2": {
        loc: {
          start: {
            line: 49,
            column: 18
          },
          end: {
            line: 49,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 49,
            column: 18
          },
          end: {
            line: 49,
            column: 29
          }
        }, {
          start: {
            line: 49,
            column: 33
          },
          end: {
            line: 49,
            column: 75
          }
        }],
        line: 49
      },
      "3": {
        loc: {
          start: {
            line: 49,
            column: 42
          },
          end: {
            line: 49,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 49,
            column: 42
          },
          end: {
            line: 49,
            column: 64
          }
        }, {
          start: {
            line: 49,
            column: 68
          },
          end: {
            line: 49,
            column: 74
          }
        }],
        line: 49
      },
      "4": {
        loc: {
          start: {
            line: 50,
            column: 22
          },
          end: {
            line: 50,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 50,
            column: 22
          },
          end: {
            line: 50,
            column: 37
          }
        }, {
          start: {
            line: 50,
            column: 41
          },
          end: {
            line: 50,
            column: 67
          }
        }],
        line: 50
      },
      "5": {
        loc: {
          start: {
            line: 51,
            column: 17
          },
          end: {
            line: 51,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 51,
            column: 17
          },
          end: {
            line: 51,
            column: 27
          }
        }, {
          start: {
            line: 51,
            column: 31
          },
          end: {
            line: 51,
            column: 63
          }
        }],
        line: 51
      },
      "6": {
        loc: {
          start: {
            line: 52,
            column: 23
          },
          end: {
            line: 52,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 52,
            column: 23
          },
          end: {
            line: 52,
            column: 39
          }
        }, {
          start: {
            line: 52,
            column: 43
          },
          end: {
            line: 52,
            column: 78
          }
        }],
        line: 52
      },
      "7": {
        loc: {
          start: {
            line: 52,
            column: 46
          },
          end: {
            line: 52,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 52,
            column: 46
          },
          end: {
            line: 52,
            column: 66
          }
        }, {
          start: {
            line: 52,
            column: 70
          },
          end: {
            line: 52,
            column: 75
          }
        }],
        line: 52
      },
      "8": {
        loc: {
          start: {
            line: 53,
            column: 24
          },
          end: {
            line: 53,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 53,
            column: 24
          },
          end: {
            line: 53,
            column: 41
          }
        }, {
          start: {
            line: 53,
            column: 45
          },
          end: {
            line: 53,
            column: 48
          }
        }],
        line: 53
      },
      "9": {
        loc: {
          start: {
            line: 54,
            column: 28
          },
          end: {
            line: 54,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 54,
            column: 28
          },
          end: {
            line: 54,
            column: 49
          }
        }, {
          start: {
            line: 54,
            column: 53
          },
          end: {
            line: 54,
            column: 55
          }
        }],
        line: 54
      },
      "10": {
        loc: {
          start: {
            line: 55,
            column: 34
          },
          end: {
            line: 55,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 55,
            column: 34
          },
          end: {
            line: 55,
            column: 61
          }
        }, {
          start: {
            line: 55,
            column: 65
          },
          end: {
            line: 55,
            column: 68
          }
        }],
        line: 55
      },
      "11": {
        loc: {
          start: {
            line: 56,
            column: 40
          },
          end: {
            line: 56,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 56,
            column: 40
          },
          end: {
            line: 56,
            column: 73
          }
        }, {
          start: {
            line: 56,
            column: 77
          },
          end: {
            line: 56,
            column: 81
          }
        }],
        line: 56
      },
      "12": {
        loc: {
          start: {
            line: 57,
            column: 34
          },
          end: {
            line: 57,
            column: 112
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 57,
            column: 78
          },
          end: {
            line: 57,
            column: 105
          }
        }, {
          start: {
            line: 57,
            column: 108
          },
          end: {
            line: 57,
            column: 112
          }
        }],
        line: 57
      },
      "13": {
        loc: {
          start: {
            line: 58,
            column: 37
          },
          end: {
            line: 58,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 58,
            column: 37
          },
          end: {
            line: 58,
            column: 67
          }
        }, {
          start: {
            line: 58,
            column: 71
          },
          end: {
            line: 58,
            column: 72
          }
        }],
        line: 58
      },
      "14": {
        loc: {
          start: {
            line: 59,
            column: 30
          },
          end: {
            line: 59,
            column: 100
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 59,
            column: 70
          },
          end: {
            line: 59,
            column: 93
          }
        }, {
          start: {
            line: 59,
            column: 96
          },
          end: {
            line: 59,
            column: 100
          }
        }],
        line: 59
      },
      "15": {
        loc: {
          start: {
            line: 62,
            column: 8
          },
          end: {
            line: 67,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 62,
            column: 8
          },
          end: {
            line: 67,
            column: 9
          }
        }, {
          start: {
            line: 65,
            column: 13
          },
          end: {
            line: 67,
            column: 9
          }
        }],
        line: 62
      },
      "16": {
        loc: {
          start: {
            line: 62,
            column: 12
          },
          end: {
            line: 62,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 62,
            column: 12
          },
          end: {
            line: 62,
            column: 50
          }
        }, {
          start: {
            line: 62,
            column: 54
          },
          end: {
            line: 62,
            column: 88
          }
        }],
        line: 62
      },
      "17": {
        loc: {
          start: {
            line: 75,
            column: 12
          },
          end: {
            line: 78,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 75,
            column: 12
          },
          end: {
            line: 78,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 75
      },
      "18": {
        loc: {
          start: {
            line: 84,
            column: 21
          },
          end: {
            line: 84,
            column: 53
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 84,
            column: 39
          },
          end: {
            line: 84,
            column: 41
          }
        }, {
          start: {
            line: 84,
            column: 44
          },
          end: {
            line: 84,
            column: 53
          }
        }],
        line: 84
      },
      "19": {
        loc: {
          start: {
            line: 113,
            column: 16
          },
          end: {
            line: 119,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 113,
            column: 16
          },
          end: {
            line: 119,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 113
      },
      "20": {
        loc: {
          start: {
            line: 115,
            column: 20
          },
          end: {
            line: 118,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 115,
            column: 20
          },
          end: {
            line: 118,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 115
      },
      "21": {
        loc: {
          start: {
            line: 132,
            column: 12
          },
          end: {
            line: 134,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 132,
            column: 12
          },
          end: {
            line: 134,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 132
      },
      "22": {
        loc: {
          start: {
            line: 147,
            column: 12
          },
          end: {
            line: 155,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 147,
            column: 12
          },
          end: {
            line: 155,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 147
      },
      "23": {
        loc: {
          start: {
            line: 149,
            column: 16
          },
          end: {
            line: 152,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 149,
            column: 16
          },
          end: {
            line: 152,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 149
      },
      "24": {
        loc: {
          start: {
            line: 163,
            column: 12
          },
          end: {
            line: 165,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 163,
            column: 12
          },
          end: {
            line: 165,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 163
      },
      "25": {
        loc: {
          start: {
            line: 172,
            column: 26
          },
          end: {
            line: 172,
            column: 38
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 172,
            column: 36
          },
          end: {
            line: 172,
            column: 38
          }
        }],
        line: 172
      },
      "26": {
        loc: {
          start: {
            line: 174,
            column: 20
          },
          end: {
            line: 174,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 174,
            column: 20
          },
          end: {
            line: 174,
            column: 31
          }
        }, {
          start: {
            line: 174,
            column: 35
          },
          end: {
            line: 174,
            column: 57
          }
        }],
        line: 174
      },
      "27": {
        loc: {
          start: {
            line: 178,
            column: 12
          },
          end: {
            line: 185,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 178,
            column: 12
          },
          end: {
            line: 185,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 178
      },
      "28": {
        loc: {
          start: {
            line: 181,
            column: 16
          },
          end: {
            line: 183,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 181,
            column: 16
          },
          end: {
            line: 183,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 181
      },
      "29": {
        loc: {
          start: {
            line: 181,
            column: 20
          },
          end: {
            line: 181,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 181,
            column: 20
          },
          end: {
            line: 181,
            column: 32
          }
        }, {
          start: {
            line: 181,
            column: 36
          },
          end: {
            line: 181,
            column: 59
          }
        }],
        line: 181
      },
      "30": {
        loc: {
          start: {
            line: 193,
            column: 12
          },
          end: {
            line: 195,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 193,
            column: 12
          },
          end: {
            line: 195,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 193
      },
      "31": {
        loc: {
          start: {
            line: 205,
            column: 12
          },
          end: {
            line: 208,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 205,
            column: 12
          },
          end: {
            line: 208,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 205
      },
      "32": {
        loc: {
          start: {
            line: 226,
            column: 12
          },
          end: {
            line: 229,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 226,
            column: 12
          },
          end: {
            line: 229,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 226
      },
      "33": {
        loc: {
          start: {
            line: 232,
            column: 19
          },
          end: {
            line: 232,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 232,
            column: 19
          },
          end: {
            line: 232,
            column: 39
          }
        }, {
          start: {
            line: 232,
            column: 43
          },
          end: {
            line: 232,
            column: 69
          }
        }],
        line: 232
      },
      "34": {
        loc: {
          start: {
            line: 243,
            column: 25
          },
          end: {
            line: 243,
            column: 34
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 243,
            column: 33
          },
          end: {
            line: 243,
            column: 34
          }
        }],
        line: 243
      },
      "35": {
        loc: {
          start: {
            line: 246,
            column: 12
          },
          end: {
            line: 248,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 246,
            column: 12
          },
          end: {
            line: 248,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 246
      },
      "36": {
        loc: {
          start: {
            line: 250,
            column: 28
          },
          end: {
            line: 250,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 250,
            column: 28
          },
          end: {
            line: 250,
            column: 47
          }
        }, {
          start: {
            line: 250,
            column: 51
          },
          end: {
            line: 250,
            column: 52
          }
        }],
        line: 250
      },
      "37": {
        loc: {
          start: {
            line: 267,
            column: 12
          },
          end: {
            line: 270,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 267,
            column: 12
          },
          end: {
            line: 270,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 267
      },
      "38": {
        loc: {
          start: {
            line: 273,
            column: 12
          },
          end: {
            line: 276,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 273,
            column: 12
          },
          end: {
            line: 276,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 273
      },
      "39": {
        loc: {
          start: {
            line: 293,
            column: 12
          },
          end: {
            line: 306,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 293,
            column: 12
          },
          end: {
            line: 306,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 293
      },
      "40": {
        loc: {
          start: {
            line: 297,
            column: 34
          },
          end: {
            line: 297,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 297,
            column: 51
          },
          end: {
            line: 297,
            column: 74
          }
        }, {
          start: {
            line: 297,
            column: 77
          },
          end: {
            line: 297,
            column: 81
          }
        }],
        line: 297
      },
      "41": {
        loc: {
          start: {
            line: 298,
            column: 20
          },
          end: {
            line: 303,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 298,
            column: 20
          },
          end: {
            line: 303,
            column: 21
          }
        }, {
          start: {
            line: 301,
            column: 25
          },
          end: {
            line: 303,
            column: 21
          }
        }],
        line: 298
      },
      "42": {
        loc: {
          start: {
            line: 311,
            column: 16
          },
          end: {
            line: 318,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 311,
            column: 16
          },
          end: {
            line: 318,
            column: 17
          }
        }, {
          start: {
            line: 315,
            column: 21
          },
          end: {
            line: 318,
            column: 17
          }
        }],
        line: 311
      },
      "43": {
        loc: {
          start: {
            line: 311,
            column: 20
          },
          end: {
            line: 311,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 311,
            column: 20
          },
          end: {
            line: 311,
            column: 26
          }
        }, {
          start: {
            line: 311,
            column: 30
          },
          end: {
            line: 311,
            column: 56
          }
        }],
        line: 311
      },
      "44": {
        loc: {
          start: {
            line: 334,
            column: 12
          },
          end: {
            line: 345,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 334,
            column: 12
          },
          end: {
            line: 345,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 334
      },
      "45": {
        loc: {
          start: {
            line: 337,
            column: 16
          },
          end: {
            line: 343,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 337,
            column: 16
          },
          end: {
            line: 343,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 337
      },
      "46": {
        loc: {
          start: {
            line: 342,
            column: 27
          },
          end: {
            line: 342,
            column: 98
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 342,
            column: 28
          },
          end: {
            line: 342,
            column: 92
          }
        }, {
          start: {
            line: 342,
            column: 97
          },
          end: {
            line: 342,
            column: 98
          }
        }],
        line: 342
      },
      "47": {
        loc: {
          start: {
            line: 342,
            column: 28
          },
          end: {
            line: 342,
            column: 92
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 342,
            column: 69
          },
          end: {
            line: 342,
            column: 75
          }
        }, {
          start: {
            line: 342,
            column: 78
          },
          end: {
            line: 342,
            column: 92
          }
        }],
        line: 342
      },
      "48": {
        loc: {
          start: {
            line: 342,
            column: 28
          },
          end: {
            line: 342,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 342,
            column: 28
          },
          end: {
            line: 342,
            column: 44
          }
        }, {
          start: {
            line: 342,
            column: 48
          },
          end: {
            line: 342,
            column: 66
          }
        }],
        line: 342
      },
      "49": {
        loc: {
          start: {
            line: 349,
            column: 16
          },
          end: {
            line: 352,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 349,
            column: 16
          },
          end: {
            line: 352,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 349
      },
      "50": {
        loc: {
          start: {
            line: 349,
            column: 20
          },
          end: {
            line: 349,
            column: 92
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 349,
            column: 67
          },
          end: {
            line: 349,
            column: 73
          }
        }, {
          start: {
            line: 349,
            column: 76
          },
          end: {
            line: 349,
            column: 92
          }
        }],
        line: 349
      },
      "51": {
        loc: {
          start: {
            line: 349,
            column: 20
          },
          end: {
            line: 349,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 349,
            column: 20
          },
          end: {
            line: 349,
            column: 47
          }
        }, {
          start: {
            line: 349,
            column: 51
          },
          end: {
            line: 349,
            column: 64
          }
        }],
        line: 349
      },
      "52": {
        loc: {
          start: {
            line: 367,
            column: 12
          },
          end: {
            line: 369,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 367,
            column: 12
          },
          end: {
            line: 369,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 367
      },
      "53": {
        loc: {
          start: {
            line: 387,
            column: 30
          },
          end: {
            line: 387,
            column: 93
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 387,
            column: 50
          },
          end: {
            line: 387,
            column: 89
          }
        }, {
          start: {
            line: 387,
            column: 92
          },
          end: {
            line: 387,
            column: 93
          }
        }],
        line: 387
      },
      "54": {
        loc: {
          start: {
            line: 395,
            column: 12
          },
          end: {
            line: 401,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 395,
            column: 12
          },
          end: {
            line: 401,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 395
      },
      "55": {
        loc: {
          start: {
            line: 411,
            column: 25
          },
          end: {
            line: 411,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 411,
            column: 50
          },
          end: {
            line: 411,
            column: 63
          }
        }, {
          start: {
            line: 411,
            column: 66
          },
          end: {
            line: 411,
            column: 81
          }
        }],
        line: 411
      },
      "56": {
        loc: {
          start: {
            line: 420,
            column: 8
          },
          end: {
            line: 424,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 420,
            column: 8
          },
          end: {
            line: 424,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 420
      },
      "57": {
        loc: {
          start: {
            line: 435,
            column: 15
          },
          end: {
            line: 437,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 435,
            column: 15
          },
          end: {
            line: 435,
            column: 35
          }
        }, {
          start: {
            line: 436,
            column: 12
          },
          end: {
            line: 436,
            column: 55
          }
        }, {
          start: {
            line: 437,
            column: 12
          },
          end: {
            line: 437,
            column: 36
          }
        }],
        line: 435
      },
      "58": {
        loc: {
          start: {
            line: 439,
            column: 21
          },
          end: {
            line: 439,
            column: 37
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 439,
            column: 32
          },
          end: {
            line: 439,
            column: 37
          }
        }],
        line: 439
      },
      "59": {
        loc: {
          start: {
            line: 441,
            column: 8
          },
          end: {
            line: 445,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 441,
            column: 8
          },
          end: {
            line: 445,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 441
      },
      "60": {
        loc: {
          start: {
            line: 441,
            column: 12
          },
          end: {
            line: 441,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 441,
            column: 12
          },
          end: {
            line: 441,
            column: 20
          }
        }, {
          start: {
            line: 441,
            column: 24
          },
          end: {
            line: 441,
            column: 48
          }
        }],
        line: 441
      },
      "61": {
        loc: {
          start: {
            line: 458,
            column: 8
          },
          end: {
            line: 459,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 458,
            column: 8
          },
          end: {
            line: 459,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 458
      },
      "62": {
        loc: {
          start: {
            line: 458,
            column: 12
          },
          end: {
            line: 458,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 458,
            column: 12
          },
          end: {
            line: 458,
            column: 36
          }
        }, {
          start: {
            line: 458,
            column: 40
          },
          end: {
            line: 458,
            column: 52
          }
        }],
        line: 458
      },
      "63": {
        loc: {
          start: {
            line: 470,
            column: 8
          },
          end: {
            line: 473,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 470,
            column: 8
          },
          end: {
            line: 473,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 470
      },
      "64": {
        loc: {
          start: {
            line: 474,
            column: 8
          },
          end: {
            line: 478,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 474,
            column: 8
          },
          end: {
            line: 478,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 474
      },
      "65": {
        loc: {
          start: {
            line: 499,
            column: 8
          },
          end: {
            line: 505,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 499,
            column: 8
          },
          end: {
            line: 505,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 499
      },
      "66": {
        loc: {
          start: {
            line: 499,
            column: 12
          },
          end: {
            line: 500,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 499,
            column: 12
          },
          end: {
            line: 499,
            column: 35
          }
        }, {
          start: {
            line: 500,
            column: 12
          },
          end: {
            line: 500,
            column: 61
          }
        }],
        line: 499
      },
      "67": {
        loc: {
          start: {
            line: 512,
            column: 16
          },
          end: {
            line: 514,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 512,
            column: 16
          },
          end: {
            line: 514,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 512
      },
      "68": {
        loc: {
          start: {
            line: 523,
            column: 14
          },
          end: {
            line: 523,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 523,
            column: 14
          },
          end: {
            line: 523,
            column: 36
          }
        }, {
          start: {
            line: 523,
            column: 40
          },
          end: {
            line: 523,
            column: 51
          }
        }],
        line: 523
      },
      "69": {
        loc: {
          start: {
            line: 524,
            column: 23
          },
          end: {
            line: 524,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 524,
            column: 23
          },
          end: {
            line: 524,
            column: 45
          }
        }, {
          start: {
            line: 524,
            column: 49
          },
          end: {
            line: 524,
            column: 55
          }
        }],
        line: 524
      },
      "70": {
        loc: {
          start: {
            line: 527,
            column: 22
          },
          end: {
            line: 527,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 527,
            column: 22
          },
          end: {
            line: 527,
            column: 42
          }
        }, {
          start: {
            line: 527,
            column: 46
          },
          end: {
            line: 527,
            column: 51
          }
        }],
        line: 527
      },
      "71": {
        loc: {
          start: {
            line: 539,
            column: 4
          },
          end: {
            line: 541,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 539,
            column: 4
          },
          end: {
            line: 541,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 539
      },
      "72": {
        loc: {
          start: {
            line: 548,
            column: 16
          },
          end: {
            line: 548,
            column: 25
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 548,
            column: 22
          },
          end: {
            line: 548,
            column: 25
          }
        }],
        line: 548
      },
      "73": {
        loc: {
          start: {
            line: 553,
            column: 24
          },
          end: {
            line: 555,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 554,
            column: 18
          },
          end: {
            line: 554,
            column: 39
          }
        }, {
          start: {
            line: 555,
            column: 18
          },
          end: {
            line: 555,
            column: 86
          }
        }],
        line: 553
      },
      "74": {
        loc: {
          start: {
            line: 558,
            column: 12
          },
          end: {
            line: 560,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 558,
            column: 12
          },
          end: {
            line: 560,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 558
      },
      "75": {
        loc: {
          start: {
            line: 573,
            column: 25
          },
          end: {
            line: 573,
            column: 33
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 573,
            column: 31
          },
          end: {
            line: 573,
            column: 33
          }
        }],
        line: 573
      },
      "76": {
        loc: {
          start: {
            line: 576,
            column: 8
          },
          end: {
            line: 578,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 576,
            column: 8
          },
          end: {
            line: 578,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 576
      },
      "77": {
        loc: {
          start: {
            line: 579,
            column: 28
          },
          end: {
            line: 579,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 579,
            column: 28
          },
          end: {
            line: 579,
            column: 43
          }
        }, {
          start: {
            line: 579,
            column: 47
          },
          end: {
            line: 579,
            column: 54
          }
        }],
        line: 579
      },
      "78": {
        loc: {
          start: {
            line: 581,
            column: 8
          },
          end: {
            line: 586,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 581,
            column: 8
          },
          end: {
            line: 586,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 581
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0,
      "251": 0,
      "252": 0,
      "253": 0,
      "254": 0,
      "255": 0,
      "256": 0,
      "257": 0,
      "258": 0,
      "259": 0,
      "260": 0,
      "261": 0,
      "262": 0,
      "263": 0,
      "264": 0,
      "265": 0,
      "266": 0,
      "267": 0,
      "268": 0,
      "269": 0,
      "270": 0,
      "271": 0,
      "272": 0,
      "273": 0,
      "274": 0,
      "275": 0,
      "276": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0, 0],
      "58": [0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0],
      "66": [0, 0],
      "67": [0, 0],
      "68": [0, 0],
      "69": [0, 0],
      "70": [0, 0],
      "71": [0, 0],
      "72": [0],
      "73": [0, 0],
      "74": [0, 0],
      "75": [0],
      "76": [0, 0],
      "77": [0, 0],
      "78": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/dikshantvashistha/PrepBettr/lib/cache/redis-cache.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/dikshantvashistha/PrepBettr/lib/cache/redis-cache.ts"],
      sourcesContent: ["/**\n * Redis Cache Service - Intelligent Caching Layer\n * \n * Features:\n * - Automatic JSON serialization/deserialization\n * - Key namespacing by environment and service\n * - Fallback to in-memory cache for local development\n * - Circuit breaker pattern for Redis failures\n * - Connection pooling and retry logic\n * - Performance metrics tracking\n */\n\nimport { logServerError } from '@/lib/errors';\n\n// Conditional Redis import to avoid build errors when ioredis is not installed\nlet Redis: any = null;\ntry {\n  Redis = require('ioredis');\n} catch (error) {\n  if (process.env.NODE_ENV !== 'development') {\n    console.warn('\u26A0\uFE0F ioredis package not found - Redis cache will be disabled');\n  }\n}\n\n// ===== INTERFACES =====\n\nexport interface CacheOptions {\n  ttl?: number; // Time to live in seconds\n  tags?: string[]; // Cache tags for bulk invalidation\n  compress?: boolean; // Enable compression for large values\n  serialize?: boolean; // Custom serialization (default: true)\n}\n\nexport interface CacheStats {\n  hits: number;\n  misses: number;\n  errors: number;\n  hitRatio: number;\n  connectionStatus: 'connected' | 'disconnected' | 'connecting';\n  lastError?: string;\n  uptime?: number;\n}\n\nexport interface CacheConfig {\n  host: string;\n  port: number;\n  password?: string;\n  ssl?: boolean;\n  keyPrefix: string;\n  defaultTTL: number;\n  maxConnections: number;\n  retryDelayOnFailover: number;\n  retryTimeoutInMilliseconds: number;\n  enableCircuitBreaker: boolean;\n  circuitBreakerThreshold: number;\n  fallbackToMemory: boolean;\n}\n\n// ===== CACHE IMPLEMENTATION =====\n\nclass RedisCacheService {\n  private client: any = null;\n  private fallbackCache: Map<string, { value: any; expiry: number; tags?: string[] }> = new Map();\n  private config: CacheConfig;\n  private stats: CacheStats = {\n    hits: 0,\n    misses: 0,\n    errors: 0,\n    hitRatio: 0,\n    connectionStatus: 'disconnected'\n  };\n  \n  // Circuit breaker state\n  private circuitBreakerOpen = false;\n  private circuitBreakerCount = 0;\n  private lastCircuitBreakerReset = Date.now();\n  \n  // Performance tracking\n  private startTime = Date.now();\n  \n  constructor(config: Partial<CacheConfig>) {\n    this.config = {\n      host: config.host || process.env.REDIS_HOST || 'localhost',\n      port: config.port || parseInt(process.env.REDIS_PORT || '6379'),\n      password: config.password || process.env.REDIS_PASSWORD,\n      ssl: config.ssl || process.env.REDIS_SSL === 'true',\n      keyPrefix: config.keyPrefix || `${process.env.NODE_ENV || 'dev'}:`,\n      defaultTTL: config.defaultTTL || 300, // 5 minutes\n      maxConnections: config.maxConnections || 50,\n      retryDelayOnFailover: config.retryDelayOnFailover || 100,\n      retryTimeoutInMilliseconds: config.retryTimeoutInMilliseconds || 5000,\n      enableCircuitBreaker: config.enableCircuitBreaker !== undefined ? config.enableCircuitBreaker : true,\n      circuitBreakerThreshold: config.circuitBreakerThreshold || 5,\n      fallbackToMemory: config.fallbackToMemory !== undefined ? config.fallbackToMemory : true\n    };\n    \n    // Initialize Redis connection in non-development environments\n    if (process.env.NODE_ENV !== 'development' || process.env.FORCE_REDIS === 'true') {\n      this.initializeRedis();\n    } else {\n      console.log('\uD83D\uDD27 Redis cache running in memory-only mode for development');\n    }\n    \n    // Start periodic cleanup for fallback cache\n    this.startFallbackCleanup();\n  }\n  \n  // ===== INITIALIZATION =====\n  \n  private async initializeRedis(): Promise<void> {\n    try {\n      // Skip Redis initialization if Redis is not available\n      if (!Redis) {\n        console.log('\uD83D\uDEAB Redis package not available - using memory-only cache');\n        return;\n      }\n      \n      this.stats.connectionStatus = 'connecting';\n      \n      const redisOptions: any = {\n        host: this.config.host,\n        port: this.config.port,\n        password: this.config.password,\n        tls: this.config.ssl ? {} : undefined,\n        keyPrefix: this.config.keyPrefix,\n        \n        // Connection settings\n        connectTimeout: 10000,\n        lazyConnect: true,\n        maxRetriesPerRequest: 3,\n        retryDelayOnFailover: this.config.retryDelayOnFailover,\n        \n        // Performance optimizations\n        enableReadyCheck: true,\n        maxLoadingTimeout: 5000,\n        keepAlive: 30000,\n        \n        // Connection pooling\n        family: 4, // Use IPv4\n        db: 0,\n      };\n      \n      this.client = new Redis(redisOptions);\n      \n      // Event handlers\n      this.client.on('connect', () => {\n        console.log('\u2705 Redis connected successfully');\n        this.stats.connectionStatus = 'connected';\n        this.circuitBreakerOpen = false;\n        this.circuitBreakerCount = 0;\n      });\n      \n      this.client.on('error', (error: any) => {\n        console.error('\u274C Redis connection error:', error);\n        this.stats.connectionStatus = 'disconnected';\n        this.stats.lastError = error.message;\n        this.stats.errors++;\n        \n        // Circuit breaker logic\n        if (this.config.enableCircuitBreaker) {\n          this.circuitBreakerCount++;\n          if (this.circuitBreakerCount >= this.config.circuitBreakerThreshold) {\n            this.circuitBreakerOpen = true;\n            console.warn('\uD83D\uDEA8 Redis circuit breaker opened - falling back to memory cache');\n          }\n        }\n        \n        logServerError(error, { service: 'redis-cache', action: 'connection' });\n      });\n      \n      this.client.on('reconnecting', () => {\n        console.log('\uD83D\uDD04 Redis reconnecting...');\n        this.stats.connectionStatus = 'connecting';\n      });\n      \n      // Attempt initial connection\n      await this.client.connect();\n      \n    } catch (error) {\n      console.error('\u274C Failed to initialize Redis:', error);\n      this.stats.connectionStatus = 'disconnected';\n      \n      if (!this.config.fallbackToMemory) {\n        throw error;\n      }\n      \n      console.log('\u26A0\uFE0F Continuing with memory-only cache');\n    }\n  }\n  \n  // ===== CORE CACHE OPERATIONS =====\n  \n  /**\n   * Get value from cache with automatic fallback\n   */\n  async get<T = any>(key: string): Promise<T | null> {\n    const fullKey = this.buildKey(key);\n    const startTime = Date.now();\n    \n    try {\n      // Try Redis first (if available and circuit breaker is closed)\n      if (this.isRedisAvailable()) {\n        const value = await this.client!.get(fullKey);\n        \n        if (value !== null) {\n          this.recordHit(Date.now() - startTime);\n          return this.deserialize<T>(value);\n        }\n        \n        this.recordMiss(Date.now() - startTime);\n        return null;\n      }\n      \n      // Fallback to memory cache\n      return this.getFromMemory<T>(fullKey);\n      \n    } catch (error) {\n      console.error(`Redis GET error for key ${key}:`, error);\n      this.recordError();\n      \n      // Fallback to memory cache on Redis error\n      if (this.config.fallbackToMemory) {\n        return this.getFromMemory<T>(fullKey);\n      }\n      \n      return null;\n    }\n  }\n  \n  /**\n   * Set value in cache with TTL and tags\n   */\n  async set(key: string, value: any, options: CacheOptions = {}): Promise<boolean> {\n    const fullKey = this.buildKey(key);\n    const ttl = options.ttl || this.config.defaultTTL;\n    const serializedValue = this.serialize(value, options.compress);\n    \n    try {\n      // Set in Redis (if available)\n      if (this.isRedisAvailable()) {\n        const result = await this.client!.setex(fullKey, ttl, serializedValue);\n        \n        // Store tags for bulk invalidation\n        if (options.tags && options.tags.length > 0) {\n          await this.setTags(fullKey, options.tags, ttl);\n        }\n        \n        return result === 'OK';\n      }\n      \n      // Fallback to memory cache\n      return this.setInMemory(fullKey, value, ttl, options.tags);\n      \n    } catch (error) {\n      console.error(`Redis SET error for key ${key}:`, error);\n      this.recordError();\n      \n      // Fallback to memory cache on Redis error\n      if (this.config.fallbackToMemory) {\n        return this.setInMemory(fullKey, value, ttl, options.tags);\n      }\n      \n      return false;\n    }\n  }\n  \n  /**\n   * Delete key from cache\n   */\n  async delete(key: string): Promise<boolean> {\n    const fullKey = this.buildKey(key);\n    \n    try {\n      if (this.isRedisAvailable()) {\n        const result = await this.client!.del(fullKey);\n        return result > 0;\n      }\n      \n      // Delete from memory cache\n      return this.fallbackCache.delete(fullKey);\n      \n    } catch (error) {\n      console.error(`Redis DEL error for key ${key}:`, error);\n      this.recordError();\n      \n      // Delete from memory cache on Redis error\n      this.fallbackCache.delete(fullKey);\n      return false;\n    }\n  }\n  \n  /**\n   * Check if key exists in cache\n   */\n  async exists(key: string): Promise<boolean> {\n    const fullKey = this.buildKey(key);\n    \n    try {\n      if (this.isRedisAvailable()) {\n        const result = await this.client!.exists(fullKey);\n        return result === 1;\n      }\n      \n      // Check memory cache\n      const cached = this.fallbackCache.get(fullKey);\n      return cached !== undefined && cached.expiry > Date.now();\n      \n    } catch (error) {\n      console.error(`Redis EXISTS error for key ${key}:`, error);\n      this.recordError();\n      return false;\n    }\n  }\n  \n  /**\n   * Increment numeric value atomically\n   */\n  async increment(key: string, delta: number = 1): Promise<number> {\n    const fullKey = this.buildKey(key);\n    \n    try {\n      if (this.isRedisAvailable()) {\n        return await this.client!.incrby(fullKey, delta);\n      }\n      \n      // Memory fallback for increment\n      const current = await this.get<number>(key) || 0;\n      const newValue = current + delta;\n      await this.set(key, newValue);\n      return newValue;\n      \n    } catch (error) {\n      console.error(`Redis INCR error for key ${key}:`, error);\n      this.recordError();\n      return 0;\n    }\n  }\n  \n  /**\n   * Set expiration on existing key\n   */\n  async expire(key: string, ttl: number): Promise<boolean> {\n    const fullKey = this.buildKey(key);\n    \n    try {\n      if (this.isRedisAvailable()) {\n        const result = await this.client!.expire(fullKey, ttl);\n        return result === 1;\n      }\n      \n      // Update expiry in memory cache\n      const cached = this.fallbackCache.get(fullKey);\n      if (cached) {\n        cached.expiry = Date.now() + (ttl * 1000);\n        return true;\n      }\n      \n      return false;\n      \n    } catch (error) {\n      console.error(`Redis EXPIRE error for key ${key}:`, error);\n      this.recordError();\n      return false;\n    }\n  }\n  \n  // ===== BULK OPERATIONS =====\n  \n  /**\n   * Get multiple keys at once\n   */\n  async mget<T = any>(keys: string[]): Promise<Record<string, T | null>> {\n    const fullKeys = keys.map(key => this.buildKey(key));\n    const result: Record<string, T | null> = {};\n    \n    try {\n      if (this.isRedisAvailable()) {\n        const values = await this.client!.mget(fullKeys);\n        \n        keys.forEach((key, index) => {\n          const value = values[index];\n          result[key] = value !== null ? this.deserialize<T>(value) : null;\n          \n          if (value !== null) {\n            this.stats.hits++;\n          } else {\n            this.stats.misses++;\n          }\n        });\n        \n        return result;\n      }\n      \n      // Memory fallback\n      keys.forEach(key => {\n        const fullKey = this.buildKey(key);\n        const cached = this.fallbackCache.get(fullKey);\n        \n        if (cached && cached.expiry > Date.now()) {\n          result[key] = cached.value;\n          this.stats.hits++;\n        } else {\n          result[key] = null;\n          this.stats.misses++;\n        }\n      });\n      \n      return result;\n      \n    } catch (error) {\n      console.error('Redis MGET error:', error);\n      this.recordError();\n      return result;\n    }\n  }\n  \n  /**\n   * Invalidate cache by tags\n   */\n  async invalidateByTag(tag: string): Promise<number> {\n    try {\n      if (this.isRedisAvailable()) {\n        const tagKey = this.buildTagKey(tag);\n        const keys = await this.client!.smembers(tagKey);\n        \n        if (keys.length > 0) {\n          const pipeline = this.client!.pipeline();\n          keys.forEach((key: any) => pipeline.del(key));\n          pipeline.del(tagKey);\n          \n          const results = await pipeline.exec();\n          return results?.length || 0;\n        }\n        \n        return 0;\n      }\n      \n      // Memory fallback - iterate through all keys\n      let deleted = 0;\n      for (const [key, cached] of this.fallbackCache.entries()) {\n        if (cached.tags?.includes(tag)) {\n          this.fallbackCache.delete(key);\n          deleted++;\n        }\n      }\n      \n      return deleted;\n      \n    } catch (error) {\n      console.error(`Error invalidating tag ${tag}:`, error);\n      this.recordError();\n      return 0;\n    }\n  }\n  \n  /**\n   * Clear all cache data\n   */\n  async clear(): Promise<boolean> {\n    try {\n      if (this.isRedisAvailable()) {\n        await this.client!.flushdb();\n      }\n      \n      // Clear memory cache\n      this.fallbackCache.clear();\n      \n      console.log('\uD83E\uDDF9 Cache cleared successfully');\n      return true;\n      \n    } catch (error) {\n      console.error('Error clearing cache:', error);\n      this.recordError();\n      return false;\n    }\n  }\n  \n  // ===== UTILITY METHODS =====\n  \n  /**\n   * Get cache statistics\n   */\n  getStats(): CacheStats {\n    const totalRequests = this.stats.hits + this.stats.misses;\n    this.stats.hitRatio = totalRequests > 0 ? (this.stats.hits / totalRequests) * 100 : 0;\n    \n    return {\n      ...this.stats,\n      uptime: Date.now() - this.startTime\n    };\n  }\n  \n  /**\n   * Health check\n   */\n  async healthCheck(): Promise<{ healthy: boolean; message?: string; details?: any }> {\n    try {\n      if (this.isRedisAvailable()) {\n        await this.client!.ping();\n        return { \n          healthy: true,\n          details: {\n            circuitBreakerOpen: this.circuitBreakerOpen,\n            ...this.getStats()\n          }\n        };\n      }\n      \n      return {\n        healthy: this.config.fallbackToMemory,\n        message: 'Redis unavailable, using memory cache',\n        details: {\n          fallbackCacheSize: this.fallbackCache.size,\n          ...this.getStats()\n        }\n      };\n      \n    } catch (error) {\n      return {\n        healthy: false,\n        message: error instanceof Error ? error.message : 'Unknown error',\n        details: this.getStats()\n      };\n    }\n  }\n  \n  /**\n   * Close Redis connection\n   */\n  async close(): Promise<void> {\n    if (this.client) {\n      await this.client.disconnect();\n      this.client = null;\n      this.stats.connectionStatus = 'disconnected';\n    }\n    \n    this.fallbackCache.clear();\n  }\n  \n  // ===== PRIVATE HELPER METHODS =====\n  \n  private buildKey(key: string): string {\n    return `${this.config.keyPrefix}${key}`;\n  }\n  \n  private buildTagKey(tag: string): string {\n    return `${this.config.keyPrefix}tag:${tag}`;\n  }\n  \n  private isRedisAvailable(): boolean {\n    return this.client !== null && \n           this.stats.connectionStatus === 'connected' && \n           !this.circuitBreakerOpen;\n  }\n  \n  private serialize(value: any, compress = false): string {\n    const serialized = JSON.stringify(value);\n    \n    if (compress && serialized.length > 1024) {\n      // Could implement compression here (zlib, etc.)\n      // For now, just return the JSON string\n      return serialized;\n    }\n    \n    return serialized;\n  }\n  \n  private deserialize<T>(value: string): T {\n    try {\n      return JSON.parse(value) as T;\n    } catch (error) {\n      console.error('Failed to deserialize cached value:', error);\n      return value as unknown as T;\n    }\n  }\n  \n  private async setTags(key: string, tags: string[], ttl: number): Promise<void> {\n    if (!this.isRedisAvailable() || !tags.length) return;\n    \n    const pipeline = this.client!.pipeline();\n    \n    tags.forEach(tag => {\n      const tagKey = this.buildTagKey(tag);\n      pipeline.sadd(tagKey, key);\n      pipeline.expire(tagKey, ttl);\n    });\n    \n    await pipeline.exec();\n  }\n  \n  private getFromMemory<T>(key: string): T | null {\n    const cached = this.fallbackCache.get(key);\n    \n    if (!cached) {\n      this.recordMiss(0);\n      return null;\n    }\n    \n    if (cached.expiry <= Date.now()) {\n      this.fallbackCache.delete(key);\n      this.recordMiss(0);\n      return null;\n    }\n    \n    this.recordHit(0);\n    return cached.value;\n  }\n  \n  private setInMemory(key: string, value: any, ttl: number, tags?: string[]): boolean {\n    this.fallbackCache.set(key, {\n      value,\n      expiry: Date.now() + (ttl * 1000),\n      tags\n    });\n    return true;\n  }\n  \n  private recordHit(latency: number): void {\n    this.stats.hits++;\n  }\n  \n  private recordMiss(latency: number): void {\n    this.stats.misses++;\n  }\n  \n  private recordError(): void {\n    this.stats.errors++;\n    \n    // Reset circuit breaker after 1 minute if errors decrease\n    if (this.circuitBreakerOpen && \n        Date.now() - this.lastCircuitBreakerReset > 60000) {\n      this.circuitBreakerOpen = false;\n      this.circuitBreakerCount = 0;\n      this.lastCircuitBreakerReset = Date.now();\n      console.log('\uD83D\uDD04 Redis circuit breaker reset');\n    }\n  }\n  \n  private startFallbackCleanup(): void {\n    // Clean expired entries every 5 minutes\n    setInterval(() => {\n      const now = Date.now();\n      for (const [key, cached] of this.fallbackCache.entries()) {\n        if (cached.expiry <= now) {\n          this.fallbackCache.delete(key);\n        }\n      }\n    }, 5 * 60 * 1000);\n  }\n}\n\n// ===== CACHE FACTORY =====\n\nlet cacheInstance: RedisCacheService | null = null;\n\nexport function createCache(config: Partial<CacheConfig>): RedisCacheService {\n  const defaultConfig: CacheConfig = {\n    host: process.env.REDIS_HOST || 'localhost',\n    port: parseInt(process.env.REDIS_PORT || '6379'),\n    password: process.env.REDIS_PASSWORD,\n    ssl: process.env.REDIS_SSL === 'true',\n    keyPrefix: `${process.env.NODE_ENV || 'dev'}:`,\n    defaultTTL: 300,\n    maxConnections: 50,\n    retryDelayOnFailover: 100,\n    retryTimeoutInMilliseconds: 5000,\n    enableCircuitBreaker: true,\n    circuitBreakerThreshold: 5,\n    fallbackToMemory: true\n  };\n  \n  return new RedisCacheService({ ...defaultConfig, ...config });\n}\n\nexport function getCache(): RedisCacheService {\n  if (!cacheInstance) {\n    cacheInstance = createCache({});\n  }\n  return cacheInstance;\n}\n\n// ===== CACHE DECORATORS =====\n\n/**\n * Decorator for caching function results\n */\nexport function cached(ttl: number = 300, keyGenerator?: (...args: any[]) => string) {\n  return function (target: any, propertyName: string, descriptor: PropertyDescriptor) {\n    const method = descriptor.value;\n    \n    descriptor.value = async function (...args: any[]) {\n      const cache = getCache();\n      const key = keyGenerator \n        ? keyGenerator(...args)\n        : `${target.constructor.name}:${propertyName}:${JSON.stringify(args)}`;\n      \n      // Try to get from cache first\n      const cachedResult = await cache.get(key);\n      if (cachedResult !== null) {\n        return cachedResult;\n      }\n      \n      // Execute original method\n      const result = await method.apply(this, args);\n      \n      // Cache the result\n      await cache.set(key, result, { ttl });\n      \n      return result;\n    };\n  };\n}\n\n// ===== CACHE MIDDLEWARE =====\n\n/**\n * Express middleware for response caching\n */\nexport function cacheMiddleware(ttl: number = 60) {\n  const cache = getCache();\n  \n  return async (req: any, res: any, next: any) => {\n    if (req.method !== 'GET') {\n      return next();\n    }\n    \n    const key = `http:${req.originalUrl || req.url}`;\n    const cachedResponse = await cache.get(key);\n    \n    if (cachedResponse) {\n      res.set(cachedResponse.headers);\n      res.status(cachedResponse.status);\n      res.send(cachedResponse.body);\n      return;\n    }\n    \n    // Capture response\n    const originalSend = res.send;\n    res.send = function (body: any) {\n      cache.set(key, {\n        status: res.statusCode,\n        headers: res.getHeaders(),\n        body\n      }, { ttl });\n      \n      originalSend.call(this, body);\n    };\n    \n    next();\n  };\n}\n\nexport default getCache;\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "8f0ebdbb8f3e97f1a69d4b8ec17149f04f64c306"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2in74uxzzh = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2in74uxzzh();
cov_2in74uxzzh().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2in74uxzzh().s[1]++;
exports.createCache = createCache;
/* istanbul ignore next */
cov_2in74uxzzh().s[2]++;
exports.getCache = getCache;
/* istanbul ignore next */
cov_2in74uxzzh().s[3]++;
exports.cached = cached;
/* istanbul ignore next */
cov_2in74uxzzh().s[4]++;
exports.cacheMiddleware = cacheMiddleware;
const errors_1 =
/* istanbul ignore next */
(cov_2in74uxzzh().s[5]++, require("@/lib/errors"));
// Conditional Redis import to avoid build errors when ioredis is not installed
let Redis =
/* istanbul ignore next */
(cov_2in74uxzzh().s[6]++, null);
/* istanbul ignore next */
cov_2in74uxzzh().s[7]++;
try {
  /* istanbul ignore next */
  cov_2in74uxzzh().s[8]++;
  Redis = require('ioredis');
} catch (error) {
  /* istanbul ignore next */
  cov_2in74uxzzh().s[9]++;
  if (process.env.NODE_ENV !== 'development') {
    /* istanbul ignore next */
    cov_2in74uxzzh().b[0][0]++;
    cov_2in74uxzzh().s[10]++;
    console.warn('⚠️ ioredis package not found - Redis cache will be disabled');
  } else
  /* istanbul ignore next */
  {
    cov_2in74uxzzh().b[0][1]++;
  }
}
// ===== CACHE IMPLEMENTATION =====
class RedisCacheService {
  constructor(config) {
    /* istanbul ignore next */
    cov_2in74uxzzh().f[0]++;
    cov_2in74uxzzh().s[11]++;
    this.client = null;
    /* istanbul ignore next */
    cov_2in74uxzzh().s[12]++;
    this.fallbackCache = new Map();
    /* istanbul ignore next */
    cov_2in74uxzzh().s[13]++;
    this.stats = {
      hits: 0,
      misses: 0,
      errors: 0,
      hitRatio: 0,
      connectionStatus: 'disconnected'
    };
    // Circuit breaker state
    /* istanbul ignore next */
    cov_2in74uxzzh().s[14]++;
    this.circuitBreakerOpen = false;
    /* istanbul ignore next */
    cov_2in74uxzzh().s[15]++;
    this.circuitBreakerCount = 0;
    /* istanbul ignore next */
    cov_2in74uxzzh().s[16]++;
    this.lastCircuitBreakerReset = Date.now();
    // Performance tracking
    /* istanbul ignore next */
    cov_2in74uxzzh().s[17]++;
    this.startTime = Date.now();
    /* istanbul ignore next */
    cov_2in74uxzzh().s[18]++;
    this.config = {
      host:
      /* istanbul ignore next */
      (cov_2in74uxzzh().b[1][0]++, config.host) ||
      /* istanbul ignore next */
      (cov_2in74uxzzh().b[1][1]++, process.env.REDIS_HOST) ||
      /* istanbul ignore next */
      (cov_2in74uxzzh().b[1][2]++, 'localhost'),
      port:
      /* istanbul ignore next */
      (cov_2in74uxzzh().b[2][0]++, config.port) ||
      /* istanbul ignore next */
      (cov_2in74uxzzh().b[2][1]++, parseInt(
      /* istanbul ignore next */
      (cov_2in74uxzzh().b[3][0]++, process.env.REDIS_PORT) ||
      /* istanbul ignore next */
      (cov_2in74uxzzh().b[3][1]++, '6379'))),
      password:
      /* istanbul ignore next */
      (cov_2in74uxzzh().b[4][0]++, config.password) ||
      /* istanbul ignore next */
      (cov_2in74uxzzh().b[4][1]++, process.env.REDIS_PASSWORD),
      ssl:
      /* istanbul ignore next */
      (cov_2in74uxzzh().b[5][0]++, config.ssl) ||
      /* istanbul ignore next */
      (cov_2in74uxzzh().b[5][1]++, process.env.REDIS_SSL === 'true'),
      keyPrefix:
      /* istanbul ignore next */
      (cov_2in74uxzzh().b[6][0]++, config.keyPrefix) ||
      /* istanbul ignore next */
      (cov_2in74uxzzh().b[6][1]++, `${
      /* istanbul ignore next */
      (cov_2in74uxzzh().b[7][0]++, process.env.NODE_ENV) ||
      /* istanbul ignore next */
      (cov_2in74uxzzh().b[7][1]++, 'dev')}:`),
      defaultTTL:
      /* istanbul ignore next */
      (cov_2in74uxzzh().b[8][0]++, config.defaultTTL) ||
      /* istanbul ignore next */
      (cov_2in74uxzzh().b[8][1]++, 300),
      // 5 minutes
      maxConnections:
      /* istanbul ignore next */
      (cov_2in74uxzzh().b[9][0]++, config.maxConnections) ||
      /* istanbul ignore next */
      (cov_2in74uxzzh().b[9][1]++, 50),
      retryDelayOnFailover:
      /* istanbul ignore next */
      (cov_2in74uxzzh().b[10][0]++, config.retryDelayOnFailover) ||
      /* istanbul ignore next */
      (cov_2in74uxzzh().b[10][1]++, 100),
      retryTimeoutInMilliseconds:
      /* istanbul ignore next */
      (cov_2in74uxzzh().b[11][0]++, config.retryTimeoutInMilliseconds) ||
      /* istanbul ignore next */
      (cov_2in74uxzzh().b[11][1]++, 5000),
      enableCircuitBreaker: config.enableCircuitBreaker !== undefined ?
      /* istanbul ignore next */
      (cov_2in74uxzzh().b[12][0]++, config.enableCircuitBreaker) :
      /* istanbul ignore next */
      (cov_2in74uxzzh().b[12][1]++, true),
      circuitBreakerThreshold:
      /* istanbul ignore next */
      (cov_2in74uxzzh().b[13][0]++, config.circuitBreakerThreshold) ||
      /* istanbul ignore next */
      (cov_2in74uxzzh().b[13][1]++, 5),
      fallbackToMemory: config.fallbackToMemory !== undefined ?
      /* istanbul ignore next */
      (cov_2in74uxzzh().b[14][0]++, config.fallbackToMemory) :
      /* istanbul ignore next */
      (cov_2in74uxzzh().b[14][1]++, true)
    };
    // Initialize Redis connection in non-development environments
    /* istanbul ignore next */
    cov_2in74uxzzh().s[19]++;
    if (
    /* istanbul ignore next */
    (cov_2in74uxzzh().b[16][0]++, process.env.NODE_ENV !== 'development') ||
    /* istanbul ignore next */
    (cov_2in74uxzzh().b[16][1]++, process.env.FORCE_REDIS === 'true')) {
      /* istanbul ignore next */
      cov_2in74uxzzh().b[15][0]++;
      cov_2in74uxzzh().s[20]++;
      this.initializeRedis();
    } else {
      /* istanbul ignore next */
      cov_2in74uxzzh().b[15][1]++;
      cov_2in74uxzzh().s[21]++;
      console.log('🔧 Redis cache running in memory-only mode for development');
    }
    // Start periodic cleanup for fallback cache
    /* istanbul ignore next */
    cov_2in74uxzzh().s[22]++;
    this.startFallbackCleanup();
  }
  // ===== INITIALIZATION =====
  async initializeRedis() {
    /* istanbul ignore next */
    cov_2in74uxzzh().f[1]++;
    cov_2in74uxzzh().s[23]++;
    try {
      /* istanbul ignore next */
      cov_2in74uxzzh().s[24]++;
      // Skip Redis initialization if Redis is not available
      if (!Redis) {
        /* istanbul ignore next */
        cov_2in74uxzzh().b[17][0]++;
        cov_2in74uxzzh().s[25]++;
        console.log('🚫 Redis package not available - using memory-only cache');
        /* istanbul ignore next */
        cov_2in74uxzzh().s[26]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_2in74uxzzh().b[17][1]++;
      }
      cov_2in74uxzzh().s[27]++;
      this.stats.connectionStatus = 'connecting';
      const redisOptions =
      /* istanbul ignore next */
      (cov_2in74uxzzh().s[28]++, {
        host: this.config.host,
        port: this.config.port,
        password: this.config.password,
        tls: this.config.ssl ?
        /* istanbul ignore next */
        (cov_2in74uxzzh().b[18][0]++, {}) :
        /* istanbul ignore next */
        (cov_2in74uxzzh().b[18][1]++, undefined),
        keyPrefix: this.config.keyPrefix,
        // Connection settings
        connectTimeout: 10000,
        lazyConnect: true,
        maxRetriesPerRequest: 3,
        retryDelayOnFailover: this.config.retryDelayOnFailover,
        // Performance optimizations
        enableReadyCheck: true,
        maxLoadingTimeout: 5000,
        keepAlive: 30000,
        // Connection pooling
        family: 4,
        // Use IPv4
        db: 0
      });
      /* istanbul ignore next */
      cov_2in74uxzzh().s[29]++;
      this.client = new Redis(redisOptions);
      // Event handlers
      /* istanbul ignore next */
      cov_2in74uxzzh().s[30]++;
      this.client.on('connect', () => {
        /* istanbul ignore next */
        cov_2in74uxzzh().f[2]++;
        cov_2in74uxzzh().s[31]++;
        console.log('✅ Redis connected successfully');
        /* istanbul ignore next */
        cov_2in74uxzzh().s[32]++;
        this.stats.connectionStatus = 'connected';
        /* istanbul ignore next */
        cov_2in74uxzzh().s[33]++;
        this.circuitBreakerOpen = false;
        /* istanbul ignore next */
        cov_2in74uxzzh().s[34]++;
        this.circuitBreakerCount = 0;
      });
      /* istanbul ignore next */
      cov_2in74uxzzh().s[35]++;
      this.client.on('error', error => {
        /* istanbul ignore next */
        cov_2in74uxzzh().f[3]++;
        cov_2in74uxzzh().s[36]++;
        console.error('❌ Redis connection error:', error);
        /* istanbul ignore next */
        cov_2in74uxzzh().s[37]++;
        this.stats.connectionStatus = 'disconnected';
        /* istanbul ignore next */
        cov_2in74uxzzh().s[38]++;
        this.stats.lastError = error.message;
        /* istanbul ignore next */
        cov_2in74uxzzh().s[39]++;
        this.stats.errors++;
        // Circuit breaker logic
        /* istanbul ignore next */
        cov_2in74uxzzh().s[40]++;
        if (this.config.enableCircuitBreaker) {
          /* istanbul ignore next */
          cov_2in74uxzzh().b[19][0]++;
          cov_2in74uxzzh().s[41]++;
          this.circuitBreakerCount++;
          /* istanbul ignore next */
          cov_2in74uxzzh().s[42]++;
          if (this.circuitBreakerCount >= this.config.circuitBreakerThreshold) {
            /* istanbul ignore next */
            cov_2in74uxzzh().b[20][0]++;
            cov_2in74uxzzh().s[43]++;
            this.circuitBreakerOpen = true;
            /* istanbul ignore next */
            cov_2in74uxzzh().s[44]++;
            console.warn('🚨 Redis circuit breaker opened - falling back to memory cache');
          } else
          /* istanbul ignore next */
          {
            cov_2in74uxzzh().b[20][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_2in74uxzzh().b[19][1]++;
        }
        cov_2in74uxzzh().s[45]++;
        (0, errors_1.logServerError)(error, {
          service: 'redis-cache',
          action: 'connection'
        });
      });
      /* istanbul ignore next */
      cov_2in74uxzzh().s[46]++;
      this.client.on('reconnecting', () => {
        /* istanbul ignore next */
        cov_2in74uxzzh().f[4]++;
        cov_2in74uxzzh().s[47]++;
        console.log('🔄 Redis reconnecting...');
        /* istanbul ignore next */
        cov_2in74uxzzh().s[48]++;
        this.stats.connectionStatus = 'connecting';
      });
      // Attempt initial connection
      /* istanbul ignore next */
      cov_2in74uxzzh().s[49]++;
      await this.client.connect();
    } catch (error) {
      /* istanbul ignore next */
      cov_2in74uxzzh().s[50]++;
      console.error('❌ Failed to initialize Redis:', error);
      /* istanbul ignore next */
      cov_2in74uxzzh().s[51]++;
      this.stats.connectionStatus = 'disconnected';
      /* istanbul ignore next */
      cov_2in74uxzzh().s[52]++;
      if (!this.config.fallbackToMemory) {
        /* istanbul ignore next */
        cov_2in74uxzzh().b[21][0]++;
        cov_2in74uxzzh().s[53]++;
        throw error;
      } else
      /* istanbul ignore next */
      {
        cov_2in74uxzzh().b[21][1]++;
      }
      cov_2in74uxzzh().s[54]++;
      console.log('⚠️ Continuing with memory-only cache');
    }
  }
  // ===== CORE CACHE OPERATIONS =====
  /**
   * Get value from cache with automatic fallback
   */
  async get(key) {
    /* istanbul ignore next */
    cov_2in74uxzzh().f[5]++;
    const fullKey =
    /* istanbul ignore next */
    (cov_2in74uxzzh().s[55]++, this.buildKey(key));
    const startTime =
    /* istanbul ignore next */
    (cov_2in74uxzzh().s[56]++, Date.now());
    /* istanbul ignore next */
    cov_2in74uxzzh().s[57]++;
    try {
      /* istanbul ignore next */
      cov_2in74uxzzh().s[58]++;
      // Try Redis first (if available and circuit breaker is closed)
      if (this.isRedisAvailable()) {
        /* istanbul ignore next */
        cov_2in74uxzzh().b[22][0]++;
        const value =
        /* istanbul ignore next */
        (cov_2in74uxzzh().s[59]++, await this.client.get(fullKey));
        /* istanbul ignore next */
        cov_2in74uxzzh().s[60]++;
        if (value !== null) {
          /* istanbul ignore next */
          cov_2in74uxzzh().b[23][0]++;
          cov_2in74uxzzh().s[61]++;
          this.recordHit(Date.now() - startTime);
          /* istanbul ignore next */
          cov_2in74uxzzh().s[62]++;
          return this.deserialize(value);
        } else
        /* istanbul ignore next */
        {
          cov_2in74uxzzh().b[23][1]++;
        }
        cov_2in74uxzzh().s[63]++;
        this.recordMiss(Date.now() - startTime);
        /* istanbul ignore next */
        cov_2in74uxzzh().s[64]++;
        return null;
      } else
      /* istanbul ignore next */
      {
        cov_2in74uxzzh().b[22][1]++;
      }
      // Fallback to memory cache
      cov_2in74uxzzh().s[65]++;
      return this.getFromMemory(fullKey);
    } catch (error) {
      /* istanbul ignore next */
      cov_2in74uxzzh().s[66]++;
      console.error(`Redis GET error for key ${key}:`, error);
      /* istanbul ignore next */
      cov_2in74uxzzh().s[67]++;
      this.recordError();
      // Fallback to memory cache on Redis error
      /* istanbul ignore next */
      cov_2in74uxzzh().s[68]++;
      if (this.config.fallbackToMemory) {
        /* istanbul ignore next */
        cov_2in74uxzzh().b[24][0]++;
        cov_2in74uxzzh().s[69]++;
        return this.getFromMemory(fullKey);
      } else
      /* istanbul ignore next */
      {
        cov_2in74uxzzh().b[24][1]++;
      }
      cov_2in74uxzzh().s[70]++;
      return null;
    }
  }
  /**
   * Set value in cache with TTL and tags
   */
  async set(key, value, options =
  /* istanbul ignore next */
  (cov_2in74uxzzh().b[25][0]++, {})) {
    /* istanbul ignore next */
    cov_2in74uxzzh().f[6]++;
    const fullKey =
    /* istanbul ignore next */
    (cov_2in74uxzzh().s[71]++, this.buildKey(key));
    const ttl =
    /* istanbul ignore next */
    (cov_2in74uxzzh().s[72]++,
    /* istanbul ignore next */
    (cov_2in74uxzzh().b[26][0]++, options.ttl) ||
    /* istanbul ignore next */
    (cov_2in74uxzzh().b[26][1]++, this.config.defaultTTL));
    const serializedValue =
    /* istanbul ignore next */
    (cov_2in74uxzzh().s[73]++, this.serialize(value, options.compress));
    /* istanbul ignore next */
    cov_2in74uxzzh().s[74]++;
    try {
      /* istanbul ignore next */
      cov_2in74uxzzh().s[75]++;
      // Set in Redis (if available)
      if (this.isRedisAvailable()) {
        /* istanbul ignore next */
        cov_2in74uxzzh().b[27][0]++;
        const result =
        /* istanbul ignore next */
        (cov_2in74uxzzh().s[76]++, await this.client.setex(fullKey, ttl, serializedValue));
        // Store tags for bulk invalidation
        /* istanbul ignore next */
        cov_2in74uxzzh().s[77]++;
        if (
        /* istanbul ignore next */
        (cov_2in74uxzzh().b[29][0]++, options.tags) &&
        /* istanbul ignore next */
        (cov_2in74uxzzh().b[29][1]++, options.tags.length > 0)) {
          /* istanbul ignore next */
          cov_2in74uxzzh().b[28][0]++;
          cov_2in74uxzzh().s[78]++;
          await this.setTags(fullKey, options.tags, ttl);
        } else
        /* istanbul ignore next */
        {
          cov_2in74uxzzh().b[28][1]++;
        }
        cov_2in74uxzzh().s[79]++;
        return result === 'OK';
      } else
      /* istanbul ignore next */
      {
        cov_2in74uxzzh().b[27][1]++;
      }
      // Fallback to memory cache
      cov_2in74uxzzh().s[80]++;
      return this.setInMemory(fullKey, value, ttl, options.tags);
    } catch (error) {
      /* istanbul ignore next */
      cov_2in74uxzzh().s[81]++;
      console.error(`Redis SET error for key ${key}:`, error);
      /* istanbul ignore next */
      cov_2in74uxzzh().s[82]++;
      this.recordError();
      // Fallback to memory cache on Redis error
      /* istanbul ignore next */
      cov_2in74uxzzh().s[83]++;
      if (this.config.fallbackToMemory) {
        /* istanbul ignore next */
        cov_2in74uxzzh().b[30][0]++;
        cov_2in74uxzzh().s[84]++;
        return this.setInMemory(fullKey, value, ttl, options.tags);
      } else
      /* istanbul ignore next */
      {
        cov_2in74uxzzh().b[30][1]++;
      }
      cov_2in74uxzzh().s[85]++;
      return false;
    }
  }
  /**
   * Delete key from cache
   */
  async delete(key) {
    /* istanbul ignore next */
    cov_2in74uxzzh().f[7]++;
    const fullKey =
    /* istanbul ignore next */
    (cov_2in74uxzzh().s[86]++, this.buildKey(key));
    /* istanbul ignore next */
    cov_2in74uxzzh().s[87]++;
    try {
      /* istanbul ignore next */
      cov_2in74uxzzh().s[88]++;
      if (this.isRedisAvailable()) {
        /* istanbul ignore next */
        cov_2in74uxzzh().b[31][0]++;
        const result =
        /* istanbul ignore next */
        (cov_2in74uxzzh().s[89]++, await this.client.del(fullKey));
        /* istanbul ignore next */
        cov_2in74uxzzh().s[90]++;
        return result > 0;
      } else
      /* istanbul ignore next */
      {
        cov_2in74uxzzh().b[31][1]++;
      }
      // Delete from memory cache
      cov_2in74uxzzh().s[91]++;
      return this.fallbackCache.delete(fullKey);
    } catch (error) {
      /* istanbul ignore next */
      cov_2in74uxzzh().s[92]++;
      console.error(`Redis DEL error for key ${key}:`, error);
      /* istanbul ignore next */
      cov_2in74uxzzh().s[93]++;
      this.recordError();
      // Delete from memory cache on Redis error
      /* istanbul ignore next */
      cov_2in74uxzzh().s[94]++;
      this.fallbackCache.delete(fullKey);
      /* istanbul ignore next */
      cov_2in74uxzzh().s[95]++;
      return false;
    }
  }
  /**
   * Check if key exists in cache
   */
  async exists(key) {
    /* istanbul ignore next */
    cov_2in74uxzzh().f[8]++;
    const fullKey =
    /* istanbul ignore next */
    (cov_2in74uxzzh().s[96]++, this.buildKey(key));
    /* istanbul ignore next */
    cov_2in74uxzzh().s[97]++;
    try {
      /* istanbul ignore next */
      cov_2in74uxzzh().s[98]++;
      if (this.isRedisAvailable()) {
        /* istanbul ignore next */
        cov_2in74uxzzh().b[32][0]++;
        const result =
        /* istanbul ignore next */
        (cov_2in74uxzzh().s[99]++, await this.client.exists(fullKey));
        /* istanbul ignore next */
        cov_2in74uxzzh().s[100]++;
        return result === 1;
      } else
      /* istanbul ignore next */
      {
        cov_2in74uxzzh().b[32][1]++;
      }
      // Check memory cache
      const cached =
      /* istanbul ignore next */
      (cov_2in74uxzzh().s[101]++, this.fallbackCache.get(fullKey));
      /* istanbul ignore next */
      cov_2in74uxzzh().s[102]++;
      return /* istanbul ignore next */(cov_2in74uxzzh().b[33][0]++, cached !== undefined) &&
      /* istanbul ignore next */
      (cov_2in74uxzzh().b[33][1]++, cached.expiry > Date.now());
    } catch (error) {
      /* istanbul ignore next */
      cov_2in74uxzzh().s[103]++;
      console.error(`Redis EXISTS error for key ${key}:`, error);
      /* istanbul ignore next */
      cov_2in74uxzzh().s[104]++;
      this.recordError();
      /* istanbul ignore next */
      cov_2in74uxzzh().s[105]++;
      return false;
    }
  }
  /**
   * Increment numeric value atomically
   */
  async increment(key, delta =
  /* istanbul ignore next */
  (cov_2in74uxzzh().b[34][0]++, 1)) {
    /* istanbul ignore next */
    cov_2in74uxzzh().f[9]++;
    const fullKey =
    /* istanbul ignore next */
    (cov_2in74uxzzh().s[106]++, this.buildKey(key));
    /* istanbul ignore next */
    cov_2in74uxzzh().s[107]++;
    try {
      /* istanbul ignore next */
      cov_2in74uxzzh().s[108]++;
      if (this.isRedisAvailable()) {
        /* istanbul ignore next */
        cov_2in74uxzzh().b[35][0]++;
        cov_2in74uxzzh().s[109]++;
        return await this.client.incrby(fullKey, delta);
      } else
      /* istanbul ignore next */
      {
        cov_2in74uxzzh().b[35][1]++;
      }
      // Memory fallback for increment
      const current =
      /* istanbul ignore next */
      (cov_2in74uxzzh().s[110]++,
      /* istanbul ignore next */
      (cov_2in74uxzzh().b[36][0]++, await this.get(key)) ||
      /* istanbul ignore next */
      (cov_2in74uxzzh().b[36][1]++, 0));
      const newValue =
      /* istanbul ignore next */
      (cov_2in74uxzzh().s[111]++, current + delta);
      /* istanbul ignore next */
      cov_2in74uxzzh().s[112]++;
      await this.set(key, newValue);
      /* istanbul ignore next */
      cov_2in74uxzzh().s[113]++;
      return newValue;
    } catch (error) {
      /* istanbul ignore next */
      cov_2in74uxzzh().s[114]++;
      console.error(`Redis INCR error for key ${key}:`, error);
      /* istanbul ignore next */
      cov_2in74uxzzh().s[115]++;
      this.recordError();
      /* istanbul ignore next */
      cov_2in74uxzzh().s[116]++;
      return 0;
    }
  }
  /**
   * Set expiration on existing key
   */
  async expire(key, ttl) {
    /* istanbul ignore next */
    cov_2in74uxzzh().f[10]++;
    const fullKey =
    /* istanbul ignore next */
    (cov_2in74uxzzh().s[117]++, this.buildKey(key));
    /* istanbul ignore next */
    cov_2in74uxzzh().s[118]++;
    try {
      /* istanbul ignore next */
      cov_2in74uxzzh().s[119]++;
      if (this.isRedisAvailable()) {
        /* istanbul ignore next */
        cov_2in74uxzzh().b[37][0]++;
        const result =
        /* istanbul ignore next */
        (cov_2in74uxzzh().s[120]++, await this.client.expire(fullKey, ttl));
        /* istanbul ignore next */
        cov_2in74uxzzh().s[121]++;
        return result === 1;
      } else
      /* istanbul ignore next */
      {
        cov_2in74uxzzh().b[37][1]++;
      }
      // Update expiry in memory cache
      const cached =
      /* istanbul ignore next */
      (cov_2in74uxzzh().s[122]++, this.fallbackCache.get(fullKey));
      /* istanbul ignore next */
      cov_2in74uxzzh().s[123]++;
      if (cached) {
        /* istanbul ignore next */
        cov_2in74uxzzh().b[38][0]++;
        cov_2in74uxzzh().s[124]++;
        cached.expiry = Date.now() + ttl * 1000;
        /* istanbul ignore next */
        cov_2in74uxzzh().s[125]++;
        return true;
      } else
      /* istanbul ignore next */
      {
        cov_2in74uxzzh().b[38][1]++;
      }
      cov_2in74uxzzh().s[126]++;
      return false;
    } catch (error) {
      /* istanbul ignore next */
      cov_2in74uxzzh().s[127]++;
      console.error(`Redis EXPIRE error for key ${key}:`, error);
      /* istanbul ignore next */
      cov_2in74uxzzh().s[128]++;
      this.recordError();
      /* istanbul ignore next */
      cov_2in74uxzzh().s[129]++;
      return false;
    }
  }
  // ===== BULK OPERATIONS =====
  /**
   * Get multiple keys at once
   */
  async mget(keys) {
    /* istanbul ignore next */
    cov_2in74uxzzh().f[11]++;
    const fullKeys =
    /* istanbul ignore next */
    (cov_2in74uxzzh().s[130]++, keys.map(key => {
      /* istanbul ignore next */
      cov_2in74uxzzh().f[12]++;
      cov_2in74uxzzh().s[131]++;
      return this.buildKey(key);
    }));
    const result =
    /* istanbul ignore next */
    (cov_2in74uxzzh().s[132]++, {});
    /* istanbul ignore next */
    cov_2in74uxzzh().s[133]++;
    try {
      /* istanbul ignore next */
      cov_2in74uxzzh().s[134]++;
      if (this.isRedisAvailable()) {
        /* istanbul ignore next */
        cov_2in74uxzzh().b[39][0]++;
        const values =
        /* istanbul ignore next */
        (cov_2in74uxzzh().s[135]++, await this.client.mget(fullKeys));
        /* istanbul ignore next */
        cov_2in74uxzzh().s[136]++;
        keys.forEach((key, index) => {
          /* istanbul ignore next */
          cov_2in74uxzzh().f[13]++;
          const value =
          /* istanbul ignore next */
          (cov_2in74uxzzh().s[137]++, values[index]);
          /* istanbul ignore next */
          cov_2in74uxzzh().s[138]++;
          result[key] = value !== null ?
          /* istanbul ignore next */
          (cov_2in74uxzzh().b[40][0]++, this.deserialize(value)) :
          /* istanbul ignore next */
          (cov_2in74uxzzh().b[40][1]++, null);
          /* istanbul ignore next */
          cov_2in74uxzzh().s[139]++;
          if (value !== null) {
            /* istanbul ignore next */
            cov_2in74uxzzh().b[41][0]++;
            cov_2in74uxzzh().s[140]++;
            this.stats.hits++;
          } else {
            /* istanbul ignore next */
            cov_2in74uxzzh().b[41][1]++;
            cov_2in74uxzzh().s[141]++;
            this.stats.misses++;
          }
        });
        /* istanbul ignore next */
        cov_2in74uxzzh().s[142]++;
        return result;
      } else
      /* istanbul ignore next */
      {
        cov_2in74uxzzh().b[39][1]++;
      }
      // Memory fallback
      cov_2in74uxzzh().s[143]++;
      keys.forEach(key => {
        /* istanbul ignore next */
        cov_2in74uxzzh().f[14]++;
        const fullKey =
        /* istanbul ignore next */
        (cov_2in74uxzzh().s[144]++, this.buildKey(key));
        const cached =
        /* istanbul ignore next */
        (cov_2in74uxzzh().s[145]++, this.fallbackCache.get(fullKey));
        /* istanbul ignore next */
        cov_2in74uxzzh().s[146]++;
        if (
        /* istanbul ignore next */
        (cov_2in74uxzzh().b[43][0]++, cached) &&
        /* istanbul ignore next */
        (cov_2in74uxzzh().b[43][1]++, cached.expiry > Date.now())) {
          /* istanbul ignore next */
          cov_2in74uxzzh().b[42][0]++;
          cov_2in74uxzzh().s[147]++;
          result[key] = cached.value;
          /* istanbul ignore next */
          cov_2in74uxzzh().s[148]++;
          this.stats.hits++;
        } else {
          /* istanbul ignore next */
          cov_2in74uxzzh().b[42][1]++;
          cov_2in74uxzzh().s[149]++;
          result[key] = null;
          /* istanbul ignore next */
          cov_2in74uxzzh().s[150]++;
          this.stats.misses++;
        }
      });
      /* istanbul ignore next */
      cov_2in74uxzzh().s[151]++;
      return result;
    } catch (error) {
      /* istanbul ignore next */
      cov_2in74uxzzh().s[152]++;
      console.error('Redis MGET error:', error);
      /* istanbul ignore next */
      cov_2in74uxzzh().s[153]++;
      this.recordError();
      /* istanbul ignore next */
      cov_2in74uxzzh().s[154]++;
      return result;
    }
  }
  /**
   * Invalidate cache by tags
   */
  async invalidateByTag(tag) {
    /* istanbul ignore next */
    cov_2in74uxzzh().f[15]++;
    var _a;
    /* istanbul ignore next */
    cov_2in74uxzzh().s[155]++;
    try {
      /* istanbul ignore next */
      cov_2in74uxzzh().s[156]++;
      if (this.isRedisAvailable()) {
        /* istanbul ignore next */
        cov_2in74uxzzh().b[44][0]++;
        const tagKey =
        /* istanbul ignore next */
        (cov_2in74uxzzh().s[157]++, this.buildTagKey(tag));
        const keys =
        /* istanbul ignore next */
        (cov_2in74uxzzh().s[158]++, await this.client.smembers(tagKey));
        /* istanbul ignore next */
        cov_2in74uxzzh().s[159]++;
        if (keys.length > 0) {
          /* istanbul ignore next */
          cov_2in74uxzzh().b[45][0]++;
          const pipeline =
          /* istanbul ignore next */
          (cov_2in74uxzzh().s[160]++, this.client.pipeline());
          /* istanbul ignore next */
          cov_2in74uxzzh().s[161]++;
          keys.forEach(key => {
            /* istanbul ignore next */
            cov_2in74uxzzh().f[16]++;
            cov_2in74uxzzh().s[162]++;
            return pipeline.del(key);
          });
          /* istanbul ignore next */
          cov_2in74uxzzh().s[163]++;
          pipeline.del(tagKey);
          const results =
          /* istanbul ignore next */
          (cov_2in74uxzzh().s[164]++, await pipeline.exec());
          /* istanbul ignore next */
          cov_2in74uxzzh().s[165]++;
          return /* istanbul ignore next */(cov_2in74uxzzh().b[46][0]++,
          /* istanbul ignore next */
          (cov_2in74uxzzh().b[48][0]++, results === null) ||
          /* istanbul ignore next */
          (cov_2in74uxzzh().b[48][1]++, results === void 0) ?
          /* istanbul ignore next */
          (cov_2in74uxzzh().b[47][0]++, void 0) :
          /* istanbul ignore next */
          (cov_2in74uxzzh().b[47][1]++, results.length)) ||
          /* istanbul ignore next */
          (cov_2in74uxzzh().b[46][1]++, 0);
        } else
        /* istanbul ignore next */
        {
          cov_2in74uxzzh().b[45][1]++;
        }
        cov_2in74uxzzh().s[166]++;
        return 0;
      } else
      /* istanbul ignore next */
      {
        cov_2in74uxzzh().b[44][1]++;
      }
      // Memory fallback - iterate through all keys
      let deleted =
      /* istanbul ignore next */
      (cov_2in74uxzzh().s[167]++, 0);
      /* istanbul ignore next */
      cov_2in74uxzzh().s[168]++;
      for (const [key, cached] of this.fallbackCache.entries()) {
        /* istanbul ignore next */
        cov_2in74uxzzh().s[169]++;
        if (
        /* istanbul ignore next */
        (cov_2in74uxzzh().b[51][0]++, (_a = cached.tags) === null) ||
        /* istanbul ignore next */
        (cov_2in74uxzzh().b[51][1]++, _a === void 0) ?
        /* istanbul ignore next */
        (cov_2in74uxzzh().b[50][0]++, void 0) :
        /* istanbul ignore next */
        (cov_2in74uxzzh().b[50][1]++, _a.includes(tag))) {
          /* istanbul ignore next */
          cov_2in74uxzzh().b[49][0]++;
          cov_2in74uxzzh().s[170]++;
          this.fallbackCache.delete(key);
          /* istanbul ignore next */
          cov_2in74uxzzh().s[171]++;
          deleted++;
        } else
        /* istanbul ignore next */
        {
          cov_2in74uxzzh().b[49][1]++;
        }
      }
      /* istanbul ignore next */
      cov_2in74uxzzh().s[172]++;
      return deleted;
    } catch (error) {
      /* istanbul ignore next */
      cov_2in74uxzzh().s[173]++;
      console.error(`Error invalidating tag ${tag}:`, error);
      /* istanbul ignore next */
      cov_2in74uxzzh().s[174]++;
      this.recordError();
      /* istanbul ignore next */
      cov_2in74uxzzh().s[175]++;
      return 0;
    }
  }
  /**
   * Clear all cache data
   */
  async clear() {
    /* istanbul ignore next */
    cov_2in74uxzzh().f[17]++;
    cov_2in74uxzzh().s[176]++;
    try {
      /* istanbul ignore next */
      cov_2in74uxzzh().s[177]++;
      if (this.isRedisAvailable()) {
        /* istanbul ignore next */
        cov_2in74uxzzh().b[52][0]++;
        cov_2in74uxzzh().s[178]++;
        await this.client.flushdb();
      } else
      /* istanbul ignore next */
      {
        cov_2in74uxzzh().b[52][1]++;
      }
      // Clear memory cache
      cov_2in74uxzzh().s[179]++;
      this.fallbackCache.clear();
      /* istanbul ignore next */
      cov_2in74uxzzh().s[180]++;
      console.log('🧹 Cache cleared successfully');
      /* istanbul ignore next */
      cov_2in74uxzzh().s[181]++;
      return true;
    } catch (error) {
      /* istanbul ignore next */
      cov_2in74uxzzh().s[182]++;
      console.error('Error clearing cache:', error);
      /* istanbul ignore next */
      cov_2in74uxzzh().s[183]++;
      this.recordError();
      /* istanbul ignore next */
      cov_2in74uxzzh().s[184]++;
      return false;
    }
  }
  // ===== UTILITY METHODS =====
  /**
   * Get cache statistics
   */
  getStats() {
    /* istanbul ignore next */
    cov_2in74uxzzh().f[18]++;
    const totalRequests =
    /* istanbul ignore next */
    (cov_2in74uxzzh().s[185]++, this.stats.hits + this.stats.misses);
    /* istanbul ignore next */
    cov_2in74uxzzh().s[186]++;
    this.stats.hitRatio = totalRequests > 0 ?
    /* istanbul ignore next */
    (cov_2in74uxzzh().b[53][0]++, this.stats.hits / totalRequests * 100) :
    /* istanbul ignore next */
    (cov_2in74uxzzh().b[53][1]++, 0);
    /* istanbul ignore next */
    cov_2in74uxzzh().s[187]++;
    return Object.assign(Object.assign({}, this.stats), {
      uptime: Date.now() - this.startTime
    });
  }
  /**
   * Health check
   */
  async healthCheck() {
    /* istanbul ignore next */
    cov_2in74uxzzh().f[19]++;
    cov_2in74uxzzh().s[188]++;
    try {
      /* istanbul ignore next */
      cov_2in74uxzzh().s[189]++;
      if (this.isRedisAvailable()) {
        /* istanbul ignore next */
        cov_2in74uxzzh().b[54][0]++;
        cov_2in74uxzzh().s[190]++;
        await this.client.ping();
        /* istanbul ignore next */
        cov_2in74uxzzh().s[191]++;
        return {
          healthy: true,
          details: Object.assign({
            circuitBreakerOpen: this.circuitBreakerOpen
          }, this.getStats())
        };
      } else
      /* istanbul ignore next */
      {
        cov_2in74uxzzh().b[54][1]++;
      }
      cov_2in74uxzzh().s[192]++;
      return {
        healthy: this.config.fallbackToMemory,
        message: 'Redis unavailable, using memory cache',
        details: Object.assign({
          fallbackCacheSize: this.fallbackCache.size
        }, this.getStats())
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_2in74uxzzh().s[193]++;
      return {
        healthy: false,
        message: error instanceof Error ?
        /* istanbul ignore next */
        (cov_2in74uxzzh().b[55][0]++, error.message) :
        /* istanbul ignore next */
        (cov_2in74uxzzh().b[55][1]++, 'Unknown error'),
        details: this.getStats()
      };
    }
  }
  /**
   * Close Redis connection
   */
  async close() {
    /* istanbul ignore next */
    cov_2in74uxzzh().f[20]++;
    cov_2in74uxzzh().s[194]++;
    if (this.client) {
      /* istanbul ignore next */
      cov_2in74uxzzh().b[56][0]++;
      cov_2in74uxzzh().s[195]++;
      await this.client.disconnect();
      /* istanbul ignore next */
      cov_2in74uxzzh().s[196]++;
      this.client = null;
      /* istanbul ignore next */
      cov_2in74uxzzh().s[197]++;
      this.stats.connectionStatus = 'disconnected';
    } else
    /* istanbul ignore next */
    {
      cov_2in74uxzzh().b[56][1]++;
    }
    cov_2in74uxzzh().s[198]++;
    this.fallbackCache.clear();
  }
  // ===== PRIVATE HELPER METHODS =====
  buildKey(key) {
    /* istanbul ignore next */
    cov_2in74uxzzh().f[21]++;
    cov_2in74uxzzh().s[199]++;
    return `${this.config.keyPrefix}${key}`;
  }
  buildTagKey(tag) {
    /* istanbul ignore next */
    cov_2in74uxzzh().f[22]++;
    cov_2in74uxzzh().s[200]++;
    return `${this.config.keyPrefix}tag:${tag}`;
  }
  isRedisAvailable() {
    /* istanbul ignore next */
    cov_2in74uxzzh().f[23]++;
    cov_2in74uxzzh().s[201]++;
    return /* istanbul ignore next */(cov_2in74uxzzh().b[57][0]++, this.client !== null) &&
    /* istanbul ignore next */
    (cov_2in74uxzzh().b[57][1]++, this.stats.connectionStatus === 'connected') &&
    /* istanbul ignore next */
    (cov_2in74uxzzh().b[57][2]++, !this.circuitBreakerOpen);
  }
  serialize(value, compress =
  /* istanbul ignore next */
  (cov_2in74uxzzh().b[58][0]++, false)) {
    /* istanbul ignore next */
    cov_2in74uxzzh().f[24]++;
    const serialized =
    /* istanbul ignore next */
    (cov_2in74uxzzh().s[202]++, JSON.stringify(value));
    /* istanbul ignore next */
    cov_2in74uxzzh().s[203]++;
    if (
    /* istanbul ignore next */
    (cov_2in74uxzzh().b[60][0]++, compress) &&
    /* istanbul ignore next */
    (cov_2in74uxzzh().b[60][1]++, serialized.length > 1024)) {
      /* istanbul ignore next */
      cov_2in74uxzzh().b[59][0]++;
      cov_2in74uxzzh().s[204]++;
      // Could implement compression here (zlib, etc.)
      // For now, just return the JSON string
      return serialized;
    } else
    /* istanbul ignore next */
    {
      cov_2in74uxzzh().b[59][1]++;
    }
    cov_2in74uxzzh().s[205]++;
    return serialized;
  }
  deserialize(value) {
    /* istanbul ignore next */
    cov_2in74uxzzh().f[25]++;
    cov_2in74uxzzh().s[206]++;
    try {
      /* istanbul ignore next */
      cov_2in74uxzzh().s[207]++;
      return JSON.parse(value);
    } catch (error) {
      /* istanbul ignore next */
      cov_2in74uxzzh().s[208]++;
      console.error('Failed to deserialize cached value:', error);
      /* istanbul ignore next */
      cov_2in74uxzzh().s[209]++;
      return value;
    }
  }
  async setTags(key, tags, ttl) {
    /* istanbul ignore next */
    cov_2in74uxzzh().f[26]++;
    cov_2in74uxzzh().s[210]++;
    if (
    /* istanbul ignore next */
    (cov_2in74uxzzh().b[62][0]++, !this.isRedisAvailable()) ||
    /* istanbul ignore next */
    (cov_2in74uxzzh().b[62][1]++, !tags.length)) {
      /* istanbul ignore next */
      cov_2in74uxzzh().b[61][0]++;
      cov_2in74uxzzh().s[211]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2in74uxzzh().b[61][1]++;
    }
    const pipeline =
    /* istanbul ignore next */
    (cov_2in74uxzzh().s[212]++, this.client.pipeline());
    /* istanbul ignore next */
    cov_2in74uxzzh().s[213]++;
    tags.forEach(tag => {
      /* istanbul ignore next */
      cov_2in74uxzzh().f[27]++;
      const tagKey =
      /* istanbul ignore next */
      (cov_2in74uxzzh().s[214]++, this.buildTagKey(tag));
      /* istanbul ignore next */
      cov_2in74uxzzh().s[215]++;
      pipeline.sadd(tagKey, key);
      /* istanbul ignore next */
      cov_2in74uxzzh().s[216]++;
      pipeline.expire(tagKey, ttl);
    });
    /* istanbul ignore next */
    cov_2in74uxzzh().s[217]++;
    await pipeline.exec();
  }
  getFromMemory(key) {
    /* istanbul ignore next */
    cov_2in74uxzzh().f[28]++;
    const cached =
    /* istanbul ignore next */
    (cov_2in74uxzzh().s[218]++, this.fallbackCache.get(key));
    /* istanbul ignore next */
    cov_2in74uxzzh().s[219]++;
    if (!cached) {
      /* istanbul ignore next */
      cov_2in74uxzzh().b[63][0]++;
      cov_2in74uxzzh().s[220]++;
      this.recordMiss(0);
      /* istanbul ignore next */
      cov_2in74uxzzh().s[221]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_2in74uxzzh().b[63][1]++;
    }
    cov_2in74uxzzh().s[222]++;
    if (cached.expiry <= Date.now()) {
      /* istanbul ignore next */
      cov_2in74uxzzh().b[64][0]++;
      cov_2in74uxzzh().s[223]++;
      this.fallbackCache.delete(key);
      /* istanbul ignore next */
      cov_2in74uxzzh().s[224]++;
      this.recordMiss(0);
      /* istanbul ignore next */
      cov_2in74uxzzh().s[225]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_2in74uxzzh().b[64][1]++;
    }
    cov_2in74uxzzh().s[226]++;
    this.recordHit(0);
    /* istanbul ignore next */
    cov_2in74uxzzh().s[227]++;
    return cached.value;
  }
  setInMemory(key, value, ttl, tags) {
    /* istanbul ignore next */
    cov_2in74uxzzh().f[29]++;
    cov_2in74uxzzh().s[228]++;
    this.fallbackCache.set(key, {
      value,
      expiry: Date.now() + ttl * 1000,
      tags
    });
    /* istanbul ignore next */
    cov_2in74uxzzh().s[229]++;
    return true;
  }
  recordHit(latency) {
    /* istanbul ignore next */
    cov_2in74uxzzh().f[30]++;
    cov_2in74uxzzh().s[230]++;
    this.stats.hits++;
  }
  recordMiss(latency) {
    /* istanbul ignore next */
    cov_2in74uxzzh().f[31]++;
    cov_2in74uxzzh().s[231]++;
    this.stats.misses++;
  }
  recordError() {
    /* istanbul ignore next */
    cov_2in74uxzzh().f[32]++;
    cov_2in74uxzzh().s[232]++;
    this.stats.errors++;
    // Reset circuit breaker after 1 minute if errors decrease
    /* istanbul ignore next */
    cov_2in74uxzzh().s[233]++;
    if (
    /* istanbul ignore next */
    (cov_2in74uxzzh().b[66][0]++, this.circuitBreakerOpen) &&
    /* istanbul ignore next */
    (cov_2in74uxzzh().b[66][1]++, Date.now() - this.lastCircuitBreakerReset > 60000)) {
      /* istanbul ignore next */
      cov_2in74uxzzh().b[65][0]++;
      cov_2in74uxzzh().s[234]++;
      this.circuitBreakerOpen = false;
      /* istanbul ignore next */
      cov_2in74uxzzh().s[235]++;
      this.circuitBreakerCount = 0;
      /* istanbul ignore next */
      cov_2in74uxzzh().s[236]++;
      this.lastCircuitBreakerReset = Date.now();
      /* istanbul ignore next */
      cov_2in74uxzzh().s[237]++;
      console.log('🔄 Redis circuit breaker reset');
    } else
    /* istanbul ignore next */
    {
      cov_2in74uxzzh().b[65][1]++;
    }
  }
  startFallbackCleanup() {
    /* istanbul ignore next */
    cov_2in74uxzzh().f[33]++;
    cov_2in74uxzzh().s[238]++;
    // Clean expired entries every 5 minutes
    setInterval(() => {
      /* istanbul ignore next */
      cov_2in74uxzzh().f[34]++;
      const now =
      /* istanbul ignore next */
      (cov_2in74uxzzh().s[239]++, Date.now());
      /* istanbul ignore next */
      cov_2in74uxzzh().s[240]++;
      for (const [key, cached] of this.fallbackCache.entries()) {
        /* istanbul ignore next */
        cov_2in74uxzzh().s[241]++;
        if (cached.expiry <= now) {
          /* istanbul ignore next */
          cov_2in74uxzzh().b[67][0]++;
          cov_2in74uxzzh().s[242]++;
          this.fallbackCache.delete(key);
        } else
        /* istanbul ignore next */
        {
          cov_2in74uxzzh().b[67][1]++;
        }
      }
    }, 5 * 60 * 1000);
  }
}
// ===== CACHE FACTORY =====
let cacheInstance =
/* istanbul ignore next */
(cov_2in74uxzzh().s[243]++, null);
function createCache(config) {
  /* istanbul ignore next */
  cov_2in74uxzzh().f[35]++;
  const defaultConfig =
  /* istanbul ignore next */
  (cov_2in74uxzzh().s[244]++, {
    host:
    /* istanbul ignore next */
    (cov_2in74uxzzh().b[68][0]++, process.env.REDIS_HOST) ||
    /* istanbul ignore next */
    (cov_2in74uxzzh().b[68][1]++, 'localhost'),
    port: parseInt(
    /* istanbul ignore next */
    (cov_2in74uxzzh().b[69][0]++, process.env.REDIS_PORT) ||
    /* istanbul ignore next */
    (cov_2in74uxzzh().b[69][1]++, '6379')),
    password: process.env.REDIS_PASSWORD,
    ssl: process.env.REDIS_SSL === 'true',
    keyPrefix: `${
    /* istanbul ignore next */
    (cov_2in74uxzzh().b[70][0]++, process.env.NODE_ENV) ||
    /* istanbul ignore next */
    (cov_2in74uxzzh().b[70][1]++, 'dev')}:`,
    defaultTTL: 300,
    maxConnections: 50,
    retryDelayOnFailover: 100,
    retryTimeoutInMilliseconds: 5000,
    enableCircuitBreaker: true,
    circuitBreakerThreshold: 5,
    fallbackToMemory: true
  });
  /* istanbul ignore next */
  cov_2in74uxzzh().s[245]++;
  return new RedisCacheService(Object.assign(Object.assign({}, defaultConfig), config));
}
function getCache() {
  /* istanbul ignore next */
  cov_2in74uxzzh().f[36]++;
  cov_2in74uxzzh().s[246]++;
  if (!cacheInstance) {
    /* istanbul ignore next */
    cov_2in74uxzzh().b[71][0]++;
    cov_2in74uxzzh().s[247]++;
    cacheInstance = createCache({});
  } else
  /* istanbul ignore next */
  {
    cov_2in74uxzzh().b[71][1]++;
  }
  cov_2in74uxzzh().s[248]++;
  return cacheInstance;
}
// ===== CACHE DECORATORS =====
/**
 * Decorator for caching function results
 */
function cached(ttl =
/* istanbul ignore next */
(cov_2in74uxzzh().b[72][0]++, 300), keyGenerator) {
  /* istanbul ignore next */
  cov_2in74uxzzh().f[37]++;
  cov_2in74uxzzh().s[249]++;
  return function (target, propertyName, descriptor) {
    /* istanbul ignore next */
    cov_2in74uxzzh().f[38]++;
    const method =
    /* istanbul ignore next */
    (cov_2in74uxzzh().s[250]++, descriptor.value);
    /* istanbul ignore next */
    cov_2in74uxzzh().s[251]++;
    descriptor.value = async function (...args) {
      /* istanbul ignore next */
      cov_2in74uxzzh().f[39]++;
      const cache =
      /* istanbul ignore next */
      (cov_2in74uxzzh().s[252]++, getCache());
      const key =
      /* istanbul ignore next */
      (cov_2in74uxzzh().s[253]++, keyGenerator ?
      /* istanbul ignore next */
      (cov_2in74uxzzh().b[73][0]++, keyGenerator(...args)) :
      /* istanbul ignore next */
      (cov_2in74uxzzh().b[73][1]++, `${target.constructor.name}:${propertyName}:${JSON.stringify(args)}`));
      // Try to get from cache first
      const cachedResult =
      /* istanbul ignore next */
      (cov_2in74uxzzh().s[254]++, await cache.get(key));
      /* istanbul ignore next */
      cov_2in74uxzzh().s[255]++;
      if (cachedResult !== null) {
        /* istanbul ignore next */
        cov_2in74uxzzh().b[74][0]++;
        cov_2in74uxzzh().s[256]++;
        return cachedResult;
      } else
      /* istanbul ignore next */
      {
        cov_2in74uxzzh().b[74][1]++;
      }
      // Execute original method
      const result =
      /* istanbul ignore next */
      (cov_2in74uxzzh().s[257]++, await method.apply(this, args));
      // Cache the result
      /* istanbul ignore next */
      cov_2in74uxzzh().s[258]++;
      await cache.set(key, result, {
        ttl
      });
      /* istanbul ignore next */
      cov_2in74uxzzh().s[259]++;
      return result;
    };
  };
}
// ===== CACHE MIDDLEWARE =====
/**
 * Express middleware for response caching
 */
function cacheMiddleware(ttl =
/* istanbul ignore next */
(cov_2in74uxzzh().b[75][0]++, 60)) {
  /* istanbul ignore next */
  cov_2in74uxzzh().f[40]++;
  const cache =
  /* istanbul ignore next */
  (cov_2in74uxzzh().s[260]++, getCache());
  /* istanbul ignore next */
  cov_2in74uxzzh().s[261]++;
  return async (req, res, next) => {
    /* istanbul ignore next */
    cov_2in74uxzzh().f[41]++;
    cov_2in74uxzzh().s[262]++;
    if (req.method !== 'GET') {
      /* istanbul ignore next */
      cov_2in74uxzzh().b[76][0]++;
      cov_2in74uxzzh().s[263]++;
      return next();
    } else
    /* istanbul ignore next */
    {
      cov_2in74uxzzh().b[76][1]++;
    }
    const key =
    /* istanbul ignore next */
    (cov_2in74uxzzh().s[264]++, `http:${
    /* istanbul ignore next */
    (cov_2in74uxzzh().b[77][0]++, req.originalUrl) ||
    /* istanbul ignore next */
    (cov_2in74uxzzh().b[77][1]++, req.url)}`);
    const cachedResponse =
    /* istanbul ignore next */
    (cov_2in74uxzzh().s[265]++, await cache.get(key));
    /* istanbul ignore next */
    cov_2in74uxzzh().s[266]++;
    if (cachedResponse) {
      /* istanbul ignore next */
      cov_2in74uxzzh().b[78][0]++;
      cov_2in74uxzzh().s[267]++;
      res.set(cachedResponse.headers);
      /* istanbul ignore next */
      cov_2in74uxzzh().s[268]++;
      res.status(cachedResponse.status);
      /* istanbul ignore next */
      cov_2in74uxzzh().s[269]++;
      res.send(cachedResponse.body);
      /* istanbul ignore next */
      cov_2in74uxzzh().s[270]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2in74uxzzh().b[78][1]++;
    }
    // Capture response
    const originalSend =
    /* istanbul ignore next */
    (cov_2in74uxzzh().s[271]++, res.send);
    /* istanbul ignore next */
    cov_2in74uxzzh().s[272]++;
    res.send = function (body) {
      /* istanbul ignore next */
      cov_2in74uxzzh().f[42]++;
      cov_2in74uxzzh().s[273]++;
      cache.set(key, {
        status: res.statusCode,
        headers: res.getHeaders(),
        body
      }, {
        ttl
      });
      /* istanbul ignore next */
      cov_2in74uxzzh().s[274]++;
      originalSend.call(this, body);
    };
    /* istanbul ignore next */
    cov_2in74uxzzh().s[275]++;
    next();
  };
}
/* istanbul ignore next */
cov_2in74uxzzh().s[276]++;
exports.default = getCache;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,