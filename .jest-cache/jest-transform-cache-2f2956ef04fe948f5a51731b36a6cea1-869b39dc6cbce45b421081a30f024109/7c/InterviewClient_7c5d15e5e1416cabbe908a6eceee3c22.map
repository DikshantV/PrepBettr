{"version":3,"names":["Object","defineProperty","exports","value","default","InterviewClient","_dynamic","_interopRequireDefault","require","_jsxRuntime","cov_vwot0lu32","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","s","f","b","_coverageSchema","coverage","actualCoverage","e","__esModule","InterviewContent","dynamic","ssr","interview","feedback","user","jsx"],"sources":["InterviewClient.tsx"],"sourcesContent":["\"use client\";\n\nimport dynamic from 'next/dynamic';\nimport { InterviewData } from './page';\n\n// Dynamically import the client component with no SSR\nconst InterviewContent = dynamic(\n    () => import('./InterviewContent'),\n    { ssr: false }\n);\n\ninterface InterviewClientProps {\n    interview: InterviewData['interview'];\n    feedback: InterviewData['feedback'];\n    user: InterviewData['user'];\n}\n\nexport default function InterviewClient({ interview, feedback, user }: InterviewClientProps) {\n    return <InterviewContent interview={interview} feedback={feedback} user={user} />;\n}\n"],"mappings":"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","ignoreList":[]}