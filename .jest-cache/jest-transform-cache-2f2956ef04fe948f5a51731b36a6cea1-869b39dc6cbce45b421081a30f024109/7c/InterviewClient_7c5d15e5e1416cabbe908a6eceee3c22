fdfa03ec605a13b9ebe1cccfa4491697
/* istanbul ignore next */
"use strict";
"use client";

/* istanbul ignore next */
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = InterviewClient;
var
/* istanbul ignore next */
_dynamic = _interopRequireDefault(require("next/dynamic"));
/* istanbul ignore next */
var _jsxRuntime = require("react/jsx-runtime");
function cov_vwot0lu32() {
  var path = "/Users/dikshantvashistha/PrepBettr/app/dashboard/interview/[id]/InterviewClient.tsx";
  var hash = "fea38949d2f1e0a29f36e2128af64324e5b12c9c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dikshantvashistha/PrepBettr/app/dashboard/interview/[id]/InterviewClient.tsx",
    statementMap: {
      "0": {
        start: {
          line: 7,
          column: 25
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "1": {
        start: {
          line: 8,
          column: 10
        },
        end: {
          line: 8,
          column: 38
        }
      },
      "2": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 19,
          column: 86
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 4
          },
          end: {
            line: 8,
            column: 5
          }
        },
        loc: {
          start: {
            line: 8,
            column: 10
          },
          end: {
            line: 8,
            column: 38
          }
        },
        line: 8
      },
      "1": {
        name: "InterviewClient",
        decl: {
          start: {
            line: 18,
            column: 24
          },
          end: {
            line: 18,
            column: 39
          }
        },
        loc: {
          start: {
            line: 18,
            column: 93
          },
          end: {
            line: 20,
            column: 1
          }
        },
        line: 18
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "fea38949d2f1e0a29f36e2128af64324e5b12c9c"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_vwot0lu32 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_vwot0lu32();
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
// Dynamically import the client component with no SSR
const InterviewContent =
/* istanbul ignore next */
(cov_vwot0lu32().s[0]++,
/* istanbul ignore next */
(0,
/* istanbul ignore next */
_dynamic.
/* istanbul ignore next */
default)(() => {
  /* istanbul ignore next */
  cov_vwot0lu32().f[0]++;
  cov_vwot0lu32().s[1]++;
  return import('./InterviewContent');
}, {
  ssr: false
}));
function InterviewClient({
  interview,
  feedback,
  user
}) {
  /* istanbul ignore next */
  cov_vwot0lu32().f[1]++;
  cov_vwot0lu32().s[2]++;
  return /*#__PURE__*/ /* istanbul ignore next */(0, _jsxRuntime.jsx)(InterviewContent,
  /* istanbul ignore next */
  {
    interview: interview,
    feedback: feedback,
    user: user
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImRlZmF1bHQiLCJJbnRlcnZpZXdDbGllbnQiLCJfZHluYW1pYyIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJyZXF1aXJlIiwiX2pzeFJ1bnRpbWUiLCJjb3ZfdndvdDBsdTMyIiwicGF0aCIsImhhc2giLCJnbG9iYWwiLCJGdW5jdGlvbiIsImdjdiIsImNvdmVyYWdlRGF0YSIsInN0YXRlbWVudE1hcCIsInN0YXJ0IiwibGluZSIsImNvbHVtbiIsImVuZCIsImZuTWFwIiwibmFtZSIsImRlY2wiLCJsb2MiLCJicmFuY2hNYXAiLCJzIiwiZiIsImIiLCJfY292ZXJhZ2VTY2hlbWEiLCJjb3ZlcmFnZSIsImFjdHVhbENvdmVyYWdlIiwiZSIsIl9fZXNNb2R1bGUiLCJJbnRlcnZpZXdDb250ZW50IiwiZHluYW1pYyIsInNzciIsImludGVydmlldyIsImZlZWRiYWNrIiwidXNlciIsImpzeCJdLCJzb3VyY2VzIjpbIkludGVydmlld0NsaWVudC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2UgY2xpZW50XCI7XG5cbmltcG9ydCBkeW5hbWljIGZyb20gJ25leHQvZHluYW1pYyc7XG5pbXBvcnQgeyBJbnRlcnZpZXdEYXRhIH0gZnJvbSAnLi9wYWdlJztcblxuLy8gRHluYW1pY2FsbHkgaW1wb3J0IHRoZSBjbGllbnQgY29tcG9uZW50IHdpdGggbm8gU1NSXG5jb25zdCBJbnRlcnZpZXdDb250ZW50ID0gZHluYW1pYyhcbiAgICAoKSA9PiBpbXBvcnQoJy4vSW50ZXJ2aWV3Q29udGVudCcpLFxuICAgIHsgc3NyOiBmYWxzZSB9XG4pO1xuXG5pbnRlcmZhY2UgSW50ZXJ2aWV3Q2xpZW50UHJvcHMge1xuICAgIGludGVydmlldzogSW50ZXJ2aWV3RGF0YVsnaW50ZXJ2aWV3J107XG4gICAgZmVlZGJhY2s6IEludGVydmlld0RhdGFbJ2ZlZWRiYWNrJ107XG4gICAgdXNlcjogSW50ZXJ2aWV3RGF0YVsndXNlciddO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBJbnRlcnZpZXdDbGllbnQoeyBpbnRlcnZpZXcsIGZlZWRiYWNrLCB1c2VyIH06IEludGVydmlld0NsaWVudFByb3BzKSB7XG4gICAgcmV0dXJuIDxJbnRlcnZpZXdDb250ZW50IGludGVydmlldz17aW50ZXJ2aWV3fSBmZWVkYmFjaz17ZmVlZGJhY2t9IHVzZXI9e3VzZXJ9IC8+O1xufVxuIl0sIm1hcHBpbmdzIjoiOztBQUFBLFlBQVk7O0FBQUM7QUFBQUEsTUFBQSxDQUFBQyxjQUFBLENBQUFDLE9BQUE7RUFBQUMsS0FBQTtBQUFBO0FBQUFELE9BQUEsQ0FBQUUsT0FBQSxHQUFBQyxlQUFBO0FBRWI7QUFBQTtBQUFBQyxRQUFBLEdBQUFDLHNCQUFBLENBQUFDLE9BQUE7QUFBbUM7QUFBQSxJQUFBQyxXQUFBLEdBQUFELE9BQUE7QUFBQSxTQUFBRSxjQUFBO0VBQUEsSUFBQUMsSUFBQTtFQUFBLElBQUFDLElBQUE7RUFBQSxJQUFBQyxNQUFBLE9BQUFDLFFBQUE7RUFBQSxJQUFBQyxHQUFBO0VBQUEsSUFBQUMsWUFBQTtJQUFBTCxJQUFBO0lBQUFNLFlBQUE7TUFBQTtRQUFBQyxLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7SUFBQTtJQUFBRSxLQUFBO01BQUE7UUFBQUMsSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO0lBQUE7SUFBQU8sU0FBQTtJQUFBQyxDQUFBO01BQUE7TUFBQTtNQUFBO0lBQUE7SUFBQUMsQ0FBQTtNQUFBO01BQUE7SUFBQTtJQUFBQyxDQUFBO0lBQUFDLGVBQUE7SUFBQWxCLElBQUE7RUFBQTtFQUFBLElBQUFtQixRQUFBLEdBQUFsQixNQUFBLENBQUFFLEdBQUEsTUFBQUYsTUFBQSxDQUFBRSxHQUFBO0VBQUEsS0FBQWdCLFFBQUEsQ0FBQXBCLElBQUEsS0FBQW9CLFFBQUEsQ0FBQXBCLElBQUEsRUFBQUMsSUFBQSxLQUFBQSxJQUFBO0lBQUFtQixRQUFBLENBQUFwQixJQUFBLElBQUFLLFlBQUE7RUFBQTtFQUFBLElBQUFnQixjQUFBLEdBQUFELFFBQUEsQ0FBQXBCLElBQUE7RUFBQTtJQWF2QjtJQUFBRCxhQUFBLFlBQUFBLENBQUE7TUFBQSxPQUFBc0IsY0FBQTtJQUFBO0VBQUE7RUFBQSxPQUFBQSxjQUFBO0FBQUE7QUFBQXRCLGFBQUE7QUFBQSxTQUFBSCx1QkFBQTBCLENBQUEsV0FBQUEsQ0FBQSxJQUFBQSxDQUFBLENBQUFDLFVBQUEsR0FBQUQsQ0FBQSxLQUFBN0IsT0FBQSxFQUFBNkIsQ0FBQTtBQVZaO0FBQ0EsTUFBTUUsZ0JBQWdCO0FBQUE7QUFBQSxDQUFBekIsYUFBQSxHQUFBaUIsQ0FBQTtBQUFHO0FBQUE7QUFBQVM7QUFBQUE7QUFBQUE7QUFBQUEsT0FBTyxFQUM1QixNQUFNO0VBQUE7RUFBQTFCLGFBQUEsR0FBQWtCLENBQUE7RUFBQWxCLGFBQUEsR0FBQWlCLENBQUE7RUFBQSxhQUFNLENBQUMsb0JBQW9CLENBQUM7QUFBRCxDQUFDLEVBQ2xDO0VBQUVVLEdBQUcsRUFBRTtBQUFNLENBQ2pCLENBQUM7QUFRYyxTQUFTaEMsZUFBZUEsQ0FBQztFQUFFaUMsU0FBUztFQUFFQyxRQUFRO0VBQUVDO0FBQTJCLENBQUMsRUFBRTtFQUFBO0VBQUE5QixhQUFBLEdBQUFrQixDQUFBO0VBQUFsQixhQUFBLEdBQUFpQixDQUFBO0VBQ3pGLG9CQUFPLCtCQUFBbEIsV0FBQSxDQUFBZ0MsR0FBQSxFQUFDTixnQkFBZ0I7RUFBQTtFQUFBO0lBQUNHLFNBQVMsRUFBRUEsU0FBVTtJQUFDQyxRQUFRLEVBQUVBLFFBQVM7SUFBQ0MsSUFBSSxFQUFFQTtFQUFLLENBQUUsQ0FBQztBQUNyRiIsImlnbm9yZUxpc3QiOltdfQ==