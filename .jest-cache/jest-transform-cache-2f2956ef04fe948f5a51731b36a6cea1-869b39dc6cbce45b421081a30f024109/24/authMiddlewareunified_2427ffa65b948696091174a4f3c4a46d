450bbe69b1719150126fb9b935938f02
/* istanbul ignore next */
function cov_90ljq0d2g() {
  var path = "/Users/dikshantvashistha/PrepBettr/azure/shared/authMiddleware-unified.js";
  var hash = "254038633628d2ca26d0a2d3cb55dd5f8ae0c5f8";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dikshantvashistha/PrepBettr/azure/shared/authMiddleware-unified.js",
    statementMap: {
      "0": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 21,
          column: 36
        }
      },
      "1": {
        start: {
          line: 32,
          column: 17
        },
        end: {
          line: 32,
          column: 65
        }
      },
      "2": {
        start: {
          line: 35,
          column: 2
        },
        end: {
          line: 39,
          column: 4
        }
      },
      "3": {
        start: {
          line: 46,
          column: 17
        },
        end: {
          line: 46,
          column: 71
        }
      },
      "4": {
        start: {
          line: 48,
          column: 2
        },
        end: {
          line: 52,
          column: 4
        }
      },
      "5": {
        start: {
          line: 59,
          column: 2
        },
        end: {
          line: 59,
          column: 49
        }
      },
      "6": {
        start: {
          line: 68,
          column: 2
        },
        end: {
          line: 74,
          column: 3
        }
      },
      "7": {
        start: {
          line: 69,
          column: 17
        },
        end: {
          line: 69,
          column: 46
        }
      },
      "8": {
        start: {
          line: 70,
          column: 4
        },
        end: {
          line: 70,
          column: 16
        }
      },
      "9": {
        start: {
          line: 72,
          column: 4
        },
        end: {
          line: 72,
          column: 60
        }
      },
      "10": {
        start: {
          line: 73,
          column: 4
        },
        end: {
          line: 73,
          column: 16
        }
      },
      "11": {
        start: {
          line: 81,
          column: 2
        },
        end: {
          line: 97,
          column: 3
        }
      },
      "12": {
        start: {
          line: 82,
          column: 28
        },
        end: {
          line: 82,
          column: 60
        }
      },
      "13": {
        start: {
          line: 83,
          column: 19
        },
        end: {
          line: 83,
          column: 45
        }
      },
      "14": {
        start: {
          line: 85,
          column: 4
        },
        end: {
          line: 89,
          column: 6
        }
      },
      "15": {
        start: {
          line: 91,
          column: 4
        },
        end: {
          line: 91,
          column: 55
        }
      },
      "16": {
        start: {
          line: 92,
          column: 4
        },
        end: {
          line: 96,
          column: 6
        }
      },
      "17": {
        start: {
          line: 112,
          column: 2
        },
        end: {
          line: 112,
          column: 68
        }
      },
      "18": {
        start: {
          line: 119,
          column: 2
        },
        end: {
          line: 119,
          column: 51
        }
      },
      "19": {
        start: {
          line: 126,
          column: 2
        },
        end: {
          line: 126,
          column: 70
        }
      },
      "20": {
        start: {
          line: 133,
          column: 2
        },
        end: {
          line: 133,
          column: 37
        }
      },
      "21": {
        start: {
          line: 140,
          column: 2
        },
        end: {
          line: 140,
          column: 51
        }
      },
      "22": {
        start: {
          line: 149,
          column: 2
        },
        end: {
          line: 149,
          column: 26
        }
      },
      "23": {
        start: {
          line: 156,
          column: 2
        },
        end: {
          line: 156,
          column: 21
        }
      },
      "24": {
        start: {
          line: 163,
          column: 2
        },
        end: {
          line: 163,
          column: 54
        }
      },
      "25": {
        start: {
          line: 174,
          column: 2
        },
        end: {
          line: 176,
          column: 3
        }
      },
      "26": {
        start: {
          line: 175,
          column: 4
        },
        end: {
          line: 175,
          column: 16
        }
      },
      "27": {
        start: {
          line: 178,
          column: 16
        },
        end: {
          line: 178,
          column: 37
        }
      },
      "28": {
        start: {
          line: 179,
          column: 2
        },
        end: {
          line: 181,
          column: 3
        }
      },
      "29": {
        start: {
          line: 180,
          column: 4
        },
        end: {
          line: 180,
          column: 16
        }
      },
      "30": {
        start: {
          line: 183,
          column: 2
        },
        end: {
          line: 183,
          column: 18
        }
      },
      "31": {
        start: {
          line: 188,
          column: 0
        },
        end: {
          line: 215,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "authMiddleware",
        decl: {
          start: {
            line: 31,
            column: 15
          },
          end: {
            line: 31,
            column: 29
          }
        },
        loc: {
          start: {
            line: 31,
            column: 58
          },
          end: {
            line: 40,
            column: 1
          }
        },
        line: 31
      },
      "1": {
        name: "roleMiddleware",
        decl: {
          start: {
            line: 45,
            column: 15
          },
          end: {
            line: 45,
            column: 29
          }
        },
        loc: {
          start: {
            line: 45,
            column: 64
          },
          end: {
            line: 53,
            column: 1
          }
        },
        line: 45
      },
      "2": {
        name: "adminMiddleware",
        decl: {
          start: {
            line: 58,
            column: 15
          },
          end: {
            line: 58,
            column: 30
          }
        },
        loc: {
          start: {
            line: 58,
            column: 45
          },
          end: {
            line: 60,
            column: 1
          }
        },
        line: 58
      },
      "3": {
        name: "initializeFirebase",
        decl: {
          start: {
            line: 67,
            column: 15
          },
          end: {
            line: 67,
            column: 33
          }
        },
        loc: {
          start: {
            line: 67,
            column: 36
          },
          end: {
            line: 75,
            column: 1
          }
        },
        line: 67
      },
      "4": {
        name: "verifyFirebaseToken",
        decl: {
          start: {
            line: 80,
            column: 15
          },
          end: {
            line: 80,
            column: 34
          }
        },
        loc: {
          start: {
            line: 80,
            column: 44
          },
          end: {
            line: 98,
            column: 1
          }
        },
        line: 80
      },
      "5": {
        name: "createAuthenticatedFunction",
        decl: {
          start: {
            line: 111,
            column: 9
          },
          end: {
            line: 111,
            column: 36
          }
        },
        loc: {
          start: {
            line: 111,
            column: 68
          },
          end: {
            line: 113,
            column: 1
          }
        },
        line: 111
      },
      "6": {
        name: "createAdminFunction",
        decl: {
          start: {
            line: 118,
            column: 9
          },
          end: {
            line: 118,
            column: 28
          }
        },
        loc: {
          start: {
            line: 118,
            column: 46
          },
          end: {
            line: 120,
            column: 1
          }
        },
        line: 118
      },
      "7": {
        name: "createRoleBasedFunction",
        decl: {
          start: {
            line: 125,
            column: 9
          },
          end: {
            line: 125,
            column: 32
          }
        },
        loc: {
          start: {
            line: 125,
            column: 65
          },
          end: {
            line: 127,
            column: 1
          }
        },
        line: 125
      },
      "8": {
        name: "createHealthCheckResponse",
        decl: {
          start: {
            line: 132,
            column: 9
          },
          end: {
            line: 132,
            column: 34
          }
        },
        loc: {
          start: {
            line: 132,
            column: 37
          },
          end: {
            line: 134,
            column: 1
          }
        },
        line: 132
      },
      "9": {
        name: "getUserFromRequest",
        decl: {
          start: {
            line: 139,
            column: 15
          },
          end: {
            line: 139,
            column: 33
          }
        },
        loc: {
          start: {
            line: 139,
            column: 48
          },
          end: {
            line: 141,
            column: 1
          }
        },
        line: 139
      },
      "10": {
        name: "getAuthPerformanceMetrics",
        decl: {
          start: {
            line: 148,
            column: 9
          },
          end: {
            line: 148,
            column: 34
          }
        },
        loc: {
          start: {
            line: 148,
            column: 37
          },
          end: {
            line: 150,
            column: 1
          }
        },
        line: 148
      },
      "11": {
        name: "resetAuthPerformanceMetrics",
        decl: {
          start: {
            line: 155,
            column: 9
          },
          end: {
            line: 155,
            column: 36
          }
        },
        loc: {
          start: {
            line: 155,
            column: 39
          },
          end: {
            line: 157,
            column: 1
          }
        },
        line: 155
      },
      "12": {
        name: "runAuthBenchmark",
        decl: {
          start: {
            line: 162,
            column: 15
          },
          end: {
            line: 162,
            column: 31
          }
        },
        loc: {
          start: {
            line: 162,
            column: 64
          },
          end: {
            line: 164,
            column: 1
          }
        },
        line: 162
      },
      "13": {
        name: "extractBearerToken",
        decl: {
          start: {
            line: 173,
            column: 9
          },
          end: {
            line: 173,
            column: 27
          }
        },
        loc: {
          start: {
            line: 173,
            column: 40
          },
          end: {
            line: 184,
            column: 1
          }
        },
        line: 173
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 31,
            column: 44
          },
          end: {
            line: 31,
            column: 56
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 31,
            column: 54
          },
          end: {
            line: 31,
            column: 56
          }
        }],
        line: 31
      },
      "1": {
        loc: {
          start: {
            line: 45,
            column: 44
          },
          end: {
            line: 45,
            column: 62
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 45,
            column: 60
          },
          end: {
            line: 45,
            column: 62
          }
        }],
        line: 45
      },
      "2": {
        loc: {
          start: {
            line: 95,
            column: 13
          },
          end: {
            line: 95,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 95,
            column: 13
          },
          end: {
            line: 95,
            column: 26
          }
        }, {
          start: {
            line: 95,
            column: 30
          },
          end: {
            line: 95,
            column: 57
          }
        }],
        line: 95
      },
      "3": {
        loc: {
          start: {
            line: 111,
            column: 54
          },
          end: {
            line: 111,
            column: 66
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 111,
            column: 64
          },
          end: {
            line: 111,
            column: 66
          }
        }],
        line: 111
      },
      "4": {
        loc: {
          start: {
            line: 162,
            column: 46
          },
          end: {
            line: 162,
            column: 62
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 162,
            column: 59
          },
          end: {
            line: 162,
            column: 62
          }
        }],
        line: 162
      },
      "5": {
        loc: {
          start: {
            line: 174,
            column: 2
          },
          end: {
            line: 176,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 174,
            column: 2
          },
          end: {
            line: 176,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 174
      },
      "6": {
        loc: {
          start: {
            line: 179,
            column: 2
          },
          end: {
            line: 181,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 179,
            column: 2
          },
          end: {
            line: 181,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 179
      },
      "7": {
        loc: {
          start: {
            line: 179,
            column: 6
          },
          end: {
            line: 179,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 179,
            column: 6
          },
          end: {
            line: 179,
            column: 24
          }
        }, {
          start: {
            line: 179,
            column: 28
          },
          end: {
            line: 179,
            column: 49
          }
        }],
        line: 179
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0, 0],
      "3": [0],
      "4": [0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0]
    },
    inputSourceMap: null,
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "254038633628d2ca26d0a2d3cb55dd5f8ae0c5f8"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_90ljq0d2g = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_90ljq0d2g();
/**
 * Unified Azure Functions Authentication Middleware
 * 
 * Replacement for azure/shared/authMiddleware.js using the unified auth library
 * Eliminates code duplication and provides consistent authentication across platforms
 */

const {
  azureAuthMiddleware,
  azureRoleMiddleware,
  azureAdminMiddleware,
  createAuthenticatedAzureFunction,
  createAdminAzureFunction,
  createRoleBasedAzureFunction,
  createAzureHealthResponse,
  extractUserFromAzureRequest,
  initializeUnifiedAuth,
  getAuthMetrics,
  resetAuthMetrics,
  benchmarkAzureAuth
} =
/* istanbul ignore next */
(cov_90ljq0d2g().s[0]++, require('../../lib/shared/auth'));

/**
 * Firebase Authentication Middleware for Azure Functions
 * 
 * This middleware validates Firebase ID tokens and ensures only authenticated users
 * can access protected endpoints in Azure Functions.
 * 
 * Replaces the old authMiddleware with unified implementation
 */
async function authMiddleware(context, req, options =
/* istanbul ignore next */
(cov_90ljq0d2g().b[0][0]++, {})) {
  /* istanbul ignore next */
  cov_90ljq0d2g().f[0]++;
  const result =
  /* istanbul ignore next */
  (cov_90ljq0d2g().s[1]++, await azureAuthMiddleware(context, req, options));

  // Return in the expected format
  /* istanbul ignore next */
  cov_90ljq0d2g().s[2]++;
  return {
    success: result.success,
    user: result.user,
    response: result.response
  };
}

/**
 * Role-based authorization middleware
 */
async function roleMiddleware(context, req, requiredRoles =
/* istanbul ignore next */
(cov_90ljq0d2g().b[1][0]++, [])) {
  /* istanbul ignore next */
  cov_90ljq0d2g().f[1]++;
  const result =
  /* istanbul ignore next */
  (cov_90ljq0d2g().s[3]++, await azureRoleMiddleware(context, req, requiredRoles));
  /* istanbul ignore next */
  cov_90ljq0d2g().s[4]++;
  return {
    success: result.success,
    user: result.user,
    response: result.response
  };
}

/**
 * Admin-only middleware
 */
async function adminMiddleware(context, req) {
  /* istanbul ignore next */
  cov_90ljq0d2g().f[2]++;
  cov_90ljq0d2g().s[5]++;
  return roleMiddleware(context, req, ['admin']);
}

/**
 * Initialize Firebase Admin SDK
 * 
 * Unified initialization using the auth library
 */
async function initializeFirebase() {
  /* istanbul ignore next */
  cov_90ljq0d2g().f[3]++;
  cov_90ljq0d2g().s[6]++;
  try {
    const auth =
    /* istanbul ignore next */
    (cov_90ljq0d2g().s[7]++, await initializeUnifiedAuth());
    /* istanbul ignore next */
    cov_90ljq0d2g().s[8]++;
    return auth;
  } catch (error) {
    /* istanbul ignore next */
    cov_90ljq0d2g().s[9]++;
    console.error('Firebase initialization failed:', error);
    /* istanbul ignore next */
    cov_90ljq0d2g().s[10]++;
    throw error;
  }
}

/**
 * Verify Firebase ID token (unified implementation)
 */
async function verifyFirebaseToken(idToken) {
  /* istanbul ignore next */
  cov_90ljq0d2g().f[4]++;
  cov_90ljq0d2g().s[11]++;
  try {
    const {
      verifyToken
    } =
    /* istanbul ignore next */
    (cov_90ljq0d2g().s[12]++, require('../../lib/shared/auth'));
    const result =
    /* istanbul ignore next */
    (cov_90ljq0d2g().s[13]++, await verifyToken(idToken));
    /* istanbul ignore next */
    cov_90ljq0d2g().s[14]++;
    return {
      success: result.valid,
      user: result.user,
      error: result.error
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_90ljq0d2g().s[15]++;
    console.error('Token verification failed:', error);
    /* istanbul ignore next */
    cov_90ljq0d2g().s[16]++;
    return {
      success: false,
      user: null,
      error:
      /* istanbul ignore next */
      (cov_90ljq0d2g().b[2][0]++, error.message) ||
      /* istanbul ignore next */
      (cov_90ljq0d2g().b[2][1]++, 'Token verification failed')
    };
  }
}

/**
 * Create authenticated Azure Function wrapper
 * 
 * Usage:
 * const { createAuthenticatedFunction } = require('../shared/authMiddleware-unified');
 * 
 * module.exports = createAuthenticatedFunction(async function (context, req, user) {
 *   // Your protected function logic here
 *   // 'user' contains the authenticated Firebase user
 * });
 */
function createAuthenticatedFunction(handlerFunction, options =
/* istanbul ignore next */
(cov_90ljq0d2g().b[3][0]++, {})) {
  /* istanbul ignore next */
  cov_90ljq0d2g().f[5]++;
  cov_90ljq0d2g().s[17]++;
  return createAuthenticatedAzureFunction(handlerFunction, options);
}

/**
 * Create admin-only Azure Function wrapper
 */
function createAdminFunction(handlerFunction) {
  /* istanbul ignore next */
  cov_90ljq0d2g().f[6]++;
  cov_90ljq0d2g().s[18]++;
  return createAdminAzureFunction(handlerFunction);
}

/**
 * Create role-based Azure Function wrapper
 */
function createRoleBasedFunction(handlerFunction, requiredRoles) {
  /* istanbul ignore next */
  cov_90ljq0d2g().f[7]++;
  cov_90ljq0d2g().s[19]++;
  return createRoleBasedAzureFunction(handlerFunction, requiredRoles);
}

/**
 * Health check endpoint (no auth required)
 */
function createHealthCheckResponse() {
  /* istanbul ignore next */
  cov_90ljq0d2g().f[8]++;
  cov_90ljq0d2g().s[20]++;
  return createAzureHealthResponse();
}

/**
 * Extract user from Azure request
 */
async function getUserFromRequest(context, req) {
  /* istanbul ignore next */
  cov_90ljq0d2g().f[9]++;
  cov_90ljq0d2g().s[21]++;
  return extractUserFromAzureRequest(context, req);
}

// ===== PERFORMANCE MONITORING =====

/**
 * Get authentication performance metrics
 */
function getAuthPerformanceMetrics() {
  /* istanbul ignore next */
  cov_90ljq0d2g().f[10]++;
  cov_90ljq0d2g().s[22]++;
  return getAuthMetrics();
}

/**
 * Reset authentication performance metrics
 */
function resetAuthPerformanceMetrics() {
  /* istanbul ignore next */
  cov_90ljq0d2g().f[11]++;
  cov_90ljq0d2g().s[23]++;
  resetAuthMetrics();
}

/**
 * Run authentication performance benchmark
 */
async function runAuthBenchmark(context, req, iterations =
/* istanbul ignore next */
(cov_90ljq0d2g().b[4][0]++, 100)) {
  /* istanbul ignore next */
  cov_90ljq0d2g().f[12]++;
  cov_90ljq0d2g().s[24]++;
  return benchmarkAzureAuth(context, req, iterations);
}

// ===== LEGACY COMPATIBILITY =====

/**
 * Legacy function signatures for backward compatibility
 */

// Extract Bearer token from Authorization header (legacy)
function extractBearerToken(authHeader) {
  /* istanbul ignore next */
  cov_90ljq0d2g().f[13]++;
  cov_90ljq0d2g().s[25]++;
  if (!authHeader) {
    /* istanbul ignore next */
    cov_90ljq0d2g().b[5][0]++;
    cov_90ljq0d2g().s[26]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_90ljq0d2g().b[5][1]++;
  }
  const parts =
  /* istanbul ignore next */
  (cov_90ljq0d2g().s[27]++, authHeader.split(' '));
  /* istanbul ignore next */
  cov_90ljq0d2g().s[28]++;
  if (
  /* istanbul ignore next */
  (cov_90ljq0d2g().b[7][0]++, parts.length !== 2) ||
  /* istanbul ignore next */
  (cov_90ljq0d2g().b[7][1]++, parts[0] !== 'Bearer')) {
    /* istanbul ignore next */
    cov_90ljq0d2g().b[6][0]++;
    cov_90ljq0d2g().s[29]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_90ljq0d2g().b[6][1]++;
  }
  cov_90ljq0d2g().s[30]++;
  return parts[1];
}

// ===== MODULE EXPORTS =====
/* istanbul ignore next */
cov_90ljq0d2g().s[31]++;
module.exports = {
  // Main middleware functions
  authMiddleware,
  roleMiddleware,
  adminMiddleware,
  // Higher-order functions
  createAuthenticatedFunction,
  createAdminFunction,
  createRoleBasedFunction,
  // Utility functions
  initializeFirebase,
  verifyFirebaseToken,
  createHealthCheckResponse,
  getUserFromRequest,
  extractBearerToken,
  // Legacy compatibility

  // Performance monitoring
  getAuthPerformanceMetrics,
  resetAuthPerformanceMetrics,
  runAuthBenchmark,
  // Legacy aliases for backward compatibility
  createAuthenticatedAzureFunction: createAuthenticatedFunction,
  createAdminAzureFunction: createAdminFunction,
  createRoleBasedAzureFunction: createRoleBasedFunction
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,