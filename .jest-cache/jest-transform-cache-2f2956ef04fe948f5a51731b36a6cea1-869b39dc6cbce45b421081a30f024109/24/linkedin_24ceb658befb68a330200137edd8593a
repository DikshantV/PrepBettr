8882397747c400a94b329acbb4634864
"use strict";

/* istanbul ignore next */
function cov_17s5x822ru() {
  var path = "/Users/dikshantvashistha/PrepBettr/portals/linkedin.ts";
  var hash = "4a51c65732ab1dfbef13a026b467006b03b6ec9b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dikshantvashistha/PrepBettr/portals/linkedin.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 32
        }
      },
      "4": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 7,
          column: 46
        }
      },
      "5": {
        start: {
          line: 8,
          column: 21
        },
        end: {
          line: 8,
          column: 59
        }
      },
      "6": {
        start: {
          line: 9,
          column: 30
        },
        end: {
          line: 9,
          column: 76
        }
      },
      "7": {
        start: {
          line: 10,
          column: 29
        },
        end: {
          line: 10,
          column: 71
        }
      },
      "8": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 78
        }
      },
      "9": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 53
        }
      },
      "10": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 34
        }
      },
      "11": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 24,
          column: 11
        }
      },
      "12": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 82
        }
      },
      "13": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 33,
          column: 9
        }
      },
      "14": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 32,
          column: 108
        }
      },
      "15": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 41,
          column: 9
        }
      },
      "16": {
        start: {
          line: 40,
          column: 12
        },
        end: {
          line: 40,
          column: 63
        }
      },
      "17": {
        start: {
          line: 42,
          column: 23
        },
        end: {
          line: 48,
          column: 10
        }
      },
      "18": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 86
        }
      },
      "19": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 57,
          column: 9
        }
      },
      "20": {
        start: {
          line: 56,
          column: 12
        },
        end: {
          line: 56,
          column: 63
        }
      },
      "21": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 89,
          column: 9
        }
      },
      "22": {
        start: {
          line: 59,
          column: 29
        },
        end: {
          line: 71,
          column: 14
        }
      },
      "23": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 74,
          column: 13
        }
      },
      "24": {
        start: {
          line: 73,
          column: 16
        },
        end: {
          line: 73,
          column: 100
        }
      },
      "25": {
        start: {
          line: 75,
          column: 25
        },
        end: {
          line: 75,
          column: 46
        }
      },
      "26": {
        start: {
          line: 76,
          column: 27
        },
        end: {
          line: 82,
          column: 13
        }
      },
      "27": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 83,
          column: 76
        }
      },
      "28": {
        start: {
          line: 84,
          column: 12
        },
        end: {
          line: 84,
          column: 24
        }
      },
      "29": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 87,
          column: 67
        }
      },
      "30": {
        start: {
          line: 88,
          column: 12
        },
        end: {
          line: 88,
          column: 25
        }
      },
      "31": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 97,
          column: 9
        }
      },
      "32": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 96,
          column: 63
        }
      },
      "33": {
        start: {
          line: 98,
          column: 28
        },
        end: {
          line: 98,
          column: 111
        }
      },
      "34": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 101,
          column: 9
        }
      },
      "35": {
        start: {
          line: 100,
          column: 12
        },
        end: {
          line: 100,
          column: 68
        }
      },
      "36": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 119,
          column: 9
        }
      },
      "37": {
        start: {
          line: 103,
          column: 29
        },
        end: {
          line: 110,
          column: 14
        }
      },
      "38": {
        start: {
          line: 104,
          column: 16
        },
        end: {
          line: 109,
          column: 19
        }
      },
      "39": {
        start: {
          line: 111,
          column: 12
        },
        end: {
          line: 113,
          column: 13
        }
      },
      "40": {
        start: {
          line: 112,
          column: 16
        },
        end: {
          line: 112,
          column: 85
        }
      },
      "41": {
        start: {
          line: 114,
          column: 12
        },
        end: {
          line: 114,
          column: 41
        }
      },
      "42": {
        start: {
          line: 117,
          column: 12
        },
        end: {
          line: 117,
          column: 66
        }
      },
      "43": {
        start: {
          line: 118,
          column: 12
        },
        end: {
          line: 118,
          column: 24
        }
      },
      "44": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 127,
          column: 9
        }
      },
      "45": {
        start: {
          line: 126,
          column: 12
        },
        end: {
          line: 126,
          column: 63
        }
      },
      "46": {
        start: {
          line: 128,
          column: 28
        },
        end: {
          line: 128,
          column: 111
        }
      },
      "47": {
        start: {
          line: 129,
          column: 8
        },
        end: {
          line: 131,
          column: 9
        }
      },
      "48": {
        start: {
          line: 130,
          column: 12
        },
        end: {
          line: 130,
          column: 68
        }
      },
      "49": {
        start: {
          line: 132,
          column: 29
        },
        end: {
          line: 140,
          column: 9
        }
      },
      "50": {
        start: {
          line: 141,
          column: 8
        },
        end: {
          line: 178,
          column: 11
        }
      },
      "51": {
        start: {
          line: 142,
          column: 12
        },
        end: {
          line: 142,
          column: 104
        }
      },
      "52": {
        start: {
          line: 143,
          column: 32
        },
        end: {
          line: 143,
          column: 53
        }
      },
      "53": {
        start: {
          line: 144,
          column: 12
        },
        end: {
          line: 148,
          column: 15
        }
      },
      "54": {
        start: {
          line: 145,
          column: 16
        },
        end: {
          line: 147,
          column: 17
        }
      },
      "55": {
        start: {
          line: 146,
          column: 20
        },
        end: {
          line: 146,
          column: 62
        }
      },
      "56": {
        start: {
          line: 149,
          column: 29
        },
        end: {
          line: 156,
          column: 14
        }
      },
      "57": {
        start: {
          line: 150,
          column: 16
        },
        end: {
          line: 155,
          column: 19
        }
      },
      "58": {
        start: {
          line: 157,
          column: 12
        },
        end: {
          line: 159,
          column: 13
        }
      },
      "59": {
        start: {
          line: 158,
          column: 16
        },
        end: {
          line: 158,
          column: 105
        }
      },
      "60": {
        start: {
          line: 160,
          column: 25
        },
        end: {
          line: 160,
          column: 46
        }
      },
      "61": {
        start: {
          line: 161,
          column: 25
        },
        end: {
          line: 161,
          column: 79
        }
      },
      "62": {
        start: {
          line: 162,
          column: 12
        },
        end: {
          line: 166,
          column: 15
        }
      },
      "63": {
        start: {
          line: 167,
          column: 12
        },
        end: {
          line: 167,
          column: 24
        }
      },
      "64": {
        start: {
          line: 173,
          column: 12
        },
        end: {
          line: 176,
          column: 15
        }
      },
      "65": {
        start: {
          line: 177,
          column: 12
        },
        end: {
          line: 177,
          column: 22
        }
      },
      "66": {
        start: {
          line: 184,
          column: 8
        },
        end: {
          line: 186,
          column: 9
        }
      },
      "67": {
        start: {
          line: 185,
          column: 12
        },
        end: {
          line: 185,
          column: 63
        }
      },
      "68": {
        start: {
          line: 187,
          column: 28
        },
        end: {
          line: 187,
          column: 111
        }
      },
      "69": {
        start: {
          line: 188,
          column: 8
        },
        end: {
          line: 190,
          column: 9
        }
      },
      "70": {
        start: {
          line: 189,
          column: 12
        },
        end: {
          line: 189,
          column: 87
        }
      },
      "71": {
        start: {
          line: 191,
          column: 8
        },
        end: {
          line: 216,
          column: 9
        }
      },
      "72": {
        start: {
          line: 194,
          column: 29
        },
        end: {
          line: 207,
          column: 14
        }
      },
      "73": {
        start: {
          line: 195,
          column: 16
        },
        end: {
          line: 206,
          column: 19
        }
      },
      "74": {
        start: {
          line: 208,
          column: 12
        },
        end: {
          line: 210,
          column: 13
        }
      },
      "75": {
        start: {
          line: 209,
          column: 16
        },
        end: {
          line: 209,
          column: 87
        }
      },
      "76": {
        start: {
          line: 211,
          column: 12
        },
        end: {
          line: 211,
          column: 84
        }
      },
      "77": {
        start: {
          line: 214,
          column: 12
        },
        end: {
          line: 214,
          column: 68
        }
      },
      "78": {
        start: {
          line: 215,
          column: 12
        },
        end: {
          line: 215,
          column: 79
        }
      },
      "79": {
        start: {
          line: 222,
          column: 8
        },
        end: {
          line: 224,
          column: 9
        }
      },
      "80": {
        start: {
          line: 223,
          column: 12
        },
        end: {
          line: 223,
          column: 63
        }
      },
      "81": {
        start: {
          line: 225,
          column: 28
        },
        end: {
          line: 225,
          column: 111
        }
      },
      "82": {
        start: {
          line: 226,
          column: 8
        },
        end: {
          line: 228,
          column: 9
        }
      },
      "83": {
        start: {
          line: 227,
          column: 12
        },
        end: {
          line: 227,
          column: 32
        }
      },
      "84": {
        start: {
          line: 229,
          column: 8
        },
        end: {
          line: 248,
          column: 9
        }
      },
      "85": {
        start: {
          line: 230,
          column: 29
        },
        end: {
          line: 237,
          column: 14
        }
      },
      "86": {
        start: {
          line: 231,
          column: 16
        },
        end: {
          line: 236,
          column: 19
        }
      },
      "87": {
        start: {
          line: 238,
          column: 12
        },
        end: {
          line: 240,
          column: 13
        }
      },
      "88": {
        start: {
          line: 239,
          column: 16
        },
        end: {
          line: 239,
          column: 36
        }
      },
      "89": {
        start: {
          line: 241,
          column: 25
        },
        end: {
          line: 241,
          column: 46
        }
      },
      "90": {
        start: {
          line: 243,
          column: 12
        },
        end: {
          line: 243,
          column: 74
        }
      },
      "91": {
        start: {
          line: 246,
          column: 12
        },
        end: {
          line: 246,
          column: 71
        }
      },
      "92": {
        start: {
          line: 247,
          column: 12
        },
        end: {
          line: 247,
          column: 32
        }
      },
      "93": {
        start: {
          line: 254,
          column: 23
        },
        end: {
          line: 254,
          column: 76
        }
      },
      "94": {
        start: {
          line: 255,
          column: 8
        },
        end: {
          line: 255,
          column: 64
        }
      },
      "95": {
        start: {
          line: 261,
          column: 8
        },
        end: {
          line: 261,
          column: 65
        }
      },
      "96": {
        start: {
          line: 265,
          column: 8
        },
        end: {
          line: 271,
          column: 9
        }
      },
      "97": {
        start: {
          line: 266,
          column: 30
        },
        end: {
          line: 266,
          column: 41
        }
      },
      "98": {
        start: {
          line: 267,
          column: 30
        },
        end: {
          line: 267,
          column: 41
        }
      },
      "99": {
        start: {
          line: 268,
          column: 29
        },
        end: {
          line: 268,
          column: 40
        }
      },
      "100": {
        start: {
          line: 269,
          column: 31
        },
        end: {
          line: 269,
          column: 42
        }
      },
      "101": {
        start: {
          line: 270,
          column: 21
        },
        end: {
          line: 270,
          column: 38
        }
      },
      "102": {
        start: {
          line: 274,
          column: 8
        },
        end: {
          line: 281,
          column: 9
        }
      },
      "103": {
        start: {
          line: 275,
          column: 32
        },
        end: {
          line: 275,
          column: 43
        }
      },
      "104": {
        start: {
          line: 276,
          column: 30
        },
        end: {
          line: 276,
          column: 41
        }
      },
      "105": {
        start: {
          line: 277,
          column: 31
        },
        end: {
          line: 277,
          column: 42
        }
      },
      "106": {
        start: {
          line: 278,
          column: 29
        },
        end: {
          line: 278,
          column: 40
        }
      },
      "107": {
        start: {
          line: 279,
          column: 30
        },
        end: {
          line: 279,
          column: 41
        }
      },
      "108": {
        start: {
          line: 280,
          column: 21
        },
        end: {
          line: 280,
          column: 38
        }
      },
      "109": {
        start: {
          line: 284,
          column: 8
        },
        end: {
          line: 289,
          column: 9
        }
      },
      "110": {
        start: {
          line: 285,
          column: 34
        },
        end: {
          line: 285,
          column: 50
        }
      },
      "111": {
        start: {
          line: 286,
          column: 30
        },
        end: {
          line: 286,
          column: 47
        }
      },
      "112": {
        start: {
          line: 287,
          column: 31
        },
        end: {
          line: 287,
          column: 49
        }
      },
      "113": {
        start: {
          line: 288,
          column: 21
        },
        end: {
          line: 288,
          column: 31
        }
      },
      "114": {
        start: {
          line: 292,
          column: 8
        },
        end: {
          line: 299,
          column: 9
        }
      },
      "115": {
        start: {
          line: 293,
          column: 30
        },
        end: {
          line: 293,
          column: 47
        }
      },
      "116": {
        start: {
          line: 294,
          column: 27
        },
        end: {
          line: 294,
          column: 55
        }
      },
      "117": {
        start: {
          line: 295,
          column: 33
        },
        end: {
          line: 295,
          column: 60
        }
      },
      "118": {
        start: {
          line: 296,
          column: 29
        },
        end: {
          line: 296,
          column: 47
        }
      },
      "119": {
        start: {
          line: 297,
          column: 30
        },
        end: {
          line: 297,
          column: 49
        }
      },
      "120": {
        start: {
          line: 298,
          column: 21
        },
        end: {
          line: 298,
          column: 41
        }
      },
      "121": {
        start: {
          line: 302,
          column: 8
        },
        end: {
          line: 334,
          column: 11
        }
      },
      "122": {
        start: {
          line: 304,
          column: 26
        },
        end: {
          line: 304,
          column: 102
        }
      },
      "123": {
        start: {
          line: 305,
          column: 12
        },
        end: {
          line: 333,
          column: 14
        }
      },
      "124": {
        start: {
          line: 337,
          column: 22
        },
        end: {
          line: 337,
          column: 51
        }
      },
      "125": {
        start: {
          line: 338,
          column: 8
        },
        end: {
          line: 338,
          column: 39
        }
      },
      "126": {
        start: {
          line: 341,
          column: 8
        },
        end: {
          line: 347,
          column: 9
        }
      },
      "127": {
        start: {
          line: 342,
          column: 30
        },
        end: {
          line: 342,
          column: 49
        }
      },
      "128": {
        start: {
          line: 343,
          column: 30
        },
        end: {
          line: 343,
          column: 49
        }
      },
      "129": {
        start: {
          line: 344,
          column: 29
        },
        end: {
          line: 344,
          column: 47
        }
      },
      "130": {
        start: {
          line: 345,
          column: 31
        },
        end: {
          line: 345,
          column: 51
        }
      },
      "131": {
        start: {
          line: 346,
          column: 21
        },
        end: {
          line: 346,
          column: 40
        }
      },
      "132": {
        start: {
          line: 350,
          column: 8
        },
        end: {
          line: 351,
          column: 28
        }
      },
      "133": {
        start: {
          line: 351,
          column: 12
        },
        end: {
          line: 351,
          column: 28
        }
      },
      "134": {
        start: {
          line: 352,
          column: 8
        },
        end: {
          line: 353,
          column: 28
        }
      },
      "135": {
        start: {
          line: 353,
          column: 12
        },
        end: {
          line: 353,
          column: 28
        }
      },
      "136": {
        start: {
          line: 354,
          column: 8
        },
        end: {
          line: 355,
          column: 28
        }
      },
      "137": {
        start: {
          line: 355,
          column: 12
        },
        end: {
          line: 355,
          column: 28
        }
      },
      "138": {
        start: {
          line: 356,
          column: 8
        },
        end: {
          line: 356,
          column: 24
        }
      },
      "139": {
        start: {
          line: 362,
          column: 24
        },
        end: {
          line: 368,
          column: 9
        }
      },
      "140": {
        start: {
          line: 369,
          column: 25
        },
        end: {
          line: 369,
          column: 61
        }
      },
      "141": {
        start: {
          line: 370,
          column: 8
        },
        end: {
          line: 370,
          column: 68
        }
      },
      "142": {
        start: {
          line: 373,
          column: 0
        },
        end: {
          line: 373,
          column: 40
        }
      },
      "143": {
        start: {
          line: 375,
          column: 29
        },
        end: {
          line: 375,
          column: 33
        }
      },
      "144": {
        start: {
          line: 377,
          column: 4
        },
        end: {
          line: 379,
          column: 5
        }
      },
      "145": {
        start: {
          line: 378,
          column: 8
        },
        end: {
          line: 378,
          column: 54
        }
      },
      "146": {
        start: {
          line: 380,
          column: 4
        },
        end: {
          line: 380,
          column: 34
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 18
          },
          end: {
            line: 25,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        },
        loc: {
          start: {
            line: 29,
            column: 23
          },
          end: {
            line: 34,
            column: 5
          }
        },
        line: 29
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        },
        loc: {
          start: {
            line: 38,
            column: 35
          },
          end: {
            line: 50,
            column: 5
          }
        },
        line: 38
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 54,
            column: 4
          },
          end: {
            line: 54,
            column: 5
          }
        },
        loc: {
          start: {
            line: 54,
            column: 46
          },
          end: {
            line: 90,
            column: 5
          }
        },
        line: 54
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 94,
            column: 4
          },
          end: {
            line: 94,
            column: 5
          }
        },
        loc: {
          start: {
            line: 94,
            column: 29
          },
          end: {
            line: 120,
            column: 5
          }
        },
        line: 94
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 103,
            column: 61
          },
          end: {
            line: 103,
            column: 62
          }
        },
        loc: {
          start: {
            line: 103,
            column: 73
          },
          end: {
            line: 110,
            column: 13
          }
        },
        line: 103
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 124,
            column: 4
          },
          end: {
            line: 124,
            column: 5
          }
        },
        loc: {
          start: {
            line: 124,
            column: 38
          },
          end: {
            line: 179,
            column: 5
          }
        },
        line: 124
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 141,
            column: 75
          },
          end: {
            line: 141,
            column: 76
          }
        },
        loc: {
          start: {
            line: 141,
            column: 87
          },
          end: {
            line: 168,
            column: 9
          }
        },
        line: 141
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 144,
            column: 49
          },
          end: {
            line: 144,
            column: 50
          }
        },
        loc: {
          start: {
            line: 144,
            column: 67
          },
          end: {
            line: 148,
            column: 13
          }
        },
        line: 144
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 149,
            column: 61
          },
          end: {
            line: 149,
            column: 62
          }
        },
        loc: {
          start: {
            line: 149,
            column: 73
          },
          end: {
            line: 156,
            column: 13
          }
        },
        line: 149
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 172,
            column: 17
          },
          end: {
            line: 172,
            column: 18
          }
        },
        loc: {
          start: {
            line: 172,
            column: 26
          },
          end: {
            line: 178,
            column: 9
          }
        },
        line: 172
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 183,
            column: 4
          },
          end: {
            line: 183,
            column: 5
          }
        },
        loc: {
          start: {
            line: 183,
            column: 53
          },
          end: {
            line: 217,
            column: 5
          }
        },
        line: 183
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 194,
            column: 61
          },
          end: {
            line: 194,
            column: 62
          }
        },
        loc: {
          start: {
            line: 194,
            column: 73
          },
          end: {
            line: 207,
            column: 13
          }
        },
        line: 194
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 221,
            column: 4
          },
          end: {
            line: 221,
            column: 5
          }
        },
        loc: {
          start: {
            line: 221,
            column: 46
          },
          end: {
            line: 249,
            column: 5
          }
        },
        line: 221
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 230,
            column: 61
          },
          end: {
            line: 230,
            column: 62
          }
        },
        loc: {
          start: {
            line: 230,
            column: 73
          },
          end: {
            line: 237,
            column: 13
          }
        },
        line: 230
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 253,
            column: 4
          },
          end: {
            line: 253,
            column: 5
          }
        },
        loc: {
          start: {
            line: 253,
            column: 30
          },
          end: {
            line: 256,
            column: 5
          }
        },
        line: 253
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 260,
            column: 4
          },
          end: {
            line: 260,
            column: 5
          }
        },
        loc: {
          start: {
            line: 260,
            column: 29
          },
          end: {
            line: 262,
            column: 5
          }
        },
        line: 260
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 264,
            column: 4
          },
          end: {
            line: 264,
            column: 5
          }
        },
        loc: {
          start: {
            line: 264,
            column: 34
          },
          end: {
            line: 272,
            column: 5
          }
        },
        line: 264
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 273,
            column: 4
          },
          end: {
            line: 273,
            column: 5
          }
        },
        loc: {
          start: {
            line: 273,
            column: 40
          },
          end: {
            line: 282,
            column: 5
          }
        },
        line: 273
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 283,
            column: 4
          },
          end: {
            line: 283,
            column: 5
          }
        },
        loc: {
          start: {
            line: 283,
            column: 40
          },
          end: {
            line: 290,
            column: 5
          }
        },
        line: 283
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 291,
            column: 4
          },
          end: {
            line: 291,
            column: 5
          }
        },
        loc: {
          start: {
            line: 291,
            column: 57
          },
          end: {
            line: 300,
            column: 5
          }
        },
        line: 291
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 301,
            column: 4
          },
          end: {
            line: 301,
            column: 5
          }
        },
        loc: {
          start: {
            line: 301,
            column: 53
          },
          end: {
            line: 335,
            column: 5
          }
        },
        line: 301
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 302,
            column: 32
          },
          end: {
            line: 302,
            column: 33
          }
        },
        loc: {
          start: {
            line: 302,
            column: 48
          },
          end: {
            line: 334,
            column: 9
          }
        },
        line: 302
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 336,
            column: 4
          },
          end: {
            line: 336,
            column: 5
          }
        },
        loc: {
          start: {
            line: 336,
            column: 29
          },
          end: {
            line: 339,
            column: 5
          }
        },
        line: 336
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 340,
            column: 4
          },
          end: {
            line: 340,
            column: 5
          }
        },
        loc: {
          start: {
            line: 340,
            column: 46
          },
          end: {
            line: 348,
            column: 5
          }
        },
        line: 340
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 349,
            column: 4
          },
          end: {
            line: 349,
            column: 5
          }
        },
        loc: {
          start: {
            line: 349,
            column: 43
          },
          end: {
            line: 357,
            column: 5
          }
        },
        line: 349
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 361,
            column: 4
          },
          end: {
            line: 361,
            column: 5
          }
        },
        loc: {
          start: {
            line: 361,
            column: 58
          },
          end: {
            line: 371,
            column: 5
          }
        },
        line: 361
      },
      "28": {
        name: "getLinkedInPortal",
        decl: {
          start: {
            line: 376,
            column: 9
          },
          end: {
            line: 376,
            column: 26
          }
        },
        loc: {
          start: {
            line: 376,
            column: 29
          },
          end: {
            line: 381,
            column: 1
          }
        },
        line: 376
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 33,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 33,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 31
      },
      "4": {
        loc: {
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 41,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 41,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 39
      },
      "5": {
        loc: {
          start: {
            line: 46,
            column: 19
          },
          end: {
            line: 46,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 46,
            column: 19
          },
          end: {
            line: 46,
            column: 24
          }
        }, {
          start: {
            line: 46,
            column: 28
          },
          end: {
            line: 46,
            column: 34
          }
        }],
        line: 46
      },
      "6": {
        loc: {
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 57,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 57,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 55
      },
      "7": {
        loc: {
          start: {
            line: 72,
            column: 12
          },
          end: {
            line: 74,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 72,
            column: 12
          },
          end: {
            line: 74,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 72
      },
      "8": {
        loc: {
          start: {
            line: 78,
            column: 30
          },
          end: {
            line: 78,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 78,
            column: 30
          },
          end: {
            line: 78,
            column: 48
          }
        }, {
          start: {
            line: 78,
            column: 52
          },
          end: {
            line: 78,
            column: 54
          }
        }],
        line: 78
      },
      "9": {
        loc: {
          start: {
            line: 80,
            column: 27
          },
          end: {
            line: 80,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 80,
            column: 27
          },
          end: {
            line: 80,
            column: 42
          }
        }, {
          start: {
            line: 80,
            column: 46
          },
          end: {
            line: 80,
            column: 54
          }
        }],
        line: 80
      },
      "10": {
        loc: {
          start: {
            line: 95,
            column: 8
          },
          end: {
            line: 97,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 95,
            column: 8
          },
          end: {
            line: 97,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 95
      },
      "11": {
        loc: {
          start: {
            line: 99,
            column: 8
          },
          end: {
            line: 101,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 99,
            column: 8
          },
          end: {
            line: 101,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 99
      },
      "12": {
        loc: {
          start: {
            line: 111,
            column: 12
          },
          end: {
            line: 113,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 111,
            column: 12
          },
          end: {
            line: 113,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 111
      },
      "13": {
        loc: {
          start: {
            line: 125,
            column: 8
          },
          end: {
            line: 127,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 125,
            column: 8
          },
          end: {
            line: 127,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 125
      },
      "14": {
        loc: {
          start: {
            line: 129,
            column: 8
          },
          end: {
            line: 131,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 129,
            column: 8
          },
          end: {
            line: 131,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 129
      },
      "15": {
        loc: {
          start: {
            line: 134,
            column: 22
          },
          end: {
            line: 134,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 134,
            column: 22
          },
          end: {
            line: 134,
            column: 42
          }
        }, {
          start: {
            line: 134,
            column: 46
          },
          end: {
            line: 134,
            column: 48
          }
        }],
        line: 134
      },
      "16": {
        loc: {
          start: {
            line: 145,
            column: 16
          },
          end: {
            line: 147,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 145,
            column: 16
          },
          end: {
            line: 147,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 145
      },
      "17": {
        loc: {
          start: {
            line: 145,
            column: 20
          },
          end: {
            line: 145,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 145,
            column: 20
          },
          end: {
            line: 145,
            column: 39
          }
        }, {
          start: {
            line: 145,
            column: 43
          },
          end: {
            line: 145,
            column: 55
          }
        }],
        line: 145
      },
      "18": {
        loc: {
          start: {
            line: 157,
            column: 12
          },
          end: {
            line: 159,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 157,
            column: 12
          },
          end: {
            line: 159,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 157
      },
      "19": {
        loc: {
          start: {
            line: 184,
            column: 8
          },
          end: {
            line: 186,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 184,
            column: 8
          },
          end: {
            line: 186,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 184
      },
      "20": {
        loc: {
          start: {
            line: 188,
            column: 8
          },
          end: {
            line: 190,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 188,
            column: 8
          },
          end: {
            line: 190,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 188
      },
      "21": {
        loc: {
          start: {
            line: 208,
            column: 12
          },
          end: {
            line: 210,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 208,
            column: 12
          },
          end: {
            line: 210,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 208
      },
      "22": {
        loc: {
          start: {
            line: 222,
            column: 8
          },
          end: {
            line: 224,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 222,
            column: 8
          },
          end: {
            line: 224,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 222
      },
      "23": {
        loc: {
          start: {
            line: 226,
            column: 8
          },
          end: {
            line: 228,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 226,
            column: 8
          },
          end: {
            line: 228,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 226
      },
      "24": {
        loc: {
          start: {
            line: 238,
            column: 12
          },
          end: {
            line: 240,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 238,
            column: 12
          },
          end: {
            line: 240,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 238
      },
      "25": {
        loc: {
          start: {
            line: 255,
            column: 15
          },
          end: {
            line: 255,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 255,
            column: 15
          },
          end: {
            line: 255,
            column: 30
          }
        }, {
          start: {
            line: 255,
            column: 34
          },
          end: {
            line: 255,
            column: 63
          }
        }],
        line: 255
      },
      "26": {
        loc: {
          start: {
            line: 265,
            column: 8
          },
          end: {
            line: 271,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 266,
            column: 12
          },
          end: {
            line: 266,
            column: 41
          }
        }, {
          start: {
            line: 267,
            column: 12
          },
          end: {
            line: 267,
            column: 41
          }
        }, {
          start: {
            line: 268,
            column: 12
          },
          end: {
            line: 268,
            column: 40
          }
        }, {
          start: {
            line: 269,
            column: 12
          },
          end: {
            line: 269,
            column: 42
          }
        }, {
          start: {
            line: 270,
            column: 12
          },
          end: {
            line: 270,
            column: 38
          }
        }],
        line: 265
      },
      "27": {
        loc: {
          start: {
            line: 274,
            column: 8
          },
          end: {
            line: 281,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 275,
            column: 12
          },
          end: {
            line: 275,
            column: 43
          }
        }, {
          start: {
            line: 276,
            column: 12
          },
          end: {
            line: 276,
            column: 41
          }
        }, {
          start: {
            line: 277,
            column: 12
          },
          end: {
            line: 277,
            column: 42
          }
        }, {
          start: {
            line: 278,
            column: 12
          },
          end: {
            line: 278,
            column: 40
          }
        }, {
          start: {
            line: 279,
            column: 12
          },
          end: {
            line: 279,
            column: 41
          }
        }, {
          start: {
            line: 280,
            column: 12
          },
          end: {
            line: 280,
            column: 38
          }
        }],
        line: 274
      },
      "28": {
        loc: {
          start: {
            line: 284,
            column: 8
          },
          end: {
            line: 289,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 285,
            column: 12
          },
          end: {
            line: 285,
            column: 50
          }
        }, {
          start: {
            line: 286,
            column: 12
          },
          end: {
            line: 286,
            column: 47
          }
        }, {
          start: {
            line: 287,
            column: 12
          },
          end: {
            line: 287,
            column: 49
          }
        }, {
          start: {
            line: 288,
            column: 12
          },
          end: {
            line: 288,
            column: 31
          }
        }],
        line: 284
      },
      "29": {
        loc: {
          start: {
            line: 292,
            column: 8
          },
          end: {
            line: 299,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 293,
            column: 12
          },
          end: {
            line: 293,
            column: 47
          }
        }, {
          start: {
            line: 294,
            column: 12
          },
          end: {
            line: 294,
            column: 55
          }
        }, {
          start: {
            line: 295,
            column: 12
          },
          end: {
            line: 295,
            column: 60
          }
        }, {
          start: {
            line: 296,
            column: 12
          },
          end: {
            line: 296,
            column: 47
          }
        }, {
          start: {
            line: 297,
            column: 12
          },
          end: {
            line: 297,
            column: 49
          }
        }, {
          start: {
            line: 298,
            column: 12
          },
          end: {
            line: 298,
            column: 41
          }
        }],
        line: 292
      },
      "30": {
        loc: {
          start: {
            line: 292,
            column: 16
          },
          end: {
            line: 292,
            column: 108
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 292,
            column: 71
          },
          end: {
            line: 292,
            column: 77
          }
        }, {
          start: {
            line: 292,
            column: 80
          },
          end: {
            line: 292,
            column: 108
          }
        }],
        line: 292
      },
      "31": {
        loc: {
          start: {
            line: 292,
            column: 16
          },
          end: {
            line: 292,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 292,
            column: 16
          },
          end: {
            line: 292,
            column: 39
          }
        }, {
          start: {
            line: 292,
            column: 43
          },
          end: {
            line: 292,
            column: 68
          }
        }],
        line: 292
      },
      "32": {
        loc: {
          start: {
            line: 304,
            column: 26
          },
          end: {
            line: 304,
            column: 102
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 304,
            column: 26
          },
          end: {
            line: 304,
            column: 65
          }
        }, {
          start: {
            line: 304,
            column: 69
          },
          end: {
            line: 304,
            column: 102
          }
        }],
        line: 304
      },
      "33": {
        loc: {
          start: {
            line: 307,
            column: 23
          },
          end: {
            line: 307,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 307,
            column: 23
          },
          end: {
            line: 307,
            column: 32
          }
        }, {
          start: {
            line: 307,
            column: 36
          },
          end: {
            line: 307,
            column: 55
          }
        }],
        line: 307
      },
      "34": {
        loc: {
          start: {
            line: 308,
            column: 25
          },
          end: {
            line: 308,
            column: 173
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 308,
            column: 26
          },
          end: {
            line: 308,
            column: 151
          }
        }, {
          start: {
            line: 308,
            column: 156
          },
          end: {
            line: 308,
            column: 173
          }
        }],
        line: 308
      },
      "35": {
        loc: {
          start: {
            line: 308,
            column: 26
          },
          end: {
            line: 308,
            column: 151
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 308,
            column: 135
          },
          end: {
            line: 308,
            column: 141
          }
        }, {
          start: {
            line: 308,
            column: 144
          },
          end: {
            line: 308,
            column: 151
          }
        }],
        line: 308
      },
      "36": {
        loc: {
          start: {
            line: 308,
            column: 26
          },
          end: {
            line: 308,
            column: 132
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 308,
            column: 26
          },
          end: {
            line: 308,
            column: 115
          }
        }, {
          start: {
            line: 308,
            column: 119
          },
          end: {
            line: 308,
            column: 132
          }
        }],
        line: 308
      },
      "37": {
        loc: {
          start: {
            line: 308,
            column: 32
          },
          end: {
            line: 308,
            column: 105
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 308,
            column: 86
          },
          end: {
            line: 308,
            column: 92
          }
        }, {
          start: {
            line: 308,
            column: 95
          },
          end: {
            line: 308,
            column: 105
          }
        }],
        line: 308
      },
      "38": {
        loc: {
          start: {
            line: 308,
            column: 32
          },
          end: {
            line: 308,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 308,
            column: 32
          },
          end: {
            line: 308,
            column: 66
          }
        }, {
          start: {
            line: 308,
            column: 70
          },
          end: {
            line: 308,
            column: 83
          }
        }],
        line: 308
      },
      "39": {
        loc: {
          start: {
            line: 309,
            column: 26
          },
          end: {
            line: 309,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 309,
            column: 26
          },
          end: {
            line: 309,
            column: 47
          }
        }, {
          start: {
            line: 309,
            column: 51
          },
          end: {
            line: 309,
            column: 75
          }
        }],
        line: 309
      },
      "40": {
        loc: {
          start: {
            line: 313,
            column: 29
          },
          end: {
            line: 313,
            column: 128
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 313,
            column: 30
          },
          end: {
            line: 313,
            column: 97
          }
        }, {
          start: {
            line: 313,
            column: 102
          },
          end: {
            line: 313,
            column: 128
          }
        }],
        line: 313
      },
      "41": {
        loc: {
          start: {
            line: 313,
            column: 30
          },
          end: {
            line: 313,
            column: 97
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 313,
            column: 81
          },
          end: {
            line: 313,
            column: 87
          }
        }, {
          start: {
            line: 313,
            column: 90
          },
          end: {
            line: 313,
            column: 97
          }
        }],
        line: 313
      },
      "42": {
        loc: {
          start: {
            line: 313,
            column: 30
          },
          end: {
            line: 313,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 313,
            column: 30
          },
          end: {
            line: 313,
            column: 61
          }
        }, {
          start: {
            line: 313,
            column: 65
          },
          end: {
            line: 313,
            column: 78
          }
        }],
        line: 313
      },
      "43": {
        loc: {
          start: {
            line: 318,
            column: 37
          },
          end: {
            line: 318,
            column: 100
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 318,
            column: 52
          },
          end: {
            line: 318,
            column: 88
          }
        }, {
          start: {
            line: 318,
            column: 91
          },
          end: {
            line: 318,
            column: 100
          }
        }],
        line: 318
      },
      "44": {
        loc: {
          start: {
            line: 338,
            column: 15
          },
          end: {
            line: 338,
            column: 38
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 338,
            column: 23
          },
          end: {
            line: 338,
            column: 31
          }
        }, {
          start: {
            line: 338,
            column: 34
          },
          end: {
            line: 338,
            column: 38
          }
        }],
        line: 338
      },
      "45": {
        loc: {
          start: {
            line: 341,
            column: 8
          },
          end: {
            line: 347,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 342,
            column: 12
          },
          end: {
            line: 342,
            column: 49
          }
        }, {
          start: {
            line: 343,
            column: 12
          },
          end: {
            line: 343,
            column: 49
          }
        }, {
          start: {
            line: 344,
            column: 12
          },
          end: {
            line: 344,
            column: 47
          }
        }, {
          start: {
            line: 345,
            column: 12
          },
          end: {
            line: 345,
            column: 51
          }
        }, {
          start: {
            line: 346,
            column: 12
          },
          end: {
            line: 346,
            column: 40
          }
        }],
        line: 341
      },
      "46": {
        loc: {
          start: {
            line: 341,
            column: 16
          },
          end: {
            line: 341,
            column: 114
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 341,
            column: 75
          },
          end: {
            line: 341,
            column: 81
          }
        }, {
          start: {
            line: 341,
            column: 84
          },
          end: {
            line: 341,
            column: 114
          }
        }],
        line: 341
      },
      "47": {
        loc: {
          start: {
            line: 341,
            column: 16
          },
          end: {
            line: 341,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 341,
            column: 16
          },
          end: {
            line: 341,
            column: 41
          }
        }, {
          start: {
            line: 341,
            column: 45
          },
          end: {
            line: 341,
            column: 72
          }
        }],
        line: 341
      },
      "48": {
        loc: {
          start: {
            line: 350,
            column: 8
          },
          end: {
            line: 351,
            column: 28
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 350,
            column: 8
          },
          end: {
            line: 351,
            column: 28
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 350
      },
      "49": {
        loc: {
          start: {
            line: 350,
            column: 12
          },
          end: {
            line: 350,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 350,
            column: 12
          },
          end: {
            line: 350,
            column: 27
          }
        }, {
          start: {
            line: 350,
            column: 31
          },
          end: {
            line: 350,
            column: 58
          }
        }],
        line: 350
      },
      "50": {
        loc: {
          start: {
            line: 352,
            column: 8
          },
          end: {
            line: 353,
            column: 28
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 352,
            column: 8
          },
          end: {
            line: 353,
            column: 28
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 352
      },
      "51": {
        loc: {
          start: {
            line: 354,
            column: 8
          },
          end: {
            line: 355,
            column: 28
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 354,
            column: 8
          },
          end: {
            line: 355,
            column: 28
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 354
      },
      "52": {
        loc: {
          start: {
            line: 361,
            column: 44
          },
          end: {
            line: 361,
            column: 56
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 361,
            column: 54
          },
          end: {
            line: 361,
            column: 56
          }
        }],
        line: 361
      },
      "53": {
        loc: {
          start: {
            line: 363,
            column: 19
          },
          end: {
            line: 363,
            column: 56
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 363,
            column: 40
          },
          end: {
            line: 363,
            column: 47
          }
        }, {
          start: {
            line: 363,
            column: 50
          },
          end: {
            line: 363,
            column: 56
          }
        }],
        line: 363
      },
      "54": {
        loc: {
          start: {
            line: 369,
            column: 25
          },
          end: {
            line: 369,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 369,
            column: 46
          },
          end: {
            line: 369,
            column: 53
          }
        }, {
          start: {
            line: 369,
            column: 56
          },
          end: {
            line: 369,
            column: 61
          }
        }],
        line: 369
      },
      "55": {
        loc: {
          start: {
            line: 377,
            column: 4
          },
          end: {
            line: 379,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 377,
            column: 4
          },
          end: {
            line: 379,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 377
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0, 0, 0, 0],
      "27": [0, 0, 0, 0, 0, 0],
      "28": [0, 0, 0, 0],
      "29": [0, 0, 0, 0, 0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0, 0, 0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/dikshantvashistha/PrepBettr/portals/linkedin.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/dikshantvashistha/PrepBettr/portals/linkedin.ts"],
      sourcesContent: ["import Bottleneck from 'bottleneck';\nimport { getAzureTokenService, AzureADConfig } from '../lib/services/azure-token-service';\nimport { JobListing, JobSearchFilters, ApplicationStatus } from '../types/auto-apply';\nimport { retryWithExponentialBackoff } from '../lib/utils/retry-with-backoff';\n\ninterface LinkedInJobSearchParams {\n  keywords?: string;\n  location?: string;\n  distance?: number;\n  jobType?: 'C' | 'P' | 'T' | 'I' | 'F' | 'V' | 'O'; // Contract, Part-time, Temporary, Internship, Full-time, Volunteer, Other\n  experienceLevel?: '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' | '10'; // 1=Internship, 2=Entry level, 3=Associate, 4=Mid-Senior, 5=Director, 6=Executive\n  datePosted?: 'r86400' | 'r604800' | 'r2592000' | ''; // Past 24 hours, Past week, Past month, Any time\n  sort?: 'DD' | 'R'; // Date Posted, Relevance\n  start?: number;\n  count?: number;\n}\n\ninterface LinkedInJobResponse {\n  elements: LinkedInJob[];\n  paging: {\n    count: number;\n    start: number;\n    total?: number;\n  };\n}\n\ninterface LinkedInJob {\n  entityUrn: string;\n  title: string;\n  companyDetails: {\n    company: {\n      name: string;\n      entityUrn: string;\n    };\n  };\n  formattedLocation?: string;\n  workplaceTypes?: string[];\n  employmentStatus?: string;\n  jobPostingOperationType?: string;\n  listedAt: number;\n  expireAt?: number;\n  description?: {\n    text: string;\n  };\n}\n\ninterface LinkedInProfileInfo {\n  id: string;\n  firstName: string;\n  lastName: string;\n  emailAddress: string;\n  profilePicture?: {\n    displayImage: string;\n  };\n}\n\nexport class LinkedInPortal {\n  private tokenService = getAzureTokenService();\n  private rateLimiter: Bottleneck;\n  private baseUrl = 'https://api.linkedin.com/v2';\n  private azureAdConfig: AzureADConfig | null = null;\n\n  constructor() {\n    // LinkedIn API rate limits: 500 requests per person per day for job search\n    // Be more conservative with our limits\n    this.rateLimiter = new Bottleneck({\n      minTime: 2000, // Minimum 2 seconds between requests\n      maxConcurrent: 1, // Only 1 concurrent request\n      reservoir: 400, // 400 requests per day\n      reservoirRefreshAmount: 400,\n      reservoirRefreshInterval: 24 * 60 * 60 * 1000, // Refresh every 24 hours\n    });\n  }\n\n  /**\n   * Initialize LinkedIn portal with Azure AD configuration\n   */\n  async initialize(): Promise<void> {\n    this.azureAdConfig = await this.tokenService.getAzureADConfig('linkedin');\n    if (!this.azureAdConfig) {\n      throw new Error('LinkedIn Azure AD configuration not found. Please configure OAuth app first.');\n    }\n  }\n\n  /**\n   * Generate OAuth authorization URL for LinkedIn\n   */\n  generateAuthUrl(userId: string, state?: string): string {\n    if (!this.azureAdConfig) {\n      throw new Error('LinkedIn portal not initialized');\n    }\n\n    const params = new URLSearchParams({\n      response_type: 'code',\n      client_id: this.azureAdConfig.clientId,\n      redirect_uri: this.azureAdConfig.redirectUri,\n      state: state || userId,\n      scope: this.azureAdConfig.scopes.join(' '),\n    });\n\n    return `https://www.linkedin.com/oauth/v2/authorization?${params.toString()}`;\n  }\n\n  /**\n   * Exchange authorization code for access token\n   */\n  async exchangeCodeForTokens(code: string, userId: string): Promise<boolean> {\n    if (!this.azureAdConfig) {\n      throw new Error('LinkedIn portal not initialized');\n    }\n\n    try {\n      const response = await fetch('https://www.linkedin.com/oauth/v2/accessToken', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n        },\n        body: new URLSearchParams({\n          grant_type: 'authorization_code',\n          code,\n          redirect_uri: this.azureAdConfig.redirectUri,\n          client_id: this.azureAdConfig.clientId,\n          client_secret: this.azureAdConfig.clientSecret,\n        }).toString(),\n      });\n\n      if (!response.ok) {\n        throw new Error(`Token exchange failed: ${response.status} ${response.statusText}`);\n      }\n\n      const data = await response.json();\n      \n      const tokens = {\n        accessToken: data.access_token,\n        refreshToken: data.refresh_token || '',\n        expiresAt: Date.now() + (data.expires_in * 1000),\n        tokenType: data.token_type || 'Bearer',\n        scope: data.scope,\n      };\n\n      await this.tokenService.storeTokens('linkedin', userId, tokens);\n      return true;\n    } catch (error) {\n      console.error('LinkedIn token exchange error:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Get authenticated user profile\n   */\n  async getProfile(userId: string): Promise<LinkedInProfileInfo | null> {\n    if (!this.azureAdConfig) {\n      throw new Error('LinkedIn portal not initialized');\n    }\n\n    const accessToken = await this.tokenService.getValidAccessToken('linkedin', userId, this.azureAdConfig);\n    if (!accessToken) {\n      throw new Error('No valid LinkedIn access token found');\n    }\n\n    try {\n      const response = await this.rateLimiter.schedule(async () => {\n        return fetch(`${this.baseUrl}/people/~:(id,firstName,lastName,emailAddress,profilePicture(displayImage))`, {\n          headers: {\n            'Authorization': `Bearer ${accessToken}`,\n            'Content-Type': 'application/json',\n          },\n        });\n      });\n\n      if (!response.ok) {\n        throw new Error(`LinkedIn profile fetch failed: ${response.status}`);\n      }\n\n      return await response.json();\n    } catch (error) {\n      console.error('LinkedIn profile fetch error:', error);\n      return null;\n    }\n  }\n\n  /**\n   * Search for jobs on LinkedIn with retry logic and structured logging\n   */\n  async searchJobs(userId: string, filters: JobSearchFilters): Promise<JobListing[]> {\n    if (!this.azureAdConfig) {\n      throw new Error('LinkedIn portal not initialized');\n    }\n\n    const accessToken = await this.tokenService.getValidAccessToken('linkedin', userId, this.azureAdConfig);\n    if (!accessToken) {\n      throw new Error('No valid LinkedIn access token found');\n    }\n\n    const searchParams: LinkedInJobSearchParams = {\n      keywords: filters.keywords.join(' '),\n      location: filters.locations[0] || '',\n      jobType: this.mapJobTypeToLinkedIn(filters.jobTypes[0]),\n      experienceLevel: this.mapExperienceLevelToLinkedIn(filters.experienceLevel[0]),\n      datePosted: this.mapDatePostedToLinkedIn(filters.datePosted),\n      count: 25, // Maximum per request\n      start: 0,\n    };\n\n    return await retryWithExponentialBackoff(\n      async () => {\n        this.logPortalAction(userId, 'job_search', 'started', { searchParams, portal: 'LinkedIn' });\n        \n        const queryParams = new URLSearchParams();\n        Object.entries(searchParams).forEach(([key, value]) => {\n          if (value !== undefined && value !== '') {\n            queryParams.append(key, value.toString());\n          }\n        });\n\n        const response = await this.rateLimiter.schedule(async () => {\n          return fetch(`${this.baseUrl}/jobSearch?${queryParams.toString()}`, {\n            headers: {\n              'Authorization': `Bearer ${accessToken}`,\n              'Content-Type': 'application/json',\n            },\n          });\n        });\n\n        if (!response.ok) {\n          throw new Error(`LinkedIn job search failed: ${response.status} ${response.statusText}`);\n        }\n\n        const data: LinkedInJobResponse = await response.json();\n        const jobs = this.transformLinkedInJobsToJobListings(data.elements);\n        \n        this.logPortalAction(userId, 'job_search', 'completed', {\n          jobsFound: jobs.length,\n          totalResults: data.paging.total,\n          portal: 'LinkedIn'\n        });\n        \n        return jobs;\n      },\n      'linkedin_job_search',\n      userId,\n      {\n        maxRetries: 2,\n        baseDelay: 3000, // LinkedIn rate limits are strict\n        maxDelay: 30000\n      }\n    ).catch(error => {\n      this.logPortalAction(userId, 'job_search', 'error', {\n        error: error.message,\n        portal: 'LinkedIn'\n      });\n      return []; // Return empty array on failure\n    });\n  }\n\n  /**\n   * Apply to a job on LinkedIn (simplified - would need more complex implementation)\n   */\n  async applyToJob(userId: string, jobId: string, applicationData: any): Promise<{ success: boolean; message: string }> {\n    if (!this.azureAdConfig) {\n      throw new Error('LinkedIn portal not initialized');\n    }\n\n    const accessToken = await this.tokenService.getValidAccessToken('linkedin', userId, this.azureAdConfig);\n    if (!accessToken) {\n      return { success: false, message: 'No valid LinkedIn access token found' };\n    }\n\n    try {\n      // Note: LinkedIn's actual job application API is complex and requires special permissions\n      // This is a simplified implementation for demonstration\n      const response = await this.rateLimiter.schedule(async () => {\n        return fetch(`${this.baseUrl}/jobs/${jobId}/application`, {\n          method: 'POST',\n          headers: {\n            'Authorization': `Bearer ${accessToken}`,\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            candidateApplication: {\n              jobApplication: {\n                job: `urn:li:job:${jobId}`,\n                ...applicationData,\n              },\n            },\n          }),\n        });\n      });\n\n      if (!response.ok) {\n        throw new Error(`LinkedIn job application failed: ${response.status}`);\n      }\n\n      return { success: true, message: 'Application submitted successfully' };\n    } catch (error) {\n      console.error('LinkedIn job application error:', error);\n      return { success: false, message: `Application failed: ${error}` };\n    }\n  }\n\n  /**\n   * Get application status for a job\n   */\n  async getApplicationStatus(userId: string, jobId: string): Promise<ApplicationStatus> {\n    if (!this.azureAdConfig) {\n      throw new Error('LinkedIn portal not initialized');\n    }\n\n    const accessToken = await this.tokenService.getValidAccessToken('linkedin', userId, this.azureAdConfig);\n    if (!accessToken) {\n      return 'discovered';\n    }\n\n    try {\n      const response = await this.rateLimiter.schedule(async () => {\n        return fetch(`${this.baseUrl}/jobs/${jobId}/applications`, {\n          headers: {\n            'Authorization': `Bearer ${accessToken}`,\n            'Content-Type': 'application/json',\n          },\n        });\n      });\n\n      if (!response.ok) {\n        return 'discovered';\n      }\n\n      const data = await response.json();\n      // Transform LinkedIn application status to our application status\n      return this.mapLinkedInStatusToApplicationStatus(data.status);\n    } catch (error) {\n      console.error('LinkedIn application status error:', error);\n      return 'discovered';\n    }\n  }\n\n  /**\n   * Check if user is connected to LinkedIn\n   */\n  async isConnected(userId: string): Promise<boolean> {\n    const tokens = await this.tokenService.getTokens('linkedin', userId);\n    return tokens !== null && tokens.expiresAt > Date.now();\n  }\n\n  /**\n   * Disconnect user from LinkedIn\n   */\n  async disconnect(userId: string): Promise<void> {\n    await this.tokenService.deleteTokens('linkedin', userId);\n  }\n\n  // Helper methods for mapping between our types and LinkedIn types\n  private mapJobTypeToLinkedIn(jobType?: string): LinkedInJobSearchParams['jobType'] {\n    switch (jobType) {\n      case 'full-time': return 'F';\n      case 'part-time': return 'P';\n      case 'contract': return 'C';\n      case 'internship': return 'I';\n      default: return undefined;\n    }\n  }\n\n  private mapExperienceLevelToLinkedIn(level?: string): LinkedInJobSearchParams['experienceLevel'] {\n    switch (level) {\n      case 'entry-level': return '2';\n      case 'associate': return '3';\n      case 'mid-senior': return '4';\n      case 'director': return '5';\n      case 'executive': return '6';\n      default: return undefined;\n    }\n  }\n\n  private mapDatePostedToLinkedIn(datePosted: string): LinkedInJobSearchParams['datePosted'] {\n    switch (datePosted) {\n      case 'past-24-hours': return 'r86400';\n      case 'past-week': return 'r604800';\n      case 'past-month': return 'r2592000';\n      default: return '';\n    }\n  }\n\n  private mapLinkedInStatusToApplicationStatus(linkedinStatus: string): ApplicationStatus {\n    switch (linkedinStatus?.toLowerCase()) {\n      case 'submitted': return 'applied';\n      case 'viewed': return 'application_viewed';\n      case 'interviewing': return 'interview_request';\n      case 'rejected': return 'rejected';\n      case 'withdrawn': return 'withdrawn';\n      default: return 'discovered';\n    }\n  }\n\n  private transformLinkedInJobsToJobListings(linkedinJobs: LinkedInJob[]): JobListing[] {\n    return linkedinJobs.map((job, index) => {\n      const jobId = this.extractJobIdFromUrn(job.entityUrn) || `linkedin-${Date.now()}-${index}`;\n      \n      return {\n        id: jobId,\n        title: job.title || 'Untitled Position',\n        company: job.companyDetails?.company?.name || 'Unknown Company',\n        location: job.formattedLocation || 'Location not specified',\n        salary: undefined, // LinkedIn often doesn't provide salary in search results\n        jobType: this.mapLinkedInJobTypeToOur(job.employmentStatus) as any,\n        workArrangement: this.mapWorkplaceTypesToOur(job.workplaceTypes) as any,\n        description: job.description?.text || 'No description available',\n        requirements: [], // Would need detailed job fetch\n        responsibilities: [], // Would need detailed job fetch\n        benefits: undefined,\n        postedDate: new Date(job.listedAt).toISOString(),\n        applicationDeadline: job.expireAt ? new Date(job.expireAt).toISOString() : undefined,\n        jobPortal: {\n          name: 'LinkedIn',\n          logo: '/icons/linkedin.svg',\n          website: 'https://linkedin.com',\n          supportsAutoApply: true,\n        },\n        originalUrl: `https://www.linkedin.com/jobs/view/${jobId}`,\n        companyLogo: undefined, // Would need company details fetch\n        relevancyScore: undefined,\n        matchedSkills: [],\n        missingSkills: [],\n        applicationStatus: 'discovered',\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString(),\n      };\n    });\n  }\n\n  private extractJobIdFromUrn(urn: string): string | null {\n    const match = urn.match(/urn:li:job:(\\d+)/);\n    return match ? match[1] : null;\n  }\n\n  private mapLinkedInJobTypeToOur(employmentStatus?: string): string {\n    switch (employmentStatus?.toLowerCase()) {\n      case 'full_time': return 'full-time';\n      case 'part_time': return 'part-time';\n      case 'contract': return 'contract';\n      case 'internship': return 'internship';\n      default: return 'full-time';\n    }\n  }\n\n  private mapWorkplaceTypesToOur(workplaceTypes?: string[]): string {\n    if (!workplaceTypes || workplaceTypes.length === 0) return 'onsite';\n    \n    if (workplaceTypes.includes('remote')) return 'remote';\n    if (workplaceTypes.includes('hybrid')) return 'hybrid';\n    return 'onsite';\n  }\n\n  /**\n   * Log portal actions with structured logging for Application Insights\n   */\n  private logPortalAction(userId: string, action: string, status: string, details: any = {}): void {\n    const logData = {\n      level: status === 'error' ? 'error' : 'info',\n      message: `LinkedIn portal ${action} ${status}`,\n      properties: {\n        userId,\n        action,\n        status,\n        portal: 'LinkedIn',\n        ...details,\n        timestamp: new Date().toISOString()\n      }\n    };\n\n    const logLevel = status === 'error' ? 'error' : 'log';\n    console[logLevel]('PORTAL_ACTION', JSON.stringify(logData));\n  }\n}\n\n// Singleton instance\nlet linkedinPortalInstance: LinkedInPortal | null = null;\n\nexport function getLinkedInPortal(): LinkedInPortal {\n  if (!linkedinPortalInstance) {\n    linkedinPortalInstance = new LinkedInPortal();\n  }\n  return linkedinPortalInstance;\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "4a51c65732ab1dfbef13a026b467006b03b6ec9b"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_17s5x822ru = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_17s5x822ru();
var __importDefault =
/* istanbul ignore next */
(cov_17s5x822ru().s[0]++,
/* istanbul ignore next */
(cov_17s5x822ru().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_17s5x822ru().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_17s5x822ru().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_17s5x822ru().f[0]++;
  cov_17s5x822ru().s[1]++;
  return /* istanbul ignore next */(cov_17s5x822ru().b[2][0]++, mod) &&
  /* istanbul ignore next */
  (cov_17s5x822ru().b[2][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_17s5x822ru().b[1][0]++, mod) :
  /* istanbul ignore next */
  (cov_17s5x822ru().b[1][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_17s5x822ru().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_17s5x822ru().s[3]++;
exports.LinkedInPortal = void 0;
/* istanbul ignore next */
cov_17s5x822ru().s[4]++;
exports.getLinkedInPortal = getLinkedInPortal;
const bottleneck_1 =
/* istanbul ignore next */
(cov_17s5x822ru().s[5]++, __importDefault(require("bottleneck")));
const azure_token_service_1 =
/* istanbul ignore next */
(cov_17s5x822ru().s[6]++, require("../lib/services/azure-token-service"));
const retry_with_backoff_1 =
/* istanbul ignore next */
(cov_17s5x822ru().s[7]++, require("../lib/utils/retry-with-backoff"));
class LinkedInPortal {
  constructor() {
    /* istanbul ignore next */
    cov_17s5x822ru().f[1]++;
    cov_17s5x822ru().s[8]++;
    this.tokenService = (0, azure_token_service_1.getAzureTokenService)();
    /* istanbul ignore next */
    cov_17s5x822ru().s[9]++;
    this.baseUrl = 'https://api.linkedin.com/v2';
    /* istanbul ignore next */
    cov_17s5x822ru().s[10]++;
    this.azureAdConfig = null;
    // LinkedIn API rate limits: 500 requests per person per day for job search
    // Be more conservative with our limits
    /* istanbul ignore next */
    cov_17s5x822ru().s[11]++;
    this.rateLimiter = new bottleneck_1.default({
      minTime: 2000,
      // Minimum 2 seconds between requests
      maxConcurrent: 1,
      // Only 1 concurrent request
      reservoir: 400,
      // 400 requests per day
      reservoirRefreshAmount: 400,
      reservoirRefreshInterval: 24 * 60 * 60 * 1000 // Refresh every 24 hours
    });
  }
  /**
   * Initialize LinkedIn portal with Azure AD configuration
   */
  async initialize() {
    /* istanbul ignore next */
    cov_17s5x822ru().f[2]++;
    cov_17s5x822ru().s[12]++;
    this.azureAdConfig = await this.tokenService.getAzureADConfig('linkedin');
    /* istanbul ignore next */
    cov_17s5x822ru().s[13]++;
    if (!this.azureAdConfig) {
      /* istanbul ignore next */
      cov_17s5x822ru().b[3][0]++;
      cov_17s5x822ru().s[14]++;
      throw new Error('LinkedIn Azure AD configuration not found. Please configure OAuth app first.');
    } else
    /* istanbul ignore next */
    {
      cov_17s5x822ru().b[3][1]++;
    }
  }
  /**
   * Generate OAuth authorization URL for LinkedIn
   */
  generateAuthUrl(userId, state) {
    /* istanbul ignore next */
    cov_17s5x822ru().f[3]++;
    cov_17s5x822ru().s[15]++;
    if (!this.azureAdConfig) {
      /* istanbul ignore next */
      cov_17s5x822ru().b[4][0]++;
      cov_17s5x822ru().s[16]++;
      throw new Error('LinkedIn portal not initialized');
    } else
    /* istanbul ignore next */
    {
      cov_17s5x822ru().b[4][1]++;
    }
    const params =
    /* istanbul ignore next */
    (cov_17s5x822ru().s[17]++, new URLSearchParams({
      response_type: 'code',
      client_id: this.azureAdConfig.clientId,
      redirect_uri: this.azureAdConfig.redirectUri,
      state:
      /* istanbul ignore next */
      (cov_17s5x822ru().b[5][0]++, state) ||
      /* istanbul ignore next */
      (cov_17s5x822ru().b[5][1]++, userId),
      scope: this.azureAdConfig.scopes.join(' ')
    }));
    /* istanbul ignore next */
    cov_17s5x822ru().s[18]++;
    return `https://www.linkedin.com/oauth/v2/authorization?${params.toString()}`;
  }
  /**
   * Exchange authorization code for access token
   */
  async exchangeCodeForTokens(code, userId) {
    /* istanbul ignore next */
    cov_17s5x822ru().f[4]++;
    cov_17s5x822ru().s[19]++;
    if (!this.azureAdConfig) {
      /* istanbul ignore next */
      cov_17s5x822ru().b[6][0]++;
      cov_17s5x822ru().s[20]++;
      throw new Error('LinkedIn portal not initialized');
    } else
    /* istanbul ignore next */
    {
      cov_17s5x822ru().b[6][1]++;
    }
    cov_17s5x822ru().s[21]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_17s5x822ru().s[22]++, await fetch('https://www.linkedin.com/oauth/v2/accessToken', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/x-www-form-urlencoded'
        },
        body: new URLSearchParams({
          grant_type: 'authorization_code',
          code,
          redirect_uri: this.azureAdConfig.redirectUri,
          client_id: this.azureAdConfig.clientId,
          client_secret: this.azureAdConfig.clientSecret
        }).toString()
      }));
      /* istanbul ignore next */
      cov_17s5x822ru().s[23]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_17s5x822ru().b[7][0]++;
        cov_17s5x822ru().s[24]++;
        throw new Error(`Token exchange failed: ${response.status} ${response.statusText}`);
      } else
      /* istanbul ignore next */
      {
        cov_17s5x822ru().b[7][1]++;
      }
      const data =
      /* istanbul ignore next */
      (cov_17s5x822ru().s[25]++, await response.json());
      const tokens =
      /* istanbul ignore next */
      (cov_17s5x822ru().s[26]++, {
        accessToken: data.access_token,
        refreshToken:
        /* istanbul ignore next */
        (cov_17s5x822ru().b[8][0]++, data.refresh_token) ||
        /* istanbul ignore next */
        (cov_17s5x822ru().b[8][1]++, ''),
        expiresAt: Date.now() + data.expires_in * 1000,
        tokenType:
        /* istanbul ignore next */
        (cov_17s5x822ru().b[9][0]++, data.token_type) ||
        /* istanbul ignore next */
        (cov_17s5x822ru().b[9][1]++, 'Bearer'),
        scope: data.scope
      });
      /* istanbul ignore next */
      cov_17s5x822ru().s[27]++;
      await this.tokenService.storeTokens('linkedin', userId, tokens);
      /* istanbul ignore next */
      cov_17s5x822ru().s[28]++;
      return true;
    } catch (error) {
      /* istanbul ignore next */
      cov_17s5x822ru().s[29]++;
      console.error('LinkedIn token exchange error:', error);
      /* istanbul ignore next */
      cov_17s5x822ru().s[30]++;
      return false;
    }
  }
  /**
   * Get authenticated user profile
   */
  async getProfile(userId) {
    /* istanbul ignore next */
    cov_17s5x822ru().f[5]++;
    cov_17s5x822ru().s[31]++;
    if (!this.azureAdConfig) {
      /* istanbul ignore next */
      cov_17s5x822ru().b[10][0]++;
      cov_17s5x822ru().s[32]++;
      throw new Error('LinkedIn portal not initialized');
    } else
    /* istanbul ignore next */
    {
      cov_17s5x822ru().b[10][1]++;
    }
    const accessToken =
    /* istanbul ignore next */
    (cov_17s5x822ru().s[33]++, await this.tokenService.getValidAccessToken('linkedin', userId, this.azureAdConfig));
    /* istanbul ignore next */
    cov_17s5x822ru().s[34]++;
    if (!accessToken) {
      /* istanbul ignore next */
      cov_17s5x822ru().b[11][0]++;
      cov_17s5x822ru().s[35]++;
      throw new Error('No valid LinkedIn access token found');
    } else
    /* istanbul ignore next */
    {
      cov_17s5x822ru().b[11][1]++;
    }
    cov_17s5x822ru().s[36]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_17s5x822ru().s[37]++, await this.rateLimiter.schedule(async () => {
        /* istanbul ignore next */
        cov_17s5x822ru().f[6]++;
        cov_17s5x822ru().s[38]++;
        return fetch(`${this.baseUrl}/people/~:(id,firstName,lastName,emailAddress,profilePicture(displayImage))`, {
          headers: {
            'Authorization': `Bearer ${accessToken}`,
            'Content-Type': 'application/json'
          }
        });
      }));
      /* istanbul ignore next */
      cov_17s5x822ru().s[39]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_17s5x822ru().b[12][0]++;
        cov_17s5x822ru().s[40]++;
        throw new Error(`LinkedIn profile fetch failed: ${response.status}`);
      } else
      /* istanbul ignore next */
      {
        cov_17s5x822ru().b[12][1]++;
      }
      cov_17s5x822ru().s[41]++;
      return await response.json();
    } catch (error) {
      /* istanbul ignore next */
      cov_17s5x822ru().s[42]++;
      console.error('LinkedIn profile fetch error:', error);
      /* istanbul ignore next */
      cov_17s5x822ru().s[43]++;
      return null;
    }
  }
  /**
   * Search for jobs on LinkedIn with retry logic and structured logging
   */
  async searchJobs(userId, filters) {
    /* istanbul ignore next */
    cov_17s5x822ru().f[7]++;
    cov_17s5x822ru().s[44]++;
    if (!this.azureAdConfig) {
      /* istanbul ignore next */
      cov_17s5x822ru().b[13][0]++;
      cov_17s5x822ru().s[45]++;
      throw new Error('LinkedIn portal not initialized');
    } else
    /* istanbul ignore next */
    {
      cov_17s5x822ru().b[13][1]++;
    }
    const accessToken =
    /* istanbul ignore next */
    (cov_17s5x822ru().s[46]++, await this.tokenService.getValidAccessToken('linkedin', userId, this.azureAdConfig));
    /* istanbul ignore next */
    cov_17s5x822ru().s[47]++;
    if (!accessToken) {
      /* istanbul ignore next */
      cov_17s5x822ru().b[14][0]++;
      cov_17s5x822ru().s[48]++;
      throw new Error('No valid LinkedIn access token found');
    } else
    /* istanbul ignore next */
    {
      cov_17s5x822ru().b[14][1]++;
    }
    const searchParams =
    /* istanbul ignore next */
    (cov_17s5x822ru().s[49]++, {
      keywords: filters.keywords.join(' '),
      location:
      /* istanbul ignore next */
      (cov_17s5x822ru().b[15][0]++, filters.locations[0]) ||
      /* istanbul ignore next */
      (cov_17s5x822ru().b[15][1]++, ''),
      jobType: this.mapJobTypeToLinkedIn(filters.jobTypes[0]),
      experienceLevel: this.mapExperienceLevelToLinkedIn(filters.experienceLevel[0]),
      datePosted: this.mapDatePostedToLinkedIn(filters.datePosted),
      count: 25,
      // Maximum per request
      start: 0
    });
    /* istanbul ignore next */
    cov_17s5x822ru().s[50]++;
    return await (0, retry_with_backoff_1.retryWithExponentialBackoff)(async () => {
      /* istanbul ignore next */
      cov_17s5x822ru().f[8]++;
      cov_17s5x822ru().s[51]++;
      this.logPortalAction(userId, 'job_search', 'started', {
        searchParams,
        portal: 'LinkedIn'
      });
      const queryParams =
      /* istanbul ignore next */
      (cov_17s5x822ru().s[52]++, new URLSearchParams());
      /* istanbul ignore next */
      cov_17s5x822ru().s[53]++;
      Object.entries(searchParams).forEach(([key, value]) => {
        /* istanbul ignore next */
        cov_17s5x822ru().f[9]++;
        cov_17s5x822ru().s[54]++;
        if (
        /* istanbul ignore next */
        (cov_17s5x822ru().b[17][0]++, value !== undefined) &&
        /* istanbul ignore next */
        (cov_17s5x822ru().b[17][1]++, value !== '')) {
          /* istanbul ignore next */
          cov_17s5x822ru().b[16][0]++;
          cov_17s5x822ru().s[55]++;
          queryParams.append(key, value.toString());
        } else
        /* istanbul ignore next */
        {
          cov_17s5x822ru().b[16][1]++;
        }
      });
      const response =
      /* istanbul ignore next */
      (cov_17s5x822ru().s[56]++, await this.rateLimiter.schedule(async () => {
        /* istanbul ignore next */
        cov_17s5x822ru().f[10]++;
        cov_17s5x822ru().s[57]++;
        return fetch(`${this.baseUrl}/jobSearch?${queryParams.toString()}`, {
          headers: {
            'Authorization': `Bearer ${accessToken}`,
            'Content-Type': 'application/json'
          }
        });
      }));
      /* istanbul ignore next */
      cov_17s5x822ru().s[58]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_17s5x822ru().b[18][0]++;
        cov_17s5x822ru().s[59]++;
        throw new Error(`LinkedIn job search failed: ${response.status} ${response.statusText}`);
      } else
      /* istanbul ignore next */
      {
        cov_17s5x822ru().b[18][1]++;
      }
      const data =
      /* istanbul ignore next */
      (cov_17s5x822ru().s[60]++, await response.json());
      const jobs =
      /* istanbul ignore next */
      (cov_17s5x822ru().s[61]++, this.transformLinkedInJobsToJobListings(data.elements));
      /* istanbul ignore next */
      cov_17s5x822ru().s[62]++;
      this.logPortalAction(userId, 'job_search', 'completed', {
        jobsFound: jobs.length,
        totalResults: data.paging.total,
        portal: 'LinkedIn'
      });
      /* istanbul ignore next */
      cov_17s5x822ru().s[63]++;
      return jobs;
    }, 'linkedin_job_search', userId, {
      maxRetries: 2,
      baseDelay: 3000,
      // LinkedIn rate limits are strict
      maxDelay: 30000
    }).catch(error => {
      /* istanbul ignore next */
      cov_17s5x822ru().f[11]++;
      cov_17s5x822ru().s[64]++;
      this.logPortalAction(userId, 'job_search', 'error', {
        error: error.message,
        portal: 'LinkedIn'
      });
      /* istanbul ignore next */
      cov_17s5x822ru().s[65]++;
      return []; // Return empty array on failure
    });
  }
  /**
   * Apply to a job on LinkedIn (simplified - would need more complex implementation)
   */
  async applyToJob(userId, jobId, applicationData) {
    /* istanbul ignore next */
    cov_17s5x822ru().f[12]++;
    cov_17s5x822ru().s[66]++;
    if (!this.azureAdConfig) {
      /* istanbul ignore next */
      cov_17s5x822ru().b[19][0]++;
      cov_17s5x822ru().s[67]++;
      throw new Error('LinkedIn portal not initialized');
    } else
    /* istanbul ignore next */
    {
      cov_17s5x822ru().b[19][1]++;
    }
    const accessToken =
    /* istanbul ignore next */
    (cov_17s5x822ru().s[68]++, await this.tokenService.getValidAccessToken('linkedin', userId, this.azureAdConfig));
    /* istanbul ignore next */
    cov_17s5x822ru().s[69]++;
    if (!accessToken) {
      /* istanbul ignore next */
      cov_17s5x822ru().b[20][0]++;
      cov_17s5x822ru().s[70]++;
      return {
        success: false,
        message: 'No valid LinkedIn access token found'
      };
    } else
    /* istanbul ignore next */
    {
      cov_17s5x822ru().b[20][1]++;
    }
    cov_17s5x822ru().s[71]++;
    try {
      // Note: LinkedIn's actual job application API is complex and requires special permissions
      // This is a simplified implementation for demonstration
      const response =
      /* istanbul ignore next */
      (cov_17s5x822ru().s[72]++, await this.rateLimiter.schedule(async () => {
        /* istanbul ignore next */
        cov_17s5x822ru().f[13]++;
        cov_17s5x822ru().s[73]++;
        return fetch(`${this.baseUrl}/jobs/${jobId}/application`, {
          method: 'POST',
          headers: {
            'Authorization': `Bearer ${accessToken}`,
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            candidateApplication: {
              jobApplication: Object.assign({
                job: `urn:li:job:${jobId}`
              }, applicationData)
            }
          })
        });
      }));
      /* istanbul ignore next */
      cov_17s5x822ru().s[74]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_17s5x822ru().b[21][0]++;
        cov_17s5x822ru().s[75]++;
        throw new Error(`LinkedIn job application failed: ${response.status}`);
      } else
      /* istanbul ignore next */
      {
        cov_17s5x822ru().b[21][1]++;
      }
      cov_17s5x822ru().s[76]++;
      return {
        success: true,
        message: 'Application submitted successfully'
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_17s5x822ru().s[77]++;
      console.error('LinkedIn job application error:', error);
      /* istanbul ignore next */
      cov_17s5x822ru().s[78]++;
      return {
        success: false,
        message: `Application failed: ${error}`
      };
    }
  }
  /**
   * Get application status for a job
   */
  async getApplicationStatus(userId, jobId) {
    /* istanbul ignore next */
    cov_17s5x822ru().f[14]++;
    cov_17s5x822ru().s[79]++;
    if (!this.azureAdConfig) {
      /* istanbul ignore next */
      cov_17s5x822ru().b[22][0]++;
      cov_17s5x822ru().s[80]++;
      throw new Error('LinkedIn portal not initialized');
    } else
    /* istanbul ignore next */
    {
      cov_17s5x822ru().b[22][1]++;
    }
    const accessToken =
    /* istanbul ignore next */
    (cov_17s5x822ru().s[81]++, await this.tokenService.getValidAccessToken('linkedin', userId, this.azureAdConfig));
    /* istanbul ignore next */
    cov_17s5x822ru().s[82]++;
    if (!accessToken) {
      /* istanbul ignore next */
      cov_17s5x822ru().b[23][0]++;
      cov_17s5x822ru().s[83]++;
      return 'discovered';
    } else
    /* istanbul ignore next */
    {
      cov_17s5x822ru().b[23][1]++;
    }
    cov_17s5x822ru().s[84]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_17s5x822ru().s[85]++, await this.rateLimiter.schedule(async () => {
        /* istanbul ignore next */
        cov_17s5x822ru().f[15]++;
        cov_17s5x822ru().s[86]++;
        return fetch(`${this.baseUrl}/jobs/${jobId}/applications`, {
          headers: {
            'Authorization': `Bearer ${accessToken}`,
            'Content-Type': 'application/json'
          }
        });
      }));
      /* istanbul ignore next */
      cov_17s5x822ru().s[87]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_17s5x822ru().b[24][0]++;
        cov_17s5x822ru().s[88]++;
        return 'discovered';
      } else
      /* istanbul ignore next */
      {
        cov_17s5x822ru().b[24][1]++;
      }
      const data =
      /* istanbul ignore next */
      (cov_17s5x822ru().s[89]++, await response.json());
      // Transform LinkedIn application status to our application status
      /* istanbul ignore next */
      cov_17s5x822ru().s[90]++;
      return this.mapLinkedInStatusToApplicationStatus(data.status);
    } catch (error) {
      /* istanbul ignore next */
      cov_17s5x822ru().s[91]++;
      console.error('LinkedIn application status error:', error);
      /* istanbul ignore next */
      cov_17s5x822ru().s[92]++;
      return 'discovered';
    }
  }
  /**
   * Check if user is connected to LinkedIn
   */
  async isConnected(userId) {
    /* istanbul ignore next */
    cov_17s5x822ru().f[16]++;
    const tokens =
    /* istanbul ignore next */
    (cov_17s5x822ru().s[93]++, await this.tokenService.getTokens('linkedin', userId));
    /* istanbul ignore next */
    cov_17s5x822ru().s[94]++;
    return /* istanbul ignore next */(cov_17s5x822ru().b[25][0]++, tokens !== null) &&
    /* istanbul ignore next */
    (cov_17s5x822ru().b[25][1]++, tokens.expiresAt > Date.now());
  }
  /**
   * Disconnect user from LinkedIn
   */
  async disconnect(userId) {
    /* istanbul ignore next */
    cov_17s5x822ru().f[17]++;
    cov_17s5x822ru().s[95]++;
    await this.tokenService.deleteTokens('linkedin', userId);
  }
  // Helper methods for mapping between our types and LinkedIn types
  mapJobTypeToLinkedIn(jobType) {
    /* istanbul ignore next */
    cov_17s5x822ru().f[18]++;
    cov_17s5x822ru().s[96]++;
    switch (jobType) {
      case 'full-time':
        /* istanbul ignore next */
        cov_17s5x822ru().b[26][0]++;
        cov_17s5x822ru().s[97]++;
        return 'F';
      case 'part-time':
        /* istanbul ignore next */
        cov_17s5x822ru().b[26][1]++;
        cov_17s5x822ru().s[98]++;
        return 'P';
      case 'contract':
        /* istanbul ignore next */
        cov_17s5x822ru().b[26][2]++;
        cov_17s5x822ru().s[99]++;
        return 'C';
      case 'internship':
        /* istanbul ignore next */
        cov_17s5x822ru().b[26][3]++;
        cov_17s5x822ru().s[100]++;
        return 'I';
      default:
        /* istanbul ignore next */
        cov_17s5x822ru().b[26][4]++;
        cov_17s5x822ru().s[101]++;
        return undefined;
    }
  }
  mapExperienceLevelToLinkedIn(level) {
    /* istanbul ignore next */
    cov_17s5x822ru().f[19]++;
    cov_17s5x822ru().s[102]++;
    switch (level) {
      case 'entry-level':
        /* istanbul ignore next */
        cov_17s5x822ru().b[27][0]++;
        cov_17s5x822ru().s[103]++;
        return '2';
      case 'associate':
        /* istanbul ignore next */
        cov_17s5x822ru().b[27][1]++;
        cov_17s5x822ru().s[104]++;
        return '3';
      case 'mid-senior':
        /* istanbul ignore next */
        cov_17s5x822ru().b[27][2]++;
        cov_17s5x822ru().s[105]++;
        return '4';
      case 'director':
        /* istanbul ignore next */
        cov_17s5x822ru().b[27][3]++;
        cov_17s5x822ru().s[106]++;
        return '5';
      case 'executive':
        /* istanbul ignore next */
        cov_17s5x822ru().b[27][4]++;
        cov_17s5x822ru().s[107]++;
        return '6';
      default:
        /* istanbul ignore next */
        cov_17s5x822ru().b[27][5]++;
        cov_17s5x822ru().s[108]++;
        return undefined;
    }
  }
  mapDatePostedToLinkedIn(datePosted) {
    /* istanbul ignore next */
    cov_17s5x822ru().f[20]++;
    cov_17s5x822ru().s[109]++;
    switch (datePosted) {
      case 'past-24-hours':
        /* istanbul ignore next */
        cov_17s5x822ru().b[28][0]++;
        cov_17s5x822ru().s[110]++;
        return 'r86400';
      case 'past-week':
        /* istanbul ignore next */
        cov_17s5x822ru().b[28][1]++;
        cov_17s5x822ru().s[111]++;
        return 'r604800';
      case 'past-month':
        /* istanbul ignore next */
        cov_17s5x822ru().b[28][2]++;
        cov_17s5x822ru().s[112]++;
        return 'r2592000';
      default:
        /* istanbul ignore next */
        cov_17s5x822ru().b[28][3]++;
        cov_17s5x822ru().s[113]++;
        return '';
    }
  }
  mapLinkedInStatusToApplicationStatus(linkedinStatus) {
    /* istanbul ignore next */
    cov_17s5x822ru().f[21]++;
    cov_17s5x822ru().s[114]++;
    switch (
    /* istanbul ignore next */
    (cov_17s5x822ru().b[31][0]++, linkedinStatus === null) ||
    /* istanbul ignore next */
    (cov_17s5x822ru().b[31][1]++, linkedinStatus === void 0) ?
    /* istanbul ignore next */
    (cov_17s5x822ru().b[30][0]++, void 0) :
    /* istanbul ignore next */
    (cov_17s5x822ru().b[30][1]++, linkedinStatus.toLowerCase())) {
      case 'submitted':
        /* istanbul ignore next */
        cov_17s5x822ru().b[29][0]++;
        cov_17s5x822ru().s[115]++;
        return 'applied';
      case 'viewed':
        /* istanbul ignore next */
        cov_17s5x822ru().b[29][1]++;
        cov_17s5x822ru().s[116]++;
        return 'application_viewed';
      case 'interviewing':
        /* istanbul ignore next */
        cov_17s5x822ru().b[29][2]++;
        cov_17s5x822ru().s[117]++;
        return 'interview_request';
      case 'rejected':
        /* istanbul ignore next */
        cov_17s5x822ru().b[29][3]++;
        cov_17s5x822ru().s[118]++;
        return 'rejected';
      case 'withdrawn':
        /* istanbul ignore next */
        cov_17s5x822ru().b[29][4]++;
        cov_17s5x822ru().s[119]++;
        return 'withdrawn';
      default:
        /* istanbul ignore next */
        cov_17s5x822ru().b[29][5]++;
        cov_17s5x822ru().s[120]++;
        return 'discovered';
    }
  }
  transformLinkedInJobsToJobListings(linkedinJobs) {
    /* istanbul ignore next */
    cov_17s5x822ru().f[22]++;
    cov_17s5x822ru().s[121]++;
    return linkedinJobs.map((job, index) => {
      /* istanbul ignore next */
      cov_17s5x822ru().f[23]++;
      var _a, _b, _c;
      const jobId =
      /* istanbul ignore next */
      (cov_17s5x822ru().s[122]++,
      /* istanbul ignore next */
      (cov_17s5x822ru().b[32][0]++, this.extractJobIdFromUrn(job.entityUrn)) ||
      /* istanbul ignore next */
      (cov_17s5x822ru().b[32][1]++, `linkedin-${Date.now()}-${index}`));
      /* istanbul ignore next */
      cov_17s5x822ru().s[123]++;
      return {
        id: jobId,
        title:
        /* istanbul ignore next */
        (cov_17s5x822ru().b[33][0]++, job.title) ||
        /* istanbul ignore next */
        (cov_17s5x822ru().b[33][1]++, 'Untitled Position'),
        company:
        /* istanbul ignore next */
        (cov_17s5x822ru().b[34][0]++,
        /* istanbul ignore next */
        (cov_17s5x822ru().b[36][0]++, (_b =
        /* istanbul ignore next */
        (cov_17s5x822ru().b[38][0]++, (_a = job.companyDetails) === null) ||
        /* istanbul ignore next */
        (cov_17s5x822ru().b[38][1]++, _a === void 0) ?
        /* istanbul ignore next */
        (cov_17s5x822ru().b[37][0]++, void 0) :
        /* istanbul ignore next */
        (cov_17s5x822ru().b[37][1]++, _a.company)) === null) ||
        /* istanbul ignore next */
        (cov_17s5x822ru().b[36][1]++, _b === void 0) ?
        /* istanbul ignore next */
        (cov_17s5x822ru().b[35][0]++, void 0) :
        /* istanbul ignore next */
        (cov_17s5x822ru().b[35][1]++, _b.name)) ||
        /* istanbul ignore next */
        (cov_17s5x822ru().b[34][1]++, 'Unknown Company'),
        location:
        /* istanbul ignore next */
        (cov_17s5x822ru().b[39][0]++, job.formattedLocation) ||
        /* istanbul ignore next */
        (cov_17s5x822ru().b[39][1]++, 'Location not specified'),
        salary: undefined,
        // LinkedIn often doesn't provide salary in search results
        jobType: this.mapLinkedInJobTypeToOur(job.employmentStatus),
        workArrangement: this.mapWorkplaceTypesToOur(job.workplaceTypes),
        description:
        /* istanbul ignore next */
        (cov_17s5x822ru().b[40][0]++,
        /* istanbul ignore next */
        (cov_17s5x822ru().b[42][0]++, (_c = job.description) === null) ||
        /* istanbul ignore next */
        (cov_17s5x822ru().b[42][1]++, _c === void 0) ?
        /* istanbul ignore next */
        (cov_17s5x822ru().b[41][0]++, void 0) :
        /* istanbul ignore next */
        (cov_17s5x822ru().b[41][1]++, _c.text)) ||
        /* istanbul ignore next */
        (cov_17s5x822ru().b[40][1]++, 'No description available'),
        requirements: [],
        // Would need detailed job fetch
        responsibilities: [],
        // Would need detailed job fetch
        benefits: undefined,
        postedDate: new Date(job.listedAt).toISOString(),
        applicationDeadline: job.expireAt ?
        /* istanbul ignore next */
        (cov_17s5x822ru().b[43][0]++, new Date(job.expireAt).toISOString()) :
        /* istanbul ignore next */
        (cov_17s5x822ru().b[43][1]++, undefined),
        jobPortal: {
          name: 'LinkedIn',
          logo: '/icons/linkedin.svg',
          website: 'https://linkedin.com',
          supportsAutoApply: true
        },
        originalUrl: `https://www.linkedin.com/jobs/view/${jobId}`,
        companyLogo: undefined,
        // Would need company details fetch
        relevancyScore: undefined,
        matchedSkills: [],
        missingSkills: [],
        applicationStatus: 'discovered',
        createdAt: new Date().toISOString(),
        updatedAt: new Date().toISOString()
      };
    });
  }
  extractJobIdFromUrn(urn) {
    /* istanbul ignore next */
    cov_17s5x822ru().f[24]++;
    const match =
    /* istanbul ignore next */
    (cov_17s5x822ru().s[124]++, urn.match(/urn:li:job:(\d+)/));
    /* istanbul ignore next */
    cov_17s5x822ru().s[125]++;
    return match ?
    /* istanbul ignore next */
    (cov_17s5x822ru().b[44][0]++, match[1]) :
    /* istanbul ignore next */
    (cov_17s5x822ru().b[44][1]++, null);
  }
  mapLinkedInJobTypeToOur(employmentStatus) {
    /* istanbul ignore next */
    cov_17s5x822ru().f[25]++;
    cov_17s5x822ru().s[126]++;
    switch (
    /* istanbul ignore next */
    (cov_17s5x822ru().b[47][0]++, employmentStatus === null) ||
    /* istanbul ignore next */
    (cov_17s5x822ru().b[47][1]++, employmentStatus === void 0) ?
    /* istanbul ignore next */
    (cov_17s5x822ru().b[46][0]++, void 0) :
    /* istanbul ignore next */
    (cov_17s5x822ru().b[46][1]++, employmentStatus.toLowerCase())) {
      case 'full_time':
        /* istanbul ignore next */
        cov_17s5x822ru().b[45][0]++;
        cov_17s5x822ru().s[127]++;
        return 'full-time';
      case 'part_time':
        /* istanbul ignore next */
        cov_17s5x822ru().b[45][1]++;
        cov_17s5x822ru().s[128]++;
        return 'part-time';
      case 'contract':
        /* istanbul ignore next */
        cov_17s5x822ru().b[45][2]++;
        cov_17s5x822ru().s[129]++;
        return 'contract';
      case 'internship':
        /* istanbul ignore next */
        cov_17s5x822ru().b[45][3]++;
        cov_17s5x822ru().s[130]++;
        return 'internship';
      default:
        /* istanbul ignore next */
        cov_17s5x822ru().b[45][4]++;
        cov_17s5x822ru().s[131]++;
        return 'full-time';
    }
  }
  mapWorkplaceTypesToOur(workplaceTypes) {
    /* istanbul ignore next */
    cov_17s5x822ru().f[26]++;
    cov_17s5x822ru().s[132]++;
    if (
    /* istanbul ignore next */
    (cov_17s5x822ru().b[49][0]++, !workplaceTypes) ||
    /* istanbul ignore next */
    (cov_17s5x822ru().b[49][1]++, workplaceTypes.length === 0)) {
      /* istanbul ignore next */
      cov_17s5x822ru().b[48][0]++;
      cov_17s5x822ru().s[133]++;
      return 'onsite';
    } else
    /* istanbul ignore next */
    {
      cov_17s5x822ru().b[48][1]++;
    }
    cov_17s5x822ru().s[134]++;
    if (workplaceTypes.includes('remote')) {
      /* istanbul ignore next */
      cov_17s5x822ru().b[50][0]++;
      cov_17s5x822ru().s[135]++;
      return 'remote';
    } else
    /* istanbul ignore next */
    {
      cov_17s5x822ru().b[50][1]++;
    }
    cov_17s5x822ru().s[136]++;
    if (workplaceTypes.includes('hybrid')) {
      /* istanbul ignore next */
      cov_17s5x822ru().b[51][0]++;
      cov_17s5x822ru().s[137]++;
      return 'hybrid';
    } else
    /* istanbul ignore next */
    {
      cov_17s5x822ru().b[51][1]++;
    }
    cov_17s5x822ru().s[138]++;
    return 'onsite';
  }
  /**
   * Log portal actions with structured logging for Application Insights
   */
  logPortalAction(userId, action, status, details =
  /* istanbul ignore next */
  (cov_17s5x822ru().b[52][0]++, {})) {
    /* istanbul ignore next */
    cov_17s5x822ru().f[27]++;
    const logData =
    /* istanbul ignore next */
    (cov_17s5x822ru().s[139]++, {
      level: status === 'error' ?
      /* istanbul ignore next */
      (cov_17s5x822ru().b[53][0]++, 'error') :
      /* istanbul ignore next */
      (cov_17s5x822ru().b[53][1]++, 'info'),
      message: `LinkedIn portal ${action} ${status}`,
      properties: Object.assign(Object.assign({
        userId,
        action,
        status,
        portal: 'LinkedIn'
      }, details), {
        timestamp: new Date().toISOString()
      })
    });
    const logLevel =
    /* istanbul ignore next */
    (cov_17s5x822ru().s[140]++, status === 'error' ?
    /* istanbul ignore next */
    (cov_17s5x822ru().b[54][0]++, 'error') :
    /* istanbul ignore next */
    (cov_17s5x822ru().b[54][1]++, 'log'));
    /* istanbul ignore next */
    cov_17s5x822ru().s[141]++;
    console[logLevel]('PORTAL_ACTION', JSON.stringify(logData));
  }
}
/* istanbul ignore next */
cov_17s5x822ru().s[142]++;
exports.LinkedInPortal = LinkedInPortal;
// Singleton instance
let linkedinPortalInstance =
/* istanbul ignore next */
(cov_17s5x822ru().s[143]++, null);
function getLinkedInPortal() {
  /* istanbul ignore next */
  cov_17s5x822ru().f[28]++;
  cov_17s5x822ru().s[144]++;
  if (!linkedinPortalInstance) {
    /* istanbul ignore next */
    cov_17s5x822ru().b[55][0]++;
    cov_17s5x822ru().s[145]++;
    linkedinPortalInstance = new LinkedInPortal();
  } else
  /* istanbul ignore next */
  {
    cov_17s5x822ru().b[55][1]++;
  }
  cov_17s5x822ru().s[146]++;
  return linkedinPortalInstance;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,