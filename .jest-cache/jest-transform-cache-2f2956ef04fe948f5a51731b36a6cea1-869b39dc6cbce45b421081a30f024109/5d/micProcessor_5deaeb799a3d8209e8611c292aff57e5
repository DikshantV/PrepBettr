79f56fa30a35a21910b69742eb35759d
/* istanbul ignore next */
function cov_22bsefcu1h() {
  var path = "/Users/dikshantvashistha/PrepBettr/lib/audio/micProcessor.js";
  var hash = "bb16209b39441824f8a9ed74e147d7a02dccac48";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dikshantvashistha/PrepBettr/lib/audio/micProcessor.js",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 12
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 6,
          column: 33
        }
      },
      "2": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 7,
          column: 34
        }
      },
      "3": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 8,
          column: 72
        }
      },
      "4": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 11,
          column: 26
        }
      },
      "5": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 12,
          column: 25
        }
      },
      "6": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 15,
          column: 61
        }
      },
      "7": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 55
        }
      },
      "8": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 17,
          column: 25
        }
      },
      "9": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 20,
          column: 29
        }
      },
      "10": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 21,
          column: 33
        }
      },
      "11": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 22,
          column: 24
        }
      },
      "12": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 30,
          column: 6
        }
      },
      "13": {
        start: {
          line: 26,
          column: 6
        },
        end: {
          line: 29,
          column: 7
        }
      },
      "14": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 46
        }
      },
      "15": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 66
        }
      },
      "16": {
        start: {
          line: 34,
          column: 18
        },
        end: {
          line: 34,
          column: 27
        }
      },
      "17": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 38,
          column: 5
        }
      },
      "18": {
        start: {
          line: 37,
          column: 6
        },
        end: {
          line: 37,
          column: 18
        }
      },
      "19": {
        start: {
          line: 40,
          column: 25
        },
        end: {
          line: 40,
          column: 33
        }
      },
      "20": {
        start: {
          line: 43,
          column: 4
        },
        end: {
          line: 78,
          column: 5
        }
      },
      "21": {
        start: {
          line: 43,
          column: 17
        },
        end: {
          line: 43,
          column: 18
        }
      },
      "22": {
        start: {
          line: 44,
          column: 6
        },
        end: {
          line: 44,
          column: 45
        }
      },
      "23": {
        start: {
          line: 47,
          column: 6
        },
        end: {
          line: 70,
          column: 7
        }
      },
      "24": {
        start: {
          line: 49,
          column: 27
        },
        end: {
          line: 49,
          column: 43
        }
      },
      "25": {
        start: {
          line: 50,
          column: 27
        },
        end: {
          line: 50,
          column: 49
        }
      },
      "26": {
        start: {
          line: 51,
          column: 27
        },
        end: {
          line: 51,
          column: 80
        }
      },
      "27": {
        start: {
          line: 52,
          column: 25
        },
        end: {
          line: 52,
          column: 48
        }
      },
      "28": {
        start: {
          line: 54,
          column: 35
        },
        end: {
          line: 55,
          column: 72
        }
      },
      "29": {
        start: {
          line: 58,
          column: 26
        },
        end: {
          line: 58,
          column: 99
        }
      },
      "30": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 60,
          column: 56
        }
      },
      "31": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 61,
          column: 27
        }
      },
      "32": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 67,
          column: 9
        }
      },
      "33": {
        start: {
          line: 65,
          column: 10
        },
        end: {
          line: 65,
          column: 42
        }
      },
      "34": {
        start: {
          line: 66,
          column: 10
        },
        end: {
          line: 66,
          column: 31
        }
      },
      "35": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 69,
          column: 49
        }
      },
      "36": {
        start: {
          line: 73,
          column: 6
        },
        end: {
          line: 77,
          column: 7
        }
      },
      "37": {
        start: {
          line: 74,
          column: 32
        },
        end: {
          line: 74,
          column: 60
        }
      },
      "38": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 75,
          column: 52
        }
      },
      "39": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 76,
          column: 44
        }
      },
      "40": {
        start: {
          line: 80,
          column: 4
        },
        end: {
          line: 80,
          column: 16
        }
      },
      "41": {
        start: {
          line: 84,
          column: 4
        },
        end: {
          line: 84,
          column: 39
        }
      },
      "42": {
        start: {
          line: 84,
          column: 32
        },
        end: {
          line: 84,
          column: 39
        }
      },
      "43": {
        start: {
          line: 87,
          column: 23
        },
        end: {
          line: 87,
          column: 24
        }
      },
      "44": {
        start: {
          line: 88,
          column: 23
        },
        end: {
          line: 88,
          column: 64
        }
      },
      "45": {
        start: {
          line: 89,
          column: 30
        },
        end: {
          line: 89,
          column: 68
        }
      },
      "46": {
        start: {
          line: 90,
          column: 22
        },
        end: {
          line: 90,
          column: 60
        }
      },
      "47": {
        start: {
          line: 93,
          column: 27
        },
        end: {
          line: 93,
          column: 76
        }
      },
      "48": {
        start: {
          line: 94,
          column: 4
        },
        end: {
          line: 97,
          column: 5
        }
      },
      "49": {
        start: {
          line: 96,
          column: 6
        },
        end: {
          line: 96,
          column: 13
        }
      },
      "50": {
        start: {
          line: 100,
          column: 4
        },
        end: {
          line: 103,
          column: 5
        }
      },
      "51": {
        start: {
          line: 100,
          column: 17
        },
        end: {
          line: 100,
          column: 18
        }
      },
      "52": {
        start: {
          line: 101,
          column: 26
        },
        end: {
          line: 101,
          column: 77
        }
      },
      "53": {
        start: {
          line: 102,
          column: 6
        },
        end: {
          line: 102,
          column: 64
        }
      },
      "54": {
        start: {
          line: 106,
          column: 4
        },
        end: {
          line: 106,
          column: 60
        }
      },
      "55": {
        start: {
          line: 109,
          column: 4
        },
        end: {
          line: 109,
          column: 77
        }
      },
      "56": {
        start: {
          line: 113,
          column: 0
        },
        end: {
          line: 113,
          column: 49
        }
      },
      "57": {
        start: {
          line: 116,
          column: 0
        },
        end: {
          line: 118,
          column: 1
        }
      },
      "58": {
        start: {
          line: 117,
          column: 2
        },
        end: {
          line: 117,
          column: 36
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 2
          },
          end: {
            line: 2,
            column: 3
          }
        },
        loc: {
          start: {
            line: 2,
            column: 16
          },
          end: {
            line: 31,
            column: 3
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 25,
            column: 26
          },
          end: {
            line: 25,
            column: 27
          }
        },
        loc: {
          start: {
            line: 25,
            column: 37
          },
          end: {
            line: 30,
            column: 5
          }
        },
        line: 25
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 33,
            column: 2
          },
          end: {
            line: 33,
            column: 3
          }
        },
        loc: {
          start: {
            line: 33,
            column: 39
          },
          end: {
            line: 81,
            column: 3
          }
        },
        line: 33
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 83,
            column: 2
          },
          end: {
            line: 83,
            column: 3
          }
        },
        loc: {
          start: {
            line: 83,
            column: 29
          },
          end: {
            line: 110,
            column: 3
          }
        },
        line: 83
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 26,
            column: 6
          },
          end: {
            line: 29,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 26,
            column: 6
          },
          end: {
            line: 29,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 26
      },
      "1": {
        loc: {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "2": {
        loc: {
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 36,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 36,
            column: 14
          }
        }, {
          start: {
            line: 36,
            column: 18
          },
          end: {
            line: 36,
            column: 27
          }
        }, {
          start: {
            line: 36,
            column: 31
          },
          end: {
            line: 36,
            column: 53
          }
        }],
        line: 36
      },
      "3": {
        loc: {
          start: {
            line: 64,
            column: 8
          },
          end: {
            line: 67,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 64,
            column: 8
          },
          end: {
            line: 67,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 64
      },
      "4": {
        loc: {
          start: {
            line: 73,
            column: 6
          },
          end: {
            line: 77,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 73,
            column: 6
          },
          end: {
            line: 77,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 73
      },
      "5": {
        loc: {
          start: {
            line: 84,
            column: 4
          },
          end: {
            line: 84,
            column: 39
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 84,
            column: 4
          },
          end: {
            line: 84,
            column: 39
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 84
      },
      "6": {
        loc: {
          start: {
            line: 94,
            column: 4
          },
          end: {
            line: 97,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 94,
            column: 4
          },
          end: {
            line: 97,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 94
      },
      "7": {
        loc: {
          start: {
            line: 116,
            column: 0
          },
          end: {
            line: 118,
            column: 1
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 116,
            column: 0
          },
          end: {
            line: 118,
            column: 1
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 116
      },
      "8": {
        loc: {
          start: {
            line: 116,
            column: 4
          },
          end: {
            line: 116,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 116,
            column: 4
          },
          end: {
            line: 116,
            column: 33
          }
        }, {
          start: {
            line: 116,
            column: 37
          },
          end: {
            line: 116,
            column: 51
          }
        }],
        line: 116
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0]
    },
    inputSourceMap: null,
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "bb16209b39441824f8a9ed74e147d7a02dccac48"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_22bsefcu1h = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_22bsefcu1h();
class MicProcessor extends AudioWorkletProcessor {
  constructor() {
    /* istanbul ignore next */
    cov_22bsefcu1h().f[0]++;
    cov_22bsefcu1h().s[0]++;
    super();

    // Downsampling parameters
    /* istanbul ignore next */
    cov_22bsefcu1h().s[1]++;
    this.inputSampleRate = 48000;
    /* istanbul ignore next */
    cov_22bsefcu1h().s[2]++;
    this.outputSampleRate = 16000;
    /* istanbul ignore next */
    cov_22bsefcu1h().s[3]++;
    this.downsampleRatio = this.inputSampleRate / this.outputSampleRate; // 3.0

    // Buffer for accumulating samples
    /* istanbul ignore next */
    cov_22bsefcu1h().s[4]++;
    this.inputBuffer = [];
    /* istanbul ignore next */
    cov_22bsefcu1h().s[5]++;
    this.sampleIndex = 0;

    // Frame size for 100ms at 16kHz = 1600 samples
    /* istanbul ignore next */
    cov_22bsefcu1h().s[6]++;
    this.frameSize = Math.floor(this.outputSampleRate * 0.1); // 1600 samples
    /* istanbul ignore next */
    cov_22bsefcu1h().s[7]++;
    this.outputBuffer = new Int16Array(this.frameSize);
    /* istanbul ignore next */
    cov_22bsefcu1h().s[8]++;
    this.outputIndex = 0;

    // SharedArrayBuffer for communication with main thread
    /* istanbul ignore next */
    cov_22bsefcu1h().s[9]++;
    this.sharedBuffer = null;
    /* istanbul ignore next */
    cov_22bsefcu1h().s[10]++;
    this.sharedBufferView = null;
    /* istanbul ignore next */
    cov_22bsefcu1h().s[11]++;
    this.writeIndex = 0;

    // Listen for messages from main thread
    /* istanbul ignore next */
    cov_22bsefcu1h().s[12]++;
    this.port.onmessage = event => {
      /* istanbul ignore next */
      cov_22bsefcu1h().f[1]++;
      cov_22bsefcu1h().s[13]++;
      if (event.data.type === 'setSharedBuffer') {
        /* istanbul ignore next */
        cov_22bsefcu1h().b[0][0]++;
        cov_22bsefcu1h().s[14]++;
        this.sharedBuffer = event.data.buffer;
        /* istanbul ignore next */
        cov_22bsefcu1h().s[15]++;
        this.sharedBufferView = new Int16Array(this.sharedBuffer);
      } else
      /* istanbul ignore next */
      {
        cov_22bsefcu1h().b[0][1]++;
      }
    };
  }
  process(inputs, outputs, parameters) {
    /* istanbul ignore next */
    cov_22bsefcu1h().f[2]++;
    const input =
    /* istanbul ignore next */
    (cov_22bsefcu1h().s[16]++, inputs[0]);
    /* istanbul ignore next */
    cov_22bsefcu1h().s[17]++;
    if (
    /* istanbul ignore next */
    (cov_22bsefcu1h().b[2][0]++, !input) ||
    /* istanbul ignore next */
    (cov_22bsefcu1h().b[2][1]++, !input[0]) ||
    /* istanbul ignore next */
    (cov_22bsefcu1h().b[2][2]++, !this.sharedBufferView)) {
      /* istanbul ignore next */
      cov_22bsefcu1h().b[1][0]++;
      cov_22bsefcu1h().s[18]++;
      return true;
    } else
    /* istanbul ignore next */
    {
      cov_22bsefcu1h().b[1][1]++;
    }
    const inputChannel =
    /* istanbul ignore next */
    (cov_22bsefcu1h().s[19]++, input[0]);

    // Process each sample
    /* istanbul ignore next */
    cov_22bsefcu1h().s[20]++;
    for (let i =
    /* istanbul ignore next */
    (cov_22bsefcu1h().s[21]++, 0); i < inputChannel.length; i++) {
      /* istanbul ignore next */
      cov_22bsefcu1h().s[22]++;
      this.inputBuffer.push(inputChannel[i]);

      // Check if we have enough samples for downsampling
      /* istanbul ignore next */
      cov_22bsefcu1h().s[23]++;
      while (this.inputBuffer.length >= Math.floor(this.sampleIndex + this.downsampleRatio)) {
        // Linear interpolation for downsampling
        const exactIndex =
        /* istanbul ignore next */
        (cov_22bsefcu1h().s[24]++, this.sampleIndex);
        const lowerIndex =
        /* istanbul ignore next */
        (cov_22bsefcu1h().s[25]++, Math.floor(exactIndex));
        const upperIndex =
        /* istanbul ignore next */
        (cov_22bsefcu1h().s[26]++, Math.min(lowerIndex + 1, this.inputBuffer.length - 1));
        const fraction =
        /* istanbul ignore next */
        (cov_22bsefcu1h().s[27]++, exactIndex - lowerIndex);
        const interpolatedSample =
        /* istanbul ignore next */
        (cov_22bsefcu1h().s[28]++, this.inputBuffer[lowerIndex] * (1 - fraction) + this.inputBuffer[upperIndex] * fraction);

        // Convert to 16-bit PCM
        const pcmSample =
        /* istanbul ignore next */
        (cov_22bsefcu1h().s[29]++, Math.max(-32768, Math.min(32767, Math.round(interpolatedSample * 32767))));
        /* istanbul ignore next */
        cov_22bsefcu1h().s[30]++;
        this.outputBuffer[this.outputIndex] = pcmSample;
        /* istanbul ignore next */
        cov_22bsefcu1h().s[31]++;
        this.outputIndex++;

        // If we have a complete frame, write to shared buffer
        /* istanbul ignore next */
        cov_22bsefcu1h().s[32]++;
        if (this.outputIndex >= this.frameSize) {
          /* istanbul ignore next */
          cov_22bsefcu1h().b[3][0]++;
          cov_22bsefcu1h().s[33]++;
          this.writeFrameToSharedBuffer();
          /* istanbul ignore next */
          cov_22bsefcu1h().s[34]++;
          this.outputIndex = 0;
        } else
        /* istanbul ignore next */
        {
          cov_22bsefcu1h().b[3][1]++;
        }
        cov_22bsefcu1h().s[35]++;
        this.sampleIndex += this.downsampleRatio;
      }

      // Remove processed samples from input buffer to prevent memory leak
      /* istanbul ignore next */
      cov_22bsefcu1h().s[36]++;
      if (this.inputBuffer.length > this.downsampleRatio * 2) {
        /* istanbul ignore next */
        cov_22bsefcu1h().b[4][0]++;
        const samplesToRemove =
        /* istanbul ignore next */
        (cov_22bsefcu1h().s[37]++, Math.floor(this.sampleIndex));
        /* istanbul ignore next */
        cov_22bsefcu1h().s[38]++;
        this.inputBuffer.splice(0, samplesToRemove);
        /* istanbul ignore next */
        cov_22bsefcu1h().s[39]++;
        this.sampleIndex -= samplesToRemove;
      } else
      /* istanbul ignore next */
      {
        cov_22bsefcu1h().b[4][1]++;
      }
    }
    /* istanbul ignore next */
    cov_22bsefcu1h().s[40]++;
    return true;
  }
  writeFrameToSharedBuffer() {
    /* istanbul ignore next */
    cov_22bsefcu1h().f[3]++;
    cov_22bsefcu1h().s[41]++;
    if (!this.sharedBufferView) {
      /* istanbul ignore next */
      cov_22bsefcu1h().b[5][0]++;
      cov_22bsefcu1h().s[42]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_22bsefcu1h().b[5][1]++;
    }

    // SharedBuffer layout: [writeIndex, readIndex, ...data]
    const headerSize =
    /* istanbul ignore next */
    (cov_22bsefcu1h().s[43]++, 2);
    const bufferSize =
    /* istanbul ignore next */
    (cov_22bsefcu1h().s[44]++, this.sharedBufferView.length - headerSize);
    const currentWriteIndex =
    /* istanbul ignore next */
    (cov_22bsefcu1h().s[45]++, Atomics.load(this.sharedBufferView, 0));
    const readIndex =
    /* istanbul ignore next */
    (cov_22bsefcu1h().s[46]++, Atomics.load(this.sharedBufferView, 1));

    // Check if buffer has space
    const nextWriteIndex =
    /* istanbul ignore next */
    (cov_22bsefcu1h().s[47]++, (currentWriteIndex + this.frameSize) % bufferSize);
    /* istanbul ignore next */
    cov_22bsefcu1h().s[48]++;
    if (nextWriteIndex === readIndex) {
      /* istanbul ignore next */
      cov_22bsefcu1h().b[6][0]++;
      cov_22bsefcu1h().s[49]++;
      // Buffer full, skip this frame
      return;
    } else
    /* istanbul ignore next */
    {
      cov_22bsefcu1h().b[6][1]++;
    }

    // Write frame to shared buffer
    cov_22bsefcu1h().s[50]++;
    for (let i =
    /* istanbul ignore next */
    (cov_22bsefcu1h().s[51]++, 0); i < this.frameSize; i++) {
      const bufferIndex =
      /* istanbul ignore next */
      (cov_22bsefcu1h().s[52]++, headerSize + (currentWriteIndex + i) % bufferSize);
      /* istanbul ignore next */
      cov_22bsefcu1h().s[53]++;
      this.sharedBufferView[bufferIndex] = this.outputBuffer[i];
    }

    // Update write index atomically
    /* istanbul ignore next */
    cov_22bsefcu1h().s[54]++;
    Atomics.store(this.sharedBufferView, 0, nextWriteIndex);

    // Notify main thread
    /* istanbul ignore next */
    cov_22bsefcu1h().s[55]++;
    this.port.postMessage({
      type: 'frameReady',
      frameSize: this.frameSize
    });
  }
}
;
/* istanbul ignore next */
cov_22bsefcu1h().s[56]++;
registerProcessor('mic-processor', MicProcessor);

// For unit tests
/* istanbul ignore next */
cov_22bsefcu1h().s[57]++;
if (
/* istanbul ignore next */
(cov_22bsefcu1h().b[8][0]++, typeof module !== 'undefined') &&
/* istanbul ignore next */
(cov_22bsefcu1h().b[8][1]++, module.exports)) {
  /* istanbul ignore next */
  cov_22bsefcu1h().b[7][0]++;
  cov_22bsefcu1h().s[58]++;
  module.exports = {
    MicProcessor
  };
} else
/* istanbul ignore next */
{
  cov_22bsefcu1h().b[7][1]++;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,