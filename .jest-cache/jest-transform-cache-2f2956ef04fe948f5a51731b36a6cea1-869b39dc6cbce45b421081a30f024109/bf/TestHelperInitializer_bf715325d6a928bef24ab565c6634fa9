00927a3cd563f96c8ff64c9f737738b6
"use strict";

/**
 * Test Helper Initializer for E2E Testing
 *
 * This component exposes test helper functions to the browser window object
 * during E2E tests, allowing Playwright tests to simulate various scenarios
 * like voice transcripts, agent failures, network issues, and session state.
 */
'use client';

/**
 * Test Helper Initializer for E2E Testing
 *
 * This component exposes test helper functions to the browser window object
 * during E2E tests, allowing Playwright tests to simulate various scenarios
 * like voice transcripts, agent failures, network issues, and session state.
 */
/* istanbul ignore next */
function cov_1e84m5mabi() {
  var path = "/Users/dikshantvashistha/PrepBettr/components/test/TestHelperInitializer.tsx";
  var hash = "facdb88bf5ffa6cfd1da9e865aed059a00a00485";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dikshantvashistha/PrepBettr/components/test/TestHelperInitializer.tsx",
    statementMap: {
      "0": {
        start: {
          line: 17,
          column: 0
        },
        end: {
          line: 17,
          column: 62
        }
      },
      "1": {
        start: {
          line: 18,
          column: 0
        },
        end: {
          line: 18,
          column: 40
        }
      },
      "2": {
        start: {
          line: 19,
          column: 16
        },
        end: {
          line: 19,
          column: 32
        }
      },
      "3": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 177,
          column: 11
        }
      },
      "4": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 25,
          column: 9
        }
      },
      "5": {
        start: {
          line: 24,
          column: 12
        },
        end: {
          line: 24,
          column: 19
        }
      },
      "6": {
        start: {
          line: 27,
          column: 29
        },
        end: {
          line: 27,
          column: 33
        }
      },
      "7": {
        start: {
          line: 28,
          column: 29
        },
        end: {
          line: 28,
          column: 33
        }
      },
      "8": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 50,
          column: 10
        }
      },
      "9": {
        start: {
          line: 31,
          column: 12
        },
        end: {
          line: 31,
          column: 84
        }
      },
      "10": {
        start: {
          line: 33,
          column: 26
        },
        end: {
          line: 40,
          column: 14
        }
      },
      "11": {
        start: {
          line: 41,
          column: 12
        },
        end: {
          line: 41,
          column: 42
        }
      },
      "12": {
        start: {
          line: 43,
          column: 32
        },
        end: {
          line: 43,
          column: 71
        }
      },
      "13": {
        start: {
          line: 44,
          column: 12
        },
        end: {
          line: 49,
          column: 15
        }
      },
      "14": {
        start: {
          line: 45,
          column: 35
        },
        end: {
          line: 47,
          column: 18
        }
      },
      "15": {
        start: {
          line: 48,
          column: 16
        },
        end: {
          line: 48,
          column: 51
        }
      },
      "16": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 63,
          column: 10
        }
      },
      "17": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 53,
          column: 83
        }
      },
      "18": {
        start: {
          line: 54,
          column: 26
        },
        end: {
          line: 61,
          column: 14
        }
      },
      "19": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 62,
          column: 42
        }
      },
      "20": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 84,
          column: 10
        }
      },
      "21": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 66,
          column: 95
        }
      },
      "22": {
        start: {
          line: 68,
          column: 36
        },
        end: {
          line: 70,
          column: 14
        }
      },
      "23": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 71,
          column: 52
        }
      },
      "24": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 83,
          column: 25
        }
      },
      "25": {
        start: {
          line: 74,
          column: 39
        },
        end: {
          line: 76,
          column: 18
        }
      },
      "26": {
        start: {
          line: 77,
          column: 16
        },
        end: {
          line: 77,
          column: 55
        }
      },
      "27": {
        start: {
          line: 79,
          column: 34
        },
        end: {
          line: 79,
          column: 63
        }
      },
      "28": {
        start: {
          line: 80,
          column: 16
        },
        end: {
          line: 80,
          column: 77
        }
      },
      "29": {
        start: {
          line: 81,
          column: 16
        },
        end: {
          line: 81,
          column: 49
        }
      },
      "30": {
        start: {
          line: 82,
          column: 16
        },
        end: {
          line: 82,
          column: 53
        }
      },
      "31": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 92,
          column: 10
        }
      },
      "32": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 87,
          column: 69
        }
      },
      "33": {
        start: {
          line: 88,
          column: 26
        },
        end: {
          line: 90,
          column: 14
        }
      },
      "34": {
        start: {
          line: 91,
          column: 12
        },
        end: {
          line: 91,
          column: 42
        }
      },
      "35": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 128,
          column: 10
        }
      },
      "36": {
        start: {
          line: 97,
          column: 16
        },
        end: {
          line: 97,
          column: 82
        }
      },
      "37": {
        start: {
          line: 98,
          column: 16
        },
        end: {
          line: 98,
          column: 41
        }
      },
      "38": {
        start: {
          line: 99,
          column: 16
        },
        end: {
          line: 99,
          column: 50
        }
      },
      "39": {
        start: {
          line: 101,
          column: 41
        },
        end: {
          line: 101,
          column: 70
        }
      },
      "40": {
        start: {
          line: 102,
          column: 16
        },
        end: {
          line: 102,
          column: 89
        }
      },
      "41": {
        start: {
          line: 103,
          column: 16
        },
        end: {
          line: 103,
          column: 56
        }
      },
      "42": {
        start: {
          line: 104,
          column: 16
        },
        end: {
          line: 104,
          column: 60
        }
      },
      "43": {
        start: {
          line: 105,
          column: 43
        },
        end: {
          line: 105,
          column: 72
        }
      },
      "44": {
        start: {
          line: 106,
          column: 16
        },
        end: {
          line: 106,
          column: 77
        }
      },
      "45": {
        start: {
          line: 107,
          column: 16
        },
        end: {
          line: 107,
          column: 174
        }
      },
      "46": {
        start: {
          line: 108,
          column: 16
        },
        end: {
          line: 108,
          column: 58
        }
      },
      "47": {
        start: {
          line: 109,
          column: 16
        },
        end: {
          line: 109,
          column: 62
        }
      },
      "48": {
        start: {
          line: 112,
          column: 16
        },
        end: {
          line: 112,
          column: 82
        }
      },
      "49": {
        start: {
          line: 113,
          column: 16
        },
        end: {
          line: 113,
          column: 41
        }
      },
      "50": {
        start: {
          line: 114,
          column: 16
        },
        end: {
          line: 114,
          column: 50
        }
      },
      "51": {
        start: {
          line: 116,
          column: 41
        },
        end: {
          line: 116,
          column: 70
        }
      },
      "52": {
        start: {
          line: 117,
          column: 16
        },
        end: {
          line: 117,
          column: 78
        }
      },
      "53": {
        start: {
          line: 118,
          column: 16
        },
        end: {
          line: 118,
          column: 56
        }
      },
      "54": {
        start: {
          line: 119,
          column: 16
        },
        end: {
          line: 119,
          column: 60
        }
      },
      "55": {
        start: {
          line: 122,
          column: 16
        },
        end: {
          line: 122,
          column: 85
        }
      },
      "56": {
        start: {
          line: 123,
          column: 30
        },
        end: {
          line: 125,
          column: 18
        }
      },
      "57": {
        start: {
          line: 126,
          column: 16
        },
        end: {
          line: 126,
          column: 46
        }
      },
      "58": {
        start: {
          line: 130,
          column: 33
        },
        end: {
          line: 137,
          column: 9
        }
      },
      "59": {
        start: {
          line: 131,
          column: 12
        },
        end: {
          line: 136,
          column: 13
        }
      },
      "60": {
        start: {
          line: 132,
          column: 34
        },
        end: {
          line: 132,
          column: 63
        }
      },
      "61": {
        start: {
          line: 133,
          column: 16
        },
        end: {
          line: 133,
          column: 62
        }
      },
      "62": {
        start: {
          line: 134,
          column: 16
        },
        end: {
          line: 134,
          column: 49
        }
      },
      "63": {
        start: {
          line: 135,
          column: 16
        },
        end: {
          line: 135,
          column: 53
        }
      },
      "64": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 139,
          column: 50
        }
      },
      "65": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 140,
          column: 51
        }
      },
      "66": {
        start: {
          line: 141,
          column: 8
        },
        end: {
          line: 141,
          column: 50
        }
      },
      "67": {
        start: {
          line: 142,
          column: 8
        },
        end: {
          line: 142,
          column: 51
        }
      },
      "68": {
        start: {
          line: 143,
          column: 8
        },
        end: {
          line: 143,
          column: 48
        }
      },
      "69": {
        start: {
          line: 144,
          column: 8
        },
        end: {
          line: 144,
          column: 45
        }
      },
      "70": {
        start: {
          line: 145,
          column: 8
        },
        end: {
          line: 145,
          column: 46
        }
      },
      "71": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 146,
          column: 47
        }
      },
      "72": {
        start: {
          line: 148,
          column: 38
        },
        end: {
          line: 148,
          column: 67
        }
      },
      "73": {
        start: {
          line: 149,
          column: 8
        },
        end: {
          line: 149,
          column: 75
        }
      },
      "74": {
        start: {
          line: 150,
          column: 8
        },
        end: {
          line: 150,
          column: 67
        }
      },
      "75": {
        start: {
          line: 151,
          column: 8
        },
        end: {
          line: 151,
          column: 53
        }
      },
      "76": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 152,
          column: 57
        }
      },
      "77": {
        start: {
          line: 154,
          column: 38
        },
        end: {
          line: 154,
          column: 67
        }
      },
      "78": {
        start: {
          line: 155,
          column: 8
        },
        end: {
          line: 155,
          column: 75
        }
      },
      "79": {
        start: {
          line: 156,
          column: 8
        },
        end: {
          line: 156,
          column: 56
        }
      },
      "80": {
        start: {
          line: 157,
          column: 8
        },
        end: {
          line: 157,
          column: 53
        }
      },
      "81": {
        start: {
          line: 158,
          column: 8
        },
        end: {
          line: 158,
          column: 57
        }
      },
      "82": {
        start: {
          line: 160,
          column: 43
        },
        end: {
          line: 160,
          column: 72
        }
      },
      "83": {
        start: {
          line: 161,
          column: 8
        },
        end: {
          line: 161,
          column: 91
        }
      },
      "84": {
        start: {
          line: 162,
          column: 8
        },
        end: {
          line: 162,
          column: 53
        }
      },
      "85": {
        start: {
          line: 163,
          column: 8
        },
        end: {
          line: 163,
          column: 58
        }
      },
      "86": {
        start: {
          line: 164,
          column: 8
        },
        end: {
          line: 164,
          column: 62
        }
      },
      "87": {
        start: {
          line: 165,
          column: 8
        },
        end: {
          line: 165,
          column: 66
        }
      },
      "88": {
        start: {
          line: 167,
          column: 8
        },
        end: {
          line: 176,
          column: 10
        }
      },
      "89": {
        start: {
          line: 169,
          column: 12
        },
        end: {
          line: 169,
          column: 50
        }
      },
      "90": {
        start: {
          line: 170,
          column: 12
        },
        end: {
          line: 170,
          column: 47
        }
      },
      "91": {
        start: {
          line: 171,
          column: 12
        },
        end: {
          line: 171,
          column: 54
        }
      },
      "92": {
        start: {
          line: 172,
          column: 12
        },
        end: {
          line: 172,
          column: 49
        }
      },
      "93": {
        start: {
          line: 173,
          column: 12
        },
        end: {
          line: 173,
          column: 38
        }
      },
      "94": {
        start: {
          line: 174,
          column: 12
        },
        end: {
          line: 174,
          column: 43
        }
      },
      "95": {
        start: {
          line: 175,
          column: 12
        },
        end: {
          line: 175,
          column: 43
        }
      },
      "96": {
        start: {
          line: 179,
          column: 4
        },
        end: {
          line: 179,
          column: 16
        }
      }
    },
    fnMap: {
      "0": {
        name: "TestHelperInitializer",
        decl: {
          start: {
            line: 20,
            column: 9
          },
          end: {
            line: 20,
            column: 30
          }
        },
        loc: {
          start: {
            line: 20,
            column: 33
          },
          end: {
            line: 180,
            column: 1
          }
        },
        line: 20
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 21,
            column: 27
          },
          end: {
            line: 21,
            column: 28
          }
        },
        loc: {
          start: {
            line: 21,
            column: 33
          },
          end: {
            line: 177,
            column: 5
          }
        },
        line: 21
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 30,
            column: 41
          },
          end: {
            line: 30,
            column: 42
          }
        },
        loc: {
          start: {
            line: 30,
            column: 57
          },
          end: {
            line: 50,
            column: 9
          }
        },
        line: 30
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 44,
            column: 32
          },
          end: {
            line: 44,
            column: 33
          }
        },
        loc: {
          start: {
            line: 44,
            column: 45
          },
          end: {
            line: 49,
            column: 13
          }
        },
        line: 44
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 52,
            column: 38
          },
          end: {
            line: 52,
            column: 39
          }
        },
        loc: {
          start: {
            line: 52,
            column: 53
          },
          end: {
            line: 63,
            column: 9
          }
        },
        line: 52
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 65,
            column: 45
          },
          end: {
            line: 65,
            column: 46
          }
        },
        loc: {
          start: {
            line: 65,
            column: 66
          },
          end: {
            line: 84,
            column: 9
          }
        },
        line: 65
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 73,
            column: 23
          },
          end: {
            line: 73,
            column: 24
          }
        },
        loc: {
          start: {
            line: 73,
            column: 29
          },
          end: {
            line: 83,
            column: 13
          }
        },
        line: 73
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 86,
            column: 40
          },
          end: {
            line: 86,
            column: 41
          }
        },
        loc: {
          start: {
            line: 86,
            column: 46
          },
          end: {
            line: 92,
            column: 9
          }
        },
        line: 86
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 95,
            column: 33
          },
          end: {
            line: 95,
            column: 34
          }
        },
        loc: {
          start: {
            line: 95,
            column: 46
          },
          end: {
            line: 110,
            column: 13
          }
        },
        line: 95
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 111,
            column: 33
          },
          end: {
            line: 111,
            column: 34
          }
        },
        loc: {
          start: {
            line: 111,
            column: 46
          },
          end: {
            line: 120,
            column: 13
          }
        },
        line: 111
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 121,
            column: 26
          },
          end: {
            line: 121,
            column: 27
          }
        },
        loc: {
          start: {
            line: 121,
            column: 50
          },
          end: {
            line: 127,
            column: 13
          }
        },
        line: 121
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 130,
            column: 33
          },
          end: {
            line: 130,
            column: 34
          }
        },
        loc: {
          start: {
            line: 130,
            column: 63
          },
          end: {
            line: 137,
            column: 9
          }
        },
        line: 130
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 167,
            column: 15
          },
          end: {
            line: 167,
            column: 16
          }
        },
        loc: {
          start: {
            line: 167,
            column: 21
          },
          end: {
            line: 176,
            column: 9
          }
        },
        line: 167
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 23,
            column: 8
          },
          end: {
            line: 25,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 23,
            column: 8
          },
          end: {
            line: 25,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 23
      },
      "1": {
        loc: {
          start: {
            line: 23,
            column: 12
          },
          end: {
            line: 23,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 23,
            column: 12
          },
          end: {
            line: 23,
            column: 43
          }
        }, {
          start: {
            line: 23,
            column: 47
          },
          end: {
            line: 23,
            column: 75
          }
        }],
        line: 23
      },
      "2": {
        loc: {
          start: {
            line: 65,
            column: 46
          },
          end: {
            line: 65,
            column: 61
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 65,
            column: 57
          },
          end: {
            line: 65,
            column: 61
          }
        }],
        line: 65
      },
      "3": {
        loc: {
          start: {
            line: 107,
            column: 67
          },
          end: {
            line: 107,
            column: 172
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 107,
            column: 67
          },
          end: {
            line: 107,
            column: 77
          }
        }, {
          start: {
            line: 107,
            column: 82
          },
          end: {
            line: 107,
            column: 153
          }
        }, {
          start: {
            line: 107,
            column: 158
          },
          end: {
            line: 107,
            column: 172
          }
        }],
        line: 107
      },
      "4": {
        loc: {
          start: {
            line: 107,
            column: 82
          },
          end: {
            line: 107,
            column: 153
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 107,
            column: 132
          },
          end: {
            line: 107,
            column: 138
          }
        }, {
          start: {
            line: 107,
            column: 141
          },
          end: {
            line: 107,
            column: 153
          }
        }],
        line: 107
      },
      "5": {
        loc: {
          start: {
            line: 107,
            column: 82
          },
          end: {
            line: 107,
            column: 129
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 107,
            column: 82
          },
          end: {
            line: 107,
            column: 112
          }
        }, {
          start: {
            line: 107,
            column: 116
          },
          end: {
            line: 107,
            column: 129
          }
        }],
        line: 107
      },
      "6": {
        loc: {
          start: {
            line: 130,
            column: 42
          },
          end: {
            line: 130,
            column: 58
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 130,
            column: 54
          },
          end: {
            line: 130,
            column: 58
          }
        }],
        line: 130
      },
      "7": {
        loc: {
          start: {
            line: 131,
            column: 12
          },
          end: {
            line: 136,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 131,
            column: 12
          },
          end: {
            line: 136,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 131
      },
      "8": {
        loc: {
          start: {
            line: 131,
            column: 16
          },
          end: {
            line: 131,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 131,
            column: 16
          },
          end: {
            line: 131,
            column: 25
          }
        }, {
          start: {
            line: 131,
            column: 29
          },
          end: {
            line: 131,
            column: 81
          }
        }],
        line: 131
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0],
      "7": [0, 0],
      "8": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/dikshantvashistha/PrepBettr/components/test/TestHelperInitializer.tsx",
      mappings: "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",
      names: [],
      sources: ["/Users/dikshantvashistha/PrepBettr/components/test/TestHelperInitializer.tsx"],
      sourcesContent: ["/**\n * Test Helper Initializer for E2E Testing\n * \n * This component exposes test helper functions to the browser window object\n * during E2E tests, allowing Playwright tests to simulate various scenarios\n * like voice transcripts, agent failures, network issues, and session state.\n */\n\n'use client';\n\nimport { useEffect } from 'react';\n\ninterface WindowWithTestHelpers extends Window {\n  simulateVoiceTranscript?: (transcript: string) => void;\n  simulateAgentFailure?: (agentType: string) => void;\n  simulateNetworkInterruption?: (duration?: number) => void;\n  simulateSessionTimeout?: () => void;\n  interviewSession?: any;\n  interviewResults?: any;\n  testHelpers?: {\n    setInterviewSession: (session: any) => void;\n    setInterviewResults: (results: any) => void;\n    triggerError: (errorType: string, details?: any) => void;\n  };\n}\n\ndeclare const window: WindowWithTestHelpers;\n\nexport default function TestHelperInitializer() {\n  useEffect(() => {\n    // Only initialize test helpers in test environment\n    if (process.env.NODE_ENV !== 'test' && !process.env.PLAYWRIGHT_TEST) {\n      return;\n    }\n\n    // Store interview session state\n    let currentSession: any = null;\n    let currentResults: any = null;\n\n    // Voice transcript simulation\n    window.simulateVoiceTranscript = (transcript: string) => {\n      console.log('\uD83C\uDFA4 Test Helper: Simulating voice transcript:', transcript);\n      \n      // Trigger voice transcript event\n      const event = new CustomEvent('voiceTranscript', {\n        detail: {\n          transcript,\n          confidence: 0.95,\n          isFinal: true,\n          timestamp: Date.now()\n        }\n      });\n      \n      document.dispatchEvent(event);\n      \n      // Also dispatch to any voice components that might be listening\n      const voiceEvents = ['speechResult', 'transcriptionResult'];\n      voiceEvents.forEach(eventType => {\n        const voiceEvent = new CustomEvent(eventType, {\n          detail: { transcript, confidence: 0.95, isFinal: true }\n        });\n        document.dispatchEvent(voiceEvent);\n      });\n    };\n\n    // Agent failure simulation\n    window.simulateAgentFailure = (agentType: string) => {\n      console.log('\u274C Test Helper: Simulating agent failure for:', agentType);\n      \n      const event = new CustomEvent('agentFailure', {\n        detail: {\n          agentType,\n          error: `Simulated ${agentType} agent failure`,\n          timestamp: Date.now(),\n          recoverable: true\n        }\n      });\n      \n      document.dispatchEvent(event);\n    };\n\n    // Network interruption simulation\n    window.simulateNetworkInterruption = (duration = 5000) => {\n      console.log('\uD83C\uDF10 Test Helper: Simulating network interruption for', duration, 'ms');\n      \n      // Simulate connection lost\n      const disconnectEvent = new CustomEvent('connectionLost', {\n        detail: { timestamp: Date.now(), duration }\n      });\n      document.dispatchEvent(disconnectEvent);\n\n      // Simulate connection restored after duration\n      setTimeout(() => {\n        const reconnectEvent = new CustomEvent('connectionRestored', {\n          detail: { timestamp: Date.now() }\n        });\n        document.dispatchEvent(reconnectEvent);\n        \n        // Add visual indicator for tests\n        const indicator = document.createElement('div');\n        indicator.setAttribute('data-testid', 'connection-restored');\n        indicator.style.display = 'none';\n        document.body.appendChild(indicator);\n      }, duration);\n    };\n\n    // Session timeout simulation\n    window.simulateSessionTimeout = () => {\n      console.log('\u23F0 Test Helper: Simulating session timeout');\n      \n      const event = new CustomEvent('sessionTimeout', {\n        detail: { timestamp: Date.now() }\n      });\n      document.dispatchEvent(event);\n    };\n\n    // Test helper utilities\n    window.testHelpers = {\n      setInterviewSession: (session: any) => {\n        console.log('\uD83D\uDCDD Test Helper: Setting interview session', session);\n        currentSession = session;\n        window.interviewSession = session;\n        \n        // Add session indicators for tests\n        const sessionIndicator = document.createElement('div');\n        sessionIndicator.setAttribute('data-testid', 'interview-session-active');\n        sessionIndicator.style.display = 'none';\n        document.body.appendChild(sessionIndicator);\n\n        const sessionIdIndicator = document.createElement('div');\n        sessionIdIndicator.setAttribute('data-testid', 'session-id');\n        sessionIdIndicator.setAttribute('data-session-id', session.id || session.config?.sessionId || 'test-session');\n        sessionIdIndicator.style.display = 'none';\n        document.body.appendChild(sessionIdIndicator);\n      },\n\n      setInterviewResults: (results: any) => {\n        console.log('\uD83D\uDCCA Test Helper: Setting interview results', results);\n        currentResults = results;\n        window.interviewResults = results;\n\n        // Add results indicator for tests\n        const resultsIndicator = document.createElement('div');\n        resultsIndicator.setAttribute('data-testid', 'results-ready');\n        resultsIndicator.style.display = 'none';\n        document.body.appendChild(resultsIndicator);\n      },\n\n      triggerError: (errorType: string, details?: any) => {\n        console.log('\uD83D\uDCA5 Test Helper: Triggering error:', errorType, details);\n        \n        const event = new CustomEvent('testError', {\n          detail: { errorType, details, timestamp: Date.now() }\n        });\n        document.dispatchEvent(event);\n      }\n    };\n\n    // Add global test indicators\n    const addTestIndicator = (testId: string, condition: boolean = true) => {\n      if (condition && !document.querySelector(`[data-testid=\"${testId}\"]`)) {\n        const indicator = document.createElement('div');\n        indicator.setAttribute('data-testid', testId);\n        indicator.style.display = 'none';\n        document.body.appendChild(indicator);\n      }\n    };\n\n    // Add common test indicators\n    addTestIndicator('voice-ready-indicator');\n    addTestIndicator('voice-active-indicator');\n    addTestIndicator('agent-handoff-pending');\n    addTestIndicator('agent-handoff-complete');\n    addTestIndicator('backup-agent-active');\n    addTestIndicator('system-recovered');\n    addTestIndicator('interview-resumed');\n    addTestIndicator('response-processed');\n\n    // Mock current agent indicator\n    const currentAgentIndicator = document.createElement('div');\n    currentAgentIndicator.setAttribute('data-testid', 'current-agent');\n    currentAgentIndicator.textContent = 'TechnicalInterviewer';\n    currentAgentIndicator.style.display = 'none';\n    document.body.appendChild(currentAgentIndicator);\n\n    // Mock current phase indicator\n    const currentPhaseIndicator = document.createElement('div');\n    currentPhaseIndicator.setAttribute('data-testid', 'current-phase');\n    currentPhaseIndicator.textContent = 'technical';\n    currentPhaseIndicator.style.display = 'none';\n    document.body.appendChild(currentPhaseIndicator);\n\n    // Mock questions answered counter\n    const questionsAnsweredIndicator = document.createElement('div');\n    questionsAnsweredIndicator.setAttribute('data-testid', 'questions-answered-count');\n    questionsAnsweredIndicator.textContent = '0';\n    questionsAnsweredIndicator.style.display = 'none';\n    document.body.appendChild(questionsAnsweredIndicator);\n\n    console.log('\u2705 Test helpers initialized for E2E testing');\n\n    // Cleanup function\n    return () => {\n      // Remove test helpers from window\n      delete window.simulateVoiceTranscript;\n      delete window.simulateAgentFailure;\n      delete window.simulateNetworkInterruption;\n      delete window.simulateSessionTimeout;\n      delete window.testHelpers;\n      delete window.interviewSession;\n      delete window.interviewResults;\n    };\n  }, []);\n\n  // This component renders nothing - it's just for side effects\n  return null;\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "facdb88bf5ffa6cfd1da9e865aed059a00a00485"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1e84m5mabi = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1e84m5mabi();
cov_1e84m5mabi().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1e84m5mabi().s[1]++;
exports.default = TestHelperInitializer;
const react_1 =
/* istanbul ignore next */
(cov_1e84m5mabi().s[2]++, require("react"));
function TestHelperInitializer() {
  /* istanbul ignore next */
  cov_1e84m5mabi().f[0]++;
  cov_1e84m5mabi().s[3]++;
  (0, react_1.useEffect)(() => {
    /* istanbul ignore next */
    cov_1e84m5mabi().f[1]++;
    cov_1e84m5mabi().s[4]++;
    // Only initialize test helpers in test environment
    if (
    /* istanbul ignore next */
    (cov_1e84m5mabi().b[1][0]++, process.env.NODE_ENV !== 'test') &&
    /* istanbul ignore next */
    (cov_1e84m5mabi().b[1][1]++, !process.env.PLAYWRIGHT_TEST)) {
      /* istanbul ignore next */
      cov_1e84m5mabi().b[0][0]++;
      cov_1e84m5mabi().s[5]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1e84m5mabi().b[0][1]++;
    }
    // Store interview session state
    let currentSession =
    /* istanbul ignore next */
    (cov_1e84m5mabi().s[6]++, null);
    let currentResults =
    /* istanbul ignore next */
    (cov_1e84m5mabi().s[7]++, null);
    // Voice transcript simulation
    /* istanbul ignore next */
    cov_1e84m5mabi().s[8]++;
    window.simulateVoiceTranscript = transcript => {
      /* istanbul ignore next */
      cov_1e84m5mabi().f[2]++;
      cov_1e84m5mabi().s[9]++;
      console.log('🎤 Test Helper: Simulating voice transcript:', transcript);
      // Trigger voice transcript event
      const event =
      /* istanbul ignore next */
      (cov_1e84m5mabi().s[10]++, new CustomEvent('voiceTranscript', {
        detail: {
          transcript,
          confidence: 0.95,
          isFinal: true,
          timestamp: Date.now()
        }
      }));
      /* istanbul ignore next */
      cov_1e84m5mabi().s[11]++;
      document.dispatchEvent(event);
      // Also dispatch to any voice components that might be listening
      const voiceEvents =
      /* istanbul ignore next */
      (cov_1e84m5mabi().s[12]++, ['speechResult', 'transcriptionResult']);
      /* istanbul ignore next */
      cov_1e84m5mabi().s[13]++;
      voiceEvents.forEach(eventType => {
        /* istanbul ignore next */
        cov_1e84m5mabi().f[3]++;
        const voiceEvent =
        /* istanbul ignore next */
        (cov_1e84m5mabi().s[14]++, new CustomEvent(eventType, {
          detail: {
            transcript,
            confidence: 0.95,
            isFinal: true
          }
        }));
        /* istanbul ignore next */
        cov_1e84m5mabi().s[15]++;
        document.dispatchEvent(voiceEvent);
      });
    };
    // Agent failure simulation
    /* istanbul ignore next */
    cov_1e84m5mabi().s[16]++;
    window.simulateAgentFailure = agentType => {
      /* istanbul ignore next */
      cov_1e84m5mabi().f[4]++;
      cov_1e84m5mabi().s[17]++;
      console.log('❌ Test Helper: Simulating agent failure for:', agentType);
      const event =
      /* istanbul ignore next */
      (cov_1e84m5mabi().s[18]++, new CustomEvent('agentFailure', {
        detail: {
          agentType,
          error: `Simulated ${agentType} agent failure`,
          timestamp: Date.now(),
          recoverable: true
        }
      }));
      /* istanbul ignore next */
      cov_1e84m5mabi().s[19]++;
      document.dispatchEvent(event);
    };
    // Network interruption simulation
    /* istanbul ignore next */
    cov_1e84m5mabi().s[20]++;
    window.simulateNetworkInterruption = (duration =
    /* istanbul ignore next */
    (cov_1e84m5mabi().b[2][0]++, 5000)) => {
      /* istanbul ignore next */
      cov_1e84m5mabi().f[5]++;
      cov_1e84m5mabi().s[21]++;
      console.log('🌐 Test Helper: Simulating network interruption for', duration, 'ms');
      // Simulate connection lost
      const disconnectEvent =
      /* istanbul ignore next */
      (cov_1e84m5mabi().s[22]++, new CustomEvent('connectionLost', {
        detail: {
          timestamp: Date.now(),
          duration
        }
      }));
      /* istanbul ignore next */
      cov_1e84m5mabi().s[23]++;
      document.dispatchEvent(disconnectEvent);
      // Simulate connection restored after duration
      /* istanbul ignore next */
      cov_1e84m5mabi().s[24]++;
      setTimeout(() => {
        /* istanbul ignore next */
        cov_1e84m5mabi().f[6]++;
        const reconnectEvent =
        /* istanbul ignore next */
        (cov_1e84m5mabi().s[25]++, new CustomEvent('connectionRestored', {
          detail: {
            timestamp: Date.now()
          }
        }));
        /* istanbul ignore next */
        cov_1e84m5mabi().s[26]++;
        document.dispatchEvent(reconnectEvent);
        // Add visual indicator for tests
        const indicator =
        /* istanbul ignore next */
        (cov_1e84m5mabi().s[27]++, document.createElement('div'));
        /* istanbul ignore next */
        cov_1e84m5mabi().s[28]++;
        indicator.setAttribute('data-testid', 'connection-restored');
        /* istanbul ignore next */
        cov_1e84m5mabi().s[29]++;
        indicator.style.display = 'none';
        /* istanbul ignore next */
        cov_1e84m5mabi().s[30]++;
        document.body.appendChild(indicator);
      }, duration);
    };
    // Session timeout simulation
    /* istanbul ignore next */
    cov_1e84m5mabi().s[31]++;
    window.simulateSessionTimeout = () => {
      /* istanbul ignore next */
      cov_1e84m5mabi().f[7]++;
      cov_1e84m5mabi().s[32]++;
      console.log('⏰ Test Helper: Simulating session timeout');
      const event =
      /* istanbul ignore next */
      (cov_1e84m5mabi().s[33]++, new CustomEvent('sessionTimeout', {
        detail: {
          timestamp: Date.now()
        }
      }));
      /* istanbul ignore next */
      cov_1e84m5mabi().s[34]++;
      document.dispatchEvent(event);
    };
    // Test helper utilities
    /* istanbul ignore next */
    cov_1e84m5mabi().s[35]++;
    window.testHelpers = {
      setInterviewSession: session => {
        /* istanbul ignore next */
        cov_1e84m5mabi().f[8]++;
        var _a;
        /* istanbul ignore next */
        cov_1e84m5mabi().s[36]++;
        console.log('📝 Test Helper: Setting interview session', session);
        /* istanbul ignore next */
        cov_1e84m5mabi().s[37]++;
        currentSession = session;
        /* istanbul ignore next */
        cov_1e84m5mabi().s[38]++;
        window.interviewSession = session;
        // Add session indicators for tests
        const sessionIndicator =
        /* istanbul ignore next */
        (cov_1e84m5mabi().s[39]++, document.createElement('div'));
        /* istanbul ignore next */
        cov_1e84m5mabi().s[40]++;
        sessionIndicator.setAttribute('data-testid', 'interview-session-active');
        /* istanbul ignore next */
        cov_1e84m5mabi().s[41]++;
        sessionIndicator.style.display = 'none';
        /* istanbul ignore next */
        cov_1e84m5mabi().s[42]++;
        document.body.appendChild(sessionIndicator);
        const sessionIdIndicator =
        /* istanbul ignore next */
        (cov_1e84m5mabi().s[43]++, document.createElement('div'));
        /* istanbul ignore next */
        cov_1e84m5mabi().s[44]++;
        sessionIdIndicator.setAttribute('data-testid', 'session-id');
        /* istanbul ignore next */
        cov_1e84m5mabi().s[45]++;
        sessionIdIndicator.setAttribute('data-session-id',
        /* istanbul ignore next */
        (cov_1e84m5mabi().b[3][0]++, session.id) ||
        /* istanbul ignore next */
        (cov_1e84m5mabi().b[3][1]++,
        /* istanbul ignore next */
        (cov_1e84m5mabi().b[5][0]++, (_a = session.config) === null) ||
        /* istanbul ignore next */
        (cov_1e84m5mabi().b[5][1]++, _a === void 0) ?
        /* istanbul ignore next */
        (cov_1e84m5mabi().b[4][0]++, void 0) :
        /* istanbul ignore next */
        (cov_1e84m5mabi().b[4][1]++, _a.sessionId)) ||
        /* istanbul ignore next */
        (cov_1e84m5mabi().b[3][2]++, 'test-session'));
        /* istanbul ignore next */
        cov_1e84m5mabi().s[46]++;
        sessionIdIndicator.style.display = 'none';
        /* istanbul ignore next */
        cov_1e84m5mabi().s[47]++;
        document.body.appendChild(sessionIdIndicator);
      },
      setInterviewResults: results => {
        /* istanbul ignore next */
        cov_1e84m5mabi().f[9]++;
        cov_1e84m5mabi().s[48]++;
        console.log('📊 Test Helper: Setting interview results', results);
        /* istanbul ignore next */
        cov_1e84m5mabi().s[49]++;
        currentResults = results;
        /* istanbul ignore next */
        cov_1e84m5mabi().s[50]++;
        window.interviewResults = results;
        // Add results indicator for tests
        const resultsIndicator =
        /* istanbul ignore next */
        (cov_1e84m5mabi().s[51]++, document.createElement('div'));
        /* istanbul ignore next */
        cov_1e84m5mabi().s[52]++;
        resultsIndicator.setAttribute('data-testid', 'results-ready');
        /* istanbul ignore next */
        cov_1e84m5mabi().s[53]++;
        resultsIndicator.style.display = 'none';
        /* istanbul ignore next */
        cov_1e84m5mabi().s[54]++;
        document.body.appendChild(resultsIndicator);
      },
      triggerError: (errorType, details) => {
        /* istanbul ignore next */
        cov_1e84m5mabi().f[10]++;
        cov_1e84m5mabi().s[55]++;
        console.log('💥 Test Helper: Triggering error:', errorType, details);
        const event =
        /* istanbul ignore next */
        (cov_1e84m5mabi().s[56]++, new CustomEvent('testError', {
          detail: {
            errorType,
            details,
            timestamp: Date.now()
          }
        }));
        /* istanbul ignore next */
        cov_1e84m5mabi().s[57]++;
        document.dispatchEvent(event);
      }
    };
    // Add global test indicators
    /* istanbul ignore next */
    cov_1e84m5mabi().s[58]++;
    const addTestIndicator = (testId, condition =
    /* istanbul ignore next */
    (cov_1e84m5mabi().b[6][0]++, true)) => {
      /* istanbul ignore next */
      cov_1e84m5mabi().f[11]++;
      cov_1e84m5mabi().s[59]++;
      if (
      /* istanbul ignore next */
      (cov_1e84m5mabi().b[8][0]++, condition) &&
      /* istanbul ignore next */
      (cov_1e84m5mabi().b[8][1]++, !document.querySelector(`[data-testid="${testId}"]`))) {
        /* istanbul ignore next */
        cov_1e84m5mabi().b[7][0]++;
        const indicator =
        /* istanbul ignore next */
        (cov_1e84m5mabi().s[60]++, document.createElement('div'));
        /* istanbul ignore next */
        cov_1e84m5mabi().s[61]++;
        indicator.setAttribute('data-testid', testId);
        /* istanbul ignore next */
        cov_1e84m5mabi().s[62]++;
        indicator.style.display = 'none';
        /* istanbul ignore next */
        cov_1e84m5mabi().s[63]++;
        document.body.appendChild(indicator);
      } else
      /* istanbul ignore next */
      {
        cov_1e84m5mabi().b[7][1]++;
      }
    };
    // Add common test indicators
    /* istanbul ignore next */
    cov_1e84m5mabi().s[64]++;
    addTestIndicator('voice-ready-indicator');
    /* istanbul ignore next */
    cov_1e84m5mabi().s[65]++;
    addTestIndicator('voice-active-indicator');
    /* istanbul ignore next */
    cov_1e84m5mabi().s[66]++;
    addTestIndicator('agent-handoff-pending');
    /* istanbul ignore next */
    cov_1e84m5mabi().s[67]++;
    addTestIndicator('agent-handoff-complete');
    /* istanbul ignore next */
    cov_1e84m5mabi().s[68]++;
    addTestIndicator('backup-agent-active');
    /* istanbul ignore next */
    cov_1e84m5mabi().s[69]++;
    addTestIndicator('system-recovered');
    /* istanbul ignore next */
    cov_1e84m5mabi().s[70]++;
    addTestIndicator('interview-resumed');
    /* istanbul ignore next */
    cov_1e84m5mabi().s[71]++;
    addTestIndicator('response-processed');
    // Mock current agent indicator
    const currentAgentIndicator =
    /* istanbul ignore next */
    (cov_1e84m5mabi().s[72]++, document.createElement('div'));
    /* istanbul ignore next */
    cov_1e84m5mabi().s[73]++;
    currentAgentIndicator.setAttribute('data-testid', 'current-agent');
    /* istanbul ignore next */
    cov_1e84m5mabi().s[74]++;
    currentAgentIndicator.textContent = 'TechnicalInterviewer';
    /* istanbul ignore next */
    cov_1e84m5mabi().s[75]++;
    currentAgentIndicator.style.display = 'none';
    /* istanbul ignore next */
    cov_1e84m5mabi().s[76]++;
    document.body.appendChild(currentAgentIndicator);
    // Mock current phase indicator
    const currentPhaseIndicator =
    /* istanbul ignore next */
    (cov_1e84m5mabi().s[77]++, document.createElement('div'));
    /* istanbul ignore next */
    cov_1e84m5mabi().s[78]++;
    currentPhaseIndicator.setAttribute('data-testid', 'current-phase');
    /* istanbul ignore next */
    cov_1e84m5mabi().s[79]++;
    currentPhaseIndicator.textContent = 'technical';
    /* istanbul ignore next */
    cov_1e84m5mabi().s[80]++;
    currentPhaseIndicator.style.display = 'none';
    /* istanbul ignore next */
    cov_1e84m5mabi().s[81]++;
    document.body.appendChild(currentPhaseIndicator);
    // Mock questions answered counter
    const questionsAnsweredIndicator =
    /* istanbul ignore next */
    (cov_1e84m5mabi().s[82]++, document.createElement('div'));
    /* istanbul ignore next */
    cov_1e84m5mabi().s[83]++;
    questionsAnsweredIndicator.setAttribute('data-testid', 'questions-answered-count');
    /* istanbul ignore next */
    cov_1e84m5mabi().s[84]++;
    questionsAnsweredIndicator.textContent = '0';
    /* istanbul ignore next */
    cov_1e84m5mabi().s[85]++;
    questionsAnsweredIndicator.style.display = 'none';
    /* istanbul ignore next */
    cov_1e84m5mabi().s[86]++;
    document.body.appendChild(questionsAnsweredIndicator);
    /* istanbul ignore next */
    cov_1e84m5mabi().s[87]++;
    console.log('✅ Test helpers initialized for E2E testing');
    // Cleanup function
    /* istanbul ignore next */
    cov_1e84m5mabi().s[88]++;
    return () => {
      /* istanbul ignore next */
      cov_1e84m5mabi().f[12]++;
      cov_1e84m5mabi().s[89]++;
      // Remove test helpers from window
      delete window.simulateVoiceTranscript;
      /* istanbul ignore next */
      cov_1e84m5mabi().s[90]++;
      delete window.simulateAgentFailure;
      /* istanbul ignore next */
      cov_1e84m5mabi().s[91]++;
      delete window.simulateNetworkInterruption;
      /* istanbul ignore next */
      cov_1e84m5mabi().s[92]++;
      delete window.simulateSessionTimeout;
      /* istanbul ignore next */
      cov_1e84m5mabi().s[93]++;
      delete window.testHelpers;
      /* istanbul ignore next */
      cov_1e84m5mabi().s[94]++;
      delete window.interviewSession;
      /* istanbul ignore next */
      cov_1e84m5mabi().s[95]++;
      delete window.interviewResults;
    };
  }, []);
  // This component renders nothing - it's just for side effects
  /* istanbul ignore next */
  cov_1e84m5mabi().s[96]++;
  return null;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,