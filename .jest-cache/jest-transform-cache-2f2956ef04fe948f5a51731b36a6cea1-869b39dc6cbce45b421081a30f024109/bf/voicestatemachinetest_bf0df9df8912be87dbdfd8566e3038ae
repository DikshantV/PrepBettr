3428bdf0d09eec828074c4c1e8f19a2f
"use strict";

/**
 * Unit tests for voice interview state machine logic
 */
/* istanbul ignore next */
function cov_14c5eciga2() {
  var path = "/Users/dikshantvashistha/PrepBettr/lib/voice-state-machine.test.ts";
  var hash = "6403e737fd3f04cd5338b9ff159f7af42c745cca";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dikshantvashistha/PrepBettr/lib/voice-state-machine.test.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 244,
          column: 3
        }
      },
      "1": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 13,
          column: 40
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 44
        }
      },
      "3": {
        start: {
          line: 10,
          column: 8
        },
        end: {
          line: 10,
          column: 48
        }
      },
      "4": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 40
        }
      },
      "5": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 44
        }
      },
      "6": {
        start: {
          line: 14,
          column: 28
        },
        end: {
          line: 24,
          column: 6
        }
      },
      "7": {
        start: {
          line: 14,
          column: 35
        },
        end: {
          line: 24,
          column: 5
        }
      },
      "8": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 121,
          column: 7
        }
      },
      "9": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 32,
          column: 11
        }
      },
      "10": {
        start: {
          line: 27,
          column: 26
        },
        end: {
          line: 27,
          column: 43
        }
      },
      "11": {
        start: {
          line: 28,
          column: 12
        },
        end: {
          line: 28,
          column: 63
        }
      },
      "12": {
        start: {
          line: 30,
          column: 12
        },
        end: {
          line: 30,
          column: 53
        }
      },
      "13": {
        start: {
          line: 31,
          column: 12
        },
        end: {
          line: 31,
          column: 65
        }
      },
      "14": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 41,
          column: 11
        }
      },
      "15": {
        start: {
          line: 34,
          column: 26
        },
        end: {
          line: 34,
          column: 43
        }
      },
      "16": {
        start: {
          line: 35,
          column: 12
        },
        end: {
          line: 35,
          column: 53
        }
      },
      "17": {
        start: {
          line: 37,
          column: 12
        },
        end: {
          line: 37,
          column: 49
        }
      },
      "18": {
        start: {
          line: 38,
          column: 12
        },
        end: {
          line: 38,
          column: 37
        }
      },
      "19": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 39,
          column: 61
        }
      },
      "20": {
        start: {
          line: 40,
          column: 12
        },
        end: {
          line: 40,
          column: 49
        }
      },
      "21": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 54,
          column: 11
        }
      },
      "22": {
        start: {
          line: 43,
          column: 26
        },
        end: {
          line: 43,
          column: 43
        }
      },
      "23": {
        start: {
          line: 44,
          column: 12
        },
        end: {
          line: 44,
          column: 49
        }
      },
      "24": {
        start: {
          line: 46,
          column: 12
        },
        end: {
          line: 46,
          column: 59
        }
      },
      "25": {
        start: {
          line: 47,
          column: 12
        },
        end: {
          line: 47,
          column: 55
        }
      },
      "26": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 49,
          column: 46
        }
      },
      "27": {
        start: {
          line: 50,
          column: 12
        },
        end: {
          line: 50,
          column: 43
        }
      },
      "28": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 51,
          column: 40
        }
      },
      "29": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 52,
          column: 58
        }
      },
      "30": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 53,
          column: 55
        }
      },
      "31": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 71,
          column: 11
        }
      },
      "32": {
        start: {
          line: 56,
          column: 26
        },
        end: {
          line: 56,
          column: 43
        }
      },
      "33": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 57,
          column: 49
        }
      },
      "34": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 58,
          column: 46
        }
      },
      "35": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 60,
          column: 37
        }
      },
      "36": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 61,
          column: 49
        }
      },
      "37": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 62,
          column: 52
        }
      },
      "38": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 64,
          column: 39
        }
      },
      "39": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 66,
          column: 38
        }
      },
      "40": {
        start: {
          line: 67,
          column: 12
        },
        end: {
          line: 67,
          column: 42
        }
      },
      "41": {
        start: {
          line: 68,
          column: 12
        },
        end: {
          line: 68,
          column: 50
        }
      },
      "42": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 69,
          column: 54
        }
      },
      "43": {
        start: {
          line: 70,
          column: 12
        },
        end: {
          line: 70,
          column: 51
        }
      },
      "44": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 95,
          column: 11
        }
      },
      "45": {
        start: {
          line: 73,
          column: 26
        },
        end: {
          line: 73,
          column: 43
        }
      },
      "46": {
        start: {
          line: 74,
          column: 12
        },
        end: {
          line: 74,
          column: 49
        }
      },
      "47": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 75,
          column: 39
        }
      },
      "48": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 77,
          column: 40
        }
      },
      "49": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 78,
          column: 42
        }
      },
      "50": {
        start: {
          line: 79,
          column: 12
        },
        end: {
          line: 79,
          column: 52
        }
      },
      "51": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 80,
          column: 54
        }
      },
      "52": {
        start: {
          line: 82,
          column: 12
        },
        end: {
          line: 82,
          column: 41
        }
      },
      "53": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 83,
          column: 36
        }
      },
      "54": {
        start: {
          line: 84,
          column: 12
        },
        end: {
          line: 84,
          column: 53
        }
      },
      "55": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 85,
          column: 48
        }
      },
      "56": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 87,
          column: 37
        }
      },
      "57": {
        start: {
          line: 88,
          column: 12
        },
        end: {
          line: 88,
          column: 43
        }
      },
      "58": {
        start: {
          line: 89,
          column: 12
        },
        end: {
          line: 89,
          column: 40
        }
      },
      "59": {
        start: {
          line: 90,
          column: 12
        },
        end: {
          line: 90,
          column: 37
        }
      },
      "60": {
        start: {
          line: 91,
          column: 12
        },
        end: {
          line: 91,
          column: 49
        }
      },
      "61": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 92,
          column: 55
        }
      },
      "62": {
        start: {
          line: 93,
          column: 12
        },
        end: {
          line: 93,
          column: 52
        }
      },
      "63": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 94,
          column: 49
        }
      },
      "64": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 106,
          column: 11
        }
      },
      "65": {
        start: {
          line: 97,
          column: 26
        },
        end: {
          line: 97,
          column: 43
        }
      },
      "66": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 98,
          column: 49
        }
      },
      "67": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 99,
          column: 37
        }
      },
      "68": {
        start: {
          line: 101,
          column: 12
        },
        end: {
          line: 101,
          column: 43
        }
      },
      "69": {
        start: {
          line: 102,
          column: 12
        },
        end: {
          line: 102,
          column: 55
        }
      },
      "70": {
        start: {
          line: 104,
          column: 12
        },
        end: {
          line: 104,
          column: 51
        }
      },
      "71": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 105,
          column: 63
        }
      },
      "72": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 120,
          column: 11
        }
      },
      "73": {
        start: {
          line: 108,
          column: 26
        },
        end: {
          line: 108,
          column: 43
        }
      },
      "74": {
        start: {
          line: 109,
          column: 12
        },
        end: {
          line: 109,
          column: 49
        }
      },
      "75": {
        start: {
          line: 110,
          column: 12
        },
        end: {
          line: 110,
          column: 46
        }
      },
      "76": {
        start: {
          line: 111,
          column: 12
        },
        end: {
          line: 111,
          column: 37
        }
      },
      "77": {
        start: {
          line: 112,
          column: 12
        },
        end: {
          line: 112,
          column: 39
        }
      },
      "78": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 113,
          column: 42
        }
      },
      "79": {
        start: {
          line: 115,
          column: 12
        },
        end: {
          line: 115,
          column: 43
        }
      },
      "80": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 116,
          column: 40
        }
      },
      "81": {
        start: {
          line: 117,
          column: 12
        },
        end: {
          line: 117,
          column: 55
        }
      },
      "82": {
        start: {
          line: 118,
          column: 12
        },
        end: {
          line: 118,
          column: 52
        }
      },
      "83": {
        start: {
          line: 119,
          column: 12
        },
        end: {
          line: 119,
          column: 49
        }
      },
      "84": {
        start: {
          line: 122,
          column: 4
        },
        end: {
          line: 181,
          column: 7
        }
      },
      "85": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 132,
          column: 11
        }
      },
      "86": {
        start: {
          line: 124,
          column: 26
        },
        end: {
          line: 124,
          column: 43
        }
      },
      "87": {
        start: {
          line: 125,
          column: 12
        },
        end: {
          line: 125,
          column: 49
        }
      },
      "88": {
        start: {
          line: 126,
          column: 12
        },
        end: {
          line: 126,
          column: 37
        }
      },
      "89": {
        start: {
          line: 128,
          column: 12
        },
        end: {
          line: 128,
          column: 51
        }
      },
      "90": {
        start: {
          line: 129,
          column: 12
        },
        end: {
          line: 129,
          column: 38
        }
      },
      "91": {
        start: {
          line: 130,
          column: 12
        },
        end: {
          line: 130,
          column: 63
        }
      },
      "92": {
        start: {
          line: 131,
          column: 12
        },
        end: {
          line: 131,
          column: 50
        }
      },
      "93": {
        start: {
          line: 133,
          column: 8
        },
        end: {
          line: 142,
          column: 11
        }
      },
      "94": {
        start: {
          line: 134,
          column: 26
        },
        end: {
          line: 134,
          column: 43
        }
      },
      "95": {
        start: {
          line: 135,
          column: 12
        },
        end: {
          line: 135,
          column: 49
        }
      },
      "96": {
        start: {
          line: 136,
          column: 12
        },
        end: {
          line: 136,
          column: 40
        }
      },
      "97": {
        start: {
          line: 138,
          column: 12
        },
        end: {
          line: 138,
          column: 51
        }
      },
      "98": {
        start: {
          line: 139,
          column: 12
        },
        end: {
          line: 139,
          column: 41
        }
      },
      "99": {
        start: {
          line: 140,
          column: 12
        },
        end: {
          line: 140,
          column: 63
        }
      },
      "100": {
        start: {
          line: 141,
          column: 12
        },
        end: {
          line: 141,
          column: 53
        }
      },
      "101": {
        start: {
          line: 143,
          column: 8
        },
        end: {
          line: 150,
          column: 11
        }
      },
      "102": {
        start: {
          line: 144,
          column: 26
        },
        end: {
          line: 144,
          column: 43
        }
      },
      "103": {
        start: {
          line: 145,
          column: 12
        },
        end: {
          line: 145,
          column: 49
        }
      },
      "104": {
        start: {
          line: 146,
          column: 12
        },
        end: {
          line: 146,
          column: 43
        }
      },
      "105": {
        start: {
          line: 148,
          column: 30
        },
        end: {
          line: 148,
          column: 96
        }
      },
      "106": {
        start: {
          line: 149,
          column: 12
        },
        end: {
          line: 149,
          column: 42
        }
      },
      "107": {
        start: {
          line: 151,
          column: 8
        },
        end: {
          line: 180,
          column: 11
        }
      },
      "108": {
        start: {
          line: 152,
          column: 26
        },
        end: {
          line: 152,
          column: 43
        }
      },
      "109": {
        start: {
          line: 154,
          column: 12
        },
        end: {
          line: 154,
          column: 53
        }
      },
      "110": {
        start: {
          line: 155,
          column: 12
        },
        end: {
          line: 155,
          column: 49
        }
      },
      "111": {
        start: {
          line: 156,
          column: 12
        },
        end: {
          line: 156,
          column: 37
        }
      },
      "112": {
        start: {
          line: 158,
          column: 12
        },
        end: {
          line: 158,
          column: 46
        }
      },
      "113": {
        start: {
          line: 160,
          column: 12
        },
        end: {
          line: 160,
          column: 37
        }
      },
      "114": {
        start: {
          line: 161,
          column: 12
        },
        end: {
          line: 161,
          column: 39
        }
      },
      "115": {
        start: {
          line: 162,
          column: 12
        },
        end: {
          line: 162,
          column: 38
        }
      },
      "116": {
        start: {
          line: 163,
          column: 12
        },
        end: {
          line: 163,
          column: 42
        }
      },
      "117": {
        start: {
          line: 165,
          column: 12
        },
        end: {
          line: 165,
          column: 40
        }
      },
      "118": {
        start: {
          line: 166,
          column: 12
        },
        end: {
          line: 166,
          column: 41
        }
      },
      "119": {
        start: {
          line: 167,
          column: 12
        },
        end: {
          line: 167,
          column: 36
        }
      },
      "120": {
        start: {
          line: 169,
          column: 12
        },
        end: {
          line: 169,
          column: 37
        }
      },
      "121": {
        start: {
          line: 170,
          column: 12
        },
        end: {
          line: 170,
          column: 43
        }
      },
      "122": {
        start: {
          line: 171,
          column: 12
        },
        end: {
          line: 171,
          column: 40
        }
      },
      "123": {
        start: {
          line: 172,
          column: 12
        },
        end: {
          line: 172,
          column: 37
        }
      },
      "124": {
        start: {
          line: 174,
          column: 12
        },
        end: {
          line: 174,
          column: 37
        }
      },
      "125": {
        start: {
          line: 175,
          column: 12
        },
        end: {
          line: 175,
          column: 61
        }
      },
      "126": {
        start: {
          line: 176,
          column: 12
        },
        end: {
          line: 176,
          column: 58
        }
      },
      "127": {
        start: {
          line: 177,
          column: 12
        },
        end: {
          line: 177,
          column: 49
        }
      },
      "128": {
        start: {
          line: 178,
          column: 12
        },
        end: {
          line: 178,
          column: 49
        }
      },
      "129": {
        start: {
          line: 179,
          column: 12
        },
        end: {
          line: 179,
          column: 52
        }
      },
      "130": {
        start: {
          line: 182,
          column: 4
        },
        end: {
          line: 212,
          column: 7
        }
      },
      "131": {
        start: {
          line: 183,
          column: 8
        },
        end: {
          line: 191,
          column: 11
        }
      },
      "132": {
        start: {
          line: 184,
          column: 26
        },
        end: {
          line: 184,
          column: 43
        }
      },
      "133": {
        start: {
          line: 185,
          column: 12
        },
        end: {
          line: 185,
          column: 49
        }
      },
      "134": {
        start: {
          line: 186,
          column: 12
        },
        end: {
          line: 186,
          column: 37
        }
      },
      "135": {
        start: {
          line: 187,
          column: 12
        },
        end: {
          line: 187,
          column: 36
        }
      },
      "136": {
        start: {
          line: 189,
          column: 33
        },
        end: {
          line: 189,
          column: 73
        }
      },
      "137": {
        start: {
          line: 190,
          column: 12
        },
        end: {
          line: 190,
          column: 45
        }
      },
      "138": {
        start: {
          line: 192,
          column: 8
        },
        end: {
          line: 200,
          column: 11
        }
      },
      "139": {
        start: {
          line: 193,
          column: 26
        },
        end: {
          line: 193,
          column: 43
        }
      },
      "140": {
        start: {
          line: 194,
          column: 12
        },
        end: {
          line: 194,
          column: 49
        }
      },
      "141": {
        start: {
          line: 195,
          column: 12
        },
        end: {
          line: 195,
          column: 40
        }
      },
      "142": {
        start: {
          line: 196,
          column: 12
        },
        end: {
          line: 196,
          column: 36
        }
      },
      "143": {
        start: {
          line: 198,
          column: 36
        },
        end: {
          line: 198,
          column: 77
        }
      },
      "144": {
        start: {
          line: 199,
          column: 12
        },
        end: {
          line: 199,
          column: 48
        }
      },
      "145": {
        start: {
          line: 201,
          column: 8
        },
        end: {
          line: 211,
          column: 11
        }
      },
      "146": {
        start: {
          line: 202,
          column: 26
        },
        end: {
          line: 202,
          column: 43
        }
      },
      "147": {
        start: {
          line: 203,
          column: 12
        },
        end: {
          line: 203,
          column: 49
        }
      },
      "148": {
        start: {
          line: 205,
          column: 33
        },
        end: {
          line: 205,
          column: 59
        }
      },
      "149": {
        start: {
          line: 206,
          column: 12
        },
        end: {
          line: 206,
          column: 45
        }
      },
      "150": {
        start: {
          line: 208,
          column: 12
        },
        end: {
          line: 208,
          column: 46
        }
      },
      "151": {
        start: {
          line: 209,
          column: 36
        },
        end: {
          line: 209,
          column: 62
        }
      },
      "152": {
        start: {
          line: 210,
          column: 12
        },
        end: {
          line: 210,
          column: 47
        }
      },
      "153": {
        start: {
          line: 213,
          column: 4
        },
        end: {
          line: 243,
          column: 7
        }
      },
      "154": {
        start: {
          line: 214,
          column: 8
        },
        end: {
          line: 224,
          column: 11
        }
      },
      "155": {
        start: {
          line: 215,
          column: 26
        },
        end: {
          line: 215,
          column: 43
        }
      },
      "156": {
        start: {
          line: 216,
          column: 12
        },
        end: {
          line: 216,
          column: 49
        }
      },
      "157": {
        start: {
          line: 217,
          column: 12
        },
        end: {
          line: 217,
          column: 37
        }
      },
      "158": {
        start: {
          line: 219,
          column: 12
        },
        end: {
          line: 219,
          column: 37
        }
      },
      "159": {
        start: {
          line: 220,
          column: 12
        },
        end: {
          line: 220,
          column: 49
        }
      },
      "160": {
        start: {
          line: 222,
          column: 12
        },
        end: {
          line: 222,
          column: 37
        }
      },
      "161": {
        start: {
          line: 223,
          column: 12
        },
        end: {
          line: 223,
          column: 49
        }
      },
      "162": {
        start: {
          line: 225,
          column: 8
        },
        end: {
          line: 233,
          column: 11
        }
      },
      "163": {
        start: {
          line: 226,
          column: 26
        },
        end: {
          line: 226,
          column: 43
        }
      },
      "164": {
        start: {
          line: 227,
          column: 12
        },
        end: {
          line: 227,
          column: 49
        }
      },
      "165": {
        start: {
          line: 228,
          column: 12
        },
        end: {
          line: 228,
          column: 37
        }
      },
      "166": {
        start: {
          line: 230,
          column: 12
        },
        end: {
          line: 230,
          column: 43
        }
      },
      "167": {
        start: {
          line: 231,
          column: 12
        },
        end: {
          line: 231,
          column: 55
        }
      },
      "168": {
        start: {
          line: 232,
          column: 12
        },
        end: {
          line: 232,
          column: 49
        }
      },
      "169": {
        start: {
          line: 234,
          column: 8
        },
        end: {
          line: 242,
          column: 11
        }
      },
      "170": {
        start: {
          line: 235,
          column: 26
        },
        end: {
          line: 235,
          column: 43
        }
      },
      "171": {
        start: {
          line: 236,
          column: 12
        },
        end: {
          line: 236,
          column: 49
        }
      },
      "172": {
        start: {
          line: 237,
          column: 12
        },
        end: {
          line: 237,
          column: 37
        }
      },
      "173": {
        start: {
          line: 238,
          column: 12
        },
        end: {
          line: 238,
          column: 43
        }
      },
      "174": {
        start: {
          line: 240,
          column: 38
        },
        end: {
          line: 240,
          column: 111
        }
      },
      "175": {
        start: {
          line: 241,
          column: 12
        },
        end: {
          line: 241,
          column: 46
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 5,
            column: 42
          },
          end: {
            line: 5,
            column: 43
          }
        },
        loc: {
          start: {
            line: 5,
            column: 48
          },
          end: {
            line: 244,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 8,
            column: 5
          },
          end: {
            line: 8,
            column: 6
          }
        },
        loc: {
          start: {
            line: 8,
            column: 27
          },
          end: {
            line: 13,
            column: 5
          }
        },
        line: 8
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 14,
            column: 28
          },
          end: {
            line: 14,
            column: 29
          }
        },
        loc: {
          start: {
            line: 14,
            column: 35
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 14
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 25,
            column: 34
          },
          end: {
            line: 25,
            column: 35
          }
        },
        loc: {
          start: {
            line: 25,
            column: 40
          },
          end: {
            line: 121,
            column: 5
          }
        },
        line: 25
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 26,
            column: 77
          },
          end: {
            line: 26,
            column: 78
          }
        },
        loc: {
          start: {
            line: 26,
            column: 83
          },
          end: {
            line: 32,
            column: 9
          }
        },
        line: 26
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 33,
            column: 86
          },
          end: {
            line: 33,
            column: 87
          }
        },
        loc: {
          start: {
            line: 33,
            column: 92
          },
          end: {
            line: 41,
            column: 9
          }
        },
        line: 33
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 42,
            column: 57
          },
          end: {
            line: 42,
            column: 58
          }
        },
        loc: {
          start: {
            line: 42,
            column: 63
          },
          end: {
            line: 54,
            column: 9
          }
        },
        line: 42
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 55,
            column: 56
          },
          end: {
            line: 55,
            column: 57
          }
        },
        loc: {
          start: {
            line: 55,
            column: 62
          },
          end: {
            line: 71,
            column: 9
          }
        },
        line: 55
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 72,
            column: 48
          },
          end: {
            line: 72,
            column: 49
          }
        },
        loc: {
          start: {
            line: 72,
            column: 54
          },
          end: {
            line: 95,
            column: 9
          }
        },
        line: 72
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 96,
            column: 49
          },
          end: {
            line: 96,
            column: 50
          }
        },
        loc: {
          start: {
            line: 96,
            column: 55
          },
          end: {
            line: 106,
            column: 9
          }
        },
        line: 96
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 107,
            column: 58
          },
          end: {
            line: 107,
            column: 59
          }
        },
        loc: {
          start: {
            line: 107,
            column: 64
          },
          end: {
            line: 120,
            column: 9
          }
        },
        line: 107
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 122,
            column: 27
          },
          end: {
            line: 122,
            column: 28
          }
        },
        loc: {
          start: {
            line: 122,
            column: 33
          },
          end: {
            line: 181,
            column: 5
          }
        },
        line: 122
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 123,
            column: 59
          },
          end: {
            line: 123,
            column: 60
          }
        },
        loc: {
          start: {
            line: 123,
            column: 65
          },
          end: {
            line: 132,
            column: 9
          }
        },
        line: 123
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 133,
            column: 63
          },
          end: {
            line: 133,
            column: 64
          }
        },
        loc: {
          start: {
            line: 133,
            column: 69
          },
          end: {
            line: 142,
            column: 9
          }
        },
        line: 133
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 143,
            column: 66
          },
          end: {
            line: 143,
            column: 67
          }
        },
        loc: {
          start: {
            line: 143,
            column: 72
          },
          end: {
            line: 150,
            column: 9
          }
        },
        line: 143
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 151,
            column: 63
          },
          end: {
            line: 151,
            column: 64
          }
        },
        loc: {
          start: {
            line: 151,
            column: 69
          },
          end: {
            line: 180,
            column: 9
          }
        },
        line: 151
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 182,
            column: 33
          },
          end: {
            line: 182,
            column: 34
          }
        },
        loc: {
          start: {
            line: 182,
            column: 39
          },
          end: {
            line: 212,
            column: 5
          }
        },
        line: 182
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 183,
            column: 69
          },
          end: {
            line: 183,
            column: 70
          }
        },
        loc: {
          start: {
            line: 183,
            column: 75
          },
          end: {
            line: 191,
            column: 9
          }
        },
        line: 183
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 192,
            column: 51
          },
          end: {
            line: 192,
            column: 52
          }
        },
        loc: {
          start: {
            line: 192,
            column: 57
          },
          end: {
            line: 200,
            column: 9
          }
        },
        line: 192
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 201,
            column: 73
          },
          end: {
            line: 201,
            column: 74
          }
        },
        loc: {
          start: {
            line: 201,
            column: 79
          },
          end: {
            line: 211,
            column: 9
          }
        },
        line: 201
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 213,
            column: 30
          },
          end: {
            line: 213,
            column: 31
          }
        },
        loc: {
          start: {
            line: 213,
            column: 36
          },
          end: {
            line: 243,
            column: 5
          }
        },
        line: 213
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 214,
            column: 67
          },
          end: {
            line: 214,
            column: 68
          }
        },
        loc: {
          start: {
            line: 214,
            column: 73
          },
          end: {
            line: 224,
            column: 9
          }
        },
        line: 214
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 225,
            column: 63
          },
          end: {
            line: 225,
            column: 64
          }
        },
        loc: {
          start: {
            line: 225,
            column: 69
          },
          end: {
            line: 233,
            column: 9
          }
        },
        line: 225
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 234,
            column: 76
          },
          end: {
            line: 234,
            column: 77
          }
        },
        loc: {
          start: {
            line: 234,
            column: 82
          },
          end: {
            line: 242,
            column: 9
          }
        },
        line: 234
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 13,
            column: 7
          },
          end: {
            line: 13,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 7
          },
          end: {
            line: 13,
            column: 17
          }
        }, {
          start: {
            line: 13,
            column: 22
          },
          end: {
            line: 13,
            column: 37
          }
        }],
        line: 13
      },
      "1": {
        loc: {
          start: {
            line: 148,
            column: 30
          },
          end: {
            line: 148,
            column: 96
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 148,
            column: 30
          },
          end: {
            line: 148,
            column: 68
          }
        }, {
          start: {
            line: 148,
            column: 72
          },
          end: {
            line: 148,
            column: 96
          }
        }],
        line: 148
      },
      "2": {
        loc: {
          start: {
            line: 189,
            column: 35
          },
          end: {
            line: 189,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 189,
            column: 35
          },
          end: {
            line: 189,
            column: 52
          }
        }, {
          start: {
            line: 189,
            column: 56
          },
          end: {
            line: 189,
            column: 72
          }
        }],
        line: 189
      },
      "3": {
        loc: {
          start: {
            line: 198,
            column: 36
          },
          end: {
            line: 198,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 198,
            column: 36
          },
          end: {
            line: 198,
            column: 56
          }
        }, {
          start: {
            line: 198,
            column: 60
          },
          end: {
            line: 198,
            column: 77
          }
        }],
        line: 198
      },
      "4": {
        loc: {
          start: {
            line: 240,
            column: 38
          },
          end: {
            line: 240,
            column: 111
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 240,
            column: 64
          },
          end: {
            line: 240,
            column: 84
          }
        }, {
          start: {
            line: 240,
            column: 87
          },
          end: {
            line: 240,
            column: 111
          }
        }],
        line: 240
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/dikshantvashistha/PrepBettr/lib/voice-state-machine.test.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/dikshantvashistha/PrepBettr/lib/voice-state-machine.test.ts"],
      sourcesContent: ["/**\n * Unit tests for voice interview state machine logic\n */\n\ndescribe('Voice Interview State Machine', () => {\n  // State machine states\n  enum CallStatus {\n    INACTIVE = 'inactive',\n    CONNECTING = 'connecting',\n    ACTIVE = 'active',\n    FINISHED = 'finished'\n  }\n\n  interface StateContext {\n    callStatus: CallStatus;\n    isRecording: boolean;\n    isSpeaking: boolean;\n    isProcessingAI: boolean;\n    isWaitingForUser: boolean;\n    hasUserSpoken: boolean;\n    introductionComplete: boolean;\n    interviewComplete: boolean;\n    questionNumber: number;\n  }\n\n  const getInitialState = (): StateContext => ({\n    callStatus: CallStatus.INACTIVE,\n    isRecording: false,\n    isSpeaking: false,\n    isProcessingAI: false,\n    isWaitingForUser: false,\n    hasUserSpoken: false,\n    introductionComplete: false,\n    interviewComplete: false,\n    questionNumber: 0\n  });\n\n  describe('State Transitions', () => {\n    it('should transition from INACTIVE to CONNECTING when call starts', () => {\n      const state = getInitialState();\n      expect(state.callStatus).toBe(CallStatus.INACTIVE);\n      \n      // Simulate call start\n      state.callStatus = CallStatus.CONNECTING;\n      expect(state.callStatus).toBe(CallStatus.CONNECTING);\n    });\n\n    it('should transition from CONNECTING to ACTIVE when connection established', () => {\n      const state = getInitialState();\n      state.callStatus = CallStatus.CONNECTING;\n      \n      // Simulate successful connection\n      state.callStatus = CallStatus.ACTIVE;\n      state.questionNumber = 1;\n      \n      expect(state.callStatus).toBe(CallStatus.ACTIVE);\n      expect(state.questionNumber).toBe(1);\n    });\n\n    it('should handle introduction phase correctly', () => {\n      const state = getInitialState();\n      state.callStatus = CallStatus.ACTIVE;\n      \n      // During introduction\n      expect(state.introductionComplete).toBe(false);\n      expect(state.isWaitingForUser).toBe(false);\n      \n      // After introduction audio ends\n      state.introductionComplete = true;\n      state.isWaitingForUser = false;\n      state.hasUserSpoken = false;\n      \n      expect(state.introductionComplete).toBe(true);\n      expect(state.isWaitingForUser).toBe(false);\n    });\n\n    it('should manage recording state transitions', () => {\n      const state = getInitialState();\n      state.callStatus = CallStatus.ACTIVE;\n      state.introductionComplete = true;\n      \n      // Start recording\n      state.isRecording = true;\n      expect(state.isRecording).toBe(true);\n      expect(state.hasUserSpoken).toBe(false);\n      \n      // User speaks (speech detected)\n      state.hasUserSpoken = true;\n      \n      // Stop recording\n      state.isRecording = false;\n      state.isWaitingForUser = true;\n      \n      expect(state.isRecording).toBe(false);\n      expect(state.isWaitingForUser).toBe(true);\n      expect(state.hasUserSpoken).toBe(true);\n    });\n\n    it('should handle AI processing state', () => {\n      const state = getInitialState();\n      state.callStatus = CallStatus.ACTIVE;\n      state.hasUserSpoken = true;\n      \n      // Start AI processing\n      state.isProcessingAI = true;\n      state.isWaitingForUser = true;\n      \n      expect(state.isProcessingAI).toBe(true);\n      expect(state.isWaitingForUser).toBe(true);\n      \n      // AI responds\n      state.isProcessingAI = false;\n      state.isSpeaking = true;\n      \n      expect(state.isProcessingAI).toBe(false);\n      expect(state.isSpeaking).toBe(true);\n      \n      // AI audio playback ends\n      state.isSpeaking = false;\n      state.isWaitingForUser = false;\n      state.hasUserSpoken = false;\n      state.questionNumber = 2;\n      \n      expect(state.isSpeaking).toBe(false);\n      expect(state.isWaitingForUser).toBe(false);\n      expect(state.hasUserSpoken).toBe(false);\n      expect(state.questionNumber).toBe(2);\n    });\n\n    it('should handle interview completion', () => {\n      const state = getInitialState();\n      state.callStatus = CallStatus.ACTIVE;\n      state.questionNumber = 5;\n      \n      // Last question answered\n      state.interviewComplete = true;\n      \n      expect(state.interviewComplete).toBe(true);\n      \n      // Cleanup\n      state.callStatus = CallStatus.FINISHED;\n      \n      expect(state.callStatus).toBe(CallStatus.FINISHED);\n    });\n\n    it('should reset state for next recording cycle', () => {\n      const state = getInitialState();\n      state.callStatus = CallStatus.ACTIVE;\n      state.introductionComplete = true;\n      state.questionNumber = 2;\n      state.hasUserSpoken = true;\n      state.isWaitingForUser = true;\n      \n      // Reset for next cycle\n      state.isWaitingForUser = false;\n      state.hasUserSpoken = false;\n      \n      expect(state.isWaitingForUser).toBe(false);\n      expect(state.hasUserSpoken).toBe(false);\n      expect(state.questionNumber).toBe(2); // Question number should remain\n    });\n  });\n\n  describe('Edge Cases', () => {\n    it('should handle disconnection during recording', () => {\n      const state = getInitialState();\n      state.callStatus = CallStatus.ACTIVE;\n      state.isRecording = true;\n      \n      // Disconnect\n      state.callStatus = CallStatus.FINISHED;\n      state.isRecording = false;\n      \n      expect(state.callStatus).toBe(CallStatus.FINISHED);\n      expect(state.isRecording).toBe(false);\n    });\n\n    it('should handle disconnection during AI processing', () => {\n      const state = getInitialState();\n      state.callStatus = CallStatus.ACTIVE;\n      state.isProcessingAI = true;\n      \n      // Disconnect\n      state.callStatus = CallStatus.FINISHED;\n      state.isProcessingAI = false;\n      \n      expect(state.callStatus).toBe(CallStatus.FINISHED);\n      expect(state.isProcessingAI).toBe(false);\n    });\n\n    it('should prevent recording when interview is complete', () => {\n      const state = getInitialState();\n      state.callStatus = CallStatus.ACTIVE;\n      state.interviewComplete = true;\n      \n      // Should not allow recording\n      const canRecord = state.callStatus === CallStatus.ACTIVE && !state.interviewComplete;\n      expect(canRecord).toBe(false);\n    });\n\n    it('should handle multiple state changes in sequence', () => {\n      const state = getInitialState();\n      \n      // Start call\n      state.callStatus = CallStatus.CONNECTING;\n      state.callStatus = CallStatus.ACTIVE;\n      state.questionNumber = 1;\n      \n      // Introduction completes\n      state.introductionComplete = true;\n      \n      // First recording cycle\n      state.isRecording = true;\n      state.hasUserSpoken = true;\n      state.isRecording = false;\n      state.isWaitingForUser = true;\n      \n      // AI processes\n      state.isProcessingAI = true;\n      state.isProcessingAI = false;\n      state.isSpeaking = true;\n      \n      // AI finishes speaking\n      state.isSpeaking = false;\n      state.isWaitingForUser = false;\n      state.hasUserSpoken = false;\n      state.questionNumber = 2;\n      \n      // Second recording cycle\n      state.isRecording = true;\n      \n      expect(state.callStatus).toBe(CallStatus.ACTIVE);\n      expect(state.introductionComplete).toBe(true);\n      expect(state.questionNumber).toBe(2);\n      expect(state.isRecording).toBe(true);\n      expect(state.hasUserSpoken).toBe(false);\n    });\n  });\n\n  describe('State Validation', () => {\n    it('should not allow recording and speaking simultaneously', () => {\n      const state = getInitialState();\n      state.callStatus = CallStatus.ACTIVE;\n      \n      state.isRecording = true;\n      state.isSpeaking = true;\n      \n      // Validate this is an invalid state\n      const isValidState = !(state.isRecording && state.isSpeaking);\n      expect(isValidState).toBe(false);\n    });\n\n    it('should not process AI while speaking', () => {\n      const state = getInitialState();\n      state.callStatus = CallStatus.ACTIVE;\n      \n      state.isProcessingAI = true;\n      state.isSpeaking = true;\n      \n      // This could be valid during transition, but generally should not occur\n      const isExpectedState = state.isProcessingAI && !state.isSpeaking;\n      expect(isExpectedState).toBe(false);\n    });\n\n    it('should require introduction complete before user can speak', () => {\n      const state = getInitialState();\n      state.callStatus = CallStatus.ACTIVE;\n      \n      // Try to record before introduction\n      const canUserSpeak = state.introductionComplete;\n      expect(canUserSpeak).toBe(false);\n      \n      // After introduction\n      state.introductionComplete = true;\n      const canUserSpeakNow = state.introductionComplete;\n      expect(canUserSpeakNow).toBe(true);\n    });\n  });\n\n  describe('Question Flow', () => {\n    it('should increment question number after each response', () => {\n      const state = getInitialState();\n      state.callStatus = CallStatus.ACTIVE;\n      state.questionNumber = 1;\n      \n      // After first response\n      state.questionNumber = 2;\n      expect(state.questionNumber).toBe(2);\n      \n      // After second response\n      state.questionNumber = 3;\n      expect(state.questionNumber).toBe(3);\n    });\n\n    it('should mark interview complete at final question', () => {\n      const state = getInitialState();\n      state.callStatus = CallStatus.ACTIVE;\n      state.questionNumber = 5; // Assuming 5 is the last question\n      \n      // After final response\n      state.interviewComplete = true;\n      \n      expect(state.interviewComplete).toBe(true);\n      expect(state.questionNumber).toBe(5);\n    });\n\n    it('should not increment question number if interview is complete', () => {\n      const state = getInitialState();\n      state.callStatus = CallStatus.ACTIVE;\n      state.questionNumber = 5;\n      state.interviewComplete = true;\n      \n      // Attempt to increment (should not happen)\n      const newQuestionNumber = state.interviewComplete ? state.questionNumber : state.questionNumber + 1;\n      \n      expect(newQuestionNumber).toBe(5);\n    });\n  });\n});\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "6403e737fd3f04cd5338b9ff159f7af42c745cca"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_14c5eciga2 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_14c5eciga2();
cov_14c5eciga2().s[0]++;
describe('Voice Interview State Machine', () => {
  /* istanbul ignore next */
  cov_14c5eciga2().f[0]++;
  // State machine states
  let CallStatus;
  /* istanbul ignore next */
  cov_14c5eciga2().s[1]++;
  (function (CallStatus) {
    /* istanbul ignore next */
    cov_14c5eciga2().f[1]++;
    cov_14c5eciga2().s[2]++;
    CallStatus["INACTIVE"] = "inactive";
    /* istanbul ignore next */
    cov_14c5eciga2().s[3]++;
    CallStatus["CONNECTING"] = "connecting";
    /* istanbul ignore next */
    cov_14c5eciga2().s[4]++;
    CallStatus["ACTIVE"] = "active";
    /* istanbul ignore next */
    cov_14c5eciga2().s[5]++;
    CallStatus["FINISHED"] = "finished";
  })(
  /* istanbul ignore next */
  (cov_14c5eciga2().b[0][0]++, CallStatus) ||
  /* istanbul ignore next */
  (cov_14c5eciga2().b[0][1]++, CallStatus = {}));
  /* istanbul ignore next */
  cov_14c5eciga2().s[6]++;
  const getInitialState = () => {
    /* istanbul ignore next */
    cov_14c5eciga2().f[2]++;
    cov_14c5eciga2().s[7]++;
    return {
      callStatus: CallStatus.INACTIVE,
      isRecording: false,
      isSpeaking: false,
      isProcessingAI: false,
      isWaitingForUser: false,
      hasUserSpoken: false,
      introductionComplete: false,
      interviewComplete: false,
      questionNumber: 0
    };
  };
  /* istanbul ignore next */
  cov_14c5eciga2().s[8]++;
  describe('State Transitions', () => {
    /* istanbul ignore next */
    cov_14c5eciga2().f[3]++;
    cov_14c5eciga2().s[9]++;
    it('should transition from INACTIVE to CONNECTING when call starts', () => {
      /* istanbul ignore next */
      cov_14c5eciga2().f[4]++;
      const state =
      /* istanbul ignore next */
      (cov_14c5eciga2().s[10]++, getInitialState());
      /* istanbul ignore next */
      cov_14c5eciga2().s[11]++;
      expect(state.callStatus).toBe(CallStatus.INACTIVE);
      // Simulate call start
      /* istanbul ignore next */
      cov_14c5eciga2().s[12]++;
      state.callStatus = CallStatus.CONNECTING;
      /* istanbul ignore next */
      cov_14c5eciga2().s[13]++;
      expect(state.callStatus).toBe(CallStatus.CONNECTING);
    });
    /* istanbul ignore next */
    cov_14c5eciga2().s[14]++;
    it('should transition from CONNECTING to ACTIVE when connection established', () => {
      /* istanbul ignore next */
      cov_14c5eciga2().f[5]++;
      const state =
      /* istanbul ignore next */
      (cov_14c5eciga2().s[15]++, getInitialState());
      /* istanbul ignore next */
      cov_14c5eciga2().s[16]++;
      state.callStatus = CallStatus.CONNECTING;
      // Simulate successful connection
      /* istanbul ignore next */
      cov_14c5eciga2().s[17]++;
      state.callStatus = CallStatus.ACTIVE;
      /* istanbul ignore next */
      cov_14c5eciga2().s[18]++;
      state.questionNumber = 1;
      /* istanbul ignore next */
      cov_14c5eciga2().s[19]++;
      expect(state.callStatus).toBe(CallStatus.ACTIVE);
      /* istanbul ignore next */
      cov_14c5eciga2().s[20]++;
      expect(state.questionNumber).toBe(1);
    });
    /* istanbul ignore next */
    cov_14c5eciga2().s[21]++;
    it('should handle introduction phase correctly', () => {
      /* istanbul ignore next */
      cov_14c5eciga2().f[6]++;
      const state =
      /* istanbul ignore next */
      (cov_14c5eciga2().s[22]++, getInitialState());
      /* istanbul ignore next */
      cov_14c5eciga2().s[23]++;
      state.callStatus = CallStatus.ACTIVE;
      // During introduction
      /* istanbul ignore next */
      cov_14c5eciga2().s[24]++;
      expect(state.introductionComplete).toBe(false);
      /* istanbul ignore next */
      cov_14c5eciga2().s[25]++;
      expect(state.isWaitingForUser).toBe(false);
      // After introduction audio ends
      /* istanbul ignore next */
      cov_14c5eciga2().s[26]++;
      state.introductionComplete = true;
      /* istanbul ignore next */
      cov_14c5eciga2().s[27]++;
      state.isWaitingForUser = false;
      /* istanbul ignore next */
      cov_14c5eciga2().s[28]++;
      state.hasUserSpoken = false;
      /* istanbul ignore next */
      cov_14c5eciga2().s[29]++;
      expect(state.introductionComplete).toBe(true);
      /* istanbul ignore next */
      cov_14c5eciga2().s[30]++;
      expect(state.isWaitingForUser).toBe(false);
    });
    /* istanbul ignore next */
    cov_14c5eciga2().s[31]++;
    it('should manage recording state transitions', () => {
      /* istanbul ignore next */
      cov_14c5eciga2().f[7]++;
      const state =
      /* istanbul ignore next */
      (cov_14c5eciga2().s[32]++, getInitialState());
      /* istanbul ignore next */
      cov_14c5eciga2().s[33]++;
      state.callStatus = CallStatus.ACTIVE;
      /* istanbul ignore next */
      cov_14c5eciga2().s[34]++;
      state.introductionComplete = true;
      // Start recording
      /* istanbul ignore next */
      cov_14c5eciga2().s[35]++;
      state.isRecording = true;
      /* istanbul ignore next */
      cov_14c5eciga2().s[36]++;
      expect(state.isRecording).toBe(true);
      /* istanbul ignore next */
      cov_14c5eciga2().s[37]++;
      expect(state.hasUserSpoken).toBe(false);
      // User speaks (speech detected)
      /* istanbul ignore next */
      cov_14c5eciga2().s[38]++;
      state.hasUserSpoken = true;
      // Stop recording
      /* istanbul ignore next */
      cov_14c5eciga2().s[39]++;
      state.isRecording = false;
      /* istanbul ignore next */
      cov_14c5eciga2().s[40]++;
      state.isWaitingForUser = true;
      /* istanbul ignore next */
      cov_14c5eciga2().s[41]++;
      expect(state.isRecording).toBe(false);
      /* istanbul ignore next */
      cov_14c5eciga2().s[42]++;
      expect(state.isWaitingForUser).toBe(true);
      /* istanbul ignore next */
      cov_14c5eciga2().s[43]++;
      expect(state.hasUserSpoken).toBe(true);
    });
    /* istanbul ignore next */
    cov_14c5eciga2().s[44]++;
    it('should handle AI processing state', () => {
      /* istanbul ignore next */
      cov_14c5eciga2().f[8]++;
      const state =
      /* istanbul ignore next */
      (cov_14c5eciga2().s[45]++, getInitialState());
      /* istanbul ignore next */
      cov_14c5eciga2().s[46]++;
      state.callStatus = CallStatus.ACTIVE;
      /* istanbul ignore next */
      cov_14c5eciga2().s[47]++;
      state.hasUserSpoken = true;
      // Start AI processing
      /* istanbul ignore next */
      cov_14c5eciga2().s[48]++;
      state.isProcessingAI = true;
      /* istanbul ignore next */
      cov_14c5eciga2().s[49]++;
      state.isWaitingForUser = true;
      /* istanbul ignore next */
      cov_14c5eciga2().s[50]++;
      expect(state.isProcessingAI).toBe(true);
      /* istanbul ignore next */
      cov_14c5eciga2().s[51]++;
      expect(state.isWaitingForUser).toBe(true);
      // AI responds
      /* istanbul ignore next */
      cov_14c5eciga2().s[52]++;
      state.isProcessingAI = false;
      /* istanbul ignore next */
      cov_14c5eciga2().s[53]++;
      state.isSpeaking = true;
      /* istanbul ignore next */
      cov_14c5eciga2().s[54]++;
      expect(state.isProcessingAI).toBe(false);
      /* istanbul ignore next */
      cov_14c5eciga2().s[55]++;
      expect(state.isSpeaking).toBe(true);
      // AI audio playback ends
      /* istanbul ignore next */
      cov_14c5eciga2().s[56]++;
      state.isSpeaking = false;
      /* istanbul ignore next */
      cov_14c5eciga2().s[57]++;
      state.isWaitingForUser = false;
      /* istanbul ignore next */
      cov_14c5eciga2().s[58]++;
      state.hasUserSpoken = false;
      /* istanbul ignore next */
      cov_14c5eciga2().s[59]++;
      state.questionNumber = 2;
      /* istanbul ignore next */
      cov_14c5eciga2().s[60]++;
      expect(state.isSpeaking).toBe(false);
      /* istanbul ignore next */
      cov_14c5eciga2().s[61]++;
      expect(state.isWaitingForUser).toBe(false);
      /* istanbul ignore next */
      cov_14c5eciga2().s[62]++;
      expect(state.hasUserSpoken).toBe(false);
      /* istanbul ignore next */
      cov_14c5eciga2().s[63]++;
      expect(state.questionNumber).toBe(2);
    });
    /* istanbul ignore next */
    cov_14c5eciga2().s[64]++;
    it('should handle interview completion', () => {
      /* istanbul ignore next */
      cov_14c5eciga2().f[9]++;
      const state =
      /* istanbul ignore next */
      (cov_14c5eciga2().s[65]++, getInitialState());
      /* istanbul ignore next */
      cov_14c5eciga2().s[66]++;
      state.callStatus = CallStatus.ACTIVE;
      /* istanbul ignore next */
      cov_14c5eciga2().s[67]++;
      state.questionNumber = 5;
      // Last question answered
      /* istanbul ignore next */
      cov_14c5eciga2().s[68]++;
      state.interviewComplete = true;
      /* istanbul ignore next */
      cov_14c5eciga2().s[69]++;
      expect(state.interviewComplete).toBe(true);
      // Cleanup
      /* istanbul ignore next */
      cov_14c5eciga2().s[70]++;
      state.callStatus = CallStatus.FINISHED;
      /* istanbul ignore next */
      cov_14c5eciga2().s[71]++;
      expect(state.callStatus).toBe(CallStatus.FINISHED);
    });
    /* istanbul ignore next */
    cov_14c5eciga2().s[72]++;
    it('should reset state for next recording cycle', () => {
      /* istanbul ignore next */
      cov_14c5eciga2().f[10]++;
      const state =
      /* istanbul ignore next */
      (cov_14c5eciga2().s[73]++, getInitialState());
      /* istanbul ignore next */
      cov_14c5eciga2().s[74]++;
      state.callStatus = CallStatus.ACTIVE;
      /* istanbul ignore next */
      cov_14c5eciga2().s[75]++;
      state.introductionComplete = true;
      /* istanbul ignore next */
      cov_14c5eciga2().s[76]++;
      state.questionNumber = 2;
      /* istanbul ignore next */
      cov_14c5eciga2().s[77]++;
      state.hasUserSpoken = true;
      /* istanbul ignore next */
      cov_14c5eciga2().s[78]++;
      state.isWaitingForUser = true;
      // Reset for next cycle
      /* istanbul ignore next */
      cov_14c5eciga2().s[79]++;
      state.isWaitingForUser = false;
      /* istanbul ignore next */
      cov_14c5eciga2().s[80]++;
      state.hasUserSpoken = false;
      /* istanbul ignore next */
      cov_14c5eciga2().s[81]++;
      expect(state.isWaitingForUser).toBe(false);
      /* istanbul ignore next */
      cov_14c5eciga2().s[82]++;
      expect(state.hasUserSpoken).toBe(false);
      /* istanbul ignore next */
      cov_14c5eciga2().s[83]++;
      expect(state.questionNumber).toBe(2); // Question number should remain
    });
  });
  /* istanbul ignore next */
  cov_14c5eciga2().s[84]++;
  describe('Edge Cases', () => {
    /* istanbul ignore next */
    cov_14c5eciga2().f[11]++;
    cov_14c5eciga2().s[85]++;
    it('should handle disconnection during recording', () => {
      /* istanbul ignore next */
      cov_14c5eciga2().f[12]++;
      const state =
      /* istanbul ignore next */
      (cov_14c5eciga2().s[86]++, getInitialState());
      /* istanbul ignore next */
      cov_14c5eciga2().s[87]++;
      state.callStatus = CallStatus.ACTIVE;
      /* istanbul ignore next */
      cov_14c5eciga2().s[88]++;
      state.isRecording = true;
      // Disconnect
      /* istanbul ignore next */
      cov_14c5eciga2().s[89]++;
      state.callStatus = CallStatus.FINISHED;
      /* istanbul ignore next */
      cov_14c5eciga2().s[90]++;
      state.isRecording = false;
      /* istanbul ignore next */
      cov_14c5eciga2().s[91]++;
      expect(state.callStatus).toBe(CallStatus.FINISHED);
      /* istanbul ignore next */
      cov_14c5eciga2().s[92]++;
      expect(state.isRecording).toBe(false);
    });
    /* istanbul ignore next */
    cov_14c5eciga2().s[93]++;
    it('should handle disconnection during AI processing', () => {
      /* istanbul ignore next */
      cov_14c5eciga2().f[13]++;
      const state =
      /* istanbul ignore next */
      (cov_14c5eciga2().s[94]++, getInitialState());
      /* istanbul ignore next */
      cov_14c5eciga2().s[95]++;
      state.callStatus = CallStatus.ACTIVE;
      /* istanbul ignore next */
      cov_14c5eciga2().s[96]++;
      state.isProcessingAI = true;
      // Disconnect
      /* istanbul ignore next */
      cov_14c5eciga2().s[97]++;
      state.callStatus = CallStatus.FINISHED;
      /* istanbul ignore next */
      cov_14c5eciga2().s[98]++;
      state.isProcessingAI = false;
      /* istanbul ignore next */
      cov_14c5eciga2().s[99]++;
      expect(state.callStatus).toBe(CallStatus.FINISHED);
      /* istanbul ignore next */
      cov_14c5eciga2().s[100]++;
      expect(state.isProcessingAI).toBe(false);
    });
    /* istanbul ignore next */
    cov_14c5eciga2().s[101]++;
    it('should prevent recording when interview is complete', () => {
      /* istanbul ignore next */
      cov_14c5eciga2().f[14]++;
      const state =
      /* istanbul ignore next */
      (cov_14c5eciga2().s[102]++, getInitialState());
      /* istanbul ignore next */
      cov_14c5eciga2().s[103]++;
      state.callStatus = CallStatus.ACTIVE;
      /* istanbul ignore next */
      cov_14c5eciga2().s[104]++;
      state.interviewComplete = true;
      // Should not allow recording
      const canRecord =
      /* istanbul ignore next */
      (cov_14c5eciga2().s[105]++,
      /* istanbul ignore next */
      (cov_14c5eciga2().b[1][0]++, state.callStatus === CallStatus.ACTIVE) &&
      /* istanbul ignore next */
      (cov_14c5eciga2().b[1][1]++, !state.interviewComplete));
      /* istanbul ignore next */
      cov_14c5eciga2().s[106]++;
      expect(canRecord).toBe(false);
    });
    /* istanbul ignore next */
    cov_14c5eciga2().s[107]++;
    it('should handle multiple state changes in sequence', () => {
      /* istanbul ignore next */
      cov_14c5eciga2().f[15]++;
      const state =
      /* istanbul ignore next */
      (cov_14c5eciga2().s[108]++, getInitialState());
      // Start call
      /* istanbul ignore next */
      cov_14c5eciga2().s[109]++;
      state.callStatus = CallStatus.CONNECTING;
      /* istanbul ignore next */
      cov_14c5eciga2().s[110]++;
      state.callStatus = CallStatus.ACTIVE;
      /* istanbul ignore next */
      cov_14c5eciga2().s[111]++;
      state.questionNumber = 1;
      // Introduction completes
      /* istanbul ignore next */
      cov_14c5eciga2().s[112]++;
      state.introductionComplete = true;
      // First recording cycle
      /* istanbul ignore next */
      cov_14c5eciga2().s[113]++;
      state.isRecording = true;
      /* istanbul ignore next */
      cov_14c5eciga2().s[114]++;
      state.hasUserSpoken = true;
      /* istanbul ignore next */
      cov_14c5eciga2().s[115]++;
      state.isRecording = false;
      /* istanbul ignore next */
      cov_14c5eciga2().s[116]++;
      state.isWaitingForUser = true;
      // AI processes
      /* istanbul ignore next */
      cov_14c5eciga2().s[117]++;
      state.isProcessingAI = true;
      /* istanbul ignore next */
      cov_14c5eciga2().s[118]++;
      state.isProcessingAI = false;
      /* istanbul ignore next */
      cov_14c5eciga2().s[119]++;
      state.isSpeaking = true;
      // AI finishes speaking
      /* istanbul ignore next */
      cov_14c5eciga2().s[120]++;
      state.isSpeaking = false;
      /* istanbul ignore next */
      cov_14c5eciga2().s[121]++;
      state.isWaitingForUser = false;
      /* istanbul ignore next */
      cov_14c5eciga2().s[122]++;
      state.hasUserSpoken = false;
      /* istanbul ignore next */
      cov_14c5eciga2().s[123]++;
      state.questionNumber = 2;
      // Second recording cycle
      /* istanbul ignore next */
      cov_14c5eciga2().s[124]++;
      state.isRecording = true;
      /* istanbul ignore next */
      cov_14c5eciga2().s[125]++;
      expect(state.callStatus).toBe(CallStatus.ACTIVE);
      /* istanbul ignore next */
      cov_14c5eciga2().s[126]++;
      expect(state.introductionComplete).toBe(true);
      /* istanbul ignore next */
      cov_14c5eciga2().s[127]++;
      expect(state.questionNumber).toBe(2);
      /* istanbul ignore next */
      cov_14c5eciga2().s[128]++;
      expect(state.isRecording).toBe(true);
      /* istanbul ignore next */
      cov_14c5eciga2().s[129]++;
      expect(state.hasUserSpoken).toBe(false);
    });
  });
  /* istanbul ignore next */
  cov_14c5eciga2().s[130]++;
  describe('State Validation', () => {
    /* istanbul ignore next */
    cov_14c5eciga2().f[16]++;
    cov_14c5eciga2().s[131]++;
    it('should not allow recording and speaking simultaneously', () => {
      /* istanbul ignore next */
      cov_14c5eciga2().f[17]++;
      const state =
      /* istanbul ignore next */
      (cov_14c5eciga2().s[132]++, getInitialState());
      /* istanbul ignore next */
      cov_14c5eciga2().s[133]++;
      state.callStatus = CallStatus.ACTIVE;
      /* istanbul ignore next */
      cov_14c5eciga2().s[134]++;
      state.isRecording = true;
      /* istanbul ignore next */
      cov_14c5eciga2().s[135]++;
      state.isSpeaking = true;
      // Validate this is an invalid state
      const isValidState =
      /* istanbul ignore next */
      (cov_14c5eciga2().s[136]++, !(
      /* istanbul ignore next */
      (cov_14c5eciga2().b[2][0]++, state.isRecording) &&
      /* istanbul ignore next */
      (cov_14c5eciga2().b[2][1]++, state.isSpeaking)));
      /* istanbul ignore next */
      cov_14c5eciga2().s[137]++;
      expect(isValidState).toBe(false);
    });
    /* istanbul ignore next */
    cov_14c5eciga2().s[138]++;
    it('should not process AI while speaking', () => {
      /* istanbul ignore next */
      cov_14c5eciga2().f[18]++;
      const state =
      /* istanbul ignore next */
      (cov_14c5eciga2().s[139]++, getInitialState());
      /* istanbul ignore next */
      cov_14c5eciga2().s[140]++;
      state.callStatus = CallStatus.ACTIVE;
      /* istanbul ignore next */
      cov_14c5eciga2().s[141]++;
      state.isProcessingAI = true;
      /* istanbul ignore next */
      cov_14c5eciga2().s[142]++;
      state.isSpeaking = true;
      // This could be valid during transition, but generally should not occur
      const isExpectedState =
      /* istanbul ignore next */
      (cov_14c5eciga2().s[143]++,
      /* istanbul ignore next */
      (cov_14c5eciga2().b[3][0]++, state.isProcessingAI) &&
      /* istanbul ignore next */
      (cov_14c5eciga2().b[3][1]++, !state.isSpeaking));
      /* istanbul ignore next */
      cov_14c5eciga2().s[144]++;
      expect(isExpectedState).toBe(false);
    });
    /* istanbul ignore next */
    cov_14c5eciga2().s[145]++;
    it('should require introduction complete before user can speak', () => {
      /* istanbul ignore next */
      cov_14c5eciga2().f[19]++;
      const state =
      /* istanbul ignore next */
      (cov_14c5eciga2().s[146]++, getInitialState());
      /* istanbul ignore next */
      cov_14c5eciga2().s[147]++;
      state.callStatus = CallStatus.ACTIVE;
      // Try to record before introduction
      const canUserSpeak =
      /* istanbul ignore next */
      (cov_14c5eciga2().s[148]++, state.introductionComplete);
      /* istanbul ignore next */
      cov_14c5eciga2().s[149]++;
      expect(canUserSpeak).toBe(false);
      // After introduction
      /* istanbul ignore next */
      cov_14c5eciga2().s[150]++;
      state.introductionComplete = true;
      const canUserSpeakNow =
      /* istanbul ignore next */
      (cov_14c5eciga2().s[151]++, state.introductionComplete);
      /* istanbul ignore next */
      cov_14c5eciga2().s[152]++;
      expect(canUserSpeakNow).toBe(true);
    });
  });
  /* istanbul ignore next */
  cov_14c5eciga2().s[153]++;
  describe('Question Flow', () => {
    /* istanbul ignore next */
    cov_14c5eciga2().f[20]++;
    cov_14c5eciga2().s[154]++;
    it('should increment question number after each response', () => {
      /* istanbul ignore next */
      cov_14c5eciga2().f[21]++;
      const state =
      /* istanbul ignore next */
      (cov_14c5eciga2().s[155]++, getInitialState());
      /* istanbul ignore next */
      cov_14c5eciga2().s[156]++;
      state.callStatus = CallStatus.ACTIVE;
      /* istanbul ignore next */
      cov_14c5eciga2().s[157]++;
      state.questionNumber = 1;
      // After first response
      /* istanbul ignore next */
      cov_14c5eciga2().s[158]++;
      state.questionNumber = 2;
      /* istanbul ignore next */
      cov_14c5eciga2().s[159]++;
      expect(state.questionNumber).toBe(2);
      // After second response
      /* istanbul ignore next */
      cov_14c5eciga2().s[160]++;
      state.questionNumber = 3;
      /* istanbul ignore next */
      cov_14c5eciga2().s[161]++;
      expect(state.questionNumber).toBe(3);
    });
    /* istanbul ignore next */
    cov_14c5eciga2().s[162]++;
    it('should mark interview complete at final question', () => {
      /* istanbul ignore next */
      cov_14c5eciga2().f[22]++;
      const state =
      /* istanbul ignore next */
      (cov_14c5eciga2().s[163]++, getInitialState());
      /* istanbul ignore next */
      cov_14c5eciga2().s[164]++;
      state.callStatus = CallStatus.ACTIVE;
      /* istanbul ignore next */
      cov_14c5eciga2().s[165]++;
      state.questionNumber = 5; // Assuming 5 is the last question
      // After final response
      /* istanbul ignore next */
      cov_14c5eciga2().s[166]++;
      state.interviewComplete = true;
      /* istanbul ignore next */
      cov_14c5eciga2().s[167]++;
      expect(state.interviewComplete).toBe(true);
      /* istanbul ignore next */
      cov_14c5eciga2().s[168]++;
      expect(state.questionNumber).toBe(5);
    });
    /* istanbul ignore next */
    cov_14c5eciga2().s[169]++;
    it('should not increment question number if interview is complete', () => {
      /* istanbul ignore next */
      cov_14c5eciga2().f[23]++;
      const state =
      /* istanbul ignore next */
      (cov_14c5eciga2().s[170]++, getInitialState());
      /* istanbul ignore next */
      cov_14c5eciga2().s[171]++;
      state.callStatus = CallStatus.ACTIVE;
      /* istanbul ignore next */
      cov_14c5eciga2().s[172]++;
      state.questionNumber = 5;
      /* istanbul ignore next */
      cov_14c5eciga2().s[173]++;
      state.interviewComplete = true;
      // Attempt to increment (should not happen)
      const newQuestionNumber =
      /* istanbul ignore next */
      (cov_14c5eciga2().s[174]++, state.interviewComplete ?
      /* istanbul ignore next */
      (cov_14c5eciga2().b[4][0]++, state.questionNumber) :
      /* istanbul ignore next */
      (cov_14c5eciga2().b[4][1]++, state.questionNumber + 1));
      /* istanbul ignore next */
      cov_14c5eciga2().s[175]++;
      expect(newQuestionNumber).toBe(5);
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,