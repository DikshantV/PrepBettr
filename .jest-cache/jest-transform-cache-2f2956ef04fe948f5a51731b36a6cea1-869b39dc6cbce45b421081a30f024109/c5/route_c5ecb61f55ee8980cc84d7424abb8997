073eabb666f1cf4438b735ee5cb52cc1
"use strict";

/**
 * GET /api/config/[key]
 *
 * Unified configuration API endpoint for feature flags and app settings.
 * Used by useUnifiedConfig hook for client-side configuration access.
 */
/* istanbul ignore next */
function cov_8k50haz5b() {
  var path = "/Users/dikshantvashistha/PrepBettr/app/api/config/[key]/route.ts";
  var hash = "851cfef983f40dc6cfa33d82f8a768d4d1ee31fb";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dikshantvashistha/PrepBettr/app/api/config/[key]/route.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 62
        }
      },
      "1": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 18
        }
      },
      "2": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 10,
          column: 20
        }
      },
      "3": {
        start: {
          line: 11,
          column: 17
        },
        end: {
          line: 11,
          column: 39
        }
      },
      "4": {
        start: {
          line: 16,
          column: 23
        },
        end: {
          line: 36,
          column: 1
        }
      },
      "5": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 43,
          column: 5
        }
      },
      "6": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 74
        }
      },
      "7": {
        start: {
          line: 44,
          column: 4
        },
        end: {
          line: 46,
          column: 5
        }
      },
      "8": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 71
        }
      },
      "9": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 50,
          column: 5
        }
      },
      "10": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 84
        }
      },
      "11": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 51,
          column: 29
        }
      },
      "12": {
        start: {
          line: 58,
          column: 4
        },
        end: {
          line: 81,
          column: 5
        }
      },
      "13": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 80,
          column: 9
        }
      },
      "14": {
        start: {
          line: 62,
          column: 27
        },
        end: {
          line: 62,
          column: 64
        }
      },
      "15": {
        start: {
          line: 63,
          column: 29
        },
        end: {
          line: 63,
          column: 48
        }
      },
      "16": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 76,
          column: 13
        }
      },
      "17": {
        start: {
          line: 66,
          column: 34
        },
        end: {
          line: 66,
          column: 42
        }
      },
      "18": {
        start: {
          line: 67,
          column: 16
        },
        end: {
          line: 74,
          column: 55
        }
      },
      "19": {
        start: {
          line: 68,
          column: 20
        },
        end: {
          line: 68,
          column: 39
        }
      },
      "20": {
        start: {
          line: 69,
          column: 21
        },
        end: {
          line: 74,
          column: 55
        }
      },
      "21": {
        start: {
          line: 70,
          column: 20
        },
        end: {
          line: 70,
          column: 40
        }
      },
      "22": {
        start: {
          line: 71,
          column: 21
        },
        end: {
          line: 74,
          column: 55
        }
      },
      "23": {
        start: {
          line: 72,
          column: 20
        },
        end: {
          line: 72,
          column: 57
        }
      },
      "24": {
        start: {
          line: 73,
          column: 21
        },
        end: {
          line: 74,
          column: 55
        }
      },
      "25": {
        start: {
          line: 74,
          column: 20
        },
        end: {
          line: 74,
          column: 55
        }
      },
      "26": {
        start: {
          line: 75,
          column: 16
        },
        end: {
          line: 75,
          column: 69
        }
      },
      "27": {
        start: {
          line: 79,
          column: 12
        },
        end: {
          line: 79,
          column: 91
        }
      },
      "28": {
        start: {
          line: 83,
          column: 4
        },
        end: {
          line: 90,
          column: 5
        }
      },
      "29": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 89,
          column: 84
        }
      },
      "30": {
        start: {
          line: 92,
          column: 25
        },
        end: {
          line: 92,
          column: 44
        }
      },
      "31": {
        start: {
          line: 93,
          column: 4
        },
        end: {
          line: 95,
          column: 5
        }
      },
      "32": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 94,
          column: 58
        }
      },
      "33": {
        start: {
          line: 97,
          column: 4
        },
        end: {
          line: 97,
          column: 51
        }
      },
      "34": {
        start: {
          line: 103,
          column: 27
        },
        end: {
          line: 103,
          column: 39
        }
      },
      "35": {
        start: {
          line: 104,
          column: 4
        },
        end: {
          line: 135,
          column: 5
        }
      },
      "36": {
        start: {
          line: 105,
          column: 20
        },
        end: {
          line: 105,
          column: 58
        }
      },
      "37": {
        start: {
          line: 107,
          column: 30
        },
        end: {
          line: 107,
          column: 52
        }
      },
      "38": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 116,
          column: 9
        }
      },
      "39": {
        start: {
          line: 109,
          column: 12
        },
        end: {
          line: 115,
          column: 32
        }
      },
      "40": {
        start: {
          line: 118,
          column: 34
        },
        end: {
          line: 118,
          column: 59
        }
      },
      "41": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 124,
          column: 11
        }
      },
      "42": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 127,
          column: 67
        }
      },
      "43": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 134,
          column: 28
        }
      },
      "44": {
        start: {
          line: 142,
          column: 27
        },
        end: {
          line: 142,
          column: 39
        }
      },
      "45": {
        start: {
          line: 146,
          column: 4
        },
        end: {
          line: 148,
          column: 24
        }
      }
    },
    fnMap: {
      "0": {
        name: "validateConfigKey",
        decl: {
          start: {
            line: 40,
            column: 9
          },
          end: {
            line: 40,
            column: 26
          }
        },
        loc: {
          start: {
            line: 40,
            column: 32
          },
          end: {
            line: 52,
            column: 1
          }
        },
        line: 40
      },
      "1": {
        name: "getConfigValue",
        decl: {
          start: {
            line: 56,
            column: 15
          },
          end: {
            line: 56,
            column: 29
          }
        },
        loc: {
          start: {
            line: 56,
            column: 35
          },
          end: {
            line: 98,
            column: 1
          }
        },
        line: 56
      },
      "2": {
        name: "GET",
        decl: {
          start: {
            line: 102,
            column: 15
          },
          end: {
            line: 102,
            column: 18
          }
        },
        loc: {
          start: {
            line: 102,
            column: 40
          },
          end: {
            line: 136,
            column: 1
          }
        },
        line: 102
      },
      "3": {
        name: "POST",
        decl: {
          start: {
            line: 141,
            column: 15
          },
          end: {
            line: 141,
            column: 19
          }
        },
        loc: {
          start: {
            line: 141,
            column: 41
          },
          end: {
            line: 149,
            column: 1
          }
        },
        line: 141
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 24,
            column: 28
          },
          end: {
            line: 24,
            column: 92
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 24,
            column: 28
          },
          end: {
            line: 24,
            column: 51
          }
        }, {
          start: {
            line: 24,
            column: 55
          },
          end: {
            line: 24,
            column: 75
          }
        }, {
          start: {
            line: 24,
            column: 79
          },
          end: {
            line: 24,
            column: 92
          }
        }],
        line: 24
      },
      "1": {
        loc: {
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 43,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 43,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 41
      },
      "2": {
        loc: {
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 41,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 41,
            column: 12
          }
        }, {
          start: {
            line: 41,
            column: 16
          },
          end: {
            line: 41,
            column: 39
          }
        }],
        line: 41
      },
      "3": {
        loc: {
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 44
      },
      "4": {
        loc: {
          start: {
            line: 48,
            column: 4
          },
          end: {
            line: 50,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 4
          },
          end: {
            line: 50,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 48
      },
      "5": {
        loc: {
          start: {
            line: 58,
            column: 4
          },
          end: {
            line: 81,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 58,
            column: 4
          },
          end: {
            line: 81,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 58
      },
      "6": {
        loc: {
          start: {
            line: 64,
            column: 12
          },
          end: {
            line: 76,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 64,
            column: 12
          },
          end: {
            line: 76,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 64
      },
      "7": {
        loc: {
          start: {
            line: 67,
            column: 16
          },
          end: {
            line: 74,
            column: 55
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 67,
            column: 16
          },
          end: {
            line: 74,
            column: 55
          }
        }, {
          start: {
            line: 69,
            column: 21
          },
          end: {
            line: 74,
            column: 55
          }
        }],
        line: 67
      },
      "8": {
        loc: {
          start: {
            line: 69,
            column: 21
          },
          end: {
            line: 74,
            column: 55
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 69,
            column: 21
          },
          end: {
            line: 74,
            column: 55
          }
        }, {
          start: {
            line: 71,
            column: 21
          },
          end: {
            line: 74,
            column: 55
          }
        }],
        line: 69
      },
      "9": {
        loc: {
          start: {
            line: 71,
            column: 21
          },
          end: {
            line: 74,
            column: 55
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 71,
            column: 21
          },
          end: {
            line: 74,
            column: 55
          }
        }, {
          start: {
            line: 73,
            column: 21
          },
          end: {
            line: 74,
            column: 55
          }
        }],
        line: 71
      },
      "10": {
        loc: {
          start: {
            line: 73,
            column: 21
          },
          end: {
            line: 74,
            column: 55
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 73,
            column: 21
          },
          end: {
            line: 74,
            column: 55
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 73
      },
      "11": {
        loc: {
          start: {
            line: 93,
            column: 4
          },
          end: {
            line: 95,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 93,
            column: 4
          },
          end: {
            line: 95,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 93
      },
      "12": {
        loc: {
          start: {
            line: 108,
            column: 8
          },
          end: {
            line: 116,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 108,
            column: 8
          },
          end: {
            line: 116,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 108
      },
      "13": {
        loc: {
          start: {
            line: 129,
            column: 17
          },
          end: {
            line: 129,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 129,
            column: 17
          },
          end: {
            line: 129,
            column: 35
          }
        }, {
          start: {
            line: 129,
            column: 39
          },
          end: {
            line: 129,
            column: 48
          }
        }],
        line: 129
      },
      "14": {
        loc: {
          start: {
            line: 133,
            column: 19
          },
          end: {
            line: 133,
            column: 83
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 133,
            column: 44
          },
          end: {
            line: 133,
            column: 57
          }
        }, {
          start: {
            line: 133,
            column: 60
          },
          end: {
            line: 133,
            column: 83
          }
        }],
        line: 133
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/dikshantvashistha/PrepBettr/app/api/config/[key]/route.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/dikshantvashistha/PrepBettr/app/api/config/[key]/route.ts"],
      sourcesContent: ["/**\n * GET /api/config/[key]\n * \n * Unified configuration API endpoint for feature flags and app settings.\n * Used by useUnifiedConfig hook for client-side configuration access.\n */\n\nimport { NextRequest, NextResponse } from 'next/server';\n\n/**\n * Route parameters\n */\ninterface RouteParams {\n  key: string;\n}\n\n/**\n * Response schema\n */\ninterface ConfigResponse {\n  key: string;\n  value: any;\n  source: 'default' | 'environment' | 'azure' | 'firebase';\n  success: boolean;\n  error?: string;\n}\n\n/**\n * Default configuration values\n * This acts as fallback when external configuration services are unavailable\n */\nconst DEFAULT_CONFIG = {\n  // Feature flags\n  'features.voiceInterviewV2': false,\n  'features.autoApplyAzure': false,\n  'features.voiceInterview': true,\n  'features.premiumFeatures': true,\n  'features.newUI': false,\n  \n  // Application core settings\n  'core.app.environment': process.env.ENVIRONMENT || process.env.NODE_ENV || 'development',\n  'core.app.version': '1.0.0',\n  'core.app.debug': process.env.ENVIRONMENT === 'development',\n  'core.app.maintenanceMode': false,\n  \n  // Usage quotas (server-side only, safe to expose limits)\n  'quotas.freeInterviews': 3,\n  'quotas.freeResumes': 5,\n  'quotas.premiumInterviews': 50,\n  \n  // Performance settings\n  'perf.cacheTimeout': 300000, // 5 minutes\n  'perf.maxRetries': 3,\n  'perf.requestTimeout': 30000, // 30 seconds\n} as const;\n\n/**\n * Validate configuration key format\n */\nfunction validateConfigKey(key: string): { isValid: boolean; error?: string } {\n  if (!key || typeof key !== 'string') {\n    return { isValid: false, error: 'Configuration key is required' };\n  }\n\n  if (key.length > 100) {\n    return { isValid: false, error: 'Configuration key too long' };\n  }\n\n  // Allow alphanumeric, dots, underscores, hyphens\n  if (!/^[a-zA-Z0-9._-]+$/.test(key)) {\n    return { isValid: false, error: 'Invalid characters in configuration key' };\n  }\n\n  return { isValid: true };\n}\n\n/**\n * Get configuration value with fallback hierarchy\n */\nasync function getConfigValue(key: string): Promise<{\n  value: any;\n  source: 'default' | 'environment' | 'azure' | 'firebase';\n}> {\n  // 1. Try Azure App Configuration (if available in production)\n  if (process.env.ENVIRONMENT === 'production') {\n    try {\n      // In a real implementation, this would use Azure App Configuration SDK\n      // For now, we'll use environment variables as a proxy\n      const envKey = key.replace(/\\./g, '_').toUpperCase();\n      const envValue = process.env[envKey];\n      \n      if (envValue !== undefined) {\n        // Parse boolean and numeric values\n        let parsedValue: any = envValue;\n        if (envValue === 'true') parsedValue = true;\n        else if (envValue === 'false') parsedValue = false;\n        else if (/^\\d+$/.test(envValue)) parsedValue = parseInt(envValue, 10);\n        else if (/^\\d+\\.\\d+$/.test(envValue)) parsedValue = parseFloat(envValue);\n        \n        return { value: parsedValue, source: 'environment' };\n      }\n    } catch (error) {\n      console.warn(`Failed to fetch config from environment for key ${key}:`, error);\n    }\n  }\n\n  // 2. Try Firebase Remote Config (fallback)\n  try {\n    // For client-side feature flags, we can use Firebase Remote Config\n    // This would require the Firebase Admin SDK in a real implementation\n    // For now, we'll skip this step\n  } catch (error) {\n    console.warn(`Failed to fetch config from Firebase for key ${key}:`, error);\n  }\n\n  // 3. Use default configuration\n  const defaultValue = DEFAULT_CONFIG[key as keyof typeof DEFAULT_CONFIG];\n  if (defaultValue !== undefined) {\n    return { value: defaultValue, source: 'default' };\n  }\n\n  // 4. Return undefined for unknown keys\n  return { value: undefined, source: 'default' };\n}\n\n/**\n * GET handler for configuration values\n */\nexport async function GET(\n  request: NextRequest,\n  { params }: { params: Promise<RouteParams> }\n): Promise<NextResponse<ConfigResponse>> {\n  const resolvedParams = await params;\n  try {\n    const key = decodeURIComponent(resolvedParams.key);\n    \n    // Validate configuration key\n    const keyValidation = validateConfigKey(key);\n    if (!keyValidation.isValid) {\n      return NextResponse.json({\n        key,\n        value: undefined,\n        source: 'default',\n        success: false,\n        error: keyValidation.error\n      }, { status: 400 });\n    }\n\n    // Get configuration value\n    const { value, source } = await getConfigValue(key);\n\n    return NextResponse.json({\n      key,\n      value,\n      source,\n      success: true\n    });\n\n  } catch (error) {\n    console.error('Failed to get configuration value:', error);\n    \n    return NextResponse.json({\n      key: resolvedParams.key || 'unknown',\n      value: undefined,\n      source: 'default',\n      success: false,\n      error: error instanceof Error ? error.message : 'Internal server error'\n    }, { status: 500 });\n  }\n}\n\n/**\n * POST handler for updating configuration values (admin only)\n * This would typically require authentication and authorization\n */\nexport async function POST(\n  request: NextRequest,\n  { params }: { params: Promise<RouteParams> }\n): Promise<NextResponse> {\n  const resolvedParams = await params;\n  \n  // TODO: Add authentication middleware\n  // TODO: Add authorization checks for admin users\n  // TODO: Implement configuration updates to Azure App Configuration\n  \n  return NextResponse.json({\n    error: 'Configuration updates not yet implemented'\n  }, { status: 501 });\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "851cfef983f40dc6cfa33d82f8a768d4d1ee31fb"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_8k50haz5b = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_8k50haz5b();
cov_8k50haz5b().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_8k50haz5b().s[1]++;
exports.GET = GET;
/* istanbul ignore next */
cov_8k50haz5b().s[2]++;
exports.POST = POST;
const server_1 =
/* istanbul ignore next */
(cov_8k50haz5b().s[3]++, require("next/server"));
/**
 * Default configuration values
 * This acts as fallback when external configuration services are unavailable
 */
const DEFAULT_CONFIG =
/* istanbul ignore next */
(cov_8k50haz5b().s[4]++, {
  // Feature flags
  'features.voiceInterviewV2': false,
  'features.autoApplyAzure': false,
  'features.voiceInterview': true,
  'features.premiumFeatures': true,
  'features.newUI': false,
  // Application core settings
  'core.app.environment':
  /* istanbul ignore next */
  (cov_8k50haz5b().b[0][0]++, process.env.ENVIRONMENT) ||
  /* istanbul ignore next */
  (cov_8k50haz5b().b[0][1]++, process.env.NODE_ENV) ||
  /* istanbul ignore next */
  (cov_8k50haz5b().b[0][2]++, 'development'),
  'core.app.version': '1.0.0',
  'core.app.debug': process.env.ENVIRONMENT === 'development',
  'core.app.maintenanceMode': false,
  // Usage quotas (server-side only, safe to expose limits)
  'quotas.freeInterviews': 3,
  'quotas.freeResumes': 5,
  'quotas.premiumInterviews': 50,
  // Performance settings
  'perf.cacheTimeout': 300000,
  // 5 minutes
  'perf.maxRetries': 3,
  'perf.requestTimeout': 30000 // 30 seconds
});
/**
 * Validate configuration key format
 */
function validateConfigKey(key) {
  /* istanbul ignore next */
  cov_8k50haz5b().f[0]++;
  cov_8k50haz5b().s[5]++;
  if (
  /* istanbul ignore next */
  (cov_8k50haz5b().b[2][0]++, !key) ||
  /* istanbul ignore next */
  (cov_8k50haz5b().b[2][1]++, typeof key !== 'string')) {
    /* istanbul ignore next */
    cov_8k50haz5b().b[1][0]++;
    cov_8k50haz5b().s[6]++;
    return {
      isValid: false,
      error: 'Configuration key is required'
    };
  } else
  /* istanbul ignore next */
  {
    cov_8k50haz5b().b[1][1]++;
  }
  cov_8k50haz5b().s[7]++;
  if (key.length > 100) {
    /* istanbul ignore next */
    cov_8k50haz5b().b[3][0]++;
    cov_8k50haz5b().s[8]++;
    return {
      isValid: false,
      error: 'Configuration key too long'
    };
  } else
  /* istanbul ignore next */
  {
    cov_8k50haz5b().b[3][1]++;
  }
  // Allow alphanumeric, dots, underscores, hyphens
  cov_8k50haz5b().s[9]++;
  if (!/^[a-zA-Z0-9._-]+$/.test(key)) {
    /* istanbul ignore next */
    cov_8k50haz5b().b[4][0]++;
    cov_8k50haz5b().s[10]++;
    return {
      isValid: false,
      error: 'Invalid characters in configuration key'
    };
  } else
  /* istanbul ignore next */
  {
    cov_8k50haz5b().b[4][1]++;
  }
  cov_8k50haz5b().s[11]++;
  return {
    isValid: true
  };
}
/**
 * Get configuration value with fallback hierarchy
 */
async function getConfigValue(key) {
  /* istanbul ignore next */
  cov_8k50haz5b().f[1]++;
  cov_8k50haz5b().s[12]++;
  // 1. Try Azure App Configuration (if available in production)
  if (process.env.ENVIRONMENT === 'production') {
    /* istanbul ignore next */
    cov_8k50haz5b().b[5][0]++;
    cov_8k50haz5b().s[13]++;
    try {
      // In a real implementation, this would use Azure App Configuration SDK
      // For now, we'll use environment variables as a proxy
      const envKey =
      /* istanbul ignore next */
      (cov_8k50haz5b().s[14]++, key.replace(/\./g, '_').toUpperCase());
      const envValue =
      /* istanbul ignore next */
      (cov_8k50haz5b().s[15]++, process.env[envKey]);
      /* istanbul ignore next */
      cov_8k50haz5b().s[16]++;
      if (envValue !== undefined) {
        /* istanbul ignore next */
        cov_8k50haz5b().b[6][0]++;
        // Parse boolean and numeric values
        let parsedValue =
        /* istanbul ignore next */
        (cov_8k50haz5b().s[17]++, envValue);
        /* istanbul ignore next */
        cov_8k50haz5b().s[18]++;
        if (envValue === 'true') {
          /* istanbul ignore next */
          cov_8k50haz5b().b[7][0]++;
          cov_8k50haz5b().s[19]++;
          parsedValue = true;
        } else {
          /* istanbul ignore next */
          cov_8k50haz5b().b[7][1]++;
          cov_8k50haz5b().s[20]++;
          if (envValue === 'false') {
            /* istanbul ignore next */
            cov_8k50haz5b().b[8][0]++;
            cov_8k50haz5b().s[21]++;
            parsedValue = false;
          } else {
            /* istanbul ignore next */
            cov_8k50haz5b().b[8][1]++;
            cov_8k50haz5b().s[22]++;
            if (/^\d+$/.test(envValue)) {
              /* istanbul ignore next */
              cov_8k50haz5b().b[9][0]++;
              cov_8k50haz5b().s[23]++;
              parsedValue = parseInt(envValue, 10);
            } else {
              /* istanbul ignore next */
              cov_8k50haz5b().b[9][1]++;
              cov_8k50haz5b().s[24]++;
              if (/^\d+\.\d+$/.test(envValue)) {
                /* istanbul ignore next */
                cov_8k50haz5b().b[10][0]++;
                cov_8k50haz5b().s[25]++;
                parsedValue = parseFloat(envValue);
              } else
              /* istanbul ignore next */
              {
                cov_8k50haz5b().b[10][1]++;
              }
            }
          }
        }
        /* istanbul ignore next */
        cov_8k50haz5b().s[26]++;
        return {
          value: parsedValue,
          source: 'environment'
        };
      } else
      /* istanbul ignore next */
      {
        cov_8k50haz5b().b[6][1]++;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_8k50haz5b().s[27]++;
      console.warn(`Failed to fetch config from environment for key ${key}:`, error);
    }
  } else
  /* istanbul ignore next */
  {
    cov_8k50haz5b().b[5][1]++;
  }
  // 2. Try Firebase Remote Config (fallback)
  cov_8k50haz5b().s[28]++;
  try {
    // For client-side feature flags, we can use Firebase Remote Config
    // This would require the Firebase Admin SDK in a real implementation
    // For now, we'll skip this step
  } catch (error) {
    /* istanbul ignore next */
    cov_8k50haz5b().s[29]++;
    console.warn(`Failed to fetch config from Firebase for key ${key}:`, error);
  }
  // 3. Use default configuration
  const defaultValue =
  /* istanbul ignore next */
  (cov_8k50haz5b().s[30]++, DEFAULT_CONFIG[key]);
  /* istanbul ignore next */
  cov_8k50haz5b().s[31]++;
  if (defaultValue !== undefined) {
    /* istanbul ignore next */
    cov_8k50haz5b().b[11][0]++;
    cov_8k50haz5b().s[32]++;
    return {
      value: defaultValue,
      source: 'default'
    };
  } else
  /* istanbul ignore next */
  {
    cov_8k50haz5b().b[11][1]++;
  }
  // 4. Return undefined for unknown keys
  cov_8k50haz5b().s[33]++;
  return {
    value: undefined,
    source: 'default'
  };
}
/**
 * GET handler for configuration values
 */
async function GET(request, {
  params
}) {
  /* istanbul ignore next */
  cov_8k50haz5b().f[2]++;
  const resolvedParams =
  /* istanbul ignore next */
  (cov_8k50haz5b().s[34]++, await params);
  /* istanbul ignore next */
  cov_8k50haz5b().s[35]++;
  try {
    const key =
    /* istanbul ignore next */
    (cov_8k50haz5b().s[36]++, decodeURIComponent(resolvedParams.key));
    // Validate configuration key
    const keyValidation =
    /* istanbul ignore next */
    (cov_8k50haz5b().s[37]++, validateConfigKey(key));
    /* istanbul ignore next */
    cov_8k50haz5b().s[38]++;
    if (!keyValidation.isValid) {
      /* istanbul ignore next */
      cov_8k50haz5b().b[12][0]++;
      cov_8k50haz5b().s[39]++;
      return server_1.NextResponse.json({
        key,
        value: undefined,
        source: 'default',
        success: false,
        error: keyValidation.error
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_8k50haz5b().b[12][1]++;
    }
    // Get configuration value
    const {
      value,
      source
    } =
    /* istanbul ignore next */
    (cov_8k50haz5b().s[40]++, await getConfigValue(key));
    /* istanbul ignore next */
    cov_8k50haz5b().s[41]++;
    return server_1.NextResponse.json({
      key,
      value,
      source,
      success: true
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_8k50haz5b().s[42]++;
    console.error('Failed to get configuration value:', error);
    /* istanbul ignore next */
    cov_8k50haz5b().s[43]++;
    return server_1.NextResponse.json({
      key:
      /* istanbul ignore next */
      (cov_8k50haz5b().b[13][0]++, resolvedParams.key) ||
      /* istanbul ignore next */
      (cov_8k50haz5b().b[13][1]++, 'unknown'),
      value: undefined,
      source: 'default',
      success: false,
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_8k50haz5b().b[14][0]++, error.message) :
      /* istanbul ignore next */
      (cov_8k50haz5b().b[14][1]++, 'Internal server error')
    }, {
      status: 500
    });
  }
}
/**
 * POST handler for updating configuration values (admin only)
 * This would typically require authentication and authorization
 */
async function POST(request, {
  params
}) {
  /* istanbul ignore next */
  cov_8k50haz5b().f[3]++;
  const resolvedParams =
  /* istanbul ignore next */
  (cov_8k50haz5b().s[44]++, await params);
  // TODO: Add authentication middleware
  // TODO: Add authorization checks for admin users
  // TODO: Implement configuration updates to Azure App Configuration
  /* istanbul ignore next */
  cov_8k50haz5b().s[45]++;
  return server_1.NextResponse.json({
    error: 'Configuration updates not yet implemented'
  }, {
    status: 501
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,