483148a1677084d360989fe3dc6f92b3
"use strict";

/**
 * Azure-Centric AI Service Layer
 *
 * This module provides a unified interface for AI operations backed
 * by Azure OpenAI services. Optimized for enterprise-grade AI functionality.
 *
 * Updated to use the new unified Azure AI facade for improved service
 * management and intelligent routing between Azure services.
 */
/* istanbul ignore next */
function cov_12kqm6h9ab() {
  var path = "/Users/dikshantvashistha/PrepBettr/lib/ai/index.ts";
  var hash = "6ede35646b4caf695372809a50abbd53e53d2507";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dikshantvashistha/PrepBettr/lib/ai/index.ts",
    statementMap: {
      "0": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 62
        }
      },
      "1": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 186
        }
      },
      "2": {
        start: {
          line: 13,
          column: 0
        },
        end: {
          line: 13,
          column: 50
        }
      },
      "3": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 14,
          column: 48
        }
      },
      "4": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 15,
          column: 36
        }
      },
      "5": {
        start: {
          line: 16,
          column: 0
        },
        end: {
          line: 16,
          column: 46
        }
      },
      "6": {
        start: {
          line: 17,
          column: 0
        },
        end: {
          line: 17,
          column: 42
        }
      },
      "7": {
        start: {
          line: 18,
          column: 0
        },
        end: {
          line: 18,
          column: 40
        }
      },
      "8": {
        start: {
          line: 19,
          column: 0
        },
        end: {
          line: 19,
          column: 26
        }
      },
      "9": {
        start: {
          line: 20,
          column: 22
        },
        end: {
          line: 20,
          column: 46
        }
      },
      "10": {
        start: {
          line: 21,
          column: 19
        },
        end: {
          line: 21,
          column: 40
        }
      },
      "11": {
        start: {
          line: 22,
          column: 0
        },
        end: {
          line: 22,
          column: 113
        }
      },
      "12": {
        start: {
          line: 22,
          column: 81
        },
        end: {
          line: 22,
          column: 107
        }
      },
      "13": {
        start: {
          line: 23,
          column: 0
        },
        end: {
          line: 23,
          column: 115
        }
      },
      "14": {
        start: {
          line: 23,
          column: 83
        },
        end: {
          line: 23,
          column: 109
        }
      },
      "15": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 36
        }
      },
      "16": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 35
        }
      },
      "17": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 33
        }
      },
      "18": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 83
        }
      },
      "19": {
        start: {
          line: 39,
          column: 29
        },
        end: {
          line: 39,
          column: 43
        }
      },
      "20": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 81
        }
      },
      "21": {
        start: {
          line: 41,
          column: 25
        },
        end: {
          line: 41,
          column: 57
        }
      },
      "22": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 45,
          column: 9
        }
      },
      "23": {
        start: {
          line: 43,
          column: 12
        },
        end: {
          line: 43,
          column: 63
        }
      },
      "24": {
        start: {
          line: 44,
          column: 12
        },
        end: {
          line: 44,
          column: 25
        }
      },
      "25": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 57,
          column: 9
        }
      },
      "26": {
        start: {
          line: 47,
          column: 28
        },
        end: {
          line: 47,
          column: 55
        }
      },
      "27": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 53,
          column: 13
        }
      },
      "28": {
        start: {
          line: 49,
          column: 16
        },
        end: {
          line: 49,
          column: 48
        }
      },
      "29": {
        start: {
          line: 50,
          column: 16
        },
        end: {
          line: 50,
          column: 40
        }
      },
      "30": {
        start: {
          line: 51,
          column: 16
        },
        end: {
          line: 51,
          column: 91
        }
      },
      "31": {
        start: {
          line: 52,
          column: 16
        },
        end: {
          line: 52,
          column: 28
        }
      },
      "32": {
        start: {
          line: 56,
          column: 12
        },
        end: {
          line: 56,
          column: 82
        }
      },
      "33": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 58,
          column: 70
        }
      },
      "34": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 59,
          column: 21
        }
      },
      "35": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 65,
          column: 36
        }
      },
      "36": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 72,
          column: 124
        }
      },
      "37": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 79,
          column: 100
        }
      },
      "38": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 85,
          column: 65
        }
      },
      "39": {
        start: {
          line: 86,
          column: 25
        },
        end: {
          line: 86,
          column: 57
        }
      },
      "40": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 90,
          column: 9
        }
      },
      "41": {
        start: {
          line: 88,
          column: 12
        },
        end: {
          line: 88,
          column: 68
        }
      },
      "42": {
        start: {
          line: 89,
          column: 12
        },
        end: {
          line: 89,
          column: 25
        }
      },
      "43": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 94,
          column: 9
        }
      },
      "44": {
        start: {
          line: 93,
          column: 12
        },
        end: {
          line: 93,
          column: 43
        }
      },
      "45": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 105,
          column: 9
        }
      },
      "46": {
        start: {
          line: 96,
          column: 28
        },
        end: {
          line: 96,
          column: 55
        }
      },
      "47": {
        start: {
          line: 97,
          column: 12
        },
        end: {
          line: 101,
          column: 13
        }
      },
      "48": {
        start: {
          line: 98,
          column: 16
        },
        end: {
          line: 98,
          column: 48
        }
      },
      "49": {
        start: {
          line: 99,
          column: 16
        },
        end: {
          line: 99,
          column: 75
        }
      },
      "50": {
        start: {
          line: 100,
          column: 16
        },
        end: {
          line: 100,
          column: 28
        }
      },
      "51": {
        start: {
          line: 104,
          column: 12
        },
        end: {
          line: 104,
          column: 86
        }
      },
      "52": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 106,
          column: 21
        }
      },
      "53": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 114,
          column: 9
        }
      },
      "54": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 113,
          column: 43
        }
      },
      "55": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 115,
          column: 36
        }
      },
      "56": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 116,
          column: 33
        }
      },
      "57": {
        start: {
          line: 117,
          column: 8
        },
        end: {
          line: 117,
          column: 54
        }
      },
      "58": {
        start: {
          line: 121,
          column: 25
        },
        end: {
          line: 121,
          column: 47
        }
      },
      "59": {
        start: {
          line: 126,
          column: 4
        },
        end: {
          line: 131,
          column: 5
        }
      },
      "60": {
        start: {
          line: 127,
          column: 24
        },
        end: {
          line: 127,
          column: 59
        }
      },
      "61": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 130,
          column: 9
        }
      },
      "62": {
        start: {
          line: 129,
          column: 12
        },
        end: {
          line: 129,
          column: 88
        }
      },
      "63": {
        start: {
          line: 137,
          column: 4
        },
        end: {
          line: 157,
          column: 5
        }
      },
      "64": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 138,
          column: 34
        }
      },
      "65": {
        start: {
          line: 139,
          column: 25
        },
        end: {
          line: 139,
          column: 62
        }
      },
      "66": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 142,
          column: 9
        }
      },
      "67": {
        start: {
          line: 141,
          column: 12
        },
        end: {
          line: 141,
          column: 56
        }
      },
      "68": {
        start: {
          line: 143,
          column: 28
        },
        end: {
          line: 143,
          column: 90
        }
      },
      "69": {
        start: {
          line: 144,
          column: 8
        },
        end: {
          line: 148,
          column: 10
        }
      },
      "70": {
        start: {
          line: 151,
          column: 8
        },
        end: {
          line: 151,
          column: 65
        }
      },
      "71": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 156,
          column: 10
        }
      },
      "72": {
        start: {
          line: 163,
          column: 4
        },
        end: {
          line: 183,
          column: 5
        }
      },
      "73": {
        start: {
          line: 164,
          column: 8
        },
        end: {
          line: 164,
          column: 34
        }
      },
      "74": {
        start: {
          line: 165,
          column: 25
        },
        end: {
          line: 165,
          column: 62
        }
      },
      "75": {
        start: {
          line: 166,
          column: 8
        },
        end: {
          line: 168,
          column: 9
        }
      },
      "76": {
        start: {
          line: 167,
          column: 12
        },
        end: {
          line: 167,
          column: 56
        }
      },
      "77": {
        start: {
          line: 169,
          column: 22
        },
        end: {
          line: 169,
          column: 83
        }
      },
      "78": {
        start: {
          line: 170,
          column: 8
        },
        end: {
          line: 174,
          column: 10
        }
      },
      "79": {
        start: {
          line: 177,
          column: 8
        },
        end: {
          line: 177,
          column: 63
        }
      },
      "80": {
        start: {
          line: 178,
          column: 8
        },
        end: {
          line: 182,
          column: 10
        }
      },
      "81": {
        start: {
          line: 189,
          column: 4
        },
        end: {
          line: 209,
          column: 5
        }
      },
      "82": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 190,
          column: 34
        }
      },
      "83": {
        start: {
          line: 191,
          column: 25
        },
        end: {
          line: 191,
          column: 62
        }
      },
      "84": {
        start: {
          line: 192,
          column: 8
        },
        end: {
          line: 194,
          column: 9
        }
      },
      "85": {
        start: {
          line: 193,
          column: 12
        },
        end: {
          line: 193,
          column: 56
        }
      },
      "86": {
        start: {
          line: 195,
          column: 31
        },
        end: {
          line: 195,
          column: 86
        }
      },
      "87": {
        start: {
          line: 196,
          column: 8
        },
        end: {
          line: 200,
          column: 10
        }
      },
      "88": {
        start: {
          line: 203,
          column: 8
        },
        end: {
          line: 203,
          column: 58
        }
      },
      "89": {
        start: {
          line: 204,
          column: 8
        },
        end: {
          line: 208,
          column: 10
        }
      },
      "90": {
        start: {
          line: 215,
          column: 4
        },
        end: {
          line: 235,
          column: 5
        }
      },
      "91": {
        start: {
          line: 216,
          column: 8
        },
        end: {
          line: 216,
          column: 34
        }
      },
      "92": {
        start: {
          line: 217,
          column: 25
        },
        end: {
          line: 217,
          column: 62
        }
      },
      "93": {
        start: {
          line: 218,
          column: 8
        },
        end: {
          line: 220,
          column: 9
        }
      },
      "94": {
        start: {
          line: 219,
          column: 12
        },
        end: {
          line: 219,
          column: 56
        }
      },
      "95": {
        start: {
          line: 221,
          column: 26
        },
        end: {
          line: 221,
          column: 70
        }
      },
      "96": {
        start: {
          line: 222,
          column: 8
        },
        end: {
          line: 226,
          column: 10
        }
      },
      "97": {
        start: {
          line: 229,
          column: 8
        },
        end: {
          line: 229,
          column: 62
        }
      },
      "98": {
        start: {
          line: 230,
          column: 8
        },
        end: {
          line: 234,
          column: 10
        }
      },
      "99": {
        start: {
          line: 241,
          column: 4
        },
        end: {
          line: 244,
          column: 6
        }
      },
      "100": {
        start: {
          line: 250,
          column: 4
        },
        end: {
          line: 265,
          column: 5
        }
      },
      "101": {
        start: {
          line: 251,
          column: 24
        },
        end: {
          line: 251,
          column: 75
        }
      },
      "102": {
        start: {
          line: 252,
          column: 8
        },
        end: {
          line: 256,
          column: 10
        }
      },
      "103": {
        start: {
          line: 259,
          column: 8
        },
        end: {
          line: 259,
          column: 60
        }
      },
      "104": {
        start: {
          line: 260,
          column: 8
        },
        end: {
          line: 264,
          column: 10
        }
      },
      "105": {
        start: {
          line: 271,
          column: 4
        },
        end: {
          line: 271,
          column: 31
        }
      },
      "106": {
        start: {
          line: 274,
          column: 17
        },
        end: {
          line: 274,
          column: 38
        }
      },
      "107": {
        start: {
          line: 275,
          column: 0
        },
        end: {
          line: 275,
          column: 135
        }
      },
      "108": {
        start: {
          line: 275,
          column: 92
        },
        end: {
          line: 275,
          column: 129
        }
      },
      "109": {
        start: {
          line: 276,
          column: 0
        },
        end: {
          line: 276,
          column: 151
        }
      },
      "110": {
        start: {
          line: 276,
          column: 100
        },
        end: {
          line: 276,
          column: 145
        }
      },
      "111": {
        start: {
          line: 277,
          column: 0
        },
        end: {
          line: 277,
          column: 137
        }
      },
      "112": {
        start: {
          line: 277,
          column: 93
        },
        end: {
          line: 277,
          column: 131
        }
      },
      "113": {
        start: {
          line: 278,
          column: 0
        },
        end: {
          line: 278,
          column: 167
        }
      },
      "114": {
        start: {
          line: 278,
          column: 108
        },
        end: {
          line: 278,
          column: 161
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 22,
            column: 67
          },
          end: {
            line: 22,
            column: 68
          }
        },
        loc: {
          start: {
            line: 22,
            column: 79
          },
          end: {
            line: 22,
            column: 109
          }
        },
        line: 22
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 23,
            column: 69
          },
          end: {
            line: 23,
            column: 70
          }
        },
        loc: {
          start: {
            line: 23,
            column: 81
          },
          end: {
            line: 23,
            column: 111
          }
        },
        line: 23
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 28,
            column: 5
          }
        },
        loc: {
          start: {
            line: 28,
            column: 18
          },
          end: {
            line: 34,
            column: 5
          }
        },
        line: 28
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        },
        loc: {
          start: {
            line: 38,
            column: 23
          },
          end: {
            line: 60,
            column: 5
          }
        },
        line: 38
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 64,
            column: 4
          },
          end: {
            line: 64,
            column: 5
          }
        },
        loc: {
          start: {
            line: 64,
            column: 25
          },
          end: {
            line: 66,
            column: 5
          }
        },
        line: 64
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 70,
            column: 4
          },
          end: {
            line: 70,
            column: 5
          }
        },
        loc: {
          start: {
            line: 70,
            column: 14
          },
          end: {
            line: 73,
            column: 5
          }
        },
        line: 70
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 77,
            column: 4
          },
          end: {
            line: 77,
            column: 5
          }
        },
        loc: {
          start: {
            line: 77,
            column: 22
          },
          end: {
            line: 80,
            column: 5
          }
        },
        line: 77
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 84,
            column: 4
          },
          end: {
            line: 84,
            column: 5
          }
        },
        loc: {
          start: {
            line: 84,
            column: 39
          },
          end: {
            line: 107,
            column: 5
          }
        },
        line: 84
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 111,
            column: 4
          },
          end: {
            line: 111,
            column: 5
          }
        },
        loc: {
          start: {
            line: 111,
            column: 14
          },
          end: {
            line: 118,
            column: 5
          }
        },
        line: 111
      },
      "9": {
        name: "ensureInitialized",
        decl: {
          start: {
            line: 125,
            column: 15
          },
          end: {
            line: 125,
            column: 32
          }
        },
        loc: {
          start: {
            line: 125,
            column: 35
          },
          end: {
            line: 132,
            column: 1
          }
        },
        line: 125
      },
      "10": {
        name: "generateCoverLetter",
        decl: {
          start: {
            line: 136,
            column: 15
          },
          end: {
            line: 136,
            column: 34
          }
        },
        loc: {
          start: {
            line: 136,
            column: 63
          },
          end: {
            line: 158,
            column: 1
          }
        },
        line: 136
      },
      "11": {
        name: "calculateRelevancy",
        decl: {
          start: {
            line: 162,
            column: 15
          },
          end: {
            line: 162,
            column: 33
          }
        },
        loc: {
          start: {
            line: 162,
            column: 62
          },
          end: {
            line: 184,
            column: 1
          }
        },
        line: 162
      },
      "12": {
        name: "tailorResume",
        decl: {
          start: {
            line: 188,
            column: 15
          },
          end: {
            line: 188,
            column: 27
          }
        },
        loc: {
          start: {
            line: 188,
            column: 56
          },
          end: {
            line: 210,
            column: 1
          }
        },
        line: 188
      },
      "13": {
        name: "generateQuestions",
        decl: {
          start: {
            line: 214,
            column: 15
          },
          end: {
            line: 214,
            column: 32
          }
        },
        loc: {
          start: {
            line: 214,
            column: 45
          },
          end: {
            line: 236,
            column: 1
          }
        },
        line: 214
      },
      "14": {
        name: "getProviderInfo",
        decl: {
          start: {
            line: 240,
            column: 9
          },
          end: {
            line: 240,
            column: 24
          }
        },
        loc: {
          start: {
            line: 240,
            column: 27
          },
          end: {
            line: 245,
            column: 1
          }
        },
        line: 240
      },
      "15": {
        name: "switchProvider",
        decl: {
          start: {
            line: 249,
            column: 15
          },
          end: {
            line: 249,
            column: 29
          }
        },
        loc: {
          start: {
            line: 249,
            column: 44
          },
          end: {
            line: 266,
            column: 1
          }
        },
        line: 249
      },
      "16": {
        name: "dispose",
        decl: {
          start: {
            line: 270,
            column: 9
          },
          end: {
            line: 270,
            column: 16
          }
        },
        loc: {
          start: {
            line: 270,
            column: 19
          },
          end: {
            line: 272,
            column: 1
          }
        },
        line: 270
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 275,
            column: 78
          },
          end: {
            line: 275,
            column: 79
          }
        },
        loc: {
          start: {
            line: 275,
            column: 90
          },
          end: {
            line: 275,
            column: 131
          }
        },
        line: 275
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 276,
            column: 86
          },
          end: {
            line: 276,
            column: 87
          }
        },
        loc: {
          start: {
            line: 276,
            column: 98
          },
          end: {
            line: 276,
            column: 147
          }
        },
        line: 276
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 277,
            column: 79
          },
          end: {
            line: 277,
            column: 80
          }
        },
        loc: {
          start: {
            line: 277,
            column: 91
          },
          end: {
            line: 277,
            column: 133
          }
        },
        line: 277
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 278,
            column: 94
          },
          end: {
            line: 278,
            column: 95
          }
        },
        loc: {
          start: {
            line: 278,
            column: 106
          },
          end: {
            line: 278,
            column: 163
          }
        },
        line: 278
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 45,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 45,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 42
      },
      "1": {
        loc: {
          start: {
            line: 48,
            column: 12
          },
          end: {
            line: 53,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 12
          },
          end: {
            line: 53,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 48
      },
      "2": {
        loc: {
          start: {
            line: 72,
            column: 15
          },
          end: {
            line: 72,
            column: 123
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 72,
            column: 15
          },
          end: {
            line: 72,
            column: 31
          }
        }, {
          start: {
            line: 72,
            column: 35
          },
          end: {
            line: 72,
            column: 123
          }
        }],
        line: 72
      },
      "3": {
        loc: {
          start: {
            line: 72,
            column: 36
          },
          end: {
            line: 72,
            column: 113
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 72,
            column: 92
          },
          end: {
            line: 72,
            column: 98
          }
        }, {
          start: {
            line: 72,
            column: 101
          },
          end: {
            line: 72,
            column: 113
          }
        }],
        line: 72
      },
      "4": {
        loc: {
          start: {
            line: 72,
            column: 36
          },
          end: {
            line: 72,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 72,
            column: 36
          },
          end: {
            line: 72,
            column: 72
          }
        }, {
          start: {
            line: 72,
            column: 76
          },
          end: {
            line: 72,
            column: 89
          }
        }],
        line: 72
      },
      "5": {
        loc: {
          start: {
            line: 79,
            column: 15
          },
          end: {
            line: 79,
            column: 99
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 79,
            column: 16
          },
          end: {
            line: 79,
            column: 88
          }
        }, {
          start: {
            line: 79,
            column: 93
          },
          end: {
            line: 79,
            column: 99
          }
        }],
        line: 79
      },
      "6": {
        loc: {
          start: {
            line: 79,
            column: 16
          },
          end: {
            line: 79,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 79,
            column: 72
          },
          end: {
            line: 79,
            column: 78
          }
        }, {
          start: {
            line: 79,
            column: 81
          },
          end: {
            line: 79,
            column: 88
          }
        }],
        line: 79
      },
      "7": {
        loc: {
          start: {
            line: 79,
            column: 16
          },
          end: {
            line: 79,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 79,
            column: 16
          },
          end: {
            line: 79,
            column: 52
          }
        }, {
          start: {
            line: 79,
            column: 56
          },
          end: {
            line: 79,
            column: 69
          }
        }],
        line: 79
      },
      "8": {
        loc: {
          start: {
            line: 87,
            column: 8
          },
          end: {
            line: 90,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 87,
            column: 8
          },
          end: {
            line: 90,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 87
      },
      "9": {
        loc: {
          start: {
            line: 92,
            column: 8
          },
          end: {
            line: 94,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 92,
            column: 8
          },
          end: {
            line: 94,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 92
      },
      "10": {
        loc: {
          start: {
            line: 97,
            column: 12
          },
          end: {
            line: 101,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 97,
            column: 12
          },
          end: {
            line: 101,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 97
      },
      "11": {
        loc: {
          start: {
            line: 112,
            column: 8
          },
          end: {
            line: 114,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 112,
            column: 8
          },
          end: {
            line: 114,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 112
      },
      "12": {
        loc: {
          start: {
            line: 126,
            column: 4
          },
          end: {
            line: 131,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 126,
            column: 4
          },
          end: {
            line: 131,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 126
      },
      "13": {
        loc: {
          start: {
            line: 128,
            column: 8
          },
          end: {
            line: 130,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 128,
            column: 8
          },
          end: {
            line: 130,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 128
      },
      "14": {
        loc: {
          start: {
            line: 140,
            column: 8
          },
          end: {
            line: 142,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 140,
            column: 8
          },
          end: {
            line: 142,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 140
      },
      "15": {
        loc: {
          start: {
            line: 154,
            column: 19
          },
          end: {
            line: 154,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 154,
            column: 44
          },
          end: {
            line: 154,
            column: 57
          }
        }, {
          start: {
            line: 154,
            column: 60
          },
          end: {
            line: 154,
            column: 84
          }
        }],
        line: 154
      },
      "16": {
        loc: {
          start: {
            line: 166,
            column: 8
          },
          end: {
            line: 168,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 166,
            column: 8
          },
          end: {
            line: 168,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 166
      },
      "17": {
        loc: {
          start: {
            line: 180,
            column: 19
          },
          end: {
            line: 180,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 180,
            column: 44
          },
          end: {
            line: 180,
            column: 57
          }
        }, {
          start: {
            line: 180,
            column: 60
          },
          end: {
            line: 180,
            column: 84
          }
        }],
        line: 180
      },
      "18": {
        loc: {
          start: {
            line: 192,
            column: 8
          },
          end: {
            line: 194,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 192,
            column: 8
          },
          end: {
            line: 194,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 192
      },
      "19": {
        loc: {
          start: {
            line: 206,
            column: 19
          },
          end: {
            line: 206,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 206,
            column: 44
          },
          end: {
            line: 206,
            column: 57
          }
        }, {
          start: {
            line: 206,
            column: 60
          },
          end: {
            line: 206,
            column: 84
          }
        }],
        line: 206
      },
      "20": {
        loc: {
          start: {
            line: 218,
            column: 8
          },
          end: {
            line: 220,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 218,
            column: 8
          },
          end: {
            line: 220,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 218
      },
      "21": {
        loc: {
          start: {
            line: 232,
            column: 19
          },
          end: {
            line: 232,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 232,
            column: 44
          },
          end: {
            line: 232,
            column: 57
          }
        }, {
          start: {
            line: 232,
            column: 60
          },
          end: {
            line: 232,
            column: 84
          }
        }],
        line: 232
      },
      "22": {
        loc: {
          start: {
            line: 262,
            column: 19
          },
          end: {
            line: 262,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 262,
            column: 44
          },
          end: {
            line: 262,
            column: 57
          }
        }, {
          start: {
            line: 262,
            column: 60
          },
          end: {
            line: 262,
            column: 84
          }
        }],
        line: 262
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/dikshantvashistha/PrepBettr/lib/ai/index.ts",
      mappings: ";AAAA;;;;;;;;GAQG;;;AA6JH,kDAwBC;AAKD,gDAwBC;AAKD,oCAwBC;AAKD,8CAwBC;AAKD,0CAKC;AAKD,wCAiBC;AAKD,0BAEC;AAjTD,+CAAmD;AACnD,yCAAsD;AAmT7C,wFAnTA,kBAAO,OAmTA;AACI,0FApTX,kBAAO,OAoTa;AAzR7B;;GAEG;AACH,MAAM,gBAAgB;IAKpB;QAJQ,oBAAe,GAAsB,IAAI,CAAC;QAC1C,cAAS,GAA4B,IAAI,GAAG,EAAE,CAAC;QAC/C,gBAAW,GAAG,KAAK,CAAC;QAG1B,gDAAgD;QAChD,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,cAAc,EAAE,IAAI,gCAAkB,EAAE,CAAC,CAAC;IAC/D,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,UAAU;QACd,MAAM,YAAY,GAAG,cAAc,CAAC;QAEpC,OAAO,CAAC,GAAG,CAAC,6CAA6C,YAAY,EAAE,CAAC,CAAC;QAEzE,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QAClD,IAAI,CAAC,QAAQ,EAAE,CAAC;YACd,OAAO,CAAC,KAAK,CAAC,mCAAmC,CAAC,CAAC;YACnD,OAAO,KAAK,CAAC;QACf,CAAC;QAED,IAAI,CAAC;YACH,MAAM,OAAO,GAAG,MAAM,QAAQ,CAAC,UAAU,EAAE,CAAC;YAC5C,IAAI,OAAO,EAAE,CAAC;gBACZ,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC;gBAChC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;gBACxB,OAAO,CAAC,GAAG,CAAC,8CAA8C,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC;gBAC3E,OAAO,IAAI,CAAC;YACd,CAAC;QACH,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,KAAK,CAAC,+CAA+C,EAAE,KAAK,CAAC,CAAC;QACxE,CAAC;QAED,OAAO,CAAC,KAAK,CAAC,8CAA8C,CAAC,CAAC;QAC9D,OAAO,KAAK,CAAC;IACf,CAAC;IAGD;;OAEG;IACH,kBAAkB;QAChB,OAAO,IAAI,CAAC,eAAe,CAAC;IAC9B,CAAC;IAED;;OAEG;IACH,OAAO;;QACL,OAAO,IAAI,CAAC,WAAW,IAAI,CAAA,MAAA,IAAI,CAAC,eAAe,0CAAE,OAAO,EAAE,MAAK,IAAI,CAAC;IACtE,CAAC;IAED;;OAEG;IACH,eAAe;;QACb,OAAO,CAAA,MAAA,IAAI,CAAC,eAAe,0CAAE,IAAI,KAAI,MAAM,CAAC;IAC9C,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,cAAc,CAAC,YAAoB;QACvC,OAAO,CAAC,GAAG,CAAC,6BAA6B,YAAY,EAAE,CAAC,CAAC;QAEzD,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QAClD,IAAI,CAAC,QAAQ,EAAE,CAAC;YACd,OAAO,CAAC,KAAK,CAAC,eAAe,YAAY,aAAa,CAAC,CAAC;YACxD,OAAO,KAAK,CAAC;QACf,CAAC;QAED,4BAA4B;QAC5B,IAAI,IAAI,CAAC,eAAe,EAAE,CAAC;YACzB,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC;QACjC,CAAC;QAED,IAAI,CAAC;YACH,MAAM,OAAO,GAAG,MAAM,QAAQ,CAAC,UAAU,EAAE,CAAC;YAC5C,IAAI,OAAO,EAAE,CAAC;gBACZ,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC;gBAChC,OAAO,CAAC,GAAG,CAAC,8BAA8B,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC;gBAC3D,OAAO,IAAI,CAAC;YACd,CAAC;QACH,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,KAAK,CAAC,mCAAmC,YAAY,IAAI,EAAE,KAAK,CAAC,CAAC;QAC5E,CAAC;QAED,OAAO,KAAK,CAAC;IACf,CAAC;IAED;;OAEG;IACH,OAAO;QACL,IAAI,IAAI,CAAC,eAAe,EAAE,CAAC;YACzB,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC;QACjC,CAAC;QACD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC5B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,OAAO,CAAC,GAAG,CAAC,gCAAgC,CAAC,CAAC;IAChD,CAAC;CACF;AAED,qBAAqB;AACrB,MAAM,gBAAgB,GAAG,IAAI,gBAAgB,EAAE,CAAC;AAEhD;;GAEG;AACH,KAAK,UAAU,iBAAiB;IAC9B,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,EAAE,CAAC;QAChC,MAAM,OAAO,GAAG,MAAM,gBAAgB,CAAC,UAAU,EAAE,CAAC;QACpD,IAAI,CAAC,OAAO,EAAE,CAAC;YACb,MAAM,IAAI,KAAK,CAAC,0DAA0D,CAAC,CAAC;QAC9E,CAAC;IACH,CAAC;AACH,CAAC;AAED;;GAEG;AACI,KAAK,UAAU,mBAAmB,CAAC,UAAkB,EAAE,cAAsB;IAClF,IAAI,CAAC;QACH,MAAM,iBAAiB,EAAE,CAAC;QAE1B,MAAM,QAAQ,GAAG,gBAAgB,CAAC,kBAAkB,EAAE,CAAC;QACvD,IAAI,CAAC,QAAQ,EAAE,CAAC;YACd,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;QAC9C,CAAC;QAED,MAAM,WAAW,GAAG,MAAM,QAAQ,CAAC,mBAAmB,CAAC,UAAU,EAAE,cAAc,CAAC,CAAC;QAEnF,OAAO;YACL,OAAO,EAAE,IAAI;YACb,IAAI,EAAE,WAAW;YACjB,QAAQ,EAAE,QAAQ,CAAC,IAAI;SACxB,CAAC;IACJ,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,KAAK,CAAC,kCAAkC,EAAE,KAAK,CAAC,CAAC;QACzD,OAAO;YACL,OAAO,EAAE,KAAK;YACd,KAAK,EAAE,KAAK,YAAY,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,wBAAwB;YACxE,QAAQ,EAAE,gBAAgB,CAAC,eAAe,EAAE;SAC7C,CAAC;IACJ,CAAC;AACH,CAAC;AAED;;GAEG;AACI,KAAK,UAAU,kBAAkB,CAAC,UAAkB,EAAE,cAAsB;IACjF,IAAI,CAAC;QACH,MAAM,iBAAiB,EAAE,CAAC;QAE1B,MAAM,QAAQ,GAAG,gBAAgB,CAAC,kBAAkB,EAAE,CAAC;QACvD,IAAI,CAAC,QAAQ,EAAE,CAAC;YACd,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;QAC9C,CAAC;QAED,MAAM,KAAK,GAAG,MAAM,QAAQ,CAAC,kBAAkB,CAAC,UAAU,EAAE,cAAc,CAAC,CAAC;QAE5E,OAAO;YACL,OAAO,EAAE,IAAI;YACb,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,EAAE,gCAAgC;YACzE,QAAQ,EAAE,QAAQ,CAAC,IAAI;SACxB,CAAC;IACJ,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,KAAK,CAAC,gCAAgC,EAAE,KAAK,CAAC,CAAC;QACvD,OAAO;YACL,OAAO,EAAE,KAAK;YACd,KAAK,EAAE,KAAK,YAAY,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,wBAAwB;YACxE,QAAQ,EAAE,gBAAgB,CAAC,eAAe,EAAE;SAC7C,CAAC;IACJ,CAAC;AACH,CAAC;AAED;;GAEG;AACI,KAAK,UAAU,YAAY,CAAC,UAAkB,EAAE,cAAsB;IAC3E,IAAI,CAAC;QACH,MAAM,iBAAiB,EAAE,CAAC;QAE1B,MAAM,QAAQ,GAAG,gBAAgB,CAAC,kBAAkB,EAAE,CAAC;QACvD,IAAI,CAAC,QAAQ,EAAE,CAAC;YACd,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;QAC9C,CAAC;QAED,MAAM,cAAc,GAAG,MAAM,QAAQ,CAAC,YAAY,CAAC,UAAU,EAAE,cAAc,CAAC,CAAC;QAE/E,OAAO;YACL,OAAO,EAAE,IAAI;YACb,IAAI,EAAE,cAAc;YACpB,QAAQ,EAAE,QAAQ,CAAC,IAAI;SACxB,CAAC;IACJ,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,KAAK,CAAC,2BAA2B,EAAE,KAAK,CAAC,CAAC;QAClD,OAAO;YACL,OAAO,EAAE,KAAK;YACd,KAAK,EAAE,KAAK,YAAY,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,wBAAwB;YACxE,QAAQ,EAAE,gBAAgB,CAAC,eAAe,EAAE;SAC7C,CAAC;IACJ,CAAC;AACH,CAAC;AAED;;GAEG;AACI,KAAK,UAAU,iBAAiB,CAAC,UAAsB;IAC5D,IAAI,CAAC;QACH,MAAM,iBAAiB,EAAE,CAAC;QAE1B,MAAM,QAAQ,GAAG,gBAAgB,CAAC,kBAAkB,EAAE,CAAC;QACvD,IAAI,CAAC,QAAQ,EAAE,CAAC;YACd,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;QAC9C,CAAC;QAED,MAAM,SAAS,GAAG,MAAM,QAAQ,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC;QAE/D,OAAO;YACL,OAAO,EAAE,IAAI;YACb,IAAI,EAAE,SAAS;YACf,QAAQ,EAAE,QAAQ,CAAC,IAAI;SACxB,CAAC;IACJ,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,KAAK,CAAC,+BAA+B,EAAE,KAAK,CAAC,CAAC;QACtD,OAAO;YACL,OAAO,EAAE,KAAK;YACd,KAAK,EAAE,KAAK,YAAY,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,wBAAwB;YACxE,QAAQ,EAAE,gBAAgB,CAAC,eAAe,EAAE;SAC7C,CAAC;IACJ,CAAC;AACH,CAAC;AAED;;GAEG;AACH,SAAgB,eAAe;IAC7B,OAAO;QACL,IAAI,EAAE,gBAAgB,CAAC,eAAe,EAAE;QACxC,OAAO,EAAE,gBAAgB,CAAC,OAAO,EAAE;KACpC,CAAC;AACJ,CAAC;AAED;;GAEG;AACI,KAAK,UAAU,cAAc,CAAC,YAAoB;IACvD,IAAI,CAAC;QACH,MAAM,OAAO,GAAG,MAAM,gBAAgB,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;QAEpE,OAAO;YACL,OAAO;YACP,IAAI,EAAE,OAAO;YACb,QAAQ,EAAE,gBAAgB,CAAC,eAAe,EAAE;SAC7C,CAAC;IACJ,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,KAAK,CAAC,6BAA6B,EAAE,KAAK,CAAC,CAAC;QACpD,OAAO;YACL,OAAO,EAAE,KAAK;YACd,KAAK,EAAE,KAAK,YAAY,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,wBAAwB;YACxE,QAAQ,EAAE,gBAAgB,CAAC,eAAe,EAAE;SAC7C,CAAC;IACJ,CAAC;AACH,CAAC;AAED;;GAEG;AACH,SAAgB,OAAO;IACrB,gBAAgB,CAAC,OAAO,EAAE,CAAC;AAC7B,CAAC;AAaD,4DAA4D;AAC5D,uCAKoB;AAJlB,8GAAA,kBAAkB,OAAA;AAClB,sHAAA,0BAA0B,OAAA;AAC1B,+GAAA,mBAAmB,OAAA;AACnB,8HAAA,kCAAkC,OAAA",
      names: [],
      sources: ["/Users/dikshantvashistha/PrepBettr/lib/ai/index.ts"],
      sourcesContent: ["/**\n * Azure-Centric AI Service Layer\n * \n * This module provides a unified interface for AI operations backed\n * by Azure OpenAI services. Optimized for enterprise-grade AI functionality.\n * \n * Updated to use the new unified Azure AI facade for improved service\n * management and intelligent routing between Azure services.\n */\n\nimport { AzureOpenAIAdapter } from './azureOpenAI';\nimport { azureAI, AzureAIResponse } from './azure-ai';\n\nexport interface AIProvider {\n  name: string;\n  initialize(): Promise<boolean>;\n  isReady(): boolean;\n  generateCoverLetter(resumeText: string, jobDescription: string): Promise<string>;\n  calculateRelevancy(resumeText: string, jobDescription: string): Promise<number>;\n  tailorResume(resumeText: string, jobDescription: string): Promise<string>;\n  generateQuestions(resumeInfo: ResumeInfo): Promise<string[]>;\n  dispose(): void;\n}\n\nexport interface ResumeInfo {\n  name: string;\n  experience: string;\n  education: string;\n  skills: string;\n}\n\nexport interface AIResponse<T = any> {\n  success: boolean;\n  data?: T;\n  error?: string;\n  provider?: string;\n}\n\n/**\n * AI Service Manager - Azure OpenAI focused service manager\n */\nclass AIServiceManager {\n  private currentProvider: AIProvider | null = null;\n  private providers: Map<string, AIProvider> = new Map();\n  private initialized = false;\n\n  constructor() {\n    // Register Azure OpenAI as the primary provider\n    this.providers.set('azure-openai', new AzureOpenAIAdapter());\n  }\n\n  /**\n   * Initialize the AI service with Azure OpenAI\n   */\n  async initialize(): Promise<boolean> {\n    const providerName = 'azure-openai';\n    \n    console.log(`\uD83D\uDE80 Initializing AI Service with provider: ${providerName}`);\n    \n    const provider = this.providers.get(providerName);\n    if (!provider) {\n      console.error(`\u274C Azure OpenAI provider not found`);\n      return false;\n    }\n\n    try {\n      const success = await provider.initialize();\n      if (success) {\n        this.currentProvider = provider;\n        this.initialized = true;\n        console.log(`\u2705 AI Service initialized successfully with ${provider.name}`);\n        return true;\n      }\n    } catch (error) {\n      console.error(`\u274C Failed to initialize Azure OpenAI provider:`, error);\n    }\n\n    console.error('\u274C Azure OpenAI provider failed to initialize');\n    return false;\n  }\n\n\n  /**\n   * Get the current provider\n   */\n  getCurrentProvider(): AIProvider | null {\n    return this.currentProvider;\n  }\n\n  /**\n   * Check if the service is ready\n   */\n  isReady(): boolean {\n    return this.initialized && this.currentProvider?.isReady() === true;\n  }\n\n  /**\n   * Get current provider name\n   */\n  getProviderName(): string {\n    return this.currentProvider?.name || 'none';\n  }\n\n  /**\n   * Switch to a different provider at runtime\n   */\n  async switchProvider(providerName: string): Promise<boolean> {\n    console.log(`\uD83D\uDD04 Switching to provider: ${providerName}`);\n    \n    const provider = this.providers.get(providerName);\n    if (!provider) {\n      console.error(`\u274C Provider '${providerName}' not found`);\n      return false;\n    }\n\n    // Clean up current provider\n    if (this.currentProvider) {\n      this.currentProvider.dispose();\n    }\n\n    try {\n      const success = await provider.initialize();\n      if (success) {\n        this.currentProvider = provider;\n        console.log(`\u2705 Successfully switched to ${provider.name}`);\n        return true;\n      }\n    } catch (error) {\n      console.error(`\u274C Failed to switch to provider '${providerName}':`, error);\n    }\n\n    return false;\n  }\n\n  /**\n   * Dispose of all resources\n   */\n  dispose(): void {\n    if (this.currentProvider) {\n      this.currentProvider.dispose();\n    }\n    this.currentProvider = null;\n    this.initialized = false;\n    console.log('\uD83E\uDDF9 AI Service Manager disposed');\n  }\n}\n\n// Singleton instance\nconst aiServiceManager = new AIServiceManager();\n\n/**\n * Ensure the AI service is initialized\n */\nasync function ensureInitialized(): Promise<void> {\n  if (!aiServiceManager.isReady()) {\n    const success = await aiServiceManager.initialize();\n    if (!success) {\n      throw new Error('Failed to initialize AI service - no providers available');\n    }\n  }\n}\n\n/**\n * Generate a cover letter based on resume and job description\n */\nexport async function generateCoverLetter(resumeText: string, jobDescription: string): Promise<AIResponse<string>> {\n  try {\n    await ensureInitialized();\n    \n    const provider = aiServiceManager.getCurrentProvider();\n    if (!provider) {\n      throw new Error('No AI provider available');\n    }\n\n    const coverLetter = await provider.generateCoverLetter(resumeText, jobDescription);\n    \n    return {\n      success: true,\n      data: coverLetter,\n      provider: provider.name\n    };\n  } catch (error) {\n    console.error('\u274C Error generating cover letter:', error);\n    return {\n      success: false,\n      error: error instanceof Error ? error.message : 'Unknown error occurred',\n      provider: aiServiceManager.getProviderName()\n    };\n  }\n}\n\n/**\n * Calculate relevancy score between resume and job description (0-100)\n */\nexport async function calculateRelevancy(resumeText: string, jobDescription: string): Promise<AIResponse<number>> {\n  try {\n    await ensureInitialized();\n    \n    const provider = aiServiceManager.getCurrentProvider();\n    if (!provider) {\n      throw new Error('No AI provider available');\n    }\n\n    const score = await provider.calculateRelevancy(resumeText, jobDescription);\n    \n    return {\n      success: true,\n      data: Math.max(0, Math.min(100, score)), // Ensure score is between 0-100\n      provider: provider.name\n    };\n  } catch (error) {\n    console.error('\u274C Error calculating relevancy:', error);\n    return {\n      success: false,\n      error: error instanceof Error ? error.message : 'Unknown error occurred',\n      provider: aiServiceManager.getProviderName()\n    };\n  }\n}\n\n/**\n * Tailor resume to match job description\n */\nexport async function tailorResume(resumeText: string, jobDescription: string): Promise<AIResponse<string>> {\n  try {\n    await ensureInitialized();\n    \n    const provider = aiServiceManager.getCurrentProvider();\n    if (!provider) {\n      throw new Error('No AI provider available');\n    }\n\n    const tailoredResume = await provider.tailorResume(resumeText, jobDescription);\n    \n    return {\n      success: true,\n      data: tailoredResume,\n      provider: provider.name\n    };\n  } catch (error) {\n    console.error('\u274C Error tailoring resume:', error);\n    return {\n      success: false,\n      error: error instanceof Error ? error.message : 'Unknown error occurred',\n      provider: aiServiceManager.getProviderName()\n    };\n  }\n}\n\n/**\n * Generate interview questions based on resume information\n */\nexport async function generateQuestions(resumeInfo: ResumeInfo): Promise<AIResponse<string[]>> {\n  try {\n    await ensureInitialized();\n    \n    const provider = aiServiceManager.getCurrentProvider();\n    if (!provider) {\n      throw new Error('No AI provider available');\n    }\n\n    const questions = await provider.generateQuestions(resumeInfo);\n    \n    return {\n      success: true,\n      data: questions,\n      provider: provider.name\n    };\n  } catch (error) {\n    console.error('\u274C Error generating questions:', error);\n    return {\n      success: false,\n      error: error instanceof Error ? error.message : 'Unknown error occurred',\n      provider: aiServiceManager.getProviderName()\n    };\n  }\n}\n\n/**\n * Get current AI provider information\n */\nexport function getProviderInfo(): { name: string; isReady: boolean } {\n  return {\n    name: aiServiceManager.getProviderName(),\n    isReady: aiServiceManager.isReady()\n  };\n}\n\n/**\n * Switch AI provider at runtime (for testing or hot-swapping)\n */\nexport async function switchProvider(providerName: string): Promise<AIResponse<boolean>> {\n  try {\n    const success = await aiServiceManager.switchProvider(providerName);\n    \n    return {\n      success,\n      data: success,\n      provider: aiServiceManager.getProviderName()\n    };\n  } catch (error) {\n    console.error('\u274C Error switching provider:', error);\n    return {\n      success: false,\n      error: error instanceof Error ? error.message : 'Unknown error occurred',\n      provider: aiServiceManager.getProviderName()\n    };\n  }\n}\n\n/**\n * Dispose of AI service resources\n */\nexport function dispose(): void {\n  aiServiceManager.dispose();\n}\n\n// Export the unified Azure AI service for modern usage\nexport { azureAI };\nexport { azureAI as unifiedAI }; // Alias for clarity\n\n// Export types from the unified service\nexport type {\n  AzureAIResponse,\n  ResumeExtractionOptions,\n  QuestionGenerationOptions\n} from './azure-ai';\n\n// Re-export individual services for direct access if needed\nexport {\n  azureOpenAIService,\n  enhancedAzureOpenAIService,\n  azureFormRecognizer,\n  foundryDocumentIntelligenceService\n} from './azure-ai';\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "6ede35646b4caf695372809a50abbd53e53d2507"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_12kqm6h9ab = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_12kqm6h9ab();
cov_12kqm6h9ab().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_12kqm6h9ab().s[1]++;
exports.foundryDocumentIntelligenceService = exports.azureFormRecognizer = exports.enhancedAzureOpenAIService = exports.azureOpenAIService = exports.unifiedAI = exports.azureAI = void 0;
/* istanbul ignore next */
cov_12kqm6h9ab().s[2]++;
exports.generateCoverLetter = generateCoverLetter;
/* istanbul ignore next */
cov_12kqm6h9ab().s[3]++;
exports.calculateRelevancy = calculateRelevancy;
/* istanbul ignore next */
cov_12kqm6h9ab().s[4]++;
exports.tailorResume = tailorResume;
/* istanbul ignore next */
cov_12kqm6h9ab().s[5]++;
exports.generateQuestions = generateQuestions;
/* istanbul ignore next */
cov_12kqm6h9ab().s[6]++;
exports.getProviderInfo = getProviderInfo;
/* istanbul ignore next */
cov_12kqm6h9ab().s[7]++;
exports.switchProvider = switchProvider;
/* istanbul ignore next */
cov_12kqm6h9ab().s[8]++;
exports.dispose = dispose;
const azureOpenAI_1 =
/* istanbul ignore next */
(cov_12kqm6h9ab().s[9]++, require("./azureOpenAI"));
const azure_ai_1 =
/* istanbul ignore next */
(cov_12kqm6h9ab().s[10]++, require("./azure-ai"));
/* istanbul ignore next */
cov_12kqm6h9ab().s[11]++;
Object.defineProperty(exports, "azureAI", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_12kqm6h9ab().f[0]++;
    cov_12kqm6h9ab().s[12]++;
    return azure_ai_1.azureAI;
  }
});
/* istanbul ignore next */
cov_12kqm6h9ab().s[13]++;
Object.defineProperty(exports, "unifiedAI", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_12kqm6h9ab().f[1]++;
    cov_12kqm6h9ab().s[14]++;
    return azure_ai_1.azureAI;
  }
});
/**
 * AI Service Manager - Azure OpenAI focused service manager
 */
class AIServiceManager {
  constructor() {
    /* istanbul ignore next */
    cov_12kqm6h9ab().f[2]++;
    cov_12kqm6h9ab().s[15]++;
    this.currentProvider = null;
    /* istanbul ignore next */
    cov_12kqm6h9ab().s[16]++;
    this.providers = new Map();
    /* istanbul ignore next */
    cov_12kqm6h9ab().s[17]++;
    this.initialized = false;
    // Register Azure OpenAI as the primary provider
    /* istanbul ignore next */
    cov_12kqm6h9ab().s[18]++;
    this.providers.set('azure-openai', new azureOpenAI_1.AzureOpenAIAdapter());
  }
  /**
   * Initialize the AI service with Azure OpenAI
   */
  async initialize() {
    /* istanbul ignore next */
    cov_12kqm6h9ab().f[3]++;
    const providerName =
    /* istanbul ignore next */
    (cov_12kqm6h9ab().s[19]++, 'azure-openai');
    /* istanbul ignore next */
    cov_12kqm6h9ab().s[20]++;
    console.log(`🚀 Initializing AI Service with provider: ${providerName}`);
    const provider =
    /* istanbul ignore next */
    (cov_12kqm6h9ab().s[21]++, this.providers.get(providerName));
    /* istanbul ignore next */
    cov_12kqm6h9ab().s[22]++;
    if (!provider) {
      /* istanbul ignore next */
      cov_12kqm6h9ab().b[0][0]++;
      cov_12kqm6h9ab().s[23]++;
      console.error(`❌ Azure OpenAI provider not found`);
      /* istanbul ignore next */
      cov_12kqm6h9ab().s[24]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_12kqm6h9ab().b[0][1]++;
    }
    cov_12kqm6h9ab().s[25]++;
    try {
      const success =
      /* istanbul ignore next */
      (cov_12kqm6h9ab().s[26]++, await provider.initialize());
      /* istanbul ignore next */
      cov_12kqm6h9ab().s[27]++;
      if (success) {
        /* istanbul ignore next */
        cov_12kqm6h9ab().b[1][0]++;
        cov_12kqm6h9ab().s[28]++;
        this.currentProvider = provider;
        /* istanbul ignore next */
        cov_12kqm6h9ab().s[29]++;
        this.initialized = true;
        /* istanbul ignore next */
        cov_12kqm6h9ab().s[30]++;
        console.log(`✅ AI Service initialized successfully with ${provider.name}`);
        /* istanbul ignore next */
        cov_12kqm6h9ab().s[31]++;
        return true;
      } else
      /* istanbul ignore next */
      {
        cov_12kqm6h9ab().b[1][1]++;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_12kqm6h9ab().s[32]++;
      console.error(`❌ Failed to initialize Azure OpenAI provider:`, error);
    }
    /* istanbul ignore next */
    cov_12kqm6h9ab().s[33]++;
    console.error('❌ Azure OpenAI provider failed to initialize');
    /* istanbul ignore next */
    cov_12kqm6h9ab().s[34]++;
    return false;
  }
  /**
   * Get the current provider
   */
  getCurrentProvider() {
    /* istanbul ignore next */
    cov_12kqm6h9ab().f[4]++;
    cov_12kqm6h9ab().s[35]++;
    return this.currentProvider;
  }
  /**
   * Check if the service is ready
   */
  isReady() {
    /* istanbul ignore next */
    cov_12kqm6h9ab().f[5]++;
    var _a;
    /* istanbul ignore next */
    cov_12kqm6h9ab().s[36]++;
    return /* istanbul ignore next */(cov_12kqm6h9ab().b[2][0]++, this.initialized) &&
    /* istanbul ignore next */
    (cov_12kqm6h9ab().b[2][1]++, (
    /* istanbul ignore next */
    (cov_12kqm6h9ab().b[4][0]++, (_a = this.currentProvider) === null) ||
    /* istanbul ignore next */
    (cov_12kqm6h9ab().b[4][1]++, _a === void 0) ?
    /* istanbul ignore next */
    (cov_12kqm6h9ab().b[3][0]++, void 0) :
    /* istanbul ignore next */
    (cov_12kqm6h9ab().b[3][1]++, _a.isReady())) === true);
  }
  /**
   * Get current provider name
   */
  getProviderName() {
    /* istanbul ignore next */
    cov_12kqm6h9ab().f[6]++;
    var _a;
    /* istanbul ignore next */
    cov_12kqm6h9ab().s[37]++;
    return /* istanbul ignore next */(cov_12kqm6h9ab().b[5][0]++,
    /* istanbul ignore next */
    (cov_12kqm6h9ab().b[7][0]++, (_a = this.currentProvider) === null) ||
    /* istanbul ignore next */
    (cov_12kqm6h9ab().b[7][1]++, _a === void 0) ?
    /* istanbul ignore next */
    (cov_12kqm6h9ab().b[6][0]++, void 0) :
    /* istanbul ignore next */
    (cov_12kqm6h9ab().b[6][1]++, _a.name)) ||
    /* istanbul ignore next */
    (cov_12kqm6h9ab().b[5][1]++, 'none');
  }
  /**
   * Switch to a different provider at runtime
   */
  async switchProvider(providerName) {
    /* istanbul ignore next */
    cov_12kqm6h9ab().f[7]++;
    cov_12kqm6h9ab().s[38]++;
    console.log(`🔄 Switching to provider: ${providerName}`);
    const provider =
    /* istanbul ignore next */
    (cov_12kqm6h9ab().s[39]++, this.providers.get(providerName));
    /* istanbul ignore next */
    cov_12kqm6h9ab().s[40]++;
    if (!provider) {
      /* istanbul ignore next */
      cov_12kqm6h9ab().b[8][0]++;
      cov_12kqm6h9ab().s[41]++;
      console.error(`❌ Provider '${providerName}' not found`);
      /* istanbul ignore next */
      cov_12kqm6h9ab().s[42]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_12kqm6h9ab().b[8][1]++;
    }
    // Clean up current provider
    cov_12kqm6h9ab().s[43]++;
    if (this.currentProvider) {
      /* istanbul ignore next */
      cov_12kqm6h9ab().b[9][0]++;
      cov_12kqm6h9ab().s[44]++;
      this.currentProvider.dispose();
    } else
    /* istanbul ignore next */
    {
      cov_12kqm6h9ab().b[9][1]++;
    }
    cov_12kqm6h9ab().s[45]++;
    try {
      const success =
      /* istanbul ignore next */
      (cov_12kqm6h9ab().s[46]++, await provider.initialize());
      /* istanbul ignore next */
      cov_12kqm6h9ab().s[47]++;
      if (success) {
        /* istanbul ignore next */
        cov_12kqm6h9ab().b[10][0]++;
        cov_12kqm6h9ab().s[48]++;
        this.currentProvider = provider;
        /* istanbul ignore next */
        cov_12kqm6h9ab().s[49]++;
        console.log(`✅ Successfully switched to ${provider.name}`);
        /* istanbul ignore next */
        cov_12kqm6h9ab().s[50]++;
        return true;
      } else
      /* istanbul ignore next */
      {
        cov_12kqm6h9ab().b[10][1]++;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_12kqm6h9ab().s[51]++;
      console.error(`❌ Failed to switch to provider '${providerName}':`, error);
    }
    /* istanbul ignore next */
    cov_12kqm6h9ab().s[52]++;
    return false;
  }
  /**
   * Dispose of all resources
   */
  dispose() {
    /* istanbul ignore next */
    cov_12kqm6h9ab().f[8]++;
    cov_12kqm6h9ab().s[53]++;
    if (this.currentProvider) {
      /* istanbul ignore next */
      cov_12kqm6h9ab().b[11][0]++;
      cov_12kqm6h9ab().s[54]++;
      this.currentProvider.dispose();
    } else
    /* istanbul ignore next */
    {
      cov_12kqm6h9ab().b[11][1]++;
    }
    cov_12kqm6h9ab().s[55]++;
    this.currentProvider = null;
    /* istanbul ignore next */
    cov_12kqm6h9ab().s[56]++;
    this.initialized = false;
    /* istanbul ignore next */
    cov_12kqm6h9ab().s[57]++;
    console.log('🧹 AI Service Manager disposed');
  }
}
// Singleton instance
const aiServiceManager =
/* istanbul ignore next */
(cov_12kqm6h9ab().s[58]++, new AIServiceManager());
/**
 * Ensure the AI service is initialized
 */
async function ensureInitialized() {
  /* istanbul ignore next */
  cov_12kqm6h9ab().f[9]++;
  cov_12kqm6h9ab().s[59]++;
  if (!aiServiceManager.isReady()) {
    /* istanbul ignore next */
    cov_12kqm6h9ab().b[12][0]++;
    const success =
    /* istanbul ignore next */
    (cov_12kqm6h9ab().s[60]++, await aiServiceManager.initialize());
    /* istanbul ignore next */
    cov_12kqm6h9ab().s[61]++;
    if (!success) {
      /* istanbul ignore next */
      cov_12kqm6h9ab().b[13][0]++;
      cov_12kqm6h9ab().s[62]++;
      throw new Error('Failed to initialize AI service - no providers available');
    } else
    /* istanbul ignore next */
    {
      cov_12kqm6h9ab().b[13][1]++;
    }
  } else
  /* istanbul ignore next */
  {
    cov_12kqm6h9ab().b[12][1]++;
  }
}
/**
 * Generate a cover letter based on resume and job description
 */
async function generateCoverLetter(resumeText, jobDescription) {
  /* istanbul ignore next */
  cov_12kqm6h9ab().f[10]++;
  cov_12kqm6h9ab().s[63]++;
  try {
    /* istanbul ignore next */
    cov_12kqm6h9ab().s[64]++;
    await ensureInitialized();
    const provider =
    /* istanbul ignore next */
    (cov_12kqm6h9ab().s[65]++, aiServiceManager.getCurrentProvider());
    /* istanbul ignore next */
    cov_12kqm6h9ab().s[66]++;
    if (!provider) {
      /* istanbul ignore next */
      cov_12kqm6h9ab().b[14][0]++;
      cov_12kqm6h9ab().s[67]++;
      throw new Error('No AI provider available');
    } else
    /* istanbul ignore next */
    {
      cov_12kqm6h9ab().b[14][1]++;
    }
    const coverLetter =
    /* istanbul ignore next */
    (cov_12kqm6h9ab().s[68]++, await provider.generateCoverLetter(resumeText, jobDescription));
    /* istanbul ignore next */
    cov_12kqm6h9ab().s[69]++;
    return {
      success: true,
      data: coverLetter,
      provider: provider.name
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_12kqm6h9ab().s[70]++;
    console.error('❌ Error generating cover letter:', error);
    /* istanbul ignore next */
    cov_12kqm6h9ab().s[71]++;
    return {
      success: false,
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_12kqm6h9ab().b[15][0]++, error.message) :
      /* istanbul ignore next */
      (cov_12kqm6h9ab().b[15][1]++, 'Unknown error occurred'),
      provider: aiServiceManager.getProviderName()
    };
  }
}
/**
 * Calculate relevancy score between resume and job description (0-100)
 */
async function calculateRelevancy(resumeText, jobDescription) {
  /* istanbul ignore next */
  cov_12kqm6h9ab().f[11]++;
  cov_12kqm6h9ab().s[72]++;
  try {
    /* istanbul ignore next */
    cov_12kqm6h9ab().s[73]++;
    await ensureInitialized();
    const provider =
    /* istanbul ignore next */
    (cov_12kqm6h9ab().s[74]++, aiServiceManager.getCurrentProvider());
    /* istanbul ignore next */
    cov_12kqm6h9ab().s[75]++;
    if (!provider) {
      /* istanbul ignore next */
      cov_12kqm6h9ab().b[16][0]++;
      cov_12kqm6h9ab().s[76]++;
      throw new Error('No AI provider available');
    } else
    /* istanbul ignore next */
    {
      cov_12kqm6h9ab().b[16][1]++;
    }
    const score =
    /* istanbul ignore next */
    (cov_12kqm6h9ab().s[77]++, await provider.calculateRelevancy(resumeText, jobDescription));
    /* istanbul ignore next */
    cov_12kqm6h9ab().s[78]++;
    return {
      success: true,
      data: Math.max(0, Math.min(100, score)),
      // Ensure score is between 0-100
      provider: provider.name
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_12kqm6h9ab().s[79]++;
    console.error('❌ Error calculating relevancy:', error);
    /* istanbul ignore next */
    cov_12kqm6h9ab().s[80]++;
    return {
      success: false,
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_12kqm6h9ab().b[17][0]++, error.message) :
      /* istanbul ignore next */
      (cov_12kqm6h9ab().b[17][1]++, 'Unknown error occurred'),
      provider: aiServiceManager.getProviderName()
    };
  }
}
/**
 * Tailor resume to match job description
 */
async function tailorResume(resumeText, jobDescription) {
  /* istanbul ignore next */
  cov_12kqm6h9ab().f[12]++;
  cov_12kqm6h9ab().s[81]++;
  try {
    /* istanbul ignore next */
    cov_12kqm6h9ab().s[82]++;
    await ensureInitialized();
    const provider =
    /* istanbul ignore next */
    (cov_12kqm6h9ab().s[83]++, aiServiceManager.getCurrentProvider());
    /* istanbul ignore next */
    cov_12kqm6h9ab().s[84]++;
    if (!provider) {
      /* istanbul ignore next */
      cov_12kqm6h9ab().b[18][0]++;
      cov_12kqm6h9ab().s[85]++;
      throw new Error('No AI provider available');
    } else
    /* istanbul ignore next */
    {
      cov_12kqm6h9ab().b[18][1]++;
    }
    const tailoredResume =
    /* istanbul ignore next */
    (cov_12kqm6h9ab().s[86]++, await provider.tailorResume(resumeText, jobDescription));
    /* istanbul ignore next */
    cov_12kqm6h9ab().s[87]++;
    return {
      success: true,
      data: tailoredResume,
      provider: provider.name
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_12kqm6h9ab().s[88]++;
    console.error('❌ Error tailoring resume:', error);
    /* istanbul ignore next */
    cov_12kqm6h9ab().s[89]++;
    return {
      success: false,
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_12kqm6h9ab().b[19][0]++, error.message) :
      /* istanbul ignore next */
      (cov_12kqm6h9ab().b[19][1]++, 'Unknown error occurred'),
      provider: aiServiceManager.getProviderName()
    };
  }
}
/**
 * Generate interview questions based on resume information
 */
async function generateQuestions(resumeInfo) {
  /* istanbul ignore next */
  cov_12kqm6h9ab().f[13]++;
  cov_12kqm6h9ab().s[90]++;
  try {
    /* istanbul ignore next */
    cov_12kqm6h9ab().s[91]++;
    await ensureInitialized();
    const provider =
    /* istanbul ignore next */
    (cov_12kqm6h9ab().s[92]++, aiServiceManager.getCurrentProvider());
    /* istanbul ignore next */
    cov_12kqm6h9ab().s[93]++;
    if (!provider) {
      /* istanbul ignore next */
      cov_12kqm6h9ab().b[20][0]++;
      cov_12kqm6h9ab().s[94]++;
      throw new Error('No AI provider available');
    } else
    /* istanbul ignore next */
    {
      cov_12kqm6h9ab().b[20][1]++;
    }
    const questions =
    /* istanbul ignore next */
    (cov_12kqm6h9ab().s[95]++, await provider.generateQuestions(resumeInfo));
    /* istanbul ignore next */
    cov_12kqm6h9ab().s[96]++;
    return {
      success: true,
      data: questions,
      provider: provider.name
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_12kqm6h9ab().s[97]++;
    console.error('❌ Error generating questions:', error);
    /* istanbul ignore next */
    cov_12kqm6h9ab().s[98]++;
    return {
      success: false,
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_12kqm6h9ab().b[21][0]++, error.message) :
      /* istanbul ignore next */
      (cov_12kqm6h9ab().b[21][1]++, 'Unknown error occurred'),
      provider: aiServiceManager.getProviderName()
    };
  }
}
/**
 * Get current AI provider information
 */
function getProviderInfo() {
  /* istanbul ignore next */
  cov_12kqm6h9ab().f[14]++;
  cov_12kqm6h9ab().s[99]++;
  return {
    name: aiServiceManager.getProviderName(),
    isReady: aiServiceManager.isReady()
  };
}
/**
 * Switch AI provider at runtime (for testing or hot-swapping)
 */
async function switchProvider(providerName) {
  /* istanbul ignore next */
  cov_12kqm6h9ab().f[15]++;
  cov_12kqm6h9ab().s[100]++;
  try {
    const success =
    /* istanbul ignore next */
    (cov_12kqm6h9ab().s[101]++, await aiServiceManager.switchProvider(providerName));
    /* istanbul ignore next */
    cov_12kqm6h9ab().s[102]++;
    return {
      success,
      data: success,
      provider: aiServiceManager.getProviderName()
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_12kqm6h9ab().s[103]++;
    console.error('❌ Error switching provider:', error);
    /* istanbul ignore next */
    cov_12kqm6h9ab().s[104]++;
    return {
      success: false,
      error: error instanceof Error ?
      /* istanbul ignore next */
      (cov_12kqm6h9ab().b[22][0]++, error.message) :
      /* istanbul ignore next */
      (cov_12kqm6h9ab().b[22][1]++, 'Unknown error occurred'),
      provider: aiServiceManager.getProviderName()
    };
  }
}
/**
 * Dispose of AI service resources
 */
function dispose() {
  /* istanbul ignore next */
  cov_12kqm6h9ab().f[16]++;
  cov_12kqm6h9ab().s[105]++;
  aiServiceManager.dispose();
}
// Re-export individual services for direct access if needed
var azure_ai_2 =
/* istanbul ignore next */
(cov_12kqm6h9ab().s[106]++, require("./azure-ai"));
/* istanbul ignore next */
cov_12kqm6h9ab().s[107]++;
Object.defineProperty(exports, "azureOpenAIService", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_12kqm6h9ab().f[17]++;
    cov_12kqm6h9ab().s[108]++;
    return azure_ai_2.azureOpenAIService;
  }
});
/* istanbul ignore next */
cov_12kqm6h9ab().s[109]++;
Object.defineProperty(exports, "enhancedAzureOpenAIService", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_12kqm6h9ab().f[18]++;
    cov_12kqm6h9ab().s[110]++;
    return azure_ai_2.enhancedAzureOpenAIService;
  }
});
/* istanbul ignore next */
cov_12kqm6h9ab().s[111]++;
Object.defineProperty(exports, "azureFormRecognizer", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_12kqm6h9ab().f[19]++;
    cov_12kqm6h9ab().s[112]++;
    return azure_ai_2.azureFormRecognizer;
  }
});
/* istanbul ignore next */
cov_12kqm6h9ab().s[113]++;
Object.defineProperty(exports, "foundryDocumentIntelligenceService", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_12kqm6h9ab().f[20]++;
    cov_12kqm6h9ab().s[114]++;
    return azure_ai_2.foundryDocumentIntelligenceService;
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,