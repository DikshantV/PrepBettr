{"version":3,"names":["cov_c5m7p5uz6","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","foundry_config_1","require","foundry_client_1","FoundryModelManager","FoundryClientBase","constructor","usageHistory","deployments","Map","getAvailableModels","_a","config","models","getModel","modelName","getModelConfig","getDefaultModelConfig","getDefaultModel","selectModel","criteria","modelList","Object","values","preferredModel","preferred","modelMeetsCriteria","fallbackModels","fallbackName","fallback","candidates","filter","model","sort","a","costDiff","costPerToken","Math","abs","capabilities","length","maxCost","requiredCapabilities","hasAllCapabilities","every","capability","includes","trackUsage","tokenUsage","latency","success","errorCode","console","warn","cost","total_tokens","entry","timestamp","Date","toISOString","promptTokens","prompt_tokens","completionTokens","completion_tokens","totalTokens","push","slice","getModelMetrics","timeRangeHours","cutoff","now","entries","getTime","averageLatency","successRate","totalCost","requestCount","tokensPerSecond","totalLatency","reduce","sum","e","successCount","totalTime","getUsageStatistics","breakdown","modelStats","forEach","stats","get","requests","tokens","errors","set","totalRequests","totalErrors","errorRate","timeRange","estimateCost","estimatedTokens","getModelsByCostEfficiency","getModelsByCapability","clearUsageHistory","log","exportUsageHistory","getRecommendedModel","useCase","useCaseMap","interview","reasoning","lightweight","checkModelHealth","available","error","request","method","body","deploymentName","prompt","max_tokens","message","exports"],"sources":["/Users/dikshantvashistha/PrepBettr/lib/azure-ai-foundry/managers/model-manager.ts"],"sourcesContent":["/**\n * Azure AI Foundry Model Manager\n * \n * Handles model configurations, deployments, cost tracking, and model selection logic.\n * Provides utilities for managing multiple models and their configurations.\n */\n\nimport {\n  getFoundryConfig,\n  getModelConfig,\n  getDefaultModel,\n  type ModelConfig\n} from '../config/foundry-config';\nimport { FoundryClientBase } from '../clients/foundry-client';\nimport type {\n  ModelDeployment,\n  UsageStatistics,\n  TokenUsage,\n  FoundryError\n} from '../types/foundry-types';\n\n/**\n * Model usage tracking entry\n */\nexport interface ModelUsageEntry {\n  modelName: string;\n  timestamp: string;\n  promptTokens: number;\n  completionTokens: number;\n  totalTokens: number;\n  cost: number; // in USD\n  latency: number; // in milliseconds\n  success: boolean;\n  errorCode?: string;\n}\n\n/**\n * Model performance metrics\n */\nexport interface ModelPerformanceMetrics {\n  averageLatency: number;\n  successRate: number;\n  totalCost: number;\n  totalTokens: number;\n  requestCount: number;\n  costPerToken: number;\n  tokensPerSecond: number;\n}\n\n/**\n * Model selection criteria\n */\nexport interface ModelSelectionCriteria {\n  maxCost?: number; // maximum cost per 1K tokens\n  maxLatency?: number; // maximum acceptable latency in ms\n  requiredCapabilities?: string[];\n  preferredModel?: string;\n  fallbackModels?: string[];\n}\n\n/**\n * FoundryModelManager class for managing model configurations and usage\n */\nexport class FoundryModelManager extends FoundryClientBase {\n  private usageHistory: ModelUsageEntry[] = [];\n  private deployments: Map<string, ModelDeployment> = new Map();\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Get all available model configurations\n   */\n  getAvailableModels(): Record<string, ModelConfig> {\n    return this.config?.models || {};\n  }\n\n  /**\n   * Get model configuration by name with fallback\n   */\n  getModel(modelName: string): ModelConfig | null {\n    return getModelConfig(modelName);\n  }\n\n  /**\n   * Get the default model configuration\n   */\n  getDefaultModelConfig(): ModelConfig {\n    return getDefaultModel();\n  }\n\n  /**\n   * Select best model based on criteria\n   */\n  selectModel(criteria: ModelSelectionCriteria = {}): ModelConfig {\n    const models = this.getAvailableModels();\n    const modelList = Object.values(models);\n\n    // Start with preferred model if specified\n    if (criteria.preferredModel && models[criteria.preferredModel]) {\n      const preferred = models[criteria.preferredModel];\n      if (this.modelMeetsCriteria(preferred, criteria)) {\n        return preferred;\n      }\n    }\n\n    // Try fallback models\n    if (criteria.fallbackModels) {\n      for (const fallbackName of criteria.fallbackModels) {\n        const fallback = models[fallbackName];\n        if (fallback && this.modelMeetsCriteria(fallback, criteria)) {\n          return fallback;\n        }\n      }\n    }\n\n    // Filter models by criteria\n    let candidates = modelList.filter(model => this.modelMeetsCriteria(model, criteria));\n\n    // Sort by cost (ascending) and capabilities (descending)\n    candidates = candidates.sort((a, b) => {\n      // Primary sort: cost\n      const costDiff = a.costPerToken - b.costPerToken;\n      if (Math.abs(costDiff) > 0.001) return costDiff;\n      \n      // Secondary sort: capabilities (more is better)\n      return b.capabilities.length - a.capabilities.length;\n    });\n\n    // Return best candidate or default model\n    return candidates[0] || this.getDefaultModelConfig();\n  }\n\n  /**\n   * Check if model meets selection criteria\n   */\n  private modelMeetsCriteria(model: ModelConfig, criteria: ModelSelectionCriteria): boolean {\n    // Check cost constraint\n    if (criteria.maxCost !== undefined && model.costPerToken > criteria.maxCost) {\n      return false;\n    }\n\n    // Check capabilities\n    if (criteria.requiredCapabilities) {\n      const hasAllCapabilities = criteria.requiredCapabilities.every(\n        capability => model.capabilities.includes(capability)\n      );\n      if (!hasAllCapabilities) {\n        return false;\n      }\n    }\n\n    // Note: maxLatency check would require historical performance data\n    // This could be implemented by tracking actual response times\n\n    return true;\n  }\n\n  /**\n   * Track usage for a model request\n   */\n  trackUsage({\n    modelName,\n    tokenUsage,\n    latency,\n    success,\n    errorCode\n  }: {\n    modelName: string;\n    tokenUsage: TokenUsage;\n    latency: number;\n    success: boolean;\n    errorCode?: string;\n  }): void {\n    const model = this.getModel(modelName);\n    if (!model) {\n      console.warn(`[ModelManager] Unknown model for usage tracking: ${modelName}`);\n      return;\n    }\n\n    const cost = (tokenUsage.total_tokens / 1000) * model.costPerToken;\n    \n    const entry: ModelUsageEntry = {\n      modelName,\n      timestamp: new Date().toISOString(),\n      promptTokens: tokenUsage.prompt_tokens,\n      completionTokens: tokenUsage.completion_tokens,\n      totalTokens: tokenUsage.total_tokens,\n      cost,\n      latency,\n      success,\n      errorCode\n    };\n\n    this.usageHistory.push(entry);\n    \n    // Keep only last 1000 entries to prevent memory bloat\n    if (this.usageHistory.length > 1000) {\n      this.usageHistory = this.usageHistory.slice(-1000);\n    }\n  }\n\n  /**\n   * Get performance metrics for a specific model\n   */\n  getModelMetrics(modelName: string, timeRangeHours = 24): ModelPerformanceMetrics {\n    const cutoff = Date.now() - (timeRangeHours * 60 * 60 * 1000);\n    const entries = this.usageHistory.filter(\n      entry => entry.modelName === modelName && \n               new Date(entry.timestamp).getTime() >= cutoff\n    );\n\n    if (entries.length === 0) {\n      return {\n        averageLatency: 0,\n        successRate: 0,\n        totalCost: 0,\n        totalTokens: 0,\n        requestCount: 0,\n        costPerToken: 0,\n        tokensPerSecond: 0\n      };\n    }\n\n    const totalLatency = entries.reduce((sum, e) => sum + e.latency, 0);\n    const successCount = entries.filter(e => e.success).length;\n    const totalCost = entries.reduce((sum, e) => sum + e.cost, 0);\n    const totalTokens = entries.reduce((sum, e) => sum + e.totalTokens, 0);\n    const totalTime = totalLatency / 1000; // convert to seconds\n\n    return {\n      averageLatency: totalLatency / entries.length,\n      successRate: successCount / entries.length,\n      totalCost,\n      totalTokens,\n      requestCount: entries.length,\n      costPerToken: totalTokens > 0 ? (totalCost / totalTokens) * 1000 : 0, // per 1K tokens\n      tokensPerSecond: totalTime > 0 ? totalTokens / totalTime : 0\n    };\n  }\n\n  /**\n   * Get usage statistics for all models\n   */\n  getUsageStatistics(timeRangeHours = 24): UsageStatistics {\n    const cutoff = Date.now() - (timeRangeHours * 60 * 60 * 1000);\n    const entries = this.usageHistory.filter(\n      entry => new Date(entry.timestamp).getTime() >= cutoff\n    );\n\n    const breakdown: UsageStatistics['breakdown'] = {};\n    const modelStats = new Map<string, { requests: number; tokens: number; errors: number; latency: number }>();\n\n    entries.forEach(entry => {\n      const stats = modelStats.get(entry.modelName) || { requests: 0, tokens: 0, errors: 0, latency: 0 };\n      stats.requests += 1;\n      stats.tokens += entry.totalTokens;\n      stats.errors += entry.success ? 0 : 1;\n      stats.latency += entry.latency;\n      modelStats.set(entry.modelName, stats);\n    });\n\n    modelStats.forEach((stats, modelName) => {\n      breakdown[modelName] = {\n        requests: stats.requests,\n        tokens: stats.tokens,\n        errors: stats.errors\n      };\n    });\n\n    const totalRequests = entries.length;\n    const totalTokens = entries.reduce((sum, e) => sum + e.totalTokens, 0);\n    const totalErrors = entries.filter(e => !e.success).length;\n    const totalLatency = entries.reduce((sum, e) => sum + e.latency, 0);\n\n    return {\n      totalRequests,\n      totalTokens,\n      averageLatency: totalRequests > 0 ? totalLatency / totalRequests : 0,\n      errorRate: totalRequests > 0 ? totalErrors / totalRequests : 0,\n      timeRange: {\n        start: new Date(cutoff).toISOString(),\n        end: new Date().toISOString()\n      },\n      breakdown\n    };\n  }\n\n  /**\n   * Get cost estimate for a request\n   */\n  estimateCost(modelName: string, estimatedTokens: number): number {\n    const model = this.getModel(modelName);\n    if (!model) {\n      console.warn(`[ModelManager] Unknown model for cost estimation: ${modelName}`);\n      return 0;\n    }\n\n    return (estimatedTokens / 1000) * model.costPerToken;\n  }\n\n  /**\n   * List models sorted by cost efficiency\n   */\n  getModelsByCostEfficiency(): ModelConfig[] {\n    const models = Object.values(this.getAvailableModels());\n    return models.sort((a, b) => a.costPerToken - b.costPerToken);\n  }\n\n  /**\n   * Get models by capability\n   */\n  getModelsByCapability(capability: string): ModelConfig[] {\n    const models = Object.values(this.getAvailableModels());\n    return models.filter(model => model.capabilities.includes(capability));\n  }\n\n  /**\n   * Clear usage history (for testing or privacy)\n   */\n  clearUsageHistory(): void {\n    this.usageHistory = [];\n    console.log('[ModelManager] Usage history cleared');\n  }\n\n  /**\n   * Export usage history for external analysis\n   */\n  exportUsageHistory(): ModelUsageEntry[] {\n    return [...this.usageHistory]; // Return copy\n  }\n\n  /**\n   * Get recommended model for specific use case\n   */\n  getRecommendedModel(useCase: 'interview' | 'code-generation' | 'reasoning' | 'lightweight'): ModelConfig {\n    const useCaseMap: Record<string, ModelSelectionCriteria> = {\n      interview: {\n        requiredCapabilities: ['text-generation', 'reasoning'],\n        maxCost: 0.01, // Max $10 per 1K tokens\n        preferredModel: 'gpt-4o'\n      },\n      'code-generation': {\n        requiredCapabilities: ['code-generation', 'reasoning'],\n        preferredModel: 'gpt-4-turbo'\n      },\n      reasoning: {\n        requiredCapabilities: ['reasoning'],\n        preferredModel: 'gpt-4o'\n      },\n      lightweight: {\n        maxCost: 0.002, // Max $2 per 1K tokens\n        preferredModel: 'phi-4',\n        fallbackModels: ['gpt-4o']\n      }\n    };\n\n    const criteria = useCaseMap[useCase] || {};\n    return this.selectModel(criteria);\n  }\n\n  /**\n   * Health check for model availability\n   */\n  async checkModelHealth(modelName: string): Promise<{ available: boolean; latency?: number; error?: string }> {\n    const model = this.getModel(modelName);\n    if (!model) {\n      return { available: false, error: 'Model not found in configuration' };\n    }\n\n    try {\n      const start = Date.now();\n      // Simple health check with minimal prompt\n      await this.request('/models/health-check', {\n        method: 'POST',\n        body: {\n          model: model.deploymentName,\n          prompt: 'test',\n          max_tokens: 1\n        }\n      });\n      const latency = Date.now() - start;\n      return { available: true, latency };\n    } catch (error: any) {\n      return { \n        available: false, \n        error: error.message || 'Health check failed' \n      };\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]}