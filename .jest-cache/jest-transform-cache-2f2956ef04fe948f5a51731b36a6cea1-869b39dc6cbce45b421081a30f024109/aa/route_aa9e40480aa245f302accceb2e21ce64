c7f99d761edf433e23c2a6039ca07eca
"use strict";

/* istanbul ignore next */
function cov_c50xt7rv6() {
  var path = "/Users/dikshantvashistha/PrepBettr/app/api/interview/session/[id]/complete/route.ts";
  var hash = "d00a8d0399c87092ec7d807b409484b06866ac32";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dikshantvashistha/PrepBettr/app/api/interview/session/[id]/complete/route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 20
        }
      },
      "2": {
        start: {
          line: 4,
          column: 0
        },
        end: {
          line: 4,
          column: 18
        }
      },
      "3": {
        start: {
          line: 5,
          column: 17
        },
        end: {
          line: 5,
          column: 39
        }
      },
      "4": {
        start: {
          line: 6,
          column: 29
        },
        end: {
          line: 6,
          column: 91
        }
      },
      "5": {
        start: {
          line: 8,
          column: 15
        },
        end: {
          line: 8,
          column: 19
        }
      },
      "6": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 12,
          column: 5
        }
      },
      "7": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 64
        }
      },
      "8": {
        start: {
          line: 13,
          column: 4
        },
        end: {
          line: 13,
          column: 20
        }
      },
      "9": {
        start: {
          line: 36,
          column: 27
        },
        end: {
          line: 36,
          column: 39
        }
      },
      "10": {
        start: {
          line: 37,
          column: 22
        },
        end: {
          line: 37,
          column: 39
        }
      },
      "11": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 139,
          column: 5
        }
      },
      "12": {
        start: {
          line: 39,
          column: 21
        },
        end: {
          line: 39,
          column: 59
        }
      },
      "13": {
        start: {
          line: 39,
          column: 55
        },
        end: {
          line: 39,
          column: 57
        }
      },
      "14": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 44,
          column: 9
        }
      },
      "15": {
        start: {
          line: 41,
          column: 12
        },
        end: {
          line: 43,
          column: 32
        }
      },
      "16": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 72
        }
      },
      "17": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 46,
          column: 55
        }
      },
      "18": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 72
        }
      },
      "19": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 48,
          column: 80
        }
      },
      "20": {
        start: {
          line: 50,
          column: 30
        },
        end: {
          line: 50,
          column: 70
        }
      },
      "21": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 58,
          column: 9
        }
      },
      "22": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 57,
          column: 32
        }
      },
      "23": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 66,
          column: 9
        }
      },
      "24": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 65,
          column: 32
        }
      },
      "25": {
        start: {
          line: 68,
          column: 23
        },
        end: {
          line: 68,
          column: 71
        }
      },
      "26": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 73,
          column: 9
        }
      },
      "27": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 71,
          column: 50
        }
      },
      "28": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 91,
          column: 9
        }
      },
      "29": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 90,
          column: 14
        }
      },
      "30": {
        start: {
          line: 93,
          column: 30
        },
        end: {
          line: 99,
          column: 9
        }
      },
      "31": {
        start: {
          line: 100,
          column: 8
        },
        end: {
          line: 100,
          column: 62
        }
      },
      "32": {
        start: {
          line: 101,
          column: 8
        },
        end: {
          line: 101,
          column: 88
        }
      },
      "33": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 102,
          column: 107
        }
      },
      "34": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 103,
          column: 75
        }
      },
      "35": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 104,
          column: 60
        }
      },
      "36": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 121,
          column: 11
        }
      },
      "37": {
        start: {
          line: 124,
          column: 8
        },
        end: {
          line: 124,
          column: 66
        }
      },
      "38": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 131,
          column: 9
        }
      },
      "39": {
        start: {
          line: 126,
          column: 12
        },
        end: {
          line: 130,
          column: 32
        }
      },
      "40": {
        start: {
          line: 132,
          column: 8
        },
        end: {
          line: 138,
          column: 28
        }
      },
      "41": {
        start: {
          line: 147,
          column: 27
        },
        end: {
          line: 147,
          column: 39
        }
      },
      "42": {
        start: {
          line: 148,
          column: 22
        },
        end: {
          line: 148,
          column: 39
        }
      },
      "43": {
        start: {
          line: 149,
          column: 4
        },
        end: {
          line: 191,
          column: 5
        }
      },
      "44": {
        start: {
          line: 151,
          column: 23
        },
        end: {
          line: 151,
          column: 63
        }
      },
      "45": {
        start: {
          line: 152,
          column: 28
        },
        end: {
          line: 152,
          column: 90
        }
      },
      "46": {
        start: {
          line: 153,
          column: 34
        },
        end: {
          line: 158,
          column: 9
        }
      },
      "47": {
        start: {
          line: 159,
          column: 8
        },
        end: {
          line: 178,
          column: 11
        }
      },
      "48": {
        start: {
          line: 165,
          column: 59
        },
        end: {
          line: 165,
          column: 83
        }
      },
      "49": {
        start: {
          line: 181,
          column: 8
        },
        end: {
          line: 186,
          column: 9
        }
      },
      "50": {
        start: {
          line: 182,
          column: 12
        },
        end: {
          line: 185,
          column: 32
        }
      },
      "51": {
        start: {
          line: 187,
          column: 8
        },
        end: {
          line: 190,
          column: 28
        }
      }
    },
    fnMap: {
      "0": {
        name: "getWorkflow",
        decl: {
          start: {
            line: 9,
            column: 9
          },
          end: {
            line: 9,
            column: 20
          }
        },
        loc: {
          start: {
            line: 9,
            column: 23
          },
          end: {
            line: 14,
            column: 1
          }
        },
        line: 9
      },
      "1": {
        name: "POST",
        decl: {
          start: {
            line: 34,
            column: 15
          },
          end: {
            line: 34,
            column: 19
          }
        },
        loc: {
          start: {
            line: 34,
            column: 41
          },
          end: {
            line: 140,
            column: 1
          }
        },
        line: 34
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 39,
            column: 48
          },
          end: {
            line: 39,
            column: 49
          }
        },
        loc: {
          start: {
            line: 39,
            column: 55
          },
          end: {
            line: 39,
            column: 57
          }
        },
        line: 39
      },
      "3": {
        name: "GET",
        decl: {
          start: {
            line: 146,
            column: 15
          },
          end: {
            line: 146,
            column: 18
          }
        },
        loc: {
          start: {
            line: 146,
            column: 40
          },
          end: {
            line: 192,
            column: 1
          }
        },
        line: 146
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 165,
            column: 54
          },
          end: {
            line: 165,
            column: 55
          }
        },
        loc: {
          start: {
            line: 165,
            column: 59
          },
          end: {
            line: 165,
            column: 83
          }
        },
        line: 165
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 10
      },
      "1": {
        loc: {
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 44,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 44,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 40
      },
      "2": {
        loc: {
          start: {
            line: 46,
            column: 32
          },
          end: {
            line: 46,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 46,
            column: 32
          },
          end: {
            line: 46,
            column: 42
          }
        }, {
          start: {
            line: 46,
            column: 46
          },
          end: {
            line: 46,
            column: 51
          }
        }],
        line: 46
      },
      "3": {
        loc: {
          start: {
            line: 47,
            column: 41
          },
          end: {
            line: 47,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 47,
            column: 41
          },
          end: {
            line: 47,
            column: 59
          }
        }, {
          start: {
            line: 47,
            column: 63
          },
          end: {
            line: 47,
            column: 68
          }
        }],
        line: 47
      },
      "4": {
        loc: {
          start: {
            line: 48,
            column: 45
          },
          end: {
            line: 48,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 48,
            column: 45
          },
          end: {
            line: 48,
            column: 67
          }
        }, {
          start: {
            line: 48,
            column: 71
          },
          end: {
            line: 48,
            column: 76
          }
        }],
        line: 48
      },
      "5": {
        loc: {
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 58,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 58,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 51
      },
      "6": {
        loc: {
          start: {
            line: 51,
            column: 12
          },
          end: {
            line: 51,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 51,
            column: 12
          },
          end: {
            line: 51,
            column: 23
          }
        }, {
          start: {
            line: 51,
            column: 27
          },
          end: {
            line: 51,
            column: 62
          }
        }],
        line: 51
      },
      "7": {
        loc: {
          start: {
            line: 59,
            column: 8
          },
          end: {
            line: 66,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 59,
            column: 8
          },
          end: {
            line: 66,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 59
      },
      "8": {
        loc: {
          start: {
            line: 70,
            column: 8
          },
          end: {
            line: 73,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 70,
            column: 8
          },
          end: {
            line: 73,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 70
      },
      "9": {
        loc: {
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 91,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 91,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 74
      },
      "10": {
        loc: {
          start: {
            line: 94,
            column: 25
          },
          end: {
            line: 94,
            column: 96
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 94,
            column: 73
          },
          end: {
            line: 94,
            column: 79
          }
        }, {
          start: {
            line: 94,
            column: 82
          },
          end: {
            line: 94,
            column: 96
          }
        }],
        line: 94
      },
      "11": {
        loc: {
          start: {
            line: 94,
            column: 25
          },
          end: {
            line: 94,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 94,
            column: 25
          },
          end: {
            line: 94,
            column: 53
          }
        }, {
          start: {
            line: 94,
            column: 57
          },
          end: {
            line: 94,
            column: 70
          }
        }],
        line: 94
      },
      "12": {
        loc: {
          start: {
            line: 95,
            column: 27
          },
          end: {
            line: 95,
            column: 108
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 95,
            column: 28
          },
          end: {
            line: 95,
            column: 101
          }
        }, {
          start: {
            line: 95,
            column: 106
          },
          end: {
            line: 95,
            column: 108
          }
        }],
        line: 95
      },
      "13": {
        loc: {
          start: {
            line: 95,
            column: 28
          },
          end: {
            line: 95,
            column: 101
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 95,
            column: 76
          },
          end: {
            line: 95,
            column: 82
          }
        }, {
          start: {
            line: 95,
            column: 85
          },
          end: {
            line: 95,
            column: 101
          }
        }],
        line: 95
      },
      "14": {
        loc: {
          start: {
            line: 95,
            column: 28
          },
          end: {
            line: 95,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 95,
            column: 28
          },
          end: {
            line: 95,
            column: 56
          }
        }, {
          start: {
            line: 95,
            column: 60
          },
          end: {
            line: 95,
            column: 73
          }
        }],
        line: 95
      },
      "15": {
        loc: {
          start: {
            line: 96,
            column: 36
          },
          end: {
            line: 96,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 96,
            column: 36
          },
          end: {
            line: 96,
            column: 58
          }
        }, {
          start: {
            line: 96,
            column: 62
          },
          end: {
            line: 96,
            column: 67
          }
        }],
        line: 96
      },
      "16": {
        loc: {
          start: {
            line: 97,
            column: 33
          },
          end: {
            line: 97,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 97,
            column: 33
          },
          end: {
            line: 97,
            column: 51
          }
        }, {
          start: {
            line: 97,
            column: 55
          },
          end: {
            line: 97,
            column: 60
          }
        }],
        line: 97
      },
      "17": {
        loc: {
          start: {
            line: 111,
            column: 30
          },
          end: {
            line: 111,
            column: 118
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 111,
            column: 63
          },
          end: {
            line: 111,
            column: 111
          }
        }, {
          start: {
            line: 111,
            column: 114
          },
          end: {
            line: 111,
            column: 118
          }
        }],
        line: 111
      },
      "18": {
        loc: {
          start: {
            line: 112,
            column: 37
          },
          end: {
            line: 112,
            column: 124
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 112,
            column: 62
          },
          end: {
            line: 112,
            column: 117
          }
        }, {
          start: {
            line: 112,
            column: 120
          },
          end: {
            line: 112,
            column: 124
          }
        }],
        line: 112
      },
      "19": {
        loc: {
          start: {
            line: 125,
            column: 8
          },
          end: {
            line: 131,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 125,
            column: 8
          },
          end: {
            line: 131,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 125
      },
      "20": {
        loc: {
          start: {
            line: 134,
            column: 19
          },
          end: {
            line: 134,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 134,
            column: 19
          },
          end: {
            line: 134,
            column: 32
          }
        }, {
          start: {
            line: 134,
            column: 36
          },
          end: {
            line: 134,
            column: 66
          }
        }],
        line: 134
      },
      "21": {
        loc: {
          start: {
            line: 135,
            column: 18
          },
          end: {
            line: 135,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 135,
            column: 18
          },
          end: {
            line: 135,
            column: 28
          }
        }, {
          start: {
            line: 135,
            column: 32
          },
          end: {
            line: 135,
            column: 47
          }
        }],
        line: 135
      },
      "22": {
        loc: {
          start: {
            line: 137,
            column: 25
          },
          end: {
            line: 137,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 137,
            column: 78
          },
          end: {
            line: 137,
            column: 80
          }
        }, {
          start: {
            line: 137,
            column: 83
          },
          end: {
            line: 137,
            column: 88
          }
        }],
        line: 137
      },
      "23": {
        loc: {
          start: {
            line: 137,
            column: 25
          },
          end: {
            line: 137,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 137,
            column: 25
          },
          end: {
            line: 137,
            column: 58
          }
        }, {
          start: {
            line: 137,
            column: 62
          },
          end: {
            line: 137,
            column: 75
          }
        }],
        line: 137
      },
      "24": {
        loc: {
          start: {
            line: 152,
            column: 28
          },
          end: {
            line: 152,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 152,
            column: 28
          },
          end: {
            line: 152,
            column: 58
          }
        }, {
          start: {
            line: 152,
            column: 62
          },
          end: {
            line: 152,
            column: 90
          }
        }],
        line: 152
      },
      "25": {
        loc: {
          start: {
            line: 181,
            column: 8
          },
          end: {
            line: 186,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 181,
            column: 8
          },
          end: {
            line: 186,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 181
      },
      "26": {
        loc: {
          start: {
            line: 188,
            column: 19
          },
          end: {
            line: 188,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 188,
            column: 19
          },
          end: {
            line: 188,
            column: 32
          }
        }, {
          start: {
            line: 188,
            column: 36
          },
          end: {
            line: 188,
            column: 67
          }
        }],
        line: 188
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/dikshantvashistha/PrepBettr/app/api/interview/session/[id]/complete/route.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/dikshantvashistha/PrepBettr/app/api/interview/session/[id]/complete/route.ts"],
      sourcesContent: ["import { NextRequest, NextResponse } from 'next/server';\nimport { InterviewWorkflow } from '@/lib/azure-ai-foundry/workflows/interview-workflow';\n\n// Lazy initialization to avoid build-time issues\nlet workflow: InterviewWorkflow | null = null;\n\nfunction getWorkflow(): InterviewWorkflow {\n  if (!workflow) {\n    workflow = new InterviewWorkflow();\n  }\n  return workflow;\n}\n\n/**\n * POST /api/interview/session/[id]/complete\n * \n * Complete an interview session and get comprehensive results\n * \n * Path Parameters:\n * - id: sessionId (string)\n * \n * Request Body (optional):\n * - force?: boolean (force completion even if not all stages done)\n * - includeReport?: boolean (generate detailed PDF report)\n * - candidateFeedback?: boolean (include candidate-specific feedback)\n * - sharing?: { recruiterId?, managerEmails? } (sharing configuration)\n * \n * Response:\n * - result: InterviewResult (comprehensive interview analysis)\n * - exports: available export options\n * - sharing: sharing configuration applied\n */\nexport async function POST(\n  request: NextRequest,\n  { params }: { params: Promise<{ id: string }> }\n) {\n  const resolvedParams = await params;\n  const sessionId = resolvedParams.id;\n  \n  try {\n    const body = await request.json().catch(() => ({}));\n\n    if (!sessionId) {\n      return NextResponse.json({\n        error: 'Session ID is required'\n      }, { status: 400 });\n    }\n\n    console.log(`[API] Completing interview session: ${sessionId}`);\n    console.log(`- Force: ${body.force || false}`);\n    console.log(`- Include Report: ${body.includeReport || false}`);\n    console.log(`- Candidate Feedback: ${body.candidateFeedback || false}`);\n\n    // Get current status for validation\n    const currentStatus = await getWorkflow().getStatus(sessionId);\n    \n    if (!body.force && currentStatus.state === 'completed') {\n      return NextResponse.json({\n        success: false,\n        error: 'Interview is already completed',\n        sessionId,\n        existingResult: await getWorkflow().completeInterview(sessionId)\n      }, { status: 400 });\n    }\n\n    if (currentStatus.state === 'failed') {\n      return NextResponse.json({\n        success: false,\n        error: 'Interview has failed, cannot complete normally',\n        sessionId,\n        suggestion: 'Use force: true to get partial results'\n      }, { status: 400 });\n    }\n\n    // Complete the interview workflow\n    const result = await getWorkflow().completeInterview(sessionId);\n\n    // Enhance result with requested features\n    if (body.includeReport) {\n      result.exports.reportAvailable = true;\n      // In production, would generate PDF here\n    }\n\n    if (body.candidateFeedback) {\n      result.feedback.candidateFeedback = {\n        positives: [\n          'Demonstrated strong technical knowledge',\n          'Clear communication throughout the interview'\n        ],\n        developmentAreas: [\n          'Consider deepening system design knowledge',\n          'Practice explaining complex concepts simply'\n        ],\n        resources: [\n          'System Design Interview book',\n          'LeetCode practice problems',\n          'Leadership communication courses'\n        ],\n        encouragement: 'Thank you for your time today. You showed great potential and we appreciate your thoughtful responses.'\n      };\n    }\n\n    // Handle sharing configuration\n    const sharingConfig = {\n      recruiterId: body.sharing?.recruiterId,\n      managerEmails: body.sharing?.managerEmails || [],\n      shareCandidateFeedback: body.candidateFeedback || false,\n      shareDetailedReport: body.includeReport || false,\n      generatedAt: new Date().toISOString()\n    };\n\n    console.log(`[API] Interview completed successfully`);\n    console.log(`- Total duration: ${result.summary.totalDurationMinutes} minutes`);\n    console.log(`- Stages completed: ${result.summary.stagesCompleted}/${result.summary.totalStages}`);\n    console.log(`- Questions asked: ${result.summary.questionsAsked}`);\n    console.log(`- Overall outcome: ${result.outcome}`);\n\n    return NextResponse.json({\n      success: true,\n      sessionId,\n      result,\n      sharing: sharingConfig,\n      exports: {\n        pdfReportUrl: result.exports.reportAvailable ? `/api/interview/session/${sessionId}/report.pdf` : null,\n        candidateSummaryUrl: body.candidateFeedback ? `/api/interview/session/${sessionId}/candidate-summary` : null,\n        recruiterReportUrl: `/api/interview/session/${sessionId}/recruiter-report`,\n        rawDataUrl: `/api/interview/session/${sessionId}/raw-data`\n      },\n      metadata: {\n        completedAt: new Date().toISOString(),\n        processingTime: result.metadata.generationDuration,\n        apiVersion: '1.0.0'\n      }\n    });\n\n  } catch (error: any) {\n    console.error(`[API] Error completing interview:`, error);\n    \n    if (error.code === 'SESSION_NOT_FOUND') {\n      return NextResponse.json({\n        success: false,\n        error: 'Session not found',\n        sessionId: resolvedParams.id\n      }, { status: 404 });\n    }\n\n    return NextResponse.json({\n      success: false,\n      error: error.message || 'Failed to complete interview',\n      code: error.code || 'UNKNOWN_ERROR',\n      sessionId: resolvedParams.id,\n      recoverable: error.recoverable ?? false\n    }, { status: 500 });\n  }\n}\n\n/**\n * GET /api/interview/session/[id]/complete\n * \n * Get completion status and available options\n */\nexport async function GET(\n  request: NextRequest,\n  { params }: { params: Promise<{ id: string }> }\n) {\n  const resolvedParams = await params;\n  const sessionId = resolvedParams.id;\n  \n  try {\n    \n    // Get current session status\n    const status = await getWorkflow().getStatus(sessionId);\n    \n    const canComplete = status.state === 'in-progress' || status.state === 'completed';\n    const completionOptions = {\n      canForceComplete: status.state !== 'completed',\n      canGenerateReport: true,\n      canProvideCandidateFeedback: true,\n      availableExports: ['pdf', 'candidate-summary', 'recruiter-report', 'raw-data']\n    };\n\n    return NextResponse.json({\n      sessionId,\n      canComplete,\n      currentState: status.state,\n      completionOptions,\n      progress: {\n        stagesCompleted: status.stages.filter(s => s.status === 'completed').length,\n        totalStages: status.totalStages,\n        progressPercentage: status.progressPercentage\n      },\n      example: {\n        force: false,\n        includeReport: true,\n        candidateFeedback: true,\n        sharing: {\n          recruiterId: 'recruiter_123',\n          managerEmails: ['manager@company.com']\n        }\n      }\n    });\n\n  } catch (error: any) {\n    if (error.code === 'SESSION_NOT_FOUND') {\n      return NextResponse.json({\n        error: 'Session not found',\n        sessionId: resolvedParams.id\n      }, { status: 404 });\n    }\n\n    return NextResponse.json({\n      error: error.message || 'Failed to get completion info',\n      sessionId: resolvedParams.id\n    }, { status: 500 });\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d00a8d0399c87092ec7d807b409484b06866ac32"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_c50xt7rv6 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_c50xt7rv6();
cov_c50xt7rv6().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_c50xt7rv6().s[1]++;
exports.POST = POST;
/* istanbul ignore next */
cov_c50xt7rv6().s[2]++;
exports.GET = GET;
const server_1 =
/* istanbul ignore next */
(cov_c50xt7rv6().s[3]++, require("next/server"));
const interview_workflow_1 =
/* istanbul ignore next */
(cov_c50xt7rv6().s[4]++, require("@/lib/azure-ai-foundry/workflows/interview-workflow"));
// Lazy initialization to avoid build-time issues
let workflow =
/* istanbul ignore next */
(cov_c50xt7rv6().s[5]++, null);
function getWorkflow() {
  /* istanbul ignore next */
  cov_c50xt7rv6().f[0]++;
  cov_c50xt7rv6().s[6]++;
  if (!workflow) {
    /* istanbul ignore next */
    cov_c50xt7rv6().b[0][0]++;
    cov_c50xt7rv6().s[7]++;
    workflow = new interview_workflow_1.InterviewWorkflow();
  } else
  /* istanbul ignore next */
  {
    cov_c50xt7rv6().b[0][1]++;
  }
  cov_c50xt7rv6().s[8]++;
  return workflow;
}
/**
 * POST /api/interview/session/[id]/complete
 *
 * Complete an interview session and get comprehensive results
 *
 * Path Parameters:
 * - id: sessionId (string)
 *
 * Request Body (optional):
 * - force?: boolean (force completion even if not all stages done)
 * - includeReport?: boolean (generate detailed PDF report)
 * - candidateFeedback?: boolean (include candidate-specific feedback)
 * - sharing?: { recruiterId?, managerEmails? } (sharing configuration)
 *
 * Response:
 * - result: InterviewResult (comprehensive interview analysis)
 * - exports: available export options
 * - sharing: sharing configuration applied
 */
async function POST(request, {
  params
}) {
  /* istanbul ignore next */
  cov_c50xt7rv6().f[1]++;
  var _a, _b, _c;
  const resolvedParams =
  /* istanbul ignore next */
  (cov_c50xt7rv6().s[9]++, await params);
  const sessionId =
  /* istanbul ignore next */
  (cov_c50xt7rv6().s[10]++, resolvedParams.id);
  /* istanbul ignore next */
  cov_c50xt7rv6().s[11]++;
  try {
    const body =
    /* istanbul ignore next */
    (cov_c50xt7rv6().s[12]++, await request.json().catch(() => {
      /* istanbul ignore next */
      cov_c50xt7rv6().f[2]++;
      cov_c50xt7rv6().s[13]++;
      return {};
    }));
    /* istanbul ignore next */
    cov_c50xt7rv6().s[14]++;
    if (!sessionId) {
      /* istanbul ignore next */
      cov_c50xt7rv6().b[1][0]++;
      cov_c50xt7rv6().s[15]++;
      return server_1.NextResponse.json({
        error: 'Session ID is required'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_c50xt7rv6().b[1][1]++;
    }
    cov_c50xt7rv6().s[16]++;
    console.log(`[API] Completing interview session: ${sessionId}`);
    /* istanbul ignore next */
    cov_c50xt7rv6().s[17]++;
    console.log(`- Force: ${
    /* istanbul ignore next */
    (cov_c50xt7rv6().b[2][0]++, body.force) ||
    /* istanbul ignore next */
    (cov_c50xt7rv6().b[2][1]++, false)}`);
    /* istanbul ignore next */
    cov_c50xt7rv6().s[18]++;
    console.log(`- Include Report: ${
    /* istanbul ignore next */
    (cov_c50xt7rv6().b[3][0]++, body.includeReport) ||
    /* istanbul ignore next */
    (cov_c50xt7rv6().b[3][1]++, false)}`);
    /* istanbul ignore next */
    cov_c50xt7rv6().s[19]++;
    console.log(`- Candidate Feedback: ${
    /* istanbul ignore next */
    (cov_c50xt7rv6().b[4][0]++, body.candidateFeedback) ||
    /* istanbul ignore next */
    (cov_c50xt7rv6().b[4][1]++, false)}`);
    // Get current status for validation
    const currentStatus =
    /* istanbul ignore next */
    (cov_c50xt7rv6().s[20]++, await getWorkflow().getStatus(sessionId));
    /* istanbul ignore next */
    cov_c50xt7rv6().s[21]++;
    if (
    /* istanbul ignore next */
    (cov_c50xt7rv6().b[6][0]++, !body.force) &&
    /* istanbul ignore next */
    (cov_c50xt7rv6().b[6][1]++, currentStatus.state === 'completed')) {
      /* istanbul ignore next */
      cov_c50xt7rv6().b[5][0]++;
      cov_c50xt7rv6().s[22]++;
      return server_1.NextResponse.json({
        success: false,
        error: 'Interview is already completed',
        sessionId,
        existingResult: await getWorkflow().completeInterview(sessionId)
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_c50xt7rv6().b[5][1]++;
    }
    cov_c50xt7rv6().s[23]++;
    if (currentStatus.state === 'failed') {
      /* istanbul ignore next */
      cov_c50xt7rv6().b[7][0]++;
      cov_c50xt7rv6().s[24]++;
      return server_1.NextResponse.json({
        success: false,
        error: 'Interview has failed, cannot complete normally',
        sessionId,
        suggestion: 'Use force: true to get partial results'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_c50xt7rv6().b[7][1]++;
    }
    // Complete the interview workflow
    const result =
    /* istanbul ignore next */
    (cov_c50xt7rv6().s[25]++, await getWorkflow().completeInterview(sessionId));
    // Enhance result with requested features
    /* istanbul ignore next */
    cov_c50xt7rv6().s[26]++;
    if (body.includeReport) {
      /* istanbul ignore next */
      cov_c50xt7rv6().b[8][0]++;
      cov_c50xt7rv6().s[27]++;
      result.exports.reportAvailable = true;
      // In production, would generate PDF here
    } else
    /* istanbul ignore next */
    {
      cov_c50xt7rv6().b[8][1]++;
    }
    cov_c50xt7rv6().s[28]++;
    if (body.candidateFeedback) {
      /* istanbul ignore next */
      cov_c50xt7rv6().b[9][0]++;
      cov_c50xt7rv6().s[29]++;
      result.feedback.candidateFeedback = {
        positives: ['Demonstrated strong technical knowledge', 'Clear communication throughout the interview'],
        developmentAreas: ['Consider deepening system design knowledge', 'Practice explaining complex concepts simply'],
        resources: ['System Design Interview book', 'LeetCode practice problems', 'Leadership communication courses'],
        encouragement: 'Thank you for your time today. You showed great potential and we appreciate your thoughtful responses.'
      };
    } else
    /* istanbul ignore next */
    {
      cov_c50xt7rv6().b[9][1]++;
    }
    // Handle sharing configuration
    const sharingConfig =
    /* istanbul ignore next */
    (cov_c50xt7rv6().s[30]++, {
      recruiterId:
      /* istanbul ignore next */
      (cov_c50xt7rv6().b[11][0]++, (_a = body.sharing) === null) ||
      /* istanbul ignore next */
      (cov_c50xt7rv6().b[11][1]++, _a === void 0) ?
      /* istanbul ignore next */
      (cov_c50xt7rv6().b[10][0]++, void 0) :
      /* istanbul ignore next */
      (cov_c50xt7rv6().b[10][1]++, _a.recruiterId),
      managerEmails:
      /* istanbul ignore next */
      (cov_c50xt7rv6().b[12][0]++,
      /* istanbul ignore next */
      (cov_c50xt7rv6().b[14][0]++, (_b = body.sharing) === null) ||
      /* istanbul ignore next */
      (cov_c50xt7rv6().b[14][1]++, _b === void 0) ?
      /* istanbul ignore next */
      (cov_c50xt7rv6().b[13][0]++, void 0) :
      /* istanbul ignore next */
      (cov_c50xt7rv6().b[13][1]++, _b.managerEmails)) ||
      /* istanbul ignore next */
      (cov_c50xt7rv6().b[12][1]++, []),
      shareCandidateFeedback:
      /* istanbul ignore next */
      (cov_c50xt7rv6().b[15][0]++, body.candidateFeedback) ||
      /* istanbul ignore next */
      (cov_c50xt7rv6().b[15][1]++, false),
      shareDetailedReport:
      /* istanbul ignore next */
      (cov_c50xt7rv6().b[16][0]++, body.includeReport) ||
      /* istanbul ignore next */
      (cov_c50xt7rv6().b[16][1]++, false),
      generatedAt: new Date().toISOString()
    });
    /* istanbul ignore next */
    cov_c50xt7rv6().s[31]++;
    console.log(`[API] Interview completed successfully`);
    /* istanbul ignore next */
    cov_c50xt7rv6().s[32]++;
    console.log(`- Total duration: ${result.summary.totalDurationMinutes} minutes`);
    /* istanbul ignore next */
    cov_c50xt7rv6().s[33]++;
    console.log(`- Stages completed: ${result.summary.stagesCompleted}/${result.summary.totalStages}`);
    /* istanbul ignore next */
    cov_c50xt7rv6().s[34]++;
    console.log(`- Questions asked: ${result.summary.questionsAsked}`);
    /* istanbul ignore next */
    cov_c50xt7rv6().s[35]++;
    console.log(`- Overall outcome: ${result.outcome}`);
    /* istanbul ignore next */
    cov_c50xt7rv6().s[36]++;
    return server_1.NextResponse.json({
      success: true,
      sessionId,
      result,
      sharing: sharingConfig,
      exports: {
        pdfReportUrl: result.exports.reportAvailable ?
        /* istanbul ignore next */
        (cov_c50xt7rv6().b[17][0]++, `/api/interview/session/${sessionId}/report.pdf`) :
        /* istanbul ignore next */
        (cov_c50xt7rv6().b[17][1]++, null),
        candidateSummaryUrl: body.candidateFeedback ?
        /* istanbul ignore next */
        (cov_c50xt7rv6().b[18][0]++, `/api/interview/session/${sessionId}/candidate-summary`) :
        /* istanbul ignore next */
        (cov_c50xt7rv6().b[18][1]++, null),
        recruiterReportUrl: `/api/interview/session/${sessionId}/recruiter-report`,
        rawDataUrl: `/api/interview/session/${sessionId}/raw-data`
      },
      metadata: {
        completedAt: new Date().toISOString(),
        processingTime: result.metadata.generationDuration,
        apiVersion: '1.0.0'
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_c50xt7rv6().s[37]++;
    console.error(`[API] Error completing interview:`, error);
    /* istanbul ignore next */
    cov_c50xt7rv6().s[38]++;
    if (error.code === 'SESSION_NOT_FOUND') {
      /* istanbul ignore next */
      cov_c50xt7rv6().b[19][0]++;
      cov_c50xt7rv6().s[39]++;
      return server_1.NextResponse.json({
        success: false,
        error: 'Session not found',
        sessionId: resolvedParams.id
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_c50xt7rv6().b[19][1]++;
    }
    cov_c50xt7rv6().s[40]++;
    return server_1.NextResponse.json({
      success: false,
      error:
      /* istanbul ignore next */
      (cov_c50xt7rv6().b[20][0]++, error.message) ||
      /* istanbul ignore next */
      (cov_c50xt7rv6().b[20][1]++, 'Failed to complete interview'),
      code:
      /* istanbul ignore next */
      (cov_c50xt7rv6().b[21][0]++, error.code) ||
      /* istanbul ignore next */
      (cov_c50xt7rv6().b[21][1]++, 'UNKNOWN_ERROR'),
      sessionId: resolvedParams.id,
      recoverable:
      /* istanbul ignore next */
      (cov_c50xt7rv6().b[23][0]++, (_c = error.recoverable) !== null) &&
      /* istanbul ignore next */
      (cov_c50xt7rv6().b[23][1]++, _c !== void 0) ?
      /* istanbul ignore next */
      (cov_c50xt7rv6().b[22][0]++, _c) :
      /* istanbul ignore next */
      (cov_c50xt7rv6().b[22][1]++, false)
    }, {
      status: 500
    });
  }
}
/**
 * GET /api/interview/session/[id]/complete
 *
 * Get completion status and available options
 */
async function GET(request, {
  params
}) {
  /* istanbul ignore next */
  cov_c50xt7rv6().f[3]++;
  const resolvedParams =
  /* istanbul ignore next */
  (cov_c50xt7rv6().s[41]++, await params);
  const sessionId =
  /* istanbul ignore next */
  (cov_c50xt7rv6().s[42]++, resolvedParams.id);
  /* istanbul ignore next */
  cov_c50xt7rv6().s[43]++;
  try {
    // Get current session status
    const status =
    /* istanbul ignore next */
    (cov_c50xt7rv6().s[44]++, await getWorkflow().getStatus(sessionId));
    const canComplete =
    /* istanbul ignore next */
    (cov_c50xt7rv6().s[45]++,
    /* istanbul ignore next */
    (cov_c50xt7rv6().b[24][0]++, status.state === 'in-progress') ||
    /* istanbul ignore next */
    (cov_c50xt7rv6().b[24][1]++, status.state === 'completed'));
    const completionOptions =
    /* istanbul ignore next */
    (cov_c50xt7rv6().s[46]++, {
      canForceComplete: status.state !== 'completed',
      canGenerateReport: true,
      canProvideCandidateFeedback: true,
      availableExports: ['pdf', 'candidate-summary', 'recruiter-report', 'raw-data']
    });
    /* istanbul ignore next */
    cov_c50xt7rv6().s[47]++;
    return server_1.NextResponse.json({
      sessionId,
      canComplete,
      currentState: status.state,
      completionOptions,
      progress: {
        stagesCompleted: status.stages.filter(s => {
          /* istanbul ignore next */
          cov_c50xt7rv6().f[4]++;
          cov_c50xt7rv6().s[48]++;
          return s.status === 'completed';
        }).length,
        totalStages: status.totalStages,
        progressPercentage: status.progressPercentage
      },
      example: {
        force: false,
        includeReport: true,
        candidateFeedback: true,
        sharing: {
          recruiterId: 'recruiter_123',
          managerEmails: ['manager@company.com']
        }
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_c50xt7rv6().s[49]++;
    if (error.code === 'SESSION_NOT_FOUND') {
      /* istanbul ignore next */
      cov_c50xt7rv6().b[25][0]++;
      cov_c50xt7rv6().s[50]++;
      return server_1.NextResponse.json({
        error: 'Session not found',
        sessionId: resolvedParams.id
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_c50xt7rv6().b[25][1]++;
    }
    cov_c50xt7rv6().s[51]++;
    return server_1.NextResponse.json({
      error:
      /* istanbul ignore next */
      (cov_c50xt7rv6().b[26][0]++, error.message) ||
      /* istanbul ignore next */
      (cov_c50xt7rv6().b[26][1]++, 'Failed to get completion info'),
      sessionId: resolvedParams.id
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,