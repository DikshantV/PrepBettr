77c58a9de75d769490f8f4af715daff3
"use strict";
'use client';

/* istanbul ignore next */
function cov_av8saph0q() {
  var path = "/Users/dikshantvashistha/PrepBettr/lib/hooks/useUnifiedConfig.ts";
  var hash = "ae16d6ab8a84733064291fe32fd2ededfc38cfc7";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dikshantvashistha/PrepBettr/lib/hooks/useUnifiedConfig.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "1": {
        start: {
          line: 4,
          column: 0
        },
        end: {
          line: 4,
          column: 44
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 46
        }
      },
      "3": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 40
        }
      },
      "4": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 7,
          column: 42
        }
      },
      "5": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 36
        }
      },
      "6": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 40
        }
      },
      "7": {
        start: {
          line: 16,
          column: 16
        },
        end: {
          line: 16,
          column: 32
        }
      },
      "8": {
        start: {
          line: 22,
          column: 30
        },
        end: {
          line: 22,
          column: 65
        }
      },
      "9": {
        start: {
          line: 23,
          column: 34
        },
        end: {
          line: 23,
          column: 61
        }
      },
      "10": {
        start: {
          line: 24,
          column: 30
        },
        end: {
          line: 24,
          column: 57
        }
      },
      "11": {
        start: {
          line: 25,
          column: 23
        },
        end: {
          line: 44,
          column: 27
        }
      },
      "12": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 43,
          column: 9
        }
      },
      "13": {
        start: {
          line: 27,
          column: 12
        },
        end: {
          line: 27,
          column: 29
        }
      },
      "14": {
        start: {
          line: 28,
          column: 12
        },
        end: {
          line: 28,
          column: 27
        }
      },
      "15": {
        start: {
          line: 30,
          column: 29
        },
        end: {
          line: 30,
          column: 82
        }
      },
      "16": {
        start: {
          line: 31,
          column: 12
        },
        end: {
          line: 33,
          column: 13
        }
      },
      "17": {
        start: {
          line: 32,
          column: 16
        },
        end: {
          line: 32,
          column: 82
        }
      },
      "18": {
        start: {
          line: 34,
          column: 25
        },
        end: {
          line: 34,
          column: 46
        }
      },
      "19": {
        start: {
          line: 35,
          column: 12
        },
        end: {
          line: 35,
          column: 75
        }
      },
      "20": {
        start: {
          line: 38,
          column: 12
        },
        end: {
          line: 38,
          column: 75
        }
      },
      "21": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 39,
          column: 35
        }
      },
      "22": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 42,
          column: 30
        }
      },
      "23": {
        start: {
          line: 45,
          column: 20
        },
        end: {
          line: 47,
          column: 5
        }
      },
      "24": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 46,
          column: 27
        }
      },
      "25": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 50,
          column: 21
        }
      },
      "26": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 21
        }
      },
      "27": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 51,
          column: 46
        }
      },
      "28": {
        start: {
          line: 57,
          column: 32
        },
        end: {
          line: 57,
          column: 57
        }
      },
      "29": {
        start: {
          line: 58,
          column: 34
        },
        end: {
          line: 58,
          column: 61
        }
      },
      "30": {
        start: {
          line: 59,
          column: 30
        },
        end: {
          line: 59,
          column: 57
        }
      },
      "31": {
        start: {
          line: 60,
          column: 24
        },
        end: {
          line: 90,
          column: 29
        }
      },
      "32": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 89,
          column: 9
        }
      },
      "33": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 62,
          column: 29
        }
      },
      "34": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 63,
          column: 27
        }
      },
      "35": {
        start: {
          line: 65,
          column: 35
        },
        end: {
          line: 75,
          column: 14
        }
      },
      "36": {
        start: {
          line: 66,
          column: 33
        },
        end: {
          line: 66,
          column: 94
        }
      },
      "37": {
        start: {
          line: 67,
          column: 16
        },
        end: {
          line: 69,
          column: 17
        }
      },
      "38": {
        start: {
          line: 68,
          column: 20
        },
        end: {
          line: 68,
          column: 105
        }
      },
      "39": {
        start: {
          line: 70,
          column: 29
        },
        end: {
          line: 70,
          column: 50
        }
      },
      "40": {
        start: {
          line: 71,
          column: 16
        },
        end: {
          line: 74,
          column: 18
        }
      },
      "41": {
        start: {
          line: 76,
          column: 34
        },
        end: {
          line: 76,
          column: 67
        }
      },
      "42": {
        start: {
          line: 77,
          column: 27
        },
        end: {
          line: 77,
          column: 29
        }
      },
      "43": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 80,
          column: 15
        }
      },
      "44": {
        start: {
          line: 79,
          column: 16
        },
        end: {
          line: 79,
          column: 36
        }
      },
      "45": {
        start: {
          line: 81,
          column: 12
        },
        end: {
          line: 81,
          column: 30
        }
      },
      "46": {
        start: {
          line: 84,
          column: 12
        },
        end: {
          line: 84,
          column: 75
        }
      },
      "47": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 85,
          column: 56
        }
      },
      "48": {
        start: {
          line: 88,
          column: 12
        },
        end: {
          line: 88,
          column: 30
        }
      },
      "49": {
        start: {
          line: 91,
          column: 20
        },
        end: {
          line: 93,
          column: 5
        }
      },
      "50": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 92,
          column: 28
        }
      },
      "51": {
        start: {
          line: 94,
          column: 4
        },
        end: {
          line: 96,
          column: 22
        }
      },
      "52": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 95,
          column: 22
        }
      },
      "53": {
        start: {
          line: 97,
          column: 4
        },
        end: {
          line: 97,
          column: 47
        }
      },
      "54": {
        start: {
          line: 103,
          column: 22
        },
        end: {
          line: 103,
          column: 44
        }
      },
      "55": {
        start: {
          line: 104,
          column: 38
        },
        end: {
          line: 104,
          column: 72
        }
      },
      "56": {
        start: {
          line: 105,
          column: 4
        },
        end: {
          line: 109,
          column: 6
        }
      },
      "57": {
        start: {
          line: 115,
          column: 23
        },
        end: {
          line: 115,
          column: 72
        }
      },
      "58": {
        start: {
          line: 115,
          column: 45
        },
        end: {
          line: 115,
          column: 71
        }
      },
      "59": {
        start: {
          line: 116,
          column: 25
        },
        end: {
          line: 119,
          column: 10
        }
      },
      "60": {
        start: {
          line: 117,
          column: 8
        },
        end: {
          line: 117,
          column: 26
        }
      },
      "61": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 118,
          column: 19
        }
      },
      "62": {
        start: {
          line: 120,
          column: 39
        },
        end: {
          line: 120,
          column: 82
        }
      },
      "63": {
        start: {
          line: 122,
          column: 18
        },
        end: {
          line: 122,
          column: 20
        }
      },
      "64": {
        start: {
          line: 123,
          column: 4
        },
        end: {
          line: 126,
          column: 7
        }
      },
      "65": {
        start: {
          line: 124,
          column: 26
        },
        end: {
          line: 124,
          column: 43
        }
      },
      "66": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 125,
          column: 55
        }
      },
      "67": {
        start: {
          line: 127,
          column: 4
        },
        end: {
          line: 127,
          column: 37
        }
      },
      "68": {
        start: {
          line: 133,
          column: 23
        },
        end: {
          line: 138,
          column: 5
        }
      },
      "69": {
        start: {
          line: 139,
          column: 39
        },
        end: {
          line: 144,
          column: 6
        }
      },
      "70": {
        start: {
          line: 145,
          column: 4
        },
        end: {
          line: 152,
          column: 6
        }
      },
      "71": {
        start: {
          line: 158,
          column: 23
        },
        end: {
          line: 163,
          column: 5
        }
      },
      "72": {
        start: {
          line: 164,
          column: 39
        },
        end: {
          line: 169,
          column: 6
        }
      },
      "73": {
        start: {
          line: 170,
          column: 4
        },
        end: {
          line: 177,
          column: 6
        }
      },
      "74": {
        start: {
          line: 179,
          column: 0
        },
        end: {
          line: 179,
          column: 35
        }
      }
    },
    fnMap: {
      "0": {
        name: "useUnifiedConfig",
        decl: {
          start: {
            line: 21,
            column: 9
          },
          end: {
            line: 21,
            column: 25
          }
        },
        loc: {
          start: {
            line: 21,
            column: 45
          },
          end: {
            line: 52,
            column: 1
          }
        },
        line: 21
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 25,
            column: 48
          },
          end: {
            line: 25,
            column: 49
          }
        },
        loc: {
          start: {
            line: 25,
            column: 60
          },
          end: {
            line: 44,
            column: 5
          }
        },
        line: 25
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 45,
            column: 20
          },
          end: {
            line: 45,
            column: 21
          }
        },
        loc: {
          start: {
            line: 45,
            column: 32
          },
          end: {
            line: 47,
            column: 5
          }
        },
        line: 45
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 48,
            column: 27
          },
          end: {
            line: 48,
            column: 28
          }
        },
        loc: {
          start: {
            line: 48,
            column: 33
          },
          end: {
            line: 50,
            column: 5
          }
        },
        line: 48
      },
      "4": {
        name: "useUnifiedConfigs",
        decl: {
          start: {
            line: 56,
            column: 9
          },
          end: {
            line: 56,
            column: 26
          }
        },
        loc: {
          start: {
            line: 56,
            column: 48
          },
          end: {
            line: 98,
            column: 1
          }
        },
        line: 56
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 60,
            column: 49
          },
          end: {
            line: 60,
            column: 50
          }
        },
        loc: {
          start: {
            line: 60,
            column: 61
          },
          end: {
            line: 90,
            column: 5
          }
        },
        line: 60
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 65,
            column: 44
          },
          end: {
            line: 65,
            column: 45
          }
        },
        loc: {
          start: {
            line: 65,
            column: 59
          },
          end: {
            line: 75,
            column: 13
          }
        },
        line: 65
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 78,
            column: 34
          },
          end: {
            line: 78,
            column: 35
          }
        },
        loc: {
          start: {
            line: 78,
            column: 54
          },
          end: {
            line: 80,
            column: 13
          }
        },
        line: 78
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 91,
            column: 20
          },
          end: {
            line: 91,
            column: 21
          }
        },
        loc: {
          start: {
            line: 91,
            column: 32
          },
          end: {
            line: 93,
            column: 5
          }
        },
        line: 91
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 94,
            column: 27
          },
          end: {
            line: 94,
            column: 28
          }
        },
        loc: {
          start: {
            line: 94,
            column: 33
          },
          end: {
            line: 96,
            column: 5
          }
        },
        line: 94
      },
      "10": {
        name: "useFeatureFlag",
        decl: {
          start: {
            line: 102,
            column: 9
          },
          end: {
            line: 102,
            column: 23
          }
        },
        loc: {
          start: {
            line: 102,
            column: 34
          },
          end: {
            line: 110,
            column: 1
          }
        },
        line: 102
      },
      "11": {
        name: "useFeatureFlags",
        decl: {
          start: {
            line: 114,
            column: 9
          },
          end: {
            line: 114,
            column: 24
          }
        },
        loc: {
          start: {
            line: 114,
            column: 36
          },
          end: {
            line: 128,
            column: 1
          }
        },
        line: 114
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 115,
            column: 37
          },
          end: {
            line: 115,
            column: 38
          }
        },
        loc: {
          start: {
            line: 115,
            column: 45
          },
          end: {
            line: 115,
            column: 71
          }
        },
        line: 115
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 116,
            column: 42
          },
          end: {
            line: 116,
            column: 43
          }
        },
        loc: {
          start: {
            line: 116,
            column: 57
          },
          end: {
            line: 119,
            column: 5
          }
        },
        line: 116
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 123,
            column: 22
          },
          end: {
            line: 123,
            column: 23
          }
        },
        loc: {
          start: {
            line: 123,
            column: 43
          },
          end: {
            line: 126,
            column: 5
          }
        },
        line: 123
      },
      "15": {
        name: "useAppConfig",
        decl: {
          start: {
            line: 132,
            column: 9
          },
          end: {
            line: 132,
            column: 21
          }
        },
        loc: {
          start: {
            line: 132,
            column: 24
          },
          end: {
            line: 153,
            column: 1
          }
        },
        line: 132
      },
      "16": {
        name: "useQuotaConfig",
        decl: {
          start: {
            line: 157,
            column: 9
          },
          end: {
            line: 157,
            column: 23
          }
        },
        loc: {
          start: {
            line: 157,
            column: 26
          },
          end: {
            line: 178,
            column: 1
          }
        },
        line: 157
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 31,
            column: 12
          },
          end: {
            line: 33,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 12
          },
          end: {
            line: 33,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 31
      },
      "1": {
        loc: {
          start: {
            line: 35,
            column: 21
          },
          end: {
            line: 35,
            column: 73
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 35,
            column: 48
          },
          end: {
            line: 35,
            column: 58
          }
        }, {
          start: {
            line: 35,
            column: 61
          },
          end: {
            line: 35,
            column: 73
          }
        }],
        line: 35
      },
      "2": {
        loc: {
          start: {
            line: 38,
            column: 21
          },
          end: {
            line: 38,
            column: 73
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 38,
            column: 44
          },
          end: {
            line: 38,
            column: 55
          }
        }, {
          start: {
            line: 38,
            column: 58
          },
          end: {
            line: 38,
            column: 73
          }
        }],
        line: 38
      },
      "3": {
        loc: {
          start: {
            line: 67,
            column: 16
          },
          end: {
            line: 69,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 67,
            column: 16
          },
          end: {
            line: 69,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 67
      },
      "4": {
        loc: {
          start: {
            line: 73,
            column: 27
          },
          end: {
            line: 73,
            column: 147
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 73,
            column: 54
          },
          end: {
            line: 73,
            column: 64
          }
        }, {
          start: {
            line: 73,
            column: 67
          },
          end: {
            line: 73,
            column: 147
          }
        }],
        line: 73
      },
      "5": {
        loc: {
          start: {
            line: 73,
            column: 67
          },
          end: {
            line: 73,
            column: 147
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 73,
            column: 120
          },
          end: {
            line: 73,
            column: 126
          }
        }, {
          start: {
            line: 73,
            column: 129
          },
          end: {
            line: 73,
            column: 147
          }
        }],
        line: 73
      },
      "6": {
        loc: {
          start: {
            line: 73,
            column: 67
          },
          end: {
            line: 73,
            column: 117
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 73,
            column: 67
          },
          end: {
            line: 73,
            column: 89
          }
        }, {
          start: {
            line: 73,
            column: 93
          },
          end: {
            line: 73,
            column: 117
          }
        }],
        line: 73
      },
      "7": {
        loc: {
          start: {
            line: 84,
            column: 21
          },
          end: {
            line: 84,
            column: 73
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 84,
            column: 44
          },
          end: {
            line: 84,
            column: 55
          }
        }, {
          start: {
            line: 84,
            column: 58
          },
          end: {
            line: 84,
            column: 73
          }
        }],
        line: 84
      },
      "8": {
        loc: {
          start: {
            line: 125,
            column: 27
          },
          end: {
            line: 125,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 125,
            column: 27
          },
          end: {
            line: 125,
            column: 44
          }
        }, {
          start: {
            line: 125,
            column: 48
          },
          end: {
            line: 125,
            column: 53
          }
        }],
        line: 125
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/dikshantvashistha/PrepBettr/lib/hooks/useUnifiedConfig.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/dikshantvashistha/PrepBettr/lib/hooks/useUnifiedConfig.ts"],
      sourcesContent: ["'use client';\n\n/**\n * Client-side React hook for unified configuration service\n * \n * This provides a clean React interface to the unified config service\n * with proper state management, caching, and error handling.\n */\n\nimport { useState, useEffect, useCallback } from 'react';\n\nexport interface UseUnifiedConfigResult<T> {\n  value: T;\n  loading: boolean;\n  error: string | null;\n  refresh: () => Promise<void>;\n}\n\n/**\n * Hook to get a single configuration value with reactivity using API calls\n * This avoids bundling server-only modules for the client\n */\nexport function useUnifiedConfig<T = any>(\n  key: string,\n  defaultValue?: T\n): UseUnifiedConfigResult<T> {\n  const [value, setValue] = useState<T>(defaultValue as T);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  const fetchValue = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      // Use API endpoint instead of direct service import\n      const response = await fetch(`/api/config/${encodeURIComponent(key)}`);\n      if (!response.ok) {\n        throw new Error(`Failed to fetch config: ${response.statusText}`);\n      }\n      \n      const data = await response.json();\n      setValue(data.value !== undefined ? data.value : defaultValue as T);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Unknown error');\n      setValue(defaultValue as T);\n    } finally {\n      setLoading(false);\n    }\n  }, [key, defaultValue]);\n\n  const refresh = async () => {\n    await fetchValue();\n  };\n\n  useEffect(() => {\n    fetchValue();\n  }, [fetchValue]);\n\n  return { value, loading, error, refresh };\n}\n\n/**\n * Hook to get multiple configuration values at once\n */\nexport function useUnifiedConfigs<T extends Record<string, any>>(\n  keys: Array<keyof T>,\n  defaultValues?: Partial<T>\n): {\n  values: T;\n  loading: boolean;\n  error: string | null;\n  refresh: () => Promise<void>;\n} {\n  const [values, setValues] = useState<T>({} as T);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  const fetchValues = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      // Use API endpoints for each config key\n      const configPromises = keys.map(async (key) => {\n        const response = await fetch(`/api/config/${encodeURIComponent(String(key))}`);\n        if (!response.ok) {\n          throw new Error(`Failed to fetch config for ${String(key)}: ${response.statusText}`);\n        }\n        const data = await response.json();\n        return {\n          key,\n          value: data.value !== undefined ? data.value : defaultValues?.[key]\n        };\n      });\n      \n      const configResults = await Promise.all(configPromises);\n      \n      const result = {} as T;\n      configResults.forEach(({ key, value }) => {\n        result[key] = value;\n      });\n\n      setValues(result);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Unknown error');\n      setValues({ ...defaultValues } as T);\n    } finally {\n      setLoading(false);\n    }\n  }, [keys, defaultValues]);\n\n  const refresh = async () => {\n    await fetchValues();\n  };\n\n  useEffect(() => {\n    fetchValues();\n  }, [fetchValues]);\n\n  return { values, loading, error, refresh };\n}\n\n/**\n * Hook for feature flags specifically\n */\nexport function useFeatureFlag(flagName: string): {\n  enabled: boolean;\n  loading: boolean;\n  error: string | null;\n} {\n  const configKey = `features.${flagName}`;\n  const { value, loading, error } = useUnifiedConfig<boolean>(configKey, false);\n\n  return {\n    enabled: value,\n    loading,\n    error\n  };\n}\n\n/**\n * Hook for multiple feature flags\n */\nexport function useFeatureFlags<T extends Record<string, boolean>>(\n  flagNames: Array<keyof T>\n): {\n  flags: T;\n  loading: boolean;\n  error: string | null;\n} {\n  const configKeys = flagNames.map(name => `features.${String(name)}`);\n  const defaultFlags = flagNames.reduce((acc, name) => {\n    acc[name] = false as T[keyof T];\n    return acc;\n  }, {} as T);\n\n  const { values, loading, error } = useUnifiedConfigs(configKeys, defaultFlags);\n\n  // Transform config keys back to flag names\n  const flags = {} as T;\n  flagNames.forEach((flagName, index) => {\n    const configKey = configKeys[index];\n    flags[flagName] = (values[configKey] || false) as T[keyof T];\n  });\n\n  return { flags, loading, error };\n}\n\n/**\n * Hook for application configuration\n */\nexport function useAppConfig() {\n  const configKeys = [\n    'core.app.environment',\n    'core.app.version',\n    'core.app.debug',\n    'core.app.maintenanceMode'\n  ] as const;\n\n  type ConfigKeys = typeof configKeys[number];\n  type ConfigValues = {\n    [K in ConfigKeys]: K extends 'core.app.environment' | 'core.app.version' \n      ? string \n      : boolean\n  };\n\n  const { values, loading, error } = useUnifiedConfigs<ConfigValues>([...configKeys], {\n    'core.app.environment': 'development',\n    'core.app.version': '1.0.0',\n    'core.app.debug': false,\n    'core.app.maintenanceMode': false\n  } as ConfigValues);\n\n  return {\n    environment: values['core.app.environment'] as 'development' | 'staging' | 'production',\n    version: values['core.app.version'] as string,\n    debug: values['core.app.debug'] as boolean,\n    maintenanceMode: values['core.app.maintenanceMode'] as boolean,\n    loading,\n    error\n  };\n}\n\n/**\n * Hook for quotas and limits\n */\nexport function useQuotaConfig() {\n  const configKeys = [\n    'quotas.freeInterviews',\n    'quotas.freeResumes',\n    'quotas.premiumInterviews',\n    'quotas.premiumResumes'\n  ] as const;\n\n  type QuotaKeys = typeof configKeys[number];\n  type QuotaValues = Record<QuotaKeys, number>;\n\n  const { values, loading, error } = useUnifiedConfigs<QuotaValues>([...configKeys], {\n    'quotas.freeInterviews': 3,\n    'quotas.freeResumes': 2,\n    'quotas.premiumInterviews': 100,\n    'quotas.premiumResumes': 20\n  } as QuotaValues);\n\n  return {\n    freeInterviews: values['quotas.freeInterviews'] as number,\n    freeResumes: values['quotas.freeResumes'] as number,\n    premiumInterviews: values['quotas.premiumInterviews'] as number,\n    premiumResumes: values['quotas.premiumResumes'] as number,\n    loading,\n    error\n  };\n}\n\nexport default useUnifiedConfig;\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ae16d6ab8a84733064291fe32fd2ededfc38cfc7"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_av8saph0q = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_av8saph0q();
cov_av8saph0q().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_av8saph0q().s[1]++;
exports.useUnifiedConfig = useUnifiedConfig;
/* istanbul ignore next */
cov_av8saph0q().s[2]++;
exports.useUnifiedConfigs = useUnifiedConfigs;
/* istanbul ignore next */
cov_av8saph0q().s[3]++;
exports.useFeatureFlag = useFeatureFlag;
/* istanbul ignore next */
cov_av8saph0q().s[4]++;
exports.useFeatureFlags = useFeatureFlags;
/* istanbul ignore next */
cov_av8saph0q().s[5]++;
exports.useAppConfig = useAppConfig;
/* istanbul ignore next */
cov_av8saph0q().s[6]++;
exports.useQuotaConfig = useQuotaConfig;
/**
 * Client-side React hook for unified configuration service
 *
 * This provides a clean React interface to the unified config service
 * with proper state management, caching, and error handling.
 */
const react_1 =
/* istanbul ignore next */
(cov_av8saph0q().s[7]++, require("react"));
/**
 * Hook to get a single configuration value with reactivity using API calls
 * This avoids bundling server-only modules for the client
 */
function useUnifiedConfig(key, defaultValue) {
  /* istanbul ignore next */
  cov_av8saph0q().f[0]++;
  const [value, setValue] =
  /* istanbul ignore next */
  (cov_av8saph0q().s[8]++, (0, react_1.useState)(defaultValue));
  const [loading, setLoading] =
  /* istanbul ignore next */
  (cov_av8saph0q().s[9]++, (0, react_1.useState)(true));
  const [error, setError] =
  /* istanbul ignore next */
  (cov_av8saph0q().s[10]++, (0, react_1.useState)(null));
  const fetchValue =
  /* istanbul ignore next */
  (cov_av8saph0q().s[11]++, (0, react_1.useCallback)(async () => {
    /* istanbul ignore next */
    cov_av8saph0q().f[1]++;
    cov_av8saph0q().s[12]++;
    try {
      /* istanbul ignore next */
      cov_av8saph0q().s[13]++;
      setLoading(true);
      /* istanbul ignore next */
      cov_av8saph0q().s[14]++;
      setError(null);
      // Use API endpoint instead of direct service import
      const response =
      /* istanbul ignore next */
      (cov_av8saph0q().s[15]++, await fetch(`/api/config/${encodeURIComponent(key)}`));
      /* istanbul ignore next */
      cov_av8saph0q().s[16]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_av8saph0q().b[0][0]++;
        cov_av8saph0q().s[17]++;
        throw new Error(`Failed to fetch config: ${response.statusText}`);
      } else
      /* istanbul ignore next */
      {
        cov_av8saph0q().b[0][1]++;
      }
      const data =
      /* istanbul ignore next */
      (cov_av8saph0q().s[18]++, await response.json());
      /* istanbul ignore next */
      cov_av8saph0q().s[19]++;
      setValue(data.value !== undefined ?
      /* istanbul ignore next */
      (cov_av8saph0q().b[1][0]++, data.value) :
      /* istanbul ignore next */
      (cov_av8saph0q().b[1][1]++, defaultValue));
    } catch (err) {
      /* istanbul ignore next */
      cov_av8saph0q().s[20]++;
      setError(err instanceof Error ?
      /* istanbul ignore next */
      (cov_av8saph0q().b[2][0]++, err.message) :
      /* istanbul ignore next */
      (cov_av8saph0q().b[2][1]++, 'Unknown error'));
      /* istanbul ignore next */
      cov_av8saph0q().s[21]++;
      setValue(defaultValue);
    } finally {
      /* istanbul ignore next */
      cov_av8saph0q().s[22]++;
      setLoading(false);
    }
  }, [key, defaultValue]));
  /* istanbul ignore next */
  cov_av8saph0q().s[23]++;
  const refresh = async () => {
    /* istanbul ignore next */
    cov_av8saph0q().f[2]++;
    cov_av8saph0q().s[24]++;
    await fetchValue();
  };
  /* istanbul ignore next */
  cov_av8saph0q().s[25]++;
  (0, react_1.useEffect)(() => {
    /* istanbul ignore next */
    cov_av8saph0q().f[3]++;
    cov_av8saph0q().s[26]++;
    fetchValue();
  }, [fetchValue]);
  /* istanbul ignore next */
  cov_av8saph0q().s[27]++;
  return {
    value,
    loading,
    error,
    refresh
  };
}
/**
 * Hook to get multiple configuration values at once
 */
function useUnifiedConfigs(keys, defaultValues) {
  /* istanbul ignore next */
  cov_av8saph0q().f[4]++;
  const [values, setValues] =
  /* istanbul ignore next */
  (cov_av8saph0q().s[28]++, (0, react_1.useState)({}));
  const [loading, setLoading] =
  /* istanbul ignore next */
  (cov_av8saph0q().s[29]++, (0, react_1.useState)(true));
  const [error, setError] =
  /* istanbul ignore next */
  (cov_av8saph0q().s[30]++, (0, react_1.useState)(null));
  const fetchValues =
  /* istanbul ignore next */
  (cov_av8saph0q().s[31]++, (0, react_1.useCallback)(async () => {
    /* istanbul ignore next */
    cov_av8saph0q().f[5]++;
    cov_av8saph0q().s[32]++;
    try {
      /* istanbul ignore next */
      cov_av8saph0q().s[33]++;
      setLoading(true);
      /* istanbul ignore next */
      cov_av8saph0q().s[34]++;
      setError(null);
      // Use API endpoints for each config key
      const configPromises =
      /* istanbul ignore next */
      (cov_av8saph0q().s[35]++, keys.map(async key => {
        /* istanbul ignore next */
        cov_av8saph0q().f[6]++;
        const response =
        /* istanbul ignore next */
        (cov_av8saph0q().s[36]++, await fetch(`/api/config/${encodeURIComponent(String(key))}`));
        /* istanbul ignore next */
        cov_av8saph0q().s[37]++;
        if (!response.ok) {
          /* istanbul ignore next */
          cov_av8saph0q().b[3][0]++;
          cov_av8saph0q().s[38]++;
          throw new Error(`Failed to fetch config for ${String(key)}: ${response.statusText}`);
        } else
        /* istanbul ignore next */
        {
          cov_av8saph0q().b[3][1]++;
        }
        const data =
        /* istanbul ignore next */
        (cov_av8saph0q().s[39]++, await response.json());
        /* istanbul ignore next */
        cov_av8saph0q().s[40]++;
        return {
          key,
          value: data.value !== undefined ?
          /* istanbul ignore next */
          (cov_av8saph0q().b[4][0]++, data.value) :
          /* istanbul ignore next */
          (cov_av8saph0q().b[4][1]++,
          /* istanbul ignore next */
          (cov_av8saph0q().b[6][0]++, defaultValues === null) ||
          /* istanbul ignore next */
          (cov_av8saph0q().b[6][1]++, defaultValues === void 0) ?
          /* istanbul ignore next */
          (cov_av8saph0q().b[5][0]++, void 0) :
          /* istanbul ignore next */
          (cov_av8saph0q().b[5][1]++, defaultValues[key]))
        };
      }));
      const configResults =
      /* istanbul ignore next */
      (cov_av8saph0q().s[41]++, await Promise.all(configPromises));
      const result =
      /* istanbul ignore next */
      (cov_av8saph0q().s[42]++, {});
      /* istanbul ignore next */
      cov_av8saph0q().s[43]++;
      configResults.forEach(({
        key,
        value
      }) => {
        /* istanbul ignore next */
        cov_av8saph0q().f[7]++;
        cov_av8saph0q().s[44]++;
        result[key] = value;
      });
      /* istanbul ignore next */
      cov_av8saph0q().s[45]++;
      setValues(result);
    } catch (err) {
      /* istanbul ignore next */
      cov_av8saph0q().s[46]++;
      setError(err instanceof Error ?
      /* istanbul ignore next */
      (cov_av8saph0q().b[7][0]++, err.message) :
      /* istanbul ignore next */
      (cov_av8saph0q().b[7][1]++, 'Unknown error'));
      /* istanbul ignore next */
      cov_av8saph0q().s[47]++;
      setValues(Object.assign({}, defaultValues));
    } finally {
      /* istanbul ignore next */
      cov_av8saph0q().s[48]++;
      setLoading(false);
    }
  }, [keys, defaultValues]));
  /* istanbul ignore next */
  cov_av8saph0q().s[49]++;
  const refresh = async () => {
    /* istanbul ignore next */
    cov_av8saph0q().f[8]++;
    cov_av8saph0q().s[50]++;
    await fetchValues();
  };
  /* istanbul ignore next */
  cov_av8saph0q().s[51]++;
  (0, react_1.useEffect)(() => {
    /* istanbul ignore next */
    cov_av8saph0q().f[9]++;
    cov_av8saph0q().s[52]++;
    fetchValues();
  }, [fetchValues]);
  /* istanbul ignore next */
  cov_av8saph0q().s[53]++;
  return {
    values,
    loading,
    error,
    refresh
  };
}
/**
 * Hook for feature flags specifically
 */
function useFeatureFlag(flagName) {
  /* istanbul ignore next */
  cov_av8saph0q().f[10]++;
  const configKey =
  /* istanbul ignore next */
  (cov_av8saph0q().s[54]++, `features.${flagName}`);
  const {
    value,
    loading,
    error
  } =
  /* istanbul ignore next */
  (cov_av8saph0q().s[55]++, useUnifiedConfig(configKey, false));
  /* istanbul ignore next */
  cov_av8saph0q().s[56]++;
  return {
    enabled: value,
    loading,
    error
  };
}
/**
 * Hook for multiple feature flags
 */
function useFeatureFlags(flagNames) {
  /* istanbul ignore next */
  cov_av8saph0q().f[11]++;
  const configKeys =
  /* istanbul ignore next */
  (cov_av8saph0q().s[57]++, flagNames.map(name => {
    /* istanbul ignore next */
    cov_av8saph0q().f[12]++;
    cov_av8saph0q().s[58]++;
    return `features.${String(name)}`;
  }));
  const defaultFlags =
  /* istanbul ignore next */
  (cov_av8saph0q().s[59]++, flagNames.reduce((acc, name) => {
    /* istanbul ignore next */
    cov_av8saph0q().f[13]++;
    cov_av8saph0q().s[60]++;
    acc[name] = false;
    /* istanbul ignore next */
    cov_av8saph0q().s[61]++;
    return acc;
  }, {}));
  const {
    values,
    loading,
    error
  } =
  /* istanbul ignore next */
  (cov_av8saph0q().s[62]++, useUnifiedConfigs(configKeys, defaultFlags));
  // Transform config keys back to flag names
  const flags =
  /* istanbul ignore next */
  (cov_av8saph0q().s[63]++, {});
  /* istanbul ignore next */
  cov_av8saph0q().s[64]++;
  flagNames.forEach((flagName, index) => {
    /* istanbul ignore next */
    cov_av8saph0q().f[14]++;
    const configKey =
    /* istanbul ignore next */
    (cov_av8saph0q().s[65]++, configKeys[index]);
    /* istanbul ignore next */
    cov_av8saph0q().s[66]++;
    flags[flagName] =
    /* istanbul ignore next */
    (cov_av8saph0q().b[8][0]++, values[configKey]) ||
    /* istanbul ignore next */
    (cov_av8saph0q().b[8][1]++, false);
  });
  /* istanbul ignore next */
  cov_av8saph0q().s[67]++;
  return {
    flags,
    loading,
    error
  };
}
/**
 * Hook for application configuration
 */
function useAppConfig() {
  /* istanbul ignore next */
  cov_av8saph0q().f[15]++;
  const configKeys =
  /* istanbul ignore next */
  (cov_av8saph0q().s[68]++, ['core.app.environment', 'core.app.version', 'core.app.debug', 'core.app.maintenanceMode']);
  const {
    values,
    loading,
    error
  } =
  /* istanbul ignore next */
  (cov_av8saph0q().s[69]++, useUnifiedConfigs([...configKeys], {
    'core.app.environment': 'development',
    'core.app.version': '1.0.0',
    'core.app.debug': false,
    'core.app.maintenanceMode': false
  }));
  /* istanbul ignore next */
  cov_av8saph0q().s[70]++;
  return {
    environment: values['core.app.environment'],
    version: values['core.app.version'],
    debug: values['core.app.debug'],
    maintenanceMode: values['core.app.maintenanceMode'],
    loading,
    error
  };
}
/**
 * Hook for quotas and limits
 */
function useQuotaConfig() {
  /* istanbul ignore next */
  cov_av8saph0q().f[16]++;
  const configKeys =
  /* istanbul ignore next */
  (cov_av8saph0q().s[71]++, ['quotas.freeInterviews', 'quotas.freeResumes', 'quotas.premiumInterviews', 'quotas.premiumResumes']);
  const {
    values,
    loading,
    error
  } =
  /* istanbul ignore next */
  (cov_av8saph0q().s[72]++, useUnifiedConfigs([...configKeys], {
    'quotas.freeInterviews': 3,
    'quotas.freeResumes': 2,
    'quotas.premiumInterviews': 100,
    'quotas.premiumResumes': 20
  }));
  /* istanbul ignore next */
  cov_av8saph0q().s[73]++;
  return {
    freeInterviews: values['quotas.freeInterviews'],
    freeResumes: values['quotas.freeResumes'],
    premiumInterviews: values['quotas.premiumInterviews'],
    premiumResumes: values['quotas.premiumResumes'],
    loading,
    error
  };
}
/* istanbul ignore next */
cov_av8saph0q().s[74]++;
exports.default = useUnifiedConfig;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,