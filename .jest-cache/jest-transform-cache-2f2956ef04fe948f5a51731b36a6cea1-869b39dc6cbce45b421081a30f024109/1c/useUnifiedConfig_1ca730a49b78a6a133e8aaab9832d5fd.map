{"version":3,"names":["cov_av8saph0q","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","exports","useUnifiedConfig","useUnifiedConfigs","useFeatureFlag","useFeatureFlags","useAppConfig","useQuotaConfig","react_1","require","key","defaultValue","value","setValue","useState","loading","setLoading","error","setError","fetchValue","useCallback","response","fetch","encodeURIComponent","ok","Error","statusText","data","json","err","message","refresh","useEffect","keys","defaultValues","values","setValues","fetchValues","configPromises","map","String","configResults","Promise","all","result","forEach","Object","assign","flagName","configKey","enabled","flagNames","configKeys","defaultFlags","reduce","acc","flags","index","environment","debug","maintenanceMode","freeInterviews","freeResumes","premiumInterviews","premiumResumes","default"],"sources":["/Users/dikshantvashistha/PrepBettr/lib/hooks/useUnifiedConfig.ts"],"sourcesContent":["'use client';\n\n/**\n * Client-side React hook for unified configuration service\n * \n * This provides a clean React interface to the unified config service\n * with proper state management, caching, and error handling.\n */\n\nimport { useState, useEffect, useCallback } from 'react';\n\nexport interface UseUnifiedConfigResult<T> {\n  value: T;\n  loading: boolean;\n  error: string | null;\n  refresh: () => Promise<void>;\n}\n\n/**\n * Hook to get a single configuration value with reactivity using API calls\n * This avoids bundling server-only modules for the client\n */\nexport function useUnifiedConfig<T = any>(\n  key: string,\n  defaultValue?: T\n): UseUnifiedConfigResult<T> {\n  const [value, setValue] = useState<T>(defaultValue as T);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  const fetchValue = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      // Use API endpoint instead of direct service import\n      const response = await fetch(`/api/config/${encodeURIComponent(key)}`);\n      if (!response.ok) {\n        throw new Error(`Failed to fetch config: ${response.statusText}`);\n      }\n      \n      const data = await response.json();\n      setValue(data.value !== undefined ? data.value : defaultValue as T);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Unknown error');\n      setValue(defaultValue as T);\n    } finally {\n      setLoading(false);\n    }\n  }, [key, defaultValue]);\n\n  const refresh = async () => {\n    await fetchValue();\n  };\n\n  useEffect(() => {\n    fetchValue();\n  }, [fetchValue]);\n\n  return { value, loading, error, refresh };\n}\n\n/**\n * Hook to get multiple configuration values at once\n */\nexport function useUnifiedConfigs<T extends Record<string, any>>(\n  keys: Array<keyof T>,\n  defaultValues?: Partial<T>\n): {\n  values: T;\n  loading: boolean;\n  error: string | null;\n  refresh: () => Promise<void>;\n} {\n  const [values, setValues] = useState<T>({} as T);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  const fetchValues = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      // Use API endpoints for each config key\n      const configPromises = keys.map(async (key) => {\n        const response = await fetch(`/api/config/${encodeURIComponent(String(key))}`);\n        if (!response.ok) {\n          throw new Error(`Failed to fetch config for ${String(key)}: ${response.statusText}`);\n        }\n        const data = await response.json();\n        return {\n          key,\n          value: data.value !== undefined ? data.value : defaultValues?.[key]\n        };\n      });\n      \n      const configResults = await Promise.all(configPromises);\n      \n      const result = {} as T;\n      configResults.forEach(({ key, value }) => {\n        result[key] = value;\n      });\n\n      setValues(result);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Unknown error');\n      setValues({ ...defaultValues } as T);\n    } finally {\n      setLoading(false);\n    }\n  }, [keys, defaultValues]);\n\n  const refresh = async () => {\n    await fetchValues();\n  };\n\n  useEffect(() => {\n    fetchValues();\n  }, [fetchValues]);\n\n  return { values, loading, error, refresh };\n}\n\n/**\n * Hook for feature flags specifically\n */\nexport function useFeatureFlag(flagName: string): {\n  enabled: boolean;\n  loading: boolean;\n  error: string | null;\n} {\n  const configKey = `features.${flagName}`;\n  const { value, loading, error } = useUnifiedConfig<boolean>(configKey, false);\n\n  return {\n    enabled: value,\n    loading,\n    error\n  };\n}\n\n/**\n * Hook for multiple feature flags\n */\nexport function useFeatureFlags<T extends Record<string, boolean>>(\n  flagNames: Array<keyof T>\n): {\n  flags: T;\n  loading: boolean;\n  error: string | null;\n} {\n  const configKeys = flagNames.map(name => `features.${String(name)}`);\n  const defaultFlags = flagNames.reduce((acc, name) => {\n    acc[name] = false as T[keyof T];\n    return acc;\n  }, {} as T);\n\n  const { values, loading, error } = useUnifiedConfigs(configKeys, defaultFlags);\n\n  // Transform config keys back to flag names\n  const flags = {} as T;\n  flagNames.forEach((flagName, index) => {\n    const configKey = configKeys[index];\n    flags[flagName] = (values[configKey] || false) as T[keyof T];\n  });\n\n  return { flags, loading, error };\n}\n\n/**\n * Hook for application configuration\n */\nexport function useAppConfig() {\n  const configKeys = [\n    'core.app.environment',\n    'core.app.version',\n    'core.app.debug',\n    'core.app.maintenanceMode'\n  ] as const;\n\n  type ConfigKeys = typeof configKeys[number];\n  type ConfigValues = {\n    [K in ConfigKeys]: K extends 'core.app.environment' | 'core.app.version' \n      ? string \n      : boolean\n  };\n\n  const { values, loading, error } = useUnifiedConfigs<ConfigValues>([...configKeys], {\n    'core.app.environment': 'development',\n    'core.app.version': '1.0.0',\n    'core.app.debug': false,\n    'core.app.maintenanceMode': false\n  } as ConfigValues);\n\n  return {\n    environment: values['core.app.environment'] as 'development' | 'staging' | 'production',\n    version: values['core.app.version'] as string,\n    debug: values['core.app.debug'] as boolean,\n    maintenanceMode: values['core.app.maintenanceMode'] as boolean,\n    loading,\n    error\n  };\n}\n\n/**\n * Hook for quotas and limits\n */\nexport function useQuotaConfig() {\n  const configKeys = [\n    'quotas.freeInterviews',\n    'quotas.freeResumes',\n    'quotas.premiumInterviews',\n    'quotas.premiumResumes'\n  ] as const;\n\n  type QuotaKeys = typeof configKeys[number];\n  type QuotaValues = Record<QuotaKeys, number>;\n\n  const { values, loading, error } = useUnifiedConfigs<QuotaValues>([...configKeys], {\n    'quotas.freeInterviews': 3,\n    'quotas.freeResumes': 2,\n    'quotas.premiumInterviews': 100,\n    'quotas.premiumResumes': 20\n  } as QuotaValues);\n\n  return {\n    freeInterviews: values['quotas.freeInterviews'] as number,\n    freeResumes: values['quotas.freeResumes'] as number,\n    premiumInterviews: values['quotas.premiumInterviews'] as number,\n    premiumResumes: values['quotas.premiumResumes'] as number,\n    loading,\n    error\n  };\n}\n\nexport default useUnifiedConfig;\n"],"mappings":";AAAA,YAAY;;AAAC;AAAA,SAAAA,cAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;Q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","ignoreList":[]}