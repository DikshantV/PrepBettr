{"version":3,"names":["cov_2omxev2u7k","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","foundry_client_1","require","model_manager_1","MigrationOpenAIClient","FoundryClientBase","constructor","isInitialized","modelManager","FoundryModelManager","chat","completions","create","createChatCompletion","bind","createCompletion","init","console","log","params","ensureInitialized","startTime","Date","now","mappedModel","mapModel","model","modelConfig","getModel","getDefaultModelConfig","estimatedTokens","estimateTokens","estimatedCost","costPerToken","info","toFixed","foundryRequest","messages","temperature","_a","max_tokens","_b","maxTokens","top_p","_c","topP","frequency_penalty","_d","frequencyPenalty","presence_penalty","_e","presencePenalty","stream","stop","n","_f","foundryResponse","request","method","body","status","Error","raw","openAIResponse","id","_g","data","object","created","Math","floor","choices","_j","_h","map","choice","index","message","role","content","function_call","finish_reason","_k","usage","_l","prompt_tokens","completion_tokens","total_tokens","latency","actualUsage","trackUsage","modelName","tokenUsage","success","actualCost","error","errorCode","_m","toString","prompt","length","chatParams","chatResponse","completionResponse","text","listModels","availableModels","getAvailableModels","modelList","Object","entries","config","owned_by","legacyModelName","modelMapping","mapped","messageContent","m","join","inputTokens","ceil","outputTokens","min","getUsageStats","keys","initialized","dispose","exports","OpenAI","OpenAIClient","migrationOpenAIClient","default"],"sources":["/Users/dikshantvashistha/PrepBettr/lib/azure-ai-foundry/clients/migration-wrapper.ts"],"sourcesContent":["/**\n * Azure AI Foundry Migration Wrapper\n * \n * Drop-in replacement for Azure OpenAI SDK that routes requests through\n * Azure AI Foundry while maintaining full API compatibility.\n * \n * This allows for seamless migration from legacy OpenAI/Azure OpenAI clients\n * to the new Azure AI Foundry infrastructure without changing existing code.\n */\n\nimport { FoundryClientBase } from './foundry-client';\nimport { FoundryModelManager } from '../managers/model-manager';\nimport type { ModelConfig } from '../config/foundry-config';\nimport type { TokenUsage } from '../types/foundry-types';\n\n/**\n * OpenAI SDK Compatible Interfaces\n * These match the exact structure expected by existing code\n */\nexport interface ChatCompletionMessage {\n  role: 'system' | 'user' | 'assistant' | 'function';\n  content: string;\n  name?: string;\n  function_call?: any;\n}\n\nexport interface ChatCompletionCreateParams {\n  model: string;\n  messages: ChatCompletionMessage[];\n  temperature?: number;\n  max_tokens?: number;\n  top_p?: number;\n  frequency_penalty?: number;\n  presence_penalty?: number;\n  stream?: boolean;\n  stop?: string | string[];\n  n?: number;\n  logit_bias?: Record<string, number>;\n  user?: string;\n}\n\nexport interface ChatCompletionChoice {\n  index: number;\n  message: ChatCompletionMessage;\n  finish_reason: string | null;\n}\n\nexport interface ChatCompletionResponse {\n  id: string;\n  object: 'chat.completion';\n  created: number;\n  model: string;\n  choices: ChatCompletionChoice[];\n  usage?: TokenUsage;\n}\n\nexport interface CompletionCreateParams {\n  model: string;\n  prompt: string;\n  temperature?: number;\n  max_tokens?: number;\n  top_p?: number;\n  frequency_penalty?: number;\n  presence_penalty?: number;\n  stop?: string | string[];\n  n?: number;\n}\n\nexport interface CompletionChoice {\n  text: string;\n  index: number;\n  finish_reason: string | null;\n}\n\nexport interface CompletionResponse {\n  id: string;\n  object: 'text_completion';\n  created: number;\n  model: string;\n  choices: CompletionChoice[];\n  usage?: TokenUsage;\n}\n\nexport interface ModelListResponse {\n  object: 'list';\n  data: Array<{\n    id: string;\n    object: 'model';\n    created: number;\n    owned_by: string;\n  }>;\n}\n\n/**\n * Migration OpenAI Client\n * \n * Provides full compatibility with OpenAI SDK while using Azure AI Foundry backend.\n * Includes cost tracking, usage monitoring, and intelligent model selection.\n */\nexport class MigrationOpenAIClient extends FoundryClientBase {\n  private modelManager: FoundryModelManager;\n  private isInitialized = false;\n\n  // Nested API structure to match OpenAI SDK\n  public readonly chat: {\n    completions: {\n      create: (params: ChatCompletionCreateParams) => Promise<ChatCompletionResponse>;\n    };\n  };\n\n  public readonly completions: {\n    create: (params: CompletionCreateParams) => Promise<CompletionResponse>;\n  };\n\n  constructor() {\n    super(); // Call parent constructor\n    this.modelManager = new FoundryModelManager();\n\n    // Create nested API structure to match OpenAI SDK exactly\n    this.chat = {\n      completions: {\n        create: this.createChatCompletion.bind(this)\n      }\n    };\n\n    this.completions = {\n      create: this.createCompletion.bind(this)\n    };\n  }\n\n  /**\n   * Initialize the migration client\n   */\n  async init(): Promise<void> {\n    if (this.isInitialized) return;\n\n    await super.init(); // Call parent init\n    await this.modelManager.init();\n    this.isInitialized = true;\n\n    console.log('âœ… MigrationOpenAIClient initialized with Azure AI Foundry backend');\n  }\n\n  /**\n   * Create chat completion (main method used by existing code)\n   */\n  async createChatCompletion(params: ChatCompletionCreateParams): Promise<ChatCompletionResponse> {\n    await this.ensureInitialized();\n    \n    const startTime = Date.now();\n    const mappedModel = this.mapModel(params.model);\n    const modelConfig = this.modelManager.getModel(mappedModel) || this.modelManager.getDefaultModelConfig();\n\n    // Log cost estimation before the request\n    const estimatedTokens = this.estimateTokens(params);\n    const estimatedCost = (estimatedTokens / 1000) * modelConfig.costPerToken;\n    console.info(`[Cost] Estimated cost for ${mappedModel}: $${estimatedCost.toFixed(4)} (~${estimatedTokens} tokens)`);\n\n    try {\n      // Convert OpenAI request to Foundry request format\n      const foundryRequest = {\n        messages: params.messages,\n        model: mappedModel,\n        temperature: params.temperature ?? modelConfig.temperature,\n        max_tokens: params.max_tokens ?? modelConfig.maxTokens,\n        top_p: params.top_p ?? modelConfig.topP,\n        frequency_penalty: params.frequency_penalty ?? modelConfig.frequencyPenalty,\n        presence_penalty: params.presence_penalty ?? modelConfig.presencePenalty,\n        stream: false, // Foundry doesn't support streaming yet\n        stop: params.stop,\n        n: params.n ?? 1\n      };\n\n      // Make request through Foundry client (inherited method)\n      const foundryResponse = await this.request(`/chat/completions`, {\n        method: 'POST',\n        body: foundryRequest\n      });\n\n      if (foundryResponse.status !== 200) {\n        throw new Error(`Foundry API returned status ${foundryResponse.status}: ${foundryResponse.raw}`);\n      }\n\n      // Convert Foundry response to OpenAI format\n      const openAIResponse: ChatCompletionResponse = {\n        id: foundryResponse.data?.id || `chatcmpl-${Date.now()}`,\n        object: 'chat.completion',\n        created: Math.floor(Date.now() / 1000),\n        model: mappedModel,\n        choices: foundryResponse.data?.choices?.map((choice: any, index: number) => ({\n          index,\n          message: {\n            role: choice.message?.role || 'assistant',\n            content: choice.message?.content || '',\n            function_call: choice.message?.function_call\n          },\n          finish_reason: choice.finish_reason || 'stop'\n        })) || [{\n          index: 0,\n          message: {\n            role: 'assistant',\n            content: foundryResponse.data?.content || foundryResponse.raw\n          },\n          finish_reason: 'stop'\n        }],\n        usage: foundryResponse.data?.usage ? {\n          prompt_tokens: foundryResponse.data.usage.prompt_tokens || 0,\n          completion_tokens: foundryResponse.data.usage.completion_tokens || 0,\n          total_tokens: foundryResponse.data.usage.total_tokens || 0\n        } : undefined\n      };\n\n      // Track usage metrics\n      const latency = Date.now() - startTime;\n      const actualUsage = openAIResponse.usage || {\n        prompt_tokens: estimatedTokens * 0.7,\n        completion_tokens: estimatedTokens * 0.3,\n        total_tokens: estimatedTokens\n      };\n\n      this.modelManager.trackUsage({\n        modelName: mappedModel,\n        tokenUsage: actualUsage,\n        latency,\n        success: true\n      });\n\n      // Log actual cost\n      const actualCost = (actualUsage.total_tokens / 1000) * modelConfig.costPerToken;\n      console.info(`[Cost] Actual cost for ${mappedModel}: $${actualCost.toFixed(4)} (${actualUsage.total_tokens} tokens, ${latency}ms)`);\n\n      return openAIResponse;\n\n    } catch (error: any) {\n      // Track failed usage\n      const latency = Date.now() - startTime;\n      this.modelManager.trackUsage({\n        modelName: mappedModel,\n        tokenUsage: {\n          prompt_tokens: 0,\n          completion_tokens: 0,\n          total_tokens: 0\n        },\n        latency,\n        success: false,\n        errorCode: error.status?.toString() || 'UNKNOWN_ERROR'\n      });\n\n      console.error(`[Cost] Failed request for ${mappedModel} after ${latency}ms:`, error.message);\n      throw error;\n    }\n  }\n\n  /**\n   * Create text completion (legacy method, less common but still used)\n   */\n  async createCompletion(params: CompletionCreateParams): Promise<CompletionResponse> {\n    await this.ensureInitialized();\n\n    const startTime = Date.now();\n    const mappedModel = this.mapModel(params.model);\n    const modelConfig = this.modelManager.getModel(mappedModel) || this.modelManager.getDefaultModelConfig();\n\n    // Estimate cost\n    const estimatedTokens = params.prompt.length / 4; // Rough token estimation\n    const estimatedCost = (estimatedTokens / 1000) * modelConfig.costPerToken;\n    console.info(`[Cost] Estimated cost for ${mappedModel} completion: $${estimatedCost.toFixed(4)}`);\n\n    try {\n      // Convert to chat completion format for Foundry\n      const chatParams: ChatCompletionCreateParams = {\n        model: mappedModel,\n        messages: [{ role: 'user', content: params.prompt }],\n        temperature: params.temperature,\n        max_tokens: params.max_tokens,\n        top_p: params.top_p,\n        frequency_penalty: params.frequency_penalty,\n        presence_penalty: params.presence_penalty,\n        stop: params.stop,\n        n: params.n\n      };\n\n      const chatResponse = await this.createChatCompletion(chatParams);\n\n      // Convert chat response to completion format\n      const completionResponse: CompletionResponse = {\n        id: chatResponse.id,\n        object: 'text_completion',\n        created: chatResponse.created,\n        model: mappedModel,\n        choices: chatResponse.choices.map(choice => ({\n          text: choice.message.content,\n          index: choice.index,\n          finish_reason: choice.finish_reason\n        })),\n        usage: chatResponse.usage\n      };\n\n      return completionResponse;\n\n    } catch (error: any) {\n      const latency = Date.now() - startTime;\n      console.error(`[Cost] Failed completion request for ${mappedModel} after ${latency}ms:`, error.message);\n      throw error;\n    }\n  }\n\n  /**\n   * List available models\n   */\n  async listModels(): Promise<ModelListResponse> {\n    await this.ensureInitialized();\n\n    const availableModels = this.modelManager.getAvailableModels();\n    const modelList = Object.entries(availableModels).map(([name, config]) => ({\n      id: name,\n      object: 'model' as const,\n      created: Math.floor(Date.now() / 1000),\n      owned_by: 'azure-ai-foundry'\n    }));\n\n    return {\n      object: 'list',\n      data: modelList\n    };\n  }\n\n  /**\n   * Map legacy model names to Azure AI Foundry model names\n   * \n   * @param legacyModelName - Original model name from legacy code\n   * @returns Mapped model name for Azure AI Foundry\n   */\n  mapModel(legacyModelName: string): string {\n    // Define model mapping based on your specifications\n    const modelMapping: Record<string, string> = {\n      // GPT-4 variants â†’ gpt-4.5 (though we'll use gpt-4o as it's available)\n      'gpt-4': 'gpt-4o',\n      'gpt-4-turbo': 'gpt-4-turbo',\n      'gpt-4o': 'gpt-4o', // Already correct\n      \n      // GPT-3.5 variants â†’ gpt-4o (upgrade path)\n      'gpt-3.5': 'gpt-4o',\n      'gpt-3.5-turbo': 'gpt-4o',\n      'gpt-35-turbo': 'gpt-4o', // Common Azure OpenAI deployment name\n      \n      // Phi models (if they exist in your foundry config)\n      'phi-4': 'phi-4',\n      \n      // Default fallback\n      'default': 'gpt-4o'\n    };\n\n    const mapped = modelMapping[legacyModelName] || modelMapping['default'];\n    \n    if (legacyModelName !== mapped) {\n      console.log(`[ModelMapping] ${legacyModelName} â†’ ${mapped}`);\n    }\n\n    return mapped;\n  }\n\n  /**\n   * Estimate token count for cost calculation\n   */\n  private estimateTokens(params: ChatCompletionCreateParams): number {\n    const messageContent = params.messages.map(m => m.content).join(' ');\n    // Rough estimation: 1 token â‰ˆ 4 characters for English text\n    const inputTokens = Math.ceil(messageContent.length / 4);\n    const outputTokens = Math.min(params.max_tokens || 150, 500); // Conservative estimate\n    return inputTokens + outputTokens;\n  }\n\n  /**\n   * Ensure client is initialized before use\n   */\n  private async ensureInitialized(): Promise<void> {\n    if (!this.isInitialized) {\n      await this.init();\n    }\n  }\n\n  /**\n   * Get usage statistics\n   */\n  getUsageStats(): Record<string, any> {\n    // Delegate to model manager for usage statistics\n    return {\n      availableModels: Object.keys(this.modelManager.getAvailableModels()),\n      initialized: this.isInitialized\n    };\n  }\n\n  /**\n   * Clean up resources\n   */\n  dispose(): void {\n    this.isInitialized = false;\n    console.log('ðŸ§¹ MigrationOpenAIClient disposed');\n  }\n}\n\n// Export singleton instance for drop-in replacement\nexport const migrationOpenAIClient = new MigrationOpenAIClient();\n\n// Export class for custom instantiation\nexport { MigrationOpenAIClient as OpenAI };\nexport { MigrationOpenAIClient as OpenAIClient };\n\n// Default export for CommonJS compatibility\nexport default MigrationOpenAIClient;\n"],"mappings":"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","ignoreList":[]}