{"version":3,"names":[],"sources":["/Users/dikshantvashistha/PrepBettr/lib/azure-ai-foundry/workflows/workflow-types.ts"],"sourcesContent":["import { Question, InterviewContext } from '../types/agent-types';\nimport { AgentType } from '../agents/agent-factory';\n\n/**\n * Unique identifier for interview sessions\n */\nexport type SessionId = string;\n\n/**\n * Interview stage definitions\n */\nexport type InterviewStage = 'technical' | 'behavioral' | 'industry' | 'wrap-up';\n\n/**\n * Interview stage status\n */\nexport type StageStatus = 'pending' | 'in-progress' | 'completed' | 'skipped' | 'failed';\n\n/**\n * Overall workflow status\n */\nexport type WorkflowState = 'initializing' | 'in-progress' | 'completed' | 'failed' | 'cancelled';\n\n/**\n * Experience level mapping for interview customization\n */\nexport type ExperienceLevel = 'entry' | 'mid' | 'senior' | 'executive';\n\n/**\n * Role type for interview customization\n */\nexport type RoleType = 'individual-contributor' | 'team-lead' | 'manager' | 'director' | 'executive';\n\n/**\n * Configuration for starting a multi-agent interview\n */\nexport interface InterviewConfig {\n  /** Unique session identifier */\n  sessionId: SessionId;\n  \n  /** Job role being interviewed for */\n  role: string;\n  \n  /** Candidate experience level */\n  experienceLevel: ExperienceLevel;\n  \n  /** Industry or domain */\n  industry?: string;\n  \n  /** Role type for leadership assessment */\n  roleType?: RoleType;\n  \n  /** Company information */\n  companyInfo?: {\n    name?: string;\n    industry?: string;\n    size?: 'startup' | 'small' | 'medium' | 'large' | 'enterprise';\n    culture?: string;\n  };\n  \n  /** Candidate profile information */\n  candidateProfile: {\n    name: string;\n    email?: string;\n    skills: string[];\n    previousRoles?: string[];\n    yearsExperience?: number;\n    education?: string;\n    certifications?: string[];\n  };\n  \n  /** Interview customization options */\n  customization?: {\n    /** Which stages to include */\n    enabledStages?: InterviewStage[];\n    \n    /** Custom stage durations in minutes */\n    stageDurations?: Partial<Record<InterviewStage, number>>;\n    \n    /** Maximum total interview time in minutes */\n    maxDurationMinutes?: number;\n    \n    /** Custom instructions for specific agents */\n    customInstructions?: Partial<Record<AgentType, string>>;\n    \n    /** Agent configuration overrides */\n    agentOverrides?: Partial<Record<AgentType, {\n      temperature?: number;\n      maxTokens?: number;\n      model?: string;\n    }>>;\n    \n    /** Question count per stage */\n    questionsPerStage?: Partial<Record<InterviewStage, number>>;\n    \n    /** Priority focus areas */\n    focusAreas?: string[];\n  };\n  \n  /** Metadata for tracking and analytics */\n  metadata?: {\n    source?: string;\n    recruiterId?: string;\n    jobPostingId?: string;\n    interviewType?: 'screening' | 'technical' | 'final' | 'cultural-fit';\n    scheduledAt?: string;\n    tags?: string[];\n  };\n}\n\n/**\n * Interview stage configuration\n */\nexport interface InterviewStageConfig {\n  /** Stage identifier */\n  id: InterviewStage;\n  \n  /** Display name */\n  name: string;\n  \n  /** Associated agent type */\n  agentType: AgentType;\n  \n  /** Duration in minutes */\n  duration: number;\n  \n  /** Number of questions to generate */\n  questionCount: number;\n  \n  /** Whether this stage is required */\n  required: boolean;\n  \n  /** Conditions for including this stage */\n  conditions?: {\n    minExperienceLevel?: ExperienceLevel;\n    requiredRoles?: RoleType[];\n    requiredIndustries?: string[];\n  };\n  \n  /** Stage-specific instructions */\n  instructions?: string;\n  \n  /** Success criteria for stage completion */\n  successCriteria?: {\n    minQuestionsAnswered?: number;\n    minDurationMinutes?: number;\n    requiredTopics?: string[];\n  };\n}\n\n/**\n * Current workflow status\n */\nexport interface WorkflowStatus {\n  /** Session identifier */\n  sessionId: SessionId;\n  \n  /** Current workflow state */\n  state: WorkflowState;\n  \n  /** Current active stage */\n  currentStage?: InterviewStage;\n  \n  /** Current stage index (0-based) */\n  currentStageIndex: number;\n  \n  /** Total number of stages */\n  totalStages: number;\n  \n  /** All stages with their status */\n  stages: Array<{\n    stage: InterviewStageConfig;\n    status: StageStatus;\n    startTime?: number;\n    endTime?: number;\n    questionsGenerated: number;\n    questionsAnswered: number;\n    error?: string;\n  }>;\n  \n  /** Overall progress percentage (0-100) */\n  progressPercentage: number;\n  \n  /** Time tracking */\n  timing: {\n    startTime: number;\n    currentTime: number;\n    elapsedMinutes: number;\n    estimatedRemainingMinutes: number;\n    totalEstimatedMinutes: number;\n  };\n  \n  /** Active agents */\n  activeAgents: AgentType[];\n  \n  /** Pending agent handoffs */\n  pendingAgents: AgentType[];\n  \n  /** Error information if failed */\n  error?: {\n    message: string;\n    stage?: InterviewStage;\n    timestamp: number;\n    recoverable: boolean;\n  };\n  \n  /** Real-time metrics */\n  metrics: {\n    totalQuestionsGenerated: number;\n    totalQuestionsAnswered: number;\n    averageResponseTime: number;\n    stageSwitches: number;\n    agentHandoffs: number;\n  };\n}\n\n/**\n * Interview session state for persistence\n */\nexport interface SessionState {\n  /** Session configuration */\n  config: InterviewConfig;\n  \n  /** Current workflow status */\n  status: WorkflowStatus;\n  \n  /** Interview context that gets passed between agents */\n  interviewContext: InterviewContext;\n  \n  /** All questions generated across stages */\n  allQuestions: Question[];\n  \n  /** Candidate responses (for future implementation) */\n  responses?: Array<{\n    questionId: string;\n    response: string;\n    timestamp: number;\n    stage: InterviewStage;\n    agent: AgentType;\n    metadata?: Record<string, any>;\n  }>;\n  \n  /** Stage transition history */\n  stageHistory: Array<{\n    fromStage?: InterviewStage;\n    toStage: InterviewStage;\n    timestamp: number;\n    reason: string;\n    agentHandoff?: {\n      fromAgent: AgentType;\n      toAgent: AgentType;\n    };\n  }>;\n  \n  /** Real-time notes and observations */\n  notes: Array<{\n    stage: InterviewStage;\n    agent: AgentType;\n    timestamp: number;\n    note: string;\n    type: 'observation' | 'recommendation' | 'concern' | 'highlight';\n  }>;\n  \n  /** Session persistence metadata */\n  persistence: {\n    createdAt: number;\n    updatedAt: number;\n    version: string;\n    checkpoints: Array<{\n      stage: InterviewStage;\n      timestamp: number;\n      state: 'saved' | 'recovered';\n    }>;\n  };\n}\n\n/**\n * Final interview result and feedback\n */\nexport interface InterviewResult {\n  /** Session identifier */\n  sessionId: SessionId;\n  \n  /** Overall interview outcome */\n  outcome: 'completed' | 'incomplete' | 'cancelled' | 'failed';\n  \n  /** Comprehensive summary */\n  summary: {\n    totalDurationMinutes: number;\n    stagesCompleted: number;\n    totalStages: number;\n    questionsAsked: number;\n    questionsAnswered: number;\n    overallScore?: number; // 0-100 scale\n  };\n  \n  /** Stage-specific results */\n  stageResults: Array<{\n    stage: InterviewStageConfig;\n    agent: AgentType;\n    status: StageStatus;\n    duration: number;\n    questionsAsked: Question[];\n    questionsAnswered: number;\n    keyInsights: string[];\n    recommendations: string[];\n    score?: number; // 0-100 scale\n    strengths: string[];\n    concerns: string[];\n  }>;\n  \n  /** AI-generated feedback and recommendations */\n  feedback: {\n    /** Overall assessment */\n    overallAssessment: string;\n    \n    /** Key strengths identified */\n    strengths: Array<{\n      category: string;\n      description: string;\n      evidence: string[];\n      stage: InterviewStage;\n    }>;\n    \n    /** Areas for improvement */\n    improvementAreas: Array<{\n      category: string;\n      description: string;\n      suggestions: string[];\n      priority: 'high' | 'medium' | 'low';\n      stage: InterviewStage;\n    }>;\n    \n    /** Role fit assessment */\n    roleFitAssessment: {\n      technicalFit: number; // 0-100\n      behavioralFit: number; // 0-100\n      industryKnowledge: number; // 0-100\n      overallFit: number; // 0-100\n      reasoning: string;\n    };\n    \n    /** Next steps and recommendations */\n    recommendations: {\n      hiring: 'strong-yes' | 'yes' | 'maybe' | 'no' | 'strong-no';\n      reasoning: string;\n      nextSteps: string[];\n      followUpQuestions?: string[];\n      additionalAssessments?: string[];\n    };\n    \n    /** Personalized candidate feedback */\n    candidateFeedback?: {\n      positives: string[];\n      developmentAreas: string[];\n      resources: string[];\n      encouragement: string;\n    };\n  };\n  \n  /** Interview analytics and insights */\n  analytics: {\n    /** Performance metrics */\n    metrics: {\n      averageResponseTime: number;\n      questionDifficulty: 'easy' | 'medium' | 'hard';\n      knowledgeAreas: Record<string, number>; // topic -> score\n      confidenceLevel: number; // 0-100\n      communicationClarity: number; // 0-100\n    };\n    \n    /** Behavioral patterns */\n    patterns: {\n      responseLength: 'concise' | 'detailed' | 'verbose';\n      questioningStyle: 'clarifying' | 'deep-diving' | 'surface-level';\n      confidenceIndicators: string[];\n      stressIndicators: string[];\n    };\n    \n    /** Comparative analysis */\n    benchmarks?: {\n      industryAverage: number;\n      roleAverage: number;\n      experienceLevelAverage: number;\n      percentile: number;\n    };\n  };\n  \n  /** Export and sharing options */\n  exports: {\n    /** PDF report generation metadata */\n    reportAvailable: boolean;\n    \n    /** Shareable summary for candidate */\n    candidateSummary?: {\n      overallScore: number;\n      keyStrengths: string[];\n      developmentAreas: string[];\n      nextSteps: string[];\n    };\n    \n    /** Detailed recruiter report */\n    recruiterReport?: {\n      recommendation: string;\n      detailedAssessment: string;\n      competencyBreakdown: Record<string, number>;\n      interviewNotes: string[];\n    };\n  };\n  \n  /** Metadata for tracking and analytics */\n  metadata: {\n    generatedAt: number;\n    generationDuration: number;\n    aiModelsUsed: AgentType[];\n    totalCost: number;\n    totalTokensUsed: number;\n    qualityScore: number; // Interview process quality 0-100\n  };\n}\n\n/**\n * Agent handoff information\n */\nexport interface AgentHandoff {\n  /** Session identifier */\n  sessionId: SessionId;\n  \n  /** Source agent */\n  fromAgent?: AgentType;\n  \n  /** Target agent */\n  toAgent: AgentType;\n  \n  /** Handoff context */\n  context: {\n    /** Completed questions from previous stages */\n    previousQuestions: Question[];\n    \n    /** Key insights to pass along */\n    insights: string[];\n    \n    /** Areas of focus for next agent */\n    focusAreas: string[];\n    \n    /** Continuation instructions */\n    instructions?: string;\n  };\n  \n  /** Handoff timestamp */\n  timestamp: number;\n}\n\n/**\n * Error types for workflow operations\n */\nexport interface WorkflowError extends Error {\n  code: 'SESSION_NOT_FOUND' | 'INVALID_STATE' | 'AGENT_ERROR' | 'TIMEOUT' | 'CONFIGURATION_ERROR';\n  sessionId: SessionId;\n  stage?: InterviewStage;\n  agent?: AgentType;\n  recoverable: boolean;\n  metadata?: Record<string, any>;\n}\n"],"mappings":"","ignoreList":[]}