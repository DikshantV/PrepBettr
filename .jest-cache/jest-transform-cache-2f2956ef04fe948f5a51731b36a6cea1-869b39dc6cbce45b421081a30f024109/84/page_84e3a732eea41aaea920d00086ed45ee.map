{"version":3,"names":["_ProfileFormDynamic","_interopRequireDefault","require","_auth","_navigation","_jsxRuntime","cov_1f47psphch","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","_coverageSchema","coverage","actualCoverage","e","__esModule","default","ProfilePage","user","getCurrentUser","redirect","jsxs","className","children","jsx"],"sources":["page.tsx"],"sourcesContent":["// export const dynamic = 'force-dynamic'; // Commented out for static export\n\nimport ProfileForm from '@/components/dynamic/ProfileFormDynamic';\nimport { getCurrentUser } from '@/lib/actions/auth.action';\nimport { redirect } from 'next/navigation';\n\nexport default async function ProfilePage() {\n  const user = await getCurrentUser();\n  if (!user) redirect('/sign-in');\n\n  return (\n    <main className=\"max-w-4xl mx-auto py-10 px-4 relative\">\n      <div className=\"text-center mb-8\">\n        <h1 className=\"text-3xl font-bold text-white dark:text-white\">My Profile</h1>\n        <p className=\"text-gray-600 dark:text-gray-300 mt-2\">Manage your account settings and preferences</p>\n      </div>\n      <ProfileForm user={user} />\n    </main>\n  );\n}\n"],"mappings":"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","ignoreList":[]}