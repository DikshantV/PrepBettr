{"version":3,"names":["cov_1ej0x10qzn","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","exports","POST","GET","server_1","require","crypto_1","__importDefault","verifyWebhookSignature","payload","signature","timestamp","webhookSecret","process","env","SENDGRID_WEBHOOK_SECRET","console","warn","expectedSignature","default","createHmac","update","digest","error","logEmailEvent","event","log","email","messageId","sg_message_id","Date","toISOString","reason","status","handleEmailEvent","url","request","body","text","headers","get","NODE_ENV","NextResponse","json","events","JSON","parse","success","processed","length","message","Error","service","environment","webhookSecretConfigured"],"sources":["/Users/dikshantvashistha/PrepBettr/app/api/webhooks/sendgrid/route.ts"],"sourcesContent":["// app/api/webhooks/sendgrid/route.ts\n// SendGrid webhook endpoint for tracking email events\n\nimport { NextRequest, NextResponse } from 'next/server';\nimport crypto from 'crypto';\n\ninterface SendGridEvent {\n  email: string;\n  timestamp: number;\n  event: 'processed' | 'delivered' | 'open' | 'click' | 'bounce' | 'dropped' | 'deferred' | 'unsubscribe' | 'group_unsubscribe' | 'group_resubscribe' | 'spam_report';\n  sg_event_id: string;\n  sg_message_id: string;\n  useragent?: string;\n  ip?: string;\n  url?: string;\n  reason?: string;\n  status?: string;\n  response?: string;\n  attempt?: string;\n  category?: string[];\n  asm_group_id?: number;\n}\n\n/**\n * Verify SendGrid webhook signature\n */\nfunction verifyWebhookSignature(payload: string, signature: string, timestamp: string): boolean {\n  const webhookSecret = process.env.SENDGRID_WEBHOOK_SECRET;\n  \n  if (!webhookSecret) {\n    console.warn('SENDGRID_WEBHOOK_SECRET not configured - skipping signature verification');\n    return true; // Allow for development\n  }\n\n  try {\n    const expectedSignature = crypto\n      .createHmac('sha256', webhookSecret)\n      .update(timestamp + payload)\n      .digest('base64');\n    \n    return signature === expectedSignature;\n  } catch (error) {\n    console.error('Error verifying SendGrid webhook signature:', error);\n    return false;\n  }\n}\n\n/**\n * Log email event to monitoring system\n */\nasync function logEmailEvent(event: SendGridEvent): Promise<void> {\n  try {\n    // Log to console for development\n    console.log(`üìß SendGrid Event: ${event.event} for ${event.email}`, {\n      messageId: event.sg_message_id,\n      timestamp: new Date(event.timestamp * 1000).toISOString(),\n      event: event.event,\n      email: event.email,\n      reason: event.reason,\n      status: event.status\n    });\n\n    // TODO: Store events in database for production monitoring\n    // Example: Store in Cosmos DB or Firebase for analytics\n    /*\n    await storeEmailEvent({\n      messageId: event.sg_message_id,\n      eventId: event.sg_event_id,\n      email: event.email,\n      event: event.event,\n      timestamp: new Date(event.timestamp * 1000),\n      metadata: {\n        reason: event.reason,\n        status: event.status,\n        response: event.response,\n        userAgent: event.useragent,\n        ip: event.ip,\n        url: event.url,\n        categories: event.category\n      }\n    });\n    */\n\n  } catch (error) {\n    console.error('Error logging email event:', error);\n  }\n}\n\n/**\n * Handle different types of SendGrid events\n */\nasync function handleEmailEvent(event: SendGridEvent): Promise<void> {\n  switch (event.event) {\n    case 'delivered':\n      // Email successfully delivered\n      console.log(`‚úÖ Email delivered to ${event.email}`);\n      break;\n      \n    case 'bounce':\n      // Email bounced - handle bounce processing\n      console.warn(`‚ö†Ô∏è Email bounced for ${event.email}: ${event.reason}`);\n      // TODO: Update user email status, implement bounce handling\n      break;\n      \n    case 'dropped':\n      // Email was dropped before sending\n      console.error(`‚ùå Email dropped for ${event.email}: ${event.reason}`);\n      break;\n      \n    case 'spam_report':\n      // User marked email as spam\n      console.warn(`üö´ Spam report from ${event.email}`);\n      // TODO: Automatically unsubscribe user or mark as spam\n      break;\n      \n    case 'unsubscribe':\n      // User unsubscribed\n      console.log(`üìã Unsubscribe request from ${event.email}`);\n      // TODO: Update user preferences in database\n      break;\n      \n    case 'open':\n      // Email was opened\n      console.log(`üëÅÔ∏è Email opened by ${event.email}`);\n      break;\n      \n    case 'click':\n      // Link in email was clicked\n      console.log(`üñ±Ô∏è Email link clicked by ${event.email}: ${event.url}`);\n      break;\n      \n    default:\n      console.log(`üì® Email event '${event.event}' for ${event.email}`);\n  }\n  \n  // Log all events for monitoring\n  await logEmailEvent(event);\n}\n\n/**\n * POST /api/webhooks/sendgrid\n * Handle SendGrid webhook events\n */\nexport async function POST(request: NextRequest) {\n  try {\n    const body = await request.text();\n    const signature = request.headers.get('X-Twilio-Email-Event-Webhook-Signature') || '';\n    const timestamp = request.headers.get('X-Twilio-Email-Event-Webhook-Timestamp') || '';\n\n    // Verify webhook signature in production\n    if (process.env.NODE_ENV === 'production') {\n      if (!verifyWebhookSignature(body, signature, timestamp)) {\n        console.error('Invalid SendGrid webhook signature');\n        return NextResponse.json(\n          { error: 'Invalid webhook signature' },\n          { status: 401 }\n        );\n      }\n    }\n\n    // Parse SendGrid events\n    let events: SendGridEvent[];\n    try {\n      events = JSON.parse(body);\n    } catch (error) {\n      console.error('Failed to parse SendGrid webhook payload:', error);\n      return NextResponse.json(\n        { error: 'Invalid JSON payload' },\n        { status: 400 }\n      );\n    }\n\n    // Process each event\n    for (const event of events) {\n      await handleEmailEvent(event);\n    }\n\n    // Return success response\n    return NextResponse.json(\n      { \n        success: true, \n        processed: events.length,\n        timestamp: new Date().toISOString()\n      },\n      { status: 200 }\n    );\n\n  } catch (error) {\n    console.error('Error processing SendGrid webhook:', error);\n    \n    return NextResponse.json(\n      { \n        error: 'Internal server error',\n        message: error instanceof Error ? error.message : 'Unknown error'\n      },\n      { status: 500 }\n    );\n  }\n}\n\n/**\n * GET /api/webhooks/sendgrid\n * Health check endpoint for webhook\n */\nexport async function GET() {\n  return NextResponse.json({\n    service: 'SendGrid Webhook Endpoint',\n    status: 'healthy',\n    timestamp: new Date().toISOString(),\n    environment: process.env.NODE_ENV,\n    webhookSecretConfigured: !!process.env.SENDGRID_WEBHOOK_SECRET\n  });\n}"],"mappings":";;AAAA;AACA;AAAA;AAAA,SAAAA,eAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAA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","ignoreList":[]}