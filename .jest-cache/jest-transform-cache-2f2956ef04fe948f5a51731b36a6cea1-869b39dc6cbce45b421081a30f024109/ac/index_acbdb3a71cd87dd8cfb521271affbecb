1025a271536cb56a2b0eda1ca0b55fc2
/* istanbul ignore next */
function cov_23irg4x7nn() {
  var path = "/Users/dikshantvashistha/PrepBettr/azure/processGDPRScheduledDeletions/index.js";
  var hash = "384009bf30fea146e7256bdac151ffc7dc90d2e4";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dikshantvashistha/PrepBettr/azure/processGDPRScheduledDeletions/index.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 25
        },
        end: {
          line: 1,
          column: 49
        }
      },
      "1": {
        start: {
          line: 2,
          column: 30
        },
        end: {
          line: 2,
          column: 60
        }
      },
      "2": {
        start: {
          line: 3,
          column: 35
        },
        end: {
          line: 3,
          column: 61
        }
      },
      "3": {
        start: {
          line: 4,
          column: 25
        },
        end: {
          line: 4,
          column: 59
        }
      },
      "4": {
        start: {
          line: 5,
          column: 14
        },
        end: {
          line: 5,
          column: 39
        }
      },
      "5": {
        start: {
          line: 19,
          column: 26
        },
        end: {
          line: 19,
          column: 31
        }
      },
      "6": {
        start: {
          line: 25,
          column: 2
        },
        end: {
          line: 112,
          column: 3
        }
      },
      "7": {
        start: {
          line: 27,
          column: 27
        },
        end: {
          line: 29,
          column: 12
        }
      },
      "8": {
        start: {
          line: 32,
          column: 27
        },
        end: {
          line: 32,
          column: 69
        }
      },
      "9": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 41,
          column: 5
        }
      },
      "10": {
        start: {
          line: 35,
          column: 6
        },
        end: {
          line: 40,
          column: 7
        }
      },
      "11": {
        start: {
          line: 36,
          column: 23
        },
        end: {
          line: 36,
          column: 84
        }
      },
      "12": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 40
        }
      },
      "13": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 99
        }
      },
      "14": {
        start: {
          line: 43,
          column: 4
        },
        end: {
          line: 54,
          column: 5
        }
      },
      "15": {
        start: {
          line: 44,
          column: 23
        },
        end: {
          line: 44,
          column: 56
        }
      },
      "16": {
        start: {
          line: 45,
          column: 18
        },
        end: {
          line: 45,
          column: 46
        }
      },
      "17": {
        start: {
          line: 47,
          column: 6
        },
        end: {
          line: 49,
          column: 7
        }
      },
      "18": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 48,
          column: 59
        }
      },
      "19": {
        start: {
          line: 51,
          column: 6
        },
        end: {
          line: 51,
          column: 57
        }
      },
      "20": {
        start: {
          line: 53,
          column: 6
        },
        end: {
          line: 53,
          column: 56
        }
      },
      "21": {
        start: {
          line: 56,
          column: 4
        },
        end: {
          line: 56,
          column: 52
        }
      },
      "22": {
        start: {
          line: 59,
          column: 28
        },
        end: {
          line: 59,
          column: 71
        }
      },
      "23": {
        start: {
          line: 61,
          column: 4
        },
        end: {
          line: 68,
          column: 5
        }
      },
      "24": {
        start: {
          line: 62,
          column: 6
        },
        end: {
          line: 67,
          column: 7
        }
      },
      "25": {
        start: {
          line: 63,
          column: 23
        },
        end: {
          line: 63,
          column: 82
        }
      },
      "26": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 64,
          column: 41
        }
      },
      "27": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 66,
          column: 97
        }
      },
      "28": {
        start: {
          line: 70,
          column: 4
        },
        end: {
          line: 72,
          column: 5
        }
      },
      "29": {
        start: {
          line: 71,
          column: 6
        },
        end: {
          line: 71,
          column: 67
        }
      },
      "30": {
        start: {
          line: 74,
          column: 4
        },
        end: {
          line: 74,
          column: 82
        }
      },
      "31": {
        start: {
          line: 77,
          column: 4
        },
        end: {
          line: 106,
          column: 5
        }
      },
      "32": {
        start: {
          line: 80,
          column: 6
        },
        end: {
          line: 87,
          column: 7
        }
      },
      "33": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 86,
          column: 9
        }
      },
      "34": {
        start: {
          line: 82,
          column: 39
        },
        end: {
          line: 82,
          column: 101
        }
      },
      "35": {
        start: {
          line: 83,
          column: 10
        },
        end: {
          line: 83,
          column: 66
        }
      },
      "36": {
        start: {
          line: 85,
          column: 10
        },
        end: {
          line: 85,
          column: 96
        }
      },
      "37": {
        start: {
          line: 90,
          column: 6
        },
        end: {
          line: 96,
          column: 7
        }
      },
      "38": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 95,
          column: 10
        }
      },
      "39": {
        start: {
          line: 98,
          column: 6
        },
        end: {
          line: 103,
          column: 7
        }
      },
      "40": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 102,
          column: 11
        }
      },
      "41": {
        start: {
          line: 105,
          column: 6
        },
        end: {
          line: 105,
          column: 33
        }
      },
      "42": {
        start: {
          line: 108,
          column: 4
        },
        end: {
          line: 108,
          column: 59
        }
      },
      "43": {
        start: {
          line: 110,
          column: 4
        },
        end: {
          line: 110,
          column: 65
        }
      },
      "44": {
        start: {
          line: 111,
          column: 4
        },
        end: {
          line: 111,
          column: 16
        }
      },
      "45": {
        start: {
          line: 119,
          column: 2
        },
        end: {
          line: 138,
          column: 3
        }
      },
      "46": {
        start: {
          line: 120,
          column: 22
        },
        end: {
          line: 120,
          column: 56
        }
      },
      "47": {
        start: {
          line: 121,
          column: 16
        },
        end: {
          line: 121,
          column: 40
        }
      },
      "48": {
        start: {
          line: 123,
          column: 18
        },
        end: {
          line: 129,
          column: 5
        }
      },
      "49": {
        start: {
          line: 131,
          column: 26
        },
        end: {
          line: 131,
          column: 71
        }
      },
      "50": {
        start: {
          line: 133,
          column: 4
        },
        end: {
          line: 133,
          column: 87
        }
      },
      "51": {
        start: {
          line: 134,
          column: 4
        },
        end: {
          line: 134,
          column: 21
        }
      },
      "52": {
        start: {
          line: 136,
          column: 4
        },
        end: {
          line: 136,
          column: 67
        }
      },
      "53": {
        start: {
          line: 137,
          column: 4
        },
        end: {
          line: 137,
          column: 16
        }
      },
      "54": {
        start: {
          line: 145,
          column: 20
        },
        end: {
          line: 145,
          column: 30
        }
      },
      "55": {
        start: {
          line: 147,
          column: 2
        },
        end: {
          line: 270,
          column: 3
        }
      },
      "56": {
        start: {
          line: 148,
          column: 4
        },
        end: {
          line: 148,
          column: 92
        }
      },
      "57": {
        start: {
          line: 151,
          column: 22
        },
        end: {
          line: 151,
          column: 56
        }
      },
      "58": {
        start: {
          line: 152,
          column: 4
        },
        end: {
          line: 154,
          column: 7
        }
      },
      "59": {
        start: {
          line: 156,
          column: 24
        },
        end: {
          line: 156,
          column: 26
        }
      },
      "60": {
        start: {
          line: 157,
          column: 19
        },
        end: {
          line: 157,
          column: 21
        }
      },
      "61": {
        start: {
          line: 160,
          column: 31
        },
        end: {
          line: 170,
          column: 5
        }
      },
      "62": {
        start: {
          line: 172,
          column: 4
        },
        end: {
          line: 183,
          column: 5
        }
      },
      "63": {
        start: {
          line: 173,
          column: 6
        },
        end: {
          line: 182,
          column: 7
        }
      },
      "64": {
        start: {
          line: 174,
          column: 24
        },
        end: {
          line: 174,
          column: 89
        }
      },
      "65": {
        start: {
          line: 175,
          column: 8
        },
        end: {
          line: 177,
          column: 9
        }
      },
      "66": {
        start: {
          line: 176,
          column: 10
        },
        end: {
          line: 176,
          column: 66
        }
      },
      "67": {
        start: {
          line: 179,
          column: 25
        },
        end: {
          line: 179,
          column: 83
        }
      },
      "68": {
        start: {
          line: 180,
          column: 8
        },
        end: {
          line: 180,
          column: 30
        }
      },
      "69": {
        start: {
          line: 181,
          column: 8
        },
        end: {
          line: 181,
          column: 43
        }
      },
      "70": {
        start: {
          line: 186,
          column: 4
        },
        end: {
          line: 195,
          column: 5
        }
      },
      "71": {
        start: {
          line: 187,
          column: 36
        },
        end: {
          line: 187,
          column: 88
        }
      },
      "72": {
        start: {
          line: 188,
          column: 6
        },
        end: {
          line: 190,
          column: 7
        }
      },
      "73": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 189,
          column: 79
        }
      },
      "74": {
        start: {
          line: 192,
          column: 23
        },
        end: {
          line: 192,
          column: 77
        }
      },
      "75": {
        start: {
          line: 193,
          column: 6
        },
        end: {
          line: 193,
          column: 28
        }
      },
      "76": {
        start: {
          line: 194,
          column: 6
        },
        end: {
          line: 194,
          column: 41
        }
      },
      "77": {
        start: {
          line: 198,
          column: 4
        },
        end: {
          line: 206,
          column: 5
        }
      },
      "78": {
        start: {
          line: 199,
          column: 6
        },
        end: {
          line: 199,
          column: 52
        }
      },
      "79": {
        start: {
          line: 200,
          column: 6
        },
        end: {
          line: 200,
          column: 49
        }
      },
      "80": {
        start: {
          line: 201,
          column: 6
        },
        end: {
          line: 201,
          column: 89
        }
      },
      "81": {
        start: {
          line: 203,
          column: 23
        },
        end: {
          line: 203,
          column: 80
        }
      },
      "82": {
        start: {
          line: 204,
          column: 6
        },
        end: {
          line: 204,
          column: 28
        }
      },
      "83": {
        start: {
          line: 205,
          column: 6
        },
        end: {
          line: 205,
          column: 41
        }
      },
      "84": {
        start: {
          line: 209,
          column: 24
        },
        end: {
          line: 209,
          column: 71
        }
      },
      "85": {
        start: {
          line: 210,
          column: 4
        },
        end: {
          line: 215,
          column: 7
        }
      },
      "86": {
        start: {
          line: 218,
          column: 4
        },
        end: {
          line: 229,
          column: 7
        }
      },
      "87": {
        start: {
          line: 231,
          column: 21
        },
        end: {
          line: 231,
          column: 43
        }
      },
      "88": {
        start: {
          line: 232,
          column: 4
        },
        end: {
          line: 232,
          column: 84
        }
      },
      "89": {
        start: {
          line: 233,
          column: 4
        },
        end: {
          line: 233,
          column: 57
        }
      },
      "90": {
        start: {
          line: 235,
          column: 4
        },
        end: {
          line: 237,
          column: 5
        }
      },
      "91": {
        start: {
          line: 236,
          column: 6
        },
        end: {
          line: 236,
          column: 53
        }
      },
      "92": {
        start: {
          line: 239,
          column: 4
        },
        end: {
          line: 246,
          column: 6
        }
      },
      "93": {
        start: {
          line: 249,
          column: 21
        },
        end: {
          line: 249,
          column: 43
        }
      },
      "94": {
        start: {
          line: 250,
          column: 4
        },
        end: {
          line: 250,
          column: 84
        }
      },
      "95": {
        start: {
          line: 253,
          column: 4
        },
        end: {
          line: 261,
          column: 5
        }
      },
      "96": {
        start: {
          line: 254,
          column: 24
        },
        end: {
          line: 254,
          column: 58
        }
      },
      "97": {
        start: {
          line: 255,
          column: 6
        },
        end: {
          line: 258,
          column: 9
        }
      },
      "98": {
        start: {
          line: 260,
          column: 6
        },
        end: {
          line: 260,
          column: 85
        }
      },
      "99": {
        start: {
          line: 263,
          column: 4
        },
        end: {
          line: 269,
          column: 6
        }
      },
      "100": {
        start: {
          line: 277,
          column: 2
        },
        end: {
          line: 309,
          column: 3
        }
      },
      "101": {
        start: {
          line: 278,
          column: 22
        },
        end: {
          line: 278,
          column: 55
        }
      },
      "102": {
        start: {
          line: 279,
          column: 18
        },
        end: {
          line: 282,
          column: 5
        }
      },
      "103": {
        start: {
          line: 284,
          column: 33
        },
        end: {
          line: 286,
          column: 17
        }
      },
      "104": {
        start: {
          line: 288,
          column: 23
        },
        end: {
          line: 288,
          column: 24
        }
      },
      "105": {
        start: {
          line: 291,
          column: 22
        },
        end: {
          line: 291,
          column: 24
        }
      },
      "106": {
        start: {
          line: 292,
          column: 4
        },
        end: {
          line: 303,
          column: 5
        }
      },
      "107": {
        start: {
          line: 292,
          column: 17
        },
        end: {
          line: 292,
          column: 18
        }
      },
      "108": {
        start: {
          line: 293,
          column: 20
        },
        end: {
          line: 293,
          column: 49
        }
      },
      "109": {
        start: {
          line: 294,
          column: 29
        },
        end: {
          line: 299,
          column: 7
        }
      },
      "110": {
        start: {
          line: 295,
          column: 8
        },
        end: {
          line: 298,
          column: 10
        }
      },
      "111": {
        start: {
          line: 296,
          column: 10
        },
        end: {
          line: 296,
          column: 101
        }
      },
      "112": {
        start: {
          line: 297,
          column: 10
        },
        end: {
          line: 297,
          column: 22
        }
      },
      "113": {
        start: {
          line: 301,
          column: 22
        },
        end: {
          line: 301,
          column: 55
        }
      },
      "114": {
        start: {
          line: 302,
          column: 6
        },
        end: {
          line: 302,
          column: 71
        }
      },
      "115": {
        start: {
          line: 302,
          column: 47
        },
        end: {
          line: 302,
          column: 62
        }
      },
      "116": {
        start: {
          line: 305,
          column: 4
        },
        end: {
          line: 305,
          column: 24
        }
      },
      "117": {
        start: {
          line: 307,
          column: 4
        },
        end: {
          line: 307,
          column: 82
        }
      },
      "118": {
        start: {
          line: 308,
          column: 4
        },
        end: {
          line: 308,
          column: 16
        }
      },
      "119": {
        start: {
          line: 316,
          column: 28
        },
        end: {
          line: 316,
          column: 30
        }
      },
      "120": {
        start: {
          line: 317,
          column: 25
        },
        end: {
          line: 317,
          column: 79
        }
      },
      "121": {
        start: {
          line: 319,
          column: 2
        },
        end: {
          line: 340,
          column: 3
        }
      },
      "122": {
        start: {
          line: 320,
          column: 4
        },
        end: {
          line: 339,
          column: 5
        }
      },
      "123": {
        start: {
          line: 321,
          column: 30
        },
        end: {
          line: 321,
          column: 81
        }
      },
      "124": {
        start: {
          line: 322,
          column: 21
        },
        end: {
          line: 322,
          column: 39
        }
      },
      "125": {
        start: {
          line: 324,
          column: 25
        },
        end: {
          line: 324,
          column: 26
        }
      },
      "126": {
        start: {
          line: 325,
          column: 6
        },
        end: {
          line: 332,
          column: 7
        }
      },
      "127": {
        start: {
          line: 326,
          column: 8
        },
        end: {
          line: 331,
          column: 9
        }
      },
      "128": {
        start: {
          line: 327,
          column: 10
        },
        end: {
          line: 327,
          column: 54
        }
      },
      "129": {
        start: {
          line: 328,
          column: 10
        },
        end: {
          line: 328,
          column: 25
        }
      },
      "130": {
        start: {
          line: 330,
          column: 10
        },
        end: {
          line: 330,
          column: 81
        }
      },
      "131": {
        start: {
          line: 334,
          column: 6
        },
        end: {
          line: 336,
          column: 7
        }
      },
      "132": {
        start: {
          line: 335,
          column: 8
        },
        end: {
          line: 335,
          column: 75
        }
      },
      "133": {
        start: {
          line: 338,
          column: 6
        },
        end: {
          line: 338,
          column: 91
        }
      },
      "134": {
        start: {
          line: 342,
          column: 2
        },
        end: {
          line: 342,
          column: 27
        }
      },
      "135": {
        start: {
          line: 349,
          column: 2
        },
        end: {
          line: 362,
          column: 3
        }
      },
      "136": {
        start: {
          line: 350,
          column: 23
        },
        end: {
          line: 355,
          column: 5
        }
      },
      "137": {
        start: {
          line: 357,
          column: 22
        },
        end: {
          line: 357,
          column: 66
        }
      },
      "138": {
        start: {
          line: 358,
          column: 4
        },
        end: {
          line: 358,
          column: 45
        }
      },
      "139": {
        start: {
          line: 360,
          column: 4
        },
        end: {
          line: 360,
          column: 68
        }
      },
      "140": {
        start: {
          line: 368,
          column: 0
        },
        end: {
          line: 456,
          column: 2
        }
      },
      "141": {
        start: {
          line: 369,
          column: 20
        },
        end: {
          line: 369,
          column: 30
        }
      },
      "142": {
        start: {
          line: 370,
          column: 2
        },
        end: {
          line: 370,
          column: 91
        }
      },
      "143": {
        start: {
          line: 372,
          column: 2
        },
        end: {
          line: 455,
          column: 3
        }
      },
      "144": {
        start: {
          line: 374,
          column: 4
        },
        end: {
          line: 374,
          column: 38
        }
      },
      "145": {
        start: {
          line: 377,
          column: 28
        },
        end: {
          line: 377,
          column: 62
        }
      },
      "146": {
        start: {
          line: 379,
          column: 4
        },
        end: {
          line: 382,
          column: 5
        }
      },
      "147": {
        start: {
          line: 380,
          column: 6
        },
        end: {
          line: 380,
          column: 58
        }
      },
      "148": {
        start: {
          line: 381,
          column: 6
        },
        end: {
          line: 381,
          column: 13
        }
      },
      "149": {
        start: {
          line: 385,
          column: 20
        },
        end: {
          line: 385,
          column: 22
        }
      },
      "150": {
        start: {
          line: 387,
          column: 4
        },
        end: {
          line: 400,
          column: 5
        }
      },
      "151": {
        start: {
          line: 388,
          column: 6
        },
        end: {
          line: 399,
          column: 7
        }
      },
      "152": {
        start: {
          line: 389,
          column: 23
        },
        end: {
          line: 389,
          column: 66
        }
      },
      "153": {
        start: {
          line: 390,
          column: 8
        },
        end: {
          line: 390,
          column: 29
        }
      },
      "154": {
        start: {
          line: 392,
          column: 8
        },
        end: {
          line: 392,
          column: 79
        }
      },
      "155": {
        start: {
          line: 393,
          column: 8
        },
        end: {
          line: 398,
          column: 11
        }
      },
      "156": {
        start: {
          line: 403,
          column: 23
        },
        end: {
          line: 403,
          column: 60
        }
      },
      "157": {
        start: {
          line: 403,
          column: 43
        },
        end: {
          line: 403,
          column: 52
        }
      },
      "158": {
        start: {
          line: 404,
          column: 19
        },
        end: {
          line: 404,
          column: 57
        }
      },
      "159": {
        start: {
          line: 404,
          column: 39
        },
        end: {
          line: 404,
          column: 49
        }
      },
      "160": {
        start: {
          line: 405,
          column: 26
        },
        end: {
          line: 405,
          column: 48
        }
      },
      "161": {
        start: {
          line: 407,
          column: 4
        },
        end: {
          line: 407,
          column: 56
        }
      },
      "162": {
        start: {
          line: 408,
          column: 4
        },
        end: {
          line: 408,
          column: 66
        }
      },
      "163": {
        start: {
          line: 409,
          column: 4
        },
        end: {
          line: 409,
          column: 48
        }
      },
      "164": {
        start: {
          line: 410,
          column: 4
        },
        end: {
          line: 410,
          column: 40
        }
      },
      "165": {
        start: {
          line: 411,
          column: 4
        },
        end: {
          line: 411,
          column: 64
        }
      },
      "166": {
        start: {
          line: 414,
          column: 4
        },
        end: {
          line: 431,
          column: 7
        }
      },
      "167": {
        start: {
          line: 422,
          column: 35
        },
        end: {
          line: 428,
          column: 9
        }
      },
      "168": {
        start: {
          line: 433,
          column: 4
        },
        end: {
          line: 433,
          column: 87
        }
      },
      "169": {
        start: {
          line: 436,
          column: 26
        },
        end: {
          line: 436,
          column: 48
        }
      },
      "170": {
        start: {
          line: 437,
          column: 4
        },
        end: {
          line: 437,
          column: 101
        }
      },
      "171": {
        start: {
          line: 440,
          column: 4
        },
        end: {
          line: 452,
          column: 5
        }
      },
      "172": {
        start: {
          line: 441,
          column: 6
        },
        end: {
          line: 449,
          column: 9
        }
      },
      "173": {
        start: {
          line: 451,
          column: 6
        },
        end: {
          line: 451,
          column: 75
        }
      },
      "174": {
        start: {
          line: 454,
          column: 4
        },
        end: {
          line: 454,
          column: 16
        }
      }
    },
    fnMap: {
      "0": {
        name: "initializeServices",
        decl: {
          start: {
            line: 24,
            column: 15
          },
          end: {
            line: 24,
            column: 33
          }
        },
        loc: {
          start: {
            line: 24,
            column: 43
          },
          end: {
            line: 113,
            column: 1
          }
        },
        line: 24
      },
      "1": {
        name: "getPendingDeletions",
        decl: {
          start: {
            line: 118,
            column: 15
          },
          end: {
            line: 118,
            column: 34
          }
        },
        loc: {
          start: {
            line: 118,
            column: 44
          },
          end: {
            line: 139,
            column: 1
          }
        },
        line: 118
      },
      "2": {
        name: "processDataDeletion",
        decl: {
          start: {
            line: 144,
            column: 15
          },
          end: {
            line: 144,
            column: 34
          }
        },
        loc: {
          start: {
            line: 144,
            column: 53
          },
          end: {
            line: 271,
            column: 1
          }
        },
        line: 144
      },
      "3": {
        name: "deleteFromContainer",
        decl: {
          start: {
            line: 276,
            column: 15
          },
          end: {
            line: 276,
            column: 34
          }
        },
        loc: {
          start: {
            line: 276,
            column: 67
          },
          end: {
            line: 310,
            column: 1
          }
        },
        line: 276
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 294,
            column: 39
          },
          end: {
            line: 294,
            column: 40
          }
        },
        loc: {
          start: {
            line: 295,
            column: 8
          },
          end: {
            line: 298,
            column: 10
          }
        },
        line: 295
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 295,
            column: 55
          },
          end: {
            line: 295,
            column: 56
          }
        },
        loc: {
          start: {
            line: 295,
            column: 64
          },
          end: {
            line: 298,
            column: 9
          }
        },
        line: 295
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 302,
            column: 37
          },
          end: {
            line: 302,
            column: 38
          }
        },
        loc: {
          start: {
            line: 302,
            column: 47
          },
          end: {
            line: 302,
            column: 62
          }
        },
        line: 302
      },
      "7": {
        name: "deleteFromBlobStorage",
        decl: {
          start: {
            line: 315,
            column: 15
          },
          end: {
            line: 315,
            column: 36
          }
        },
        loc: {
          start: {
            line: 315,
            column: 54
          },
          end: {
            line: 343,
            column: 1
          }
        },
        line: 315
      },
      "8": {
        name: "createAuditLogEntry",
        decl: {
          start: {
            line: 348,
            column: 15
          },
          end: {
            line: 348,
            column: 34
          }
        },
        loc: {
          start: {
            line: 348,
            column: 51
          },
          end: {
            line: 363,
            column: 1
          }
        },
        line: 348
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 368,
            column: 17
          },
          end: {
            line: 368,
            column: 18
          }
        },
        loc: {
          start: {
            line: 368,
            column: 51
          },
          end: {
            line: 456,
            column: 1
          }
        },
        line: 368
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 403,
            column: 38
          },
          end: {
            line: 403,
            column: 39
          }
        },
        loc: {
          start: {
            line: 403,
            column: 43
          },
          end: {
            line: 403,
            column: 52
          }
        },
        line: 403
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 404,
            column: 34
          },
          end: {
            line: 404,
            column: 35
          }
        },
        loc: {
          start: {
            line: 404,
            column: 39
          },
          end: {
            line: 404,
            column: 49
          }
        },
        line: 404
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 422,
            column: 29
          },
          end: {
            line: 422,
            column: 30
          }
        },
        loc: {
          start: {
            line: 422,
            column: 35
          },
          end: {
            line: 428,
            column: 9
          }
        },
        line: 422
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 27,
            column: 27
          },
          end: {
            line: 29,
            column: 12
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 87
          }
        }, {
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 29,
            column: 12
          }
        }],
        line: 27
      },
      "1": {
        loc: {
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 41,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 41,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 34
      },
      "2": {
        loc: {
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 34,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 34,
            column: 25
          }
        }, {
          start: {
            line: 34,
            column: 29
          },
          end: {
            line: 34,
            column: 43
          }
        }],
        line: 34
      },
      "3": {
        loc: {
          start: {
            line: 43,
            column: 4
          },
          end: {
            line: 54,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 4
          },
          end: {
            line: 54,
            column: 5
          }
        }, {
          start: {
            line: 52,
            column: 11
          },
          end: {
            line: 54,
            column: 5
          }
        }],
        line: 43
      },
      "4": {
        loc: {
          start: {
            line: 47,
            column: 6
          },
          end: {
            line: 49,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 6
          },
          end: {
            line: 49,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 47
      },
      "5": {
        loc: {
          start: {
            line: 47,
            column: 10
          },
          end: {
            line: 47,
            column: 27
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 47,
            column: 10
          },
          end: {
            line: 47,
            column: 19
          }
        }, {
          start: {
            line: 47,
            column: 23
          },
          end: {
            line: 47,
            column: 27
          }
        }],
        line: 47
      },
      "6": {
        loc: {
          start: {
            line: 61,
            column: 4
          },
          end: {
            line: 68,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 61,
            column: 4
          },
          end: {
            line: 68,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 61
      },
      "7": {
        loc: {
          start: {
            line: 61,
            column: 8
          },
          end: {
            line: 61,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 61,
            column: 8
          },
          end: {
            line: 61,
            column: 26
          }
        }, {
          start: {
            line: 61,
            column: 30
          },
          end: {
            line: 61,
            column: 44
          }
        }],
        line: 61
      },
      "8": {
        loc: {
          start: {
            line: 70,
            column: 4
          },
          end: {
            line: 72,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 70,
            column: 4
          },
          end: {
            line: 72,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 70
      },
      "9": {
        loc: {
          start: {
            line: 77,
            column: 4
          },
          end: {
            line: 106,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 77,
            column: 4
          },
          end: {
            line: 106,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 77
      },
      "10": {
        loc: {
          start: {
            line: 80,
            column: 6
          },
          end: {
            line: 87,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 80,
            column: 6
          },
          end: {
            line: 87,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 80
      },
      "11": {
        loc: {
          start: {
            line: 90,
            column: 6
          },
          end: {
            line: 96,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 90,
            column: 6
          },
          end: {
            line: 96,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 90
      },
      "12": {
        loc: {
          start: {
            line: 98,
            column: 6
          },
          end: {
            line: 103,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 98,
            column: 6
          },
          end: {
            line: 103,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 98
      },
      "13": {
        loc: {
          start: {
            line: 175,
            column: 8
          },
          end: {
            line: 177,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 175,
            column: 8
          },
          end: {
            line: 177,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 175
      },
      "14": {
        loc: {
          start: {
            line: 188,
            column: 6
          },
          end: {
            line: 190,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 188,
            column: 6
          },
          end: {
            line: 190,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 188
      },
      "15": {
        loc: {
          start: {
            line: 209,
            column: 24
          },
          end: {
            line: 209,
            column: 71
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 209,
            column: 46
          },
          end: {
            line: 209,
            column: 57
          }
        }, {
          start: {
            line: 209,
            column: 60
          },
          end: {
            line: 209,
            column: 71
          }
        }],
        line: 209
      },
      "16": {
        loc: {
          start: {
            line: 235,
            column: 4
          },
          end: {
            line: 237,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 235,
            column: 4
          },
          end: {
            line: 237,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 235
      },
      "17": {
        loc: {
          start: {
            line: 257,
            column: 50
          },
          end: {
            line: 257,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 257,
            column: 50
          },
          end: {
            line: 257,
            column: 63
          }
        }, {
          start: {
            line: 257,
            column: 67
          },
          end: {
            line: 257,
            column: 82
          }
        }],
        line: 257
      },
      "18": {
        loc: {
          start: {
            line: 334,
            column: 6
          },
          end: {
            line: 336,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 334,
            column: 6
          },
          end: {
            line: 336,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 334
      },
      "19": {
        loc: {
          start: {
            line: 379,
            column: 4
          },
          end: {
            line: 382,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 379,
            column: 4
          },
          end: {
            line: 382,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 379
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0]
    },
    inputSourceMap: null,
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "384009bf30fea146e7256bdac151ffc7dc90d2e4"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_23irg4x7nn = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_23irg4x7nn();
const {
  CosmosClient
} =
/* istanbul ignore next */
(cov_23irg4x7nn().s[0]++, require('@azure/cosmos'));
const {
  BlobServiceClient
} =
/* istanbul ignore next */
(cov_23irg4x7nn().s[1]++, require('@azure/storage-blob'));
const {
  DefaultAzureCredential
} =
/* istanbul ignore next */
(cov_23irg4x7nn().s[2]++, require('@azure/identity'));
const {
  SecretClient
} =
/* istanbul ignore next */
(cov_23irg4x7nn().s[3]++, require('@azure/keyvault-secrets'));
const admin =
/* istanbul ignore next */
(cov_23irg4x7nn().s[4]++, require('firebase-admin'));

/**
 * Scheduled Azure Function for GDPR Data Deletion Processing
 * 
 * Runs daily at 2:00 AM to process data deletion requests that have reached
 * their 30-day compliance window.
 * 
 * Schedule: "0 0 2 * * *" (2:00 AM every day)
 */

let cosmosClient;
let database;
let blobServiceClient;
let firebaseInitialized =
/* istanbul ignore next */
(cov_23irg4x7nn().s[5]++, false);

/**
 * Initialize all required services
 */
async function initializeServices(context) {
  /* istanbul ignore next */
  cov_23irg4x7nn().f[0]++;
  cov_23irg4x7nn().s[6]++;
  try {
    // Initialize Azure Key Vault for secrets
    const keyVaultClient =
    /* istanbul ignore next */
    (cov_23irg4x7nn().s[7]++, process.env.AZURE_KEY_VAULT_URL ?
    /* istanbul ignore next */
    (cov_23irg4x7nn().b[0][0]++, new SecretClient(process.env.AZURE_KEY_VAULT_URL, new DefaultAzureCredential())) :
    /* istanbul ignore next */
    (cov_23irg4x7nn().b[0][1]++, null));

    // Initialize Cosmos DB
    let cosmosConnection =
    /* istanbul ignore next */
    (cov_23irg4x7nn().s[8]++, process.env.AZURE_COSMOS_CONNECTION_STRING);
    /* istanbul ignore next */
    cov_23irg4x7nn().s[9]++;
    if (
    /* istanbul ignore next */
    (cov_23irg4x7nn().b[2][0]++, !cosmosConnection) &&
    /* istanbul ignore next */
    (cov_23irg4x7nn().b[2][1]++, keyVaultClient)) {
      /* istanbul ignore next */
      cov_23irg4x7nn().b[1][0]++;
      cov_23irg4x7nn().s[10]++;
      try {
        const secret =
        /* istanbul ignore next */
        (cov_23irg4x7nn().s[11]++, await keyVaultClient.getSecret('cosmos-db-connection-string'));
        /* istanbul ignore next */
        cov_23irg4x7nn().s[12]++;
        cosmosConnection = secret.value;
      } catch (error) {
        /* istanbul ignore next */
        cov_23irg4x7nn().s[13]++;
        context.log.warn('Could not retrieve Cosmos DB connection from Key Vault:', error.message);
      }
    } else
    /* istanbul ignore next */
    {
      cov_23irg4x7nn().b[1][1]++;
    }
    cov_23irg4x7nn().s[14]++;
    if (!cosmosConnection) {
      /* istanbul ignore next */
      cov_23irg4x7nn().b[3][0]++;
      const endpoint =
      /* istanbul ignore next */
      (cov_23irg4x7nn().s[15]++, process.env.AZURE_COSMOS_ENDPOINT);
      const key =
      /* istanbul ignore next */
      (cov_23irg4x7nn().s[16]++, process.env.AZURE_COSMOS_KEY);
      /* istanbul ignore next */
      cov_23irg4x7nn().s[17]++;
      if (
      /* istanbul ignore next */
      (cov_23irg4x7nn().b[5][0]++, !endpoint) ||
      /* istanbul ignore next */
      (cov_23irg4x7nn().b[5][1]++, !key)) {
        /* istanbul ignore next */
        cov_23irg4x7nn().b[4][0]++;
        cov_23irg4x7nn().s[18]++;
        throw new Error('Cosmos DB configuration missing');
      } else
      /* istanbul ignore next */
      {
        cov_23irg4x7nn().b[4][1]++;
      }
      cov_23irg4x7nn().s[19]++;
      cosmosClient = new CosmosClient({
        endpoint,
        key
      });
    } else {
      /* istanbul ignore next */
      cov_23irg4x7nn().b[3][1]++;
      cov_23irg4x7nn().s[20]++;
      cosmosClient = new CosmosClient(cosmosConnection);
    }
    /* istanbul ignore next */
    cov_23irg4x7nn().s[21]++;
    database = cosmosClient.database('PrepBettrDB');

    // Initialize Azure Blob Storage
    let storageConnection =
    /* istanbul ignore next */
    (cov_23irg4x7nn().s[22]++, process.env.AZURE_STORAGE_CONNECTION_STRING);
    /* istanbul ignore next */
    cov_23irg4x7nn().s[23]++;
    if (
    /* istanbul ignore next */
    (cov_23irg4x7nn().b[7][0]++, !storageConnection) &&
    /* istanbul ignore next */
    (cov_23irg4x7nn().b[7][1]++, keyVaultClient)) {
      /* istanbul ignore next */
      cov_23irg4x7nn().b[6][0]++;
      cov_23irg4x7nn().s[24]++;
      try {
        const secret =
        /* istanbul ignore next */
        (cov_23irg4x7nn().s[25]++, await keyVaultClient.getSecret('storage-connection-string'));
        /* istanbul ignore next */
        cov_23irg4x7nn().s[26]++;
        storageConnection = secret.value;
      } catch (error) {
        /* istanbul ignore next */
        cov_23irg4x7nn().s[27]++;
        context.log.warn('Could not retrieve Storage connection from Key Vault:', error.message);
      }
    } else
    /* istanbul ignore next */
    {
      cov_23irg4x7nn().b[6][1]++;
    }
    cov_23irg4x7nn().s[28]++;
    if (!storageConnection) {
      /* istanbul ignore next */
      cov_23irg4x7nn().b[8][0]++;
      cov_23irg4x7nn().s[29]++;
      throw new Error('Azure Storage connection string not found');
    } else
    /* istanbul ignore next */
    {
      cov_23irg4x7nn().b[8][1]++;
    }
    cov_23irg4x7nn().s[30]++;
    blobServiceClient = BlobServiceClient.fromConnectionString(storageConnection);

    // Initialize Firebase Admin SDK
    /* istanbul ignore next */
    cov_23irg4x7nn().s[31]++;
    if (!firebaseInitialized) {
      /* istanbul ignore next */
      cov_23irg4x7nn().b[9][0]++;
      let firebaseConfig;
      /* istanbul ignore next */
      cov_23irg4x7nn().s[32]++;
      if (keyVaultClient) {
        /* istanbul ignore next */
        cov_23irg4x7nn().b[10][0]++;
        cov_23irg4x7nn().s[33]++;
        try {
          const serviceAccountSecret =
          /* istanbul ignore next */
          (cov_23irg4x7nn().s[34]++, await keyVaultClient.getSecret('firebase-service-account-key'));
          /* istanbul ignore next */
          cov_23irg4x7nn().s[35]++;
          firebaseConfig = JSON.parse(serviceAccountSecret.value);
        } catch (error) {
          /* istanbul ignore next */
          cov_23irg4x7nn().s[36]++;
          context.log.warn('Could not retrieve Firebase config from Key Vault:', error.message);
        }
      } else
      /* istanbul ignore next */
      {
        cov_23irg4x7nn().b[10][1]++;
      }

      // Fallback to environment variables
      cov_23irg4x7nn().s[37]++;
      if (!firebaseConfig) {
        /* istanbul ignore next */
        cov_23irg4x7nn().b[11][0]++;
        cov_23irg4x7nn().s[38]++;
        firebaseConfig = {
          projectId: process.env.FIREBASE_PROJECT_ID,
          clientEmail: process.env.FIREBASE_CLIENT_EMAIL,
          privateKey: process.env.FIREBASE_PRIVATE_KEY?.replace(/\\n/g, '\n')
        };
      } else
      /* istanbul ignore next */
      {
        cov_23irg4x7nn().b[11][1]++;
      }
      cov_23irg4x7nn().s[39]++;
      if (!admin.apps.length) {
        /* istanbul ignore next */
        cov_23irg4x7nn().b[12][0]++;
        cov_23irg4x7nn().s[40]++;
        admin.initializeApp({
          credential: admin.credential.cert(firebaseConfig),
          projectId: firebaseConfig.projectId
        });
      } else
      /* istanbul ignore next */
      {
        cov_23irg4x7nn().b[12][1]++;
      }
      cov_23irg4x7nn().s[41]++;
      firebaseInitialized = true;
    } else
    /* istanbul ignore next */
    {
      cov_23irg4x7nn().b[9][1]++;
    }
    cov_23irg4x7nn().s[42]++;
    context.log('✅ All services initialized successfully');
  } catch (error) {
    /* istanbul ignore next */
    cov_23irg4x7nn().s[43]++;
    context.log.error('❌ Failed to initialize services:', error);
    /* istanbul ignore next */
    cov_23irg4x7nn().s[44]++;
    throw error;
  }
}

/**
 * Get pending deletion requests that are ready for processing
 */
async function getPendingDeletions(context) {
  /* istanbul ignore next */
  cov_23irg4x7nn().f[1]++;
  cov_23irg4x7nn().s[45]++;
  try {
    const container =
    /* istanbul ignore next */
    (cov_23irg4x7nn().s[46]++, database.container('gdprRequests'));
    const now =
    /* istanbul ignore next */
    (cov_23irg4x7nn().s[47]++, new Date().toISOString());
    const query =
    /* istanbul ignore next */
    (cov_23irg4x7nn().s[48]++, {
      query: 'SELECT * FROM c WHERE c.status = @status AND c.scheduledDate <= @now',
      parameters: [{
        name: '@status',
        value: 'pending'
      }, {
        name: '@now',
        value: now
      }]
    });
    const {
      resources
    } =
    /* istanbul ignore next */
    (cov_23irg4x7nn().s[49]++, await container.items.query(query).fetchAll());
    /* istanbul ignore next */
    cov_23irg4x7nn().s[50]++;
    context.log(`📋 Found ${resources.length} deletion requests ready for processing`);
    /* istanbul ignore next */
    cov_23irg4x7nn().s[51]++;
    return resources;
  } catch (error) {
    /* istanbul ignore next */
    cov_23irg4x7nn().s[52]++;
    context.log.error('❌ Failed to get pending deletions:', error);
    /* istanbul ignore next */
    cov_23irg4x7nn().s[53]++;
    throw error;
  }
}

/**
 * Process a single data deletion request
 */
async function processDataDeletion(context, request) {
  /* istanbul ignore next */
  cov_23irg4x7nn().f[2]++;
  const startTime =
  /* istanbul ignore next */
  (cov_23irg4x7nn().s[54]++, Date.now());
  /* istanbul ignore next */
  cov_23irg4x7nn().s[55]++;
  try {
    /* istanbul ignore next */
    cov_23irg4x7nn().s[56]++;
    context.log(`🗑️ Processing deletion request ${request.id} for user ${request.userId}`);

    // Update status to processing
    const container =
    /* istanbul ignore next */
    (cov_23irg4x7nn().s[57]++, database.container('gdprRequests'));
    /* istanbul ignore next */
    cov_23irg4x7nn().s[58]++;
    await container.item(request.id, request.partitionKey).patch([{
      op: 'replace',
      path: '/status',
      value: 'processing'
    }]);
    const deletedData =
    /* istanbul ignore next */
    (cov_23irg4x7nn().s[59]++, []);
    const errors =
    /* istanbul ignore next */
    (cov_23irg4x7nn().s[60]++, []);

    // Delete from Cosmos DB containers
    const containersToDelete =
    /* istanbul ignore next */
    (cov_23irg4x7nn().s[61]++, ['users', 'profiles', 'resumes', 'interviews', 'feedback', 'usage', 'notifications', 'emailVerifications', 'userConsents']);
    /* istanbul ignore next */
    cov_23irg4x7nn().s[62]++;
    for (const containerName of containersToDelete) {
      /* istanbul ignore next */
      cov_23irg4x7nn().s[63]++;
      try {
        const deleted =
        /* istanbul ignore next */
        (cov_23irg4x7nn().s[64]++, await deleteFromContainer(context, containerName, request.userId));
        /* istanbul ignore next */
        cov_23irg4x7nn().s[65]++;
        if (deleted > 0) {
          /* istanbul ignore next */
          cov_23irg4x7nn().b[13][0]++;
          cov_23irg4x7nn().s[66]++;
          deletedData.push(`${containerName} (${deleted} items)`);
        } else
        /* istanbul ignore next */
        {
          cov_23irg4x7nn().b[13][1]++;
        }
      } catch (error) {
        const errorMsg =
        /* istanbul ignore next */
        (cov_23irg4x7nn().s[67]++, `Failed to delete from ${containerName}: ${error.message}`);
        /* istanbul ignore next */
        cov_23irg4x7nn().s[68]++;
        errors.push(errorMsg);
        /* istanbul ignore next */
        cov_23irg4x7nn().s[69]++;
        context.log.error(`❌ ${errorMsg}`);
      }
    }

    // Delete from Azure Blob Storage
    /* istanbul ignore next */
    cov_23irg4x7nn().s[70]++;
    try {
      const deletedBlobContainers =
      /* istanbul ignore next */
      (cov_23irg4x7nn().s[71]++, await deleteFromBlobStorage(context, request.userId));
      /* istanbul ignore next */
      cov_23irg4x7nn().s[72]++;
      if (deletedBlobContainers.length > 0) {
        /* istanbul ignore next */
        cov_23irg4x7nn().b[14][0]++;
        cov_23irg4x7nn().s[73]++;
        deletedData.push(`blob-storage (${deletedBlobContainers.join(', ')})`);
      } else
      /* istanbul ignore next */
      {
        cov_23irg4x7nn().b[14][1]++;
      }
    } catch (error) {
      const errorMsg =
      /* istanbul ignore next */
      (cov_23irg4x7nn().s[74]++, `Failed to delete from blob storage: ${error.message}`);
      /* istanbul ignore next */
      cov_23irg4x7nn().s[75]++;
      errors.push(errorMsg);
      /* istanbul ignore next */
      cov_23irg4x7nn().s[76]++;
      context.log.error(`❌ ${errorMsg}`);
    }

    // Delete from Firebase Authentication
    /* istanbul ignore next */
    cov_23irg4x7nn().s[77]++;
    try {
      /* istanbul ignore next */
      cov_23irg4x7nn().s[78]++;
      await admin.auth().deleteUser(request.userId);
      /* istanbul ignore next */
      cov_23irg4x7nn().s[79]++;
      deletedData.push('firebase-auth (1 user)');
      /* istanbul ignore next */
      cov_23irg4x7nn().s[80]++;
      context.log(`✅ Deleted Firebase authentication record for user ${request.userId}`);
    } catch (error) {
      const errorMsg =
      /* istanbul ignore next */
      (cov_23irg4x7nn().s[81]++, `Failed to delete Firebase auth record: ${error.message}`);
      /* istanbul ignore next */
      cov_23irg4x7nn().s[82]++;
      errors.push(errorMsg);
      /* istanbul ignore next */
      cov_23irg4x7nn().s[83]++;
      context.log.error(`❌ ${errorMsg}`);
    }

    // Update request with results
    const finalStatus =
    /* istanbul ignore next */
    (cov_23irg4x7nn().s[84]++, errors.length === 0 ?
    /* istanbul ignore next */
    (cov_23irg4x7nn().b[15][0]++, 'completed') :
    /* istanbul ignore next */
    (cov_23irg4x7nn().b[15][1]++, 'completed')); // Mark as completed even with some errors
    /* istanbul ignore next */
    cov_23irg4x7nn().s[85]++;
    await container.item(request.id, request.partitionKey).patch([{
      op: 'replace',
      path: '/status',
      value: finalStatus
    }, {
      op: 'replace',
      path: '/completedDate',
      value: new Date().toISOString()
    }, {
      op: 'replace',
      path: '/deletedData',
      value: deletedData
    }, {
      op: 'replace',
      path: '/errors',
      value: errors
    }]);

    // Create audit log entry
    /* istanbul ignore next */
    cov_23irg4x7nn().s[86]++;
    await createAuditLogEntry(context, {
      userId: request.userId,
      action: 'data_deletion_processed',
      details: {
        requestId: request.id,
        deletedData,
        errors,
        status: finalStatus,
        processingTimeMs: Date.now() - startTime
      },
      complianceOfficer: 'scheduled-function'
    });
    const duration =
    /* istanbul ignore next */
    (cov_23irg4x7nn().s[87]++, Date.now() - startTime);
    /* istanbul ignore next */
    cov_23irg4x7nn().s[88]++;
    context.log(`✅ Deletion processed for user ${request.userId} in ${duration}ms`);
    /* istanbul ignore next */
    cov_23irg4x7nn().s[89]++;
    context.log(`   Deleted: ${deletedData.join(', ')}`);
    /* istanbul ignore next */
    cov_23irg4x7nn().s[90]++;
    if (errors.length > 0) {
      /* istanbul ignore next */
      cov_23irg4x7nn().b[16][0]++;
      cov_23irg4x7nn().s[91]++;
      context.log(`   Errors: ${errors.join(', ')}`);
    } else
    /* istanbul ignore next */
    {
      cov_23irg4x7nn().b[16][1]++;
    }
    cov_23irg4x7nn().s[92]++;
    return {
      success: true,
      requestId: request.id,
      userId: request.userId,
      deletedData,
      errors,
      duration
    };
  } catch (error) {
    const duration =
    /* istanbul ignore next */
    (cov_23irg4x7nn().s[93]++, Date.now() - startTime);
    /* istanbul ignore next */
    cov_23irg4x7nn().s[94]++;
    context.log.error(`❌ Failed to process deletion request ${request.id}:`, error);

    // Update request status to failed
    /* istanbul ignore next */
    cov_23irg4x7nn().s[95]++;
    try {
      const container =
      /* istanbul ignore next */
      (cov_23irg4x7nn().s[96]++, database.container('gdprRequests'));
      /* istanbul ignore next */
      cov_23irg4x7nn().s[97]++;
      await container.item(request.id, request.partitionKey).patch([{
        op: 'replace',
        path: '/status',
        value: 'failed'
      }, {
        op: 'replace',
        path: '/errors',
        value: [
        /* istanbul ignore next */
        (cov_23irg4x7nn().b[17][0]++, error.message) ||
        /* istanbul ignore next */
        (cov_23irg4x7nn().b[17][1]++, 'Unknown error')]
      }]);
    } catch (updateError) {
      /* istanbul ignore next */
      cov_23irg4x7nn().s[98]++;
      context.log.error('❌ Failed to update request status to failed:', updateError);
    }
    /* istanbul ignore next */
    cov_23irg4x7nn().s[99]++;
    return {
      success: false,
      requestId: request.id,
      userId: request.userId,
      error: error.message,
      duration
    };
  }
}

/**
 * Delete user data from a specific Cosmos DB container
 */
async function deleteFromContainer(context, containerName, userId) {
  /* istanbul ignore next */
  cov_23irg4x7nn().f[3]++;
  cov_23irg4x7nn().s[100]++;
  try {
    const container =
    /* istanbul ignore next */
    (cov_23irg4x7nn().s[101]++, database.container(containerName));
    const query =
    /* istanbul ignore next */
    (cov_23irg4x7nn().s[102]++, {
      query: 'SELECT c.id FROM c WHERE c.userId = @userId',
      parameters: [{
        name: '@userId',
        value: userId
      }]
    });
    const {
      resources: items
    } =
    /* istanbul ignore next */
    (cov_23irg4x7nn().s[103]++, await container.items.query(query, {
      partitionKey: userId
    }).fetchAll());
    let deletedCount =
    /* istanbul ignore next */
    (cov_23irg4x7nn().s[104]++, 0);

    // Delete in batches to avoid overwhelming the database
    const batchSize =
    /* istanbul ignore next */
    (cov_23irg4x7nn().s[105]++, 25);
    /* istanbul ignore next */
    cov_23irg4x7nn().s[106]++;
    for (let i =
    /* istanbul ignore next */
    (cov_23irg4x7nn().s[107]++, 0); i < items.length; i += batchSize) {
      const batch =
      /* istanbul ignore next */
      (cov_23irg4x7nn().s[108]++, items.slice(i, i + batchSize));
      const deletePromises =
      /* istanbul ignore next */
      (cov_23irg4x7nn().s[109]++, batch.map(item => {
        /* istanbul ignore next */
        cov_23irg4x7nn().f[4]++;
        cov_23irg4x7nn().s[110]++;
        return container.item(item.id, userId).delete().catch(error => {
          /* istanbul ignore next */
          cov_23irg4x7nn().f[5]++;
          cov_23irg4x7nn().s[111]++;
          context.log.warn(`Failed to delete item ${item.id} from ${containerName}:`, error.message);
          /* istanbul ignore next */
          cov_23irg4x7nn().s[112]++;
          return null;
        });
      }));
      const results =
      /* istanbul ignore next */
      (cov_23irg4x7nn().s[113]++, await Promise.all(deletePromises));
      /* istanbul ignore next */
      cov_23irg4x7nn().s[114]++;
      deletedCount += results.filter(result => {
        /* istanbul ignore next */
        cov_23irg4x7nn().f[6]++;
        cov_23irg4x7nn().s[115]++;
        return result !== null;
      }).length;
    }
    /* istanbul ignore next */
    cov_23irg4x7nn().s[116]++;
    return deletedCount;
  } catch (error) {
    /* istanbul ignore next */
    cov_23irg4x7nn().s[117]++;
    context.log.error(`❌ Error deleting from container ${containerName}:`, error);
    /* istanbul ignore next */
    cov_23irg4x7nn().s[118]++;
    throw error;
  }
}

/**
 * Delete user files from Azure Blob Storage
 */
async function deleteFromBlobStorage(context, userId) {
  /* istanbul ignore next */
  cov_23irg4x7nn().f[7]++;
  const deletedContainers =
  /* istanbul ignore next */
  (cov_23irg4x7nn().s[119]++, []);
  const userContainers =
  /* istanbul ignore next */
  (cov_23irg4x7nn().s[120]++, ['user-files', 'resumes', 'profile-pics', 'documents']);
  /* istanbul ignore next */
  cov_23irg4x7nn().s[121]++;
  for (const containerName of userContainers) {
    /* istanbul ignore next */
    cov_23irg4x7nn().s[122]++;
    try {
      const containerClient =
      /* istanbul ignore next */
      (cov_23irg4x7nn().s[123]++, blobServiceClient.getContainerClient(containerName));
      const prefix =
      /* istanbul ignore next */
      (cov_23irg4x7nn().s[124]++, `users/${userId}/`);
      let deletedBlobs =
      /* istanbul ignore next */
      (cov_23irg4x7nn().s[125]++, 0);
      /* istanbul ignore next */
      cov_23irg4x7nn().s[126]++;
      for await (const blob of containerClient.listBlobsFlat({
        prefix
      })) {
        /* istanbul ignore next */
        cov_23irg4x7nn().s[127]++;
        try {
          /* istanbul ignore next */
          cov_23irg4x7nn().s[128]++;
          await containerClient.deleteBlob(blob.name);
          /* istanbul ignore next */
          cov_23irg4x7nn().s[129]++;
          deletedBlobs++;
        } catch (error) {
          /* istanbul ignore next */
          cov_23irg4x7nn().s[130]++;
          context.log.warn(`Failed to delete blob ${blob.name}:`, error.message);
        }
      }
      /* istanbul ignore next */
      cov_23irg4x7nn().s[131]++;
      if (deletedBlobs > 0) {
        /* istanbul ignore next */
        cov_23irg4x7nn().b[18][0]++;
        cov_23irg4x7nn().s[132]++;
        deletedContainers.push(`${containerName} (${deletedBlobs} files)`);
      } else
      /* istanbul ignore next */
      {
        cov_23irg4x7nn().b[18][1]++;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_23irg4x7nn().s[133]++;
      context.log.warn(`Failed to access blob container ${containerName}:`, error.message);
    }
  }
  /* istanbul ignore next */
  cov_23irg4x7nn().s[134]++;
  return deletedContainers;
}

/**
 * Create audit log entry
 */
async function createAuditLogEntry(context, entry) {
  /* istanbul ignore next */
  cov_23irg4x7nn().f[8]++;
  cov_23irg4x7nn().s[135]++;
  try {
    const auditEntry =
    /* istanbul ignore next */
    (cov_23irg4x7nn().s[136]++, {
      id: `audit_${Date.now()}_${Math.random().toString(36).substring(2)}`,
      timestamp: new Date().toISOString(),
      partitionKey: entry.userId,
      ...entry
    });
    const container =
    /* istanbul ignore next */
    (cov_23irg4x7nn().s[137]++, database.container('dataProtectionAuditLog'));
    /* istanbul ignore next */
    cov_23irg4x7nn().s[138]++;
    await container.items.create(auditEntry);
  } catch (error) {
    /* istanbul ignore next */
    cov_23irg4x7nn().s[139]++;
    context.log.error('❌ Failed to create audit log entry:', error);
    // Don't throw - audit logging failure shouldn't stop the main operation
  }
}

/**
 * Main function - Timer triggered
 */
/* istanbul ignore next */
cov_23irg4x7nn().s[140]++;
module.exports = async function (context, myTimer) {
  /* istanbul ignore next */
  cov_23irg4x7nn().f[9]++;
  const startTime =
  /* istanbul ignore next */
  (cov_23irg4x7nn().s[141]++, Date.now());
  /* istanbul ignore next */
  cov_23irg4x7nn().s[142]++;
  context.log('🕐 GDPR Scheduled Deletion Processor started at', new Date().toISOString());
  /* istanbul ignore next */
  cov_23irg4x7nn().s[143]++;
  try {
    /* istanbul ignore next */
    cov_23irg4x7nn().s[144]++;
    // Initialize all services
    await initializeServices(context);

    // Get pending deletion requests
    const pendingRequests =
    /* istanbul ignore next */
    (cov_23irg4x7nn().s[145]++, await getPendingDeletions(context));
    /* istanbul ignore next */
    cov_23irg4x7nn().s[146]++;
    if (pendingRequests.length === 0) {
      /* istanbul ignore next */
      cov_23irg4x7nn().b[19][0]++;
      cov_23irg4x7nn().s[147]++;
      context.log('✅ No pending deletion requests found');
      /* istanbul ignore next */
      cov_23irg4x7nn().s[148]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_23irg4x7nn().b[19][1]++;
    }

    // Process each deletion request
    const results =
    /* istanbul ignore next */
    (cov_23irg4x7nn().s[149]++, []);
    /* istanbul ignore next */
    cov_23irg4x7nn().s[150]++;
    for (const request of pendingRequests) {
      /* istanbul ignore next */
      cov_23irg4x7nn().s[151]++;
      try {
        const result =
        /* istanbul ignore next */
        (cov_23irg4x7nn().s[152]++, await processDataDeletion(context, request));
        /* istanbul ignore next */
        cov_23irg4x7nn().s[153]++;
        results.push(result);
      } catch (error) {
        /* istanbul ignore next */
        cov_23irg4x7nn().s[154]++;
        context.log.error(`❌ Failed to process request ${request.id}:`, error);
        /* istanbul ignore next */
        cov_23irg4x7nn().s[155]++;
        results.push({
          success: false,
          requestId: request.id,
          userId: request.userId,
          error: error.message
        });
      }
    }

    // Summary
    const successful =
    /* istanbul ignore next */
    (cov_23irg4x7nn().s[156]++, results.filter(r => {
      /* istanbul ignore next */
      cov_23irg4x7nn().f[10]++;
      cov_23irg4x7nn().s[157]++;
      return r.success;
    }).length);
    const failed =
    /* istanbul ignore next */
    (cov_23irg4x7nn().s[158]++, results.filter(r => {
      /* istanbul ignore next */
      cov_23irg4x7nn().f[11]++;
      cov_23irg4x7nn().s[159]++;
      return !r.success;
    }).length);
    const totalDuration =
    /* istanbul ignore next */
    (cov_23irg4x7nn().s[160]++, Date.now() - startTime);
    /* istanbul ignore next */
    cov_23irg4x7nn().s[161]++;
    context.log(`📊 GDPR Deletion Processing Summary:`);
    /* istanbul ignore next */
    cov_23irg4x7nn().s[162]++;
    context.log(`   Total requests processed: ${results.length}`);
    /* istanbul ignore next */
    cov_23irg4x7nn().s[163]++;
    context.log(`   Successful: ${successful}`);
    /* istanbul ignore next */
    cov_23irg4x7nn().s[164]++;
    context.log(`   Failed: ${failed}`);
    /* istanbul ignore next */
    cov_23irg4x7nn().s[165]++;
    context.log(`   Total processing time: ${totalDuration}ms`);

    // Create summary audit log
    /* istanbul ignore next */
    cov_23irg4x7nn().s[166]++;
    await createAuditLogEntry(context, {
      userId: 'system',
      action: 'scheduled_deletion_batch_processed',
      details: {
        totalRequests: results.length,
        successful,
        failed,
        processingTimeMs: totalDuration,
        results: results.map(r => {
          /* istanbul ignore next */
          cov_23irg4x7nn().f[12]++;
          cov_23irg4x7nn().s[167]++;
          return {
            requestId: r.requestId,
            userId: r.userId,
            success: r.success,
            deletedData: r.deletedData,
            errors: r.errors
          };
        })
      },
      complianceOfficer: 'scheduled-function'
    });
    /* istanbul ignore next */
    cov_23irg4x7nn().s[168]++;
    context.log(`✅ GDPR Scheduled Deletion Processor completed in ${totalDuration}ms`);
  } catch (error) {
    const totalDuration =
    /* istanbul ignore next */
    (cov_23irg4x7nn().s[169]++, Date.now() - startTime);
    /* istanbul ignore next */
    cov_23irg4x7nn().s[170]++;
    context.log.error(`❌ GDPR Scheduled Deletion Processor failed after ${totalDuration}ms:`, error);

    // Create error audit log
    /* istanbul ignore next */
    cov_23irg4x7nn().s[171]++;
    try {
      /* istanbul ignore next */
      cov_23irg4x7nn().s[172]++;
      await createAuditLogEntry(context, {
        userId: 'system',
        action: 'scheduled_deletion_batch_failed',
        details: {
          error: error.message,
          processingTimeMs: totalDuration
        },
        complianceOfficer: 'scheduled-function'
      });
    } catch (auditError) {
      /* istanbul ignore next */
      cov_23irg4x7nn().s[173]++;
      context.log.error('❌ Failed to create error audit log:', auditError);
    }
    /* istanbul ignore next */
    cov_23irg4x7nn().s[174]++;
    throw error;
  }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,