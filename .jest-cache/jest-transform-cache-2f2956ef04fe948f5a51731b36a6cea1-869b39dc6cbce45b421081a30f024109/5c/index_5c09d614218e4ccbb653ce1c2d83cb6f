a7372c56e29a4c39063399856220947c
/* istanbul ignore next */
function cov_29mpmilgif() {
  var path = "/Users/dikshantvashistha/PrepBettr/azure/followUpWorker/index.js";
  var hash = "073f9d98cb98ce4d4ca44a8ddeedba63c52f42bd";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dikshantvashistha/PrepBettr/azure/followUpWorker/index.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 16
        },
        end: {
          line: 1,
          column: 43
        }
      },
      "1": {
        start: {
          line: 2,
          column: 21
        },
        end: {
          line: 2,
          column: 61
        }
      },
      "2": {
        start: {
          line: 3,
          column: 25
        },
        end: {
          line: 3,
          column: 67
        }
      },
      "3": {
        start: {
          line: 4,
          column: 23
        },
        end: {
          line: 4,
          column: 38
        }
      },
      "4": {
        start: {
          line: 5,
          column: 56
        },
        end: {
          line: 5,
          column: 93
        }
      },
      "5": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 111,
          column: 3
        }
      },
      "6": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 74
        }
      },
      "7": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 109,
          column: 9
        }
      },
      "8": {
        start: {
          line: 15,
          column: 33
        },
        end: {
          line: 15,
          column: 98
        }
      },
      "9": {
        start: {
          line: 16,
          column: 67
        },
        end: {
          line: 16,
          column: 79
        }
      },
      "10": {
        start: {
          line: 18,
          column: 12
        },
        end: {
          line: 22,
          column: 14
        }
      },
      "11": {
        start: {
          line: 25,
          column: 24
        },
        end: {
          line: 25,
          column: 34
        }
      },
      "12": {
        start: {
          line: 26,
          column: 34
        },
        end: {
          line: 26,
          column: 57
        }
      },
      "13": {
        start: {
          line: 28,
          column: 12
        },
        end: {
          line: 39,
          column: 13
        }
      },
      "14": {
        start: {
          line: 30,
          column: 37
        },
        end: {
          line: 30,
          column: 76
        }
      },
      "15": {
        start: {
          line: 31,
          column: 16
        },
        end: {
          line: 31,
          column: 101
        }
      },
      "16": {
        start: {
          line: 33,
          column: 16
        },
        end: {
          line: 37,
          column: 18
        }
      },
      "17": {
        start: {
          line: 38,
          column: 16
        },
        end: {
          line: 38,
          column: 23
        }
      },
      "18": {
        start: {
          line: 42,
          column: 32
        },
        end: {
          line: 42,
          column: 70
        }
      },
      "19": {
        start: {
          line: 43,
          column: 12
        },
        end: {
          line: 50,
          column: 13
        }
      },
      "20": {
        start: {
          line: 44,
          column: 16
        },
        end: {
          line: 48,
          column: 18
        }
      },
      "21": {
        start: {
          line: 49,
          column: 16
        },
        end: {
          line: 49,
          column: 23
        }
      },
      "22": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 56,
          column: 13
        }
      },
      "23": {
        start: {
          line: 54,
          column: 16
        },
        end: {
          line: 54,
          column: 103
        }
      },
      "24": {
        start: {
          line: 55,
          column: 16
        },
        end: {
          line: 55,
          column: 23
        }
      },
      "25": {
        start: {
          line: 59,
          column: 32
        },
        end: {
          line: 59,
          column: 60
        }
      },
      "26": {
        start: {
          line: 60,
          column: 38
        },
        end: {
          line: 60,
          column: 76
        }
      },
      "27": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 66,
          column: 13
        }
      },
      "28": {
        start: {
          line: 64,
          column: 16
        },
        end: {
          line: 64,
          column: 70
        }
      },
      "29": {
        start: {
          line: 65,
          column: 16
        },
        end: {
          line: 65,
          column: 23
        }
      },
      "30": {
        start: {
          line: 69,
          column: 35
        },
        end: {
          line: 76,
          column: 14
        }
      },
      "31": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 97,
          column: 13
        }
      },
      "32": {
        start: {
          line: 80,
          column: 16
        },
        end: {
          line: 80,
          column: 62
        }
      },
      "33": {
        start: {
          line: 83,
          column: 16
        },
        end: {
          line: 83,
          column: 114
        }
      },
      "34": {
        start: {
          line: 86,
          column: 16
        },
        end: {
          line: 86,
          column: 108
        }
      },
      "35": {
        start: {
          line: 88,
          column: 16
        },
        end: {
          line: 88,
          column: 84
        }
      },
      "36": {
        start: {
          line: 90,
          column: 16
        },
        end: {
          line: 90,
          column: 105
        }
      },
      "37": {
        start: {
          line: 92,
          column: 16
        },
        end: {
          line: 96,
          column: 18
        }
      },
      "38": {
        start: {
          line: 100,
          column: 12
        },
        end: {
          line: 100,
          column: 71
        }
      },
      "39": {
        start: {
          line: 101,
          column: 12
        },
        end: {
          line: 105,
          column: 14
        }
      },
      "40": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 108,
          column: 24
        }
      },
      "41": {
        start: {
          line: 117,
          column: 4
        },
        end: {
          line: 140,
          column: 5
        }
      },
      "42": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 133,
          column: 9
        }
      },
      "43": {
        start: {
          line: 120,
          column: 16
        },
        end: {
          line: 120,
          column: 83
        }
      },
      "44": {
        start: {
          line: 123,
          column: 16
        },
        end: {
          line: 123,
          column: 82
        }
      },
      "45": {
        start: {
          line: 126,
          column: 16
        },
        end: {
          line: 126,
          column: 80
        }
      },
      "46": {
        start: {
          line: 129,
          column: 16
        },
        end: {
          line: 129,
          column: 79
        }
      },
      "47": {
        start: {
          line: 132,
          column: 16
        },
        end: {
          line: 132,
          column: 67
        }
      },
      "48": {
        start: {
          line: 135,
          column: 8
        },
        end: {
          line: 135,
          column: 68
        }
      },
      "49": {
        start: {
          line: 136,
          column: 8
        },
        end: {
          line: 139,
          column: 10
        }
      },
      "50": {
        start: {
          line: 147,
          column: 4
        },
        end: {
          line: 169,
          column: 5
        }
      },
      "51": {
        start: {
          line: 148,
          column: 32
        },
        end: {
          line: 153,
          column: 10
        }
      },
      "52": {
        start: {
          line: 156,
          column: 21
        },
        end: {
          line: 156,
          column: 97
        }
      },
      "53": {
        start: {
          line: 158,
          column: 8
        },
        end: {
          line: 162,
          column: 10
        }
      },
      "54": {
        start: {
          line: 164,
          column: 8
        },
        end: {
          line: 164,
          column: 65
        }
      },
      "55": {
        start: {
          line: 165,
          column: 8
        },
        end: {
          line: 168,
          column: 10
        }
      },
      "56": {
        start: {
          line: 176,
          column: 4
        },
        end: {
          line: 197,
          column: 5
        }
      },
      "57": {
        start: {
          line: 177,
          column: 32
        },
        end: {
          line: 182,
          column: 10
        }
      },
      "58": {
        start: {
          line: 184,
          column: 21
        },
        end: {
          line: 184,
          column: 96
        }
      },
      "59": {
        start: {
          line: 186,
          column: 8
        },
        end: {
          line: 190,
          column: 10
        }
      },
      "60": {
        start: {
          line: 192,
          column: 8
        },
        end: {
          line: 192,
          column: 64
        }
      },
      "61": {
        start: {
          line: 193,
          column: 8
        },
        end: {
          line: 196,
          column: 10
        }
      },
      "62": {
        start: {
          line: 204,
          column: 4
        },
        end: {
          line: 225,
          column: 5
        }
      },
      "63": {
        start: {
          line: 205,
          column: 32
        },
        end: {
          line: 210,
          column: 10
        }
      },
      "64": {
        start: {
          line: 212,
          column: 21
        },
        end: {
          line: 212,
          column: 89
        }
      },
      "65": {
        start: {
          line: 214,
          column: 8
        },
        end: {
          line: 218,
          column: 10
        }
      },
      "66": {
        start: {
          line: 220,
          column: 8
        },
        end: {
          line: 220,
          column: 62
        }
      },
      "67": {
        start: {
          line: 221,
          column: 8
        },
        end: {
          line: 224,
          column: 10
        }
      },
      "68": {
        start: {
          line: 232,
          column: 4
        },
        end: {
          line: 253,
          column: 5
        }
      },
      "69": {
        start: {
          line: 233,
          column: 32
        },
        end: {
          line: 238,
          column: 10
        }
      },
      "70": {
        start: {
          line: 240,
          column: 21
        },
        end: {
          line: 240,
          column: 92
        }
      },
      "71": {
        start: {
          line: 242,
          column: 8
        },
        end: {
          line: 246,
          column: 10
        }
      },
      "72": {
        start: {
          line: 248,
          column: 8
        },
        end: {
          line: 248,
          column: 60
        }
      },
      "73": {
        start: {
          line: 249,
          column: 8
        },
        end: {
          line: 252,
          column: 10
        }
      },
      "74": {
        start: {
          line: 260,
          column: 4
        },
        end: {
          line: 314,
          column: 5
        }
      },
      "75": {
        start: {
          line: 262,
          column: 8
        },
        end: {
          line: 262,
          column: 38
        }
      },
      "76": {
        start: {
          line: 263,
          column: 23
        },
        end: {
          line: 263,
          column: 51
        }
      },
      "77": {
        start: {
          line: 265,
          column: 37
        },
        end: {
          line: 265,
          column: 119
        }
      },
      "78": {
        start: {
          line: 267,
          column: 23
        },
        end: {
          line: 299,
          column: 9
        }
      },
      "79": {
        start: {
          line: 282,
          column: 61
        },
        end: {
          line: 282,
          column: 96
        }
      },
      "80": {
        start: {
          line: 301,
          column: 23
        },
        end: {
          line: 305,
          column: 10
        }
      },
      "81": {
        start: {
          line: 307,
          column: 8
        },
        end: {
          line: 307,
          column: 65
        }
      },
      "82": {
        start: {
          line: 310,
          column: 8
        },
        end: {
          line: 310,
          column: 68
        }
      },
      "83": {
        start: {
          line: 313,
          column: 8
        },
        end: {
          line: 313,
          column: 71
        }
      },
      "84": {
        start: {
          line: 321,
          column: 33
        },
        end: {
          line: 321,
          column: 115
        }
      },
      "85": {
        start: {
          line: 323,
          column: 4
        },
        end: {
          line: 387,
          column: 5
        }
      },
      "86": {
        start: {
          line: 325,
          column: 12
        },
        end: {
          line: 336,
          column: 21
        }
      },
      "87": {
        start: {
          line: 339,
          column: 12
        },
        end: {
          line: 350,
          column: 21
        }
      },
      "88": {
        start: {
          line: 353,
          column: 12
        },
        end: {
          line: 362,
          column: 21
        }
      },
      "89": {
        start: {
          line: 365,
          column: 12
        },
        end: {
          line: 376,
          column: 21
        }
      },
      "90": {
        start: {
          line: 379,
          column: 12
        },
        end: {
          line: 386,
          column: 21
        }
      },
      "91": {
        start: {
          line: 394,
          column: 4
        },
        end: {
          line: 424,
          column: 5
        }
      },
      "92": {
        start: {
          line: 400,
          column: 8
        },
        end: {
          line: 400,
          column: 90
        }
      },
      "93": {
        start: {
          line: 401,
          column: 8
        },
        end: {
          line: 401,
          column: 29
        }
      },
      "94": {
        start: {
          line: 404,
          column: 24
        },
        end: {
          line: 404,
          column: 44
        }
      },
      "95": {
        start: {
          line: 406,
          column: 8
        },
        end: {
          line: 418,
          column: 9
        }
      },
      "96": {
        start: {
          line: 408,
          column: 12
        },
        end: {
          line: 417,
          column: 15
        }
      },
      "97": {
        start: {
          line: 420,
          column: 8
        },
        end: {
          line: 420,
          column: 23
        }
      },
      "98": {
        start: {
          line: 422,
          column: 8
        },
        end: {
          line: 422,
          column: 55
        }
      },
      "99": {
        start: {
          line: 423,
          column: 8
        },
        end: {
          line: 423,
          column: 21
        }
      },
      "100": {
        start: {
          line: 431,
          column: 4
        },
        end: {
          line: 471,
          column: 5
        }
      },
      "101": {
        start: {
          line: 432,
          column: 23
        },
        end: {
          line: 432,
          column: 27
        }
      },
      "102": {
        start: {
          line: 433,
          column: 24
        },
        end: {
          line: 433,
          column: 25
        }
      },
      "103": {
        start: {
          line: 435,
          column: 8
        },
        end: {
          line: 446,
          column: 9
        }
      },
      "104": {
        start: {
          line: 437,
          column: 16
        },
        end: {
          line: 437,
          column: 46
        }
      },
      "105": {
        start: {
          line: 438,
          column: 16
        },
        end: {
          line: 438,
          column: 56
        }
      },
      "106": {
        start: {
          line: 439,
          column: 16
        },
        end: {
          line: 439,
          column: 22
        }
      },
      "107": {
        start: {
          line: 442,
          column: 16
        },
        end: {
          line: 442,
          column: 81
        }
      },
      "108": {
        start: {
          line: 443,
          column: 16
        },
        end: {
          line: 443,
          column: 23
        }
      },
      "109": {
        start: {
          line: 445,
          column: 16
        },
        end: {
          line: 445,
          column: 23
        }
      },
      "110": {
        start: {
          line: 448,
          column: 8
        },
        end: {
          line: 468,
          column: 9
        }
      },
      "111": {
        start: {
          line: 449,
          column: 34
        },
        end: {
          line: 449,
          column: 90
        }
      },
      "112": {
        start: {
          line: 451,
          column: 40
        },
        end: {
          line: 457,
          column: 13
        }
      },
      "113": {
        start: {
          line: 459,
          column: 12
        },
        end: {
          line: 465,
          column: 14
        }
      },
      "114": {
        start: {
          line: 467,
          column: 12
        },
        end: {
          line: 467,
          column: 113
        }
      },
      "115": {
        start: {
          line: 470,
          column: 8
        },
        end: {
          line: 470,
          column: 65
        }
      },
      "116": {
        start: {
          line: 478,
          column: 4
        },
        end: {
          line: 485,
          column: 6
        }
      },
      "117": {
        start: {
          line: 489,
          column: 4
        },
        end: {
          line: 497,
          column: 6
        }
      },
      "118": {
        start: {
          line: 501,
          column: 4
        },
        end: {
          line: 507,
          column: 6
        }
      },
      "119": {
        start: {
          line: 512,
          column: 4
        },
        end: {
          line: 512,
          column: 17
        }
      },
      "120": {
        start: {
          line: 517,
          column: 4
        },
        end: {
          line: 517,
          column: 85
        }
      },
      "121": {
        start: {
          line: 522,
          column: 4
        },
        end: {
          line: 522,
          column: 59
        }
      },
      "122": {
        start: {
          line: 529,
          column: 4
        },
        end: {
          line: 550,
          column: 5
        }
      },
      "123": {
        start: {
          line: 531,
          column: 47
        },
        end: {
          line: 531,
          column: 105
        }
      },
      "124": {
        start: {
          line: 534,
          column: 8
        },
        end: {
          line: 544,
          column: 10
        }
      },
      "125": {
        start: {
          line: 546,
          column: 8
        },
        end: {
          line: 546,
          column: 132
        }
      },
      "126": {
        start: {
          line: 548,
          column: 8
        },
        end: {
          line: 548,
          column: 79
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 11,
            column: 13
          },
          end: {
            line: 11,
            column: 14
          }
        },
        loc: {
          start: {
            line: 11,
            column: 43
          },
          end: {
            line: 110,
            column: 5
          }
        },
        line: 11
      },
      "1": {
        name: "processFollowUp",
        decl: {
          start: {
            line: 116,
            column: 15
          },
          end: {
            line: 116,
            column: 30
          }
        },
        loc: {
          start: {
            line: 116,
            column: 109
          },
          end: {
            line: 141,
            column: 1
          }
        },
        line: 116
      },
      "2": {
        name: "sendInitialFollowUp",
        decl: {
          start: {
            line: 146,
            column: 15
          },
          end: {
            line: 146,
            column: 34
          }
        },
        loc: {
          start: {
            line: 146,
            column: 69
          },
          end: {
            line: 170,
            column: 1
          }
        },
        line: 146
      },
      "3": {
        name: "sendSecondFollowUp",
        decl: {
          start: {
            line: 175,
            column: 15
          },
          end: {
            line: 175,
            column: 33
          }
        },
        loc: {
          start: {
            line: 175,
            column: 68
          },
          end: {
            line: 198,
            column: 1
          }
        },
        line: 175
      },
      "4": {
        name: "sendThankYouNote",
        decl: {
          start: {
            line: 203,
            column: 15
          },
          end: {
            line: 203,
            column: 31
          }
        },
        loc: {
          start: {
            line: 203,
            column: 66
          },
          end: {
            line: 226,
            column: 1
          }
        },
        line: 203
      },
      "5": {
        name: "sendStatusCheck",
        decl: {
          start: {
            line: 231,
            column: 15
          },
          end: {
            line: 231,
            column: 30
          }
        },
        loc: {
          start: {
            line: 231,
            column: 65
          },
          end: {
            line: 254,
            column: 1
          }
        },
        line: 231
      },
      "6": {
        name: "generateFollowUpMessage",
        decl: {
          start: {
            line: 259,
            column: 15
          },
          end: {
            line: 259,
            column: 38
          }
        },
        loc: {
          start: {
            line: 259,
            column: 84
          },
          end: {
            line: 315,
            column: 1
          }
        },
        line: 259
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 282,
            column: 54
          },
          end: {
            line: 282,
            column: 55
          }
        },
        loc: {
          start: {
            line: 282,
            column: 61
          },
          end: {
            line: 282,
            column: 96
          }
        },
        line: 282
      },
      "8": {
        name: "generateFallbackMessage",
        decl: {
          start: {
            line: 320,
            column: 9
          },
          end: {
            line: 320,
            column: 32
          }
        },
        loc: {
          start: {
            line: 320,
            column: 65
          },
          end: {
            line: 388,
            column: 1
          }
        },
        line: 320
      },
      "9": {
        name: "sendMessage",
        decl: {
          start: {
            line: 393,
            column: 15
          },
          end: {
            line: 393,
            column: 26
          }
        },
        loc: {
          start: {
            line: 393,
            column: 71
          },
          end: {
            line: 425,
            column: 1
          }
        },
        line: 393
      },
      "10": {
        name: "scheduleNextFollowUp",
        decl: {
          start: {
            line: 430,
            column: 15
          },
          end: {
            line: 430,
            column: 35
          }
        },
        loc: {
          start: {
            line: 430,
            column: 90
          },
          end: {
            line: 472,
            column: 1
          }
        },
        line: 430
      },
      "11": {
        name: "getJobApplication",
        decl: {
          start: {
            line: 476,
            column: 15
          },
          end: {
            line: 476,
            column: 32
          }
        },
        loc: {
          start: {
            line: 476,
            column: 48
          },
          end: {
            line: 486,
            column: 1
          }
        },
        line: 476
      },
      "12": {
        name: "getUserProfile",
        decl: {
          start: {
            line: 488,
            column: 15
          },
          end: {
            line: 488,
            column: 29
          }
        },
        loc: {
          start: {
            line: 488,
            column: 38
          },
          end: {
            line: 498,
            column: 1
          }
        },
        line: 488
      },
      "13": {
        name: "getUserAutoApplySettings",
        decl: {
          start: {
            line: 500,
            column: 15
          },
          end: {
            line: 500,
            column: 39
          }
        },
        loc: {
          start: {
            line: 500,
            column: 48
          },
          end: {
            line: 508,
            column: 1
          }
        },
        line: 500
      },
      "14": {
        name: "isFollowUpAlreadySent",
        decl: {
          start: {
            line: 510,
            column: 15
          },
          end: {
            line: 510,
            column: 36
          }
        },
        loc: {
          start: {
            line: 510,
            column: 58
          },
          end: {
            line: 513,
            column: 1
          }
        },
        line: 510
      },
      "15": {
        name: "markFollowUpAsSent",
        decl: {
          start: {
            line: 515,
            column: 15
          },
          end: {
            line: 515,
            column: 33
          }
        },
        loc: {
          start: {
            line: 515,
            column: 55
          },
          end: {
            line: 518,
            column: 1
          }
        },
        line: 515
      },
      "16": {
        name: "storeFollowUpRecord",
        decl: {
          start: {
            line: 520,
            column: 15
          },
          end: {
            line: 520,
            column: 34
          }
        },
        loc: {
          start: {
            line: 520,
            column: 49
          },
          end: {
            line: 523,
            column: 1
          }
        },
        line: 520
      },
      "17": {
        name: "sendFollowUpReminderNotification",
        decl: {
          start: {
            line: 528,
            column: 15
          },
          end: {
            line: 528,
            column: 47
          }
        },
        loc: {
          start: {
            line: 528,
            column: 101
          },
          end: {
            line: 551,
            column: 1
          }
        },
        line: 528
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 15,
            column: 33
          },
          end: {
            line: 15,
            column: 98
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 15,
            column: 65
          },
          end: {
            line: 15,
            column: 86
          }
        }, {
          start: {
            line: 15,
            column: 89
          },
          end: {
            line: 15,
            column: 98
          }
        }],
        line: 15
      },
      "1": {
        loc: {
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 39,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 39,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "2": {
        loc: {
          start: {
            line: 43,
            column: 12
          },
          end: {
            line: 50,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 12
          },
          end: {
            line: 50,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 43
      },
      "3": {
        loc: {
          start: {
            line: 53,
            column: 12
          },
          end: {
            line: 56,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 53,
            column: 12
          },
          end: {
            line: 56,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 53
      },
      "4": {
        loc: {
          start: {
            line: 63,
            column: 12
          },
          end: {
            line: 66,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 63,
            column: 12
          },
          end: {
            line: 66,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 63
      },
      "5": {
        loc: {
          start: {
            line: 78,
            column: 12
          },
          end: {
            line: 97,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 78,
            column: 12
          },
          end: {
            line: 97,
            column: 13
          }
        }, {
          start: {
            line: 91,
            column: 19
          },
          end: {
            line: 97,
            column: 13
          }
        }],
        line: 78
      },
      "6": {
        loc: {
          start: {
            line: 118,
            column: 8
          },
          end: {
            line: 133,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 119,
            column: 12
          },
          end: {
            line: 120,
            column: 83
          }
        }, {
          start: {
            line: 122,
            column: 12
          },
          end: {
            line: 123,
            column: 82
          }
        }, {
          start: {
            line: 125,
            column: 12
          },
          end: {
            line: 126,
            column: 80
          }
        }, {
          start: {
            line: 128,
            column: 12
          },
          end: {
            line: 129,
            column: 79
          }
        }, {
          start: {
            line: 131,
            column: 12
          },
          end: {
            line: 132,
            column: 67
          }
        }],
        line: 118
      },
      "7": {
        loc: {
          start: {
            line: 138,
            column: 21
          },
          end: {
            line: 138,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 138,
            column: 21
          },
          end: {
            line: 138,
            column: 34
          }
        }, {
          start: {
            line: 138,
            column: 38
          },
          end: {
            line: 138,
            column: 67
          }
        }],
        line: 138
      },
      "8": {
        loc: {
          start: {
            line: 160,
            column: 21
          },
          end: {
            line: 160,
            column: 102
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 160,
            column: 28
          },
          end: {
            line: 160,
            column: 65
          }
        }, {
          start: {
            line: 160,
            column: 68
          },
          end: {
            line: 160,
            column: 102
          }
        }],
        line: 160
      },
      "9": {
        loc: {
          start: {
            line: 188,
            column: 21
          },
          end: {
            line: 188,
            column: 100
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 188,
            column: 28
          },
          end: {
            line: 188,
            column: 64
          }
        }, {
          start: {
            line: 188,
            column: 67
          },
          end: {
            line: 188,
            column: 100
          }
        }],
        line: 188
      },
      "10": {
        loc: {
          start: {
            line: 216,
            column: 21
          },
          end: {
            line: 216,
            column: 96
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 216,
            column: 28
          },
          end: {
            line: 216,
            column: 62
          }
        }, {
          start: {
            line: 216,
            column: 65
          },
          end: {
            line: 216,
            column: 96
          }
        }],
        line: 216
      },
      "11": {
        loc: {
          start: {
            line: 244,
            column: 21
          },
          end: {
            line: 244,
            column: 92
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 244,
            column: 28
          },
          end: {
            line: 244,
            column: 60
          }
        }, {
          start: {
            line: 244,
            column: 63
          },
          end: {
            line: 244,
            column: 92
          }
        }],
        line: 244
      },
      "12": {
        loc: {
          start: {
            line: 307,
            column: 15
          },
          end: {
            line: 307,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 307,
            column: 15
          },
          end: {
            line: 307,
            column: 58
          }
        }, {
          start: {
            line: 307,
            column: 62
          },
          end: {
            line: 307,
            column: 64
          }
        }],
        line: 307
      },
      "13": {
        loc: {
          start: {
            line: 323,
            column: 4
          },
          end: {
            line: 387,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 324,
            column: 8
          },
          end: {
            line: 336,
            column: 21
          }
        }, {
          start: {
            line: 338,
            column: 8
          },
          end: {
            line: 350,
            column: 21
          }
        }, {
          start: {
            line: 352,
            column: 8
          },
          end: {
            line: 362,
            column: 21
          }
        }, {
          start: {
            line: 364,
            column: 8
          },
          end: {
            line: 376,
            column: 21
          }
        }, {
          start: {
            line: 378,
            column: 8
          },
          end: {
            line: 386,
            column: 21
          }
        }],
        line: 323
      },
      "14": {
        loc: {
          start: {
            line: 406,
            column: 8
          },
          end: {
            line: 418,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 406,
            column: 8
          },
          end: {
            line: 418,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 406
      },
      "15": {
        loc: {
          start: {
            line: 435,
            column: 8
          },
          end: {
            line: 446,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 436,
            column: 12
          },
          end: {
            line: 439,
            column: 22
          }
        }, {
          start: {
            line: 440,
            column: 12
          },
          end: {
            line: 443,
            column: 23
          }
        }, {
          start: {
            line: 444,
            column: 12
          },
          end: {
            line: 445,
            column: 23
          }
        }],
        line: 435
      },
      "16": {
        loc: {
          start: {
            line: 448,
            column: 8
          },
          end: {
            line: 468,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 448,
            column: 8
          },
          end: {
            line: 468,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 448
      },
      "17": {
        loc: {
          start: {
            line: 448,
            column: 12
          },
          end: {
            line: 448,
            column: 37
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 448,
            column: 12
          },
          end: {
            line: 448,
            column: 20
          }
        }, {
          start: {
            line: 448,
            column: 24
          },
          end: {
            line: 448,
            column: 37
          }
        }],
        line: 448
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0, 0, 0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0, 0, 0],
      "14": [0, 0],
      "15": [0, 0, 0],
      "16": [0, 0],
      "17": [0, 0]
    },
    inputSourceMap: null,
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "073f9d98cb98ce4d4ca44a8ddeedba63c52f42bd"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_29mpmilgif = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_29mpmilgif();
const {
  app
} =
/* istanbul ignore next */
(cov_29mpmilgif().s[0]++, require('@azure/functions'));
const queueService =
/* istanbul ignore next */
(cov_29mpmilgif().s[1]++, require('../lib/services/queue-service'));
const automationLogger =
/* istanbul ignore next */
(cov_29mpmilgif().s[2]++, require('../lib/services/automation-logs'));
const {
  v4: uuidv4
} =
/* istanbul ignore next */
(cov_29mpmilgif().s[3]++, require('uuid'));
const {
  initializeAzureOpenAI,
  getAzureOpenAIClient
} =
/* istanbul ignore next */
(cov_29mpmilgif().s[4]++, require('../lib/azure-openai-client'));

// Queue trigger function for processing follow-up reminders
/* istanbul ignore next */
cov_29mpmilgif().s[5]++;
app.storageQueue('followUpWorker', {
  queueName: 'follow-up-reminders',
  connection: 'AzureWebJobsStorage',
  handler: async (queueItem, context) => {
    /* istanbul ignore next */
    cov_29mpmilgif().f[0]++;
    cov_29mpmilgif().s[6]++;
    context.log('Follow Up Worker processing queue item:', queueItem);
    /* istanbul ignore next */
    cov_29mpmilgif().s[7]++;
    try {
      const reminderData =
      /* istanbul ignore next */
      (cov_29mpmilgif().s[8]++, typeof queueItem === 'string' ?
      /* istanbul ignore next */
      (cov_29mpmilgif().b[0][0]++, JSON.parse(queueItem)) :
      /* istanbul ignore next */
      (cov_29mpmilgif().b[0][1]++, queueItem));
      const {
        userId,
        applicationId,
        type,
        scheduledDate
      } =
      /* istanbul ignore next */
      (cov_29mpmilgif().s[9]++, reminderData);
      /* istanbul ignore next */
      cov_29mpmilgif().s[10]++;
      await automationLogger.logInfo('follow_up_processing_started', `Processing follow-up reminder for application ${applicationId}`, {
        userId,
        applicationId,
        type,
        scheduledDate
      });

      // Check if the follow-up is due
      const now =
      /* istanbul ignore next */
      (cov_29mpmilgif().s[11]++, new Date());
      const scheduledTime =
      /* istanbul ignore next */
      (cov_29mpmilgif().s[12]++, new Date(scheduledDate));
      /* istanbul ignore next */
      cov_29mpmilgif().s[13]++;
      if (now < scheduledTime) {
        /* istanbul ignore next */
        cov_29mpmilgif().b[1][0]++;
        // Follow-up is not due yet, re-queue with appropriate delay
        const delaySeconds =
        /* istanbul ignore next */
        (cov_29mpmilgif().s[14]++, Math.ceil((scheduledTime - now) / 1000));
        /* istanbul ignore next */
        cov_29mpmilgif().s[15]++;
        context.log(`Follow-up not due yet, re-queueing with ${delaySeconds} seconds delay`);
        /* istanbul ignore next */
        cov_29mpmilgif().s[16]++;
        await queueService.addMessage(queueService.queues.FOLLOW_UP_REMINDERS, reminderData, {
          visibilityTimeout: delaySeconds
        });
        /* istanbul ignore next */
        cov_29mpmilgif().s[17]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_29mpmilgif().b[1][1]++;
      }

      // Get application details
      const application =
      /* istanbul ignore next */
      (cov_29mpmilgif().s[18]++, await getJobApplication(applicationId));
      /* istanbul ignore next */
      cov_29mpmilgif().s[19]++;
      if (!application) {
        /* istanbul ignore next */
        cov_29mpmilgif().b[2][0]++;
        cov_29mpmilgif().s[20]++;
        await automationLogger.logWarning('follow_up_application_not_found', `Application ${applicationId} not found, skipping follow-up`, {
          applicationId,
          type
        });
        /* istanbul ignore next */
        cov_29mpmilgif().s[21]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_29mpmilgif().b[2][1]++;
      }

      // Check if follow-up has already been sent
      cov_29mpmilgif().s[22]++;
      if (await isFollowUpAlreadySent(applicationId, type)) {
        /* istanbul ignore next */
        cov_29mpmilgif().b[3][0]++;
        cov_29mpmilgif().s[23]++;
        context.log(`Follow-up of type ${type} already sent for application ${applicationId}`);
        /* istanbul ignore next */
        cov_29mpmilgif().s[24]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_29mpmilgif().b[3][1]++;
      }

      // Get user preferences
      const userProfile =
      /* istanbul ignore next */
      (cov_29mpmilgif().s[25]++, await getUserProfile(userId));
      const autoApplySettings =
      /* istanbul ignore next */
      (cov_29mpmilgif().s[26]++, await getUserAutoApplySettings(userId));

      // Check if user still wants follow-ups
      /* istanbul ignore next */
      cov_29mpmilgif().s[27]++;
      if (!autoApplySettings.followUpEnabled) {
        /* istanbul ignore next */
        cov_29mpmilgif().b[4][0]++;
        cov_29mpmilgif().s[28]++;
        context.log(`User ${userId} has disabled follow-ups`);
        /* istanbul ignore next */
        cov_29mpmilgif().s[29]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_29mpmilgif().b[4][1]++;
      }

      // Generate and send follow-up message
      const followUpResult =
      /* istanbul ignore next */
      (cov_29mpmilgif().s[30]++, await processFollowUp({
        userId,
        applicationId,
        application,
        userProfile,
        type,
        autoApplySettings
      }));
      /* istanbul ignore next */
      cov_29mpmilgif().s[31]++;
      if (followUpResult.success) {
        /* istanbul ignore next */
        cov_29mpmilgif().b[5][0]++;
        cov_29mpmilgif().s[32]++;
        // Mark follow-up as sent
        await markFollowUpAsSent(applicationId, type);

        // Send follow-up reminder notification
        /* istanbul ignore next */
        cov_29mpmilgif().s[33]++;
        await sendFollowUpReminderNotification(userId, application, type, followUpResult.followUpMessage);

        // Schedule next follow-up if applicable
        /* istanbul ignore next */
        cov_29mpmilgif().s[34]++;
        await scheduleNextFollowUp(userId, applicationId, type, autoApplySettings.followUpSchedule);
        /* istanbul ignore next */
        cov_29mpmilgif().s[35]++;
        await automationLogger.logFollowUpSent(userId, applicationId, type);
        /* istanbul ignore next */
        cov_29mpmilgif().s[36]++;
        context.log(`Successfully processed ${type} follow-up for application ${applicationId}`);
      } else {
        /* istanbul ignore next */
        cov_29mpmilgif().b[5][1]++;
        cov_29mpmilgif().s[37]++;
        await automationLogger.logError('follow_up_processing_failed', new Error(followUpResult.message), {
          userId,
          applicationId,
          type,
          followUpResult
        });
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_29mpmilgif().s[38]++;
      context.log('Error processing follow-up reminder:', error);
      /* istanbul ignore next */
      cov_29mpmilgif().s[39]++;
      await automationLogger.logError('follow_up_processing_error', error, {
        queueItem
      });

      // Re-throw to trigger Azure Functions retry logic
      /* istanbul ignore next */
      cov_29mpmilgif().s[40]++;
      throw error;
    }
  }
});

/**
 * Process follow-up based on type
 */
async function processFollowUp({
  userId,
  applicationId,
  application,
  userProfile,
  type,
  autoApplySettings
}) {
  /* istanbul ignore next */
  cov_29mpmilgif().f[1]++;
  cov_29mpmilgif().s[41]++;
  try {
    /* istanbul ignore next */
    cov_29mpmilgif().s[42]++;
    switch (type) {
      case 'initial_follow_up':
        /* istanbul ignore next */
        cov_29mpmilgif().b[6][0]++;
        cov_29mpmilgif().s[43]++;
        return await sendInitialFollowUp(userId, application, userProfile);
      case 'second_follow_up':
        /* istanbul ignore next */
        cov_29mpmilgif().b[6][1]++;
        cov_29mpmilgif().s[44]++;
        return await sendSecondFollowUp(userId, application, userProfile);
      case 'thank_you':
        /* istanbul ignore next */
        cov_29mpmilgif().b[6][2]++;
        cov_29mpmilgif().s[45]++;
        return await sendThankYouNote(userId, application, userProfile);
      case 'status_check':
        /* istanbul ignore next */
        cov_29mpmilgif().b[6][3]++;
        cov_29mpmilgif().s[46]++;
        return await sendStatusCheck(userId, application, userProfile);
      default:
        /* istanbul ignore next */
        cov_29mpmilgif().b[6][4]++;
        cov_29mpmilgif().s[47]++;
        throw new Error(`Unknown follow-up type: ${type}`);
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_29mpmilgif().s[48]++;
    console.error(`Error processing ${type} follow-up:`, error);
    /* istanbul ignore next */
    cov_29mpmilgif().s[49]++;
    return {
      success: false,
      message:
      /* istanbul ignore next */
      (cov_29mpmilgif().b[7][0]++, error.message) ||
      /* istanbul ignore next */
      (cov_29mpmilgif().b[7][1]++, 'Failed to process follow-up')
    };
  }
}

/**
 * Send initial follow-up message
 */
async function sendInitialFollowUp(userId, application, userProfile) {
  /* istanbul ignore next */
  cov_29mpmilgif().f[2]++;
  cov_29mpmilgif().s[50]++;
  try {
    const followUpMessage =
    /* istanbul ignore next */
    (cov_29mpmilgif().s[51]++, await generateFollowUpMessage({
      type: 'initial_follow_up',
      application,
      userProfile,
      context: 'Express continued interest and highlight relevant qualifications'
    }));

    // TODO: Send via appropriate channel (email, LinkedIn, etc.)
    const sent =
    /* istanbul ignore next */
    (cov_29mpmilgif().s[52]++, await sendMessage(userId, application, followUpMessage, 'initial_follow_up'));
    /* istanbul ignore next */
    cov_29mpmilgif().s[53]++;
    return {
      success: sent,
      message: sent ?
      /* istanbul ignore next */
      (cov_29mpmilgif().b[8][0]++, 'Initial follow-up sent successfully') :
      /* istanbul ignore next */
      (cov_29mpmilgif().b[8][1]++, 'Failed to send initial follow-up'),
      followUpMessage
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_29mpmilgif().s[54]++;
    console.error('Error sending initial follow-up:', error);
    /* istanbul ignore next */
    cov_29mpmilgif().s[55]++;
    return {
      success: false,
      message: error.message
    };
  }
}

/**
 * Send second follow-up message
 */
async function sendSecondFollowUp(userId, application, userProfile) {
  /* istanbul ignore next */
  cov_29mpmilgif().f[3]++;
  cov_29mpmilgif().s[56]++;
  try {
    const followUpMessage =
    /* istanbul ignore next */
    (cov_29mpmilgif().s[57]++, await generateFollowUpMessage({
      type: 'second_follow_up',
      application,
      userProfile,
      context: 'Final polite follow-up with additional value proposition'
    }));
    const sent =
    /* istanbul ignore next */
    (cov_29mpmilgif().s[58]++, await sendMessage(userId, application, followUpMessage, 'second_follow_up'));
    /* istanbul ignore next */
    cov_29mpmilgif().s[59]++;
    return {
      success: sent,
      message: sent ?
      /* istanbul ignore next */
      (cov_29mpmilgif().b[9][0]++, 'Second follow-up sent successfully') :
      /* istanbul ignore next */
      (cov_29mpmilgif().b[9][1]++, 'Failed to send second follow-up'),
      followUpMessage
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_29mpmilgif().s[60]++;
    console.error('Error sending second follow-up:', error);
    /* istanbul ignore next */
    cov_29mpmilgif().s[61]++;
    return {
      success: false,
      message: error.message
    };
  }
}

/**
 * Send thank you note
 */
async function sendThankYouNote(userId, application, userProfile) {
  /* istanbul ignore next */
  cov_29mpmilgif().f[4]++;
  cov_29mpmilgif().s[62]++;
  try {
    const followUpMessage =
    /* istanbul ignore next */
    (cov_29mpmilgif().s[63]++, await generateFollowUpMessage({
      type: 'thank_you',
      application,
      userProfile,
      context: 'Professional thank you note after interview or interaction'
    }));
    const sent =
    /* istanbul ignore next */
    (cov_29mpmilgif().s[64]++, await sendMessage(userId, application, followUpMessage, 'thank_you'));
    /* istanbul ignore next */
    cov_29mpmilgif().s[65]++;
    return {
      success: sent,
      message: sent ?
      /* istanbul ignore next */
      (cov_29mpmilgif().b[10][0]++, 'Thank you note sent successfully') :
      /* istanbul ignore next */
      (cov_29mpmilgif().b[10][1]++, 'Failed to send thank you note'),
      followUpMessage
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_29mpmilgif().s[66]++;
    console.error('Error sending thank you note:', error);
    /* istanbul ignore next */
    cov_29mpmilgif().s[67]++;
    return {
      success: false,
      message: error.message
    };
  }
}

/**
 * Send status check message
 */
async function sendStatusCheck(userId, application, userProfile) {
  /* istanbul ignore next */
  cov_29mpmilgif().f[5]++;
  cov_29mpmilgif().s[68]++;
  try {
    const followUpMessage =
    /* istanbul ignore next */
    (cov_29mpmilgif().s[69]++, await generateFollowUpMessage({
      type: 'status_check',
      application,
      userProfile,
      context: 'Polite inquiry about application status and timeline'
    }));
    const sent =
    /* istanbul ignore next */
    (cov_29mpmilgif().s[70]++, await sendMessage(userId, application, followUpMessage, 'status_check'));
    /* istanbul ignore next */
    cov_29mpmilgif().s[71]++;
    return {
      success: sent,
      message: sent ?
      /* istanbul ignore next */
      (cov_29mpmilgif().b[11][0]++, 'Status check sent successfully') :
      /* istanbul ignore next */
      (cov_29mpmilgif().b[11][1]++, 'Failed to send status check'),
      followUpMessage
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_29mpmilgif().s[72]++;
    console.error('Error sending status check:', error);
    /* istanbul ignore next */
    cov_29mpmilgif().s[73]++;
    return {
      success: false,
      message: error.message
    };
  }
}

/**
 * Generate AI-powered follow-up message
 */
async function generateFollowUpMessage({
  type,
  application,
  userProfile,
  context
}) {
  /* istanbul ignore next */
  cov_29mpmilgif().f[6]++;
  cov_29mpmilgif().s[74]++;
  try {
    /* istanbul ignore next */
    cov_29mpmilgif().s[75]++;
    // Initialize Azure OpenAI client
    await initializeAzureOpenAI();
    const client =
    /* istanbul ignore next */
    (cov_29mpmilgif().s[76]++, await getAzureOpenAIClient());
    const daysSinceApplication =
    /* istanbul ignore next */
    (cov_29mpmilgif().s[77]++, Math.floor((new Date() - new Date(application.appliedAt)) / (1000 * 60 * 60 * 24)));
    const prompt =
    /* istanbul ignore next */
    (cov_29mpmilgif().s[78]++, `
            Generate a professional follow-up message for a job application:
            
            FOLLOW-UP TYPE: ${type}
            CONTEXT: ${context}
            
            APPLICATION DETAILS:
            Position: ${application.jobTitle}
            Company: ${application.company}
            Applied: ${daysSinceApplication} days ago
            Portal: ${application.portal}
            
            CANDIDATE INFO:
            Name: ${userProfile.name}
            Skills: ${userProfile.skills?.join(', ')}
            Experience: ${userProfile.experience?.map(exp => {
      /* istanbul ignore next */
      cov_29mpmilgif().f[7]++;
      cov_29mpmilgif().s[79]++;
      return `${exp.position} at ${exp.company}`;
    }).join(', ')}
            
            Requirements:
            1. Professional and respectful tone
            2. Concise and to the point
            3. Show genuine interest in the role
            4. Add value without being pushy
            5. Include appropriate subject line
            6. Keep it under 150 words
            
            Format:
            Subject: [Subject Line]
            
            [Message Body]
            
            Best regards,
            ${userProfile.name}
        `);
    const result =
    /* istanbul ignore next */
    (cov_29mpmilgif().s[80]++, await client.chat.completions.create({
      messages: [{
        role: 'user',
        content: prompt
      }],
      max_tokens: 800,
      temperature: 0.7
    }));
    /* istanbul ignore next */
    cov_29mpmilgif().s[81]++;
    return /* istanbul ignore next */(cov_29mpmilgif().b[12][0]++, result.choices[0]?.message?.content?.trim()) ||
    /* istanbul ignore next */
    (cov_29mpmilgif().b[12][1]++, '');
  } catch (error) {
    /* istanbul ignore next */
    cov_29mpmilgif().s[82]++;
    console.error('Error generating follow-up message:', error);

    // Fallback message based on type
    /* istanbul ignore next */
    cov_29mpmilgif().s[83]++;
    return generateFallbackMessage(type, application, userProfile);
  }
}

/**
 * Generate fallback follow-up message
 */
function generateFallbackMessage(type, application, userProfile) {
  /* istanbul ignore next */
  cov_29mpmilgif().f[8]++;
  const daysSinceApplication =
  /* istanbul ignore next */
  (cov_29mpmilgif().s[84]++, Math.floor((new Date() - new Date(application.appliedAt)) / (1000 * 60 * 60 * 24)));
  /* istanbul ignore next */
  cov_29mpmilgif().s[85]++;
  switch (type) {
    case 'initial_follow_up':
      /* istanbul ignore next */
      cov_29mpmilgif().b[13][0]++;
      cov_29mpmilgif().s[86]++;
      return `Subject: Following up on ${application.jobTitle} application

Dear Hiring Manager,

I hope this email finds you well. I wanted to follow up on my application for the ${application.jobTitle} position at ${application.company}, which I submitted ${daysSinceApplication} days ago.

I remain very interested in this opportunity and believe my experience in ${userProfile.skills?.slice(0, 2).join(' and ')} would be valuable to your team. I would welcome the opportunity to discuss how I can contribute to ${application.company}'s success.

Thank you for your time and consideration.

Best regards,
${userProfile.name}`;
    case 'second_follow_up':
      /* istanbul ignore next */
      cov_29mpmilgif().b[13][1]++;
      cov_29mpmilgif().s[87]++;
      return `Subject: Final follow-up - ${application.jobTitle} position

Dear Hiring Manager,

I wanted to reach out one final time regarding my application for the ${application.jobTitle} role at ${application.company}. I understand you likely receive many applications, but I wanted to reiterate my strong interest in this position.

If you need any additional information or have questions about my background, I would be happy to provide them.

Thank you for your consideration.

Best regards,
${userProfile.name}`;
    case 'thank_you':
      /* istanbul ignore next */
      cov_29mpmilgif().b[13][2]++;
      cov_29mpmilgif().s[88]++;
      return `Subject: Thank you for your time

Dear Hiring Manager,

Thank you for taking the time to review my application for the ${application.jobTitle} position at ${application.company}. I appreciate the opportunity to be considered for this role.

If you need any additional information, please don't hesitate to reach out.

Best regards,
${userProfile.name}`;
    case 'status_check':
      /* istanbul ignore next */
      cov_29mpmilgif().b[13][3]++;
      cov_29mpmilgif().s[89]++;
      return `Subject: Application status inquiry - ${application.jobTitle}

Dear Hiring Manager,

I hope this message finds you well. I wanted to inquire about the status of my application for the ${application.jobTitle} position at ${application.company}, which I submitted ${daysSinceApplication} days ago.

I understand the selection process takes time, and I wanted to confirm that my application was received. I remain very interested in this opportunity.

Thank you for your time.

Best regards,
${userProfile.name}`;
    default:
      /* istanbul ignore next */
      cov_29mpmilgif().b[13][4]++;
      cov_29mpmilgif().s[90]++;
      return `Subject: Following up on my application

Dear Hiring Manager,

I wanted to follow up on my application for the ${application.jobTitle} position at ${application.company}. I remain interested in this opportunity and would welcome the chance to discuss my qualifications further.

Best regards,
${userProfile.name}`;
  }
}

/**
 * Send message via appropriate channel
 */
async function sendMessage(userId, application, message, followUpType) {
  /* istanbul ignore next */
  cov_29mpmilgif().f[9]++;
  cov_29mpmilgif().s[91]++;
  try {
    /* istanbul ignore next */
    cov_29mpmilgif().s[92]++;
    // TODO: Implement actual message sending via:
    // 1. Email service (SendGrid, AWS SES, etc.)
    // 2. LinkedIn API (if connected)
    // 3. Other messaging platforms

    console.log(`Sending ${followUpType} message for application ${application.id}:`);
    /* istanbul ignore next */
    cov_29mpmilgif().s[93]++;
    console.log(message);

    // For demonstration, simulate sending
    const success =
    /* istanbul ignore next */
    (cov_29mpmilgif().s[94]++, Math.random() > 0.05); // 95% success rate
    /* istanbul ignore next */
    cov_29mpmilgif().s[95]++;
    if (success) {
      /* istanbul ignore next */
      cov_29mpmilgif().b[14][0]++;
      cov_29mpmilgif().s[96]++;
      // Store follow-up record (TODO: implement proper storage)
      await storeFollowUpRecord({
        id: uuidv4(),
        userId,
        applicationId: application.id,
        type: followUpType,
        message,
        sentAt: new Date().toISOString(),
        channel: 'email',
        // or 'linkedin', etc.
        status: 'sent'
      });
    } else
    /* istanbul ignore next */
    {
      cov_29mpmilgif().b[14][1]++;
    }
    cov_29mpmilgif().s[97]++;
    return success;
  } catch (error) {
    /* istanbul ignore next */
    cov_29mpmilgif().s[98]++;
    console.error('Error sending message:', error);
    /* istanbul ignore next */
    cov_29mpmilgif().s[99]++;
    return false;
  }
}

/**
 * Schedule next follow-up in the sequence
 */
async function scheduleNextFollowUp(userId, applicationId, currentType, followUpSchedule) {
  /* istanbul ignore next */
  cov_29mpmilgif().f[10]++;
  cov_29mpmilgif().s[100]++;
  try {
    let nextType =
    /* istanbul ignore next */
    (cov_29mpmilgif().s[101]++, null);
    let delayDays =
    /* istanbul ignore next */
    (cov_29mpmilgif().s[102]++, 0);
    /* istanbul ignore next */
    cov_29mpmilgif().s[103]++;
    switch (currentType) {
      case 'initial_follow_up':
        /* istanbul ignore next */
        cov_29mpmilgif().b[15][0]++;
        cov_29mpmilgif().s[104]++;
        nextType = 'second_follow_up';
        /* istanbul ignore next */
        cov_29mpmilgif().s[105]++;
        delayDays = followUpSchedule.secondDays;
        /* istanbul ignore next */
        cov_29mpmilgif().s[106]++;
        break;
      case 'second_follow_up':
        /* istanbul ignore next */
        cov_29mpmilgif().b[15][1]++;
        cov_29mpmilgif().s[107]++;
        // No more follow-ups after second follow-up
        console.log(`No more follow-ups scheduled after ${currentType}`);
        /* istanbul ignore next */
        cov_29mpmilgif().s[108]++;
        return;
      default:
        /* istanbul ignore next */
        cov_29mpmilgif().b[15][2]++;
        cov_29mpmilgif().s[109]++;
        return;
    }
    /* istanbul ignore next */
    cov_29mpmilgif().s[110]++;
    if (
    /* istanbul ignore next */
    (cov_29mpmilgif().b[17][0]++, nextType) &&
    /* istanbul ignore next */
    (cov_29mpmilgif().b[17][1]++, delayDays > 0)) {
      /* istanbul ignore next */
      cov_29mpmilgif().b[16][0]++;
      const scheduledDate =
      /* istanbul ignore next */
      (cov_29mpmilgif().s[111]++, new Date(Date.now() + delayDays * 24 * 60 * 60 * 1000));
      const nextFollowUpMessage =
      /* istanbul ignore next */
      (cov_29mpmilgif().s[112]++, {
        userId,
        applicationId,
        type: nextType,
        scheduledDate: scheduledDate.toISOString(),
        createdAt: new Date().toISOString()
      });
      /* istanbul ignore next */
      cov_29mpmilgif().s[113]++;
      await queueService.addMessage(queueService.queues.FOLLOW_UP_REMINDERS, nextFollowUpMessage, {
        visibilityTimeout: delayDays * 24 * 60 * 60 // Delay until follow-up date
      });
      /* istanbul ignore next */
      cov_29mpmilgif().s[114]++;
      console.log(`Scheduled ${nextType} follow-up for application ${applicationId} in ${delayDays} days`);
    } else
    /* istanbul ignore next */
    {
      cov_29mpmilgif().b[16][1]++;
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_29mpmilgif().s[115]++;
    console.error('Error scheduling next follow-up:', error);
  }
}

// Utility functions (TODO: Implement with proper data storage)

async function getJobApplication(applicationId) {
  /* istanbul ignore next */
  cov_29mpmilgif().f[11]++;
  cov_29mpmilgif().s[116]++;
  // Mock application data
  return {
    id: applicationId,
    jobTitle: 'Senior React Developer',
    company: 'TechFlow Solutions',
    portal: 'LinkedIn',
    appliedAt: new Date(Date.now() - 3 * 24 * 60 * 60 * 1000).toISOString(),
    // 3 days ago
    status: 'applied'
  };
}
async function getUserProfile(userId) {
  /* istanbul ignore next */
  cov_29mpmilgif().f[12]++;
  cov_29mpmilgif().s[117]++;
  return {
    id: userId,
    name: 'John Doe',
    email: 'john.doe@example.com',
    skills: ['JavaScript', 'React', 'TypeScript', 'Node.js'],
    experience: [{
      position: 'Frontend Developer',
      company: 'Tech Corp',
      technologies: ['React', 'TypeScript']
    }]
  };
}
async function getUserAutoApplySettings(userId) {
  /* istanbul ignore next */
  cov_29mpmilgif().f[13]++;
  cov_29mpmilgif().s[118]++;
  return {
    followUpEnabled: true,
    followUpSchedule: {
      initialDays: 3,
      secondDays: 7
    }
  };
}
async function isFollowUpAlreadySent(applicationId, type) {
  /* istanbul ignore next */
  cov_29mpmilgif().f[14]++;
  cov_29mpmilgif().s[119]++;
  // TODO: Check database for existing follow-up records
  return false; // For demonstration, assume no duplicates
}
async function markFollowUpAsSent(applicationId, type) {
  /* istanbul ignore next */
  cov_29mpmilgif().f[15]++;
  cov_29mpmilgif().s[120]++;
  // TODO: Update database to mark follow-up as sent
  console.log(`Marked ${type} follow-up as sent for application ${applicationId}`);
}
async function storeFollowUpRecord(followUpData) {
  /* istanbul ignore next */
  cov_29mpmilgif().f[16]++;
  cov_29mpmilgif().s[121]++;
  // TODO: Store in database (Firestore, etc.)
  console.log('Storing follow-up record:', followUpData);
}

/**
 * Send follow-up reminder notification
 */
async function sendFollowUpReminderNotification(userId, application, followUpType, suggestedMessage) {
  /* istanbul ignore next */
  cov_29mpmilgif().f[17]++;
  cov_29mpmilgif().s[122]++;
  try {
    // Import notification integration service
    const {
      jobNotificationIntegration
    } =
    /* istanbul ignore next */
    (cov_29mpmilgif().s[123]++, require('../../lib/services/job-notification-integration'));

    // Send follow-up reminder notification
    /* istanbul ignore next */
    cov_29mpmilgif().s[124]++;
    await jobNotificationIntegration.notifyFollowUpReminder(userId, {
      id: application.id,
      jobTitle: application.jobTitle,
      company: application.company,
      appliedAt: new Date(application.appliedAt)
    }, followUpType, suggestedMessage);
    /* istanbul ignore next */
    cov_29mpmilgif().s[125]++;
    console.log(`Follow-up reminder notification sent for user ${userId}, application ${application.id}, type ${followUpType}`);
  } catch (error) {
    /* istanbul ignore next */
    cov_29mpmilgif().s[126]++;
    console.error('Error sending follow-up reminder notification:', error);
    // Don't throw error here to avoid breaking the follow-up workflow
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,