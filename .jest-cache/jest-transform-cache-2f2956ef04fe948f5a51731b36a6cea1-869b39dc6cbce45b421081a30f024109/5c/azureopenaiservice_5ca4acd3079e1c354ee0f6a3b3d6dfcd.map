{"version":3,"names":["cov_18shj8vvy8","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","openai_1","require","azure_config_browser_1","AzureOpenAIService","constructor","client","isInitialized","modelDeployment","conversationHistory","interviewContext","preliminaryCollected","currentQuestionCount","maxQuestions","prelimQuestions","prelimIndex","candidateProfile","initialize","secrets","fetchAzureSecrets","azureOpenAIKey","azureOpenAIEndpoint","azureOpenAIDeployment","console","warn","AzureOpenAI","apiKey","endpoint","deployment","apiVersion","dangerouslyAllowBrowser","log","error","setInterviewContext","context","Object","assign","_b","_a","_d","_c","_f","_e","buildSystemContext","currentRole","techStack","yearsExperience","keySkills","position","company","difficulty","systemPrompt","getSystemPrompt","basePrompt","startInterviewConversation","Error","greeting","firstQuestion","openingMessage","content","questionNumber","isComplete","getOpeningMessage","question","generateInterviewQuestion","getFallbackQuestion","processUserResponse","userResponse","length","questionKeys","nextQuestion","systemContext","role","requestedQuestions","parseInt","questionCount","Math","min","max","push","completion","chat","completions","create","model","messages","temperature","max_tokens","top_p","frequency_penalty","presence_penalty","assistantResponse","choices","message","followUpSuggestions","generateFollowUpSuggestions","questionPrompt","recentContext","slice","trim","generateCompletion","prompt","generateInterviewSummary","summaryPrompt","getConversationHistory","filter","msg","clearConversation","isReady","dispose","exports","azureOpenAIService"],"sources":["/Users/dikshantvashistha/PrepBettr/azure/lib/services/azure-openai-service.ts"],"sourcesContent":["/**\n * @deprecated This service is deprecated due to security concerns.\n * It attempts to initialize Azure OpenAI from browser environment variables,\n * which exposes credentials in the client-side code.\n * \n * Use azure-openai-service-server.ts for server-side API routes instead.\n * This file is kept for backward compatibility but should not be used in production.\n */\n\nimport { AzureOpenAI } from 'openai';\nimport { fetchAzureSecrets } from '../../../lib/azure-config-browser';\n\nexport interface ConversationMessage {\n  role: 'system' | 'user' | 'assistant';\n  content: string;\n}\n\nexport interface CandidateProfile {\n  currentRole?: string;\n  techStack?: string;\n  yearsExperience?: string;\n  keySkills?: string;\n  questionCount?: string;\n}\n\nexport interface InterviewContext {\n  type: 'technical' | 'behavioral' | 'general';\n  position?: string;\n  company?: string;\n  difficulty?: 'easy' | 'medium' | 'hard';\n  preliminaryCollected?: boolean; // Default: false - Indicates if preliminary info has been collected\n  currentQuestionCount?: number; // Current number of questions asked in the interview\n  maxQuestions?: number; // Default: 10 - Maximum number of questions for the interview\n}\n\nexport interface GenerationResponse {\n  content: string;\n  questionNumber?: number;\n  isComplete?: boolean;\n  followUpSuggestions?: string[];\n}\n\nexport class AzureOpenAIService {\n  private client: AzureOpenAI | null = null;\n  private isInitialized = false;\n  private modelDeployment: string = 'gpt-4o'; // Store the deployment name as model\n  private conversationHistory: ConversationMessage[] = [];\n  private interviewContext: InterviewContext = { \n    type: 'general',\n    preliminaryCollected: false,\n    currentQuestionCount: 0,\n    maxQuestions: 10\n  };\n  \n  // Preliminary questions for gathering candidate profile\n  private prelimQuestions = [\n    'What is your current role?',\n    'What primary tech stack do you use?',\n    'How many years of experience do you have?',\n    'What are your key skills?',\n    'How many interview questions would you like?'\n  ];\n  private prelimIndex = 0;\n  private candidateProfile: Record<string, string> = {};\n\n  /**\n   * Initialize the Azure OpenAI service\n   */\n  async initialize(): Promise<boolean> {\n    try {\n      const secrets = await fetchAzureSecrets();\n      \n      if (!secrets.azureOpenAIKey || !secrets.azureOpenAIEndpoint || !secrets.azureOpenAIDeployment) {\n        console.warn('‚ö†Ô∏è Azure OpenAI credentials not available');\n        return false;\n      }\n\n      this.client = new AzureOpenAI({\n        apiKey: secrets.azureOpenAIKey,\n        endpoint: secrets.azureOpenAIEndpoint,\n        deployment: secrets.azureOpenAIDeployment,\n        apiVersion: '2024-02-15-preview', // Using stable API version\n        dangerouslyAllowBrowser: true\n      });\n      \n      // Store the deployment name for use as model in API calls\n      this.modelDeployment = secrets.azureOpenAIDeployment;\n\n      this.isInitialized = true;\n      console.log('‚úÖ Azure OpenAI Service initialized');\n      return true;\n    } catch (error) {\n      console.error('‚ùå Failed to initialize Azure OpenAI Service:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Set interview context for conversation management\n   */\n  setInterviewContext(context: Partial<InterviewContext>): void {\n    // Merge context while preserving defaults\n    this.interviewContext = { \n      ...this.interviewContext, \n      ...context,\n      // Ensure defaults are set if not provided\n      preliminaryCollected: context.preliminaryCollected ?? this.interviewContext.preliminaryCollected ?? false,\n      currentQuestionCount: context.currentQuestionCount ?? this.interviewContext.currentQuestionCount ?? 0,\n      maxQuestions: context.maxQuestions ?? this.interviewContext.maxQuestions ?? 10\n    };\n    console.log('üìã Interview context updated:', this.interviewContext);\n  }\n\n  /**\n   * Build system context from candidate profile\n   */\n  private buildSystemContext(): string {\n    const { currentRole, techStack, yearsExperience, keySkills } = this.candidateProfile;\n    const { type, position, company, difficulty, currentQuestionCount, maxQuestions } = this.interviewContext;\n    \n    let systemPrompt = `You are an AI interviewer conducting a ${type} interview with a candidate.\\n\\n`;\n    systemPrompt += `Candidate Profile:\\n`;\n    systemPrompt += `- Current Role: ${currentRole}\\n`;\n    systemPrompt += `- Tech Stack: ${techStack}\\n`;\n    systemPrompt += `- Years of Experience: ${yearsExperience}\\n`;\n    systemPrompt += `- Key Skills: ${keySkills}\\n\\n`;\n    \n    systemPrompt += `Interview Guidelines:\\n`;\n    systemPrompt += `1. Ask relevant, engaging questions tailored to their experience level\\n`;\n    systemPrompt += `2. Follow up on answers with clarifying questions\\n`;\n    systemPrompt += `3. Maintain a professional but friendly tone\\n`;\n    systemPrompt += `4. Keep responses concise and focused\\n`;\n    systemPrompt += `5. Adapt difficulty based on their experience and responses\\n\\n`;\n    \n    systemPrompt += `Interview Flow Control:\\n`;\n    systemPrompt += `‚Ä¢ Preliminary questions have already been collected - do NOT ask them again\\n`;\n    systemPrompt += `‚Ä¢ You are currently on interview question ${(currentQuestionCount || 0) + 1} of ${maxQuestions}\\n`;\n    systemPrompt += `‚Ä¢ Continue with interview questions based on the candidate's profile\\n`;\n    systemPrompt += `‚Ä¢ After question ${maxQuestions}, conclude the interview and thank the candidate\\n`;\n    systemPrompt += `‚Ä¢ Do NOT exceed ${maxQuestions} interview questions\\n\\n`;\n    \n    if (position) {\n      systemPrompt += `Position: ${position}\\n`;\n    }\n    if (company) {\n      systemPrompt += `Company: ${company}\\n`;\n    }\n    if (difficulty) {\n      systemPrompt += `Difficulty Level: ${difficulty}\\n`;\n    }\n    \n    switch (type) {\n      case 'technical':\n        systemPrompt += `\\nFocus on technical skills relevant to their tech stack (${techStack}), problem-solving, coding concepts, and system design appropriate for someone with ${yearsExperience} years of experience.`;\n        break;\n      case 'behavioral':\n        systemPrompt += `\\nFocus on behavioral questions about teamwork, leadership, conflict resolution, and past experiences relevant to someone in a ${currentRole} role.`;\n        break;\n      default:\n        systemPrompt += `\\nAsk a mix of questions about background, experience, goals, and general fit for the role, considering their ${yearsExperience} years of experience in ${currentRole}.`;\n    }\n    \n    systemPrompt += `\\n\\nKeep your responses under 100 words and ask one question at a time.`;\n    return systemPrompt;\n  }\n\n  /**\n   * Get system prompt based on interview context\n   */\n  private getSystemPrompt(): string {\n    const { type, position, company, difficulty, preliminaryCollected, currentQuestionCount, maxQuestions } = this.interviewContext;\n    \n    let basePrompt = `You are an AI interviewer conducting a ${type} interview. You should:\\n\\n1. Ask relevant, engaging questions\\n2. Follow up on answers with clarifying questions\\n3. Maintain a professional but friendly tone\\n4. Keep responses concise and focused\\n5. Adapt difficulty based on candidate responses\\n\\nInterview Flow Instructions:\\n‚Ä¢ Ask preliminary questions (role, tech stack, experience, skills) only once at the beginning\\n‚Ä¢ After preliminary data is collected (preliminaryCollected = ${preliminaryCollected}), switch to actual interview questions\\n‚Ä¢ Keep track of question numbers - you are currently on question ${(currentQuestionCount || 0) + 1} of ${maxQuestions}\\n‚Ä¢ Increment the question number each time you ask a new interview question\\n‚Ä¢ Stop asking questions after reaching ${maxQuestions} questions and thank the candidate for their time\\n‚Ä¢ Do NOT repeat preliminary questions once they have been collected\\n‚Ä¢ Do NOT exceed the maximum number of questions (${maxQuestions})\\n\\n`;\n\n    if (position) {\n      basePrompt += `Position: ${position}\\n`;\n    }\n    if (company) {\n      basePrompt += `Company: ${company}\\n`;\n    }\n    if (difficulty) {\n      basePrompt += `Difficulty Level: ${difficulty}\\n`;\n    }\n\n    switch (type) {\n      case 'technical':\n        basePrompt += `\\nFocus on technical skills, problem-solving, coding concepts, and system design. Ask about specific technologies, algorithms, and best practices.`;\n        break;\n      case 'behavioral':\n        basePrompt += `\\nFocus on behavioral questions about teamwork, leadership, conflict resolution, and past experiences. Use the STAR method for evaluation.`;\n        break;\n      default:\n        basePrompt += `\\nAsk a mix of questions about background, experience, goals, and general fit for the role.`;\n    }\n\n    basePrompt += `\\n\\nKeep your responses under 100 words and ask one question at a time.`;\n    return basePrompt;\n  }\n\n  /**\n   * Start a new interview conversation\n   */\n  async startInterviewConversation(): Promise<GenerationResponse> {\n    if (!this.isInitialized || !this.client) {\n      throw new Error('Azure OpenAI Service not initialized');\n    }\n\n    // Reset conversation history and preliminary questions state\n    this.conversationHistory = [];\n    this.prelimIndex = 0;\n    this.candidateProfile = {};\n    // Reset interview context flags\n    this.interviewContext.preliminaryCollected = false;\n    this.interviewContext.currentQuestionCount = 0;\n\n    // Send greeting + first preliminary question\n    const greeting = \"Hello! Welcome to your interview practice session. Before we begin, I'd like to learn a bit about you.\";\n    const firstQuestion = this.prelimQuestions[0];\n    const openingMessage = `${greeting}\\n\\n${firstQuestion}`;\n\n    return {\n      content: openingMessage,\n      questionNumber: 0, // 0 indicates preliminary questions\n      isComplete: false\n    };\n  }\n\n  /**\n   * Get opening message based on interview type\n   * Uses generateInterviewQuestion helper for domain-specific questions\n   */\n  private async getOpeningMessage(): Promise<string> {\n    const { position } = this.interviewContext;\n    \n    let greeting = \"\";\n    \n    if (position) {\n      greeting += `Let's discuss the ${position} position. `;\n    }\n    \n    try {\n      // Use the helper to generate a domain-specific opening question\n      const question = await this.generateInterviewQuestion();\n      return greeting + question;\n    } catch (error) {\n      console.warn('‚ö†Ô∏è Falling back to default opening question');\n      // Fallback to a simpler approach if generation fails\n      return greeting + this.getFallbackQuestion();\n    }\n  }\n\n  /**\n   * Process user response and generate next question or comment\n   */\n  async processUserResponse(userResponse: string): Promise<GenerationResponse> {\n    if (!this.isInitialized || !this.client) {\n      throw new Error('Azure OpenAI Service not initialized');\n    }\n\n    // Check if we're still collecting preliminary information\n    if (!this.interviewContext.preliminaryCollected) {\n      // We're in preliminary phase - check if we still have questions to ask\n      if (this.prelimIndex < this.prelimQuestions.length) {\n        // Store the user's answer to the current preliminary question\n        const questionKeys = ['currentRole', 'techStack', 'yearsExperience', 'keySkills', 'questionCount'];\n        this.candidateProfile[questionKeys[this.prelimIndex]] = userResponse;\n        \n        // Increment to next preliminary question\n        this.prelimIndex++;\n        \n        // If there are more preliminary questions, return the next one\n        if (this.prelimIndex < this.prelimQuestions.length) {\n          const nextQuestion = this.prelimQuestions[this.prelimIndex];\n          return {\n            content: `Thank you! ${nextQuestion}`,\n            questionNumber: 0, // Still in preliminary phase - keep at 0\n            isComplete: false\n          };\n        } else {\n          // All preliminary questions collected - mark as complete\n          this.interviewContext.preliminaryCollected = true;\n          // Keep currentQuestionCount at 0 as we haven't asked real questions yet\n          this.interviewContext.currentQuestionCount = 0;\n          \n          // Build system context from collected profile\n          const systemContext = this.buildSystemContext();\n          \n          // Initialize conversation history with system context\n          this.conversationHistory = [\n            { role: 'system', content: systemContext }\n          ];\n          \n          // Set max questions from user's response\n          const requestedQuestions = parseInt(this.candidateProfile.questionCount) || 10;\n          this.interviewContext.maxQuestions = Math.min(Math.max(requestedQuestions, 5), 20); // Between 5 and 20\n          \n          // Generate the first real interview question\n          const openingMessage = await this.getOpeningMessage();\n          this.conversationHistory.push({ role: 'assistant', content: openingMessage });\n          \n          // Increment question count for the first real question\n          this.interviewContext.currentQuestionCount = 1;\n          \n          return {\n            content: `Great! I now have a better understanding of your background. Let's begin the interview.\\n\\n${openingMessage}`,\n            questionNumber: 1, // First real question\n            isComplete: false\n          };\n        }\n      }\n    }\n\n    // Normal interview flow - preliminary info has been collected\n    // Add user response to conversation history\n    this.conversationHistory.push({ role: 'user', content: userResponse });\n\n    try {\n      const completion = await this.client.chat.completions.create({\n        model: this.modelDeployment,\n        messages: this.conversationHistory,\n        temperature: 0.7,\n        max_tokens: 200,\n        top_p: 0.9,\n        frequency_penalty: 0.1,\n        presence_penalty: 0.1,\n      });\n\n      const assistantResponse = completion.choices[0]?.message?.content || 'I\\'m sorry, I didn\\'t catch that. Could you repeat your answer?';\n      \n      // Add assistant response to conversation history\n      this.conversationHistory.push({ role: 'assistant', content: assistantResponse });\n\n      // Increment question count for the next question\n      const currentQuestionCount = (this.interviewContext.currentQuestionCount || 0) + 1;\n      const maxQuestions = this.interviewContext.maxQuestions || 10;\n      \n      // Update question count in context\n      this.interviewContext.currentQuestionCount = currentQuestionCount;\n\n      return {\n        content: assistantResponse,\n        questionNumber: currentQuestionCount,\n        isComplete: currentQuestionCount >= maxQuestions,\n        followUpSuggestions: this.generateFollowUpSuggestions()\n      };\n    } catch (error) {\n      console.error('‚ùå Error generating OpenAI response:', error);\n      throw new Error('Failed to generate response');\n    }\n  }\n\n  /**\n   * Generate follow-up suggestions based on conversation\n   */\n  private generateFollowUpSuggestions(): string[] {\n    const { type } = this.interviewContext;\n    \n    switch (type) {\n      case 'technical':\n        return [\n          \"Can you explain your thought process?\",\n          \"What would you do differently?\",\n          \"How would this scale?\"\n        ];\n      case 'behavioral':\n        return [\n          \"What was the outcome?\",\n          \"What did you learn?\",\n          \"How would you handle it now?\"\n        ];\n      default:\n        return [\n          \"Can you elaborate on that?\",\n          \"What was your biggest challenge?\",\n          \"What motivates you?\"\n        ];\n    }\n  }\n\n  /**\n   * Generate a domain-specific interview question based on context and conversation history\n   * This helper generates a single, concise question tailored to the interview type and candidate profile\n   */\n  async generateInterviewQuestion(): Promise<string> {\n    if (!this.isInitialized || !this.client) {\n      throw new Error('Azure OpenAI Service not initialized');\n    }\n\n    // Build the appropriate system prompt based on interview type and profile\n    const { type, difficulty, position } = this.interviewContext;\n    const { currentRole, techStack, yearsExperience, keySkills } = this.candidateProfile;\n    \n    let questionPrompt = `Generate one concise interview question. `;\n    \n    // Add context-specific instructions based on interview type\n    switch (type) {\n      case 'technical':\n        questionPrompt += `Focus on technical skills and problem-solving.\\n`;\n        questionPrompt += `Consider the candidate's tech stack: ${techStack || 'various technologies'}.\\n`;\n        questionPrompt += `Experience level: ${yearsExperience || 'mid-level'} years.\\n`;\n        questionPrompt += `Include specific technical scenarios such as:\\n`;\n        questionPrompt += `- Code/architecture design challenges\\n`;\n        questionPrompt += `- Debugging or optimization problems\\n`;\n        questionPrompt += `- Technology-specific best practices\\n`;\n        questionPrompt += `- System scalability considerations\\n`;\n        break;\n        \n      case 'behavioral':\n        questionPrompt += `Focus on behavioral assessment using STAR method.\\n`;\n        questionPrompt += `Current role: ${currentRole || 'professional'}.\\n`;\n        questionPrompt += `Experience: ${yearsExperience || 'several'} years.\\n`;\n        questionPrompt += `Create STAR-format prompts about:\\n`;\n        questionPrompt += `- Leadership and teamwork situations\\n`;\n        questionPrompt += `- Conflict resolution examples\\n`;\n        questionPrompt += `- Project management challenges\\n`;\n        questionPrompt += `- Professional growth moments\\n`;\n        break;\n        \n      default: // 'general'\n        questionPrompt += `Focus on overall experience and motivation.\\n`;\n        questionPrompt += `Role: ${currentRole || 'professional'}.\\n`;\n        questionPrompt += `Skills: ${keySkills || 'various competencies'}.\\n`;\n        questionPrompt += `Cover aspects such as:\\n`;\n        questionPrompt += `- Career journey and transitions\\n`;\n        questionPrompt += `- Professional motivations and goals\\n`;\n        questionPrompt += `- Work style and preferences\\n`;\n        questionPrompt += `- Learning and adaptation experiences\\n`;\n    }\n    \n    // Add difficulty adjustment\n    if (difficulty) {\n      questionPrompt += `\\nDifficulty level: ${difficulty}.`;\n    }\n    \n    // Add position context if available\n    if (position) {\n      questionPrompt += `\\nPosition being interviewed for: ${position}.`;\n    }\n    \n    // Add instruction for question format\n    questionPrompt += `\\n\\nRequirements:\\n`;\n    questionPrompt += `- Make the question specific and actionable\\n`;\n    questionPrompt += `- Keep it under 50 words\\n`;\n    questionPrompt += `- Avoid yes/no questions\\n`;\n    questionPrompt += `- Ensure it's appropriate for the experience level\\n`;\n    \n    // Consider conversation history for context continuity\n    const recentContext = this.conversationHistory.slice(-4); // Last 2 exchanges\n    if (recentContext.length > 0) {\n      questionPrompt += `\\n\\nBuild upon but don't repeat topics from recent conversation.`;\n    }\n\n    try {\n      // Create the messages array with system context and the prompt\n      const messages: ConversationMessage[] = [\n        {\n          role: 'system',\n          content: this.buildSystemContext()\n        },\n        ...recentContext,\n        {\n          role: 'user',\n          content: questionPrompt\n        }\n      ];\n\n      const completion = await this.client.chat.completions.create({\n        model: this.modelDeployment,\n        messages,\n        temperature: 0.8, // Slightly higher for more variety\n        max_tokens: 100,\n        top_p: 0.9,\n        frequency_penalty: 0.3, // Reduce repetition\n        presence_penalty: 0.2,\n      });\n\n      const question = completion.choices[0]?.message?.content || \n        this.getFallbackQuestion();\n      \n      return question.trim();\n    } catch (error) {\n      console.error('‚ùå Error generating interview question:', error);\n      // Return a fallback question based on type\n      return this.getFallbackQuestion();\n    }\n  }\n\n  /**\n   * Get a fallback question when generation fails\n   */\n  private getFallbackQuestion(): string {\n    const { type } = this.interviewContext;\n    const { currentRole, techStack, yearsExperience } = this.candidateProfile;\n    \n    switch (type) {\n      case 'technical':\n        return `Can you describe a technical challenge you've faced with ${techStack || 'your current tech stack'} and how you solved it?`;\n      case 'behavioral':\n        return `Tell me about a time when you had to work with a difficult team member. How did you handle the situation?`;\n      default:\n        return `What interests you most about this opportunity and how does it align with your career goals?`;\n    }\n  }\n\n  /**\n   * Generate a completion for a given prompt\n   */\n  async generateCompletion(prompt: string): Promise<string> {\n    if (!this.isInitialized || !this.client) {\n      throw new Error('Azure OpenAI Service not initialized');\n    }\n\n    try {\n      const completion = await this.client.chat.completions.create({\n        model: this.modelDeployment,\n        messages: [\n          {\n            role: 'user',\n            content: prompt\n          }\n        ],\n        temperature: 0.7,\n        max_tokens: 1000,\n      });\n\n      return completion.choices[0]?.message?.content || 'Unable to generate completion.';\n    } catch (error) {\n      console.error('‚ùå Error generating completion:', error);\n      throw new Error('Failed to generate completion');\n    }\n  }\n\n  /**\n   * Generate interview summary and feedback\n   */\n  async generateInterviewSummary(): Promise<string> {\n    if (!this.isInitialized || !this.client) {\n      throw new Error('Azure OpenAI Service not initialized');\n    }\n\n    const summaryPrompt = {\n      role: 'system' as const,\n      content: `Based on the interview conversation, provide a brief summary of the candidate's performance, highlighting:\\n1. Key strengths demonstrated\\n2. Areas for improvement\\n3. Overall assessment\\n4. Recommendation\\n\\nKeep it concise and constructive (under 200 words).`\n    };\n\n    try {\n      const completion = await this.client.chat.completions.create({\n        model: this.modelDeployment,\n        messages: [...this.conversationHistory, summaryPrompt],\n        temperature: 0.3,\n        max_tokens: 300,\n      });\n\n      return completion.choices[0]?.message?.content || 'Unable to generate summary.';\n    } catch (error) {\n      console.error('‚ùå Error generating interview summary:', error);\n      throw new Error('Failed to generate summary');\n    }\n  }\n\n  /**\n   * Get conversation history\n   */\n  getConversationHistory(): ConversationMessage[] {\n    return this.conversationHistory.filter(msg => msg.role !== 'system');\n  }\n\n  /**\n   * Clear conversation history\n   */\n  clearConversation(): void {\n    this.conversationHistory = [];\n    this.interviewContext.currentQuestionCount = 0;\n    this.interviewContext.preliminaryCollected = false;\n    this.prelimIndex = 0;\n    this.candidateProfile = {};\n    console.log('üßπ Conversation history cleared');\n  }\n\n  /**\n   * Check if service is ready\n   */\n  isReady(): boolean {\n    return this.isInitialized && this.client !== null;\n  }\n\n  /**\n   * Dispose of resources\n   */\n  dispose(): void {\n    this.client = null;\n    this.isInitialized = false;\n    this.conversationHistory = [];\n    console.log('üßπ Azure OpenAI Service disposed');\n  }\n}\n\n// Export singleton instance\nexport const azureOpenAIService = new AzureOpenAIService();\n"],"mappings":"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","ignoreList":[]}