77b8cb33b02dee72440c2dd38a20f831
"use strict";

/* istanbul ignore next */
function cov_2mm7iyq4sh() {
  var path = "/Users/dikshantvashistha/PrepBettr/app/api/auth/google/server/route.ts";
  var hash = "f56578397efb1e948aa4dd4df33e3d0133172c2e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dikshantvashistha/PrepBettr/app/api/auth/google/server/route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 20
        }
      },
      "2": {
        start: {
          line: 4,
          column: 17
        },
        end: {
          line: 4,
          column: 39
        }
      },
      "3": {
        start: {
          line: 5,
          column: 18
        },
        end: {
          line: 5,
          column: 41
        }
      },
      "4": {
        start: {
          line: 6,
          column: 25
        },
        end: {
          line: 6,
          column: 60
        }
      },
      "5": {
        start: {
          line: 7,
          column: 29
        },
        end: {
          line: 7,
          column: 61
        }
      },
      "6": {
        start: {
          line: 8,
          column: 21
        },
        end: {
          line: 8,
          column: 72
        }
      },
      "7": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 44,
          column: 5
        }
      },
      "8": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 71
        }
      },
      "9": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 15,
          column: 9
        }
      },
      "10": {
        start: {
          line: 13,
          column: 12
        },
        end: {
          line: 13,
          column: 83
        }
      },
      "11": {
        start: {
          line: 14,
          column: 12
        },
        end: {
          line: 14,
          column: 110
        }
      },
      "12": {
        start: {
          line: 17,
          column: 22
        },
        end: {
          line: 17,
          column: 61
        }
      },
      "13": {
        start: {
          line: 18,
          column: 28
        },
        end: {
          line: 18,
          column: 70
        }
      },
      "14": {
        start: {
          line: 19,
          column: 25
        },
        end: {
          line: 19,
          column: 78
        }
      },
      "15": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 65
        }
      },
      "16": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 63
        }
      },
      "17": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 59
        }
      },
      "18": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 67
        }
      },
      "19": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 50
        }
      },
      "20": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 79
        }
      },
      "21": {
        start: {
          line: 27,
          column: 28
        },
        end: {
          line: 27,
          column: 58
        }
      },
      "22": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 34,
          column: 11
        }
      },
      "23": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 39,
          column: 11
        }
      },
      "24": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 66
        }
      },
      "25": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 107
        }
      }
    },
    fnMap: {
      "0": {
        name: "POST",
        decl: {
          start: {
            line: 9,
            column: 15
          },
          end: {
            line: 9,
            column: 19
          }
        },
        loc: {
          start: {
            line: 9,
            column: 29
          },
          end: {
            line: 45,
            column: 1
          }
        },
        line: 9
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 8,
            column: 21
          },
          end: {
            line: 8,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 21
          },
          end: {
            line: 8,
            column: 45
          }
        }, {
          start: {
            line: 8,
            column: 49
          },
          end: {
            line: 8,
            column: 72
          }
        }],
        line: 8
      },
      "1": {
        loc: {
          start: {
            line: 12,
            column: 8
          },
          end: {
            line: 15,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 12,
            column: 8
          },
          end: {
            line: 15,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 12
      },
      "2": {
        loc: {
          start: {
            line: 12,
            column: 12
          },
          end: {
            line: 12,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 12,
            column: 12
          },
          end: {
            line: 12,
            column: 29
          }
        }, {
          start: {
            line: 12,
            column: 33
          },
          end: {
            line: 12,
            column: 54
          }
        }],
        line: 12
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/dikshantvashistha/PrepBettr/app/api/auth/google/server/route.ts",
      mappings: ";;AAOA,oBAgDC;AAvDD,wCAAwD;AACxD,0CAAuC;AAEvC,MAAM,gBAAgB,GAAG,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC;AAC7D,MAAM,oBAAoB,GAAG,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC;AAC9D,MAAM,YAAY,GAAG,OAAO,CAAC,GAAG,CAAC,YAAY,IAAI,uBAAuB,CAAC;AAElE,KAAK,UAAU,IAAI,CAAC,OAAoB;IAC7C,IAAI,CAAC;QACH,OAAO,CAAC,GAAG,CAAC,iDAAiD,CAAC,CAAC;QAE/D,IAAI,CAAC,gBAAgB,IAAI,CAAC,oBAAoB,EAAE,CAAC;YAC/C,OAAO,CAAC,KAAK,CAAC,uDAAuD,CAAC,CAAC;YACvE,OAAO,qBAAY,CAAC,IAAI,CACtB,EAAE,KAAK,EAAE,kCAAkC,EAAE,EAC7C,EAAE,MAAM,EAAE,GAAG,EAAE,CAChB,CAAC;QACJ,CAAC;QAED,qBAAqB;QACrB,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;QACtD,MAAM,WAAW,GAAG,GAAG,YAAY,2BAA2B,CAAC;QAE/D,MAAM,QAAQ,GAAG,IAAI,GAAG,CAAC,4CAA4C,CAAC,CAAC;QACvE,QAAQ,CAAC,YAAY,CAAC,GAAG,CAAC,WAAW,EAAE,gBAAgB,CAAC,CAAC;QACzD,QAAQ,CAAC,YAAY,CAAC,GAAG,CAAC,cAAc,EAAE,WAAW,CAAC,CAAC;QACvD,QAAQ,CAAC,YAAY,CAAC,GAAG,CAAC,eAAe,EAAE,MAAM,CAAC,CAAC;QACnD,QAAQ,CAAC,YAAY,CAAC,GAAG,CAAC,OAAO,EAAE,sBAAsB,CAAC,CAAC;QAC3D,QAAQ,CAAC,YAAY,CAAC,GAAG,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;QAE1C,OAAO,CAAC,GAAG,CAAC,yDAAyD,CAAC,CAAC;QAEvE,uCAAuC;QACvC,MAAM,WAAW,GAAG,MAAM,IAAA,iBAAO,GAAE,CAAC;QACpC,WAAW,CAAC,GAAG,CAAC,aAAa,EAAE,KAAK,EAAE;YACpC,QAAQ,EAAE,IAAI;YACd,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY;YAC7C,MAAM,EAAE,GAAG,EAAE,YAAY;YACzB,IAAI,EAAE,GAAG;YACT,QAAQ,EAAE,KAAK;SAChB,CAAC,CAAC;QAEH,gDAAgD;QAChD,OAAO,qBAAY,CAAC,IAAI,CAAC;YACvB,OAAO,EAAE,IAAI;YACb,WAAW,EAAE,QAAQ,CAAC,QAAQ,EAAE;SACjC,CAAC,CAAC;IAEL,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,KAAK,CAAC,mCAAmC,EAAE,KAAK,CAAC,CAAC;QAC1D,OAAO,qBAAY,CAAC,IAAI,CACtB,EAAE,KAAK,EAAE,mCAAmC,EAAE,EAC9C,EAAE,MAAM,EAAE,GAAG,EAAE,CAChB,CAAC;IACJ,CAAC;AACH,CAAC",
      names: [],
      sources: ["/Users/dikshantvashistha/PrepBettr/app/api/auth/google/server/route.ts"],
      sourcesContent: ["import { NextRequest, NextResponse } from 'next/server';\nimport { cookies } from 'next/headers';\n\nconst GOOGLE_CLIENT_ID = process.env.GOOGLE_CLIENT_ID_SUFFIX;\nconst GOOGLE_CLIENT_SECRET = process.env.GOOGLE_CLIENT_SECRET;\nconst NEXTAUTH_URL = process.env.NEXTAUTH_URL || 'http://localhost:3000';\n\nexport async function POST(request: NextRequest) {\n  try {\n    console.log('\uD83C\uDF10 Server-side Google auth: Starting OAuth flow');\n    \n    if (!GOOGLE_CLIENT_ID || !GOOGLE_CLIENT_SECRET) {\n      console.error('\uD83C\uDF10 Server-side Google auth: Missing OAuth credentials');\n      return NextResponse.json(\n        { error: 'OAuth credentials not configured' },\n        { status: 500 }\n      );\n    }\n\n    // Generate OAuth URL\n    const state = Math.random().toString(36).substring(7);\n    const redirectUri = `${NEXTAUTH_URL}/api/auth/google/callback`;\n    \n    const oauthUrl = new URL('https://accounts.google.com/oauth2/v2/auth');\n    oauthUrl.searchParams.set('client_id', GOOGLE_CLIENT_ID);\n    oauthUrl.searchParams.set('redirect_uri', redirectUri);\n    oauthUrl.searchParams.set('response_type', 'code');\n    oauthUrl.searchParams.set('scope', 'openid email profile');\n    oauthUrl.searchParams.set('state', state);\n\n    console.log('\uD83C\uDF10 Server-side Google auth: Redirecting to Google OAuth');\n    \n    // Store state in cookie for validation\n    const cookieStore = await cookies();\n    cookieStore.set('oauth_state', state, {\n      httpOnly: true,\n      secure: process.env.NODE_ENV === 'production',\n      maxAge: 300, // 5 minutes\n      path: '/',\n      sameSite: 'lax',\n    });\n\n    // Return redirect URL for client to navigate to\n    return NextResponse.json({\n      success: true,\n      redirectUrl: oauthUrl.toString()\n    });\n\n  } catch (error) {\n    console.error('\uD83C\uDF10 Server-side Google auth error:', error);\n    return NextResponse.json(\n      { error: 'Server-side authentication failed' },\n      { status: 500 }\n    );\n  }\n}"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f56578397efb1e948aa4dd4df33e3d0133172c2e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2mm7iyq4sh = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2mm7iyq4sh();
cov_2mm7iyq4sh().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2mm7iyq4sh().s[1]++;
exports.POST = POST;
const server_1 =
/* istanbul ignore next */
(cov_2mm7iyq4sh().s[2]++, require("next/server"));
const headers_1 =
/* istanbul ignore next */
(cov_2mm7iyq4sh().s[3]++, require("next/headers"));
const GOOGLE_CLIENT_ID =
/* istanbul ignore next */
(cov_2mm7iyq4sh().s[4]++, process.env.GOOGLE_CLIENT_ID_SUFFIX);
const GOOGLE_CLIENT_SECRET =
/* istanbul ignore next */
(cov_2mm7iyq4sh().s[5]++, process.env.GOOGLE_CLIENT_SECRET);
const NEXTAUTH_URL =
/* istanbul ignore next */
(cov_2mm7iyq4sh().s[6]++,
/* istanbul ignore next */
(cov_2mm7iyq4sh().b[0][0]++, process.env.NEXTAUTH_URL) ||
/* istanbul ignore next */
(cov_2mm7iyq4sh().b[0][1]++, 'http://localhost:3000'));
async function POST(request) {
  /* istanbul ignore next */
  cov_2mm7iyq4sh().f[0]++;
  cov_2mm7iyq4sh().s[7]++;
  try {
    /* istanbul ignore next */
    cov_2mm7iyq4sh().s[8]++;
    console.log('🌐 Server-side Google auth: Starting OAuth flow');
    /* istanbul ignore next */
    cov_2mm7iyq4sh().s[9]++;
    if (
    /* istanbul ignore next */
    (cov_2mm7iyq4sh().b[2][0]++, !GOOGLE_CLIENT_ID) ||
    /* istanbul ignore next */
    (cov_2mm7iyq4sh().b[2][1]++, !GOOGLE_CLIENT_SECRET)) {
      /* istanbul ignore next */
      cov_2mm7iyq4sh().b[1][0]++;
      cov_2mm7iyq4sh().s[10]++;
      console.error('🌐 Server-side Google auth: Missing OAuth credentials');
      /* istanbul ignore next */
      cov_2mm7iyq4sh().s[11]++;
      return server_1.NextResponse.json({
        error: 'OAuth credentials not configured'
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_2mm7iyq4sh().b[1][1]++;
    }
    // Generate OAuth URL
    const state =
    /* istanbul ignore next */
    (cov_2mm7iyq4sh().s[12]++, Math.random().toString(36).substring(7));
    const redirectUri =
    /* istanbul ignore next */
    (cov_2mm7iyq4sh().s[13]++, `${NEXTAUTH_URL}/api/auth/google/callback`);
    const oauthUrl =
    /* istanbul ignore next */
    (cov_2mm7iyq4sh().s[14]++, new URL('https://accounts.google.com/oauth2/v2/auth'));
    /* istanbul ignore next */
    cov_2mm7iyq4sh().s[15]++;
    oauthUrl.searchParams.set('client_id', GOOGLE_CLIENT_ID);
    /* istanbul ignore next */
    cov_2mm7iyq4sh().s[16]++;
    oauthUrl.searchParams.set('redirect_uri', redirectUri);
    /* istanbul ignore next */
    cov_2mm7iyq4sh().s[17]++;
    oauthUrl.searchParams.set('response_type', 'code');
    /* istanbul ignore next */
    cov_2mm7iyq4sh().s[18]++;
    oauthUrl.searchParams.set('scope', 'openid email profile');
    /* istanbul ignore next */
    cov_2mm7iyq4sh().s[19]++;
    oauthUrl.searchParams.set('state', state);
    /* istanbul ignore next */
    cov_2mm7iyq4sh().s[20]++;
    console.log('🌐 Server-side Google auth: Redirecting to Google OAuth');
    // Store state in cookie for validation
    const cookieStore =
    /* istanbul ignore next */
    (cov_2mm7iyq4sh().s[21]++, await (0, headers_1.cookies)());
    /* istanbul ignore next */
    cov_2mm7iyq4sh().s[22]++;
    cookieStore.set('oauth_state', state, {
      httpOnly: true,
      secure: process.env.NODE_ENV === 'production',
      maxAge: 300,
      // 5 minutes
      path: '/',
      sameSite: 'lax'
    });
    // Return redirect URL for client to navigate to
    /* istanbul ignore next */
    cov_2mm7iyq4sh().s[23]++;
    return server_1.NextResponse.json({
      success: true,
      redirectUrl: oauthUrl.toString()
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2mm7iyq4sh().s[24]++;
    console.error('🌐 Server-side Google auth error:', error);
    /* istanbul ignore next */
    cov_2mm7iyq4sh().s[25]++;
    return server_1.NextResponse.json({
      error: 'Server-side authentication failed'
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMm1tN2l5cTRzaCIsImFjdHVhbENvdmVyYWdlIiwicyIsImV4cG9ydHMiLCJQT1NUIiwic2VydmVyXzEiLCJyZXF1aXJlIiwiaGVhZGVyc18xIiwiR09PR0xFX0NMSUVOVF9JRCIsInByb2Nlc3MiLCJlbnYiLCJHT09HTEVfQ0xJRU5UX0lEX1NVRkZJWCIsIkdPT0dMRV9DTElFTlRfU0VDUkVUIiwiTkVYVEFVVEhfVVJMIiwiYiIsInJlcXVlc3QiLCJmIiwiY29uc29sZSIsImxvZyIsImVycm9yIiwiTmV4dFJlc3BvbnNlIiwianNvbiIsInN0YXR1cyIsInN0YXRlIiwiTWF0aCIsInJhbmRvbSIsInRvU3RyaW5nIiwic3Vic3RyaW5nIiwicmVkaXJlY3RVcmkiLCJvYXV0aFVybCIsIlVSTCIsInNlYXJjaFBhcmFtcyIsInNldCIsImNvb2tpZVN0b3JlIiwiY29va2llcyIsImh0dHBPbmx5Iiwic2VjdXJlIiwiTk9ERV9FTlYiLCJtYXhBZ2UiLCJwYXRoIiwic2FtZVNpdGUiLCJzdWNjZXNzIiwicmVkaXJlY3RVcmwiXSwic291cmNlcyI6WyIvVXNlcnMvZGlrc2hhbnR2YXNoaXN0aGEvUHJlcEJldHRyL2FwcC9hcGkvYXV0aC9nb29nbGUvc2VydmVyL3JvdXRlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5leHRSZXF1ZXN0LCBOZXh0UmVzcG9uc2UgfSBmcm9tICduZXh0L3NlcnZlcic7XG5pbXBvcnQgeyBjb29raWVzIH0gZnJvbSAnbmV4dC9oZWFkZXJzJztcblxuY29uc3QgR09PR0xFX0NMSUVOVF9JRCA9IHByb2Nlc3MuZW52LkdPT0dMRV9DTElFTlRfSURfU1VGRklYO1xuY29uc3QgR09PR0xFX0NMSUVOVF9TRUNSRVQgPSBwcm9jZXNzLmVudi5HT09HTEVfQ0xJRU5UX1NFQ1JFVDtcbmNvbnN0IE5FWFRBVVRIX1VSTCA9IHByb2Nlc3MuZW52Lk5FWFRBVVRIX1VSTCB8fCAnaHR0cDovL2xvY2FsaG9zdDozMDAwJztcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIFBPU1QocmVxdWVzdDogTmV4dFJlcXVlc3QpIHtcbiAgdHJ5IHtcbiAgICBjb25zb2xlLmxvZygn8J+MkCBTZXJ2ZXItc2lkZSBHb29nbGUgYXV0aDogU3RhcnRpbmcgT0F1dGggZmxvdycpO1xuICAgIFxuICAgIGlmICghR09PR0xFX0NMSUVOVF9JRCB8fCAhR09PR0xFX0NMSUVOVF9TRUNSRVQpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ/CfjJAgU2VydmVyLXNpZGUgR29vZ2xlIGF1dGg6IE1pc3NpbmcgT0F1dGggY3JlZGVudGlhbHMnKTtcbiAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihcbiAgICAgICAgeyBlcnJvcjogJ09BdXRoIGNyZWRlbnRpYWxzIG5vdCBjb25maWd1cmVkJyB9LFxuICAgICAgICB7IHN0YXR1czogNTAwIH1cbiAgICAgICk7XG4gICAgfVxuXG4gICAgLy8gR2VuZXJhdGUgT0F1dGggVVJMXG4gICAgY29uc3Qgc3RhdGUgPSBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHJpbmcoNyk7XG4gICAgY29uc3QgcmVkaXJlY3RVcmkgPSBgJHtORVhUQVVUSF9VUkx9L2FwaS9hdXRoL2dvb2dsZS9jYWxsYmFja2A7XG4gICAgXG4gICAgY29uc3Qgb2F1dGhVcmwgPSBuZXcgVVJMKCdodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20vb2F1dGgyL3YyL2F1dGgnKTtcbiAgICBvYXV0aFVybC5zZWFyY2hQYXJhbXMuc2V0KCdjbGllbnRfaWQnLCBHT09HTEVfQ0xJRU5UX0lEKTtcbiAgICBvYXV0aFVybC5zZWFyY2hQYXJhbXMuc2V0KCdyZWRpcmVjdF91cmknLCByZWRpcmVjdFVyaSk7XG4gICAgb2F1dGhVcmwuc2VhcmNoUGFyYW1zLnNldCgncmVzcG9uc2VfdHlwZScsICdjb2RlJyk7XG4gICAgb2F1dGhVcmwuc2VhcmNoUGFyYW1zLnNldCgnc2NvcGUnLCAnb3BlbmlkIGVtYWlsIHByb2ZpbGUnKTtcbiAgICBvYXV0aFVybC5zZWFyY2hQYXJhbXMuc2V0KCdzdGF0ZScsIHN0YXRlKTtcblxuICAgIGNvbnNvbGUubG9nKCfwn4yQIFNlcnZlci1zaWRlIEdvb2dsZSBhdXRoOiBSZWRpcmVjdGluZyB0byBHb29nbGUgT0F1dGgnKTtcbiAgICBcbiAgICAvLyBTdG9yZSBzdGF0ZSBpbiBjb29raWUgZm9yIHZhbGlkYXRpb25cbiAgICBjb25zdCBjb29raWVTdG9yZSA9IGF3YWl0IGNvb2tpZXMoKTtcbiAgICBjb29raWVTdG9yZS5zZXQoJ29hdXRoX3N0YXRlJywgc3RhdGUsIHtcbiAgICAgIGh0dHBPbmx5OiB0cnVlLFxuICAgICAgc2VjdXJlOiBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nLFxuICAgICAgbWF4QWdlOiAzMDAsIC8vIDUgbWludXRlc1xuICAgICAgcGF0aDogJy8nLFxuICAgICAgc2FtZVNpdGU6ICdsYXgnLFxuICAgIH0pO1xuXG4gICAgLy8gUmV0dXJuIHJlZGlyZWN0IFVSTCBmb3IgY2xpZW50IHRvIG5hdmlnYXRlIHRvXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHtcbiAgICAgIHN1Y2Nlc3M6IHRydWUsXG4gICAgICByZWRpcmVjdFVybDogb2F1dGhVcmwudG9TdHJpbmcoKVxuICAgIH0pO1xuXG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcign8J+MkCBTZXJ2ZXItc2lkZSBHb29nbGUgYXV0aCBlcnJvcjonLCBlcnJvcik7XG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxuICAgICAgeyBlcnJvcjogJ1NlcnZlci1zaWRlIGF1dGhlbnRpY2F0aW9uIGZhaWxlZCcgfSxcbiAgICAgIHsgc3RhdHVzOiA1MDAgfVxuICAgICk7XG4gIH1cbn0iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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