dab133d269c7718eaf30a14f209b67ca
"use strict";

/**
 * Retry Middleware with Exponential Backoff
 *
 * Provides configurable retry logic with multiple backoff strategies
 * for handling transient failures in API calls and service interactions.
 *
 * Features:
 * - Multiple retry strategies (linear, exponential, jitter)
 * - Configurable retry conditions and circuit breaking
 * - Promise-based API with TypeScript support
 * - Integration with structured error system
 * - Abort signal support for cancellation
 * - Detailed retry logging and metrics
 *
 * @version 1.0.0
 */
/* istanbul ignore next */
function cov_h5auyu00d() {
  var path = "/Users/dikshantvashistha/PrepBettr/lib/utils/retry-middleware.ts";
  var hash = "685057f6794d52c7810e63a1a1b2902547ddfc4d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dikshantvashistha/PrepBettr/lib/utils/retry-middleware.ts",
    statementMap: {
      "0": {
        start: {
          line: 18,
          column: 0
        },
        end: {
          line: 18,
          column: 62
        }
      },
      "1": {
        start: {
          line: 19,
          column: 0
        },
        end: {
          line: 19,
          column: 173
        }
      },
      "2": {
        start: {
          line: 20,
          column: 0
        },
        end: {
          line: 20,
          column: 42
        }
      },
      "3": {
        start: {
          line: 21,
          column: 0
        },
        end: {
          line: 21,
          column: 46
        }
      },
      "4": {
        start: {
          line: 22,
          column: 0
        },
        end: {
          line: 22,
          column: 30
        }
      },
      "5": {
        start: {
          line: 23,
          column: 0
        },
        end: {
          line: 23,
          column: 32
        }
      },
      "6": {
        start: {
          line: 24,
          column: 0
        },
        end: {
          line: 24,
          column: 50
        }
      },
      "7": {
        start: {
          line: 25,
          column: 0
        },
        end: {
          line: 25,
          column: 56
        }
      },
      "8": {
        start: {
          line: 26,
          column: 0
        },
        end: {
          line: 26,
          column: 60
        }
      },
      "9": {
        start: {
          line: 27,
          column: 0
        },
        end: {
          line: 27,
          column: 50
        }
      },
      "10": {
        start: {
          line: 28,
          column: 0
        },
        end: {
          line: 28,
          column: 22
        }
      },
      "11": {
        start: {
          line: 29,
          column: 28
        },
        end: {
          line: 29,
          column: 58
        }
      },
      "12": {
        start: {
          line: 31,
          column: 0
        },
        end: {
          line: 36,
          column: 2
        }
      },
      "13": {
        start: {
          line: 37,
          column: 0
        },
        end: {
          line: 42,
          column: 2
        }
      },
      "14": {
        start: {
          line: 43,
          column: 0
        },
        end: {
          line: 48,
          column: 2
        }
      },
      "15": {
        start: {
          line: 49,
          column: 0
        },
        end: {
          line: 54,
          column: 2
        }
      },
      "16": {
        start: {
          line: 55,
          column: 0
        },
        end: {
          line: 60,
          column: 2
        }
      },
      "17": {
        start: {
          line: 62,
          column: 19
        },
        end: {
          line: 68,
          column: 1
        }
      },
      "18": {
        start: {
          line: 70,
          column: 4
        },
        end: {
          line: 70,
          column: 43
        }
      },
      "19": {
        start: {
          line: 73,
          column: 4
        },
        end: {
          line: 79,
          column: 6
        }
      },
      "20": {
        start: {
          line: 87,
          column: 24
        },
        end: {
          line: 87,
          column: 94
        }
      },
      "21": {
        start: {
          line: 88,
          column: 22
        },
        end: {
          line: 88,
          column: 32
        }
      },
      "22": {
        start: {
          line: 90,
          column: 25
        },
        end: {
          line: 90,
          column: 26
        }
      },
      "23": {
        start: {
          line: 91,
          column: 4
        },
        end: {
          line: 158,
          column: 5
        }
      },
      "24": {
        start: {
          line: 91,
          column: 23
        },
        end: {
          line: 91,
          column: 24
        }
      },
      "25": {
        start: {
          line: 92,
          column: 30
        },
        end: {
          line: 92,
          column: 68
        }
      },
      "26": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 157,
          column: 9
        }
      },
      "27": {
        start: {
          line: 95,
          column: 12
        },
        end: {
          line: 97,
          column: 13
        }
      },
      "28": {
        start: {
          line: 96,
          column: 16
        },
        end: {
          line: 96,
          column: 53
        }
      },
      "29": {
        start: {
          line: 99,
          column: 27
        },
        end: {
          line: 99,
          column: 44
        }
      },
      "30": {
        start: {
          line: 101,
          column: 12
        },
        end: {
          line: 104,
          column: 13
        }
      },
      "31": {
        start: {
          line: 102,
          column: 16
        },
        end: {
          line: 102,
          column: 49
        }
      },
      "32": {
        start: {
          line: 103,
          column: 16
        },
        end: {
          line: 103,
          column: 82
        }
      },
      "33": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 110,
          column: 14
        }
      },
      "34": {
        start: {
          line: 114,
          column: 12
        },
        end: {
          line: 114,
          column: 74
        }
      },
      "35": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 117,
          column: 69
        }
      },
      "36": {
        start: {
          line: 119,
          column: 12
        },
        end: {
          line: 124,
          column: 13
        }
      },
      "37": {
        start: {
          line: 120,
          column: 16
        },
        end: {
          line: 120,
          column: 45
        }
      },
      "38": {
        start: {
          line: 121,
          column: 16
        },
        end: {
          line: 121,
          column: 133
        }
      },
      "39": {
        start: {
          line: 122,
          column: 16
        },
        end: {
          line: 122,
          column: 97
        }
      },
      "40": {
        start: {
          line: 123,
          column: 16
        },
        end: {
          line: 123,
          column: 22
        }
      },
      "41": {
        start: {
          line: 126,
          column: 37
        },
        end: {
          line: 128,
          column: 70
        }
      },
      "42": {
        start: {
          line: 129,
          column: 12
        },
        end: {
          line: 132,
          column: 13
        }
      },
      "43": {
        start: {
          line: 130,
          column: 16
        },
        end: {
          line: 130,
          column: 73
        }
      },
      "44": {
        start: {
          line: 131,
          column: 16
        },
        end: {
          line: 131,
          column: 22
        }
      },
      "45": {
        start: {
          line: 134,
          column: 30
        },
        end: {
          line: 136,
          column: 39
        }
      },
      "46": {
        start: {
          line: 137,
          column: 24
        },
        end: {
          line: 137,
          column: 93
        }
      },
      "47": {
        start: {
          line: 139,
          column: 12
        },
        end: {
          line: 141,
          column: 13
        }
      },
      "48": {
        start: {
          line: 140,
          column: 16
        },
        end: {
          line: 140,
          column: 45
        }
      },
      "49": {
        start: {
          line: 143,
          column: 12
        },
        end: {
          line: 143,
          column: 40
        }
      },
      "50": {
        start: {
          line: 144,
          column: 12
        },
        end: {
          line: 144,
          column: 36
        }
      },
      "51": {
        start: {
          line: 145,
          column: 12
        },
        end: {
          line: 147,
          column: 46
        }
      },
      "52": {
        start: {
          line: 149,
          column: 12
        },
        end: {
          line: 149,
          column: 124
        }
      },
      "53": {
        start: {
          line: 150,
          column: 12
        },
        end: {
          line: 150,
          column: 126
        }
      },
      "54": {
        start: {
          line: 152,
          column: 12
        },
        end: {
          line: 152,
          column: 69
        }
      },
      "55": {
        start: {
          line: 152,
          column: 41
        },
        end: {
          line: 152,
          column: 67
        }
      },
      "56": {
        start: {
          line: 154,
          column: 12
        },
        end: {
          line: 156,
          column: 13
        }
      },
      "57": {
        start: {
          line: 155,
          column: 16
        },
        end: {
          line: 155,
          column: 72
        }
      },
      "58": {
        start: {
          line: 160,
          column: 4
        },
        end: {
          line: 165,
          column: 6
        }
      },
      "59": {
        start: {
          line: 172,
          column: 24
        },
        end: {
          line: 185,
          column: 12
        }
      },
      "60": {
        start: {
          line: 174,
          column: 12
        },
        end: {
          line: 175,
          column: 28
        }
      },
      "61": {
        start: {
          line: 175,
          column: 16
        },
        end: {
          line: 175,
          column: 28
        }
      },
      "62": {
        start: {
          line: 176,
          column: 12
        },
        end: {
          line: 177,
          column: 28
        }
      },
      "63": {
        start: {
          line: 177,
          column: 16
        },
        end: {
          line: 177,
          column: 28
        }
      },
      "64": {
        start: {
          line: 178,
          column: 12
        },
        end: {
          line: 179,
          column: 28
        }
      },
      "65": {
        start: {
          line: 179,
          column: 16
        },
        end: {
          line: 179,
          column: 28
        }
      },
      "66": {
        start: {
          line: 180,
          column: 12
        },
        end: {
          line: 181,
          column: 36
        }
      },
      "67": {
        start: {
          line: 181,
          column: 16
        },
        end: {
          line: 181,
          column: 36
        }
      },
      "68": {
        start: {
          line: 182,
          column: 12
        },
        end: {
          line: 183,
          column: 36
        }
      },
      "69": {
        start: {
          line: 183,
          column: 16
        },
        end: {
          line: 183,
          column: 36
        }
      },
      "70": {
        start: {
          line: 184,
          column: 12
        },
        end: {
          line: 184,
          column: 68
        }
      },
      "71": {
        start: {
          line: 186,
          column: 4
        },
        end: {
          line: 194,
          column: 20
        }
      },
      "72": {
        start: {
          line: 187,
          column: 25
        },
        end: {
          line: 187,
          column: 49
        }
      },
      "73": {
        start: {
          line: 188,
          column: 8
        },
        end: {
          line: 192,
          column: 9
        }
      },
      "74": {
        start: {
          line: 190,
          column: 30
        },
        end: {
          line: 190,
          column: 73
        }
      },
      "75": {
        start: {
          line: 191,
          column: 12
        },
        end: {
          line: 191,
          column: 134
        }
      },
      "76": {
        start: {
          line: 193,
          column: 8
        },
        end: {
          line: 193,
          column: 24
        }
      },
      "77": {
        start: {
          line: 200,
          column: 24
        },
        end: {
          line: 218,
          column: 12
        }
      },
      "78": {
        start: {
          line: 203,
          column: 32
        },
        end: {
          line: 208,
          column: 13
        }
      },
      "79": {
        start: {
          line: 209,
          column: 12
        },
        end: {
          line: 210,
          column: 28
        }
      },
      "80": {
        start: {
          line: 210,
          column: 16
        },
        end: {
          line: 210,
          column: 28
        }
      },
      "81": {
        start: {
          line: 211,
          column: 12
        },
        end: {
          line: 212,
          column: 28
        }
      },
      "82": {
        start: {
          line: 212,
          column: 16
        },
        end: {
          line: 212,
          column: 28
        }
      },
      "83": {
        start: {
          line: 213,
          column: 12
        },
        end: {
          line: 213,
          column: 203
        }
      },
      "84": {
        start: {
          line: 216,
          column: 12
        },
        end: {
          line: 216,
          column: 124
        }
      },
      "85": {
        start: {
          line: 217,
          column: 12
        },
        end: {
          line: 217,
          column: 110
        }
      },
      "86": {
        start: {
          line: 219,
          column: 4
        },
        end: {
          line: 219,
          column: 45
        }
      },
      "87": {
        start: {
          line: 225,
          column: 27
        },
        end: {
          line: 239,
          column: 12
        }
      },
      "88": {
        start: {
          line: 228,
          column: 12
        },
        end: {
          line: 229,
          column: 28
        }
      },
      "89": {
        start: {
          line: 229,
          column: 16
        },
        end: {
          line: 229,
          column: 28
        }
      },
      "90": {
        start: {
          line: 230,
          column: 12
        },
        end: {
          line: 231,
          column: 28
        }
      },
      "91": {
        start: {
          line: 231,
          column: 16
        },
        end: {
          line: 231,
          column: 28
        }
      },
      "92": {
        start: {
          line: 232,
          column: 12
        },
        end: {
          line: 233,
          column: 28
        }
      },
      "93": {
        start: {
          line: 233,
          column: 16
        },
        end: {
          line: 233,
          column: 28
        }
      },
      "94": {
        start: {
          line: 234,
          column: 12
        },
        end: {
          line: 234,
          column: 203
        }
      },
      "95": {
        start: {
          line: 237,
          column: 12
        },
        end: {
          line: 237,
          column: 112
        }
      },
      "96": {
        start: {
          line: 238,
          column: 12
        },
        end: {
          line: 238,
          column: 110
        }
      },
      "97": {
        start: {
          line: 240,
          column: 4
        },
        end: {
          line: 240,
          column: 48
        }
      },
      "98": {
        start: {
          line: 247,
          column: 23
        },
        end: {
          line: 247,
          column: 44
        }
      },
      "99": {
        start: {
          line: 248,
          column: 4
        },
        end: {
          line: 248,
          column: 52
        }
      },
      "100": {
        start: {
          line: 248,
          column: 21
        },
        end: {
          line: 248,
          column: 39
        }
      },
      "101": {
        start: {
          line: 249,
          column: 4
        },
        end: {
          line: 249,
          column: 29
        }
      },
      "102": {
        start: {
          line: 255,
          column: 23
        },
        end: {
          line: 255,
          column: 44
        }
      },
      "103": {
        start: {
          line: 256,
          column: 25
        },
        end: {
          line: 256,
          column: 49
        }
      },
      "104": {
        start: {
          line: 256,
          column: 31
        },
        end: {
          line: 256,
          column: 49
        }
      },
      "105": {
        start: {
          line: 257,
          column: 4
        },
        end: {
          line: 263,
          column: 5
        }
      },
      "106": {
        start: {
          line: 258,
          column: 8
        },
        end: {
          line: 261,
          column: 9
        }
      },
      "107": {
        start: {
          line: 259,
          column: 12
        },
        end: {
          line: 259,
          column: 31
        }
      },
      "108": {
        start: {
          line: 260,
          column: 12
        },
        end: {
          line: 260,
          column: 18
        }
      },
      "109": {
        start: {
          line: 262,
          column: 8
        },
        end: {
          line: 262,
          column: 55
        }
      },
      "110": {
        start: {
          line: 264,
          column: 4
        },
        end: {
          line: 264,
          column: 29
        }
      },
      "111": {
        start: {
          line: 270,
          column: 4
        },
        end: {
          line: 284,
          column: 7
        }
      },
      "112": {
        start: {
          line: 271,
          column: 24
        },
        end: {
          line: 271,
          column: 47
        }
      },
      "113": {
        start: {
          line: 272,
          column: 8
        },
        end: {
          line: 283,
          column: 9
        }
      },
      "114": {
        start: {
          line: 273,
          column: 33
        },
        end: {
          line: 276,
          column: 13
        }
      },
      "115": {
        start: {
          line: 274,
          column: 16
        },
        end: {
          line: 274,
          column: 38
        }
      },
      "116": {
        start: {
          line: 275,
          column: 16
        },
        end: {
          line: 275,
          column: 51
        }
      },
      "117": {
        start: {
          line: 277,
          column: 12
        },
        end: {
          line: 281,
          column: 13
        }
      },
      "118": {
        start: {
          line: 278,
          column: 16
        },
        end: {
          line: 278,
          column: 38
        }
      },
      "119": {
        start: {
          line: 279,
          column: 16
        },
        end: {
          line: 279,
          column: 51
        }
      },
      "120": {
        start: {
          line: 280,
          column: 16
        },
        end: {
          line: 280,
          column: 23
        }
      },
      "121": {
        start: {
          line: 282,
          column: 12
        },
        end: {
          line: 282,
          column: 64
        }
      },
      "122": {
        start: {
          line: 288,
          column: 4
        },
        end: {
          line: 301,
          column: 5
        }
      },
      "123": {
        start: {
          line: 289,
          column: 18
        },
        end: {
          line: 289,
          column: 71
        }
      },
      "124": {
        start: {
          line: 290,
          column: 18
        },
        end: {
          line: 290,
          column: 74
        }
      },
      "125": {
        start: {
          line: 291,
          column: 18
        },
        end: {
          line: 291,
          column: 69
        }
      },
      "126": {
        start: {
          line: 292,
          column: 18
        },
        end: {
          line: 292,
          column: 65
        }
      },
      "127": {
        start: {
          line: 293,
          column: 18
        },
        end: {
          line: 293,
          column: 73
        }
      },
      "128": {
        start: {
          line: 294,
          column: 18
        },
        end: {
          line: 294,
          column: 70
        }
      },
      "129": {
        start: {
          line: 295,
          column: 18
        },
        end: {
          line: 295,
          column: 75
        }
      },
      "130": {
        start: {
          line: 296,
          column: 18
        },
        end: {
          line: 296,
          column: 77
        }
      },
      "131": {
        start: {
          line: 297,
          column: 18
        },
        end: {
          line: 297,
          column: 75
        }
      },
      "132": {
        start: {
          line: 298,
          column: 18
        },
        end: {
          line: 298,
          column: 74
        }
      },
      "133": {
        start: {
          line: 299,
          column: 18
        },
        end: {
          line: 299,
          column: 71
        }
      },
      "134": {
        start: {
          line: 300,
          column: 17
        },
        end: {
          line: 300,
          column: 70
        }
      }
    },
    fnMap: {
      "0": {
        name: "getRetryMetrics",
        decl: {
          start: {
            line: 69,
            column: 9
          },
          end: {
            line: 69,
            column: 24
          }
        },
        loc: {
          start: {
            line: 69,
            column: 27
          },
          end: {
            line: 71,
            column: 1
          }
        },
        line: 69
      },
      "1": {
        name: "resetRetryMetrics",
        decl: {
          start: {
            line: 72,
            column: 9
          },
          end: {
            line: 72,
            column: 26
          }
        },
        loc: {
          start: {
            line: 72,
            column: 29
          },
          end: {
            line: 80,
            column: 1
          }
        },
        line: 72
      },
      "2": {
        name: "withRetry",
        decl: {
          start: {
            line: 85,
            column: 15
          },
          end: {
            line: 85,
            column: 24
          }
        },
        loc: {
          start: {
            line: 85,
            column: 49
          },
          end: {
            line: 166,
            column: 1
          }
        },
        line: 85
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 152,
            column: 30
          },
          end: {
            line: 152,
            column: 31
          }
        },
        loc: {
          start: {
            line: 152,
            column: 41
          },
          end: {
            line: 152,
            column: 67
          }
        },
        line: 152
      },
      "4": {
        name: "retryFetch",
        decl: {
          start: {
            line: 171,
            column: 15
          },
          end: {
            line: 171,
            column: 25
          }
        },
        loc: {
          start: {
            line: 171,
            column: 52
          },
          end: {
            line: 195,
            column: 1
          }
        },
        line: 171
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 172,
            column: 125
          },
          end: {
            line: 172,
            column: 126
          }
        },
        loc: {
          start: {
            line: 172,
            column: 145
          },
          end: {
            line: 185,
            column: 9
          }
        },
        line: 172
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 186,
            column: 21
          },
          end: {
            line: 186,
            column: 22
          }
        },
        loc: {
          start: {
            line: 186,
            column: 33
          },
          end: {
            line: 194,
            column: 5
          }
        },
        line: 186
      },
      "7": {
        name: "retryAzureOperation",
        decl: {
          start: {
            line: 199,
            column: 15
          },
          end: {
            line: 199,
            column: 34
          }
        },
        loc: {
          start: {
            line: 199,
            column: 83
          },
          end: {
            line: 220,
            column: 1
          }
        },
        line: 199
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 200,
            column: 186
          },
          end: {
            line: 200,
            column: 187
          }
        },
        loc: {
          start: {
            line: 200,
            column: 206
          },
          end: {
            line: 214,
            column: 9
          }
        },
        line: 200
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 214,
            column: 20
          },
          end: {
            line: 214,
            column: 21
          }
        },
        loc: {
          start: {
            line: 214,
            column: 47
          },
          end: {
            line: 218,
            column: 9
          }
        },
        line: 214
      },
      "10": {
        name: "retryFirebaseOperation",
        decl: {
          start: {
            line: 224,
            column: 15
          },
          end: {
            line: 224,
            column: 37
          }
        },
        loc: {
          start: {
            line: 224,
            column: 62
          },
          end: {
            line: 241,
            column: 1
          }
        },
        line: 224
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 225,
            column: 184
          },
          end: {
            line: 225,
            column: 185
          }
        },
        loc: {
          start: {
            line: 225,
            column: 204
          },
          end: {
            line: 235,
            column: 9
          }
        },
        line: 225
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 235,
            column: 20
          },
          end: {
            line: 235,
            column: 21
          }
        },
        loc: {
          start: {
            line: 235,
            column: 47
          },
          end: {
            line: 239,
            column: 9
          }
        },
        line: 235
      },
      "13": {
        name: "createTimeoutAbortSignal",
        decl: {
          start: {
            line: 246,
            column: 9
          },
          end: {
            line: 246,
            column: 33
          }
        },
        loc: {
          start: {
            line: 246,
            column: 45
          },
          end: {
            line: 250,
            column: 1
          }
        },
        line: 246
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 248,
            column: 15
          },
          end: {
            line: 248,
            column: 16
          }
        },
        loc: {
          start: {
            line: 248,
            column: 21
          },
          end: {
            line: 248,
            column: 39
          }
        },
        line: 248
      },
      "15": {
        name: "combineAbortSignals",
        decl: {
          start: {
            line: 254,
            column: 9
          },
          end: {
            line: 254,
            column: 28
          }
        },
        loc: {
          start: {
            line: 254,
            column: 41
          },
          end: {
            line: 265,
            column: 1
          }
        },
        line: 254
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 256,
            column: 25
          },
          end: {
            line: 256,
            column: 26
          }
        },
        loc: {
          start: {
            line: 256,
            column: 31
          },
          end: {
            line: 256,
            column: 49
          }
        },
        line: 256
      },
      "17": {
        name: "sleep",
        decl: {
          start: {
            line: 269,
            column: 9
          },
          end: {
            line: 269,
            column: 14
          }
        },
        loc: {
          start: {
            line: 269,
            column: 32
          },
          end: {
            line: 285,
            column: 1
          }
        },
        line: 269
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 270,
            column: 23
          },
          end: {
            line: 270,
            column: 24
          }
        },
        loc: {
          start: {
            line: 270,
            column: 44
          },
          end: {
            line: 284,
            column: 5
          }
        },
        line: 270
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 273,
            column: 33
          },
          end: {
            line: 273,
            column: 34
          }
        },
        loc: {
          start: {
            line: 273,
            column: 39
          },
          end: {
            line: 276,
            column: 13
          }
        },
        line: 273
      },
      "20": {
        name: "getErrorCodeFromHTTPStatus",
        decl: {
          start: {
            line: 287,
            column: 9
          },
          end: {
            line: 287,
            column: 35
          }
        },
        loc: {
          start: {
            line: 287,
            column: 44
          },
          end: {
            line: 302,
            column: 1
          }
        },
        line: 287
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 85,
            column: 36
          },
          end: {
            line: 85,
            column: 47
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 85,
            column: 45
          },
          end: {
            line: 85,
            column: 47
          }
        }],
        line: 85
      },
      "1": {
        loc: {
          start: {
            line: 95,
            column: 12
          },
          end: {
            line: 97,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 95,
            column: 12
          },
          end: {
            line: 97,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 95
      },
      "2": {
        loc: {
          start: {
            line: 95,
            column: 16
          },
          end: {
            line: 95,
            column: 94
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 95,
            column: 75
          },
          end: {
            line: 95,
            column: 81
          }
        }, {
          start: {
            line: 95,
            column: 84
          },
          end: {
            line: 95,
            column: 94
          }
        }],
        line: 95
      },
      "3": {
        loc: {
          start: {
            line: 95,
            column: 16
          },
          end: {
            line: 95,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 95,
            column: 16
          },
          end: {
            line: 95,
            column: 55
          }
        }, {
          start: {
            line: 95,
            column: 59
          },
          end: {
            line: 95,
            column: 72
          }
        }],
        line: 95
      },
      "4": {
        loc: {
          start: {
            line: 101,
            column: 12
          },
          end: {
            line: 104,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 101,
            column: 12
          },
          end: {
            line: 104,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 101
      },
      "5": {
        loc: {
          start: {
            line: 117,
            column: 17
          },
          end: {
            line: 117,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 117,
            column: 17
          },
          end: {
            line: 117,
            column: 58
          }
        }, {
          start: {
            line: 117,
            column: 62
          },
          end: {
            line: 117,
            column: 63
          }
        }],
        line: 117
      },
      "6": {
        loc: {
          start: {
            line: 119,
            column: 12
          },
          end: {
            line: 124,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 119,
            column: 12
          },
          end: {
            line: 124,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 119
      },
      "7": {
        loc: {
          start: {
            line: 121,
            column: 16
          },
          end: {
            line: 121,
            column: 132
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 121,
            column: 83
          },
          end: {
            line: 121,
            column: 89
          }
        }, {
          start: {
            line: 121,
            column: 92
          },
          end: {
            line: 121,
            column: 132
          }
        }],
        line: 121
      },
      "8": {
        loc: {
          start: {
            line: 121,
            column: 16
          },
          end: {
            line: 121,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 121,
            column: 16
          },
          end: {
            line: 121,
            column: 63
          }
        }, {
          start: {
            line: 121,
            column: 67
          },
          end: {
            line: 121,
            column: 80
          }
        }],
        line: 121
      },
      "9": {
        loc: {
          start: {
            line: 126,
            column: 37
          },
          end: {
            line: 128,
            column: 70
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 127,
            column: 18
          },
          end: {
            line: 127,
            column: 61
          }
        }, {
          start: {
            line: 128,
            column: 18
          },
          end: {
            line: 128,
            column: 70
          }
        }],
        line: 126
      },
      "10": {
        loc: {
          start: {
            line: 129,
            column: 12
          },
          end: {
            line: 132,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 129,
            column: 12
          },
          end: {
            line: 132,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 129
      },
      "11": {
        loc: {
          start: {
            line: 134,
            column: 30
          },
          end: {
            line: 136,
            column: 39
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 135,
            column: 18
          },
          end: {
            line: 135,
            column: 45
          }
        }, {
          start: {
            line: 136,
            column: 18
          },
          end: {
            line: 136,
            column: 39
          }
        }],
        line: 134
      },
      "12": {
        loc: {
          start: {
            line: 139,
            column: 12
          },
          end: {
            line: 141,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 139,
            column: 12
          },
          end: {
            line: 141,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 139
      },
      "13": {
        loc: {
          start: {
            line: 139,
            column: 16
          },
          end: {
            line: 139,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 139,
            column: 16
          },
          end: {
            line: 139,
            column: 36
          }
        }, {
          start: {
            line: 139,
            column: 40
          },
          end: {
            line: 139,
            column: 68
          }
        }],
        line: 139
      },
      "14": {
        loc: {
          start: {
            line: 149,
            column: 12
          },
          end: {
            line: 149,
            column: 123
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 149,
            column: 67
          },
          end: {
            line: 149,
            column: 73
          }
        }, {
          start: {
            line: 149,
            column: 76
          },
          end: {
            line: 149,
            column: 123
          }
        }],
        line: 149
      },
      "15": {
        loc: {
          start: {
            line: 149,
            column: 12
          },
          end: {
            line: 149,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 149,
            column: 12
          },
          end: {
            line: 149,
            column: 47
          }
        }, {
          start: {
            line: 149,
            column: 51
          },
          end: {
            line: 149,
            column: 64
          }
        }],
        line: 149
      },
      "16": {
        loc: {
          start: {
            line: 154,
            column: 12
          },
          end: {
            line: 156,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 154,
            column: 12
          },
          end: {
            line: 156,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 154
      },
      "17": {
        loc: {
          start: {
            line: 154,
            column: 16
          },
          end: {
            line: 154,
            column: 94
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 154,
            column: 75
          },
          end: {
            line: 154,
            column: 81
          }
        }, {
          start: {
            line: 154,
            column: 84
          },
          end: {
            line: 154,
            column: 94
          }
        }],
        line: 154
      },
      "18": {
        loc: {
          start: {
            line: 154,
            column: 16
          },
          end: {
            line: 154,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 154,
            column: 16
          },
          end: {
            line: 154,
            column: 55
          }
        }, {
          start: {
            line: 154,
            column: 59
          },
          end: {
            line: 154,
            column: 72
          }
        }],
        line: 154
      },
      "19": {
        loc: {
          start: {
            line: 161,
            column: 15
          },
          end: {
            line: 161,
            column: 148
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 161,
            column: 15
          },
          end: {
            line: 161,
            column: 24
          }
        }, {
          start: {
            line: 161,
            column: 28
          },
          end: {
            line: 161,
            column: 148
          }
        }],
        line: 161
      },
      "20": {
        loc: {
          start: {
            line: 171,
            column: 39
          },
          end: {
            line: 171,
            column: 50
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 171,
            column: 48
          },
          end: {
            line: 171,
            column: 50
          }
        }],
        line: 171
      },
      "21": {
        loc: {
          start: {
            line: 174,
            column: 12
          },
          end: {
            line: 175,
            column: 28
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 174,
            column: 12
          },
          end: {
            line: 175,
            column: 28
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 174
      },
      "22": {
        loc: {
          start: {
            line: 176,
            column: 12
          },
          end: {
            line: 177,
            column: 28
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 176,
            column: 12
          },
          end: {
            line: 177,
            column: 28
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 176
      },
      "23": {
        loc: {
          start: {
            line: 178,
            column: 12
          },
          end: {
            line: 179,
            column: 28
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 178,
            column: 12
          },
          end: {
            line: 179,
            column: 28
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 178
      },
      "24": {
        loc: {
          start: {
            line: 180,
            column: 12
          },
          end: {
            line: 181,
            column: 36
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 180,
            column: 12
          },
          end: {
            line: 181,
            column: 36
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 180
      },
      "25": {
        loc: {
          start: {
            line: 182,
            column: 12
          },
          end: {
            line: 183,
            column: 36
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 182,
            column: 12
          },
          end: {
            line: 183,
            column: 36
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 182
      },
      "26": {
        loc: {
          start: {
            line: 188,
            column: 8
          },
          end: {
            line: 192,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 188,
            column: 8
          },
          end: {
            line: 192,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 188
      },
      "27": {
        loc: {
          start: {
            line: 199,
            column: 46
          },
          end: {
            line: 199,
            column: 68
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 199,
            column: 60
          },
          end: {
            line: 199,
            column: 68
          }
        }],
        line: 199
      },
      "28": {
        loc: {
          start: {
            line: 199,
            column: 70
          },
          end: {
            line: 199,
            column: 81
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 199,
            column: 79
          },
          end: {
            line: 199,
            column: 81
          }
        }],
        line: 199
      },
      "29": {
        loc: {
          start: {
            line: 209,
            column: 12
          },
          end: {
            line: 210,
            column: 28
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 209,
            column: 12
          },
          end: {
            line: 210,
            column: 28
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 209
      },
      "30": {
        loc: {
          start: {
            line: 211,
            column: 12
          },
          end: {
            line: 212,
            column: 28
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 211,
            column: 12
          },
          end: {
            line: 212,
            column: 28
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 211
      },
      "31": {
        loc: {
          start: {
            line: 211,
            column: 16
          },
          end: {
            line: 211,
            column: 96
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 211,
            column: 16
          },
          end: {
            line: 211,
            column: 80
          }
        }, {
          start: {
            line: 211,
            column: 84
          },
          end: {
            line: 211,
            column: 96
          }
        }],
        line: 211
      },
      "32": {
        loc: {
          start: {
            line: 213,
            column: 19
          },
          end: {
            line: 213,
            column: 202
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 213,
            column: 149
          },
          end: {
            line: 213,
            column: 151
          }
        }, {
          start: {
            line: 213,
            column: 154
          },
          end: {
            line: 213,
            column: 202
          }
        }],
        line: 213
      },
      "33": {
        loc: {
          start: {
            line: 213,
            column: 19
          },
          end: {
            line: 213,
            column: 146
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 213,
            column: 19
          },
          end: {
            line: 213,
            column: 129
          }
        }, {
          start: {
            line: 213,
            column: 133
          },
          end: {
            line: 213,
            column: 146
          }
        }],
        line: 213
      },
      "34": {
        loc: {
          start: {
            line: 213,
            column: 25
          },
          end: {
            line: 213,
            column: 119
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 213,
            column: 79
          },
          end: {
            line: 213,
            column: 85
          }
        }, {
          start: {
            line: 213,
            column: 88
          },
          end: {
            line: 213,
            column: 119
          }
        }],
        line: 213
      },
      "35": {
        loc: {
          start: {
            line: 213,
            column: 25
          },
          end: {
            line: 213,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 213,
            column: 25
          },
          end: {
            line: 213,
            column: 59
          }
        }, {
          start: {
            line: 213,
            column: 63
          },
          end: {
            line: 213,
            column: 76
          }
        }],
        line: 213
      },
      "36": {
        loc: {
          start: {
            line: 217,
            column: 12
          },
          end: {
            line: 217,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 217,
            column: 62
          },
          end: {
            line: 217,
            column: 68
          }
        }, {
          start: {
            line: 217,
            column: 71
          },
          end: {
            line: 217,
            column: 109
          }
        }],
        line: 217
      },
      "37": {
        loc: {
          start: {
            line: 217,
            column: 12
          },
          end: {
            line: 217,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 217,
            column: 12
          },
          end: {
            line: 217,
            column: 42
          }
        }, {
          start: {
            line: 217,
            column: 46
          },
          end: {
            line: 217,
            column: 59
          }
        }],
        line: 217
      },
      "38": {
        loc: {
          start: {
            line: 224,
            column: 49
          },
          end: {
            line: 224,
            column: 60
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 224,
            column: 58
          },
          end: {
            line: 224,
            column: 60
          }
        }],
        line: 224
      },
      "39": {
        loc: {
          start: {
            line: 228,
            column: 12
          },
          end: {
            line: 229,
            column: 28
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 228,
            column: 12
          },
          end: {
            line: 229,
            column: 28
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 228
      },
      "40": {
        loc: {
          start: {
            line: 230,
            column: 12
          },
          end: {
            line: 231,
            column: 28
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 230,
            column: 12
          },
          end: {
            line: 231,
            column: 28
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 230
      },
      "41": {
        loc: {
          start: {
            line: 230,
            column: 16
          },
          end: {
            line: 230,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 230,
            column: 16
          },
          end: {
            line: 230,
            column: 74
          }
        }, {
          start: {
            line: 230,
            column: 78
          },
          end: {
            line: 230,
            column: 90
          }
        }],
        line: 230
      },
      "42": {
        loc: {
          start: {
            line: 232,
            column: 12
          },
          end: {
            line: 233,
            column: 28
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 232,
            column: 12
          },
          end: {
            line: 233,
            column: 28
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 232
      },
      "43": {
        loc: {
          start: {
            line: 234,
            column: 19
          },
          end: {
            line: 234,
            column: 202
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 234,
            column: 149
          },
          end: {
            line: 234,
            column: 151
          }
        }, {
          start: {
            line: 234,
            column: 154
          },
          end: {
            line: 234,
            column: 202
          }
        }],
        line: 234
      },
      "44": {
        loc: {
          start: {
            line: 234,
            column: 19
          },
          end: {
            line: 234,
            column: 146
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 234,
            column: 19
          },
          end: {
            line: 234,
            column: 129
          }
        }, {
          start: {
            line: 234,
            column: 133
          },
          end: {
            line: 234,
            column: 146
          }
        }],
        line: 234
      },
      "45": {
        loc: {
          start: {
            line: 234,
            column: 25
          },
          end: {
            line: 234,
            column: 119
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 234,
            column: 79
          },
          end: {
            line: 234,
            column: 85
          }
        }, {
          start: {
            line: 234,
            column: 88
          },
          end: {
            line: 234,
            column: 119
          }
        }],
        line: 234
      },
      "46": {
        loc: {
          start: {
            line: 234,
            column: 25
          },
          end: {
            line: 234,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 234,
            column: 25
          },
          end: {
            line: 234,
            column: 59
          }
        }, {
          start: {
            line: 234,
            column: 63
          },
          end: {
            line: 234,
            column: 76
          }
        }],
        line: 234
      },
      "47": {
        loc: {
          start: {
            line: 238,
            column: 12
          },
          end: {
            line: 238,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 238,
            column: 62
          },
          end: {
            line: 238,
            column: 68
          }
        }, {
          start: {
            line: 238,
            column: 71
          },
          end: {
            line: 238,
            column: 109
          }
        }],
        line: 238
      },
      "48": {
        loc: {
          start: {
            line: 238,
            column: 12
          },
          end: {
            line: 238,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 238,
            column: 12
          },
          end: {
            line: 238,
            column: 42
          }
        }, {
          start: {
            line: 238,
            column: 46
          },
          end: {
            line: 238,
            column: 59
          }
        }],
        line: 238
      },
      "49": {
        loc: {
          start: {
            line: 258,
            column: 8
          },
          end: {
            line: 261,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 258,
            column: 8
          },
          end: {
            line: 261,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 258
      },
      "50": {
        loc: {
          start: {
            line: 272,
            column: 8
          },
          end: {
            line: 283,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 272,
            column: 8
          },
          end: {
            line: 283,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 272
      },
      "51": {
        loc: {
          start: {
            line: 277,
            column: 12
          },
          end: {
            line: 281,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 277,
            column: 12
          },
          end: {
            line: 281,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 277
      },
      "52": {
        loc: {
          start: {
            line: 288,
            column: 4
          },
          end: {
            line: 301,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 289,
            column: 8
          },
          end: {
            line: 289,
            column: 71
          }
        }, {
          start: {
            line: 290,
            column: 8
          },
          end: {
            line: 290,
            column: 74
          }
        }, {
          start: {
            line: 291,
            column: 8
          },
          end: {
            line: 291,
            column: 69
          }
        }, {
          start: {
            line: 292,
            column: 8
          },
          end: {
            line: 292,
            column: 65
          }
        }, {
          start: {
            line: 293,
            column: 8
          },
          end: {
            line: 293,
            column: 73
          }
        }, {
          start: {
            line: 294,
            column: 8
          },
          end: {
            line: 294,
            column: 70
          }
        }, {
          start: {
            line: 295,
            column: 8
          },
          end: {
            line: 295,
            column: 75
          }
        }, {
          start: {
            line: 296,
            column: 8
          },
          end: {
            line: 296,
            column: 77
          }
        }, {
          start: {
            line: 297,
            column: 8
          },
          end: {
            line: 297,
            column: 75
          }
        }, {
          start: {
            line: 298,
            column: 8
          },
          end: {
            line: 298,
            column: 74
          }
        }, {
          start: {
            line: 299,
            column: 8
          },
          end: {
            line: 299,
            column: 71
          }
        }, {
          start: {
            line: 300,
            column: 8
          },
          end: {
            line: 300,
            column: 70
          }
        }],
        line: 288
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0],
      "28": [0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
    },
    inputSourceMap: {
      file: "/Users/dikshantvashistha/PrepBettr/lib/utils/retry-middleware.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/dikshantvashistha/PrepBettr/lib/utils/retry-middleware.ts"],
      sourcesContent: ["/**\n * Retry Middleware with Exponential Backoff\n * \n * Provides configurable retry logic with multiple backoff strategies\n * for handling transient failures in API calls and service interactions.\n * \n * Features:\n * - Multiple retry strategies (linear, exponential, jitter)\n * - Configurable retry conditions and circuit breaking\n * - Promise-based API with TypeScript support\n * - Integration with structured error system\n * - Abort signal support for cancellation\n * - Detailed retry logging and metrics\n * \n * @version 1.0.0\n */\n\nimport { \n  StructuredError, \n  RetryStrategy, \n  isRetryableError, \n  getRetryDelay, \n  toStructuredError,\n  ErrorCode \n} from './structured-errors';\n\n// ===== CONFIGURATION TYPES =====\n\nexport interface RetryConfig {\n  /** Maximum number of retry attempts (excluding initial attempt) */\n  maxRetries: number;\n  \n  /** Base delay in milliseconds for calculating backoff */\n  baseDelay: number;\n  \n  /** Retry strategy to use */\n  strategy: RetryStrategy;\n  \n  /** Maximum delay in milliseconds (prevents excessive backoff) */\n  maxDelay?: number;\n  \n  /** Custom function to determine if error should trigger retry */\n  shouldRetry?: (error: StructuredError, attempt: number) => boolean;\n  \n  /** AbortSignal to cancel ongoing retries */\n  abortSignal?: AbortSignal;\n  \n  /** Called before each retry attempt */\n  onRetry?: (error: StructuredError, attempt: number, delay: number) => void;\n  \n  /** Called when all retry attempts are exhausted */\n  onMaxRetriesReached?: (error: StructuredError, totalAttempts: number) => void;\n}\n\nexport interface RetryResult<T> {\n  /** The successful result, if any */\n  data?: T;\n  \n  /** The final error, if operation failed */\n  error?: StructuredError;\n  \n  /** Total number of attempts made (including initial) */\n  totalAttempts: number;\n  \n  /** Total time spent on operation in milliseconds */\n  totalDuration: number;\n  \n  /** Whether operation succeeded */\n  success: boolean;\n}\n\nexport interface RetryMetrics {\n  /** Total retry attempts across all operations */\n  totalRetries: number;\n  \n  /** Successful retries (operations that succeeded after retry) */\n  successfulRetries: number;\n  \n  /** Failed retries (operations that failed after all retries) */\n  failedRetries: number;\n  \n  /** Average retry delay in milliseconds */\n  averageRetryDelay: number;\n  \n  /** Most common retry reasons */\n  retryReasons: Partial<Record<ErrorCode, number>>;\n}\n\n// ===== DEFAULT CONFIGURATIONS =====\n\nexport const DEFAULT_RETRY_CONFIG: RetryConfig = {\n  maxRetries: 3,\n  baseDelay: 1000, // 1 second\n  strategy: RetryStrategy.EXPONENTIAL,\n  maxDelay: 30000, // 30 seconds\n};\n\nexport const QUICK_RETRY_CONFIG: RetryConfig = {\n  maxRetries: 2,\n  baseDelay: 500, // 500ms\n  strategy: RetryStrategy.LINEAR,\n  maxDelay: 2000, // 2 seconds\n};\n\nexport const AGGRESSIVE_RETRY_CONFIG: RetryConfig = {\n  maxRetries: 5,\n  baseDelay: 1000, // 1 second\n  strategy: RetryStrategy.EXPONENTIAL_JITTER,\n  maxDelay: 60000, // 60 seconds\n};\n\nexport const VOICE_SERVICE_RETRY_CONFIG: RetryConfig = {\n  maxRetries: 2,\n  baseDelay: 2000, // 2 seconds\n  strategy: RetryStrategy.LINEAR,\n  maxDelay: 10000, // 10 seconds\n};\n\nexport const FILE_UPLOAD_RETRY_CONFIG: RetryConfig = {\n  maxRetries: 3,\n  baseDelay: 5000, // 5 seconds\n  strategy: RetryStrategy.EXPONENTIAL,\n  maxDelay: 45000, // 45 seconds\n};\n\n// ===== RETRY METRICS TRACKING =====\n\nlet retryMetrics: RetryMetrics = {\n  totalRetries: 0,\n  successfulRetries: 0,\n  failedRetries: 0,\n  averageRetryDelay: 0,\n  retryReasons: {}\n};\n\nexport function getRetryMetrics(): RetryMetrics {\n  return { ...retryMetrics };\n}\n\nexport function resetRetryMetrics(): void {\n  retryMetrics = {\n    totalRetries: 0,\n    successfulRetries: 0,\n    failedRetries: 0,\n    averageRetryDelay: 0,\n    retryReasons: {}\n  };\n}\n\n// ===== CORE RETRY FUNCTION =====\n\n/**\n * Execute a function with automatic retry logic based on structured errors\n */\nexport async function withRetry<T>(\n  operation: () => Promise<T>,\n  config: Partial<RetryConfig> = {}\n): Promise<RetryResult<T>> {\n  const finalConfig: RetryConfig = { ...DEFAULT_RETRY_CONFIG, ...config };\n  const startTime = Date.now();\n  \n  let lastError: StructuredError | undefined;\n  let totalDelayTime = 0;\n  \n  for (let attempt = 1; attempt <= finalConfig.maxRetries + 1; attempt++) {\n    const isLastAttempt = attempt === finalConfig.maxRetries + 1;\n    \n    try {\n      // Check for abort signal\n      if (finalConfig.abortSignal?.aborted) {\n        throw new Error('Operation aborted');\n      }\n      \n      // Execute the operation\n      const result = await operation();\n      \n      // Success - update metrics if this was a retry\n      if (attempt > 1) {\n        retryMetrics.successfulRetries++;\n        console.log(`\u2705 Operation succeeded after ${attempt - 1} retries`);\n      }\n      \n      return {\n        data: result,\n        totalAttempts: attempt,\n        totalDuration: Date.now() - startTime,\n        success: true\n      };\n      \n    } catch (error) {\n      // Convert to structured error\n      lastError = toStructuredError(error);\n      \n      // Track retry reason\n      retryMetrics.retryReasons[lastError.code] = \n        (retryMetrics.retryReasons[lastError.code] || 0) + 1;\n      \n      // If this is the last attempt, don't retry\n      if (isLastAttempt) {\n        retryMetrics.failedRetries++;\n        finalConfig.onMaxRetriesReached?.(lastError, attempt);\n        console.warn(`\u274C Operation failed after ${attempt} attempts:`, lastError.message);\n        break;\n      }\n      \n      // Check if error should trigger retry\n      const shouldRetryError = finalConfig.shouldRetry \n        ? finalConfig.shouldRetry(lastError, attempt)\n        : isRetryableError(lastError);\n      \n      if (!shouldRetryError) {\n        console.log(`\uD83D\uDEAB Error not retryable: ${lastError.code}`);\n        break;\n      }\n      \n      // Calculate retry delay\n      const baseDelay = lastError.retryAfter \n        ? lastError.retryAfter * 1000 \n        : finalConfig.baseDelay;\n      \n      let delay = getRetryDelay(lastError, attempt, baseDelay);\n      \n      // Apply max delay cap\n      if (finalConfig.maxDelay && delay > finalConfig.maxDelay) {\n        delay = finalConfig.maxDelay;\n      }\n      \n      // Track metrics\n      retryMetrics.totalRetries++;\n      totalDelayTime += delay;\n      retryMetrics.averageRetryDelay = \n        (retryMetrics.averageRetryDelay * (retryMetrics.totalRetries - 1) + delay) / \n        retryMetrics.totalRetries;\n      \n      // Call retry callback\n      finalConfig.onRetry?.(lastError, attempt, delay);\n      \n      console.log(`\uD83D\uDD04 Retrying in ${delay}ms (attempt ${attempt}/${finalConfig.maxRetries + 1}): ${lastError.message}`);\n      \n      // Wait for retry delay\n      await new Promise(resolve => setTimeout(resolve, delay));\n      \n      // Check for abort signal again after delay\n      if (finalConfig.abortSignal?.aborted) {\n        throw new Error('Operation aborted during retry delay');\n      }\n    }\n  }\n  \n  // All attempts failed\n  return {\n    error: lastError || toStructuredError(new Error('Operation failed'), ErrorCode.UNHANDLED_ERROR),\n    totalAttempts: finalConfig.maxRetries + 1,\n    totalDuration: Date.now() - startTime,\n    success: false\n  };\n}\n\n// ===== SPECIALIZED RETRY FUNCTIONS =====\n\n/**\n * Retry specifically for HTTP fetch operations\n */\nexport async function retryFetch(\n  input: RequestInfo | URL,\n  init?: RequestInit,\n  config: Partial<RetryConfig> = {}\n): Promise<RetryResult<Response>> {\n  const fetchConfig: RetryConfig = {\n    ...DEFAULT_RETRY_CONFIG,\n    ...config,\n    shouldRetry: (error, attempt) => {\n      // Custom retry logic for HTTP errors\n      if (error.code === ErrorCode.RATE_LIMIT_EXCEEDED) return true;\n      if (error.code === ErrorCode.SERVICE_TIMEOUT) return true;\n      if (error.code === ErrorCode.SERVICE_UNAVAILABLE) return true;\n      if (error.code === ErrorCode.AZURE_OPENAI_ERROR) return attempt <= 2;\n      if (error.code === ErrorCode.AZURE_SPEECH_ERROR) return attempt <= 2;\n      return isRetryableError(error);\n    }\n  };\n  \n  return withRetry(async () => {\n    const response = await fetch(input, init);\n    \n    if (!response.ok) {\n      // Convert HTTP error to structured error\n      const errorCode = getErrorCodeFromHTTPStatus(response.status);\n      throw toStructuredError(\n        new Error(`HTTP ${response.status}: ${response.statusText}`),\n        errorCode\n      );\n    }\n    \n    return response;\n  }, fetchConfig);\n}\n\n/**\n * Retry specifically for Azure service calls\n */\nexport async function retryAzureOperation<T>(\n  operation: () => Promise<T>,\n  serviceType: 'openai' | 'speech' | 'storage' = 'openai',\n  config: Partial<RetryConfig> = {}\n): Promise<RetryResult<T>> {\n  const azureConfig: RetryConfig = {\n    maxRetries: 3,\n    baseDelay: 2000,\n    strategy: RetryStrategy.EXPONENTIAL,\n    maxDelay: 30000,\n    ...config,\n    shouldRetry: (error, attempt) => {\n      // Azure-specific retry logic\n      const azureErrors = [\n        ErrorCode.AZURE_OPENAI_ERROR,\n        ErrorCode.AZURE_SPEECH_ERROR,\n        ErrorCode.SERVICE_TIMEOUT,\n        ErrorCode.SERVICE_OVERLOADED\n      ];\n      \n      if (azureErrors.includes(error.code)) return true;\n      if (error.code === ErrorCode.RATE_LIMIT_EXCEEDED && attempt <= 2) return true;\n      \n      return config.shouldRetry?.(error, attempt) ?? isRetryableError(error);\n    },\n    onRetry: (error, attempt, delay) => {\n      console.log(`\uD83D\uDD04 Retrying Azure ${serviceType} operation (${error.code}): attempt ${attempt}, delay ${delay}ms`);\n      config.onRetry?.(error, attempt, delay);\n    }\n  };\n  \n  return withRetry(operation, azureConfig);\n}\n\n/**\n * Retry specifically for Firebase operations\n */\nexport async function retryFirebaseOperation<T>(\n  operation: () => Promise<T>,\n  config: Partial<RetryConfig> = {}\n): Promise<RetryResult<T>> {\n  const firebaseConfig: RetryConfig = {\n    maxRetries: 2,\n    baseDelay: 3000,\n    strategy: RetryStrategy.LINEAR,\n    maxDelay: 15000,\n    ...config,\n    shouldRetry: (error, attempt) => {\n      // Firebase-specific retry logic\n      if (error.code === ErrorCode.FIREBASE_ERROR) return true;\n      if (error.code === ErrorCode.STORAGE_ERROR && attempt <= 1) return true;\n      if (error.code === ErrorCode.SERVICE_TIMEOUT) return true;\n      \n      return config.shouldRetry?.(error, attempt) ?? isRetryableError(error);\n    },\n    onRetry: (error, attempt, delay) => {\n      console.log(`\uD83D\uDD04 Retrying Firebase operation (${error.code}): attempt ${attempt}, delay ${delay}ms`);\n      config.onRetry?.(error, attempt, delay);\n    }\n  };\n  \n  return withRetry(operation, firebaseConfig);\n}\n\n// ===== UTILITY FUNCTIONS =====\n\n/**\n * Create an AbortController that automatically aborts after timeout\n */\nexport function createTimeoutAbortSignal(timeoutMs: number): AbortSignal {\n  const controller = new AbortController();\n  setTimeout(() => controller.abort(), timeoutMs);\n  return controller.signal;\n}\n\n/**\n * Combine multiple AbortSignals into one\n */\nexport function combineAbortSignals(...signals: AbortSignal[]): AbortSignal {\n  const controller = new AbortController();\n  \n  const abortHandler = () => controller.abort();\n  \n  for (const signal of signals) {\n    if (signal.aborted) {\n      controller.abort();\n      break;\n    }\n    signal.addEventListener('abort', abortHandler);\n  }\n  \n  return controller.signal;\n}\n\n/**\n * Sleep with optional abort signal support\n */\nexport function sleep(ms: number, abortSignal?: AbortSignal): Promise<void> {\n  return new Promise((resolve, reject) => {\n    const timeout = setTimeout(resolve, ms);\n    \n    if (abortSignal) {\n      const abortHandler = () => {\n        clearTimeout(timeout);\n        reject(new Error('Sleep aborted'));\n      };\n      \n      if (abortSignal.aborted) {\n        clearTimeout(timeout);\n        reject(new Error('Sleep aborted'));\n        return;\n      }\n      \n      abortSignal.addEventListener('abort', abortHandler);\n    }\n  });\n}\n\n// Helper function for HTTP status to error code conversion\nfunction getErrorCodeFromHTTPStatus(status: number): ErrorCode {\n  switch (status) {\n    case 400: return ErrorCode.INVALID_REQUEST;\n    case 401: return ErrorCode.AUTH_TOKEN_INVALID;\n    case 403: return ErrorCode.ACCESS_DENIED;\n    case 404: return ErrorCode.NOT_FOUND;\n    case 409: return ErrorCode.RESOURCE_CONFLICT;\n    case 413: return ErrorCode.FILE_TOO_LARGE;\n    case 429: return ErrorCode.RATE_LIMIT_EXCEEDED;\n    case 500: return ErrorCode.INTERNAL_SERVER_ERROR;\n    case 502: return ErrorCode.SERVICE_UNAVAILABLE;\n    case 503: return ErrorCode.SERVICE_OVERLOADED;\n    case 504: return ErrorCode.SERVICE_TIMEOUT;\n    default: return ErrorCode.UNHANDLED_ERROR;\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "685057f6794d52c7810e63a1a1b2902547ddfc4d"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_h5auyu00d = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_h5auyu00d();
cov_h5auyu00d().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_h5auyu00d().s[1]++;
exports.FILE_UPLOAD_RETRY_CONFIG = exports.VOICE_SERVICE_RETRY_CONFIG = exports.AGGRESSIVE_RETRY_CONFIG = exports.QUICK_RETRY_CONFIG = exports.DEFAULT_RETRY_CONFIG = void 0;
/* istanbul ignore next */
cov_h5auyu00d().s[2]++;
exports.getRetryMetrics = getRetryMetrics;
/* istanbul ignore next */
cov_h5auyu00d().s[3]++;
exports.resetRetryMetrics = resetRetryMetrics;
/* istanbul ignore next */
cov_h5auyu00d().s[4]++;
exports.withRetry = withRetry;
/* istanbul ignore next */
cov_h5auyu00d().s[5]++;
exports.retryFetch = retryFetch;
/* istanbul ignore next */
cov_h5auyu00d().s[6]++;
exports.retryAzureOperation = retryAzureOperation;
/* istanbul ignore next */
cov_h5auyu00d().s[7]++;
exports.retryFirebaseOperation = retryFirebaseOperation;
/* istanbul ignore next */
cov_h5auyu00d().s[8]++;
exports.createTimeoutAbortSignal = createTimeoutAbortSignal;
/* istanbul ignore next */
cov_h5auyu00d().s[9]++;
exports.combineAbortSignals = combineAbortSignals;
/* istanbul ignore next */
cov_h5auyu00d().s[10]++;
exports.sleep = sleep;
const structured_errors_1 =
/* istanbul ignore next */
(cov_h5auyu00d().s[11]++, require("./structured-errors"));
// ===== DEFAULT CONFIGURATIONS =====
/* istanbul ignore next */
cov_h5auyu00d().s[12]++;
exports.DEFAULT_RETRY_CONFIG = {
  maxRetries: 3,
  baseDelay: 1000,
  // 1 second
  strategy: structured_errors_1.RetryStrategy.EXPONENTIAL,
  maxDelay: 30000 // 30 seconds
};
/* istanbul ignore next */
cov_h5auyu00d().s[13]++;
exports.QUICK_RETRY_CONFIG = {
  maxRetries: 2,
  baseDelay: 500,
  // 500ms
  strategy: structured_errors_1.RetryStrategy.LINEAR,
  maxDelay: 2000 // 2 seconds
};
/* istanbul ignore next */
cov_h5auyu00d().s[14]++;
exports.AGGRESSIVE_RETRY_CONFIG = {
  maxRetries: 5,
  baseDelay: 1000,
  // 1 second
  strategy: structured_errors_1.RetryStrategy.EXPONENTIAL_JITTER,
  maxDelay: 60000 // 60 seconds
};
/* istanbul ignore next */
cov_h5auyu00d().s[15]++;
exports.VOICE_SERVICE_RETRY_CONFIG = {
  maxRetries: 2,
  baseDelay: 2000,
  // 2 seconds
  strategy: structured_errors_1.RetryStrategy.LINEAR,
  maxDelay: 10000 // 10 seconds
};
/* istanbul ignore next */
cov_h5auyu00d().s[16]++;
exports.FILE_UPLOAD_RETRY_CONFIG = {
  maxRetries: 3,
  baseDelay: 5000,
  // 5 seconds
  strategy: structured_errors_1.RetryStrategy.EXPONENTIAL,
  maxDelay: 45000 // 45 seconds
};
// ===== RETRY METRICS TRACKING =====
let retryMetrics =
/* istanbul ignore next */
(cov_h5auyu00d().s[17]++, {
  totalRetries: 0,
  successfulRetries: 0,
  failedRetries: 0,
  averageRetryDelay: 0,
  retryReasons: {}
});
function getRetryMetrics() {
  /* istanbul ignore next */
  cov_h5auyu00d().f[0]++;
  cov_h5auyu00d().s[18]++;
  return Object.assign({}, retryMetrics);
}
function resetRetryMetrics() {
  /* istanbul ignore next */
  cov_h5auyu00d().f[1]++;
  cov_h5auyu00d().s[19]++;
  retryMetrics = {
    totalRetries: 0,
    successfulRetries: 0,
    failedRetries: 0,
    averageRetryDelay: 0,
    retryReasons: {}
  };
}
// ===== CORE RETRY FUNCTION =====
/**
 * Execute a function with automatic retry logic based on structured errors
 */
async function withRetry(operation, config =
/* istanbul ignore next */
(cov_h5auyu00d().b[0][0]++, {})) {
  /* istanbul ignore next */
  cov_h5auyu00d().f[2]++;
  var _a, _b, _c, _d;
  const finalConfig =
  /* istanbul ignore next */
  (cov_h5auyu00d().s[20]++, Object.assign(Object.assign({}, exports.DEFAULT_RETRY_CONFIG), config));
  const startTime =
  /* istanbul ignore next */
  (cov_h5auyu00d().s[21]++, Date.now());
  let lastError;
  let totalDelayTime =
  /* istanbul ignore next */
  (cov_h5auyu00d().s[22]++, 0);
  /* istanbul ignore next */
  cov_h5auyu00d().s[23]++;
  for (let attempt =
  /* istanbul ignore next */
  (cov_h5auyu00d().s[24]++, 1); attempt <= finalConfig.maxRetries + 1; attempt++) {
    const isLastAttempt =
    /* istanbul ignore next */
    (cov_h5auyu00d().s[25]++, attempt === finalConfig.maxRetries + 1);
    /* istanbul ignore next */
    cov_h5auyu00d().s[26]++;
    try {
      /* istanbul ignore next */
      cov_h5auyu00d().s[27]++;
      // Check for abort signal
      if (
      /* istanbul ignore next */
      (cov_h5auyu00d().b[3][0]++, (_a = finalConfig.abortSignal) === null) ||
      /* istanbul ignore next */
      (cov_h5auyu00d().b[3][1]++, _a === void 0) ?
      /* istanbul ignore next */
      (cov_h5auyu00d().b[2][0]++, void 0) :
      /* istanbul ignore next */
      (cov_h5auyu00d().b[2][1]++, _a.aborted)) {
        /* istanbul ignore next */
        cov_h5auyu00d().b[1][0]++;
        cov_h5auyu00d().s[28]++;
        throw new Error('Operation aborted');
      } else
      /* istanbul ignore next */
      {
        cov_h5auyu00d().b[1][1]++;
      }
      // Execute the operation
      const result =
      /* istanbul ignore next */
      (cov_h5auyu00d().s[29]++, await operation());
      // Success - update metrics if this was a retry
      /* istanbul ignore next */
      cov_h5auyu00d().s[30]++;
      if (attempt > 1) {
        /* istanbul ignore next */
        cov_h5auyu00d().b[4][0]++;
        cov_h5auyu00d().s[31]++;
        retryMetrics.successfulRetries++;
        /* istanbul ignore next */
        cov_h5auyu00d().s[32]++;
        console.log(`✅ Operation succeeded after ${attempt - 1} retries`);
      } else
      /* istanbul ignore next */
      {
        cov_h5auyu00d().b[4][1]++;
      }
      cov_h5auyu00d().s[33]++;
      return {
        data: result,
        totalAttempts: attempt,
        totalDuration: Date.now() - startTime,
        success: true
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_h5auyu00d().s[34]++;
      // Convert to structured error
      lastError = (0, structured_errors_1.toStructuredError)(error);
      // Track retry reason
      /* istanbul ignore next */
      cov_h5auyu00d().s[35]++;
      retryMetrics.retryReasons[lastError.code] = (
      /* istanbul ignore next */
      (cov_h5auyu00d().b[5][0]++, retryMetrics.retryReasons[lastError.code]) ||
      /* istanbul ignore next */
      (cov_h5auyu00d().b[5][1]++, 0)) + 1;
      // If this is the last attempt, don't retry
      /* istanbul ignore next */
      cov_h5auyu00d().s[36]++;
      if (isLastAttempt) {
        /* istanbul ignore next */
        cov_h5auyu00d().b[6][0]++;
        cov_h5auyu00d().s[37]++;
        retryMetrics.failedRetries++;
        /* istanbul ignore next */
        cov_h5auyu00d().s[38]++;
        /* istanbul ignore next */
        (cov_h5auyu00d().b[8][0]++, (_b = finalConfig.onMaxRetriesReached) === null) ||
        /* istanbul ignore next */
        (cov_h5auyu00d().b[8][1]++, _b === void 0) ?
        /* istanbul ignore next */
        (cov_h5auyu00d().b[7][0]++, void 0) :
        /* istanbul ignore next */
        (cov_h5auyu00d().b[7][1]++, _b.call(finalConfig, lastError, attempt));
        /* istanbul ignore next */
        cov_h5auyu00d().s[39]++;
        console.warn(`❌ Operation failed after ${attempt} attempts:`, lastError.message);
        /* istanbul ignore next */
        cov_h5auyu00d().s[40]++;
        break;
      } else
      /* istanbul ignore next */
      {
        cov_h5auyu00d().b[6][1]++;
      }
      // Check if error should trigger retry
      const shouldRetryError =
      /* istanbul ignore next */
      (cov_h5auyu00d().s[41]++, finalConfig.shouldRetry ?
      /* istanbul ignore next */
      (cov_h5auyu00d().b[9][0]++, finalConfig.shouldRetry(lastError, attempt)) :
      /* istanbul ignore next */
      (cov_h5auyu00d().b[9][1]++, (0, structured_errors_1.isRetryableError)(lastError)));
      /* istanbul ignore next */
      cov_h5auyu00d().s[42]++;
      if (!shouldRetryError) {
        /* istanbul ignore next */
        cov_h5auyu00d().b[10][0]++;
        cov_h5auyu00d().s[43]++;
        console.log(`🚫 Error not retryable: ${lastError.code}`);
        /* istanbul ignore next */
        cov_h5auyu00d().s[44]++;
        break;
      } else
      /* istanbul ignore next */
      {
        cov_h5auyu00d().b[10][1]++;
      }
      // Calculate retry delay
      const baseDelay =
      /* istanbul ignore next */
      (cov_h5auyu00d().s[45]++, lastError.retryAfter ?
      /* istanbul ignore next */
      (cov_h5auyu00d().b[11][0]++, lastError.retryAfter * 1000) :
      /* istanbul ignore next */
      (cov_h5auyu00d().b[11][1]++, finalConfig.baseDelay));
      let delay =
      /* istanbul ignore next */
      (cov_h5auyu00d().s[46]++, (0, structured_errors_1.getRetryDelay)(lastError, attempt, baseDelay));
      // Apply max delay cap
      /* istanbul ignore next */
      cov_h5auyu00d().s[47]++;
      if (
      /* istanbul ignore next */
      (cov_h5auyu00d().b[13][0]++, finalConfig.maxDelay) &&
      /* istanbul ignore next */
      (cov_h5auyu00d().b[13][1]++, delay > finalConfig.maxDelay)) {
        /* istanbul ignore next */
        cov_h5auyu00d().b[12][0]++;
        cov_h5auyu00d().s[48]++;
        delay = finalConfig.maxDelay;
      } else
      /* istanbul ignore next */
      {
        cov_h5auyu00d().b[12][1]++;
      }
      // Track metrics
      cov_h5auyu00d().s[49]++;
      retryMetrics.totalRetries++;
      /* istanbul ignore next */
      cov_h5auyu00d().s[50]++;
      totalDelayTime += delay;
      /* istanbul ignore next */
      cov_h5auyu00d().s[51]++;
      retryMetrics.averageRetryDelay = (retryMetrics.averageRetryDelay * (retryMetrics.totalRetries - 1) + delay) / retryMetrics.totalRetries;
      // Call retry callback
      /* istanbul ignore next */
      cov_h5auyu00d().s[52]++;
      /* istanbul ignore next */
      (cov_h5auyu00d().b[15][0]++, (_c = finalConfig.onRetry) === null) ||
      /* istanbul ignore next */
      (cov_h5auyu00d().b[15][1]++, _c === void 0) ?
      /* istanbul ignore next */
      (cov_h5auyu00d().b[14][0]++, void 0) :
      /* istanbul ignore next */
      (cov_h5auyu00d().b[14][1]++, _c.call(finalConfig, lastError, attempt, delay));
      /* istanbul ignore next */
      cov_h5auyu00d().s[53]++;
      console.log(`🔄 Retrying in ${delay}ms (attempt ${attempt}/${finalConfig.maxRetries + 1}): ${lastError.message}`);
      // Wait for retry delay
      /* istanbul ignore next */
      cov_h5auyu00d().s[54]++;
      await new Promise(resolve => {
        /* istanbul ignore next */
        cov_h5auyu00d().f[3]++;
        cov_h5auyu00d().s[55]++;
        return setTimeout(resolve, delay);
      });
      // Check for abort signal again after delay
      /* istanbul ignore next */
      cov_h5auyu00d().s[56]++;
      if (
      /* istanbul ignore next */
      (cov_h5auyu00d().b[18][0]++, (_d = finalConfig.abortSignal) === null) ||
      /* istanbul ignore next */
      (cov_h5auyu00d().b[18][1]++, _d === void 0) ?
      /* istanbul ignore next */
      (cov_h5auyu00d().b[17][0]++, void 0) :
      /* istanbul ignore next */
      (cov_h5auyu00d().b[17][1]++, _d.aborted)) {
        /* istanbul ignore next */
        cov_h5auyu00d().b[16][0]++;
        cov_h5auyu00d().s[57]++;
        throw new Error('Operation aborted during retry delay');
      } else
      /* istanbul ignore next */
      {
        cov_h5auyu00d().b[16][1]++;
      }
    }
  }
  // All attempts failed
  /* istanbul ignore next */
  cov_h5auyu00d().s[58]++;
  return {
    error:
    /* istanbul ignore next */
    (cov_h5auyu00d().b[19][0]++, lastError) ||
    /* istanbul ignore next */
    (cov_h5auyu00d().b[19][1]++, (0, structured_errors_1.toStructuredError)(new Error('Operation failed'), structured_errors_1.ErrorCode.UNHANDLED_ERROR)),
    totalAttempts: finalConfig.maxRetries + 1,
    totalDuration: Date.now() - startTime,
    success: false
  };
}
// ===== SPECIALIZED RETRY FUNCTIONS =====
/**
 * Retry specifically for HTTP fetch operations
 */
async function retryFetch(input, init, config =
/* istanbul ignore next */
(cov_h5auyu00d().b[20][0]++, {})) {
  /* istanbul ignore next */
  cov_h5auyu00d().f[4]++;
  const fetchConfig =
  /* istanbul ignore next */
  (cov_h5auyu00d().s[59]++, Object.assign(Object.assign(Object.assign({}, exports.DEFAULT_RETRY_CONFIG), config), {
    shouldRetry: (error, attempt) => {
      /* istanbul ignore next */
      cov_h5auyu00d().f[5]++;
      cov_h5auyu00d().s[60]++;
      // Custom retry logic for HTTP errors
      if (error.code === structured_errors_1.ErrorCode.RATE_LIMIT_EXCEEDED) {
        /* istanbul ignore next */
        cov_h5auyu00d().b[21][0]++;
        cov_h5auyu00d().s[61]++;
        return true;
      } else
      /* istanbul ignore next */
      {
        cov_h5auyu00d().b[21][1]++;
      }
      cov_h5auyu00d().s[62]++;
      if (error.code === structured_errors_1.ErrorCode.SERVICE_TIMEOUT) {
        /* istanbul ignore next */
        cov_h5auyu00d().b[22][0]++;
        cov_h5auyu00d().s[63]++;
        return true;
      } else
      /* istanbul ignore next */
      {
        cov_h5auyu00d().b[22][1]++;
      }
      cov_h5auyu00d().s[64]++;
      if (error.code === structured_errors_1.ErrorCode.SERVICE_UNAVAILABLE) {
        /* istanbul ignore next */
        cov_h5auyu00d().b[23][0]++;
        cov_h5auyu00d().s[65]++;
        return true;
      } else
      /* istanbul ignore next */
      {
        cov_h5auyu00d().b[23][1]++;
      }
      cov_h5auyu00d().s[66]++;
      if (error.code === structured_errors_1.ErrorCode.AZURE_OPENAI_ERROR) {
        /* istanbul ignore next */
        cov_h5auyu00d().b[24][0]++;
        cov_h5auyu00d().s[67]++;
        return attempt <= 2;
      } else
      /* istanbul ignore next */
      {
        cov_h5auyu00d().b[24][1]++;
      }
      cov_h5auyu00d().s[68]++;
      if (error.code === structured_errors_1.ErrorCode.AZURE_SPEECH_ERROR) {
        /* istanbul ignore next */
        cov_h5auyu00d().b[25][0]++;
        cov_h5auyu00d().s[69]++;
        return attempt <= 2;
      } else
      /* istanbul ignore next */
      {
        cov_h5auyu00d().b[25][1]++;
      }
      cov_h5auyu00d().s[70]++;
      return (0, structured_errors_1.isRetryableError)(error);
    }
  }));
  /* istanbul ignore next */
  cov_h5auyu00d().s[71]++;
  return withRetry(async () => {
    /* istanbul ignore next */
    cov_h5auyu00d().f[6]++;
    const response =
    /* istanbul ignore next */
    (cov_h5auyu00d().s[72]++, await fetch(input, init));
    /* istanbul ignore next */
    cov_h5auyu00d().s[73]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_h5auyu00d().b[26][0]++;
      // Convert HTTP error to structured error
      const errorCode =
      /* istanbul ignore next */
      (cov_h5auyu00d().s[74]++, getErrorCodeFromHTTPStatus(response.status));
      /* istanbul ignore next */
      cov_h5auyu00d().s[75]++;
      throw (0, structured_errors_1.toStructuredError)(new Error(`HTTP ${response.status}: ${response.statusText}`), errorCode);
    } else
    /* istanbul ignore next */
    {
      cov_h5auyu00d().b[26][1]++;
    }
    cov_h5auyu00d().s[76]++;
    return response;
  }, fetchConfig);
}
/**
 * Retry specifically for Azure service calls
 */
async function retryAzureOperation(operation, serviceType =
/* istanbul ignore next */
(cov_h5auyu00d().b[27][0]++, 'openai'), config =
/* istanbul ignore next */
(cov_h5auyu00d().b[28][0]++, {})) {
  /* istanbul ignore next */
  cov_h5auyu00d().f[7]++;
  const azureConfig =
  /* istanbul ignore next */
  (cov_h5auyu00d().s[77]++, Object.assign(Object.assign({
    maxRetries: 3,
    baseDelay: 2000,
    strategy: structured_errors_1.RetryStrategy.EXPONENTIAL,
    maxDelay: 30000
  }, config), {
    shouldRetry: (error, attempt) => {
      /* istanbul ignore next */
      cov_h5auyu00d().f[8]++;
      var _a, _b;
      // Azure-specific retry logic
      const azureErrors =
      /* istanbul ignore next */
      (cov_h5auyu00d().s[78]++, [structured_errors_1.ErrorCode.AZURE_OPENAI_ERROR, structured_errors_1.ErrorCode.AZURE_SPEECH_ERROR, structured_errors_1.ErrorCode.SERVICE_TIMEOUT, structured_errors_1.ErrorCode.SERVICE_OVERLOADED]);
      /* istanbul ignore next */
      cov_h5auyu00d().s[79]++;
      if (azureErrors.includes(error.code)) {
        /* istanbul ignore next */
        cov_h5auyu00d().b[29][0]++;
        cov_h5auyu00d().s[80]++;
        return true;
      } else
      /* istanbul ignore next */
      {
        cov_h5auyu00d().b[29][1]++;
      }
      cov_h5auyu00d().s[81]++;
      if (
      /* istanbul ignore next */
      (cov_h5auyu00d().b[31][0]++, error.code === structured_errors_1.ErrorCode.RATE_LIMIT_EXCEEDED) &&
      /* istanbul ignore next */
      (cov_h5auyu00d().b[31][1]++, attempt <= 2)) {
        /* istanbul ignore next */
        cov_h5auyu00d().b[30][0]++;
        cov_h5auyu00d().s[82]++;
        return true;
      } else
      /* istanbul ignore next */
      {
        cov_h5auyu00d().b[30][1]++;
      }
      cov_h5auyu00d().s[83]++;
      return /* istanbul ignore next */(cov_h5auyu00d().b[33][0]++, (_b =
      /* istanbul ignore next */
      (cov_h5auyu00d().b[35][0]++, (_a = config.shouldRetry) === null) ||
      /* istanbul ignore next */
      (cov_h5auyu00d().b[35][1]++, _a === void 0) ?
      /* istanbul ignore next */
      (cov_h5auyu00d().b[34][0]++, void 0) :
      /* istanbul ignore next */
      (cov_h5auyu00d().b[34][1]++, _a.call(config, error, attempt))) !== null) &&
      /* istanbul ignore next */
      (cov_h5auyu00d().b[33][1]++, _b !== void 0) ?
      /* istanbul ignore next */
      (cov_h5auyu00d().b[32][0]++, _b) :
      /* istanbul ignore next */
      (cov_h5auyu00d().b[32][1]++, (0, structured_errors_1.isRetryableError)(error));
    },
    onRetry: (error, attempt, delay) => {
      /* istanbul ignore next */
      cov_h5auyu00d().f[9]++;
      var _a;
      /* istanbul ignore next */
      cov_h5auyu00d().s[84]++;
      console.log(`🔄 Retrying Azure ${serviceType} operation (${error.code}): attempt ${attempt}, delay ${delay}ms`);
      /* istanbul ignore next */
      cov_h5auyu00d().s[85]++;
      /* istanbul ignore next */
      (cov_h5auyu00d().b[37][0]++, (_a = config.onRetry) === null) ||
      /* istanbul ignore next */
      (cov_h5auyu00d().b[37][1]++, _a === void 0) ?
      /* istanbul ignore next */
      (cov_h5auyu00d().b[36][0]++, void 0) :
      /* istanbul ignore next */
      (cov_h5auyu00d().b[36][1]++, _a.call(config, error, attempt, delay));
    }
  }));
  /* istanbul ignore next */
  cov_h5auyu00d().s[86]++;
  return withRetry(operation, azureConfig);
}
/**
 * Retry specifically for Firebase operations
 */
async function retryFirebaseOperation(operation, config =
/* istanbul ignore next */
(cov_h5auyu00d().b[38][0]++, {})) {
  /* istanbul ignore next */
  cov_h5auyu00d().f[10]++;
  const firebaseConfig =
  /* istanbul ignore next */
  (cov_h5auyu00d().s[87]++, Object.assign(Object.assign({
    maxRetries: 2,
    baseDelay: 3000,
    strategy: structured_errors_1.RetryStrategy.LINEAR,
    maxDelay: 15000
  }, config), {
    shouldRetry: (error, attempt) => {
      /* istanbul ignore next */
      cov_h5auyu00d().f[11]++;
      var _a, _b;
      // Firebase-specific retry logic
      /* istanbul ignore next */
      cov_h5auyu00d().s[88]++;
      if (error.code === structured_errors_1.ErrorCode.FIREBASE_ERROR) {
        /* istanbul ignore next */
        cov_h5auyu00d().b[39][0]++;
        cov_h5auyu00d().s[89]++;
        return true;
      } else
      /* istanbul ignore next */
      {
        cov_h5auyu00d().b[39][1]++;
      }
      cov_h5auyu00d().s[90]++;
      if (
      /* istanbul ignore next */
      (cov_h5auyu00d().b[41][0]++, error.code === structured_errors_1.ErrorCode.STORAGE_ERROR) &&
      /* istanbul ignore next */
      (cov_h5auyu00d().b[41][1]++, attempt <= 1)) {
        /* istanbul ignore next */
        cov_h5auyu00d().b[40][0]++;
        cov_h5auyu00d().s[91]++;
        return true;
      } else
      /* istanbul ignore next */
      {
        cov_h5auyu00d().b[40][1]++;
      }
      cov_h5auyu00d().s[92]++;
      if (error.code === structured_errors_1.ErrorCode.SERVICE_TIMEOUT) {
        /* istanbul ignore next */
        cov_h5auyu00d().b[42][0]++;
        cov_h5auyu00d().s[93]++;
        return true;
      } else
      /* istanbul ignore next */
      {
        cov_h5auyu00d().b[42][1]++;
      }
      cov_h5auyu00d().s[94]++;
      return /* istanbul ignore next */(cov_h5auyu00d().b[44][0]++, (_b =
      /* istanbul ignore next */
      (cov_h5auyu00d().b[46][0]++, (_a = config.shouldRetry) === null) ||
      /* istanbul ignore next */
      (cov_h5auyu00d().b[46][1]++, _a === void 0) ?
      /* istanbul ignore next */
      (cov_h5auyu00d().b[45][0]++, void 0) :
      /* istanbul ignore next */
      (cov_h5auyu00d().b[45][1]++, _a.call(config, error, attempt))) !== null) &&
      /* istanbul ignore next */
      (cov_h5auyu00d().b[44][1]++, _b !== void 0) ?
      /* istanbul ignore next */
      (cov_h5auyu00d().b[43][0]++, _b) :
      /* istanbul ignore next */
      (cov_h5auyu00d().b[43][1]++, (0, structured_errors_1.isRetryableError)(error));
    },
    onRetry: (error, attempt, delay) => {
      /* istanbul ignore next */
      cov_h5auyu00d().f[12]++;
      var _a;
      /* istanbul ignore next */
      cov_h5auyu00d().s[95]++;
      console.log(`🔄 Retrying Firebase operation (${error.code}): attempt ${attempt}, delay ${delay}ms`);
      /* istanbul ignore next */
      cov_h5auyu00d().s[96]++;
      /* istanbul ignore next */
      (cov_h5auyu00d().b[48][0]++, (_a = config.onRetry) === null) ||
      /* istanbul ignore next */
      (cov_h5auyu00d().b[48][1]++, _a === void 0) ?
      /* istanbul ignore next */
      (cov_h5auyu00d().b[47][0]++, void 0) :
      /* istanbul ignore next */
      (cov_h5auyu00d().b[47][1]++, _a.call(config, error, attempt, delay));
    }
  }));
  /* istanbul ignore next */
  cov_h5auyu00d().s[97]++;
  return withRetry(operation, firebaseConfig);
}
// ===== UTILITY FUNCTIONS =====
/**
 * Create an AbortController that automatically aborts after timeout
 */
function createTimeoutAbortSignal(timeoutMs) {
  /* istanbul ignore next */
  cov_h5auyu00d().f[13]++;
  const controller =
  /* istanbul ignore next */
  (cov_h5auyu00d().s[98]++, new AbortController());
  /* istanbul ignore next */
  cov_h5auyu00d().s[99]++;
  setTimeout(() => {
    /* istanbul ignore next */
    cov_h5auyu00d().f[14]++;
    cov_h5auyu00d().s[100]++;
    return controller.abort();
  }, timeoutMs);
  /* istanbul ignore next */
  cov_h5auyu00d().s[101]++;
  return controller.signal;
}
/**
 * Combine multiple AbortSignals into one
 */
function combineAbortSignals(...signals) {
  /* istanbul ignore next */
  cov_h5auyu00d().f[15]++;
  const controller =
  /* istanbul ignore next */
  (cov_h5auyu00d().s[102]++, new AbortController());
  /* istanbul ignore next */
  cov_h5auyu00d().s[103]++;
  const abortHandler = () => {
    /* istanbul ignore next */
    cov_h5auyu00d().f[16]++;
    cov_h5auyu00d().s[104]++;
    return controller.abort();
  };
  /* istanbul ignore next */
  cov_h5auyu00d().s[105]++;
  for (const signal of signals) {
    /* istanbul ignore next */
    cov_h5auyu00d().s[106]++;
    if (signal.aborted) {
      /* istanbul ignore next */
      cov_h5auyu00d().b[49][0]++;
      cov_h5auyu00d().s[107]++;
      controller.abort();
      /* istanbul ignore next */
      cov_h5auyu00d().s[108]++;
      break;
    } else
    /* istanbul ignore next */
    {
      cov_h5auyu00d().b[49][1]++;
    }
    cov_h5auyu00d().s[109]++;
    signal.addEventListener('abort', abortHandler);
  }
  /* istanbul ignore next */
  cov_h5auyu00d().s[110]++;
  return controller.signal;
}
/**
 * Sleep with optional abort signal support
 */
function sleep(ms, abortSignal) {
  /* istanbul ignore next */
  cov_h5auyu00d().f[17]++;
  cov_h5auyu00d().s[111]++;
  return new Promise((resolve, reject) => {
    /* istanbul ignore next */
    cov_h5auyu00d().f[18]++;
    const timeout =
    /* istanbul ignore next */
    (cov_h5auyu00d().s[112]++, setTimeout(resolve, ms));
    /* istanbul ignore next */
    cov_h5auyu00d().s[113]++;
    if (abortSignal) {
      /* istanbul ignore next */
      cov_h5auyu00d().b[50][0]++;
      cov_h5auyu00d().s[114]++;
      const abortHandler = () => {
        /* istanbul ignore next */
        cov_h5auyu00d().f[19]++;
        cov_h5auyu00d().s[115]++;
        clearTimeout(timeout);
        /* istanbul ignore next */
        cov_h5auyu00d().s[116]++;
        reject(new Error('Sleep aborted'));
      };
      /* istanbul ignore next */
      cov_h5auyu00d().s[117]++;
      if (abortSignal.aborted) {
        /* istanbul ignore next */
        cov_h5auyu00d().b[51][0]++;
        cov_h5auyu00d().s[118]++;
        clearTimeout(timeout);
        /* istanbul ignore next */
        cov_h5auyu00d().s[119]++;
        reject(new Error('Sleep aborted'));
        /* istanbul ignore next */
        cov_h5auyu00d().s[120]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_h5auyu00d().b[51][1]++;
      }
      cov_h5auyu00d().s[121]++;
      abortSignal.addEventListener('abort', abortHandler);
    } else
    /* istanbul ignore next */
    {
      cov_h5auyu00d().b[50][1]++;
    }
  });
}
// Helper function for HTTP status to error code conversion
function getErrorCodeFromHTTPStatus(status) {
  /* istanbul ignore next */
  cov_h5auyu00d().f[20]++;
  cov_h5auyu00d().s[122]++;
  switch (status) {
    case 400:
      /* istanbul ignore next */
      cov_h5auyu00d().b[52][0]++;
      cov_h5auyu00d().s[123]++;
      return structured_errors_1.ErrorCode.INVALID_REQUEST;
    case 401:
      /* istanbul ignore next */
      cov_h5auyu00d().b[52][1]++;
      cov_h5auyu00d().s[124]++;
      return structured_errors_1.ErrorCode.AUTH_TOKEN_INVALID;
    case 403:
      /* istanbul ignore next */
      cov_h5auyu00d().b[52][2]++;
      cov_h5auyu00d().s[125]++;
      return structured_errors_1.ErrorCode.ACCESS_DENIED;
    case 404:
      /* istanbul ignore next */
      cov_h5auyu00d().b[52][3]++;
      cov_h5auyu00d().s[126]++;
      return structured_errors_1.ErrorCode.NOT_FOUND;
    case 409:
      /* istanbul ignore next */
      cov_h5auyu00d().b[52][4]++;
      cov_h5auyu00d().s[127]++;
      return structured_errors_1.ErrorCode.RESOURCE_CONFLICT;
    case 413:
      /* istanbul ignore next */
      cov_h5auyu00d().b[52][5]++;
      cov_h5auyu00d().s[128]++;
      return structured_errors_1.ErrorCode.FILE_TOO_LARGE;
    case 429:
      /* istanbul ignore next */
      cov_h5auyu00d().b[52][6]++;
      cov_h5auyu00d().s[129]++;
      return structured_errors_1.ErrorCode.RATE_LIMIT_EXCEEDED;
    case 500:
      /* istanbul ignore next */
      cov_h5auyu00d().b[52][7]++;
      cov_h5auyu00d().s[130]++;
      return structured_errors_1.ErrorCode.INTERNAL_SERVER_ERROR;
    case 502:
      /* istanbul ignore next */
      cov_h5auyu00d().b[52][8]++;
      cov_h5auyu00d().s[131]++;
      return structured_errors_1.ErrorCode.SERVICE_UNAVAILABLE;
    case 503:
      /* istanbul ignore next */
      cov_h5auyu00d().b[52][9]++;
      cov_h5auyu00d().s[132]++;
      return structured_errors_1.ErrorCode.SERVICE_OVERLOADED;
    case 504:
      /* istanbul ignore next */
      cov_h5auyu00d().b[52][10]++;
      cov_h5auyu00d().s[133]++;
      return structured_errors_1.ErrorCode.SERVICE_TIMEOUT;
    default:
      /* istanbul ignore next */
      cov_h5auyu00d().b[52][11]++;
      cov_h5auyu00d().s[134]++;
      return structured_errors_1.ErrorCode.UNHANDLED_ERROR;
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,