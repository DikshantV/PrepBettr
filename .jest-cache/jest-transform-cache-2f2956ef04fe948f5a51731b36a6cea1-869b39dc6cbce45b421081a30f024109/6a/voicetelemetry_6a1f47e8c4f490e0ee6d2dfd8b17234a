8394d5b080701f844690b60d53f10eac
"use strict";

/**
 * Azure AI Foundry Voice Telemetry
 *
 * Provides structured logging, error handling, and metrics collection
 * specifically for the voice system with Application Insights integration.
 */
/* istanbul ignore next */
function cov_1hnydtrqf7() {
  var path = "/Users/dikshantvashistha/PrepBettr/lib/azure-ai-foundry/voice/voice-telemetry.ts";
  var hash = "f391f19b7e0e39043455abcf81b24dfbe79b919d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dikshantvashistha/PrepBettr/lib/azure-ai-foundry/voice/voice-telemetry.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 62
        }
      },
      "1": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 174
        }
      },
      "2": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 10,
          column: 46
        }
      },
      "3": {
        start: {
          line: 11,
          column: 17
        },
        end: {
          line: 11,
          column: 46
        }
      },
      "4": {
        start: {
          line: 12,
          column: 22
        },
        end: {
          line: 12,
          column: 56
        }
      },
      "5": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 23
        }
      },
      "6": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 35
        }
      },
      "7": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 37
        }
      },
      "8": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 35
        }
      },
      "9": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 43
        }
      },
      "10": {
        start: {
          line: 25,
          column: 0
        },
        end: {
          line: 25,
          column: 52
        }
      },
      "11": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 23
        }
      },
      "12": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 35
        }
      },
      "13": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 41
        }
      },
      "14": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 37
        }
      },
      "15": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 38
        }
      },
      "16": {
        start: {
          line: 35,
          column: 0
        },
        end: {
          line: 35,
          column: 42
        }
      },
      "17": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 23
        }
      },
      "18": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 35
        }
      },
      "19": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 41
        }
      },
      "20": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 41,
          column: 37
        }
      },
      "21": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 40
        }
      },
      "22": {
        start: {
          line: 45,
          column: 0
        },
        end: {
          line: 45,
          column: 46
        }
      },
      "23": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 51,
          column: 25
        }
      },
      "24": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 52,
          column: 34
        }
      },
      "25": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 53,
          column: 31
        }
      },
      "26": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 55,
          column: 36
        }
      },
      "27": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 56,
          column: 31
        }
      },
      "28": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 33
        }
      },
      "29": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 63,
          column: 43
        }
      },
      "30": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 64,
          column: 51
        }
      },
      "31": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 70,
          column: 11
        }
      },
      "32": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 72,
          column: 36
        }
      },
      "33": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 73,
          column: 51
        }
      },
      "34": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 74,
          column: 65
        }
      },
      "35": {
        start: {
          line: 80,
          column: 20
        },
        end: {
          line: 80,
          column: 30
        }
      },
      "36": {
        start: {
          line: 81,
          column: 24
        },
        end: {
          line: 81,
          column: 48
        }
      },
      "37": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 87,
          column: 11
        }
      },
      "38": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 89,
          column: 55
        }
      },
      "39": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 96,
          column: 9
        }
      },
      "40": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 92,
          column: 87
        }
      },
      "41": {
        start: {
          line: 93,
          column: 12
        },
        end: {
          line: 95,
          column: 13
        }
      },
      "42": {
        start: {
          line: 94,
          column: 16
        },
        end: {
          line: 94,
          column: 169
        }
      },
      "43": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 97,
          column: 33
        }
      },
      "44": {
        start: {
          line: 103,
          column: 20
        },
        end: {
          line: 103,
          column: 30
        }
      },
      "45": {
        start: {
          line: 104,
          column: 29
        },
        end: {
          line: 104,
          column: 53
        }
      },
      "46": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 111,
          column: 11
        }
      },
      "47": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 113,
          column: 50
        }
      },
      "48": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 118,
          column: 9
        }
      },
      "49": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 116,
          column: 93
        }
      },
      "50": {
        start: {
          line: 117,
          column: 12
        },
        end: {
          line: 117,
          column: 106
        }
      },
      "51": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 126,
          column: 9
        }
      },
      "52": {
        start: {
          line: 121,
          column: 12
        },
        end: {
          line: 125,
          column: 15
        }
      },
      "53": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 133,
          column: 9
        }
      },
      "54": {
        start: {
          line: 128,
          column: 12
        },
        end: {
          line: 132,
          column: 15
        }
      },
      "55": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 134,
          column: 33
        }
      },
      "56": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 148,
          column: 11
        }
      },
      "57": {
        start: {
          line: 150,
          column: 8
        },
        end: {
          line: 157,
          column: 9
        }
      },
      "58": {
        start: {
          line: 151,
          column: 12
        },
        end: {
          line: 151,
          column: 91
        }
      },
      "59": {
        start: {
          line: 152,
          column: 12
        },
        end: {
          line: 156,
          column: 13
        }
      },
      "60": {
        start: {
          line: 153,
          column: 40
        },
        end: {
          line: 153,
          column: 83
        }
      },
      "61": {
        start: {
          line: 154,
          column: 37
        },
        end: {
          line: 154,
          column: 74
        }
      },
      "62": {
        start: {
          line: 155,
          column: 16
        },
        end: {
          line: 155,
          column: 124
        }
      },
      "63": {
        start: {
          line: 159,
          column: 8
        },
        end: {
          line: 166,
          column: 9
        }
      },
      "64": {
        start: {
          line: 160,
          column: 12
        },
        end: {
          line: 165,
          column: 15
        }
      },
      "65": {
        start: {
          line: 172,
          column: 20
        },
        end: {
          line: 172,
          column: 30
        }
      },
      "66": {
        start: {
          line: 173,
          column: 32
        },
        end: {
          line: 173,
          column: 87
        }
      },
      "67": {
        start: {
          line: 174,
          column: 8
        },
        end: {
          line: 179,
          column: 11
        }
      },
      "68": {
        start: {
          line: 181,
          column: 8
        },
        end: {
          line: 184,
          column: 9
        }
      },
      "69": {
        start: {
          line: 182,
          column: 12
        },
        end: {
          line: 182,
          column: 66
        }
      },
      "70": {
        start: {
          line: 183,
          column: 12
        },
        end: {
          line: 183,
          column: 51
        }
      },
      "71": {
        start: {
          line: 191,
          column: 29
        },
        end: {
          line: 192,
          column: 82
        }
      },
      "72": {
        start: {
          line: 194,
          column: 8
        },
        end: {
          line: 200,
          column: 11
        }
      },
      "73": {
        start: {
          line: 202,
          column: 8
        },
        end: {
          line: 202,
          column: 93
        }
      },
      "74": {
        start: {
          line: 204,
          column: 8
        },
        end: {
          line: 204,
          column: 83
        }
      },
      "75": {
        start: {
          line: 206,
          column: 8
        },
        end: {
          line: 218,
          column: 9
        }
      },
      "76": {
        start: {
          line: 207,
          column: 30
        },
        end: {
          line: 207,
          column: 59
        }
      },
      "77": {
        start: {
          line: 208,
          column: 12
        },
        end: {
          line: 216,
          column: 13
        }
      },
      "78": {
        start: {
          line: 209,
          column: 16
        },
        end: {
          line: 209,
          column: 93
        }
      },
      "79": {
        start: {
          line: 211,
          column: 17
        },
        end: {
          line: 216,
          column: 13
        }
      },
      "80": {
        start: {
          line: 212,
          column: 16
        },
        end: {
          line: 212,
          column: 98
        }
      },
      "81": {
        start: {
          line: 214,
          column: 17
        },
        end: {
          line: 216,
          column: 13
        }
      },
      "82": {
        start: {
          line: 215,
          column: 16
        },
        end: {
          line: 215,
          column: 90
        }
      },
      "83": {
        start: {
          line: 217,
          column: 12
        },
        end: {
          line: 217,
          column: 75
        }
      },
      "84": {
        start: {
          line: 224,
          column: 8
        },
        end: {
          line: 231,
          column: 11
        }
      },
      "85": {
        start: {
          line: 233,
          column: 27
        },
        end: {
          line: 238,
          column: 9
        }
      },
      "86": {
        start: {
          line: 239,
          column: 8
        },
        end: {
          line: 246,
          column: 9
        }
      },
      "87": {
        start: {
          line: 240,
          column: 12
        },
        end: {
          line: 245,
          column: 15
        }
      },
      "88": {
        start: {
          line: 252,
          column: 27
        },
        end: {
          line: 254,
          column: 9
        }
      },
      "89": {
        start: {
          line: 255,
          column: 29
        },
        end: {
          line: 264,
          column: 9
        }
      },
      "90": {
        start: {
          line: 265,
          column: 8
        },
        end: {
          line: 265,
          column: 73
        }
      },
      "91": {
        start: {
          line: 266,
          column: 8
        },
        end: {
          line: 266,
          column: 114
        }
      },
      "92": {
        start: {
          line: 272,
          column: 22
        },
        end: {
          line: 277,
          column: 9
        }
      },
      "93": {
        start: {
          line: 279,
          column: 8
        },
        end: {
          line: 279,
          column: 32
        }
      },
      "94": {
        start: {
          line: 281,
          column: 8
        },
        end: {
          line: 283,
          column: 9
        }
      },
      "95": {
        start: {
          line: 282,
          column: 12
        },
        end: {
          line: 282,
          column: 50
        }
      },
      "96": {
        start: {
          line: 285,
          column: 8
        },
        end: {
          line: 287,
          column: 9
        }
      },
      "97": {
        start: {
          line: 286,
          column: 12
        },
        end: {
          line: 286,
          column: 81
        }
      },
      "98": {
        start: {
          line: 297,
          column: 8
        },
        end: {
          line: 297,
          column: 87
        }
      },
      "99": {
        start: {
          line: 303,
          column: 8
        },
        end: {
          line: 307,
          column: 10
        }
      },
      "100": {
        start: {
          line: 313,
          column: 8
        },
        end: {
          line: 313,
          column: 32
        }
      },
      "101": {
        start: {
          line: 319,
          column: 8
        },
        end: {
          line: 319,
          column: 25
        }
      },
      "102": {
        start: {
          line: 320,
          column: 8
        },
        end: {
          line: 320,
          column: 36
        }
      },
      "103": {
        start: {
          line: 321,
          column: 8
        },
        end: {
          line: 321,
          column: 51
        }
      },
      "104": {
        start: {
          line: 322,
          column: 8
        },
        end: {
          line: 322,
          column: 65
        }
      },
      "105": {
        start: {
          line: 325,
          column: 0
        },
        end: {
          line: 325,
          column: 54
        }
      },
      "106": {
        start: {
          line: 327,
          column: 29
        },
        end: {
          line: 327,
          column: 33
        }
      },
      "107": {
        start: {
          line: 332,
          column: 4
        },
        end: {
          line: 334,
          column: 5
        }
      },
      "108": {
        start: {
          line: 333,
          column: 8
        },
        end: {
          line: 333,
          column: 61
        }
      },
      "109": {
        start: {
          line: 335,
          column: 4
        },
        end: {
          line: 335,
          column: 34
        }
      },
      "110": {
        start: {
          line: 340,
          column: 0
        },
        end: {
          line: 367,
          column: 2
        }
      },
      "111": {
        start: {
          line: 343,
          column: 8
        },
        end: {
          line: 343,
          column: 74
        }
      },
      "112": {
        start: {
          line: 347,
          column: 24
        },
        end: {
          line: 347,
          column: 90
        }
      },
      "113": {
        start: {
          line: 348,
          column: 8
        },
        end: {
          line: 348,
          column: 82
        }
      },
      "114": {
        start: {
          line: 352,
          column: 8
        },
        end: {
          line: 352,
          column: 76
        }
      },
      "115": {
        start: {
          line: 356,
          column: 8
        },
        end: {
          line: 356,
          column: 75
        }
      },
      "116": {
        start: {
          line: 360,
          column: 8
        },
        end: {
          line: 360,
          column: 60
        }
      },
      "117": {
        start: {
          line: 363,
          column: 8
        },
        end: {
          line: 363,
          column: 74
        }
      },
      "118": {
        start: {
          line: 366,
          column: 23
        },
        end: {
          line: 366,
          column: 42
        }
      },
      "119": {
        start: {
          line: 371,
          column: 0
        },
        end: {
          line: 371,
          column: 45
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 17,
            column: 5
          }
        },
        loc: {
          start: {
            line: 17,
            column: 59
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 17
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        },
        loc: {
          start: {
            line: 27,
            column: 62
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 27
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        },
        loc: {
          start: {
            line: 37,
            column: 62
          },
          end: {
            line: 43,
            column: 5
          }
        },
        line: 37
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 50,
            column: 4
          },
          end: {
            line: 50,
            column: 5
          }
        },
        loc: {
          start: {
            line: 50,
            column: 18
          },
          end: {
            line: 58,
            column: 5
          }
        },
        line: 50
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 62,
            column: 4
          },
          end: {
            line: 62,
            column: 5
          }
        },
        loc: {
          start: {
            line: 62,
            column: 36
          },
          end: {
            line: 75,
            column: 5
          }
        },
        line: 62
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 79,
            column: 4
          },
          end: {
            line: 79,
            column: 5
          }
        },
        loc: {
          start: {
            line: 79,
            column: 50
          },
          end: {
            line: 98,
            column: 5
          }
        },
        line: 79
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 102,
            column: 4
          },
          end: {
            line: 102,
            column: 5
          }
        },
        loc: {
          start: {
            line: 102,
            column: 45
          },
          end: {
            line: 135,
            column: 5
          }
        },
        line: 102
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 139,
            column: 4
          },
          end: {
            line: 139,
            column: 5
          }
        },
        loc: {
          start: {
            line: 139,
            column: 59
          },
          end: {
            line: 167,
            column: 5
          }
        },
        line: 139
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 171,
            column: 4
          },
          end: {
            line: 171,
            column: 5
          }
        },
        loc: {
          start: {
            line: 171,
            column: 47
          },
          end: {
            line: 185,
            column: 5
          }
        },
        line: 171
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 189,
            column: 4
          },
          end: {
            line: 189,
            column: 5
          }
        },
        loc: {
          start: {
            line: 189,
            column: 66
          },
          end: {
            line: 219,
            column: 5
          }
        },
        line: 189
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 223,
            column: 4
          },
          end: {
            line: 223,
            column: 5
          }
        },
        loc: {
          start: {
            line: 223,
            column: 68
          },
          end: {
            line: 247,
            column: 5
          }
        },
        line: 223
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 251,
            column: 4
          },
          end: {
            line: 251,
            column: 5
          }
        },
        loc: {
          start: {
            line: 251,
            column: 38
          },
          end: {
            line: 267,
            column: 5
          }
        },
        line: 251
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 271,
            column: 4
          },
          end: {
            line: 271,
            column: 5
          }
        },
        loc: {
          start: {
            line: 271,
            column: 45
          },
          end: {
            line: 298,
            column: 5
          }
        },
        line: 271
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 302,
            column: 4
          },
          end: {
            line: 302,
            column: 5
          }
        },
        loc: {
          start: {
            line: 302,
            column: 17
          },
          end: {
            line: 308,
            column: 5
          }
        },
        line: 302
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 312,
            column: 4
          },
          end: {
            line: 312,
            column: 5
          }
        },
        loc: {
          start: {
            line: 312,
            column: 26
          },
          end: {
            line: 314,
            column: 5
          }
        },
        line: 312
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 318,
            column: 4
          },
          end: {
            line: 318,
            column: 5
          }
        },
        loc: {
          start: {
            line: 318,
            column: 25
          },
          end: {
            line: 323,
            column: 5
          }
        },
        line: 318
      },
      "16": {
        name: "getVoiceTelemetry",
        decl: {
          start: {
            line: 331,
            column: 9
          },
          end: {
            line: 331,
            column: 26
          }
        },
        loc: {
          start: {
            line: 331,
            column: 29
          },
          end: {
            line: 336,
            column: 1
          }
        },
        line: 331
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 342,
            column: 21
          },
          end: {
            line: 342,
            column: 22
          }
        },
        loc: {
          start: {
            line: 342,
            column: 52
          },
          end: {
            line: 344,
            column: 5
          }
        },
        line: 342
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 346,
            column: 23
          },
          end: {
            line: 346,
            column: 24
          }
        },
        loc: {
          start: {
            line: 346,
            column: 53
          },
          end: {
            line: 349,
            column: 5
          }
        },
        line: 346
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 351,
            column: 16
          },
          end: {
            line: 351,
            column: 17
          }
        },
        loc: {
          start: {
            line: 351,
            column: 67
          },
          end: {
            line: 353,
            column: 5
          }
        },
        line: 351
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 355,
            column: 22
          },
          end: {
            line: 355,
            column: 23
          }
        },
        loc: {
          start: {
            line: 355,
            column: 52
          },
          end: {
            line: 357,
            column: 5
          }
        },
        line: 355
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 359,
            column: 18
          },
          end: {
            line: 359,
            column: 19
          }
        },
        loc: {
          start: {
            line: 359,
            column: 41
          },
          end: {
            line: 361,
            column: 5
          }
        },
        line: 359
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 362,
            column: 16
          },
          end: {
            line: 362,
            column: 17
          }
        },
        loc: {
          start: {
            line: 362,
            column: 31
          },
          end: {
            line: 364,
            column: 5
          }
        },
        line: 362
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 366,
            column: 17
          },
          end: {
            line: 366,
            column: 18
          }
        },
        loc: {
          start: {
            line: 366,
            column: 23
          },
          end: {
            line: 366,
            column: 42
          }
        },
        line: 366
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 84,
            column: 29
          },
          end: {
            line: 84,
            column: 108
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 84,
            column: 30
          },
          end: {
            line: 84,
            column: 102
          }
        }, {
          start: {
            line: 84,
            column: 107
          },
          end: {
            line: 84,
            column: 108
          }
        }],
        line: 84
      },
      "1": {
        loc: {
          start: {
            line: 84,
            column: 30
          },
          end: {
            line: 84,
            column: 102
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 84,
            column: 71
          },
          end: {
            line: 84,
            column: 77
          }
        }, {
          start: {
            line: 84,
            column: 80
          },
          end: {
            line: 84,
            column: 102
          }
        }],
        line: 84
      },
      "2": {
        loc: {
          start: {
            line: 84,
            column: 30
          },
          end: {
            line: 84,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 84,
            column: 30
          },
          end: {
            line: 84,
            column: 46
          }
        }, {
          start: {
            line: 84,
            column: 50
          },
          end: {
            line: 84,
            column: 68
          }
        }],
        line: 84
      },
      "3": {
        loc: {
          start: {
            line: 85,
            column: 25
          },
          end: {
            line: 85,
            column: 100
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 85,
            column: 26
          },
          end: {
            line: 85,
            column: 94
          }
        }, {
          start: {
            line: 85,
            column: 99
          },
          end: {
            line: 85,
            column: 100
          }
        }],
        line: 85
      },
      "4": {
        loc: {
          start: {
            line: 85,
            column: 26
          },
          end: {
            line: 85,
            column: 94
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 85,
            column: 67
          },
          end: {
            line: 85,
            column: 73
          }
        }, {
          start: {
            line: 85,
            column: 76
          },
          end: {
            line: 85,
            column: 94
          }
        }],
        line: 85
      },
      "5": {
        loc: {
          start: {
            line: 85,
            column: 26
          },
          end: {
            line: 85,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 85,
            column: 26
          },
          end: {
            line: 85,
            column: 42
          }
        }, {
          start: {
            line: 85,
            column: 46
          },
          end: {
            line: 85,
            column: 64
          }
        }],
        line: 85
      },
      "6": {
        loc: {
          start: {
            line: 86,
            column: 29
          },
          end: {
            line: 86,
            column: 114
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 86,
            column: 30
          },
          end: {
            line: 86,
            column: 102
          }
        }, {
          start: {
            line: 86,
            column: 107
          },
          end: {
            line: 86,
            column: 114
          }
        }],
        line: 86
      },
      "7": {
        loc: {
          start: {
            line: 86,
            column: 30
          },
          end: {
            line: 86,
            column: 102
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 86,
            column: 71
          },
          end: {
            line: 86,
            column: 77
          }
        }, {
          start: {
            line: 86,
            column: 80
          },
          end: {
            line: 86,
            column: 102
          }
        }],
        line: 86
      },
      "8": {
        loc: {
          start: {
            line: 86,
            column: 30
          },
          end: {
            line: 86,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 86,
            column: 30
          },
          end: {
            line: 86,
            column: 46
          }
        }, {
          start: {
            line: 86,
            column: 50
          },
          end: {
            line: 86,
            column: 68
          }
        }],
        line: 86
      },
      "9": {
        loc: {
          start: {
            line: 91,
            column: 8
          },
          end: {
            line: 96,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 91,
            column: 8
          },
          end: {
            line: 96,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 91
      },
      "10": {
        loc: {
          start: {
            line: 91,
            column: 12
          },
          end: {
            line: 91,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 91,
            column: 12
          },
          end: {
            line: 91,
            column: 30
          }
        }, {
          start: {
            line: 91,
            column: 34
          },
          end: {
            line: 91,
            column: 58
          }
        }],
        line: 91
      },
      "11": {
        loc: {
          start: {
            line: 92,
            column: 46
          },
          end: {
            line: 92,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 92,
            column: 46
          },
          end: {
            line: 92,
            column: 76
          }
        }, {
          start: {
            line: 92,
            column: 80
          },
          end: {
            line: 92,
            column: 81
          }
        }],
        line: 92
      },
      "12": {
        loc: {
          start: {
            line: 93,
            column: 12
          },
          end: {
            line: 95,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 93,
            column: 12
          },
          end: {
            line: 95,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 93
      },
      "13": {
        loc: {
          start: {
            line: 93,
            column: 16
          },
          end: {
            line: 93,
            column: 93
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 93,
            column: 57
          },
          end: {
            line: 93,
            column: 63
          }
        }, {
          start: {
            line: 93,
            column: 66
          },
          end: {
            line: 93,
            column: 93
          }
        }],
        line: 93
      },
      "14": {
        loc: {
          start: {
            line: 93,
            column: 16
          },
          end: {
            line: 93,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 93,
            column: 16
          },
          end: {
            line: 93,
            column: 32
          }
        }, {
          start: {
            line: 93,
            column: 36
          },
          end: {
            line: 93,
            column: 54
          }
        }],
        line: 93
      },
      "15": {
        loc: {
          start: {
            line: 107,
            column: 25
          },
          end: {
            line: 107,
            column: 100
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 107,
            column: 26
          },
          end: {
            line: 107,
            column: 94
          }
        }, {
          start: {
            line: 107,
            column: 99
          },
          end: {
            line: 107,
            column: 100
          }
        }],
        line: 107
      },
      "16": {
        loc: {
          start: {
            line: 107,
            column: 26
          },
          end: {
            line: 107,
            column: 94
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 107,
            column: 67
          },
          end: {
            line: 107,
            column: 73
          }
        }, {
          start: {
            line: 107,
            column: 76
          },
          end: {
            line: 107,
            column: 94
          }
        }],
        line: 107
      },
      "17": {
        loc: {
          start: {
            line: 107,
            column: 26
          },
          end: {
            line: 107,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 107,
            column: 26
          },
          end: {
            line: 107,
            column: 42
          }
        }, {
          start: {
            line: 107,
            column: 46
          },
          end: {
            line: 107,
            column: 64
          }
        }],
        line: 107
      },
      "18": {
        loc: {
          start: {
            line: 108,
            column: 25
          },
          end: {
            line: 108,
            column: 100
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 108,
            column: 26
          },
          end: {
            line: 108,
            column: 94
          }
        }, {
          start: {
            line: 108,
            column: 99
          },
          end: {
            line: 108,
            column: 100
          }
        }],
        line: 108
      },
      "19": {
        loc: {
          start: {
            line: 108,
            column: 26
          },
          end: {
            line: 108,
            column: 94
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 108,
            column: 67
          },
          end: {
            line: 108,
            column: 73
          }
        }, {
          start: {
            line: 108,
            column: 76
          },
          end: {
            line: 108,
            column: 94
          }
        }],
        line: 108
      },
      "20": {
        loc: {
          start: {
            line: 108,
            column: 26
          },
          end: {
            line: 108,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 108,
            column: 26
          },
          end: {
            line: 108,
            column: 42
          }
        }, {
          start: {
            line: 108,
            column: 46
          },
          end: {
            line: 108,
            column: 64
          }
        }],
        line: 108
      },
      "21": {
        loc: {
          start: {
            line: 109,
            column: 27
          },
          end: {
            line: 109,
            column: 104
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 109,
            column: 28
          },
          end: {
            line: 109,
            column: 98
          }
        }, {
          start: {
            line: 109,
            column: 103
          },
          end: {
            line: 109,
            column: 104
          }
        }],
        line: 109
      },
      "22": {
        loc: {
          start: {
            line: 109,
            column: 28
          },
          end: {
            line: 109,
            column: 98
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 109,
            column: 69
          },
          end: {
            line: 109,
            column: 75
          }
        }, {
          start: {
            line: 109,
            column: 78
          },
          end: {
            line: 109,
            column: 98
          }
        }],
        line: 109
      },
      "23": {
        loc: {
          start: {
            line: 109,
            column: 28
          },
          end: {
            line: 109,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 109,
            column: 28
          },
          end: {
            line: 109,
            column: 44
          }
        }, {
          start: {
            line: 109,
            column: 48
          },
          end: {
            line: 109,
            column: 66
          }
        }],
        line: 109
      },
      "24": {
        loc: {
          start: {
            line: 110,
            column: 28
          },
          end: {
            line: 110,
            column: 106
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 110,
            column: 29
          },
          end: {
            line: 110,
            column: 100
          }
        }, {
          start: {
            line: 110,
            column: 105
          },
          end: {
            line: 110,
            column: 106
          }
        }],
        line: 110
      },
      "25": {
        loc: {
          start: {
            line: 110,
            column: 29
          },
          end: {
            line: 110,
            column: 100
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 110,
            column: 70
          },
          end: {
            line: 110,
            column: 76
          }
        }, {
          start: {
            line: 110,
            column: 79
          },
          end: {
            line: 110,
            column: 100
          }
        }],
        line: 110
      },
      "26": {
        loc: {
          start: {
            line: 110,
            column: 29
          },
          end: {
            line: 110,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 110,
            column: 29
          },
          end: {
            line: 110,
            column: 45
          }
        }, {
          start: {
            line: 110,
            column: 49
          },
          end: {
            line: 110,
            column: 67
          }
        }],
        line: 110
      },
      "27": {
        loc: {
          start: {
            line: 115,
            column: 8
          },
          end: {
            line: 118,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 115,
            column: 8
          },
          end: {
            line: 118,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 115
      },
      "28": {
        loc: {
          start: {
            line: 116,
            column: 49
          },
          end: {
            line: 116,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 116,
            column: 49
          },
          end: {
            line: 116,
            column: 82
          }
        }, {
          start: {
            line: 116,
            column: 86
          },
          end: {
            line: 116,
            column: 87
          }
        }],
        line: 116
      },
      "29": {
        loc: {
          start: {
            line: 120,
            column: 8
          },
          end: {
            line: 126,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 120,
            column: 8
          },
          end: {
            line: 126,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 120
      },
      "30": {
        loc: {
          start: {
            line: 120,
            column: 12
          },
          end: {
            line: 120,
            column: 111
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 120,
            column: 13
          },
          end: {
            line: 120,
            column: 81
          }
        }, {
          start: {
            line: 120,
            column: 86
          },
          end: {
            line: 120,
            column: 111
          }
        }],
        line: 120
      },
      "31": {
        loc: {
          start: {
            line: 120,
            column: 13
          },
          end: {
            line: 120,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 120,
            column: 54
          },
          end: {
            line: 120,
            column: 60
          }
        }, {
          start: {
            line: 120,
            column: 63
          },
          end: {
            line: 120,
            column: 81
          }
        }],
        line: 120
      },
      "32": {
        loc: {
          start: {
            line: 120,
            column: 13
          },
          end: {
            line: 120,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 120,
            column: 13
          },
          end: {
            line: 120,
            column: 29
          }
        }, {
          start: {
            line: 120,
            column: 33
          },
          end: {
            line: 120,
            column: 51
          }
        }],
        line: 120
      },
      "33": {
        loc: {
          start: {
            line: 127,
            column: 8
          },
          end: {
            line: 133,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 127,
            column: 8
          },
          end: {
            line: 133,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 127
      },
      "34": {
        loc: {
          start: {
            line: 127,
            column: 12
          },
          end: {
            line: 127,
            column: 111
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 127,
            column: 13
          },
          end: {
            line: 127,
            column: 81
          }
        }, {
          start: {
            line: 127,
            column: 86
          },
          end: {
            line: 127,
            column: 111
          }
        }],
        line: 127
      },
      "35": {
        loc: {
          start: {
            line: 127,
            column: 13
          },
          end: {
            line: 127,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 127,
            column: 54
          },
          end: {
            line: 127,
            column: 60
          }
        }, {
          start: {
            line: 127,
            column: 63
          },
          end: {
            line: 127,
            column: 81
          }
        }],
        line: 127
      },
      "36": {
        loc: {
          start: {
            line: 127,
            column: 13
          },
          end: {
            line: 127,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 127,
            column: 13
          },
          end: {
            line: 127,
            column: 29
          }
        }, {
          start: {
            line: 127,
            column: 33
          },
          end: {
            line: 127,
            column: 51
          }
        }],
        line: 127
      },
      "37": {
        loc: {
          start: {
            line: 144,
            column: 46
          },
          end: {
            line: 144,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 144,
            column: 65
          },
          end: {
            line: 144,
            column: 70
          }
        }, {
          start: {
            line: 144,
            column: 73
          },
          end: {
            line: 144,
            column: 75
          }
        }],
        line: 144
      },
      "38": {
        loc: {
          start: {
            line: 147,
            column: 24
          },
          end: {
            line: 147,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 147,
            column: 24
          },
          end: {
            line: 147,
            column: 34
          }
        }, {
          start: {
            line: 147,
            column: 38
          },
          end: {
            line: 147,
            column: 39
          }
        }],
        line: 147
      },
      "39": {
        loc: {
          start: {
            line: 150,
            column: 8
          },
          end: {
            line: 157,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 150,
            column: 8
          },
          end: {
            line: 157,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 150
      },
      "40": {
        loc: {
          start: {
            line: 151,
            column: 48
          },
          end: {
            line: 151,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 151,
            column: 48
          },
          end: {
            line: 151,
            column: 80
          }
        }, {
          start: {
            line: 151,
            column: 84
          },
          end: {
            line: 151,
            column: 85
          }
        }],
        line: 151
      },
      "41": {
        loc: {
          start: {
            line: 152,
            column: 12
          },
          end: {
            line: 156,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 152,
            column: 12
          },
          end: {
            line: 156,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 152
      },
      "42": {
        loc: {
          start: {
            line: 153,
            column: 40
          },
          end: {
            line: 153,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 153,
            column: 40
          },
          end: {
            line: 153,
            column: 78
          }
        }, {
          start: {
            line: 153,
            column: 82
          },
          end: {
            line: 153,
            column: 83
          }
        }],
        line: 153
      },
      "43": {
        loc: {
          start: {
            line: 154,
            column: 37
          },
          end: {
            line: 154,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 154,
            column: 37
          },
          end: {
            line: 154,
            column: 69
          }
        }, {
          start: {
            line: 154,
            column: 73
          },
          end: {
            line: 154,
            column: 74
          }
        }],
        line: 154
      },
      "44": {
        loc: {
          start: {
            line: 159,
            column: 8
          },
          end: {
            line: 166,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 159,
            column: 8
          },
          end: {
            line: 166,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 159
      },
      "45": {
        loc: {
          start: {
            line: 159,
            column: 12
          },
          end: {
            line: 159,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 159,
            column: 12
          },
          end: {
            line: 159,
            column: 22
          }
        }, {
          start: {
            line: 159,
            column: 26
          },
          end: {
            line: 159,
            column: 42
          }
        }],
        line: 159
      },
      "46": {
        loc: {
          start: {
            line: 173,
            column: 32
          },
          end: {
            line: 173,
            column: 87
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 173,
            column: 56
          },
          end: {
            line: 173,
            column: 83
          }
        }, {
          start: {
            line: 173,
            column: 86
          },
          end: {
            line: 173,
            column: 87
          }
        }],
        line: 173
      },
      "47": {
        loc: {
          start: {
            line: 177,
            column: 27
          },
          end: {
            line: 177,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 177,
            column: 27
          },
          end: {
            line: 177,
            column: 59
          }
        }, {
          start: {
            line: 177,
            column: 63
          },
          end: {
            line: 177,
            column: 64
          }
        }],
        line: 177
      },
      "48": {
        loc: {
          start: {
            line: 178,
            column: 25
          },
          end: {
            line: 178,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 178,
            column: 25
          },
          end: {
            line: 178,
            column: 55
          }
        }, {
          start: {
            line: 178,
            column: 59
          },
          end: {
            line: 178,
            column: 60
          }
        }],
        line: 178
      },
      "49": {
        loc: {
          start: {
            line: 181,
            column: 8
          },
          end: {
            line: 184,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 181,
            column: 8
          },
          end: {
            line: 184,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 181
      },
      "50": {
        loc: {
          start: {
            line: 189,
            column: 40
          },
          end: {
            line: 189,
            column: 64
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 189,
            column: 59
          },
          end: {
            line: 189,
            column: 64
          }
        }],
        line: 189
      },
      "51": {
        loc: {
          start: {
            line: 199,
            column: 19
          },
          end: {
            line: 199,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 199,
            column: 66
          },
          end: {
            line: 199,
            column: 72
          }
        }, {
          start: {
            line: 199,
            column: 75
          },
          end: {
            line: 199,
            column: 95
          }
        }],
        line: 199
      },
      "52": {
        loc: {
          start: {
            line: 199,
            column: 19
          },
          end: {
            line: 199,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 199,
            column: 19
          },
          end: {
            line: 199,
            column: 46
          }
        }, {
          start: {
            line: 199,
            column: 50
          },
          end: {
            line: 199,
            column: 63
          }
        }],
        line: 199
      },
      "53": {
        loc: {
          start: {
            line: 202,
            column: 46
          },
          end: {
            line: 202,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 202,
            column: 46
          },
          end: {
            line: 202,
            column: 53
          }
        }, {
          start: {
            line: 202,
            column: 57
          },
          end: {
            line: 202,
            column: 77
          }
        }],
        line: 202
      },
      "54": {
        loc: {
          start: {
            line: 204,
            column: 42
          },
          end: {
            line: 204,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 204,
            column: 42
          },
          end: {
            line: 204,
            column: 72
          }
        }, {
          start: {
            line: 204,
            column: 76
          },
          end: {
            line: 204,
            column: 77
          }
        }],
        line: 204
      },
      "55": {
        loc: {
          start: {
            line: 206,
            column: 8
          },
          end: {
            line: 218,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 206,
            column: 8
          },
          end: {
            line: 218,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 206
      },
      "56": {
        loc: {
          start: {
            line: 208,
            column: 12
          },
          end: {
            line: 216,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 208,
            column: 12
          },
          end: {
            line: 216,
            column: 13
          }
        }, {
          start: {
            line: 211,
            column: 17
          },
          end: {
            line: 216,
            column: 13
          }
        }],
        line: 208
      },
      "57": {
        loc: {
          start: {
            line: 211,
            column: 17
          },
          end: {
            line: 216,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 211,
            column: 17
          },
          end: {
            line: 216,
            column: 13
          }
        }, {
          start: {
            line: 214,
            column: 17
          },
          end: {
            line: 216,
            column: 13
          }
        }],
        line: 211
      },
      "58": {
        loc: {
          start: {
            line: 214,
            column: 17
          },
          end: {
            line: 216,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 214,
            column: 17
          },
          end: {
            line: 216,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 214
      },
      "59": {
        loc: {
          start: {
            line: 223,
            column: 55
          },
          end: {
            line: 223,
            column: 66
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 223,
            column: 62
          },
          end: {
            line: 223,
            column: 66
          }
        }],
        line: 223
      },
      "60": {
        loc: {
          start: {
            line: 239,
            column: 8
          },
          end: {
            line: 246,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 239,
            column: 8
          },
          end: {
            line: 246,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 239
      },
      "61": {
        loc: {
          start: {
            line: 239,
            column: 12
          },
          end: {
            line: 239,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 239,
            column: 12
          },
          end: {
            line: 239,
            column: 34
          }
        }, {
          start: {
            line: 239,
            column: 38
          },
          end: {
            line: 239,
            column: 68
          }
        }],
        line: 239
      },
      "62": {
        loc: {
          start: {
            line: 256,
            column: 22
          },
          end: {
            line: 256,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 256,
            column: 22
          },
          end: {
            line: 256,
            column: 57
          }
        }, {
          start: {
            line: 256,
            column: 61
          },
          end: {
            line: 256,
            column: 62
          }
        }],
        line: 256
      },
      "63": {
        loc: {
          start: {
            line: 257,
            column: 26
          },
          end: {
            line: 257,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 257,
            column: 26
          },
          end: {
            line: 257,
            column: 58
          }
        }, {
          start: {
            line: 257,
            column: 62
          },
          end: {
            line: 257,
            column: 63
          }
        }],
        line: 257
      },
      "64": {
        loc: {
          start: {
            line: 258,
            column: 24
          },
          end: {
            line: 258,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 258,
            column: 24
          },
          end: {
            line: 258,
            column: 54
          }
        }, {
          start: {
            line: 258,
            column: 58
          },
          end: {
            line: 258,
            column: 59
          }
        }],
        line: 258
      },
      "65": {
        loc: {
          start: {
            line: 259,
            column: 32
          },
          end: {
            line: 259,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 259,
            column: 32
          },
          end: {
            line: 259,
            column: 70
          }
        }, {
          start: {
            line: 259,
            column: 74
          },
          end: {
            line: 259,
            column: 75
          }
        }],
        line: 259
      },
      "66": {
        loc: {
          start: {
            line: 260,
            column: 31
          },
          end: {
            line: 260,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 260,
            column: 31
          },
          end: {
            line: 260,
            column: 64
          }
        }, {
          start: {
            line: 260,
            column: 68
          },
          end: {
            line: 260,
            column: 69
          }
        }],
        line: 260
      },
      "67": {
        loc: {
          start: {
            line: 261,
            column: 31
          },
          end: {
            line: 261,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 261,
            column: 31
          },
          end: {
            line: 261,
            column: 64
          }
        }, {
          start: {
            line: 261,
            column: 68
          },
          end: {
            line: 261,
            column: 69
          }
        }],
        line: 261
      },
      "68": {
        loc: {
          start: {
            line: 262,
            column: 31
          },
          end: {
            line: 262,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 262,
            column: 31
          },
          end: {
            line: 262,
            column: 59
          }
        }, {
          start: {
            line: 262,
            column: 63
          },
          end: {
            line: 262,
            column: 64
          }
        }],
        line: 262
      },
      "69": {
        loc: {
          start: {
            line: 263,
            column: 31
          },
          end: {
            line: 263,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 263,
            column: 31
          },
          end: {
            line: 263,
            column: 59
          }
        }, {
          start: {
            line: 263,
            column: 63
          },
          end: {
            line: 263,
            column: 64
          }
        }],
        line: 263
      },
      "70": {
        loc: {
          start: {
            line: 281,
            column: 8
          },
          end: {
            line: 283,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 281,
            column: 8
          },
          end: {
            line: 283,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 281
      },
      "71": {
        loc: {
          start: {
            line: 285,
            column: 8
          },
          end: {
            line: 287,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 285,
            column: 8
          },
          end: {
            line: 287,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 285
      },
      "72": {
        loc: {
          start: {
            line: 332,
            column: 4
          },
          end: {
            line: 334,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 332,
            column: 4
          },
          end: {
            line: 334,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 332
      },
      "73": {
        loc: {
          start: {
            line: 347,
            column: 24
          },
          end: {
            line: 347,
            column: 90
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 347,
            column: 41
          },
          end: {
            line: 347,
            column: 64
          }
        }, {
          start: {
            line: 347,
            column: 67
          },
          end: {
            line: 347,
            column: 90
          }
        }],
        line: 347
      },
      "74": {
        loc: {
          start: {
            line: 351,
            column: 44
          },
          end: {
            line: 351,
            column: 62
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 351,
            column: 57
          },
          end: {
            line: 351,
            column: 62
          }
        }],
        line: 351
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0],
      "66": [0, 0],
      "67": [0, 0],
      "68": [0, 0],
      "69": [0, 0],
      "70": [0, 0],
      "71": [0, 0],
      "72": [0, 0],
      "73": [0, 0],
      "74": [0]
    },
    inputSourceMap: {
      file: "/Users/dikshantvashistha/PrepBettr/lib/azure-ai-foundry/voice/voice-telemetry.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/dikshantvashistha/PrepBettr/lib/azure-ai-foundry/voice/voice-telemetry.ts"],
      sourcesContent: ["/**\n * Azure AI Foundry Voice Telemetry\n * \n * Provides structured logging, error handling, and metrics collection\n * specifically for the voice system with Application Insights integration.\n */\n\nimport { logger } from '@/lib/utils/logger';\nimport { reportError, showErrorNotification } from '@/lib/utils/error-utils';\n\n// Type definitions for telemetry events\nexport interface VoiceTelemetryEvent {\n  name: string;\n  timestamp: number;\n  sessionId?: string;\n  userId?: string;\n  properties?: Record<string, any>;\n  measurements?: Record<string, number>;\n}\n\nexport interface ConnectionMetrics {\n  connectionTime: number;\n  retryCount: number;\n  reconnectCount: number;\n  disconnectionReason?: string;\n  networkLatency?: number;\n}\n\nexport interface AudioMetrics {\n  sttLatency: number;      // Speech-to-text latency\n  ttsLatency: number;      // Text-to-speech latency\n  audioQuality: number;    // 0-1 quality score\n  voiceActivity: number;   // Voice activity detection score\n  bufferUnderruns: number; // Audio buffer issues\n}\n\nexport interface SessionMetrics {\n  sessionDuration: number;\n  messageCount: number;\n  transcriptAccuracy: number;\n  errorCount: number;\n  userSatisfaction?: number;\n}\n\n/**\n * Voice system specific errors with context\n */\nexport class VoiceConnectionError extends Error {\n  constructor(\n    message: string,\n    public sessionId?: string,\n    public retryCount?: number,\n    public lastError?: Error\n  ) {\n    super(message);\n    this.name = 'VoiceConnectionError';\n  }\n}\n\nexport class VoiceAudioError extends Error {\n  constructor(\n    message: string,\n    public sessionId?: string,\n    public audioContext?: any,\n    public sampleRate?: number\n  ) {\n    super(message);\n    this.name = 'VoiceAudioError';\n  }\n}\n\nexport class VoiceSessionError extends Error {\n  constructor(\n    message: string,\n    public sessionId?: string,\n    public sessionState?: string,\n    public lastAction?: string\n  ) {\n    super(message);\n    this.name = 'VoiceSessionError';\n  }\n}\n\n/**\n * Voice Telemetry Service\n */\nexport class VoiceTelemetryService {\n  private events: VoiceTelemetryEvent[] = [];\n  private sessionStartTime: number = 0;\n  private lastEventTime: number = 0;\n  \n  // Metrics aggregation\n  private connectionMetrics: Partial<ConnectionMetrics> = {};\n  private audioMetrics: Partial<AudioMetrics> = {};\n  private sessionMetrics: Partial<SessionMetrics> = {};\n\n  /**\n   * Initialize telemetry for a session\n   */\n  startSession(sessionId: string, userId?: string): void {\n    this.sessionStartTime = Date.now();\n    this.lastEventTime = this.sessionStartTime;\n    \n    this.logEvent('voice_session_started', {\n      sessionId,\n      userId,\n      userAgent: navigator.userAgent,\n      timestamp: this.sessionStartTime\n    });\n\n    // Initialize metrics\n    this.connectionMetrics = {};\n    this.audioMetrics = { bufferUnderruns: 0 };\n    this.sessionMetrics = { messageCount: 0, errorCount: 0 };\n  }\n\n  /**\n   * Log connection events with metrics\n   */\n  logConnectionEvent(\n    event: 'connecting' | 'connected' | 'disconnected' | 'reconnecting' | 'failed',\n    sessionId: string,\n    metrics?: Partial<ConnectionMetrics>\n  ): void {\n    const now = Date.now();\n    const latency = now - this.lastEventTime;\n\n    this.logEvent(`voice_connection_${event}`, {\n      sessionId,\n      latency,\n      ...metrics\n    }, {\n      connection_time: metrics?.connectionTime || 0,\n      retry_count: metrics?.retryCount || 0,\n      network_latency: metrics?.networkLatency || latency\n    });\n\n    // Update connection metrics\n    Object.assign(this.connectionMetrics, metrics);\n\n    // Log specific connection issues\n    if (event === 'failed' || event === 'disconnected') {\n      this.sessionMetrics.errorCount = (this.sessionMetrics.errorCount || 0) + 1;\n      \n      if (metrics?.disconnectionReason) {\n        logger.warn(`Voice connection ${event}: ${metrics.disconnectionReason}`, {\n          sessionId,\n          retryCount: metrics.retryCount,\n          ...metrics\n        });\n      }\n    }\n\n    this.lastEventTime = now;\n  }\n\n  /**\n   * Log audio processing events with performance metrics\n   */\n  logAudioEvent(\n    event: 'stt_start' | 'stt_complete' | 'tts_start' | 'tts_complete' | 'audio_error' | 'buffer_underrun',\n    sessionId: string,\n    metrics?: Partial<AudioMetrics>\n  ): void {\n    const now = Date.now();\n    const eventLatency = now - this.lastEventTime;\n\n    this.logEvent(`voice_audio_${event}`, {\n      sessionId,\n      eventLatency,\n      ...metrics\n    }, {\n      stt_latency: metrics?.sttLatency || 0,\n      tts_latency: metrics?.ttsLatency || 0,\n      audio_quality: metrics?.audioQuality || 0,\n      voice_activity: metrics?.voiceActivity || 0\n    });\n\n    // Update audio metrics\n    Object.assign(this.audioMetrics, metrics);\n\n    // Track buffer issues\n    if (event === 'buffer_underrun') {\n      this.audioMetrics.bufferUnderruns = (this.audioMetrics.bufferUnderruns || 0) + 1;\n      logger.warn('Audio buffer underrun detected', { sessionId, ...metrics });\n    }\n\n    // Log performance warnings\n    if (metrics?.sttLatency && metrics.sttLatency > 2000) {\n      logger.warn('High STT latency detected', { \n        sessionId, \n        latency: metrics.sttLatency,\n        threshold: 2000 \n      });\n    }\n\n    if (metrics?.ttsLatency && metrics.ttsLatency > 1500) {\n      logger.warn('High TTS latency detected', { \n        sessionId, \n        latency: metrics.ttsLatency,\n        threshold: 1500 \n      });\n    }\n\n    this.lastEventTime = now;\n  }\n\n  /**\n   * Log transcript events with accuracy metrics\n   */\n  logTranscriptEvent(\n    event: 'transcript_partial' | 'transcript_final' | 'transcript_error',\n    sessionId: string,\n    text: string,\n    confidence?: number\n  ): void {\n    this.logEvent(`voice_${event}`, {\n      sessionId,\n      textLength: text.length,\n      confidence,\n      preview: text.substring(0, 50) + (text.length > 50 ? '...' : '')\n    }, {\n      text_length: text.length,\n      confidence: confidence || 0\n    });\n\n    // Track message count and accuracy\n    if (event === 'transcript_final') {\n      this.sessionMetrics.messageCount = (this.sessionMetrics.messageCount || 0) + 1;\n      \n      if (confidence) {\n        const currentAccuracy = this.sessionMetrics.transcriptAccuracy || 0;\n        const messageCount = this.sessionMetrics.messageCount || 1;\n        this.sessionMetrics.transcriptAccuracy = (currentAccuracy * (messageCount - 1) + confidence) / messageCount;\n      }\n    }\n\n    // Log low confidence warnings\n    if (confidence && confidence < 0.7) {\n      logger.warn('Low transcript confidence', { \n        sessionId, \n        confidence, \n        text: text.substring(0, 100),\n        threshold: 0.7 \n      });\n    }\n  }\n\n  /**\n   * Log session lifecycle events\n   */\n  logSessionEvent(\n    event: 'session_created' | 'session_active' | 'session_stopped' | 'session_error',\n    sessionId: string,\n    details?: Record<string, any>\n  ): void {\n    const now = Date.now();\n    const sessionDuration = this.sessionStartTime ? now - this.sessionStartTime : 0;\n\n    this.logEvent(`voice_${event}`, {\n      sessionId,\n      sessionDuration,\n      ...details\n    }, {\n      session_duration: sessionDuration,\n      message_count: this.sessionMetrics.messageCount || 0,\n      error_count: this.sessionMetrics.errorCount || 0\n    });\n\n    // Update session metrics\n    if (event === 'session_stopped') {\n      this.sessionMetrics.sessionDuration = sessionDuration;\n      this.generateSessionSummary(sessionId);\n    }\n  }\n\n  /**\n   * Handle and log voice system errors with context\n   */\n  logError(\n    error: Error | VoiceConnectionError | VoiceAudioError | VoiceSessionError,\n    sessionId?: string,\n    context?: string,\n    shouldNotifyUser = false\n  ): void {\n    const errorContext = {\n      sessionId,\n      context,\n      errorType: error.constructor.name,\n      ...(error as any).additionalContext\n    };\n\n    // Log structured error\n    this.logEvent('voice_error', {\n      sessionId,\n      errorMessage: error.message,\n      errorType: error.constructor.name,\n      context,\n      stack: error.stack?.substring(0, 500) // Truncate stack trace\n    });\n\n    // Report to centralized error handling\n    reportError(error, context || 'Voice System Error', errorContext);\n\n    // Update error count\n    this.sessionMetrics.errorCount = (this.sessionMetrics.errorCount || 0) + 1;\n\n    // Show user notification for critical errors\n    if (shouldNotifyUser) {\n      let userMessage = 'Voice system error occurred';\n      \n      if (error instanceof VoiceConnectionError) {\n        userMessage = 'Connection to voice service lost. Attempting to reconnect...';\n      } else if (error instanceof VoiceAudioError) {\n        userMessage = 'Audio processing error. Please check your microphone permissions.';\n      } else if (error instanceof VoiceSessionError) {\n        userMessage = 'Voice session error. Please try restarting the interview.';\n      }\n\n      showErrorNotification(userMessage, context);\n    }\n  }\n\n  /**\n   * Log performance metrics\n   */\n  logPerformanceMetric(\n    metricName: string,\n    value: number,\n    sessionId?: string,\n    unit = 'ms'\n  ): void {\n    this.logEvent('voice_performance_metric', {\n      sessionId,\n      metricName,\n      value,\n      unit\n    }, {\n      [metricName]: value\n    });\n\n    // Log performance warnings\n    const thresholds: Record<string, number> = {\n      'connection_time': 3000,\n      'stt_latency': 2000,\n      'tts_latency': 1500,\n      'session_init_time': 5000\n    };\n\n    if (thresholds[metricName] && value > thresholds[metricName]) {\n      logger.warn(`Performance threshold exceeded: ${metricName}`, {\n        sessionId,\n        value,\n        threshold: thresholds[metricName],\n        unit\n      });\n    }\n  }\n\n  /**\n   * Generate session summary for analytics\n   */\n  private generateSessionSummary(sessionId: string): void {\n    const properties = {\n      sessionId\n    };\n    \n    const measurements = {\n      duration: this.sessionMetrics.sessionDuration || 0,\n      messageCount: this.sessionMetrics.messageCount || 0,\n      errorCount: this.sessionMetrics.errorCount || 0,\n      transcriptAccuracy: this.sessionMetrics.transcriptAccuracy || 0,\n      connectionRetries: this.connectionMetrics.retryCount || 0,\n      audioBufferIssues: this.audioMetrics.bufferUnderruns || 0,\n      averageSttLatency: this.audioMetrics.sttLatency || 0,\n      averageTtsLatency: this.audioMetrics.ttsLatency || 0\n    };\n\n    this.logEvent('voice_session_summary', properties, measurements);\n\n    logger.info('Voice session summary', { ...properties, ...measurements });\n  }\n\n  /**\n   * Core event logging with Application Insights integration\n   */\n  private logEvent(\n    name: string,\n    properties?: Record<string, any>,\n    measurements?: Record<string, number>\n  ): void {\n    const event: VoiceTelemetryEvent = {\n      name,\n      timestamp: Date.now(),\n      properties,\n      measurements\n    };\n\n    // Store locally\n    this.events.push(event);\n\n    // Keep only last 100 events in memory\n    if (this.events.length > 100) {\n      this.events = this.events.slice(-100);\n    }\n\n    // Log to console for development\n    if (process.env.NODE_ENV === 'development') {\n      console.log(`\uD83D\uDD0D [VoiceTelemetry] ${name}`, properties, measurements);\n    }\n\n    // TODO: Integration with Azure Application Insights\n    // if (window.appInsights) {\n    //   window.appInsights.trackEvent({\n    //     name: `voice_${name}`,\n    //     properties,\n    //     measurements\n    //   });\n    // }\n\n    // Standard logging\n    logger.info(`Voice telemetry: ${name}`, { properties, measurements });\n  }\n\n  /**\n   * Get current session metrics\n   */\n  getMetrics(): {\n    connection: ConnectionMetrics;\n    audio: AudioMetrics;\n    session: SessionMetrics;\n  } {\n    return {\n      connection: this.connectionMetrics as ConnectionMetrics,\n      audio: this.audioMetrics as AudioMetrics,\n      session: this.sessionMetrics as SessionMetrics\n    };\n  }\n\n  /**\n   * Export telemetry data for analysis\n   */\n  exportTelemetryData(): VoiceTelemetryEvent[] {\n    return [...this.events];\n  }\n\n  /**\n   * Clear telemetry data\n   */\n  clearTelemetryData(): void {\n    this.events = [];\n    this.connectionMetrics = {};\n    this.audioMetrics = { bufferUnderruns: 0 };\n    this.sessionMetrics = { messageCount: 0, errorCount: 0 };\n  }\n}\n\n// Singleton instance\nlet voiceTelemetryInstance: VoiceTelemetryService | null = null;\n\n/**\n * Get shared VoiceTelemetryService instance\n */\nexport function getVoiceTelemetry(): VoiceTelemetryService {\n  if (!voiceTelemetryInstance) {\n    voiceTelemetryInstance = new VoiceTelemetryService();\n  }\n  return voiceTelemetryInstance;\n}\n\n/**\n * Utility functions for common voice telemetry operations\n */\nexport const VoiceTelemetry = {\n  // Connection tracking\n  trackConnection: (event: 'connecting' | 'connected' | 'disconnected', sessionId: string, metrics?: Partial<ConnectionMetrics>) => {\n    getVoiceTelemetry().logConnectionEvent(event, sessionId, metrics);\n  },\n\n  // Audio performance tracking\n  trackAudioLatency: (type: 'stt' | 'tts', latency: number, sessionId: string) => {\n    const metrics = type === 'stt' ? { sttLatency: latency } : { ttsLatency: latency };\n    getVoiceTelemetry().logAudioEvent(`${type}_complete`, sessionId, metrics);\n  },\n\n  // Error tracking with user notifications\n  trackError: (error: Error, sessionId?: string, context?: string, notifyUser = false) => {\n    getVoiceTelemetry().logError(error, sessionId, context, notifyUser);\n  },\n\n  // Performance monitoring\n  trackPerformance: (metric: string, value: number, sessionId?: string) => {\n    getVoiceTelemetry().logPerformanceMetric(metric, value, sessionId);\n  },\n\n  // Session lifecycle\n  startSession: (sessionId: string, userId?: string) => {\n    getVoiceTelemetry().startSession(sessionId, userId);\n  },\n\n  endSession: (sessionId: string) => {\n    getVoiceTelemetry().logSessionEvent('session_stopped', sessionId);\n  },\n\n  // Singleton access methods\n  getInstance: () => getVoiceTelemetry()\n};\n\n/**\n * Export singleton instance for convenience\n */\nexport const voiceTelemetry = getVoiceTelemetry();\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f391f19b7e0e39043455abcf81b24dfbe79b919d"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1hnydtrqf7 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1hnydtrqf7();
cov_1hnydtrqf7().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1hnydtrqf7().s[1]++;
exports.voiceTelemetry = exports.VoiceTelemetry = exports.VoiceTelemetryService = exports.VoiceSessionError = exports.VoiceAudioError = exports.VoiceConnectionError = void 0;
/* istanbul ignore next */
cov_1hnydtrqf7().s[2]++;
exports.getVoiceTelemetry = getVoiceTelemetry;
const logger_1 =
/* istanbul ignore next */
(cov_1hnydtrqf7().s[3]++, require("@/lib/utils/logger"));
const error_utils_1 =
/* istanbul ignore next */
(cov_1hnydtrqf7().s[4]++, require("@/lib/utils/error-utils"));
/**
 * Voice system specific errors with context
 */
class VoiceConnectionError extends Error {
  constructor(message, sessionId, retryCount, lastError) {
    /* istanbul ignore next */
    cov_1hnydtrqf7().f[0]++;
    cov_1hnydtrqf7().s[5]++;
    super(message);
    /* istanbul ignore next */
    cov_1hnydtrqf7().s[6]++;
    this.sessionId = sessionId;
    /* istanbul ignore next */
    cov_1hnydtrqf7().s[7]++;
    this.retryCount = retryCount;
    /* istanbul ignore next */
    cov_1hnydtrqf7().s[8]++;
    this.lastError = lastError;
    /* istanbul ignore next */
    cov_1hnydtrqf7().s[9]++;
    this.name = 'VoiceConnectionError';
  }
}
/* istanbul ignore next */
cov_1hnydtrqf7().s[10]++;
exports.VoiceConnectionError = VoiceConnectionError;
class VoiceAudioError extends Error {
  constructor(message, sessionId, audioContext, sampleRate) {
    /* istanbul ignore next */
    cov_1hnydtrqf7().f[1]++;
    cov_1hnydtrqf7().s[11]++;
    super(message);
    /* istanbul ignore next */
    cov_1hnydtrqf7().s[12]++;
    this.sessionId = sessionId;
    /* istanbul ignore next */
    cov_1hnydtrqf7().s[13]++;
    this.audioContext = audioContext;
    /* istanbul ignore next */
    cov_1hnydtrqf7().s[14]++;
    this.sampleRate = sampleRate;
    /* istanbul ignore next */
    cov_1hnydtrqf7().s[15]++;
    this.name = 'VoiceAudioError';
  }
}
/* istanbul ignore next */
cov_1hnydtrqf7().s[16]++;
exports.VoiceAudioError = VoiceAudioError;
class VoiceSessionError extends Error {
  constructor(message, sessionId, sessionState, lastAction) {
    /* istanbul ignore next */
    cov_1hnydtrqf7().f[2]++;
    cov_1hnydtrqf7().s[17]++;
    super(message);
    /* istanbul ignore next */
    cov_1hnydtrqf7().s[18]++;
    this.sessionId = sessionId;
    /* istanbul ignore next */
    cov_1hnydtrqf7().s[19]++;
    this.sessionState = sessionState;
    /* istanbul ignore next */
    cov_1hnydtrqf7().s[20]++;
    this.lastAction = lastAction;
    /* istanbul ignore next */
    cov_1hnydtrqf7().s[21]++;
    this.name = 'VoiceSessionError';
  }
}
/* istanbul ignore next */
cov_1hnydtrqf7().s[22]++;
exports.VoiceSessionError = VoiceSessionError;
/**
 * Voice Telemetry Service
 */
class VoiceTelemetryService {
  constructor() {
    /* istanbul ignore next */
    cov_1hnydtrqf7().f[3]++;
    cov_1hnydtrqf7().s[23]++;
    this.events = [];
    /* istanbul ignore next */
    cov_1hnydtrqf7().s[24]++;
    this.sessionStartTime = 0;
    /* istanbul ignore next */
    cov_1hnydtrqf7().s[25]++;
    this.lastEventTime = 0;
    // Metrics aggregation
    /* istanbul ignore next */
    cov_1hnydtrqf7().s[26]++;
    this.connectionMetrics = {};
    /* istanbul ignore next */
    cov_1hnydtrqf7().s[27]++;
    this.audioMetrics = {};
    /* istanbul ignore next */
    cov_1hnydtrqf7().s[28]++;
    this.sessionMetrics = {};
  }
  /**
   * Initialize telemetry for a session
   */
  startSession(sessionId, userId) {
    /* istanbul ignore next */
    cov_1hnydtrqf7().f[4]++;
    cov_1hnydtrqf7().s[29]++;
    this.sessionStartTime = Date.now();
    /* istanbul ignore next */
    cov_1hnydtrqf7().s[30]++;
    this.lastEventTime = this.sessionStartTime;
    /* istanbul ignore next */
    cov_1hnydtrqf7().s[31]++;
    this.logEvent('voice_session_started', {
      sessionId,
      userId,
      userAgent: navigator.userAgent,
      timestamp: this.sessionStartTime
    });
    // Initialize metrics
    /* istanbul ignore next */
    cov_1hnydtrqf7().s[32]++;
    this.connectionMetrics = {};
    /* istanbul ignore next */
    cov_1hnydtrqf7().s[33]++;
    this.audioMetrics = {
      bufferUnderruns: 0
    };
    /* istanbul ignore next */
    cov_1hnydtrqf7().s[34]++;
    this.sessionMetrics = {
      messageCount: 0,
      errorCount: 0
    };
  }
  /**
   * Log connection events with metrics
   */
  logConnectionEvent(event, sessionId, metrics) {
    /* istanbul ignore next */
    cov_1hnydtrqf7().f[5]++;
    const now =
    /* istanbul ignore next */
    (cov_1hnydtrqf7().s[35]++, Date.now());
    const latency =
    /* istanbul ignore next */
    (cov_1hnydtrqf7().s[36]++, now - this.lastEventTime);
    /* istanbul ignore next */
    cov_1hnydtrqf7().s[37]++;
    this.logEvent(`voice_connection_${event}`, Object.assign({
      sessionId,
      latency
    }, metrics), {
      connection_time:
      /* istanbul ignore next */
      (cov_1hnydtrqf7().b[0][0]++,
      /* istanbul ignore next */
      (cov_1hnydtrqf7().b[2][0]++, metrics === null) ||
      /* istanbul ignore next */
      (cov_1hnydtrqf7().b[2][1]++, metrics === void 0) ?
      /* istanbul ignore next */
      (cov_1hnydtrqf7().b[1][0]++, void 0) :
      /* istanbul ignore next */
      (cov_1hnydtrqf7().b[1][1]++, metrics.connectionTime)) ||
      /* istanbul ignore next */
      (cov_1hnydtrqf7().b[0][1]++, 0),
      retry_count:
      /* istanbul ignore next */
      (cov_1hnydtrqf7().b[3][0]++,
      /* istanbul ignore next */
      (cov_1hnydtrqf7().b[5][0]++, metrics === null) ||
      /* istanbul ignore next */
      (cov_1hnydtrqf7().b[5][1]++, metrics === void 0) ?
      /* istanbul ignore next */
      (cov_1hnydtrqf7().b[4][0]++, void 0) :
      /* istanbul ignore next */
      (cov_1hnydtrqf7().b[4][1]++, metrics.retryCount)) ||
      /* istanbul ignore next */
      (cov_1hnydtrqf7().b[3][1]++, 0),
      network_latency:
      /* istanbul ignore next */
      (cov_1hnydtrqf7().b[6][0]++,
      /* istanbul ignore next */
      (cov_1hnydtrqf7().b[8][0]++, metrics === null) ||
      /* istanbul ignore next */
      (cov_1hnydtrqf7().b[8][1]++, metrics === void 0) ?
      /* istanbul ignore next */
      (cov_1hnydtrqf7().b[7][0]++, void 0) :
      /* istanbul ignore next */
      (cov_1hnydtrqf7().b[7][1]++, metrics.networkLatency)) ||
      /* istanbul ignore next */
      (cov_1hnydtrqf7().b[6][1]++, latency)
    });
    // Update connection metrics
    /* istanbul ignore next */
    cov_1hnydtrqf7().s[38]++;
    Object.assign(this.connectionMetrics, metrics);
    // Log specific connection issues
    /* istanbul ignore next */
    cov_1hnydtrqf7().s[39]++;
    if (
    /* istanbul ignore next */
    (cov_1hnydtrqf7().b[10][0]++, event === 'failed') ||
    /* istanbul ignore next */
    (cov_1hnydtrqf7().b[10][1]++, event === 'disconnected')) {
      /* istanbul ignore next */
      cov_1hnydtrqf7().b[9][0]++;
      cov_1hnydtrqf7().s[40]++;
      this.sessionMetrics.errorCount = (
      /* istanbul ignore next */
      (cov_1hnydtrqf7().b[11][0]++, this.sessionMetrics.errorCount) ||
      /* istanbul ignore next */
      (cov_1hnydtrqf7().b[11][1]++, 0)) + 1;
      /* istanbul ignore next */
      cov_1hnydtrqf7().s[41]++;
      if (
      /* istanbul ignore next */
      (cov_1hnydtrqf7().b[14][0]++, metrics === null) ||
      /* istanbul ignore next */
      (cov_1hnydtrqf7().b[14][1]++, metrics === void 0) ?
      /* istanbul ignore next */
      (cov_1hnydtrqf7().b[13][0]++, void 0) :
      /* istanbul ignore next */
      (cov_1hnydtrqf7().b[13][1]++, metrics.disconnectionReason)) {
        /* istanbul ignore next */
        cov_1hnydtrqf7().b[12][0]++;
        cov_1hnydtrqf7().s[42]++;
        logger_1.logger.warn(`Voice connection ${event}: ${metrics.disconnectionReason}`, Object.assign({
          sessionId,
          retryCount: metrics.retryCount
        }, metrics));
      } else
      /* istanbul ignore next */
      {
        cov_1hnydtrqf7().b[12][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1hnydtrqf7().b[9][1]++;
    }
    cov_1hnydtrqf7().s[43]++;
    this.lastEventTime = now;
  }
  /**
   * Log audio processing events with performance metrics
   */
  logAudioEvent(event, sessionId, metrics) {
    /* istanbul ignore next */
    cov_1hnydtrqf7().f[6]++;
    const now =
    /* istanbul ignore next */
    (cov_1hnydtrqf7().s[44]++, Date.now());
    const eventLatency =
    /* istanbul ignore next */
    (cov_1hnydtrqf7().s[45]++, now - this.lastEventTime);
    /* istanbul ignore next */
    cov_1hnydtrqf7().s[46]++;
    this.logEvent(`voice_audio_${event}`, Object.assign({
      sessionId,
      eventLatency
    }, metrics), {
      stt_latency:
      /* istanbul ignore next */
      (cov_1hnydtrqf7().b[15][0]++,
      /* istanbul ignore next */
      (cov_1hnydtrqf7().b[17][0]++, metrics === null) ||
      /* istanbul ignore next */
      (cov_1hnydtrqf7().b[17][1]++, metrics === void 0) ?
      /* istanbul ignore next */
      (cov_1hnydtrqf7().b[16][0]++, void 0) :
      /* istanbul ignore next */
      (cov_1hnydtrqf7().b[16][1]++, metrics.sttLatency)) ||
      /* istanbul ignore next */
      (cov_1hnydtrqf7().b[15][1]++, 0),
      tts_latency:
      /* istanbul ignore next */
      (cov_1hnydtrqf7().b[18][0]++,
      /* istanbul ignore next */
      (cov_1hnydtrqf7().b[20][0]++, metrics === null) ||
      /* istanbul ignore next */
      (cov_1hnydtrqf7().b[20][1]++, metrics === void 0) ?
      /* istanbul ignore next */
      (cov_1hnydtrqf7().b[19][0]++, void 0) :
      /* istanbul ignore next */
      (cov_1hnydtrqf7().b[19][1]++, metrics.ttsLatency)) ||
      /* istanbul ignore next */
      (cov_1hnydtrqf7().b[18][1]++, 0),
      audio_quality:
      /* istanbul ignore next */
      (cov_1hnydtrqf7().b[21][0]++,
      /* istanbul ignore next */
      (cov_1hnydtrqf7().b[23][0]++, metrics === null) ||
      /* istanbul ignore next */
      (cov_1hnydtrqf7().b[23][1]++, metrics === void 0) ?
      /* istanbul ignore next */
      (cov_1hnydtrqf7().b[22][0]++, void 0) :
      /* istanbul ignore next */
      (cov_1hnydtrqf7().b[22][1]++, metrics.audioQuality)) ||
      /* istanbul ignore next */
      (cov_1hnydtrqf7().b[21][1]++, 0),
      voice_activity:
      /* istanbul ignore next */
      (cov_1hnydtrqf7().b[24][0]++,
      /* istanbul ignore next */
      (cov_1hnydtrqf7().b[26][0]++, metrics === null) ||
      /* istanbul ignore next */
      (cov_1hnydtrqf7().b[26][1]++, metrics === void 0) ?
      /* istanbul ignore next */
      (cov_1hnydtrqf7().b[25][0]++, void 0) :
      /* istanbul ignore next */
      (cov_1hnydtrqf7().b[25][1]++, metrics.voiceActivity)) ||
      /* istanbul ignore next */
      (cov_1hnydtrqf7().b[24][1]++, 0)
    });
    // Update audio metrics
    /* istanbul ignore next */
    cov_1hnydtrqf7().s[47]++;
    Object.assign(this.audioMetrics, metrics);
    // Track buffer issues
    /* istanbul ignore next */
    cov_1hnydtrqf7().s[48]++;
    if (event === 'buffer_underrun') {
      /* istanbul ignore next */
      cov_1hnydtrqf7().b[27][0]++;
      cov_1hnydtrqf7().s[49]++;
      this.audioMetrics.bufferUnderruns = (
      /* istanbul ignore next */
      (cov_1hnydtrqf7().b[28][0]++, this.audioMetrics.bufferUnderruns) ||
      /* istanbul ignore next */
      (cov_1hnydtrqf7().b[28][1]++, 0)) + 1;
      /* istanbul ignore next */
      cov_1hnydtrqf7().s[50]++;
      logger_1.logger.warn('Audio buffer underrun detected', Object.assign({
        sessionId
      }, metrics));
    } else
    /* istanbul ignore next */
    {
      cov_1hnydtrqf7().b[27][1]++;
    }
    // Log performance warnings
    cov_1hnydtrqf7().s[51]++;
    if (
    /* istanbul ignore next */
    (cov_1hnydtrqf7().b[30][0]++,
    /* istanbul ignore next */
    (cov_1hnydtrqf7().b[32][0]++, metrics === null) ||
    /* istanbul ignore next */
    (cov_1hnydtrqf7().b[32][1]++, metrics === void 0) ?
    /* istanbul ignore next */
    (cov_1hnydtrqf7().b[31][0]++, void 0) :
    /* istanbul ignore next */
    (cov_1hnydtrqf7().b[31][1]++, metrics.sttLatency)) &&
    /* istanbul ignore next */
    (cov_1hnydtrqf7().b[30][1]++, metrics.sttLatency > 2000)) {
      /* istanbul ignore next */
      cov_1hnydtrqf7().b[29][0]++;
      cov_1hnydtrqf7().s[52]++;
      logger_1.logger.warn('High STT latency detected', {
        sessionId,
        latency: metrics.sttLatency,
        threshold: 2000
      });
    } else
    /* istanbul ignore next */
    {
      cov_1hnydtrqf7().b[29][1]++;
    }
    cov_1hnydtrqf7().s[53]++;
    if (
    /* istanbul ignore next */
    (cov_1hnydtrqf7().b[34][0]++,
    /* istanbul ignore next */
    (cov_1hnydtrqf7().b[36][0]++, metrics === null) ||
    /* istanbul ignore next */
    (cov_1hnydtrqf7().b[36][1]++, metrics === void 0) ?
    /* istanbul ignore next */
    (cov_1hnydtrqf7().b[35][0]++, void 0) :
    /* istanbul ignore next */
    (cov_1hnydtrqf7().b[35][1]++, metrics.ttsLatency)) &&
    /* istanbul ignore next */
    (cov_1hnydtrqf7().b[34][1]++, metrics.ttsLatency > 1500)) {
      /* istanbul ignore next */
      cov_1hnydtrqf7().b[33][0]++;
      cov_1hnydtrqf7().s[54]++;
      logger_1.logger.warn('High TTS latency detected', {
        sessionId,
        latency: metrics.ttsLatency,
        threshold: 1500
      });
    } else
    /* istanbul ignore next */
    {
      cov_1hnydtrqf7().b[33][1]++;
    }
    cov_1hnydtrqf7().s[55]++;
    this.lastEventTime = now;
  }
  /**
   * Log transcript events with accuracy metrics
   */
  logTranscriptEvent(event, sessionId, text, confidence) {
    /* istanbul ignore next */
    cov_1hnydtrqf7().f[7]++;
    cov_1hnydtrqf7().s[56]++;
    this.logEvent(`voice_${event}`, {
      sessionId,
      textLength: text.length,
      confidence,
      preview: text.substring(0, 50) + (text.length > 50 ?
      /* istanbul ignore next */
      (cov_1hnydtrqf7().b[37][0]++, '...') :
      /* istanbul ignore next */
      (cov_1hnydtrqf7().b[37][1]++, ''))
    }, {
      text_length: text.length,
      confidence:
      /* istanbul ignore next */
      (cov_1hnydtrqf7().b[38][0]++, confidence) ||
      /* istanbul ignore next */
      (cov_1hnydtrqf7().b[38][1]++, 0)
    });
    // Track message count and accuracy
    /* istanbul ignore next */
    cov_1hnydtrqf7().s[57]++;
    if (event === 'transcript_final') {
      /* istanbul ignore next */
      cov_1hnydtrqf7().b[39][0]++;
      cov_1hnydtrqf7().s[58]++;
      this.sessionMetrics.messageCount = (
      /* istanbul ignore next */
      (cov_1hnydtrqf7().b[40][0]++, this.sessionMetrics.messageCount) ||
      /* istanbul ignore next */
      (cov_1hnydtrqf7().b[40][1]++, 0)) + 1;
      /* istanbul ignore next */
      cov_1hnydtrqf7().s[59]++;
      if (confidence) {
        /* istanbul ignore next */
        cov_1hnydtrqf7().b[41][0]++;
        const currentAccuracy =
        /* istanbul ignore next */
        (cov_1hnydtrqf7().s[60]++,
        /* istanbul ignore next */
        (cov_1hnydtrqf7().b[42][0]++, this.sessionMetrics.transcriptAccuracy) ||
        /* istanbul ignore next */
        (cov_1hnydtrqf7().b[42][1]++, 0));
        const messageCount =
        /* istanbul ignore next */
        (cov_1hnydtrqf7().s[61]++,
        /* istanbul ignore next */
        (cov_1hnydtrqf7().b[43][0]++, this.sessionMetrics.messageCount) ||
        /* istanbul ignore next */
        (cov_1hnydtrqf7().b[43][1]++, 1));
        /* istanbul ignore next */
        cov_1hnydtrqf7().s[62]++;
        this.sessionMetrics.transcriptAccuracy = (currentAccuracy * (messageCount - 1) + confidence) / messageCount;
      } else
      /* istanbul ignore next */
      {
        cov_1hnydtrqf7().b[41][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1hnydtrqf7().b[39][1]++;
    }
    // Log low confidence warnings
    cov_1hnydtrqf7().s[63]++;
    if (
    /* istanbul ignore next */
    (cov_1hnydtrqf7().b[45][0]++, confidence) &&
    /* istanbul ignore next */
    (cov_1hnydtrqf7().b[45][1]++, confidence < 0.7)) {
      /* istanbul ignore next */
      cov_1hnydtrqf7().b[44][0]++;
      cov_1hnydtrqf7().s[64]++;
      logger_1.logger.warn('Low transcript confidence', {
        sessionId,
        confidence,
        text: text.substring(0, 100),
        threshold: 0.7
      });
    } else
    /* istanbul ignore next */
    {
      cov_1hnydtrqf7().b[44][1]++;
    }
  }
  /**
   * Log session lifecycle events
   */
  logSessionEvent(event, sessionId, details) {
    /* istanbul ignore next */
    cov_1hnydtrqf7().f[8]++;
    const now =
    /* istanbul ignore next */
    (cov_1hnydtrqf7().s[65]++, Date.now());
    const sessionDuration =
    /* istanbul ignore next */
    (cov_1hnydtrqf7().s[66]++, this.sessionStartTime ?
    /* istanbul ignore next */
    (cov_1hnydtrqf7().b[46][0]++, now - this.sessionStartTime) :
    /* istanbul ignore next */
    (cov_1hnydtrqf7().b[46][1]++, 0));
    /* istanbul ignore next */
    cov_1hnydtrqf7().s[67]++;
    this.logEvent(`voice_${event}`, Object.assign({
      sessionId,
      sessionDuration
    }, details), {
      session_duration: sessionDuration,
      message_count:
      /* istanbul ignore next */
      (cov_1hnydtrqf7().b[47][0]++, this.sessionMetrics.messageCount) ||
      /* istanbul ignore next */
      (cov_1hnydtrqf7().b[47][1]++, 0),
      error_count:
      /* istanbul ignore next */
      (cov_1hnydtrqf7().b[48][0]++, this.sessionMetrics.errorCount) ||
      /* istanbul ignore next */
      (cov_1hnydtrqf7().b[48][1]++, 0)
    });
    // Update session metrics
    /* istanbul ignore next */
    cov_1hnydtrqf7().s[68]++;
    if (event === 'session_stopped') {
      /* istanbul ignore next */
      cov_1hnydtrqf7().b[49][0]++;
      cov_1hnydtrqf7().s[69]++;
      this.sessionMetrics.sessionDuration = sessionDuration;
      /* istanbul ignore next */
      cov_1hnydtrqf7().s[70]++;
      this.generateSessionSummary(sessionId);
    } else
    /* istanbul ignore next */
    {
      cov_1hnydtrqf7().b[49][1]++;
    }
  }
  /**
   * Handle and log voice system errors with context
   */
  logError(error, sessionId, context, shouldNotifyUser =
  /* istanbul ignore next */
  (cov_1hnydtrqf7().b[50][0]++, false)) {
    /* istanbul ignore next */
    cov_1hnydtrqf7().f[9]++;
    var _a;
    const errorContext =
    /* istanbul ignore next */
    (cov_1hnydtrqf7().s[71]++, Object.assign({
      sessionId,
      context,
      errorType: error.constructor.name
    }, error.additionalContext));
    // Log structured error
    /* istanbul ignore next */
    cov_1hnydtrqf7().s[72]++;
    this.logEvent('voice_error', {
      sessionId,
      errorMessage: error.message,
      errorType: error.constructor.name,
      context,
      stack:
      /* istanbul ignore next */
      (cov_1hnydtrqf7().b[52][0]++, (_a = error.stack) === null) ||
      /* istanbul ignore next */
      (cov_1hnydtrqf7().b[52][1]++, _a === void 0) ?
      /* istanbul ignore next */
      (cov_1hnydtrqf7().b[51][0]++, void 0) :
      /* istanbul ignore next */
      (cov_1hnydtrqf7().b[51][1]++, _a.substring(0, 500)) // Truncate stack trace
    });
    // Report to centralized error handling
    /* istanbul ignore next */
    cov_1hnydtrqf7().s[73]++;
    (0, error_utils_1.reportError)(error,
    /* istanbul ignore next */
    (cov_1hnydtrqf7().b[53][0]++, context) ||
    /* istanbul ignore next */
    (cov_1hnydtrqf7().b[53][1]++, 'Voice System Error'), errorContext);
    // Update error count
    /* istanbul ignore next */
    cov_1hnydtrqf7().s[74]++;
    this.sessionMetrics.errorCount = (
    /* istanbul ignore next */
    (cov_1hnydtrqf7().b[54][0]++, this.sessionMetrics.errorCount) ||
    /* istanbul ignore next */
    (cov_1hnydtrqf7().b[54][1]++, 0)) + 1;
    // Show user notification for critical errors
    /* istanbul ignore next */
    cov_1hnydtrqf7().s[75]++;
    if (shouldNotifyUser) {
      /* istanbul ignore next */
      cov_1hnydtrqf7().b[55][0]++;
      let userMessage =
      /* istanbul ignore next */
      (cov_1hnydtrqf7().s[76]++, 'Voice system error occurred');
      /* istanbul ignore next */
      cov_1hnydtrqf7().s[77]++;
      if (error instanceof VoiceConnectionError) {
        /* istanbul ignore next */
        cov_1hnydtrqf7().b[56][0]++;
        cov_1hnydtrqf7().s[78]++;
        userMessage = 'Connection to voice service lost. Attempting to reconnect...';
      } else {
        /* istanbul ignore next */
        cov_1hnydtrqf7().b[56][1]++;
        cov_1hnydtrqf7().s[79]++;
        if (error instanceof VoiceAudioError) {
          /* istanbul ignore next */
          cov_1hnydtrqf7().b[57][0]++;
          cov_1hnydtrqf7().s[80]++;
          userMessage = 'Audio processing error. Please check your microphone permissions.';
        } else {
          /* istanbul ignore next */
          cov_1hnydtrqf7().b[57][1]++;
          cov_1hnydtrqf7().s[81]++;
          if (error instanceof VoiceSessionError) {
            /* istanbul ignore next */
            cov_1hnydtrqf7().b[58][0]++;
            cov_1hnydtrqf7().s[82]++;
            userMessage = 'Voice session error. Please try restarting the interview.';
          } else
          /* istanbul ignore next */
          {
            cov_1hnydtrqf7().b[58][1]++;
          }
        }
      }
      /* istanbul ignore next */
      cov_1hnydtrqf7().s[83]++;
      (0, error_utils_1.showErrorNotification)(userMessage, context);
    } else
    /* istanbul ignore next */
    {
      cov_1hnydtrqf7().b[55][1]++;
    }
  }
  /**
   * Log performance metrics
   */
  logPerformanceMetric(metricName, value, sessionId, unit =
  /* istanbul ignore next */
  (cov_1hnydtrqf7().b[59][0]++, 'ms')) {
    /* istanbul ignore next */
    cov_1hnydtrqf7().f[10]++;
    cov_1hnydtrqf7().s[84]++;
    this.logEvent('voice_performance_metric', {
      sessionId,
      metricName,
      value,
      unit
    }, {
      [metricName]: value
    });
    // Log performance warnings
    const thresholds =
    /* istanbul ignore next */
    (cov_1hnydtrqf7().s[85]++, {
      'connection_time': 3000,
      'stt_latency': 2000,
      'tts_latency': 1500,
      'session_init_time': 5000
    });
    /* istanbul ignore next */
    cov_1hnydtrqf7().s[86]++;
    if (
    /* istanbul ignore next */
    (cov_1hnydtrqf7().b[61][0]++, thresholds[metricName]) &&
    /* istanbul ignore next */
    (cov_1hnydtrqf7().b[61][1]++, value > thresholds[metricName])) {
      /* istanbul ignore next */
      cov_1hnydtrqf7().b[60][0]++;
      cov_1hnydtrqf7().s[87]++;
      logger_1.logger.warn(`Performance threshold exceeded: ${metricName}`, {
        sessionId,
        value,
        threshold: thresholds[metricName],
        unit
      });
    } else
    /* istanbul ignore next */
    {
      cov_1hnydtrqf7().b[60][1]++;
    }
  }
  /**
   * Generate session summary for analytics
   */
  generateSessionSummary(sessionId) {
    /* istanbul ignore next */
    cov_1hnydtrqf7().f[11]++;
    const properties =
    /* istanbul ignore next */
    (cov_1hnydtrqf7().s[88]++, {
      sessionId
    });
    const measurements =
    /* istanbul ignore next */
    (cov_1hnydtrqf7().s[89]++, {
      duration:
      /* istanbul ignore next */
      (cov_1hnydtrqf7().b[62][0]++, this.sessionMetrics.sessionDuration) ||
      /* istanbul ignore next */
      (cov_1hnydtrqf7().b[62][1]++, 0),
      messageCount:
      /* istanbul ignore next */
      (cov_1hnydtrqf7().b[63][0]++, this.sessionMetrics.messageCount) ||
      /* istanbul ignore next */
      (cov_1hnydtrqf7().b[63][1]++, 0),
      errorCount:
      /* istanbul ignore next */
      (cov_1hnydtrqf7().b[64][0]++, this.sessionMetrics.errorCount) ||
      /* istanbul ignore next */
      (cov_1hnydtrqf7().b[64][1]++, 0),
      transcriptAccuracy:
      /* istanbul ignore next */
      (cov_1hnydtrqf7().b[65][0]++, this.sessionMetrics.transcriptAccuracy) ||
      /* istanbul ignore next */
      (cov_1hnydtrqf7().b[65][1]++, 0),
      connectionRetries:
      /* istanbul ignore next */
      (cov_1hnydtrqf7().b[66][0]++, this.connectionMetrics.retryCount) ||
      /* istanbul ignore next */
      (cov_1hnydtrqf7().b[66][1]++, 0),
      audioBufferIssues:
      /* istanbul ignore next */
      (cov_1hnydtrqf7().b[67][0]++, this.audioMetrics.bufferUnderruns) ||
      /* istanbul ignore next */
      (cov_1hnydtrqf7().b[67][1]++, 0),
      averageSttLatency:
      /* istanbul ignore next */
      (cov_1hnydtrqf7().b[68][0]++, this.audioMetrics.sttLatency) ||
      /* istanbul ignore next */
      (cov_1hnydtrqf7().b[68][1]++, 0),
      averageTtsLatency:
      /* istanbul ignore next */
      (cov_1hnydtrqf7().b[69][0]++, this.audioMetrics.ttsLatency) ||
      /* istanbul ignore next */
      (cov_1hnydtrqf7().b[69][1]++, 0)
    });
    /* istanbul ignore next */
    cov_1hnydtrqf7().s[90]++;
    this.logEvent('voice_session_summary', properties, measurements);
    /* istanbul ignore next */
    cov_1hnydtrqf7().s[91]++;
    logger_1.logger.info('Voice session summary', Object.assign(Object.assign({}, properties), measurements));
  }
  /**
   * Core event logging with Application Insights integration
   */
  logEvent(name, properties, measurements) {
    /* istanbul ignore next */
    cov_1hnydtrqf7().f[12]++;
    const event =
    /* istanbul ignore next */
    (cov_1hnydtrqf7().s[92]++, {
      name,
      timestamp: Date.now(),
      properties,
      measurements
    });
    // Store locally
    /* istanbul ignore next */
    cov_1hnydtrqf7().s[93]++;
    this.events.push(event);
    // Keep only last 100 events in memory
    /* istanbul ignore next */
    cov_1hnydtrqf7().s[94]++;
    if (this.events.length > 100) {
      /* istanbul ignore next */
      cov_1hnydtrqf7().b[70][0]++;
      cov_1hnydtrqf7().s[95]++;
      this.events = this.events.slice(-100);
    } else
    /* istanbul ignore next */
    {
      cov_1hnydtrqf7().b[70][1]++;
    }
    // Log to console for development
    cov_1hnydtrqf7().s[96]++;
    if (process.env.NODE_ENV === 'development') {
      /* istanbul ignore next */
      cov_1hnydtrqf7().b[71][0]++;
      cov_1hnydtrqf7().s[97]++;
      console.log(`🔍 [VoiceTelemetry] ${name}`, properties, measurements);
    } else
    /* istanbul ignore next */
    {
      cov_1hnydtrqf7().b[71][1]++;
    }
    // TODO: Integration with Azure Application Insights
    // if (window.appInsights) {
    //   window.appInsights.trackEvent({
    //     name: `voice_${name}`,
    //     properties,
    //     measurements
    //   });
    // }
    // Standard logging
    cov_1hnydtrqf7().s[98]++;
    logger_1.logger.info(`Voice telemetry: ${name}`, {
      properties,
      measurements
    });
  }
  /**
   * Get current session metrics
   */
  getMetrics() {
    /* istanbul ignore next */
    cov_1hnydtrqf7().f[13]++;
    cov_1hnydtrqf7().s[99]++;
    return {
      connection: this.connectionMetrics,
      audio: this.audioMetrics,
      session: this.sessionMetrics
    };
  }
  /**
   * Export telemetry data for analysis
   */
  exportTelemetryData() {
    /* istanbul ignore next */
    cov_1hnydtrqf7().f[14]++;
    cov_1hnydtrqf7().s[100]++;
    return [...this.events];
  }
  /**
   * Clear telemetry data
   */
  clearTelemetryData() {
    /* istanbul ignore next */
    cov_1hnydtrqf7().f[15]++;
    cov_1hnydtrqf7().s[101]++;
    this.events = [];
    /* istanbul ignore next */
    cov_1hnydtrqf7().s[102]++;
    this.connectionMetrics = {};
    /* istanbul ignore next */
    cov_1hnydtrqf7().s[103]++;
    this.audioMetrics = {
      bufferUnderruns: 0
    };
    /* istanbul ignore next */
    cov_1hnydtrqf7().s[104]++;
    this.sessionMetrics = {
      messageCount: 0,
      errorCount: 0
    };
  }
}
/* istanbul ignore next */
cov_1hnydtrqf7().s[105]++;
exports.VoiceTelemetryService = VoiceTelemetryService;
// Singleton instance
let voiceTelemetryInstance =
/* istanbul ignore next */
(cov_1hnydtrqf7().s[106]++, null);
/**
 * Get shared VoiceTelemetryService instance
 */
function getVoiceTelemetry() {
  /* istanbul ignore next */
  cov_1hnydtrqf7().f[16]++;
  cov_1hnydtrqf7().s[107]++;
  if (!voiceTelemetryInstance) {
    /* istanbul ignore next */
    cov_1hnydtrqf7().b[72][0]++;
    cov_1hnydtrqf7().s[108]++;
    voiceTelemetryInstance = new VoiceTelemetryService();
  } else
  /* istanbul ignore next */
  {
    cov_1hnydtrqf7().b[72][1]++;
  }
  cov_1hnydtrqf7().s[109]++;
  return voiceTelemetryInstance;
}
/**
 * Utility functions for common voice telemetry operations
 */
/* istanbul ignore next */
cov_1hnydtrqf7().s[110]++;
exports.VoiceTelemetry = {
  // Connection tracking
  trackConnection: (event, sessionId, metrics) => {
    /* istanbul ignore next */
    cov_1hnydtrqf7().f[17]++;
    cov_1hnydtrqf7().s[111]++;
    getVoiceTelemetry().logConnectionEvent(event, sessionId, metrics);
  },
  // Audio performance tracking
  trackAudioLatency: (type, latency, sessionId) => {
    /* istanbul ignore next */
    cov_1hnydtrqf7().f[18]++;
    const metrics =
    /* istanbul ignore next */
    (cov_1hnydtrqf7().s[112]++, type === 'stt' ?
    /* istanbul ignore next */
    (cov_1hnydtrqf7().b[73][0]++, {
      sttLatency: latency
    }) :
    /* istanbul ignore next */
    (cov_1hnydtrqf7().b[73][1]++, {
      ttsLatency: latency
    }));
    /* istanbul ignore next */
    cov_1hnydtrqf7().s[113]++;
    getVoiceTelemetry().logAudioEvent(`${type}_complete`, sessionId, metrics);
  },
  // Error tracking with user notifications
  trackError: (error, sessionId, context, notifyUser =
  /* istanbul ignore next */
  (cov_1hnydtrqf7().b[74][0]++, false)) => {
    /* istanbul ignore next */
    cov_1hnydtrqf7().f[19]++;
    cov_1hnydtrqf7().s[114]++;
    getVoiceTelemetry().logError(error, sessionId, context, notifyUser);
  },
  // Performance monitoring
  trackPerformance: (metric, value, sessionId) => {
    /* istanbul ignore next */
    cov_1hnydtrqf7().f[20]++;
    cov_1hnydtrqf7().s[115]++;
    getVoiceTelemetry().logPerformanceMetric(metric, value, sessionId);
  },
  // Session lifecycle
  startSession: (sessionId, userId) => {
    /* istanbul ignore next */
    cov_1hnydtrqf7().f[21]++;
    cov_1hnydtrqf7().s[116]++;
    getVoiceTelemetry().startSession(sessionId, userId);
  },
  endSession: sessionId => {
    /* istanbul ignore next */
    cov_1hnydtrqf7().f[22]++;
    cov_1hnydtrqf7().s[117]++;
    getVoiceTelemetry().logSessionEvent('session_stopped', sessionId);
  },
  // Singleton access methods
  getInstance: () => {
    /* istanbul ignore next */
    cov_1hnydtrqf7().f[23]++;
    cov_1hnydtrqf7().s[118]++;
    return getVoiceTelemetry();
  }
};
/**
 * Export singleton instance for convenience
 */
/* istanbul ignore next */
cov_1hnydtrqf7().s[119]++;
exports.voiceTelemetry = getVoiceTelemetry();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMWhueWR0cnFmNyIsInBhdGgiLCJoYXNoIiwiZ2xvYmFsIiwiRnVuY3Rpb24iLCJnY3YiLCJjb3ZlcmFnZURhdGEiLCJzdGF0ZW1lbnRNYXAiLCJzdGFydCIsImxpbmUiLCJjb2x1bW4iLCJlbmQiLCJmbk1hcCIsIm5hbWUiLCJkZWNsIiwibG9jIiwiYnJhbmNoTWFwIiwidHlwZSIsImxvY2F0aW9ucyIsInVuZGVmaW5lZCIsInMiLCJmIiwiYiIsImlucHV0U291cmNlTWFwIiwiZmlsZSIsIm1hcHBpbmdzIiwibmFtZXMiLCJzb3VyY2VzIiwic291cmNlc0NvbnRlbnQiLCJ2ZXJzaW9uIiwiX2NvdmVyYWdlU2NoZW1hIiwiY292ZXJhZ2UiLCJhY3R1YWxDb3ZlcmFnZSIsImV4cG9ydHMiLCJnZXRWb2ljZVRlbGVtZXRyeSIsImxvZ2dlcl8xIiwicmVxdWlyZSIsImVycm9yX3V0aWxzXzEiLCJWb2ljZUNvbm5lY3Rpb25FcnJvciIsIkVycm9yIiwiY29uc3RydWN0b3IiLCJtZXNzYWdlIiwic2Vzc2lvbklkIiwicmV0cnlDb3VudCIsImxhc3RFcnJvciIsIlZvaWNlQXVkaW9FcnJvciIsImF1ZGlvQ29udGV4dCIsInNhbXBsZVJhdGUiLCJWb2ljZVNlc3Npb25FcnJvciIsInNlc3Npb25TdGF0ZSIsImxhc3RBY3Rpb24iLCJWb2ljZVRlbGVtZXRyeVNlcnZpY2UiLCJldmVudHMiLCJzZXNzaW9uU3RhcnRUaW1lIiwibGFzdEV2ZW50VGltZSIsImNvbm5lY3Rpb25NZXRyaWNzIiwiYXVkaW9NZXRyaWNzIiwic2Vzc2lvbk1ldHJpY3MiLCJzdGFydFNlc3Npb24iLCJ1c2VySWQiLCJEYXRlIiwibm93IiwibG9nRXZlbnQiLCJ1c2VyQWdlbnQiLCJuYXZpZ2F0b3IiLCJ0aW1lc3RhbXAiLCJidWZmZXJVbmRlcnJ1bnMiLCJtZXNzYWdlQ291bnQiLCJlcnJvckNvdW50IiwibG9nQ29ubmVjdGlvbkV2ZW50IiwiZXZlbnQiLCJtZXRyaWNzIiwibGF0ZW5jeSIsIk9iamVjdCIsImFzc2lnbiIsImNvbm5lY3Rpb25fdGltZSIsImNvbm5lY3Rpb25UaW1lIiwicmV0cnlfY291bnQiLCJuZXR3b3JrX2xhdGVuY3kiLCJuZXR3b3JrTGF0ZW5jeSIsImRpc2Nvbm5lY3Rpb25SZWFzb24iLCJsb2dnZXIiLCJ3YXJuIiwibG9nQXVkaW9FdmVudCIsImV2ZW50TGF0ZW5jeSIsInN0dF9sYXRlbmN5Iiwic3R0TGF0ZW5jeSIsInR0c19sYXRlbmN5IiwidHRzTGF0ZW5jeSIsImF1ZGlvX3F1YWxpdHkiLCJhdWRpb1F1YWxpdHkiLCJ2b2ljZV9hY3Rpdml0eSIsInZvaWNlQWN0aXZpdHkiLCJ0aHJlc2hvbGQiLCJsb2dUcmFuc2NyaXB0RXZlbnQiLCJ0ZXh0IiwiY29uZmlkZW5jZSIsInRleHRMZW5ndGgiLCJsZW5ndGgiLCJwcmV2aWV3Iiwic3Vic3RyaW5nIiwidGV4dF9sZW5ndGgiLCJjdXJyZW50QWNjdXJhY3kiLCJ0cmFuc2NyaXB0QWNjdXJhY3kiLCJsb2dTZXNzaW9uRXZlbnQiLCJkZXRhaWxzIiwic2Vzc2lvbkR1cmF0aW9uIiwic2Vzc2lvbl9kdXJhdGlvbiIsIm1lc3NhZ2VfY291bnQiLCJlcnJvcl9jb3VudCIsImdlbmVyYXRlU2Vzc2lvblN1bW1hcnkiLCJsb2dFcnJvciIsImVycm9yIiwiY29udGV4dCIsInNob3VsZE5vdGlmeVVzZXIiLCJlcnJvckNvbnRleHQiLCJlcnJvclR5cGUiLCJhZGRpdGlvbmFsQ29udGV4dCIsImVycm9yTWVzc2FnZSIsInN0YWNrIiwiX2EiLCJyZXBvcnRFcnJvciIsInVzZXJNZXNzYWdlIiwic2hvd0Vycm9yTm90aWZpY2F0aW9uIiwibG9nUGVyZm9ybWFuY2VNZXRyaWMiLCJtZXRyaWNOYW1lIiwidmFsdWUiLCJ1bml0IiwidGhyZXNob2xkcyIsInByb3BlcnRpZXMiLCJtZWFzdXJlbWVudHMiLCJkdXJhdGlvbiIsImNvbm5lY3Rpb25SZXRyaWVzIiwiYXVkaW9CdWZmZXJJc3N1ZXMiLCJhdmVyYWdlU3R0TGF0ZW5jeSIsImF2ZXJhZ2VUdHNMYXRlbmN5IiwiaW5mbyIsInB1c2giLCJzbGljZSIsInByb2Nlc3MiLCJlbnYiLCJOT0RFX0VOViIsImNvbnNvbGUiLCJsb2ciLCJnZXRNZXRyaWNzIiwiY29ubmVjdGlvbiIsImF1ZGlvIiwic2Vzc2lvbiIsImV4cG9ydFRlbGVtZXRyeURhdGEiLCJjbGVhclRlbGVtZXRyeURhdGEiLCJ2b2ljZVRlbGVtZXRyeUluc3RhbmNlIiwiVm9pY2VUZWxlbWV0cnkiLCJ0cmFja0Nvbm5lY3Rpb24iLCJ0cmFja0F1ZGlvTGF0ZW5jeSIsInRyYWNrRXJyb3IiLCJub3RpZnlVc2VyIiwidHJhY2tQZXJmb3JtYW5jZSIsIm1ldHJpYyIsImVuZFNlc3Npb24iLCJnZXRJbnN0YW5jZSIsInZvaWNlVGVsZW1ldHJ5Il0sInNvdXJjZXMiOlsiL1VzZXJzL2Rpa3NoYW50dmFzaGlzdGhhL1ByZXBCZXR0ci9saWIvYXp1cmUtYWktZm91bmRyeS92b2ljZS92b2ljZS10ZWxlbWV0cnkudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBBenVyZSBBSSBGb3VuZHJ5IFZvaWNlIFRlbGVtZXRyeVxuICogXG4gKiBQcm92aWRlcyBzdHJ1Y3R1cmVkIGxvZ2dpbmcsIGVycm9yIGhhbmRsaW5nLCBhbmQgbWV0cmljcyBjb2xsZWN0aW9uXG4gKiBzcGVjaWZpY2FsbHkgZm9yIHRoZSB2b2ljZSBzeXN0ZW0gd2l0aCBBcHBsaWNhdGlvbiBJbnNpZ2h0cyBpbnRlZ3JhdGlvbi5cbiAqL1xuXG5pbXBvcnQgeyBsb2dnZXIgfSBmcm9tICdAL2xpYi91dGlscy9sb2dnZXInO1xuaW1wb3J0IHsgcmVwb3J0RXJyb3IsIHNob3dFcnJvck5vdGlmaWNhdGlvbiB9IGZyb20gJ0AvbGliL3V0aWxzL2Vycm9yLXV0aWxzJztcblxuLy8gVHlwZSBkZWZpbml0aW9ucyBmb3IgdGVsZW1ldHJ5IGV2ZW50c1xuZXhwb3J0IGludGVyZmFjZSBWb2ljZVRlbGVtZXRyeUV2ZW50IHtcbiAgbmFtZTogc3RyaW5nO1xuICB0aW1lc3RhbXA6IG51bWJlcjtcbiAgc2Vzc2lvbklkPzogc3RyaW5nO1xuICB1c2VySWQ/OiBzdHJpbmc7XG4gIHByb3BlcnRpZXM/OiBSZWNvcmQ8c3RyaW5nLCBhbnk+O1xuICBtZWFzdXJlbWVudHM/OiBSZWNvcmQ8c3RyaW5nLCBudW1iZXI+O1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIENvbm5lY3Rpb25NZXRyaWNzIHtcbiAgY29ubmVjdGlvblRpbWU6IG51bWJlcjtcbiAgcmV0cnlDb3VudDogbnVtYmVyO1xuICByZWNvbm5lY3RDb3VudDogbnVtYmVyO1xuICBkaXNjb25uZWN0aW9uUmVhc29uPzogc3RyaW5nO1xuICBuZXR3b3JrTGF0ZW5jeT86IG51bWJlcjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBBdWRpb01ldHJpY3Mge1xuICBzdHRMYXRlbmN5OiBudW1iZXI7ICAgICAgLy8gU3BlZWNoLXRvLXRleHQgbGF0ZW5jeVxuICB0dHNMYXRlbmN5OiBudW1iZXI7ICAgICAgLy8gVGV4dC10by1zcGVlY2ggbGF0ZW5jeVxuICBhdWRpb1F1YWxpdHk6IG51bWJlcjsgICAgLy8gMC0xIHF1YWxpdHkgc2NvcmVcbiAgdm9pY2VBY3Rpdml0eTogbnVtYmVyOyAgIC8vIFZvaWNlIGFjdGl2aXR5IGRldGVjdGlvbiBzY29yZVxuICBidWZmZXJVbmRlcnJ1bnM6IG51bWJlcjsgLy8gQXVkaW8gYnVmZmVyIGlzc3Vlc1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFNlc3Npb25NZXRyaWNzIHtcbiAgc2Vzc2lvbkR1cmF0aW9uOiBudW1iZXI7XG4gIG1lc3NhZ2VDb3VudDogbnVtYmVyO1xuICB0cmFuc2NyaXB0QWNjdXJhY3k6IG51bWJlcjtcbiAgZXJyb3JDb3VudDogbnVtYmVyO1xuICB1c2VyU2F0aXNmYWN0aW9uPzogbnVtYmVyO1xufVxuXG4vKipcbiAqIFZvaWNlIHN5c3RlbSBzcGVjaWZpYyBlcnJvcnMgd2l0aCBjb250ZXh0XG4gKi9cbmV4cG9ydCBjbGFzcyBWb2ljZUNvbm5lY3Rpb25FcnJvciBleHRlbmRzIEVycm9yIHtcbiAgY29uc3RydWN0b3IoXG4gICAgbWVzc2FnZTogc3RyaW5nLFxuICAgIHB1YmxpYyBzZXNzaW9uSWQ/OiBzdHJpbmcsXG4gICAgcHVibGljIHJldHJ5Q291bnQ/OiBudW1iZXIsXG4gICAgcHVibGljIGxhc3RFcnJvcj86IEVycm9yXG4gICkge1xuICAgIHN1cGVyKG1lc3NhZ2UpO1xuICAgIHRoaXMubmFtZSA9ICdWb2ljZUNvbm5lY3Rpb25FcnJvcic7XG4gIH1cbn1cblxuZXhwb3J0IGNsYXNzIFZvaWNlQXVkaW9FcnJvciBleHRlbmRzIEVycm9yIHtcbiAgY29uc3RydWN0b3IoXG4gICAgbWVzc2FnZTogc3RyaW5nLFxuICAgIHB1YmxpYyBzZXNzaW9uSWQ/OiBzdHJpbmcsXG4gICAgcHVibGljIGF1ZGlvQ29udGV4dD86IGFueSxcbiAgICBwdWJsaWMgc2FtcGxlUmF0ZT86IG51bWJlclxuICApIHtcbiAgICBzdXBlcihtZXNzYWdlKTtcbiAgICB0aGlzLm5hbWUgPSAnVm9pY2VBdWRpb0Vycm9yJztcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgVm9pY2VTZXNzaW9uRXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gIGNvbnN0cnVjdG9yKFxuICAgIG1lc3NhZ2U6IHN0cmluZyxcbiAgICBwdWJsaWMgc2Vzc2lvbklkPzogc3RyaW5nLFxuICAgIHB1YmxpYyBzZXNzaW9uU3RhdGU/OiBzdHJpbmcsXG4gICAgcHVibGljIGxhc3RBY3Rpb24/OiBzdHJpbmdcbiAgKSB7XG4gICAgc3VwZXIobWVzc2FnZSk7XG4gICAgdGhpcy5uYW1lID0gJ1ZvaWNlU2Vzc2lvbkVycm9yJztcbiAgfVxufVxuXG4vKipcbiAqIFZvaWNlIFRlbGVtZXRyeSBTZXJ2aWNlXG4gKi9cbmV4cG9ydCBjbGFzcyBWb2ljZVRlbGVtZXRyeVNlcnZpY2Uge1xuICBwcml2YXRlIGV2ZW50czogVm9pY2VUZWxlbWV0cnlFdmVudFtdID0gW107XG4gIHByaXZhdGUgc2Vzc2lvblN0YXJ0VGltZTogbnVtYmVyID0gMDtcbiAgcHJpdmF0ZSBsYXN0RXZlbnRUaW1lOiBudW1iZXIgPSAwO1xuICBcbiAgLy8gTWV0cmljcyBhZ2dyZWdhdGlvblxuICBwcml2YXRlIGNvbm5lY3Rpb25NZXRyaWNzOiBQYXJ0aWFsPENvbm5lY3Rpb25NZXRyaWNzPiA9IHt9O1xuICBwcml2YXRlIGF1ZGlvTWV0cmljczogUGFydGlhbDxBdWRpb01ldHJpY3M+ID0ge307XG4gIHByaXZhdGUgc2Vzc2lvbk1ldHJpY3M6IFBhcnRpYWw8U2Vzc2lvbk1ldHJpY3M+ID0ge307XG5cbiAgLyoqXG4gICAqIEluaXRpYWxpemUgdGVsZW1ldHJ5IGZvciBhIHNlc3Npb25cbiAgICovXG4gIHN0YXJ0U2Vzc2lvbihzZXNzaW9uSWQ6IHN0cmluZywgdXNlcklkPzogc3RyaW5nKTogdm9pZCB7XG4gICAgdGhpcy5zZXNzaW9uU3RhcnRUaW1lID0gRGF0ZS5ub3coKTtcbiAgICB0aGlzLmxhc3RFdmVudFRpbWUgPSB0aGlzLnNlc3Npb25TdGFydFRpbWU7XG4gICAgXG4gICAgdGhpcy5sb2dFdmVudCgndm9pY2Vfc2Vzc2lvbl9zdGFydGVkJywge1xuICAgICAgc2Vzc2lvbklkLFxuICAgICAgdXNlcklkLFxuICAgICAgdXNlckFnZW50OiBuYXZpZ2F0b3IudXNlckFnZW50LFxuICAgICAgdGltZXN0YW1wOiB0aGlzLnNlc3Npb25TdGFydFRpbWVcbiAgICB9KTtcblxuICAgIC8vIEluaXRpYWxpemUgbWV0cmljc1xuICAgIHRoaXMuY29ubmVjdGlvbk1ldHJpY3MgPSB7fTtcbiAgICB0aGlzLmF1ZGlvTWV0cmljcyA9IHsgYnVmZmVyVW5kZXJydW5zOiAwIH07XG4gICAgdGhpcy5zZXNzaW9uTWV0cmljcyA9IHsgbWVzc2FnZUNvdW50OiAwLCBlcnJvckNvdW50OiAwIH07XG4gIH1cblxuICAvKipcbiAgICogTG9nIGNvbm5lY3Rpb24gZXZlbnRzIHdpdGggbWV0cmljc1xuICAgKi9cbiAgbG9nQ29ubmVjdGlvbkV2ZW50KFxuICAgIGV2ZW50OiAnY29ubmVjdGluZycgfCAnY29ubmVjdGVkJyB8ICdkaXNjb25uZWN0ZWQnIHwgJ3JlY29ubmVjdGluZycgfCAnZmFpbGVkJyxcbiAgICBzZXNzaW9uSWQ6IHN0cmluZyxcbiAgICBtZXRyaWNzPzogUGFydGlhbDxDb25uZWN0aW9uTWV0cmljcz5cbiAgKTogdm9pZCB7XG4gICAgY29uc3Qgbm93ID0gRGF0ZS5ub3coKTtcbiAgICBjb25zdCBsYXRlbmN5ID0gbm93IC0gdGhpcy5sYXN0RXZlbnRUaW1lO1xuXG4gICAgdGhpcy5sb2dFdmVudChgdm9pY2VfY29ubmVjdGlvbl8ke2V2ZW50fWAsIHtcbiAgICAgIHNlc3Npb25JZCxcbiAgICAgIGxhdGVuY3ksXG4gICAgICAuLi5tZXRyaWNzXG4gICAgfSwge1xuICAgICAgY29ubmVjdGlvbl90aW1lOiBtZXRyaWNzPy5jb25uZWN0aW9uVGltZSB8fCAwLFxuICAgICAgcmV0cnlfY291bnQ6IG1ldHJpY3M/LnJldHJ5Q291bnQgfHwgMCxcbiAgICAgIG5ldHdvcmtfbGF0ZW5jeTogbWV0cmljcz8ubmV0d29ya0xhdGVuY3kgfHwgbGF0ZW5jeVxuICAgIH0pO1xuXG4gICAgLy8gVXBkYXRlIGNvbm5lY3Rpb24gbWV0cmljc1xuICAgIE9iamVjdC5hc3NpZ24odGhpcy5jb25uZWN0aW9uTWV0cmljcywgbWV0cmljcyk7XG5cbiAgICAvLyBMb2cgc3BlY2lmaWMgY29ubmVjdGlvbiBpc3N1ZXNcbiAgICBpZiAoZXZlbnQgPT09ICdmYWlsZWQnIHx8IGV2ZW50ID09PSAnZGlzY29ubmVjdGVkJykge1xuICAgICAgdGhpcy5zZXNzaW9uTWV0cmljcy5lcnJvckNvdW50ID0gKHRoaXMuc2Vzc2lvbk1ldHJpY3MuZXJyb3JDb3VudCB8fCAwKSArIDE7XG4gICAgICBcbiAgICAgIGlmIChtZXRyaWNzPy5kaXNjb25uZWN0aW9uUmVhc29uKSB7XG4gICAgICAgIGxvZ2dlci53YXJuKGBWb2ljZSBjb25uZWN0aW9uICR7ZXZlbnR9OiAke21ldHJpY3MuZGlzY29ubmVjdGlvblJlYXNvbn1gLCB7XG4gICAgICAgICAgc2Vzc2lvbklkLFxuICAgICAgICAgIHJldHJ5Q291bnQ6IG1ldHJpY3MucmV0cnlDb3VudCxcbiAgICAgICAgICAuLi5tZXRyaWNzXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH1cblxuICAgIHRoaXMubGFzdEV2ZW50VGltZSA9IG5vdztcbiAgfVxuXG4gIC8qKlxuICAgKiBMb2cgYXVkaW8gcHJvY2Vzc2luZyBldmVudHMgd2l0aCBwZXJmb3JtYW5jZSBtZXRyaWNzXG4gICAqL1xuICBsb2dBdWRpb0V2ZW50KFxuICAgIGV2ZW50OiAnc3R0X3N0YXJ0JyB8ICdzdHRfY29tcGxldGUnIHwgJ3R0c19zdGFydCcgfCAndHRzX2NvbXBsZXRlJyB8ICdhdWRpb19lcnJvcicgfCAnYnVmZmVyX3VuZGVycnVuJyxcbiAgICBzZXNzaW9uSWQ6IHN0cmluZyxcbiAgICBtZXRyaWNzPzogUGFydGlhbDxBdWRpb01ldHJpY3M+XG4gICk6IHZvaWQge1xuICAgIGNvbnN0IG5vdyA9IERhdGUubm93KCk7XG4gICAgY29uc3QgZXZlbnRMYXRlbmN5ID0gbm93IC0gdGhpcy5sYXN0RXZlbnRUaW1lO1xuXG4gICAgdGhpcy5sb2dFdmVudChgdm9pY2VfYXVkaW9fJHtldmVudH1gLCB7XG4gICAgICBzZXNzaW9uSWQsXG4gICAgICBldmVudExhdGVuY3ksXG4gICAgICAuLi5tZXRyaWNzXG4gICAgfSwge1xuICAgICAgc3R0X2xhdGVuY3k6IG1ldHJpY3M/LnN0dExhdGVuY3kgfHwgMCxcbiAgICAgIHR0c19sYXRlbmN5OiBtZXRyaWNzPy50dHNMYXRlbmN5IHx8IDAsXG4gICAgICBhdWRpb19xdWFsaXR5OiBtZXRyaWNzPy5hdWRpb1F1YWxpdHkgfHwgMCxcbiAgICAgIHZvaWNlX2FjdGl2aXR5OiBtZXRyaWNzPy52b2ljZUFjdGl2aXR5IHx8IDBcbiAgICB9KTtcblxuICAgIC8vIFVwZGF0ZSBhdWRpbyBtZXRyaWNzXG4gICAgT2JqZWN0LmFzc2lnbih0aGlzLmF1ZGlvTWV0cmljcywgbWV0cmljcyk7XG5cbiAgICAvLyBUcmFjayBidWZmZXIgaXNzdWVzXG4gICAgaWYgKGV2ZW50ID09PSAnYnVmZmVyX3VuZGVycnVuJykge1xuICAgICAgdGhpcy5hdWRpb01ldHJpY3MuYnVmZmVyVW5kZXJydW5zID0gKHRoaXMuYXVkaW9NZXRyaWNzLmJ1ZmZlclVuZGVycnVucyB8fCAwKSArIDE7XG4gICAgICBsb2dnZXIud2FybignQXVkaW8gYnVmZmVyIHVuZGVycnVuIGRldGVjdGVkJywgeyBzZXNzaW9uSWQsIC4uLm1ldHJpY3MgfSk7XG4gICAgfVxuXG4gICAgLy8gTG9nIHBlcmZvcm1hbmNlIHdhcm5pbmdzXG4gICAgaWYgKG1ldHJpY3M/LnN0dExhdGVuY3kgJiYgbWV0cmljcy5zdHRMYXRlbmN5ID4gMjAwMCkge1xuICAgICAgbG9nZ2VyLndhcm4oJ0hpZ2ggU1RUIGxhdGVuY3kgZGV0ZWN0ZWQnLCB7IFxuICAgICAgICBzZXNzaW9uSWQsIFxuICAgICAgICBsYXRlbmN5OiBtZXRyaWNzLnN0dExhdGVuY3ksXG4gICAgICAgIHRocmVzaG9sZDogMjAwMCBcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGlmIChtZXRyaWNzPy50dHNMYXRlbmN5ICYmIG1ldHJpY3MudHRzTGF0ZW5jeSA+IDE1MDApIHtcbiAgICAgIGxvZ2dlci53YXJuKCdIaWdoIFRUUyBsYXRlbmN5IGRldGVjdGVkJywgeyBcbiAgICAgICAgc2Vzc2lvbklkLCBcbiAgICAgICAgbGF0ZW5jeTogbWV0cmljcy50dHNMYXRlbmN5LFxuICAgICAgICB0aHJlc2hvbGQ6IDE1MDAgXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICB0aGlzLmxhc3RFdmVudFRpbWUgPSBub3c7XG4gIH1cblxuICAvKipcbiAgICogTG9nIHRyYW5zY3JpcHQgZXZlbnRzIHdpdGggYWNjdXJhY3kgbWV0cmljc1xuICAgKi9cbiAgbG9nVHJhbnNjcmlwdEV2ZW50KFxuICAgIGV2ZW50OiAndHJhbnNjcmlwdF9wYXJ0aWFsJyB8ICd0cmFuc2NyaXB0X2ZpbmFsJyB8ICd0cmFuc2NyaXB0X2Vycm9yJyxcbiAgICBzZXNzaW9uSWQ6IHN0cmluZyxcbiAgICB0ZXh0OiBzdHJpbmcsXG4gICAgY29uZmlkZW5jZT86IG51bWJlclxuICApOiB2b2lkIHtcbiAgICB0aGlzLmxvZ0V2ZW50KGB2b2ljZV8ke2V2ZW50fWAsIHtcbiAgICAgIHNlc3Npb25JZCxcbiAgICAgIHRleHRMZW5ndGg6IHRleHQubGVuZ3RoLFxuICAgICAgY29uZmlkZW5jZSxcbiAgICAgIHByZXZpZXc6IHRleHQuc3Vic3RyaW5nKDAsIDUwKSArICh0ZXh0Lmxlbmd0aCA+IDUwID8gJy4uLicgOiAnJylcbiAgICB9LCB7XG4gICAgICB0ZXh0X2xlbmd0aDogdGV4dC5sZW5ndGgsXG4gICAgICBjb25maWRlbmNlOiBjb25maWRlbmNlIHx8IDBcbiAgICB9KTtcblxuICAgIC8vIFRyYWNrIG1lc3NhZ2UgY291bnQgYW5kIGFjY3VyYWN5XG4gICAgaWYgKGV2ZW50ID09PSAndHJhbnNjcmlwdF9maW5hbCcpIHtcbiAgICAgIHRoaXMuc2Vzc2lvbk1ldHJpY3MubWVzc2FnZUNvdW50ID0gKHRoaXMuc2Vzc2lvbk1ldHJpY3MubWVzc2FnZUNvdW50IHx8IDApICsgMTtcbiAgICAgIFxuICAgICAgaWYgKGNvbmZpZGVuY2UpIHtcbiAgICAgICAgY29uc3QgY3VycmVudEFjY3VyYWN5ID0gdGhpcy5zZXNzaW9uTWV0cmljcy50cmFuc2NyaXB0QWNjdXJhY3kgfHwgMDtcbiAgICAgICAgY29uc3QgbWVzc2FnZUNvdW50ID0gdGhpcy5zZXNzaW9uTWV0cmljcy5tZXNzYWdlQ291bnQgfHwgMTtcbiAgICAgICAgdGhpcy5zZXNzaW9uTWV0cmljcy50cmFuc2NyaXB0QWNjdXJhY3kgPSAoY3VycmVudEFjY3VyYWN5ICogKG1lc3NhZ2VDb3VudCAtIDEpICsgY29uZmlkZW5jZSkgLyBtZXNzYWdlQ291bnQ7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gTG9nIGxvdyBjb25maWRlbmNlIHdhcm5pbmdzXG4gICAgaWYgKGNvbmZpZGVuY2UgJiYgY29uZmlkZW5jZSA8IDAuNykge1xuICAgICAgbG9nZ2VyLndhcm4oJ0xvdyB0cmFuc2NyaXB0IGNvbmZpZGVuY2UnLCB7IFxuICAgICAgICBzZXNzaW9uSWQsIFxuICAgICAgICBjb25maWRlbmNlLCBcbiAgICAgICAgdGV4dDogdGV4dC5zdWJzdHJpbmcoMCwgMTAwKSxcbiAgICAgICAgdGhyZXNob2xkOiAwLjcgXG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogTG9nIHNlc3Npb24gbGlmZWN5Y2xlIGV2ZW50c1xuICAgKi9cbiAgbG9nU2Vzc2lvbkV2ZW50KFxuICAgIGV2ZW50OiAnc2Vzc2lvbl9jcmVhdGVkJyB8ICdzZXNzaW9uX2FjdGl2ZScgfCAnc2Vzc2lvbl9zdG9wcGVkJyB8ICdzZXNzaW9uX2Vycm9yJyxcbiAgICBzZXNzaW9uSWQ6IHN0cmluZyxcbiAgICBkZXRhaWxzPzogUmVjb3JkPHN0cmluZywgYW55PlxuICApOiB2b2lkIHtcbiAgICBjb25zdCBub3cgPSBEYXRlLm5vdygpO1xuICAgIGNvbnN0IHNlc3Npb25EdXJhdGlvbiA9IHRoaXMuc2Vzc2lvblN0YXJ0VGltZSA/IG5vdyAtIHRoaXMuc2Vzc2lvblN0YXJ0VGltZSA6IDA7XG5cbiAgICB0aGlzLmxvZ0V2ZW50KGB2b2ljZV8ke2V2ZW50fWAsIHtcbiAgICAgIHNlc3Npb25JZCxcbiAgICAgIHNlc3Npb25EdXJhdGlvbixcbiAgICAgIC4uLmRldGFpbHNcbiAgICB9LCB7XG4gICAgICBzZXNzaW9uX2R1cmF0aW9uOiBzZXNzaW9uRHVyYXRpb24sXG4gICAgICBtZXNzYWdlX2NvdW50OiB0aGlzLnNlc3Npb25NZXRyaWNzLm1lc3NhZ2VDb3VudCB8fCAwLFxuICAgICAgZXJyb3JfY291bnQ6IHRoaXMuc2Vzc2lvbk1ldHJpY3MuZXJyb3JDb3VudCB8fCAwXG4gICAgfSk7XG5cbiAgICAvLyBVcGRhdGUgc2Vzc2lvbiBtZXRyaWNzXG4gICAgaWYgKGV2ZW50ID09PSAnc2Vzc2lvbl9zdG9wcGVkJykge1xuICAgICAgdGhpcy5zZXNzaW9uTWV0cmljcy5zZXNzaW9uRHVyYXRpb24gPSBzZXNzaW9uRHVyYXRpb247XG4gICAgICB0aGlzLmdlbmVyYXRlU2Vzc2lvblN1bW1hcnkoc2Vzc2lvbklkKTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogSGFuZGxlIGFuZCBsb2cgdm9pY2Ugc3lzdGVtIGVycm9ycyB3aXRoIGNvbnRleHRcbiAgICovXG4gIGxvZ0Vycm9yKFxuICAgIGVycm9yOiBFcnJvciB8IFZvaWNlQ29ubmVjdGlvbkVycm9yIHwgVm9pY2VBdWRpb0Vycm9yIHwgVm9pY2VTZXNzaW9uRXJyb3IsXG4gICAgc2Vzc2lvbklkPzogc3RyaW5nLFxuICAgIGNvbnRleHQ/OiBzdHJpbmcsXG4gICAgc2hvdWxkTm90aWZ5VXNlciA9IGZhbHNlXG4gICk6IHZvaWQge1xuICAgIGNvbnN0IGVycm9yQ29udGV4dCA9IHtcbiAgICAgIHNlc3Npb25JZCxcbiAgICAgIGNvbnRleHQsXG4gICAgICBlcnJvclR5cGU6IGVycm9yLmNvbnN0cnVjdG9yLm5hbWUsXG4gICAgICAuLi4oZXJyb3IgYXMgYW55KS5hZGRpdGlvbmFsQ29udGV4dFxuICAgIH07XG5cbiAgICAvLyBMb2cgc3RydWN0dXJlZCBlcnJvclxuICAgIHRoaXMubG9nRXZlbnQoJ3ZvaWNlX2Vycm9yJywge1xuICAgICAgc2Vzc2lvbklkLFxuICAgICAgZXJyb3JNZXNzYWdlOiBlcnJvci5tZXNzYWdlLFxuICAgICAgZXJyb3JUeXBlOiBlcnJvci5jb25zdHJ1Y3Rvci5uYW1lLFxuICAgICAgY29udGV4dCxcbiAgICAgIHN0YWNrOiBlcnJvci5zdGFjaz8uc3Vic3RyaW5nKDAsIDUwMCkgLy8gVHJ1bmNhdGUgc3RhY2sgdHJhY2VcbiAgICB9KTtcblxuICAgIC8vIFJlcG9ydCB0byBjZW50cmFsaXplZCBlcnJvciBoYW5kbGluZ1xuICAgIHJlcG9ydEVycm9yKGVycm9yLCBjb250ZXh0IHx8ICdWb2ljZSBTeXN0ZW0gRXJyb3InLCBlcnJvckNvbnRleHQpO1xuXG4gICAgLy8gVXBkYXRlIGVycm9yIGNvdW50XG4gICAgdGhpcy5zZXNzaW9uTWV0cmljcy5lcnJvckNvdW50ID0gKHRoaXMuc2Vzc2lvbk1ldHJpY3MuZXJyb3JDb3VudCB8fCAwKSArIDE7XG5cbiAgICAvLyBTaG93IHVzZXIgbm90aWZpY2F0aW9uIGZvciBjcml0aWNhbCBlcnJvcnNcbiAgICBpZiAoc2hvdWxkTm90aWZ5VXNlcikge1xuICAgICAgbGV0IHVzZXJNZXNzYWdlID0gJ1ZvaWNlIHN5c3RlbSBlcnJvciBvY2N1cnJlZCc7XG4gICAgICBcbiAgICAgIGlmIChlcnJvciBpbnN0YW5jZW9mIFZvaWNlQ29ubmVjdGlvbkVycm9yKSB7XG4gICAgICAgIHVzZXJNZXNzYWdlID0gJ0Nvbm5lY3Rpb24gdG8gdm9pY2Ugc2VydmljZSBsb3N0LiBBdHRlbXB0aW5nIHRvIHJlY29ubmVjdC4uLic7XG4gICAgICB9IGVsc2UgaWYgKGVycm9yIGluc3RhbmNlb2YgVm9pY2VBdWRpb0Vycm9yKSB7XG4gICAgICAgIHVzZXJNZXNzYWdlID0gJ0F1ZGlvIHByb2Nlc3NpbmcgZXJyb3IuIFBsZWFzZSBjaGVjayB5b3VyIG1pY3JvcGhvbmUgcGVybWlzc2lvbnMuJztcbiAgICAgIH0gZWxzZSBpZiAoZXJyb3IgaW5zdGFuY2VvZiBWb2ljZVNlc3Npb25FcnJvcikge1xuICAgICAgICB1c2VyTWVzc2FnZSA9ICdWb2ljZSBzZXNzaW9uIGVycm9yLiBQbGVhc2UgdHJ5IHJlc3RhcnRpbmcgdGhlIGludGVydmlldy4nO1xuICAgICAgfVxuXG4gICAgICBzaG93RXJyb3JOb3RpZmljYXRpb24odXNlck1lc3NhZ2UsIGNvbnRleHQpO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBMb2cgcGVyZm9ybWFuY2UgbWV0cmljc1xuICAgKi9cbiAgbG9nUGVyZm9ybWFuY2VNZXRyaWMoXG4gICAgbWV0cmljTmFtZTogc3RyaW5nLFxuICAgIHZhbHVlOiBudW1iZXIsXG4gICAgc2Vzc2lvbklkPzogc3RyaW5nLFxuICAgIHVuaXQgPSAnbXMnXG4gICk6IHZvaWQge1xuICAgIHRoaXMubG9nRXZlbnQoJ3ZvaWNlX3BlcmZvcm1hbmNlX21ldHJpYycsIHtcbiAgICAgIHNlc3Npb25JZCxcbiAgICAgIG1ldHJpY05hbWUsXG4gICAgICB2YWx1ZSxcbiAgICAgIHVuaXRcbiAgICB9LCB7XG4gICAgICBbbWV0cmljTmFtZV06IHZhbHVlXG4gICAgfSk7XG5cbiAgICAvLyBMb2cgcGVyZm9ybWFuY2Ugd2FybmluZ3NcbiAgICBjb25zdCB0aHJlc2hvbGRzOiBSZWNvcmQ8c3RyaW5nLCBudW1iZXI+ID0ge1xuICAgICAgJ2Nvbm5lY3Rpb25fdGltZSc6IDMwMDAsXG4gICAgICAnc3R0X2xhdGVuY3knOiAyMDAwLFxuICAgICAgJ3R0c19sYXRlbmN5JzogMTUwMCxcbiAgICAgICdzZXNzaW9uX2luaXRfdGltZSc6IDUwMDBcbiAgICB9O1xuXG4gICAgaWYgKHRocmVzaG9sZHNbbWV0cmljTmFtZV0gJiYgdmFsdWUgPiB0aHJlc2hvbGRzW21ldHJpY05hbWVdKSB7XG4gICAgICBsb2dnZXIud2FybihgUGVyZm9ybWFuY2UgdGhyZXNob2xkIGV4Y2VlZGVkOiAke21ldHJpY05hbWV9YCwge1xuICAgICAgICBzZXNzaW9uSWQsXG4gICAgICAgIHZhbHVlLFxuICAgICAgICB0aHJlc2hvbGQ6IHRocmVzaG9sZHNbbWV0cmljTmFtZV0sXG4gICAgICAgIHVuaXRcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBHZW5lcmF0ZSBzZXNzaW9uIHN1bW1hcnkgZm9yIGFuYWx5dGljc1xuICAgKi9cbiAgcHJpdmF0ZSBnZW5lcmF0ZVNlc3Npb25TdW1tYXJ5KHNlc3Npb25JZDogc3RyaW5nKTogdm9pZCB7XG4gICAgY29uc3QgcHJvcGVydGllcyA9IHtcbiAgICAgIHNlc3Npb25JZFxuICAgIH07XG4gICAgXG4gICAgY29uc3QgbWVhc3VyZW1lbnRzID0ge1xuICAgICAgZHVyYXRpb246IHRoaXMuc2Vzc2lvbk1ldHJpY3Muc2Vzc2lvbkR1cmF0aW9uIHx8IDAsXG4gICAgICBtZXNzYWdlQ291bnQ6IHRoaXMuc2Vzc2lvbk1ldHJpY3MubWVzc2FnZUNvdW50IHx8IDAsXG4gICAgICBlcnJvckNvdW50OiB0aGlzLnNlc3Npb25NZXRyaWNzLmVycm9yQ291bnQgfHwgMCxcbiAgICAgIHRyYW5zY3JpcHRBY2N1cmFjeTogdGhpcy5zZXNzaW9uTWV0cmljcy50cmFuc2NyaXB0QWNjdXJhY3kgfHwgMCxcbiAgICAgIGNvbm5lY3Rpb25SZXRyaWVzOiB0aGlzLmNvbm5lY3Rpb25NZXRyaWNzLnJldHJ5Q291bnQgfHwgMCxcbiAgICAgIGF1ZGlvQnVmZmVySXNzdWVzOiB0aGlzLmF1ZGlvTWV0cmljcy5idWZmZXJVbmRlcnJ1bnMgfHwgMCxcbiAgICAgIGF2ZXJhZ2VTdHRMYXRlbmN5OiB0aGlzLmF1ZGlvTWV0cmljcy5zdHRMYXRlbmN5IHx8IDAsXG4gICAgICBhdmVyYWdlVHRzTGF0ZW5jeTogdGhpcy5hdWRpb01ldHJpY3MudHRzTGF0ZW5jeSB8fCAwXG4gICAgfTtcblxuICAgIHRoaXMubG9nRXZlbnQoJ3ZvaWNlX3Nlc3Npb25fc3VtbWFyeScsIHByb3BlcnRpZXMsIG1lYXN1cmVtZW50cyk7XG5cbiAgICBsb2dnZXIuaW5mbygnVm9pY2Ugc2Vzc2lvbiBzdW1tYXJ5JywgeyAuLi5wcm9wZXJ0aWVzLCAuLi5tZWFzdXJlbWVudHMgfSk7XG4gIH1cblxuICAvKipcbiAgICogQ29yZSBldmVudCBsb2dnaW5nIHdpdGggQXBwbGljYXRpb24gSW5zaWdodHMgaW50ZWdyYXRpb25cbiAgICovXG4gIHByaXZhdGUgbG9nRXZlbnQoXG4gICAgbmFtZTogc3RyaW5nLFxuICAgIHByb3BlcnRpZXM/OiBSZWNvcmQ8c3RyaW5nLCBhbnk+LFxuICAgIG1lYXN1cmVtZW50cz86IFJlY29yZDxzdHJpbmcsIG51bWJlcj5cbiAgKTogdm9pZCB7XG4gICAgY29uc3QgZXZlbnQ6IFZvaWNlVGVsZW1ldHJ5RXZlbnQgPSB7XG4gICAgICBuYW1lLFxuICAgICAgdGltZXN0YW1wOiBEYXRlLm5vdygpLFxuICAgICAgcHJvcGVydGllcyxcbiAgICAgIG1lYXN1cmVtZW50c1xuICAgIH07XG5cbiAgICAvLyBTdG9yZSBsb2NhbGx5XG4gICAgdGhpcy5ldmVudHMucHVzaChldmVudCk7XG5cbiAgICAvLyBLZWVwIG9ubHkgbGFzdCAxMDAgZXZlbnRzIGluIG1lbW9yeVxuICAgIGlmICh0aGlzLmV2ZW50cy5sZW5ndGggPiAxMDApIHtcbiAgICAgIHRoaXMuZXZlbnRzID0gdGhpcy5ldmVudHMuc2xpY2UoLTEwMCk7XG4gICAgfVxuXG4gICAgLy8gTG9nIHRvIGNvbnNvbGUgZm9yIGRldmVsb3BtZW50XG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAnZGV2ZWxvcG1lbnQnKSB7XG4gICAgICBjb25zb2xlLmxvZyhg8J+UjSBbVm9pY2VUZWxlbWV0cnldICR7bmFtZX1gLCBwcm9wZXJ0aWVzLCBtZWFzdXJlbWVudHMpO1xuICAgIH1cblxuICAgIC8vIFRPRE86IEludGVncmF0aW9uIHdpdGggQXp1cmUgQXBwbGljYXRpb24gSW5zaWdodHNcbiAgICAvLyBpZiAod2luZG93LmFwcEluc2lnaHRzKSB7XG4gICAgLy8gICB3aW5kb3cuYXBwSW5zaWdodHMudHJhY2tFdmVudCh7XG4gICAgLy8gICAgIG5hbWU6IGB2b2ljZV8ke25hbWV9YCxcbiAgICAvLyAgICAgcHJvcGVydGllcyxcbiAgICAvLyAgICAgbWVhc3VyZW1lbnRzXG4gICAgLy8gICB9KTtcbiAgICAvLyB9XG5cbiAgICAvLyBTdGFuZGFyZCBsb2dnaW5nXG4gICAgbG9nZ2VyLmluZm8oYFZvaWNlIHRlbGVtZXRyeTogJHtuYW1lfWAsIHsgcHJvcGVydGllcywgbWVhc3VyZW1lbnRzIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIEdldCBjdXJyZW50IHNlc3Npb24gbWV0cmljc1xuICAgKi9cbiAgZ2V0TWV0cmljcygpOiB7XG4gICAgY29ubmVjdGlvbjogQ29ubmVjdGlvbk1ldHJpY3M7XG4gICAgYXVkaW86IEF1ZGlvTWV0cmljcztcbiAgICBzZXNzaW9uOiBTZXNzaW9uTWV0cmljcztcbiAgfSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGNvbm5lY3Rpb246IHRoaXMuY29ubmVjdGlvbk1ldHJpY3MgYXMgQ29ubmVjdGlvbk1ldHJpY3MsXG4gICAgICBhdWRpbzogdGhpcy5hdWRpb01ldHJpY3MgYXMgQXVkaW9NZXRyaWNzLFxuICAgICAgc2Vzc2lvbjogdGhpcy5zZXNzaW9uTWV0cmljcyBhcyBTZXNzaW9uTWV0cmljc1xuICAgIH07XG4gIH1cblxuICAvKipcbiAgICogRXhwb3J0IHRlbGVtZXRyeSBkYXRhIGZvciBhbmFseXNpc1xuICAgKi9cbiAgZXhwb3J0VGVsZW1ldHJ5RGF0YSgpOiBWb2ljZVRlbGVtZXRyeUV2ZW50W10ge1xuICAgIHJldHVybiBbLi4udGhpcy5ldmVudHNdO1xuICB9XG5cbiAgLyoqXG4gICAqIENsZWFyIHRlbGVtZXRyeSBkYXRhXG4gICAqL1xuICBjbGVhclRlbGVtZXRyeURhdGEoKTogdm9pZCB7XG4gICAgdGhpcy5ldmVudHMgPSBbXTtcbiAgICB0aGlzLmNvbm5lY3Rpb25NZXRyaWNzID0ge307XG4gICAgdGhpcy5hdWRpb01ldHJpY3MgPSB7IGJ1ZmZlclVuZGVycnVuczogMCB9O1xuICAgIHRoaXMuc2Vzc2lvbk1ldHJpY3MgPSB7IG1lc3NhZ2VDb3VudDogMCwgZXJyb3JDb3VudDogMCB9O1xuICB9XG59XG5cbi8vIFNpbmdsZXRvbiBpbnN0YW5jZVxubGV0IHZvaWNlVGVsZW1ldHJ5SW5zdGFuY2U6IFZvaWNlVGVsZW1ldHJ5U2VydmljZSB8IG51bGwgPSBudWxsO1xuXG4vKipcbiAqIEdldCBzaGFyZWQgVm9pY2VUZWxlbWV0cnlTZXJ2aWNlIGluc3RhbmNlXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRWb2ljZVRlbGVtZXRyeSgpOiBWb2ljZVRlbGVtZXRyeVNlcnZpY2Uge1xuICBpZiAoIXZvaWNlVGVsZW1ldHJ5SW5zdGFuY2UpIHtcbiAgICB2b2ljZVRlbGVtZXRyeUluc3RhbmNlID0gbmV3IFZvaWNlVGVsZW1ldHJ5U2VydmljZSgpO1xuICB9XG4gIHJldHVybiB2b2ljZVRlbGVtZXRyeUluc3RhbmNlO1xufVxuXG4vKipcbiAqIFV0aWxpdHkgZnVuY3Rpb25zIGZvciBjb21tb24gdm9pY2UgdGVsZW1ldHJ5IG9wZXJhdGlvbnNcbiAqL1xuZXhwb3J0IGNvbnN0IFZvaWNlVGVsZW1ldHJ5ID0ge1xuICAvLyBDb25uZWN0aW9uIHRyYWNraW5nXG4gIHRyYWNrQ29ubmVjdGlvbjogKGV2ZW50OiAnY29ubmVjdGluZycgfCAnY29ubmVjdGVkJyB8ICdkaXNjb25uZWN0ZWQnLCBzZXNzaW9uSWQ6IHN0cmluZywgbWV0cmljcz86IFBhcnRpYWw8Q29ubmVjdGlvbk1ldHJpY3M+KSA9PiB7XG4gICAgZ2V0Vm9pY2VUZWxlbWV0cnkoKS5sb2dDb25uZWN0aW9uRXZlbnQoZXZlbnQsIHNlc3Npb25JZCwgbWV0cmljcyk7XG4gIH0sXG5cbiAgLy8gQXVkaW8gcGVyZm9ybWFuY2UgdHJhY2tpbmdcbiAgdHJhY2tBdWRpb0xhdGVuY3k6ICh0eXBlOiAnc3R0JyB8ICd0dHMnLCBsYXRlbmN5OiBudW1iZXIsIHNlc3Npb25JZDogc3RyaW5nKSA9PiB7XG4gICAgY29uc3QgbWV0cmljcyA9IHR5cGUgPT09ICdzdHQnID8geyBzdHRMYXRlbmN5OiBsYXRlbmN5IH0gOiB7IHR0c0xhdGVuY3k6IGxhdGVuY3kgfTtcbiAgICBnZXRWb2ljZVRlbGVtZXRyeSgpLmxvZ0F1ZGlvRXZlbnQoYCR7dHlwZX1fY29tcGxldGVgLCBzZXNzaW9uSWQsIG1ldHJpY3MpO1xuICB9LFxuXG4gIC8vIEVycm9yIHRyYWNraW5nIHdpdGggdXNlciBub3RpZmljYXRpb25zXG4gIHRyYWNrRXJyb3I6IChlcnJvcjogRXJyb3IsIHNlc3Npb25JZD86IHN0cmluZywgY29udGV4dD86IHN0cmluZywgbm90aWZ5VXNlciA9IGZhbHNlKSA9PiB7XG4gICAgZ2V0Vm9pY2VUZWxlbWV0cnkoKS5sb2dFcnJvcihlcnJvciwgc2Vzc2lvbklkLCBjb250ZXh0LCBub3RpZnlVc2VyKTtcbiAgfSxcblxuICAvLyBQZXJmb3JtYW5jZSBtb25pdG9yaW5nXG4gIHRyYWNrUGVyZm9ybWFuY2U6IChtZXRyaWM6IHN0cmluZywgdmFsdWU6IG51bWJlciwgc2Vzc2lvbklkPzogc3RyaW5nKSA9PiB7XG4gICAgZ2V0Vm9pY2VUZWxlbWV0cnkoKS5sb2dQZXJmb3JtYW5jZU1ldHJpYyhtZXRyaWMsIHZhbHVlLCBzZXNzaW9uSWQpO1xuICB9LFxuXG4gIC8vIFNlc3Npb24gbGlmZWN5Y2xlXG4gIHN0YXJ0U2Vzc2lvbjogKHNlc3Npb25JZDogc3RyaW5nLCB1c2VySWQ/OiBzdHJpbmcpID0+IHtcbiAgICBnZXRWb2ljZVRlbGVtZXRyeSgpLnN0YXJ0U2Vzc2lvbihzZXNzaW9uSWQsIHVzZXJJZCk7XG4gIH0sXG5cbiAgZW5kU2Vzc2lvbjogKHNlc3Npb25JZDogc3RyaW5nKSA9PiB7XG4gICAgZ2V0Vm9pY2VUZWxlbWV0cnkoKS5sb2dTZXNzaW9uRXZlbnQoJ3Nlc3Npb25fc3RvcHBlZCcsIHNlc3Npb25JZCk7XG4gIH0sXG5cbiAgLy8gU2luZ2xldG9uIGFjY2VzcyBtZXRob2RzXG4gIGdldEluc3RhbmNlOiAoKSA9PiBnZXRWb2ljZVRlbGVtZXRyeSgpXG59O1xuXG4vKipcbiAqIEV4cG9ydCBzaW5nbGV0b24gaW5zdGFuY2UgZm9yIGNvbnZlbmllbmNlXG4gKi9cbmV4cG9ydCBjb25zdCB2b2ljZVRlbGVtZXRyeSA9IGdldFZvaWNlVGVsZW1ldHJ5KCk7XG4iXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7OztBQUFBO0FBQUEsU0FBQUEsZUFBQTtFQUFBLElBQUFDLElBQUE7RUFBQSxJQUFBQyxJQUFBO0VBQUEsSUFBQUMsTUFBQSxPQUFBQyxRQUFBO0VBQUEsSUFBQUMsR0FBQTtFQUFBLElBQUFDLFlBQUE7SUFBQUwsSUFBQTtJQUFBTSxZQUFBO01BQUE7UUFBQUMsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO0lBQUE7SUFBQUUsS0FBQTtNQUFBO1FBQUFDLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtJQUFBO0lBQUFPLFNBQUE7TUFBQTtRQUFBRCxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1VBQUFSLEdBQUE7WUFBQUYsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtRQUFBO1FBQUFWLElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7SUFBQTtJQUFBVyxDQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO0lBQUE7SUFBQUMsQ0FBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtJQUFBO0lBQUFDLENBQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7SUFBQTtJQUFBQyxjQUFBO01BQUFDLElBQUE7TUFBQUMsUUFBQTtNQUFBQyxLQUFBO01BQUFDLE9BQUE7TUFBQUMsY0FBQTtNQUFBQyxPQUFBO0lBQUE7SUFBQUMsZUFBQTtJQUFBNUIsSUFBQTtFQUFBO0VBQUEsSUFBQTZCLFFBQUEsR0FBQTVCLE1BQUEsQ0FBQUUsR0FBQSxNQUFBRixNQUFBLENBQUFFLEdBQUE7RUFBQSxLQUFBMEIsUUFBQSxDQUFBOUIsSUFBQSxLQUFBOEIsUUFBQSxDQUFBOUIsSUFBQSxFQUFBQyxJQUFBLEtBQUFBLElBQUE7SUFBQTZCLFFBQUEsQ0FBQTlCLElBQUEsSUFBQUssWUFBQTtFQUFBO0VBQUEsSUFBQTBCLGNBQUEsR0FBQUQsUUFBQSxDQUFBOUIsSUFBQTtFQUFBO0lBK0NhO0lBQUFELGNBQUEsWUFBQUEsQ0FBQTtNQUFBLE9BQUFnQyxj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