9ba34d56af5ed9deec42b44a5dc6cdd0
/* istanbul ignore next */
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Textarea = void 0;
var
/* istanbul ignore next */
React = _interopRequireWildcard(require("react"));
var
/* istanbul ignore next */
_utils = require("@/lib/utils");
/* istanbul ignore next */
var _jsxRuntime = require("react/jsx-runtime");
function cov_1dcm61t23c() {
  var path = "/Users/dikshantvashistha/PrepBettr/components/ui/textarea.tsx";
  var hash = "6a31131495644e9e094a9fd9350848f9137944c8";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dikshantvashistha/PrepBettr/components/ui/textarea.tsx",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 17
        },
        end: {
          line: 31,
          column: 1
        }
      },
      "1": {
        start: {
          line: 8,
          column: 23
        },
        end: {
          line: 8,
          column: 37
        }
      },
      "2": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 29,
          column: 5
        }
      },
      "3": {
        start: {
          line: 32,
          column: 0
        },
        end: {
          line: 32,
          column: 33
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 2
          },
          end: {
            line: 7,
            column: 3
          }
        },
        loc: {
          start: {
            line: 7,
            column: 36
          },
          end: {
            line: 30,
            column: 3
          }
        },
        line: 7
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 21,
            column: 10
          },
          end: {
            line: 21,
            column: 150
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 21,
            column: 10
          },
          end: {
            line: 21,
            column: 20
          }
        }, {
          start: {
            line: 21,
            column: 24
          },
          end: {
            line: 21,
            column: 150
          }
        }],
        line: 21
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "6a31131495644e9e094a9fd9350848f9137944c8"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1dcm61t23c = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1dcm61t23c();
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) "default" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }
const Textarea =
/* istanbul ignore next */
exports.Textarea = (cov_1dcm61t23c().s[0]++, /*#__PURE__*/React.forwardRef(({
  className,
  ...props
}, ref) => {
  /* istanbul ignore next */
  cov_1dcm61t23c().f[0]++;
  const isDisabled =
  /* istanbul ignore next */
  (cov_1dcm61t23c().s[1]++, props.disabled);
  /* istanbul ignore next */
  cov_1dcm61t23c().s[2]++;
  return /*#__PURE__*/ /* istanbul ignore next */(0, _jsxRuntime.jsx)(
  /* istanbul ignore next */
  "textarea",
  /* istanbul ignore next */
  {
    className:
    /* istanbul ignore next */
    (0,
    /* istanbul ignore next */
    _utils.
    /* istanbul ignore next */
    cn)(
    // Base styles for dark theme
    "bg-gray-800 text-white placeholder-gray-400 border-gray-600", "flex min-h-[80px] w-full rounded-md border px-3 py-2 text-sm transition-[color,box-shadow] outline-none",
    // Selection styles
    "selection:bg-primary-200 selection:text-dark-100",
    // Focus states with brand color
    "focus-visible:border-primary-200 focus-visible:ring-primary-200/50 focus-visible:ring-[3px]",
    // Disabled states with proper contrast
    /* istanbul ignore next */
    (cov_1dcm61t23c().b[0][0]++, isDisabled) &&
    /* istanbul ignore next */
    (cov_1dcm61t23c().b[0][1]++, "disabled:bg-gray-800/50 disabled:text-gray-500 disabled:placeholder-gray-500 disabled:cursor-not-allowed disabled:opacity-75"),
    // Validation error states
    "aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive", className),
    ref: ref,
    ...props
  });
}));
/* istanbul ignore next */
cov_1dcm61t23c().s[3]++;
Textarea.displayName = "Textarea";
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsIl9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIiwicmVxdWlyZSIsIl91dGlscyIsIl9qc3hSdW50aW1lIiwiY292XzFkY202MXQyM2MiLCJwYXRoIiwiaGFzaCIsImdsb2JhbCIsIkZ1bmN0aW9uIiwiZ2N2IiwiY292ZXJhZ2VEYXRhIiwic3RhdGVtZW50TWFwIiwic3RhcnQiLCJsaW5lIiwiY29sdW1uIiwiZW5kIiwiZm5NYXAiLCJuYW1lIiwiZGVjbCIsImxvYyIsImJyYW5jaE1hcCIsInR5cGUiLCJsb2NhdGlvbnMiLCJzIiwiZiIsImIiLCJfY292ZXJhZ2VTY2hlbWEiLCJjb3ZlcmFnZSIsImFjdHVhbENvdmVyYWdlIiwiZSIsInQiLCJXZWFrTWFwIiwiciIsIm4iLCJfX2VzTW9kdWxlIiwibyIsImkiLCJfX3Byb3RvX18iLCJkZWZhdWx0IiwiaGFzIiwiZ2V0Iiwic2V0IiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJUZXh0YXJlYSIsImV4cG9ydHMiLCJmb3J3YXJkUmVmIiwiY2xhc3NOYW1lIiwicHJvcHMiLCJyZWYiLCJpc0Rpc2FibGVkIiwiZGlzYWJsZWQiLCJqc3giLCJjbiIsImRpc3BsYXlOYW1lIl0sInNvdXJjZXMiOlsidGV4dGFyZWEudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiXG5pbXBvcnQgeyBjbiB9IGZyb20gXCJAL2xpYi91dGlsc1wiXG5cblxuXG5jb25zdCBUZXh0YXJlYSA9IFJlYWN0LmZvcndhcmRSZWY8SFRNTFRleHRBcmVhRWxlbWVudCwgUmVhY3QuVGV4dGFyZWFIVE1MQXR0cmlidXRlczxIVE1MVGV4dEFyZWFFbGVtZW50Pj4oXG4gICh7IGNsYXNzTmFtZSwgLi4ucHJvcHMgfSwgcmVmKSA9PiB7XG4gICAgY29uc3QgaXNEaXNhYmxlZCA9IHByb3BzLmRpc2FibGVkO1xuICAgIFxuICAgIHJldHVybiAoXG4gICAgICA8dGV4dGFyZWFcbiAgICAgICAgY2xhc3NOYW1lPXtjbihcbiAgICAgICAgICAvLyBCYXNlIHN0eWxlcyBmb3IgZGFyayB0aGVtZVxuICAgICAgICAgIFwiYmctZ3JheS04MDAgdGV4dC13aGl0ZSBwbGFjZWhvbGRlci1ncmF5LTQwMCBib3JkZXItZ3JheS02MDBcIixcbiAgICAgICAgICBcImZsZXggbWluLWgtWzgwcHhdIHctZnVsbCByb3VuZGVkLW1kIGJvcmRlciBweC0zIHB5LTIgdGV4dC1zbSB0cmFuc2l0aW9uLVtjb2xvcixib3gtc2hhZG93XSBvdXRsaW5lLW5vbmVcIixcbiAgICAgICAgICAvLyBTZWxlY3Rpb24gc3R5bGVzXG4gICAgICAgICAgXCJzZWxlY3Rpb246YmctcHJpbWFyeS0yMDAgc2VsZWN0aW9uOnRleHQtZGFyay0xMDBcIixcbiAgICAgICAgICAvLyBGb2N1cyBzdGF0ZXMgd2l0aCBicmFuZCBjb2xvclxuICAgICAgICAgIFwiZm9jdXMtdmlzaWJsZTpib3JkZXItcHJpbWFyeS0yMDAgZm9jdXMtdmlzaWJsZTpyaW5nLXByaW1hcnktMjAwLzUwIGZvY3VzLXZpc2libGU6cmluZy1bM3B4XVwiLFxuICAgICAgICAgIC8vIERpc2FibGVkIHN0YXRlcyB3aXRoIHByb3BlciBjb250cmFzdFxuICAgICAgICAgIGlzRGlzYWJsZWQgJiYgXCJkaXNhYmxlZDpiZy1ncmF5LTgwMC81MCBkaXNhYmxlZDp0ZXh0LWdyYXktNTAwIGRpc2FibGVkOnBsYWNlaG9sZGVyLWdyYXktNTAwIGRpc2FibGVkOmN1cnNvci1ub3QtYWxsb3dlZCBkaXNhYmxlZDpvcGFjaXR5LTc1XCIsXG4gICAgICAgICAgLy8gVmFsaWRhdGlvbiBlcnJvciBzdGF0ZXNcbiAgICAgICAgICBcImFyaWEtaW52YWxpZDpyaW5nLWRlc3RydWN0aXZlLzIwIGRhcms6YXJpYS1pbnZhbGlkOnJpbmctZGVzdHJ1Y3RpdmUvNDAgYXJpYS1pbnZhbGlkOmJvcmRlci1kZXN0cnVjdGl2ZVwiLFxuICAgICAgICAgIGNsYXNzTmFtZVxuICAgICAgICApfVxuICAgICAgICByZWY9e3JlZn1cbiAgICAgICAgey4uLnByb3BzfVxuICAgICAgLz5cbiAgICApXG4gIH1cbilcblRleHRhcmVhLmRpc3BsYXlOYW1lID0gXCJUZXh0YXJlYVwiXG5cbmV4cG9ydCB7IFRleHRhcmVhIH1cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQUE7QUFBQUEsS0FBQSxHQUFBQyx1QkFBQSxDQUFBQyxPQUFBO0FBQ0E7QUFBQTtBQUFBQyxNQUFBLEdBQUFELE9BQUE7QUFBZ0M7QUFBQSxJQUFBRSxXQUFBLEdBQUFGLE9BQUE7QUFBQSxTQUFBRyxlQUFBO0VBQUEsSUFBQUMsSUFBQTtFQUFBLElBQUFDLElBQUE7RUFBQSxJQUFBQyxNQUFBLE9BQUFDLFFBQUE7RUFBQSxJQUFBQyxHQUFBO0VBQUEsSUFBQUMsWUFBQTtJQUFBTCxJQUFBO0lBQUFNLFlBQUE7TUFBQTtRQUFBQyxLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtJQUFBO0lBQUFFLEtBQUE7TUFBQTtRQUFBQyxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7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