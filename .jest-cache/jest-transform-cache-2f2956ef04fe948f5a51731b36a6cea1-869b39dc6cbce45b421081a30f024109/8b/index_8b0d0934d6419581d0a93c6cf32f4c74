41211391b6c4a86adae54c701277a236
/* istanbul ignore next */
function cov_1khoy7aw45() {
  var path = "/Users/dikshantvashistha/PrepBettr/azure/jobSearchWorker/index.js";
  var hash = "86ca7d7fbbe0bf6af312bb57b2ef072d42680fb3";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dikshantvashistha/PrepBettr/azure/jobSearchWorker/index.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 16
        },
        end: {
          line: 1,
          column: 43
        }
      },
      "1": {
        start: {
          line: 2,
          column: 21
        },
        end: {
          line: 2,
          column: 61
        }
      },
      "2": {
        start: {
          line: 3,
          column: 25
        },
        end: {
          line: 3,
          column: 67
        }
      },
      "3": {
        start: {
          line: 4,
          column: 15
        },
        end: {
          line: 4,
          column: 32
        }
      },
      "4": {
        start: {
          line: 5,
          column: 30
        },
        end: {
          line: 5,
          column: 60
        }
      },
      "5": {
        start: {
          line: 6,
          column: 23
        },
        end: {
          line: 6,
          column: 38
        }
      },
      "6": {
        start: {
          line: 9,
          column: 24
        },
        end: {
          line: 9,
          column: 28
        }
      },
      "7": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 17,
          column: 5
        }
      },
      "8": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 33
        }
      },
      "9": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 41,
          column: 5
        }
      },
      "10": {
        start: {
          line: 20,
          column: 24
        },
        end: {
          line: 20,
          column: 49
        }
      },
      "11": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 25,
          column: 9
        }
      },
      "12": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 23,
          column: 86
        }
      },
      "13": {
        start: {
          line: 24,
          column: 12
        },
        end: {
          line: 24,
          column: 24
        }
      },
      "14": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 34,
          column: 11
        }
      },
      "15": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 79
        }
      },
      "16": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 33
        }
      },
      "17": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 76
        }
      },
      "18": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 20
        }
      },
      "19": {
        start: {
          line: 45,
          column: 0
        },
        end: {
          line: 124,
          column: 3
        }
      },
      "20": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 75
        }
      },
      "21": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 122,
          column: 9
        }
      },
      "22": {
        start: {
          line: 52,
          column: 31
        },
        end: {
          line: 52,
          column: 96
        }
      },
      "23": {
        start: {
          line: 53,
          column: 104
        },
        end: {
          line: 53,
          column: 114
        }
      },
      "24": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 59,
          column: 14
        }
      },
      "25": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 64,
          column: 13
        }
      },
      "26": {
        start: {
          line: 63,
          column: 16
        },
        end: {
          line: 63,
          column: 94
        }
      },
      "27": {
        start: {
          line: 67,
          column: 32
        },
        end: {
          line: 67,
          column: 60
        }
      },
      "28": {
        start: {
          line: 68,
          column: 12
        },
        end: {
          line: 70,
          column: 13
        }
      },
      "29": {
        start: {
          line: 69,
          column: 16
        },
        end: {
          line: 69,
          column: 77
        }
      },
      "30": {
        start: {
          line: 73,
          column: 34
        },
        end: {
          line: 73,
          column: 80
        }
      },
      "31": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 82,
          column: 13
        }
      },
      "32": {
        start: {
          line: 76,
          column: 16
        },
        end: {
          line: 80,
          column: 18
        }
      },
      "33": {
        start: {
          line: 81,
          column: 16
        },
        end: {
          line: 81,
          column: 23
        }
      },
      "34": {
        start: {
          line: 85,
          column: 38
        },
        end: {
          line: 85,
          column: 101
        }
      },
      "35": {
        start: {
          line: 88,
          column: 33
        },
        end: {
          line: 90,
          column: 13
        }
      },
      "36": {
        start: {
          line: 89,
          column: 16
        },
        end: {
          line: 89,
          column: 67
        }
      },
      "37": {
        start: {
          line: 93,
          column: 12
        },
        end: {
          line: 97,
          column: 15
        }
      },
      "38": {
        start: {
          line: 100,
          column: 12
        },
        end: {
          line: 102,
          column: 13
        }
      },
      "39": {
        start: {
          line: 101,
          column: 16
        },
        end: {
          line: 101,
          column: 106
        }
      },
      "40": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 105,
          column: 60
        }
      },
      "41": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 108,
          column: 71
        }
      },
      "42": {
        start: {
          line: 110,
          column: 12
        },
        end: {
          line: 110,
          column: 124
        }
      },
      "43": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 113,
          column: 63
        }
      },
      "44": {
        start: {
          line: 114,
          column: 12
        },
        end: {
          line: 118,
          column: 14
        }
      },
      "45": {
        start: {
          line: 121,
          column: 12
        },
        end: {
          line: 121,
          column: 24
        }
      },
      "46": {
        start: {
          line: 130,
          column: 20
        },
        end: {
          line: 130,
          column: 22
        }
      },
      "47": {
        start: {
          line: 131,
          column: 21
        },
        end: {
          line: 131,
          column: 47
        }
      },
      "48": {
        start: {
          line: 133,
          column: 4
        },
        end: {
          line: 158,
          column: 5
        }
      },
      "49": {
        start: {
          line: 137,
          column: 29
        },
        end: {
          line: 137,
          column: 74
        }
      },
      "50": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 138,
          column: 38
        }
      },
      "51": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 140,
          column: 86
        }
      },
      "52": {
        start: {
          line: 142,
          column: 8
        },
        end: {
          line: 147,
          column: 10
        }
      },
      "53": {
        start: {
          line: 150,
          column: 8
        },
        end: {
          line: 150,
          column: 64
        }
      },
      "54": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 157,
          column: 10
        }
      },
      "55": {
        start: {
          line: 165,
          column: 4
        },
        end: {
          line: 215,
          column: 7
        }
      },
      "56": {
        start: {
          line: 167,
          column: 8
        },
        end: {
          line: 173,
          column: 9
        }
      },
      "57": {
        start: {
          line: 168,
          column: 28
        },
        end: {
          line: 168,
          column: 106
        }
      },
      "58": {
        start: {
          line: 169,
          column: 31
        },
        end: {
          line: 171,
          column: 13
        }
      },
      "59": {
        start: {
          line: 170,
          column: 16
        },
        end: {
          line: 170,
          column: 55
        }
      },
      "60": {
        start: {
          line: 172,
          column: 12
        },
        end: {
          line: 172,
          column: 42
        }
      },
      "61": {
        start: {
          line: 172,
          column: 29
        },
        end: {
          line: 172,
          column: 42
        }
      },
      "62": {
        start: {
          line: 176,
          column: 8
        },
        end: {
          line: 182,
          column: 9
        }
      },
      "63": {
        start: {
          line: 177,
          column: 32
        },
        end: {
          line: 180,
          column: 13
        }
      },
      "64": {
        start: {
          line: 178,
          column: 16
        },
        end: {
          line: 179,
          column: 89
        }
      },
      "65": {
        start: {
          line: 181,
          column: 12
        },
        end: {
          line: 181,
          column: 43
        }
      },
      "66": {
        start: {
          line: 181,
          column: 30
        },
        end: {
          line: 181,
          column: 43
        }
      },
      "67": {
        start: {
          line: 185,
          column: 8
        },
        end: {
          line: 189,
          column: 9
        }
      },
      "68": {
        start: {
          line: 186,
          column: 12
        },
        end: {
          line: 188,
          column: 13
        }
      },
      "69": {
        start: {
          line: 187,
          column: 16
        },
        end: {
          line: 187,
          column: 29
        }
      },
      "70": {
        start: {
          line: 192,
          column: 8
        },
        end: {
          line: 196,
          column: 9
        }
      },
      "71": {
        start: {
          line: 193,
          column: 12
        },
        end: {
          line: 195,
          column: 13
        }
      },
      "72": {
        start: {
          line: 194,
          column: 16
        },
        end: {
          line: 194,
          column: 29
        }
      },
      "73": {
        start: {
          line: 199,
          column: 25
        },
        end: {
          line: 199,
          column: 119
        }
      },
      "74": {
        start: {
          line: 200,
          column: 8
        },
        end: {
          line: 212,
          column: 9
        }
      },
      "75": {
        start: {
          line: 201,
          column: 12
        },
        end: {
          line: 211,
          column: 13
        }
      },
      "76": {
        start: {
          line: 203,
          column: 20
        },
        end: {
          line: 203,
          column: 51
        }
      },
      "77": {
        start: {
          line: 203,
          column: 38
        },
        end: {
          line: 203,
          column: 51
        }
      },
      "78": {
        start: {
          line: 204,
          column: 20
        },
        end: {
          line: 204,
          column: 26
        }
      },
      "79": {
        start: {
          line: 206,
          column: 20
        },
        end: {
          line: 206,
          column: 51
        }
      },
      "80": {
        start: {
          line: 206,
          column: 38
        },
        end: {
          line: 206,
          column: 51
        }
      },
      "81": {
        start: {
          line: 207,
          column: 20
        },
        end: {
          line: 207,
          column: 26
        }
      },
      "82": {
        start: {
          line: 209,
          column: 20
        },
        end: {
          line: 209,
          column: 52
        }
      },
      "83": {
        start: {
          line: 209,
          column: 39
        },
        end: {
          line: 209,
          column: 52
        }
      },
      "84": {
        start: {
          line: 210,
          column: 20
        },
        end: {
          line: 210,
          column: 26
        }
      },
      "85": {
        start: {
          line: 214,
          column: 8
        },
        end: {
          line: 214,
          column: 20
        }
      },
      "86": {
        start: {
          line: 222,
          column: 30
        },
        end: {
          line: 222,
          column: 32
        }
      },
      "87": {
        start: {
          line: 224,
          column: 4
        },
        end: {
          line: 243,
          column: 5
        }
      },
      "88": {
        start: {
          line: 225,
          column: 8
        },
        end: {
          line: 242,
          column: 9
        }
      },
      "89": {
        start: {
          line: 226,
          column: 35
        },
        end: {
          line: 226,
          column: 80
        }
      },
      "90": {
        start: {
          line: 227,
          column: 12
        },
        end: {
          line: 232,
          column: 15
        }
      },
      "91": {
        start: {
          line: 234,
          column: 12
        },
        end: {
          line: 234,
          column: 83
        }
      },
      "92": {
        start: {
          line: 236,
          column: 12
        },
        end: {
          line: 241,
          column: 15
        }
      },
      "93": {
        start: {
          line: 245,
          column: 4
        },
        end: {
          line: 245,
          column: 95
        }
      },
      "94": {
        start: {
          line: 245,
          column: 44
        },
        end: {
          line: 245,
          column: 93
        }
      },
      "95": {
        start: {
          line: 252,
          column: 4
        },
        end: {
          line: 295,
          column: 5
        }
      },
      "96": {
        start: {
          line: 253,
          column: 23
        },
        end: {
          line: 253,
          column: 52
        }
      },
      "97": {
        start: {
          line: 255,
          column: 8
        },
        end: {
          line: 258,
          column: 9
        }
      },
      "98": {
        start: {
          line: 256,
          column: 12
        },
        end: {
          line: 256,
          column: 100
        }
      },
      "99": {
        start: {
          line: 257,
          column: 12
        },
        end: {
          line: 257,
          column: 71
        }
      },
      "100": {
        start: {
          line: 260,
          column: 23
        },
        end: {
          line: 279,
          column: 9
        }
      },
      "101": {
        start: {
          line: 269,
          column: 61
        },
        end: {
          line: 269,
          column: 96
        }
      },
      "102": {
        start: {
          line: 281,
          column: 27
        },
        end: {
          line: 286,
          column: 10
        }
      },
      "103": {
        start: {
          line: 288,
          column: 26
        },
        end: {
          line: 288,
          column: 79
        }
      },
      "104": {
        start: {
          line: 289,
          column: 22
        },
        end: {
          line: 289,
          column: 41
        }
      },
      "105": {
        start: {
          line: 291,
          column: 8
        },
        end: {
          line: 291,
          column: 69
        }
      },
      "106": {
        start: {
          line: 293,
          column: 8
        },
        end: {
          line: 293,
          column: 83
        }
      },
      "107": {
        start: {
          line: 294,
          column: 8
        },
        end: {
          line: 294,
          column: 67
        }
      },
      "108": {
        start: {
          line: 302,
          column: 20
        },
        end: {
          line: 302,
          column: 119
        }
      },
      "109": {
        start: {
          line: 303,
          column: 26
        },
        end: {
          line: 303,
          column: 106
        }
      },
      "110": {
        start: {
          line: 303,
          column: 62
        },
        end: {
          line: 303,
          column: 99
        }
      },
      "111": {
        start: {
          line: 304,
          column: 4
        },
        end: {
          line: 304,
          column: 90
        }
      },
      "112": {
        start: {
          line: 311,
          column: 4
        },
        end: {
          line: 311,
          column: 52
        }
      },
      "113": {
        start: {
          line: 311,
          column: 42
        },
        end: {
          line: 311,
          column: 52
        }
      },
      "114": {
        start: {
          line: 313,
          column: 20
        },
        end: {
          line: 313,
          column: 97
        }
      },
      "115": {
        start: {
          line: 314,
          column: 4
        },
        end: {
          line: 316,
          column: 6
        }
      },
      "116": {
        start: {
          line: 315,
          column: 8
        },
        end: {
          line: 315,
          column: 45
        }
      },
      "117": {
        start: {
          line: 323,
          column: 4
        },
        end: {
          line: 323,
          column: 52
        }
      },
      "118": {
        start: {
          line: 323,
          column: 42
        },
        end: {
          line: 323,
          column: 52
        }
      },
      "119": {
        start: {
          line: 325,
          column: 28
        },
        end: {
          line: 325,
          column: 64
        }
      },
      "120": {
        start: {
          line: 325,
          column: 48
        },
        end: {
          line: 325,
          column: 63
        }
      },
      "121": {
        start: {
          line: 326,
          column: 4
        },
        end: {
          line: 328,
          column: 6
        }
      },
      "122": {
        start: {
          line: 327,
          column: 8
        },
        end: {
          line: 327,
          column: 73
        }
      },
      "123": {
        start: {
          line: 327,
          column: 39
        },
        end: {
          line: 327,
          column: 72
        }
      },
      "124": {
        start: {
          line: 335,
          column: 4
        },
        end: {
          line: 393,
          column: 5
        }
      },
      "125": {
        start: {
          line: 337,
          column: 34
        },
        end: {
          line: 337,
          column: 72
        }
      },
      "126": {
        start: {
          line: 338,
          column: 36
        },
        end: {
          line: 338,
          column: 66
        }
      },
      "127": {
        start: {
          line: 340,
          column: 8
        },
        end: {
          line: 347,
          column: 9
        }
      },
      "128": {
        start: {
          line: 341,
          column: 12
        },
        end: {
          line: 345,
          column: 14
        }
      },
      "129": {
        start: {
          line: 346,
          column: 12
        },
        end: {
          line: 346,
          column: 19
        }
      },
      "130": {
        start: {
          line: 350,
          column: 30
        },
        end: {
          line: 352,
          column: 41
        }
      },
      "131": {
        start: {
          line: 351,
          column: 12
        },
        end: {
          line: 351,
          column: 52
        }
      },
      "132": {
        start: {
          line: 354,
          column: 8
        },
        end: {
          line: 354,
          column: 113
        }
      },
      "133": {
        start: {
          line: 357,
          column: 8
        },
        end: {
          line: 382,
          column: 9
        }
      },
      "134": {
        start: {
          line: 358,
          column: 12
        },
        end: {
          line: 381,
          column: 13
        }
      },
      "135": {
        start: {
          line: 359,
          column: 43
        },
        end: {
          line: 366,
          column: 17
        }
      },
      "136": {
        start: {
          line: 368,
          column: 16
        },
        end: {
          line: 374,
          column: 18
        }
      },
      "137": {
        start: {
          line: 376,
          column: 16
        },
        end: {
          line: 376,
          column: 77
        }
      },
      "138": {
        start: {
          line: 378,
          column: 16
        },
        end: {
          line: 378,
          column: 89
        }
      },
      "139": {
        start: {
          line: 380,
          column: 16
        },
        end: {
          line: 380,
          column: 84
        }
      },
      "140": {
        start: {
          line: 384,
          column: 8
        },
        end: {
          line: 388,
          column: 10
        }
      },
      "141": {
        start: {
          line: 391,
          column: 8
        },
        end: {
          line: 391,
          column: 61
        }
      },
      "142": {
        start: {
          line: 392,
          column: 8
        },
        end: {
          line: 392,
          column: 90
        }
      },
      "143": {
        start: {
          line: 400,
          column: 4
        },
        end: {
          line: 455,
          column: 6
        }
      },
      "144": {
        start: {
          line: 461,
          column: 4
        },
        end: {
          line: 471,
          column: 6
        }
      },
      "145": {
        start: {
          line: 476,
          column: 4
        },
        end: {
          line: 476,
          column: 41
        }
      },
      "146": {
        start: {
          line: 481,
          column: 4
        },
        end: {
          line: 481,
          column: 78
        }
      },
      "147": {
        start: {
          line: 482,
          column: 4
        },
        end: {
          line: 484,
          column: 7
        }
      },
      "148": {
        start: {
          line: 483,
          column: 8
        },
        end: {
          line: 483,
          column: 87
        }
      },
      "149": {
        start: {
          line: 491,
          column: 4
        },
        end: {
          line: 502,
          column: 5
        }
      },
      "150": {
        start: {
          line: 493,
          column: 47
        },
        end: {
          line: 493,
          column: 105
        }
      },
      "151": {
        start: {
          line: 496,
          column: 8
        },
        end: {
          line: 496,
          column: 76
        }
      },
      "152": {
        start: {
          line: 498,
          column: 8
        },
        end: {
          line: 498,
          column: 102
        }
      },
      "153": {
        start: {
          line: 500,
          column: 8
        },
        end: {
          line: 500,
          column: 76
        }
      }
    },
    fnMap: {
      "0": {
        name: "initializeAzureOpenAI",
        decl: {
          start: {
            line: 14,
            column: 15
          },
          end: {
            line: 14,
            column: 36
          }
        },
        loc: {
          start: {
            line: 14,
            column: 39
          },
          end: {
            line: 42,
            column: 1
          }
        },
        line: 14
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 48,
            column: 13
          },
          end: {
            line: 48,
            column: 14
          }
        },
        loc: {
          start: {
            line: 48,
            column: 43
          },
          end: {
            line: 123,
            column: 5
          }
        },
        line: 48
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 88,
            column: 58
          },
          end: {
            line: 88,
            column: 59
          }
        },
        loc: {
          start: {
            line: 89,
            column: 16
          },
          end: {
            line: 89,
            column: 67
          }
        },
        line: 89
      },
      "3": {
        name: "searchJobsAcrossPortals",
        decl: {
          start: {
            line: 129,
            column: 15
          },
          end: {
            line: 129,
            column: 38
          }
        },
        loc: {
          start: {
            line: 129,
            column: 56
          },
          end: {
            line: 159,
            column: 1
          }
        },
        line: 129
      },
      "4": {
        name: "filterJobsBySearchCriteria",
        decl: {
          start: {
            line: 164,
            column: 9
          },
          end: {
            line: 164,
            column: 35
          }
        },
        loc: {
          start: {
            line: 164,
            column: 51
          },
          end: {
            line: 216,
            column: 1
          }
        },
        line: 164
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 165,
            column: 23
          },
          end: {
            line: 165,
            column: 24
          }
        },
        loc: {
          start: {
            line: 165,
            column: 30
          },
          end: {
            line: 215,
            column: 5
          }
        },
        line: 165
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 169,
            column: 53
          },
          end: {
            line: 169,
            column: 54
          }
        },
        loc: {
          start: {
            line: 170,
            column: 16
          },
          end: {
            line: 170,
            column: 55
          }
        },
        line: 170
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 177,
            column: 55
          },
          end: {
            line: 177,
            column: 56
          }
        },
        loc: {
          start: {
            line: 178,
            column: 16
          },
          end: {
            line: 179,
            column: 89
          }
        },
        line: 178
      },
      "8": {
        name: "calculateRelevancyScores",
        decl: {
          start: {
            line: 221,
            column: 15
          },
          end: {
            line: 221,
            column: 39
          }
        },
        loc: {
          start: {
            line: 221,
            column: 59
          },
          end: {
            line: 246,
            column: 1
          }
        },
        line: 221
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 245,
            column: 34
          },
          end: {
            line: 245,
            column: 35
          }
        },
        loc: {
          start: {
            line: 245,
            column: 44
          },
          end: {
            line: 245,
            column: 93
          }
        },
        line: 245
      },
      "10": {
        name: "calculateJobRelevancy",
        decl: {
          start: {
            line: 251,
            column: 15
          },
          end: {
            line: 251,
            column: 36
          }
        },
        loc: {
          start: {
            line: 251,
            column: 62
          },
          end: {
            line: 296,
            column: 1
          }
        },
        line: 251
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 269,
            column: 54
          },
          end: {
            line: 269,
            column: 55
          }
        },
        loc: {
          start: {
            line: 269,
            column: 61
          },
          end: {
            line: 269,
            column: 96
          }
        },
        line: 269
      },
      "12": {
        name: "calculateFallbackRelevancy",
        decl: {
          start: {
            line: 301,
            column: 9
          },
          end: {
            line: 301,
            column: 35
          }
        },
        loc: {
          start: {
            line: 301,
            column: 61
          },
          end: {
            line: 305,
            column: 1
          }
        },
        line: 301
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 303,
            column: 53
          },
          end: {
            line: 303,
            column: 54
          }
        },
        loc: {
          start: {
            line: 303,
            column: 62
          },
          end: {
            line: 303,
            column: 99
          }
        },
        line: 303
      },
      "14": {
        name: "getMatchedSkills",
        decl: {
          start: {
            line: 310,
            column: 9
          },
          end: {
            line: 310,
            column: 25
          }
        },
        loc: {
          start: {
            line: 310,
            column: 43
          },
          end: {
            line: 317,
            column: 1
          }
        },
        line: 310
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 314,
            column: 29
          },
          end: {
            line: 314,
            column: 30
          }
        },
        loc: {
          start: {
            line: 315,
            column: 8
          },
          end: {
            line: 315,
            column: 45
          }
        },
        line: 315
      },
      "16": {
        name: "getMissingSkills",
        decl: {
          start: {
            line: 322,
            column: 9
          },
          end: {
            line: 322,
            column: 25
          }
        },
        loc: {
          start: {
            line: 322,
            column: 43
          },
          end: {
            line: 329,
            column: 1
          }
        },
        line: 322
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 325,
            column: 43
          },
          end: {
            line: 325,
            column: 44
          }
        },
        loc: {
          start: {
            line: 325,
            column: 48
          },
          end: {
            line: 325,
            column: 63
          }
        },
        line: 325
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 326,
            column: 35
          },
          end: {
            line: 326,
            column: 36
          }
        },
        loc: {
          start: {
            line: 327,
            column: 8
          },
          end: {
            line: 327,
            column: 73
          }
        },
        line: 327
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 327,
            column: 30
          },
          end: {
            line: 327,
            column: 31
          }
        },
        loc: {
          start: {
            line: 327,
            column: 39
          },
          end: {
            line: 327,
            column: 72
          }
        },
        line: 327
      },
      "20": {
        name: "processAutoApply",
        decl: {
          start: {
            line: 334,
            column: 15
          },
          end: {
            line: 334,
            column: 31
          }
        },
        loc: {
          start: {
            line: 334,
            column: 99
          },
          end: {
            line: 394,
            column: 1
          }
        },
        line: 334
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 350,
            column: 50
          },
          end: {
            line: 350,
            column: 51
          }
        },
        loc: {
          start: {
            line: 351,
            column: 12
          },
          end: {
            line: 351,
            column: 52
          }
        },
        line: 351
      },
      "22": {
        name: "getMockJobListings",
        decl: {
          start: {
            line: 399,
            column: 15
          },
          end: {
            line: 399,
            column: 33
          }
        },
        loc: {
          start: {
            line: 399,
            column: 36
          },
          end: {
            line: 456,
            column: 1
          }
        },
        line: 399
      },
      "23": {
        name: "getUserProfile",
        decl: {
          start: {
            line: 460,
            column: 15
          },
          end: {
            line: 460,
            column: 29
          }
        },
        loc: {
          start: {
            line: 460,
            column: 38
          },
          end: {
            line: 472,
            column: 1
          }
        },
        line: 460
      },
      "24": {
        name: "getTodayApplicationCount",
        decl: {
          start: {
            line: 474,
            column: 15
          },
          end: {
            line: 474,
            column: 39
          }
        },
        loc: {
          start: {
            line: 474,
            column: 48
          },
          end: {
            line: 477,
            column: 1
          }
        },
        line: 474
      },
      "25": {
        name: "storeDiscoveredJobs",
        decl: {
          start: {
            line: 479,
            column: 15
          },
          end: {
            line: 479,
            column: 34
          }
        },
        loc: {
          start: {
            line: 479,
            column: 49
          },
          end: {
            line: 485,
            column: 1
          }
        },
        line: 479
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 482,
            column: 17
          },
          end: {
            line: 482,
            column: 18
          }
        },
        loc: {
          start: {
            line: 482,
            column: 24
          },
          end: {
            line: 484,
            column: 5
          }
        },
        line: 482
      },
      "27": {
        name: "sendJobDiscoveredNotifications",
        decl: {
          start: {
            line: 490,
            column: 15
          },
          end: {
            line: 490,
            column: 45
          }
        },
        loc: {
          start: {
            line: 490,
            column: 60
          },
          end: {
            line: 503,
            column: 1
          }
        },
        line: 490
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 17,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 17,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 15
      },
      "1": {
        loc: {
          start: {
            line: 22,
            column: 8
          },
          end: {
            line: 25,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 8
          },
          end: {
            line: 25,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "2": {
        loc: {
          start: {
            line: 22,
            column: 12
          },
          end: {
            line: 22,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 22,
            column: 12
          },
          end: {
            line: 22,
            column: 35
          }
        }, {
          start: {
            line: 22,
            column: 39
          },
          end: {
            line: 22,
            column: 67
          }
        }],
        line: 22
      },
      "3": {
        loc: {
          start: {
            line: 52,
            column: 31
          },
          end: {
            line: 52,
            column: 96
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 52,
            column: 63
          },
          end: {
            line: 52,
            column: 84
          }
        }, {
          start: {
            line: 52,
            column: 87
          },
          end: {
            line: 52,
            column: 96
          }
        }],
        line: 52
      },
      "4": {
        loc: {
          start: {
            line: 62,
            column: 12
          },
          end: {
            line: 64,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 62,
            column: 12
          },
          end: {
            line: 64,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 62
      },
      "5": {
        loc: {
          start: {
            line: 62,
            column: 16
          },
          end: {
            line: 62,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 62,
            column: 16
          },
          end: {
            line: 62,
            column: 23
          }
        }, {
          start: {
            line: 62,
            column: 27
          },
          end: {
            line: 62,
            column: 35
          }
        }],
        line: 62
      },
      "6": {
        loc: {
          start: {
            line: 68,
            column: 12
          },
          end: {
            line: 70,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 68,
            column: 12
          },
          end: {
            line: 70,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 68
      },
      "7": {
        loc: {
          start: {
            line: 75,
            column: 12
          },
          end: {
            line: 82,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 75,
            column: 12
          },
          end: {
            line: 82,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 75
      },
      "8": {
        loc: {
          start: {
            line: 100,
            column: 12
          },
          end: {
            line: 102,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 100,
            column: 12
          },
          end: {
            line: 102,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 100
      },
      "9": {
        loc: {
          start: {
            line: 100,
            column: 16
          },
          end: {
            line: 100,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 100,
            column: 16
          },
          end: {
            line: 100,
            column: 25
          }
        }, {
          start: {
            line: 100,
            column: 29
          },
          end: {
            line: 100,
            column: 52
          }
        }],
        line: 100
      },
      "10": {
        loc: {
          start: {
            line: 145,
            column: 29
          },
          end: {
            line: 145,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 145,
            column: 29
          },
          end: {
            line: 145,
            column: 44
          }
        }, {
          start: {
            line: 145,
            column: 48
          },
          end: {
            line: 145,
            column: 70
          }
        }],
        line: 145
      },
      "11": {
        loc: {
          start: {
            line: 167,
            column: 8
          },
          end: {
            line: 173,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 167,
            column: 8
          },
          end: {
            line: 173,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 167
      },
      "12": {
        loc: {
          start: {
            line: 167,
            column: 12
          },
          end: {
            line: 167,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 167,
            column: 12
          },
          end: {
            line: 167,
            column: 28
          }
        }, {
          start: {
            line: 167,
            column: 32
          },
          end: {
            line: 167,
            column: 59
          }
        }],
        line: 167
      },
      "13": {
        loc: {
          start: {
            line: 172,
            column: 12
          },
          end: {
            line: 172,
            column: 42
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 172,
            column: 12
          },
          end: {
            line: 172,
            column: 42
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 172
      },
      "14": {
        loc: {
          start: {
            line: 176,
            column: 8
          },
          end: {
            line: 182,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 176,
            column: 8
          },
          end: {
            line: 182,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 176
      },
      "15": {
        loc: {
          start: {
            line: 176,
            column: 12
          },
          end: {
            line: 176,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 176,
            column: 12
          },
          end: {
            line: 176,
            column: 29
          }
        }, {
          start: {
            line: 176,
            column: 33
          },
          end: {
            line: 176,
            column: 61
          }
        }],
        line: 176
      },
      "16": {
        loc: {
          start: {
            line: 178,
            column: 16
          },
          end: {
            line: 179,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 178,
            column: 16
          },
          end: {
            line: 178,
            column: 75
          }
        }, {
          start: {
            line: 179,
            column: 17
          },
          end: {
            line: 179,
            column: 52
          }
        }, {
          start: {
            line: 179,
            column: 56
          },
          end: {
            line: 179,
            column: 88
          }
        }],
        line: 178
      },
      "17": {
        loc: {
          start: {
            line: 181,
            column: 12
          },
          end: {
            line: 181,
            column: 43
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 181,
            column: 12
          },
          end: {
            line: 181,
            column: 43
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 181
      },
      "18": {
        loc: {
          start: {
            line: 185,
            column: 8
          },
          end: {
            line: 189,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 185,
            column: 8
          },
          end: {
            line: 189,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 185
      },
      "19": {
        loc: {
          start: {
            line: 185,
            column: 12
          },
          end: {
            line: 185,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 185,
            column: 12
          },
          end: {
            line: 185,
            column: 28
          }
        }, {
          start: {
            line: 185,
            column: 32
          },
          end: {
            line: 185,
            column: 59
          }
        }],
        line: 185
      },
      "20": {
        loc: {
          start: {
            line: 186,
            column: 12
          },
          end: {
            line: 188,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 186,
            column: 12
          },
          end: {
            line: 188,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 186
      },
      "21": {
        loc: {
          start: {
            line: 192,
            column: 8
          },
          end: {
            line: 196,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 192,
            column: 8
          },
          end: {
            line: 196,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 192
      },
      "22": {
        loc: {
          start: {
            line: 192,
            column: 12
          },
          end: {
            line: 192,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 192,
            column: 12
          },
          end: {
            line: 192,
            column: 36
          }
        }, {
          start: {
            line: 192,
            column: 40
          },
          end: {
            line: 192,
            column: 75
          }
        }],
        line: 192
      },
      "23": {
        loc: {
          start: {
            line: 193,
            column: 12
          },
          end: {
            line: 195,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 193,
            column: 12
          },
          end: {
            line: 195,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 193
      },
      "24": {
        loc: {
          start: {
            line: 200,
            column: 8
          },
          end: {
            line: 212,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 200,
            column: 8
          },
          end: {
            line: 212,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 200
      },
      "25": {
        loc: {
          start: {
            line: 201,
            column: 12
          },
          end: {
            line: 211,
            column: 13
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 202,
            column: 16
          },
          end: {
            line: 204,
            column: 26
          }
        }, {
          start: {
            line: 205,
            column: 16
          },
          end: {
            line: 207,
            column: 26
          }
        }, {
          start: {
            line: 208,
            column: 16
          },
          end: {
            line: 210,
            column: 26
          }
        }],
        line: 201
      },
      "26": {
        loc: {
          start: {
            line: 203,
            column: 20
          },
          end: {
            line: 203,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 203,
            column: 20
          },
          end: {
            line: 203,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 203
      },
      "27": {
        loc: {
          start: {
            line: 206,
            column: 20
          },
          end: {
            line: 206,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 206,
            column: 20
          },
          end: {
            line: 206,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 206
      },
      "28": {
        loc: {
          start: {
            line: 209,
            column: 20
          },
          end: {
            line: 209,
            column: 52
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 209,
            column: 20
          },
          end: {
            line: 209,
            column: 52
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 209
      },
      "29": {
        loc: {
          start: {
            line: 245,
            column: 45
          },
          end: {
            line: 245,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 245,
            column: 45
          },
          end: {
            line: 245,
            column: 61
          }
        }, {
          start: {
            line: 245,
            column: 65
          },
          end: {
            line: 245,
            column: 66
          }
        }],
        line: 245
      },
      "30": {
        loc: {
          start: {
            line: 245,
            column: 71
          },
          end: {
            line: 245,
            column: 92
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 245,
            column: 71
          },
          end: {
            line: 245,
            column: 87
          }
        }, {
          start: {
            line: 245,
            column: 91
          },
          end: {
            line: 245,
            column: 92
          }
        }],
        line: 245
      },
      "31": {
        loc: {
          start: {
            line: 255,
            column: 8
          },
          end: {
            line: 258,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 255,
            column: 8
          },
          end: {
            line: 258,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 255
      },
      "32": {
        loc: {
          start: {
            line: 288,
            column: 26
          },
          end: {
            line: 288,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 288,
            column: 26
          },
          end: {
            line: 288,
            column: 73
          }
        }, {
          start: {
            line: 288,
            column: 77
          },
          end: {
            line: 288,
            column: 79
          }
        }],
        line: 288
      },
      "33": {
        loc: {
          start: {
            line: 291,
            column: 15
          },
          end: {
            line: 291,
            column: 68
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 291,
            column: 30
          },
          end: {
            line: 291,
            column: 32
          }
        }, {
          start: {
            line: 291,
            column: 35
          },
          end: {
            line: 291,
            column: 68
          }
        }],
        line: 291
      },
      "34": {
        loc: {
          start: {
            line: 303,
            column: 26
          },
          end: {
            line: 303,
            column: 106
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 303,
            column: 26
          },
          end: {
            line: 303,
            column: 100
          }
        }, {
          start: {
            line: 303,
            column: 104
          },
          end: {
            line: 303,
            column: 106
          }
        }],
        line: 303
      },
      "35": {
        loc: {
          start: {
            line: 304,
            column: 49
          },
          end: {
            line: 304,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 304,
            column: 49
          },
          end: {
            line: 304,
            column: 75
          }
        }, {
          start: {
            line: 304,
            column: 79
          },
          end: {
            line: 304,
            column: 80
          }
        }],
        line: 304
      },
      "36": {
        loc: {
          start: {
            line: 311,
            column: 4
          },
          end: {
            line: 311,
            column: 52
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 311,
            column: 4
          },
          end: {
            line: 311,
            column: 52
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 311
      },
      "37": {
        loc: {
          start: {
            line: 311,
            column: 8
          },
          end: {
            line: 311,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 311,
            column: 8
          },
          end: {
            line: 311,
            column: 19
          }
        }, {
          start: {
            line: 311,
            column: 23
          },
          end: {
            line: 311,
            column: 40
          }
        }],
        line: 311
      },
      "38": {
        loc: {
          start: {
            line: 323,
            column: 4
          },
          end: {
            line: 323,
            column: 52
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 323,
            column: 4
          },
          end: {
            line: 323,
            column: 52
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 323
      },
      "39": {
        loc: {
          start: {
            line: 323,
            column: 8
          },
          end: {
            line: 323,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 323,
            column: 8
          },
          end: {
            line: 323,
            column: 19
          }
        }, {
          start: {
            line: 323,
            column: 23
          },
          end: {
            line: 323,
            column: 40
          }
        }],
        line: 323
      },
      "40": {
        loc: {
          start: {
            line: 340,
            column: 8
          },
          end: {
            line: 347,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 340,
            column: 8
          },
          end: {
            line: 347,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 340
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0]
    },
    inputSourceMap: null,
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "86ca7d7fbbe0bf6af312bb57b2ef072d42680fb3"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1khoy7aw45 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1khoy7aw45();
const {
  app
} =
/* istanbul ignore next */
(cov_1khoy7aw45().s[0]++, require('@azure/functions'));
const queueService =
/* istanbul ignore next */
(cov_1khoy7aw45().s[1]++, require('../lib/services/queue-service'));
const automationLogger =
/* istanbul ignore next */
(cov_1khoy7aw45().s[2]++, require('../lib/services/automation-logs'));
const OpenAI =
/* istanbul ignore next */
(cov_1khoy7aw45().s[3]++, require('openai'));
const {
  fetchAzureSecrets
} =
/* istanbul ignore next */
(cov_1khoy7aw45().s[4]++, require('../lib/azure-config'));
const {
  v4: uuidv4
} =
/* istanbul ignore next */
(cov_1khoy7aw45().s[5]++, require('uuid'));

// Azure OpenAI client - will be initialized from Key Vault secrets
let azureOpenAIClient =
/* istanbul ignore next */
(cov_1khoy7aw45().s[6]++, null);

/**
 * Initialize Azure OpenAI client
 */
async function initializeAzureOpenAI() {
  /* istanbul ignore next */
  cov_1khoy7aw45().f[0]++;
  cov_1khoy7aw45().s[7]++;
  if (azureOpenAIClient) {
    /* istanbul ignore next */
    cov_1khoy7aw45().b[0][0]++;
    cov_1khoy7aw45().s[8]++;
    return azureOpenAIClient;
  } else
  /* istanbul ignore next */
  {
    cov_1khoy7aw45().b[0][1]++;
  }
  cov_1khoy7aw45().s[9]++;
  try {
    const secrets =
    /* istanbul ignore next */
    (cov_1khoy7aw45().s[10]++, await fetchAzureSecrets());
    /* istanbul ignore next */
    cov_1khoy7aw45().s[11]++;
    if (
    /* istanbul ignore next */
    (cov_1khoy7aw45().b[2][0]++, !secrets.azureOpenAIKey) ||
    /* istanbul ignore next */
    (cov_1khoy7aw45().b[2][1]++, !secrets.azureOpenAIEndpoint)) {
      /* istanbul ignore next */
      cov_1khoy7aw45().b[1][0]++;
      cov_1khoy7aw45().s[12]++;
      console.warn('⚠️ Azure OpenAI credentials not available, using fallback');
      /* istanbul ignore next */
      cov_1khoy7aw45().s[13]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_1khoy7aw45().b[1][1]++;
    }
    cov_1khoy7aw45().s[14]++;
    azureOpenAIClient = new OpenAI({
      apiKey: secrets.azureOpenAIKey,
      baseURL: `${secrets.azureOpenAIEndpoint}/openai/deployments/${secrets.azureOpenAIDeployment}`,
      defaultQuery: {
        'api-version': '2024-08-01-preview'
      },
      defaultHeaders: {
        'api-key': secrets.azureOpenAIKey
      }
    });
    /* istanbul ignore next */
    cov_1khoy7aw45().s[15]++;
    console.log('✅ Azure OpenAI client initialized for job search worker');
    /* istanbul ignore next */
    cov_1khoy7aw45().s[16]++;
    return azureOpenAIClient;
  } catch (error) {
    /* istanbul ignore next */
    cov_1khoy7aw45().s[17]++;
    console.error('❌ Failed to initialize Azure OpenAI client:', error);
    /* istanbul ignore next */
    cov_1khoy7aw45().s[18]++;
    return null;
  }
}

// Queue trigger function for processing job searches
/* istanbul ignore next */
cov_1khoy7aw45().s[19]++;
app.storageQueue('jobSearchWorker', {
  queueName: 'search-jobs',
  connection: 'AzureWebJobsStorage',
  handler: async (queueItem, context) => {
    /* istanbul ignore next */
    cov_1khoy7aw45().f[1]++;
    cov_1khoy7aw45().s[20]++;
    context.log('Job Search Worker processing queue item:', queueItem);
    /* istanbul ignore next */
    cov_1khoy7aw45().s[21]++;
    try {
      const searchData =
      /* istanbul ignore next */
      (cov_1khoy7aw45().s[22]++, typeof queueItem === 'string' ?
      /* istanbul ignore next */
      (cov_1khoy7aw45().b[3][0]++, JSON.parse(queueItem)) :
      /* istanbul ignore next */
      (cov_1khoy7aw45().b[3][1]++, queueItem));
      const {
        userId,
        filters,
        requestId,
        autoApply,
        autoApplyThreshold,
        dailyLimit,
        priority
      } =
      /* istanbul ignore next */
      (cov_1khoy7aw45().s[23]++, searchData);
      /* istanbul ignore next */
      cov_1khoy7aw45().s[24]++;
      await automationLogger.logInfo('job_search_processing_started', `Starting job search processing for user ${userId}`, {
        userId,
        requestId,
        autoApply,
        priority
      });

      // Validate user and search parameters
      /* istanbul ignore next */
      cov_1khoy7aw45().s[25]++;
      if (
      /* istanbul ignore next */
      (cov_1khoy7aw45().b[5][0]++, !userId) ||
      /* istanbul ignore next */
      (cov_1khoy7aw45().b[5][1]++, !filters)) {
        /* istanbul ignore next */
        cov_1khoy7aw45().b[4][0]++;
        cov_1khoy7aw45().s[26]++;
        throw new Error('Invalid search parameters: userId and filters are required');
      } else
      /* istanbul ignore next */
      {
        cov_1khoy7aw45().b[4][1]++;
      }

      // Get user profile for relevancy calculation
      const userProfile =
      /* istanbul ignore next */
      (cov_1khoy7aw45().s[27]++, await getUserProfile(userId));
      /* istanbul ignore next */
      cov_1khoy7aw45().s[28]++;
      if (!userProfile) {
        /* istanbul ignore next */
        cov_1khoy7aw45().b[6][0]++;
        cov_1khoy7aw45().s[29]++;
        throw new Error(`User profile not found for user ${userId}`);
      } else
      /* istanbul ignore next */
      {
        cov_1khoy7aw45().b[6][1]++;
      }

      // Perform job search across configured portals
      const searchResults =
      /* istanbul ignore next */
      (cov_1khoy7aw45().s[30]++, await searchJobsAcrossPortals(userId, filters));
      /* istanbul ignore next */
      cov_1khoy7aw45().s[31]++;
      if (searchResults.jobs.length === 0) {
        /* istanbul ignore next */
        cov_1khoy7aw45().b[7][0]++;
        cov_1khoy7aw45().s[32]++;
        await automationLogger.logInfo('job_search_no_results', 'No jobs found for search criteria', {
          userId,
          requestId,
          filters
        });
        /* istanbul ignore next */
        cov_1khoy7aw45().s[33]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1khoy7aw45().b[7][1]++;
      }

      // Calculate relevancy scores for found jobs
      const jobsWithRelevancy =
      /* istanbul ignore next */
      (cov_1khoy7aw45().s[34]++, await calculateRelevancyScores(searchResults.jobs, userProfile));

      // Filter jobs based on relevancy threshold
      const relevantJobs =
      /* istanbul ignore next */
      (cov_1khoy7aw45().s[35]++, jobsWithRelevancy.filter(job => {
        /* istanbul ignore next */
        cov_1khoy7aw45().f[2]++;
        cov_1khoy7aw45().s[36]++;
        return job.relevancyScore >= filters.minimumRelevancyScore;
      }));

      // Log search results
      /* istanbul ignore next */
      cov_1khoy7aw45().s[37]++;
      await automationLogger.logJobSearch(userId, filters, {
        jobs: relevantJobs,
        totalFound: searchResults.jobs.length,
        relevantCount: relevantJobs.length
      });

      // Process auto-apply if enabled
      /* istanbul ignore next */
      cov_1khoy7aw45().s[38]++;
      if (
      /* istanbul ignore next */
      (cov_1khoy7aw45().b[9][0]++, autoApply) &&
      /* istanbul ignore next */
      (cov_1khoy7aw45().b[9][1]++, relevantJobs.length > 0)) {
        /* istanbul ignore next */
        cov_1khoy7aw45().b[8][0]++;
        cov_1khoy7aw45().s[39]++;
        await processAutoApply(userId, relevantJobs, autoApplyThreshold, dailyLimit, userProfile);
      } else
      /* istanbul ignore next */
      {
        cov_1khoy7aw45().b[8][1]++;
      }

      // Store discovered jobs for user (TODO: implement proper storage)
      cov_1khoy7aw45().s[40]++;
      await storeDiscoveredJobs(userId, relevantJobs);

      // Send job discovered notifications
      /* istanbul ignore next */
      cov_1khoy7aw45().s[41]++;
      await sendJobDiscoveredNotifications(userId, relevantJobs);
      /* istanbul ignore next */
      cov_1khoy7aw45().s[42]++;
      context.log(`Successfully processed job search for user ${userId}: found ${relevantJobs.length} relevant jobs`);
    } catch (error) {
      /* istanbul ignore next */
      cov_1khoy7aw45().s[43]++;
      context.log('Error processing job search:', error);
      /* istanbul ignore next */
      cov_1khoy7aw45().s[44]++;
      await automationLogger.logError('job_search_processing_error', error, {
        queueItem
      });

      // Re-throw to trigger Azure Functions retry logic
      /* istanbul ignore next */
      cov_1khoy7aw45().s[45]++;
      throw error;
    }
  }
});

/**
 * Search for jobs across multiple portals
 */
async function searchJobsAcrossPortals(userId, filters) {
  /* istanbul ignore next */
  cov_1khoy7aw45().f[3]++;
  const allJobs =
  /* istanbul ignore next */
  (cov_1khoy7aw45().s[46]++, []);
  const mockJobs =
  /* istanbul ignore next */
  (cov_1khoy7aw45().s[47]++, await getMockJobListings()); // Fallback to mock data
  /* istanbul ignore next */
  cov_1khoy7aw45().s[48]++;
  try {
    // TODO: Implement actual portal integrations
    // For now, we'll filter and return mock data based on the search criteria

    const filteredJobs =
    /* istanbul ignore next */
    (cov_1khoy7aw45().s[49]++, filterJobsBySearchCriteria(mockJobs, filters));
    /* istanbul ignore next */
    cov_1khoy7aw45().s[50]++;
    allJobs.push(...filteredJobs);
    /* istanbul ignore next */
    cov_1khoy7aw45().s[51]++;
    console.log(`Found ${allJobs.length} jobs across portals for user ${userId}`);
    /* istanbul ignore next */
    cov_1khoy7aw45().s[52]++;
    return {
      jobs: allJobs,
      totalCount: allJobs.length,
      searchedPortals:
      /* istanbul ignore next */
      (cov_1khoy7aw45().b[10][0]++, filters.portals) ||
      /* istanbul ignore next */
      (cov_1khoy7aw45().b[10][1]++, ['LinkedIn', 'Indeed']),
      searchedAt: new Date().toISOString()
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_1khoy7aw45().s[53]++;
    console.error('Error searching across portals:', error);
    // Return mock data as fallback
    /* istanbul ignore next */
    cov_1khoy7aw45().s[54]++;
    return {
      jobs: filterJobsBySearchCriteria(mockJobs, filters),
      totalCount: mockJobs.length,
      searchedPortals: ['mock'],
      searchedAt: new Date().toISOString()
    };
  }
}

/**
 * Filter jobs based on search criteria
 */
function filterJobsBySearchCriteria(jobs, filters) {
  /* istanbul ignore next */
  cov_1khoy7aw45().f[4]++;
  cov_1khoy7aw45().s[55]++;
  return jobs.filter(job => {
    /* istanbul ignore next */
    cov_1khoy7aw45().f[5]++;
    cov_1khoy7aw45().s[56]++;
    // Keywords filtering
    if (
    /* istanbul ignore next */
    (cov_1khoy7aw45().b[12][0]++, filters.keywords) &&
    /* istanbul ignore next */
    (cov_1khoy7aw45().b[12][1]++, filters.keywords.length > 0)) {
      /* istanbul ignore next */
      cov_1khoy7aw45().b[11][0]++;
      const jobText =
      /* istanbul ignore next */
      (cov_1khoy7aw45().s[57]++, `${job.title} ${job.description} ${job.requirements?.join(' ')}`.toLowerCase());
      const hasKeyword =
      /* istanbul ignore next */
      (cov_1khoy7aw45().s[58]++, filters.keywords.some(keyword => {
        /* istanbul ignore next */
        cov_1khoy7aw45().f[6]++;
        cov_1khoy7aw45().s[59]++;
        return jobText.includes(keyword.toLowerCase());
      }));
      /* istanbul ignore next */
      cov_1khoy7aw45().s[60]++;
      if (!hasKeyword) {
        /* istanbul ignore next */
        cov_1khoy7aw45().b[13][0]++;
        cov_1khoy7aw45().s[61]++;
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_1khoy7aw45().b[13][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1khoy7aw45().b[11][1]++;
    }

    // Location filtering
    cov_1khoy7aw45().s[62]++;
    if (
    /* istanbul ignore next */
    (cov_1khoy7aw45().b[15][0]++, filters.locations) &&
    /* istanbul ignore next */
    (cov_1khoy7aw45().b[15][1]++, filters.locations.length > 0)) {
      /* istanbul ignore next */
      cov_1khoy7aw45().b[14][0]++;
      const hasLocation =
      /* istanbul ignore next */
      (cov_1khoy7aw45().s[63]++, filters.locations.some(location => {
        /* istanbul ignore next */
        cov_1khoy7aw45().f[7]++;
        cov_1khoy7aw45().s[64]++;
        return /* istanbul ignore next */(cov_1khoy7aw45().b[16][0]++, job.location.toLowerCase().includes(location.toLowerCase())) ||
        /* istanbul ignore next */
        (cov_1khoy7aw45().b[16][1]++, location.toLowerCase() === 'remote') &&
        /* istanbul ignore next */
        (cov_1khoy7aw45().b[16][2]++, job.workArrangement === 'remote');
      }));
      /* istanbul ignore next */
      cov_1khoy7aw45().s[65]++;
      if (!hasLocation) {
        /* istanbul ignore next */
        cov_1khoy7aw45().b[17][0]++;
        cov_1khoy7aw45().s[66]++;
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_1khoy7aw45().b[17][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1khoy7aw45().b[14][1]++;
    }

    // Job type filtering
    cov_1khoy7aw45().s[67]++;
    if (
    /* istanbul ignore next */
    (cov_1khoy7aw45().b[19][0]++, filters.jobTypes) &&
    /* istanbul ignore next */
    (cov_1khoy7aw45().b[19][1]++, filters.jobTypes.length > 0)) {
      /* istanbul ignore next */
      cov_1khoy7aw45().b[18][0]++;
      cov_1khoy7aw45().s[68]++;
      if (!filters.jobTypes.includes(job.jobType)) {
        /* istanbul ignore next */
        cov_1khoy7aw45().b[20][0]++;
        cov_1khoy7aw45().s[69]++;
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_1khoy7aw45().b[20][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1khoy7aw45().b[18][1]++;
    }

    // Work arrangement filtering
    cov_1khoy7aw45().s[70]++;
    if (
    /* istanbul ignore next */
    (cov_1khoy7aw45().b[22][0]++, filters.workArrangements) &&
    /* istanbul ignore next */
    (cov_1khoy7aw45().b[22][1]++, filters.workArrangements.length > 0)) {
      /* istanbul ignore next */
      cov_1khoy7aw45().b[21][0]++;
      cov_1khoy7aw45().s[71]++;
      if (!filters.workArrangements.includes(job.workArrangement)) {
        /* istanbul ignore next */
        cov_1khoy7aw45().b[23][0]++;
        cov_1khoy7aw45().s[72]++;
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_1khoy7aw45().b[23][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1khoy7aw45().b[21][1]++;
    }

    // Date filtering
    const daysDiff =
    /* istanbul ignore next */
    (cov_1khoy7aw45().s[73]++, Math.ceil((new Date().getTime() - new Date(job.postedDate).getTime()) / (1000 * 60 * 60 * 24)));
    /* istanbul ignore next */
    cov_1khoy7aw45().s[74]++;
    if (filters.datePosted) {
      /* istanbul ignore next */
      cov_1khoy7aw45().b[24][0]++;
      cov_1khoy7aw45().s[75]++;
      switch (filters.datePosted) {
        case 'past-24-hours':
          /* istanbul ignore next */
          cov_1khoy7aw45().b[25][0]++;
          cov_1khoy7aw45().s[76]++;
          if (daysDiff > 1) {
            /* istanbul ignore next */
            cov_1khoy7aw45().b[26][0]++;
            cov_1khoy7aw45().s[77]++;
            return false;
          } else
          /* istanbul ignore next */
          {
            cov_1khoy7aw45().b[26][1]++;
          }
          cov_1khoy7aw45().s[78]++;
          break;
        case 'past-week':
          /* istanbul ignore next */
          cov_1khoy7aw45().b[25][1]++;
          cov_1khoy7aw45().s[79]++;
          if (daysDiff > 7) {
            /* istanbul ignore next */
            cov_1khoy7aw45().b[27][0]++;
            cov_1khoy7aw45().s[80]++;
            return false;
          } else
          /* istanbul ignore next */
          {
            cov_1khoy7aw45().b[27][1]++;
          }
          cov_1khoy7aw45().s[81]++;
          break;
        case 'past-month':
          /* istanbul ignore next */
          cov_1khoy7aw45().b[25][2]++;
          cov_1khoy7aw45().s[82]++;
          if (daysDiff > 30) {
            /* istanbul ignore next */
            cov_1khoy7aw45().b[28][0]++;
            cov_1khoy7aw45().s[83]++;
            return false;
          } else
          /* istanbul ignore next */
          {
            cov_1khoy7aw45().b[28][1]++;
          }
          cov_1khoy7aw45().s[84]++;
          break;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1khoy7aw45().b[24][1]++;
    }
    cov_1khoy7aw45().s[85]++;
    return true;
  });
}

/**
 * Calculate relevancy scores for jobs using AI
 */
async function calculateRelevancyScores(jobs, userProfile) {
  /* istanbul ignore next */
  cov_1khoy7aw45().f[8]++;
  const jobsWithRelevancy =
  /* istanbul ignore next */
  (cov_1khoy7aw45().s[86]++, []);
  /* istanbul ignore next */
  cov_1khoy7aw45().s[87]++;
  for (const job of jobs) {
    /* istanbul ignore next */
    cov_1khoy7aw45().s[88]++;
    try {
      const relevancyScore =
      /* istanbul ignore next */
      (cov_1khoy7aw45().s[89]++, await calculateJobRelevancy(job, userProfile));
      /* istanbul ignore next */
      cov_1khoy7aw45().s[90]++;
      jobsWithRelevancy.push({
        ...job,
        relevancyScore,
        matchedSkills: getMatchedSkills(job, userProfile.skills),
        missingSkills: getMissingSkills(job, userProfile.skills)
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1khoy7aw45().s[91]++;
      console.error(`Error calculating relevancy for job ${job.id}:`, error);
      // Add job with default relevancy
      /* istanbul ignore next */
      cov_1khoy7aw45().s[92]++;
      jobsWithRelevancy.push({
        ...job,
        relevancyScore: 50,
        matchedSkills: [],
        missingSkills: []
      });
    }
  }
  /* istanbul ignore next */
  cov_1khoy7aw45().s[93]++;
  return jobsWithRelevancy.sort((a, b) => {
    /* istanbul ignore next */
    cov_1khoy7aw45().f[9]++;
    cov_1khoy7aw45().s[94]++;
    return (
    /* istanbul ignore next */
    (cov_1khoy7aw45().b[29][0]++, b.relevancyScore) ||
    /* istanbul ignore next */
    (cov_1khoy7aw45().b[29][1]++, 0)) - (
    /* istanbul ignore next */
    (cov_1khoy7aw45().b[30][0]++, a.relevancyScore) ||
    /* istanbul ignore next */
    (cov_1khoy7aw45().b[30][1]++, 0));
  });
}

/**
 * Calculate job relevancy using AI
 */
async function calculateJobRelevancy(jobListing, userProfile) {
  /* istanbul ignore next */
  cov_1khoy7aw45().f[10]++;
  cov_1khoy7aw45().s[95]++;
  try {
    const client =
    /* istanbul ignore next */
    (cov_1khoy7aw45().s[96]++, await initializeAzureOpenAI());
    /* istanbul ignore next */
    cov_1khoy7aw45().s[97]++;
    if (!client) {
      /* istanbul ignore next */
      cov_1khoy7aw45().b[31][0]++;
      cov_1khoy7aw45().s[98]++;
      console.warn('Azure OpenAI client not available, using fallback relevancy calculation');
      /* istanbul ignore next */
      cov_1khoy7aw45().s[99]++;
      return calculateFallbackRelevancy(jobListing, userProfile);
    } else
    /* istanbul ignore next */
    {
      cov_1khoy7aw45().b[31][1]++;
    }
    const prompt =
    /* istanbul ignore next */
    (cov_1khoy7aw45().s[100]++, `
            Analyze the relevancy between this job posting and the candidate's profile:
            
            JOB TITLE: ${jobListing.title}
            JOB DESCRIPTION: ${jobListing.description}
            REQUIREMENTS: ${jobListing.requirements?.join(', ')}
            
            CANDIDATE PROFILE:
            Skills: ${userProfile.skills?.join(', ')}
            Experience: ${userProfile.experience?.map(exp => {
      /* istanbul ignore next */
      cov_1khoy7aw45().f[11]++;
      cov_1khoy7aw45().s[101]++;
      return `${exp.position} at ${exp.company}`;
    }).join(', ')}
            Target Roles: ${userProfile.targetRoles?.join(', ')}
            
            Calculate a relevancy score from 0-100 based on:
            1. Skills match (40% weight)
            2. Role alignment (30% weight) 
            3. Experience level match (20% weight)
            4. Job requirements match (10% weight)
            
            Return only a number between 0-100.
        `);
    const completion =
    /* istanbul ignore next */
    (cov_1khoy7aw45().s[102]++, await client.chat.completions.create({
      model: 'gpt-4o',
      // Using gpt-35-turbo for quick relevancy scoring
      messages: [{
        role: 'user',
        content: prompt
      }],
      temperature: 0.1,
      max_tokens: 50
    }));
    const scoreText =
    /* istanbul ignore next */
    (cov_1khoy7aw45().s[103]++,
    /* istanbul ignore next */
    (cov_1khoy7aw45().b[32][0]++, completion.choices[0]?.message?.content?.trim()) ||
    /* istanbul ignore next */
    (cov_1khoy7aw45().b[32][1]++, ''));
    const score =
    /* istanbul ignore next */
    (cov_1khoy7aw45().s[104]++, parseInt(scoreText));
    /* istanbul ignore next */
    cov_1khoy7aw45().s[105]++;
    return isNaN(score) ?
    /* istanbul ignore next */
    (cov_1khoy7aw45().b[33][0]++, 50) :
    /* istanbul ignore next */
    (cov_1khoy7aw45().b[33][1]++, Math.max(0, Math.min(100, score)));
  } catch (error) {
    /* istanbul ignore next */
    cov_1khoy7aw45().s[106]++;
    console.error('Error calculating job relevancy with Azure OpenAI:', error);
    /* istanbul ignore next */
    cov_1khoy7aw45().s[107]++;
    return calculateFallbackRelevancy(jobListing, userProfile);
  }
}

/**
 * Fallback relevancy calculation using keyword matching
 */
function calculateFallbackRelevancy(jobListing, userProfile) {
  /* istanbul ignore next */
  cov_1khoy7aw45().f[12]++;
  const jobText =
  /* istanbul ignore next */
  (cov_1khoy7aw45().s[108]++, `${jobListing.title} ${jobListing.description} ${jobListing.requirements?.join(' ')}`.toLowerCase());
  const matchedSkills =
  /* istanbul ignore next */
  (cov_1khoy7aw45().s[109]++,
  /* istanbul ignore next */
  (cov_1khoy7aw45().b[34][0]++, userProfile.skills?.filter(skill => {
    /* istanbul ignore next */
    cov_1khoy7aw45().f[13]++;
    cov_1khoy7aw45().s[110]++;
    return jobText.includes(skill.toLowerCase());
  })) ||
  /* istanbul ignore next */
  (cov_1khoy7aw45().b[34][1]++, []));
  /* istanbul ignore next */
  cov_1khoy7aw45().s[111]++;
  return Math.min(90, matchedSkills.length / (
  /* istanbul ignore next */
  (cov_1khoy7aw45().b[35][0]++, userProfile.skills?.length) ||
  /* istanbul ignore next */
  (cov_1khoy7aw45().b[35][1]++, 1)) * 100);
}

/**
 * Get matched skills between job and user profile
 */
function getMatchedSkills(job, userSkills) {
  /* istanbul ignore next */
  cov_1khoy7aw45().f[14]++;
  cov_1khoy7aw45().s[112]++;
  if (
  /* istanbul ignore next */
  (cov_1khoy7aw45().b[37][0]++, !userSkills) ||
  /* istanbul ignore next */
  (cov_1khoy7aw45().b[37][1]++, !job.requirements)) {
    /* istanbul ignore next */
    cov_1khoy7aw45().b[36][0]++;
    cov_1khoy7aw45().s[113]++;
    return [];
  } else
  /* istanbul ignore next */
  {
    cov_1khoy7aw45().b[36][1]++;
  }
  const jobText =
  /* istanbul ignore next */
  (cov_1khoy7aw45().s[114]++, `${job.title} ${job.description} ${job.requirements.join(' ')}`.toLowerCase());
  /* istanbul ignore next */
  cov_1khoy7aw45().s[115]++;
  return userSkills.filter(skill => {
    /* istanbul ignore next */
    cov_1khoy7aw45().f[15]++;
    cov_1khoy7aw45().s[116]++;
    return jobText.includes(skill.toLowerCase());
  });
}

/**
 * Get missing skills from job requirements
 */
function getMissingSkills(job, userSkills) {
  /* istanbul ignore next */
  cov_1khoy7aw45().f[16]++;
  cov_1khoy7aw45().s[117]++;
  if (
  /* istanbul ignore next */
  (cov_1khoy7aw45().b[39][0]++, !userSkills) ||
  /* istanbul ignore next */
  (cov_1khoy7aw45().b[39][1]++, !job.requirements)) {
    /* istanbul ignore next */
    cov_1khoy7aw45().b[38][0]++;
    cov_1khoy7aw45().s[118]++;
    return [];
  } else
  /* istanbul ignore next */
  {
    cov_1khoy7aw45().b[38][1]++;
  }
  const userSkillsLower =
  /* istanbul ignore next */
  (cov_1khoy7aw45().s[119]++, userSkills.map(s => {
    /* istanbul ignore next */
    cov_1khoy7aw45().f[17]++;
    cov_1khoy7aw45().s[120]++;
    return s.toLowerCase();
  }));
  /* istanbul ignore next */
  cov_1khoy7aw45().s[121]++;
  return job.requirements.filter(req => {
    /* istanbul ignore next */
    cov_1khoy7aw45().f[18]++;
    cov_1khoy7aw45().s[122]++;
    return !userSkillsLower.some(skill => {
      /* istanbul ignore next */
      cov_1khoy7aw45().f[19]++;
      cov_1khoy7aw45().s[123]++;
      return req.toLowerCase().includes(skill);
    });
  });
}

/**
 * Process auto-apply for relevant jobs
 */
async function processAutoApply(userId, relevantJobs, autoApplyThreshold, dailyLimit, userProfile) {
  /* istanbul ignore next */
  cov_1khoy7aw45().f[20]++;
  cov_1khoy7aw45().s[124]++;
  try {
    // Check current application count for today
    const todayApplications =
    /* istanbul ignore next */
    (cov_1khoy7aw45().s[125]++, await getTodayApplicationCount(userId));
    let remainingApplications =
    /* istanbul ignore next */
    (cov_1khoy7aw45().s[126]++, dailyLimit - todayApplications);
    /* istanbul ignore next */
    cov_1khoy7aw45().s[127]++;
    if (remainingApplications <= 0) {
      /* istanbul ignore next */
      cov_1khoy7aw45().b[40][0]++;
      cov_1khoy7aw45().s[128]++;
      await automationLogger.logWarning('auto_apply_daily_limit_reached', `Daily application limit reached (${dailyLimit})`, {
        userId,
        todayApplications,
        dailyLimit
      });
      /* istanbul ignore next */
      cov_1khoy7aw45().s[129]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1khoy7aw45().b[40][1]++;
    }

    // Filter jobs that meet auto-apply threshold
    const autoApplyJobs =
    /* istanbul ignore next */
    (cov_1khoy7aw45().s[130]++, relevantJobs.filter(job => {
      /* istanbul ignore next */
      cov_1khoy7aw45().f[21]++;
      cov_1khoy7aw45().s[131]++;
      return job.relevancyScore >= autoApplyThreshold;
    }).slice(0, remainingApplications)); // Limit to remaining daily applications
    /* istanbul ignore next */
    cov_1khoy7aw45().s[132]++;
    console.log(`Processing ${autoApplyJobs.length} jobs for auto-apply (threshold: ${autoApplyThreshold})`);

    // Queue applications for processing
    /* istanbul ignore next */
    cov_1khoy7aw45().s[133]++;
    for (const job of autoApplyJobs) {
      /* istanbul ignore next */
      cov_1khoy7aw45().s[134]++;
      try {
        const applicationMessage =
        /* istanbul ignore next */
        (cov_1khoy7aw45().s[135]++, {
          userId,
          jobId: job.id,
          jobListing: job,
          requestId: uuidv4(),
          autoApply: true,
          queuedAt: new Date().toISOString()
        });
        /* istanbul ignore next */
        cov_1khoy7aw45().s[136]++;
        await queueService.addMessage(queueService.queues.PROCESS_APPLICATIONS, applicationMessage, {
          visibilityTimeout: Math.floor(Math.random() * 120) + 30 // Random delay 30-150 seconds
        });
        /* istanbul ignore next */
        cov_1khoy7aw45().s[137]++;
        await automationLogger.logJobDiscovered(userId, job.id, job);
        /* istanbul ignore next */
        cov_1khoy7aw45().s[138]++;
        console.log(`Queued auto-apply for job: ${job.title} at ${job.company}`);
      } catch (error) {
        /* istanbul ignore next */
        cov_1khoy7aw45().s[139]++;
        console.error(`Error queuing auto-apply for job ${job.id}:`, error);
      }
    }
    /* istanbul ignore next */
    cov_1khoy7aw45().s[140]++;
    await automationLogger.logInfo('auto_apply_jobs_queued', `${autoApplyJobs.length} jobs queued for auto-apply`, {
      userId,
      queuedJobs: autoApplyJobs.length,
      threshold: autoApplyThreshold
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1khoy7aw45().s[141]++;
    console.error('Error processing auto-apply:', error);
    /* istanbul ignore next */
    cov_1khoy7aw45().s[142]++;
    await automationLogger.logError('auto_apply_processing_error', error, {
      userId
    });
  }
}

/**
 * Get mock job listings for demonstration
 */
async function getMockJobListings() {
  /* istanbul ignore next */
  cov_1khoy7aw45().f[22]++;
  cov_1khoy7aw45().s[143]++;
  return [{
    id: uuidv4(),
    title: 'Senior React Developer',
    company: 'TechFlow Solutions',
    location: 'San Francisco, CA',
    salary: {
      min: 130000,
      max: 170000,
      currency: 'USD',
      period: 'yearly'
    },
    jobType: 'full-time',
    workArrangement: 'hybrid',
    description: 'Join our growing team to build next-generation web applications using React, TypeScript, and modern development practices.',
    requirements: ['React', 'TypeScript', 'JavaScript', 'Redux', 'Jest'],
    responsibilities: ['Lead frontend architecture', 'Mentor developers', 'Code review'],
    postedDate: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000).toISOString(),
    // 1 day ago
    jobPortal: {
      name: 'LinkedIn',
      logo: '/icons/linkedin.svg',
      website: 'https://linkedin.com',
      supportsAutoApply: true
    },
    originalUrl: 'https://linkedin.com/jobs/react-dev-123',
    applicationStatus: 'discovered',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString()
  }, {
    id: uuidv4(),
    title: 'Full Stack Engineer',
    company: 'InnovateCorp',
    location: 'Remote',
    salary: {
      min: 110000,
      max: 150000,
      currency: 'USD',
      period: 'yearly'
    },
    jobType: 'full-time',
    workArrangement: 'remote',
    description: 'We are looking for a versatile Full Stack Engineer to work on our SaaS platform using React and Node.js.',
    requirements: ['React', 'Node.js', 'PostgreSQL', 'AWS', 'Docker'],
    responsibilities: ['Develop full-stack features', 'Design APIs', 'Database optimization'],
    postedDate: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000).toISOString(),
    // 2 days ago
    jobPortal: {
      name: 'Indeed',
      logo: '/icons/indeed.svg',
      website: 'https://indeed.com',
      supportsAutoApply: true
    },
    originalUrl: 'https://indeed.com/jobs/fullstack-456',
    applicationStatus: 'discovered',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString()
  }, {
    id: uuidv4(),
    title: 'Frontend Developer',
    company: 'StartupXYZ',
    location: 'New York, NY',
    salary: {
      min: 90000,
      max: 120000,
      currency: 'USD',
      period: 'yearly'
    },
    jobType: 'full-time',
    workArrangement: 'onsite',
    description: 'Join our early-stage startup to build innovative web applications with React and modern tools.',
    requirements: ['React', 'JavaScript', 'CSS', 'Git'],
    responsibilities: ['Build responsive web apps', 'Collaborate with designers', 'Optimize performance'],
    postedDate: new Date(Date.now() - 3 * 24 * 60 * 60 * 1000).toISOString(),
    // 3 days ago
    jobPortal: {
      name: 'AngelList',
      logo: '/icons/angellist.svg',
      website: 'https://angel.co',
      supportsAutoApply: true
    },
    originalUrl: 'https://angel.co/jobs/frontend-789',
    applicationStatus: 'discovered',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString()
  }];
}

// Utility functions (TODO: Implement with proper data storage)

async function getUserProfile(userId) {
  /* istanbul ignore next */
  cov_1khoy7aw45().f[23]++;
  cov_1khoy7aw45().s[144]++;
  return {
    id: userId,
    name: 'John Doe',
    email: 'john.doe@example.com',
    skills: ['JavaScript', 'React', 'TypeScript', 'Node.js', 'Python'],
    experience: [{
      position: 'Frontend Developer',
      company: 'Tech Corp',
      technologies: ['React', 'TypeScript']
    }],
    targetRoles: ['Frontend Developer', 'Full Stack Developer'],
    summary: 'Experienced frontend developer with expertise in React applications'
  };
}
async function getTodayApplicationCount(userId) {
  /* istanbul ignore next */
  cov_1khoy7aw45().f[24]++;
  cov_1khoy7aw45().s[145]++;
  // TODO: Query database for today's applications
  return Math.floor(Math.random() * 2); // Mock count (0-1)
}
async function storeDiscoveredJobs(userId, jobs) {
  /* istanbul ignore next */
  cov_1khoy7aw45().f[25]++;
  cov_1khoy7aw45().s[146]++;
  // TODO: Store discovered jobs in database (Firestore, etc.)
  console.log(`Storing ${jobs.length} discovered jobs for user ${userId}:`);
  /* istanbul ignore next */
  cov_1khoy7aw45().s[147]++;
  jobs.forEach(job => {
    /* istanbul ignore next */
    cov_1khoy7aw45().f[26]++;
    cov_1khoy7aw45().s[148]++;
    console.log(`- ${job.title} at ${job.company} (Score: ${job.relevancyScore})`);
  });
}

/**
 * Send job discovered notifications
 */
async function sendJobDiscoveredNotifications(userId, jobs) {
  /* istanbul ignore next */
  cov_1khoy7aw45().f[27]++;
  cov_1khoy7aw45().s[149]++;
  try {
    // Import notification integration service
    const {
      jobNotificationIntegration
    } =
    /* istanbul ignore next */
    (cov_1khoy7aw45().s[150]++, require('../../lib/services/job-notification-integration'));

    // Send job discovered notifications
    /* istanbul ignore next */
    cov_1khoy7aw45().s[151]++;
    await jobNotificationIntegration.notifyJobsDiscovered(userId, jobs);
    /* istanbul ignore next */
    cov_1khoy7aw45().s[152]++;
    console.log(`Job discovered notifications processed for user ${userId}: ${jobs.length} jobs`);
  } catch (error) {
    /* istanbul ignore next */
    cov_1khoy7aw45().s[153]++;
    console.error('Error sending job discovered notifications:', error);
    // Don't throw error here to avoid breaking the job search workflow
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,