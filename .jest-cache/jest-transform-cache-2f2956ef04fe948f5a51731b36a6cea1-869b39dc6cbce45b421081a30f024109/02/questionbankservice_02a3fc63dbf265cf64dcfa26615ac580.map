{"version":3,"names":["cov_1zgktlivl7","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","errors_1","require","ai_1","MOCK_INTERVIEW_TEMPLATES","id","role","techStack","questions","difficulty","estimatedDuration","description","exports","CURATED_QUESTIONS","content","category","estimatedTime","metadata","tags","source","lastUpdated","Date","QuestionBankService","constructor","config","cache","Map","cacheConfig","enabled","ttl","maxSize","Object","assign","getCacheKey","method","params","JSON","stringify","getFromCache","key","cached","get","now","timestamp","delete","data","setCache","size","oldestKey","keys","next","value","set","invalidateCache","pattern","Array","from","filter","includes","forEach","console","log","length","clear","getInterviewTemplate","templateId","options","cacheKey","template","find","t","generatedTemplate","generateInterviewTemplate","error","logServerError","service","action","getQuestions","q","some","tech","excludeIds","includeGenerated","maxQuestions","additionalQuestions","generateQuestions","push","slice","prompt","buildQuestionGenerationPrompt","response","azureAI","experience","education","skills","join","interviewType","success","Error","map","index","_a","toLowerCase","replace","popularity","successRate","lastUsed","getAllTemplates","getTemplatesByRole","parts","getCacheStats","questionBankService"],"sources":["/Users/dikshantvashistha/PrepBettr/lib/services/question-bank-service.ts"],"sourcesContent":["/**\n * Question Bank Service\n * \n * Centralized service for managing interview questions with caching support.\n * Consolidates mock question data and provides APIs for dynamic question generation.\n */\n\nimport { logServerError } from '@/lib/errors';\nimport { azureAI } from '@/lib/ai';\nimport type { AzureAIResponse } from '@/lib/ai';\n\n// ===== INTERFACES =====\n\nexport interface QuestionBankQuestion {\n  id: string;\n  content: string;\n  type: 'technical' | 'behavioral' | 'mixed';\n  difficulty: 'easy' | 'medium' | 'hard';\n  techStack: string[];\n  category: string;\n  estimatedTime?: number; // minutes\n  metadata?: {\n    tags: string[];\n    source: 'generated' | 'curated' | 'community';\n    version: string;\n    lastUpdated: Date;\n  };\n}\n\nexport interface InterviewTemplate {\n  id: string;\n  role: string;\n  type: 'technical' | 'behavioral' | 'mixed';\n  techStack: string[];\n  questions: string[]; // Question IDs or content\n  difficulty: 'easy' | 'medium' | 'hard';\n  estimatedDuration: number; // minutes\n  description?: string;\n  metadata?: {\n    popularity: number;\n    successRate: number;\n    lastUsed: Date;\n  };\n}\n\nexport interface QuestionBankOptions {\n  role?: string;\n  type?: 'technical' | 'behavioral' | 'mixed';\n  difficulty?: 'easy' | 'medium' | 'hard';\n  techStack?: string[];\n  maxQuestions?: number;\n  excludeIds?: string[];\n  includeGenerated?: boolean;\n}\n\nexport interface CacheConfig {\n  enabled: boolean;\n  ttl: number; // seconds\n  maxSize: number;\n  redisUrl?: string; // Optional Redis for distributed caching\n}\n\n// ===== MOCK DATA =====\n\nconst MOCK_INTERVIEW_TEMPLATES: InterviewTemplate[] = [\n  {\n    id: 'frontend-dev-1',\n    role: 'Frontend Developer',\n    type: 'technical',\n    techStack: ['React', 'TypeScript', 'Next.js', 'Tailwind CSS'],\n    questions: [\n      'Explain the concept of React hooks and provide examples',\n      'What is the virtual DOM and how does it work?',\n      'How do you handle state management in React applications?',\n      'Describe the differences between TypeScript and JavaScript',\n      'How do you implement responsive design with Tailwind CSS?'\n    ],\n    difficulty: 'medium',\n    estimatedDuration: 45,\n    description: 'Frontend development interview focusing on React ecosystem'\n  },\n  {\n    id: 'backend-dev-1',\n    role: 'Backend Developer',\n    type: 'technical',\n    techStack: ['Node.js', 'Express', 'MongoDB', 'JavaScript'],\n    questions: [\n      'Explain RESTful API design principles',\n      'How do you handle database relationships in MongoDB?',\n      'What are middleware functions in Express.js?',\n      'How do you implement authentication and authorization?',\n      'Describe your approach to error handling in APIs'\n    ],\n    difficulty: 'medium',\n    estimatedDuration: 50,\n    description: 'Backend development interview focusing on Node.js stack'\n  },\n  {\n    id: 'fullstack-dev-1',\n    role: 'Full Stack Developer',\n    type: 'mixed',\n    techStack: ['Python', 'Django', 'PostgreSQL', 'Redis'],\n    questions: [\n      'Describe your experience with full-stack development',\n      'How do you optimize database queries?',\n      'What is your approach to handling user authentication?',\n      'How do you implement caching strategies?',\n      'Describe a challenging full-stack project you built'\n    ],\n    difficulty: 'medium',\n    estimatedDuration: 60,\n    description: 'Full-stack development interview with Python/Django focus'\n  },\n  {\n    id: 'software-eng-behavioral',\n    role: 'Software Engineer',\n    type: 'behavioral',\n    techStack: ['Vue.js', 'Nuxt.js', 'Vuex', 'SCSS'],\n    questions: [\n      'Tell me about a challenging project you worked on',\n      'How do you handle conflicts in a team environment?',\n      'Describe a time when you had to learn a new technology quickly',\n      'How do you prioritize tasks when everything seems urgent?',\n      'Tell me about a mistake you made and how you handled it'\n    ],\n    difficulty: 'medium',\n    estimatedDuration: 40,\n    description: 'Behavioral interview for software engineering roles'\n  },\n  {\n    id: 'devops-eng-1',\n    role: 'DevOps Engineer',\n    type: 'technical',\n    techStack: ['Docker', 'Kubernetes', 'AWS', 'Jenkins'],\n    questions: [\n      'Explain containerization and its benefits',\n      'How do you implement CI/CD pipelines?',\n      'What is Infrastructure as Code?',\n      'How do you monitor and troubleshoot production systems?',\n      'Describe your experience with cloud platforms'\n    ],\n    difficulty: 'hard',\n    estimatedDuration: 55,\n    description: 'DevOps engineering interview focusing on containerization and CI/CD'\n  },\n  {\n    id: 'data-scientist-1',\n    role: 'Data Scientist',\n    type: 'technical',\n    techStack: ['Python', 'TensorFlow', 'Pandas', 'SQL'],\n    questions: [\n      'Explain the difference between supervised and unsupervised learning',\n      'How do you handle missing data in datasets?',\n      'What is feature engineering and why is it important?',\n      'Describe your experience with neural networks',\n      'How do you validate and test machine learning models?'\n    ],\n    difficulty: 'hard',\n    estimatedDuration: 60,\n    description: 'Data science interview covering machine learning fundamentals'\n  },\n  {\n    id: 'mobile-dev-1',\n    role: 'Mobile Developer',\n    type: 'mixed',\n    techStack: ['React Native', 'JavaScript', 'Firebase', 'Redux'],\n    questions: [\n      'What are the advantages of React Native over native development?',\n      'How do you handle offline functionality in mobile apps?',\n      'Describe your experience with mobile app deployment',\n      'How do you optimize mobile app performance?',\n      'What are your strategies for handling different screen sizes?'\n    ],\n    difficulty: 'medium',\n    estimatedDuration: 45,\n    description: 'Mobile development interview with React Native focus'\n  },\n  {\n    id: 'qa-engineer-1',\n    role: 'QA Engineer',\n    type: 'technical',\n    techStack: ['Selenium', 'Jest', 'Cypress', 'JavaScript'],\n    questions: [\n      'What is the difference between unit testing and integration testing?',\n      'How do you design test cases for a new feature?',\n      'Explain automation testing strategies you have used',\n      'How do you handle flaky tests in your test suite?',\n      'Describe your approach to performance testing'\n    ],\n    difficulty: 'medium',\n    estimatedDuration: 40,\n    description: 'Quality assurance interview focusing on testing strategies'\n  }\n];\n\nconst CURATED_QUESTIONS: QuestionBankQuestion[] = [\n  // Technical Questions\n  {\n    id: 'tech-react-hooks',\n    content: 'Explain the concept of React hooks and provide examples',\n    type: 'technical',\n    difficulty: 'medium',\n    techStack: ['React', 'JavaScript'],\n    category: 'frontend',\n    estimatedTime: 5,\n    metadata: {\n      tags: ['hooks', 'state-management', 'functional-components'],\n      source: 'curated',\n      version: '1.0',\n      lastUpdated: new Date()\n    }\n  },\n  {\n    id: 'tech-virtual-dom',\n    content: 'What is the virtual DOM and how does it work?',\n    type: 'technical',\n    difficulty: 'medium',\n    techStack: ['React', 'JavaScript'],\n    category: 'frontend',\n    estimatedTime: 4,\n    metadata: {\n      tags: ['virtual-dom', 'performance', 'react-internals'],\n      source: 'curated',\n      version: '1.0',\n      lastUpdated: new Date()\n    }\n  },\n  // Add more curated questions...\n];\n\n// ===== SERVICE CLASS =====\n\nclass QuestionBankService {\n  private cache: Map<string, { data: any; timestamp: number; ttl: number }> = new Map();\n  private cacheConfig: CacheConfig = {\n    enabled: true,\n    ttl: 3600, // 1 hour\n    maxSize: 1000\n  };\n\n  constructor(config?: Partial<CacheConfig>) {\n    if (config) {\n      this.cacheConfig = { ...this.cacheConfig, ...config };\n    }\n  }\n\n  // ===== CACHE METHODS =====\n\n  private getCacheKey(method: string, params: any): string {\n    return `qb:${method}:${JSON.stringify(params)}`;\n  }\n\n  private getFromCache<T>(key: string): T | null {\n    if (!this.cacheConfig.enabled) return null;\n\n    const cached = this.cache.get(key);\n    if (!cached) return null;\n\n    const now = Date.now();\n    if (now - cached.timestamp > cached.ttl * 1000) {\n      this.cache.delete(key);\n      return null;\n    }\n\n    return cached.data as T;\n  }\n\n  private setCache(key: string, data: any, ttl?: number): void {\n    if (!this.cacheConfig.enabled) return;\n\n    // Clean up if cache is too large\n    if (this.cache.size >= this.cacheConfig.maxSize) {\n      const oldestKey = this.cache.keys().next().value;\n      if (oldestKey) {\n        this.cache.delete(oldestKey);\n      }\n    }\n\n    this.cache.set(key, {\n      data,\n      timestamp: Date.now(),\n      ttl: ttl || this.cacheConfig.ttl\n    });\n  }\n\n  public invalidateCache(pattern?: string): void {\n    if (pattern) {\n      const keys = Array.from(this.cache.keys()).filter(key => key.includes(pattern));\n      keys.forEach(key => this.cache.delete(key));\n      console.log(`🗑️ Invalidated ${keys.length} cache entries matching pattern: ${pattern}`);\n    } else {\n      this.cache.clear();\n      console.log('🗑️ Invalidated entire question bank cache');\n    }\n  }\n\n  // ===== CORE METHODS =====\n\n  /**\n   * Get interview template by ID or generate one based on criteria\n   */\n  async getInterviewTemplate(\n    templateId: string,\n    options?: QuestionBankOptions\n  ): Promise<InterviewTemplate | null> {\n    const cacheKey = this.getCacheKey('getInterviewTemplate', { templateId, options });\n    const cached = this.getFromCache<InterviewTemplate>(cacheKey);\n    if (cached) return cached;\n\n    try {\n      // First try to find existing template\n      const template = MOCK_INTERVIEW_TEMPLATES.find(t => t.id === templateId);\n      \n      if (template) {\n        this.setCache(cacheKey, template);\n        return template;\n      }\n\n      // If not found and we have enough context, generate one\n      if (options?.role) {\n        const generatedTemplate = await this.generateInterviewTemplate(options);\n        this.setCache(cacheKey, generatedTemplate);\n        return generatedTemplate;\n      }\n\n      return null;\n    } catch (error) {\n      console.error('❌ Error getting interview template:', error);\n      logServerError(error as Error, {\n        service: 'question-bank',\n        action: 'getInterviewTemplate'\n      });\n      return null;\n    }\n  }\n\n  /**\n   * Get questions based on criteria\n   */\n  async getQuestions(options: QuestionBankOptions = {}): Promise<QuestionBankQuestion[]> {\n    const cacheKey = this.getCacheKey('getQuestions', options);\n    const cached = this.getFromCache<QuestionBankQuestion[]>(cacheKey);\n    if (cached) return cached;\n\n    try {\n      let questions = [...CURATED_QUESTIONS];\n\n      // Filter by criteria\n      if (options.type) {\n        questions = questions.filter(q => q.type === options.type);\n      }\n      if (options.difficulty) {\n        questions = questions.filter(q => q.difficulty === options.difficulty);\n      }\n      if (options.techStack) {\n        questions = questions.filter(q => \n          q.techStack.some(tech => options.techStack!.includes(tech))\n        );\n      }\n      if (options.excludeIds) {\n        questions = questions.filter(q => !options.excludeIds!.includes(q.id));\n      }\n\n      // Generate additional questions if needed and enabled\n      if (options.includeGenerated && questions.length < (options.maxQuestions || 10)) {\n        const additionalQuestions = await this.generateQuestions({\n          ...options,\n          maxQuestions: (options.maxQuestions || 10) - questions.length\n        });\n        questions.push(...additionalQuestions);\n      }\n\n      // Apply max limit\n      if (options.maxQuestions) {\n        questions = questions.slice(0, options.maxQuestions);\n      }\n\n      this.setCache(cacheKey, questions);\n      return questions;\n    } catch (error) {\n      console.error('❌ Error getting questions:', error);\n      logServerError(error as Error, {\n        service: 'question-bank',\n        action: 'getQuestions'\n      });\n      return CURATED_QUESTIONS.slice(0, options.maxQuestions || 10);\n    }\n  }\n\n  /**\n   * Generate new questions using AI\n   */\n  private async generateQuestions(options: QuestionBankOptions): Promise<QuestionBankQuestion[]> {\n    try {\n      const prompt = this.buildQuestionGenerationPrompt(options);\n      const response: AzureAIResponse<string[]> = await azureAI.generateQuestions(\n        { \n          name: 'Candidate',\n          experience: options.role || 'Software Developer',\n          education: 'Computer Science',\n          skills: (options.techStack || []).join(', ')\n        },\n        {\n          maxQuestions: options.maxQuestions || 5,\n          difficulty: options.difficulty,\n          interviewType: options.type\n        }\n      );\n\n      if (!response.success || !response.data) {\n        throw new Error(response.error || 'Failed to generate questions');\n      }\n\n      return response.data.map((content: string, index: number) => ({\n        id: `generated-${Date.now()}-${index}`,\n        content,\n        type: options.type || 'mixed',\n        difficulty: options.difficulty || 'medium',\n        techStack: options.techStack || [],\n        category: options.role?.toLowerCase().replace(' ', '-') || 'general',\n        estimatedTime: 5,\n        metadata: {\n          tags: ['generated', 'ai'],\n          source: 'generated' as const,\n          version: '1.0',\n          lastUpdated: new Date()\n        }\n      }));\n    } catch (error) {\n      console.error('❌ Error generating questions:', error);\n      return [];\n    }\n  }\n\n  /**\n   * Generate interview template using AI\n   */\n  private async generateInterviewTemplate(options: QuestionBankOptions): Promise<InterviewTemplate> {\n    const questions = await this.generateQuestions({\n      ...options,\n      maxQuestions: 5,\n      includeGenerated: true\n    });\n\n    return {\n      id: `generated-${Date.now()}`,\n      role: options.role || 'Software Developer',\n      type: options.type || 'mixed',\n      techStack: options.techStack || [],\n      questions: questions.map(q => q.content),\n      difficulty: options.difficulty || 'medium',\n      estimatedDuration: questions.length * 8, // 8 minutes per question\n      description: `Generated interview template for ${options.role || 'Software Developer'}`,\n      metadata: {\n        popularity: 0,\n        successRate: 0,\n        lastUsed: new Date()\n      }\n    };\n  }\n\n  /**\n   * Get all available interview templates\n   */\n  getAllTemplates(): InterviewTemplate[] {\n    return [...MOCK_INTERVIEW_TEMPLATES];\n  }\n\n  /**\n   * Get templates by role\n   */\n  getTemplatesByRole(role: string): InterviewTemplate[] {\n    return MOCK_INTERVIEW_TEMPLATES.filter(t => \n      t.role.toLowerCase().includes(role.toLowerCase())\n    );\n  }\n\n  /**\n   * Build prompt for question generation\n   */\n  private buildQuestionGenerationPrompt(options: QuestionBankOptions): string {\n    const parts = [\n      `Generate ${options.maxQuestions || 5} interview questions for a ${options.role || 'Software Developer'} position.`\n    ];\n\n    if (options.type) {\n      parts.push(`Focus on ${options.type} questions.`);\n    }\n\n    if (options.difficulty) {\n      parts.push(`Questions should be ${options.difficulty} difficulty level.`);\n    }\n\n    if (options.techStack && options.techStack.length > 0) {\n      parts.push(`Include questions about: ${options.techStack.join(', ')}.`);\n    }\n\n    parts.push('Make questions practical and relevant to real-world scenarios.');\n\n    return parts.join(' ');\n  }\n\n  /**\n   * Get cache statistics\n   */\n  getCacheStats() {\n    return {\n      size: this.cache.size,\n      maxSize: this.cacheConfig.maxSize,\n      enabled: this.cacheConfig.enabled,\n      ttl: this.cacheConfig.ttl\n    };\n  }\n}\n\n// ===== EXPORTS =====\n\n// Singleton instance\nexport const questionBankService = new QuestionBankService({\n  enabled: true,\n  ttl: 3600, // 1 hour cache\n  maxSize: 500 // Reasonable size for questions cache\n});\n\n// Export templates for backward compatibility\nexport { MOCK_INTERVIEW_TEMPLATES };\n"],"mappings":";;AAAA;;;;;;AAAA;AAAA,SAAAA,ecAAA;MAAAC,IAAA;MAAAC,QAAA;MAAAC,KAAA;MAAAC,OAAA;MAAAC,cAAA;MAAAC,OAAA;IAAA;IAAAC,eAAA;IAAA5B,IAAA;EAAA;EAAA,IAAA6B,QAAA,GAAA5B,MAAA,CAAAE,GAAA,MAAAF,MAAA,CAAAE,GAAA;EAAA,KAAA0B,QAAA,CAAA9B,IAAA,KAAA8B,QAAA,CAAA9B,IAAA,EAAAC,IAAA,KAAAA,IAAA;IAAA6B,QAAA,CAAA9B,IAAA,IAAAK,YAAA;EAAA;EAAA,IAAA0B,cAAA,GAAAD,QAAA,CAAA9B,IAAA;EAAA;IAmEQ;IAAAD,cAAA,YAAAA,CAAA;MAAA,OAAAgC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAhC,cAAA;AAAAA,cAAA,GAAAoB,CAAA;;;;;;;AA5DR,MAAAa,QAAA;AAAA;AAAA,CAAAjC,cAAA,GAAAoB,CAAA,OAAAc,OAAA;AACA,MAAAC,IAAA;AAAA;AAAA,CAAAnC,cAAA,GAAAoB,CAAA,OAAAc,OAAA;AAsDA;AAEA,MAAME,wBAAwB;AAAA;AAAA,CAAApC,cAAA,GAAAoB,CAAA,OAAwB,CACpD;EACEiB,EAAE,EAAE,gBAAgB;EACpBC,IAAI,EAAE,oBAAoB;EAC1BrB,IAAI,EAAE,WAAW;EACjBsB,SAAS,EAAE,CAAC,OAAO,EAAE,YAAY,EAAE,SAAS,EAAE,cAAc,CAAC;EAC7DC,SAAS,EAAE,CACT,yDAAyD,EACzD,+CAA+C,EAC/C,2DAA2D,EAC3D,4DAA4D,EAC5D,2DAA2D,CAC5D;EACDC,UAAU,EAAE,QAAQ;EACpBC,iBAAiB,EAAE,EAAE;EACrBC,WAAW,EAAE;CACd,EACD;EACEN,EAAE,EAAE,eAAe;EACnBC,IAAI,EAAE,mBAAmB;EACzBrB,IAAI,EAAE,WAAW;EACjBsB,SAAS,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,YAAY,CAAC;EAC1DC,SAAS,EAAE,CACT,uCAAuC,EACvC,sDAAsD,EACtD,8CAA8C,EAC9C,wDAAwD,EACxD,kDAAkD,CACnD;EACDC,UAAU,EAAE,QAAQ;EACpBC,iBAAiB,EAAE,EAAE;EACrBC,WAAW,EAAE;CACd,EACD;EACEN,EAAE,EAAE,iBAAiB;EACrBC,IAAI,EAAE,sBAAsB;EAC5BrB,IAAI,EAAE,OAAO;EACbsB,SAAS,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,YAAY,EAAE,OAAO,CAAC;EACtDC,SAAS,EAAE,CACT,sDAAsD,EACtD,uCAAuC,EACvC,wDAAwD,EACxD,0CAA0C,EAC1C,qDAAqD,CACtD;EACDC,UAAU,EAAE,QAAQ;EACpBC,iBAAiB,EAAE,EAAE;EACrBC,WAAW,EAAE;CACd,EACD;EACEN,EAAE,EAAE,yBAAyB;EAC7BC,IAAI,EAAE,mBAAmB;EACzBrB,IAAI,EAAE,YAAY;EAClBsB,SAAS,EAAE,CAAC,QAAQ,EAAE,SAAS,EAAE,MAAM,EAAE,MAAM,CAAC;EAChDC,SAAS,EAAE,CACT,mDAAmD,EACnD,oDAAoD,EACpD,gEAAgE,EAChE,2DAA2D,EAC3D,yDAAyD,CAC1D;EACDC,UAAU,EAAE,QAAQ;EACpBC,iBAAiB,EAAE,EAAE;EACrBC,WAAW,EAAE;CACd,EACD;EACEN,EAAE,EAAE,cAAc;EAClBC,IAAI,EAAE,iBAAiB;EACvBrB,IAAI,EAAE,WAAW;EACjBsB,SAAS,EAAE,CAAC,QAAQ,EAAE,YAAY,EAAE,KAAK,EAAE,SAAS,CAAC;EACrDC,SAAS,EAAE,CACT,2CAA2C,EAC3C,uCAAuC,EACvC,iCAAiC,EACjC,yDAAyD,EACzD,+CAA+C,CAChD;EACDC,UAAU,EAAE,MAAM;EAClBC,iBAAiB,EAAE,EAAE;EACrBC,WAAW,EAAE;CACd,EACD;EACEN,EAAE,EAAE,kBAAkB;EACtBC,IAAI,EAAE,gBAAgB;EACtBrB,IAAI,EAAE,WAAW;EACjBsB,SAAS,EAAE,CAAC,QAAQ,EAAE,YAAY,EAAE,QAAQ,EAAE,KAAK,CAAC;EACpDC,SAAS,EAAE,CACT,qEAAqE,EACrE,6CAA6C,EAC7C,sDAAsD,EACtD,+CAA+C,EAC/C,uDAAuD,CACxD;EACDC,UAAU,EAAE,MAAM;EAClBC,iBAAiB,EAAE,EAAE;EACrBC,WAAW,EAAE;CACd,EACD;EACEN,EAAE,EAAE,cAAc;EAClBC,IAAI,EAAE,kBAAkB;EACxBrB,IAAI,EAAE,OAAO;EACbsB,SAAS,EAAE,CAAC,cAAc,EAAE,YAAY,EAAE,UAAU,EAAE,OAAO,CAAC;EAC9DC,SAAS,EAAE,CACT,kEAAkE,EAClE,yDAAyD,EACzD,qDAAqD,EACrD,6CAA6C,EAC7C,+DAA+D,CAChE;EACDC,UAAU,EAAE,QAAQ;EACpBC,iBAAiB,EAAE,EAAE;EACrBC,WAAW,EAAE;CACd,EACD;EACEN,EAAE,EAAE,eAAe;EACnBC,IAAI,EAAE,aAAa;EACnBrB,IAAI,EAAE,WAAW;EACjBsB,SAAS,EAAE,CAAC,UAAU,EAAE,MAAM,EAAE,SAAS,EAAE,YAAY,CAAC;EACxDC,SAAS,EAAE,CACT,sEAAsE,EACtE,iDAAiD,EACjD,qDAAqD,EACrD,mDAAmD,EACnD,+CAA+C,CAChD;EACDC,UAAU,EAAE,QAAQ;EACpBC,iBAAiB,EAAE,EAAE;EACrBC,WAAW,EAAE;CACd,CACF;AAAC;AAAA3C,cAAA,GAAAoB,CAAA;AA4UOwB,OAAA,CAAAR,wBAAA,GAAAA,wBAAA;AA1UT,MAAMS,iBAAiB;AAAA;AAAA,CAAA7C,cAAA,GAAAoB,CAAA,OAA2B;AAChD;AACA;EACEiB,EAAE,EAAE,kBAAkB;EACtBS,OAAO,EAAE,yDAAyD;EAClE7B,IAAI,EAAE,WAAW;EACjBwB,UAAU,EAAE,QAAQ;EACpBF,SAAS,EAAE,CAAC,OAAO,EAAE,YAAY,CAAC;EAClCQ,QAAQ,EAAE,UAAU;EACpBC,aAAa,EAAE,CAAC;EAChBC,QAAQ,EAAE;IACRC,IAAI,EAAE,CAAC,OAAO,EAAE,kBAAkB,EAAE,uBAAuB,CAAC;IAC5DC,MAAM,EAAE,SAAS;IACjBtB,OAAO,EAAE,KAAK;IACduB,WAAW,EAAE,IAAIC,IAAI;;CAExB,EACD;EACEhB,EAAE,EAAE,kBAAkB;EACtBS,OAAO,EAAE,+CAA+C;EACxD7B,IAAI,EAAE,WAAW;EACjBwB,UAAU,EAAE,QAAQ;EACpBF,SAAS,EAAE,CAAC,OAAO,EAAE,YAAY,CAAC;EAClCQ,QAAQ,EAAE,UAAU;EACpBC,aAAa,EAAE,CAAC;EAChBC,QAAQ,EAAE;IACRC,IAAI,EAAE,CAAC,aAAa,EAAE,aAAa,EAAE,iBAAiB,CAAC;IACvDC,MAAM,EAAE,SAAS;IACjBtB,OAAO,EAAE,KAAK;IACduB,WAAW,EAAE,IAAIC,IAAI;;;AAGzB;AAAA,CACD;AAED;AAEA,MAAMC,mBAAmB;EAQvBC,YAAYC,MAA6B;IAAA;IAAAxD,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IAPjC,KAAAqC,KAAK,GAA+D,IAAIC,GAAG,EAAE;IAAC;IAAA1D,cAAA,GAAAoB,CAAA;IAC9E,KAAAuC,WAAW,GAAgB;MACjCC,OAAO,EAAE,IAAI;MACbC,GAAG,EAAE,IAAI;MAAE;MACXC,OAAO,EAAE;KACV;IAAC;IAAA9D,cAAA,GAAAoB,CAAA;IAGA,IAAIoC,MAAM,EAAE;MAAA;MAAAxD,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MACV,IAAI,CAACuC,WAAW,GAAAI,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KAAQ,IAAI,CAACL,WAAW,GAAKH,MAAM,CAAE;IACvD,CAAC;IAAA;IAAA;MAAAxD,cAAA,GAAAsB,CAAA;IAAA;EACH;EAEA;EAEQ2C,WAAWA,CAACC,MAAc,EAAEC,MAAW;IAAA;IAAAnE,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IAC7C,OAAO,MAAM8C,MAAM,IAAIE,IAAI,CAACC,SAAS,CAACF,MAAM,CAAC,EAAE;EACjD;EAEQG,YAAYA,CAAIC,GAAW;IAAA;IAAAvE,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IACjC,IAAI,CAAC,IAAI,CAACuC,WAAW,CAACC,OAAO,EAAE;MAAA;MAAA5D,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MAAA,OAAO,IAAI;IAAA,CAAC;IAAA;IAAA;MAAApB,cAAA,GAAAsB,CAAA;IAAA;IAE3C,MAAMkD,MAAM;IAAA;IAAA,CAAAxE,cAAA,GAAAoB,CAAA,QAAG,IAAI,CAACqC,KAAK,CAACgB,GAAG,CAACF,GAAG,CAAC;IAAC;IAAAvE,cAAA,GAAAoB,CAAA;IACnC,IAAI,CAACoD,MAAM,EAAE;MAAA;MAAAxE,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MAAA,OAAO,IAAI;IAAA,CAAC;IAAA;IAAA;MAAApB,cAAA,GAAAsB,CAAA;IAAA;IAEzB,MAAMoD,GAAG;IAAA;IAAA,CAAA1E,cAAA,GAAAoB,CAAA,QAAGiC,IAAI,CAACqB,GAAG,EAAE;IAAC;IAAA1E,cAAA,GAAAoB,CAAA;IACvB,IAAIsD,GAAG,GAAGF,MAAM,CAACG,SAAS,GAAGH,MAAM,CAACX,GAAG,GAAG,IAAI,EAAE;MAAA;MAAA7D,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MAC9C,IAAI,CAACqC,KAAK,CAACmB,MAAM,CAACL,GAAG,CAAC;MAAC;MAAAvE,cAAA,GAAAoB,CAAA;MACvB,OAAO,IAAI;IACb,CAAC;IAAA;IAAA;MAAApB,cAAA,GAAAsB,CAAA;IAAA;IAAAtB,cAAA,GAAAoB,CAAA;IAED,OAAOoD,MAAM,CAACK,IAAS;EACzB;EAEQC,QAAQA,CAACP,GAAW,EAAEM,IAAS,EAAEhB,GAAY;IAAA;IAAA7D,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IACnD,IAAI,CAAC,IAAI,CAACuC,WAAW,CAACC,OAAO,EAAE;MAAA;MAAA5D,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MAAA;IAAA,CAAO;IAAA;IAAA;MAAApB,cAAA,GAAAsB,CAAA;IAAA;IAEtC;IAAAtB,cAAA,GAAAoB,CAAA;IACA,IAAI,IAAI,CAACqC,KAAK,CAACsB,IAAI,IAAI,IAAI,CAACpB,WAAW,CAACG,OAAO,EAAE;MAAA;MAAA9D,cAAA,GAAAsB,CAAA;MAC/C,MAAM0D,SAAS;MAAA;MAAA,CAAAhF,cAAA,GAAAoB,CAAA,QAAG,IAAI,CAACqC,KAAK,CAACwB,IAAI,EAAE,CAACC,IAAI,EAAE,CAACC,KAAK;MAAC;MAAAnF,cAAA,GAAAoB,CAAA;MACjD,IAAI4D,SAAS,EAAE;QAAA;QAAAhF,cAAA,GAAAsB,CAAA;QAAAtB,cAAA,GAAAoB,CAAA;QACb,IAAI,CAACqC,KAAK,CAACmB,MAAM,CAACI,SAAS,CAAC;MAC9B,CAAC;MAAA;MAAA;QAAAhF,cAAA,GAAAsB,CAAA;MAAA;IACH,CAAC;IAAA;IAAA;MAAAtB,cAAA,GAAAsB,CAAA;IAAA;IAAAtB,cAAA,GAAAoB,CAAA;IAED,IAAI,CAACqC,KAAK,CAAC2B,GAAG,CAACb,GAAG,EAAE;MAClBM,IAAI;MACJF,SAAS,EAAEtB,IAAI,CAACqB,GAAG,EAAE;MACrBb,GAAG;MAAE;MAAA,CAAA7D,cAAA,GAAAsB,CAAA,UAAAuC,GAAG;MAAA;MAAA,CAAA7D,cAAA,GAAAsB,CAAA,UAAI,IAAI,CAACqC,WAAW,CAACE,GAAG;KACjC,CAAC;EACJ;EAEOwB,eAAeA,CAACC,OAAgB;IAAA;IAAAtF,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IACrC,IAAIkE,OAAO,EAAE;MAAA;MAAAtF,cAAA,GAAAsB,CAAA;MACX,MAAM2D,IAAI;MAAA;MAAA,CAAAjF,cAAA,GAAAoB,CAAA,QAAGmE,KAAK,CAACC,IAAI,CAAC,IAAI,CAAC/B,KAAK,CAACwB,IAAI,EAAE,CAAC,CAACQ,MAAM,CAAClB,GAAG,IAAI;QAAA;QAAAvE,cAAA,GAAAqB,CAAA;QAAArB,cAAA,GAAAoB,CAAA;QAAA,OAAAmD,GAAG,CAACmB,QAAQ,CAACJ,OAAO,CAAC;MAAD,CAAC,CAAC;MAAC;MAAAtF,cAAA,GAAAoB,CAAA;MAChF6D,IAAI,CAACU,OAAO,CAACpB,GAAG,IAAI;QAAA;QAAAvE,cAAA,GAAAqB,CAAA;QAAArB,cAAA,GAAAoB,CAAA;QAAA,WAAI,CAACqC,KAAK,CAACmB,MAAM,CAACL,GAAG,CAAC;MAAD,CAAC,CAAC;MAAC;MAAAvE,cAAA,GAAAoB,CAAA;MAC5CwE,OAAO,CAACC,GAAG,CAAC,mBAAmBZ,IAAI,CAACa,MAAM,oCAAoCR,OAAO,EAAE,CAAC;IAC1F,CAAC,MAAM;MAAA;MAAAtF,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MACL,IAAI,CAACqC,KAAK,CAACsC,KAAK,EAAE;MAAC;MAAA/F,cAAA,GAAAoB,CAAA;MACnBwE,OAAO,CAACC,GAAG,CAAC,4CAA4C,CAAC;IAC3D;EACF;EAEA;EAEA;;;EAGA,MAAMG,oBAAoBA,CACxBC,UAAkB,EAClBC,OAA6B;IAAA;IAAAlG,cAAA,GAAAqB,CAAA;IAE7B,MAAM8E,QAAQ;IAAA;IAAA,CAAAnG,cAAA,GAAAoB,CAAA,QAAG,IAAI,CAAC6C,WAAW,CAAC,sBAAsB,EAAE;MAAEgC,UAAU;MAAEC;IAAO,CAAE,CAAC;IAClF,MAAM1B,MAAM;IAAA;IAAA,CAAAxE,cAAA,GAAAoB,CAAA,QAAG,IAAI,CAACkD,YAAY,CAAoB6B,QAAQ,CAAC;IAAC;IAAAnG,cAAA,GAAAoB,CAAA;IAC9D,IAAIoD,MAAM,EAAE;MAAA;MAAAxE,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MAAA,OAAOoD,MAAM;IAAA,CAAC;IAAA;IAAA;MAAAxE,cAAA,GAAAsB,CAAA;IAAA;IAAAtB,cAAA,GAAAoB,CAAA;IAE1B,IAAI;MACF;MACA,MAAMgF,QAAQ;MAAA;MAAA,CAAApG,cAAA,GAAAoB,CAAA,QAAGgB,wBAAwB,CAACiE,IAAI,CAACC,CAAC,IAAI;QAAA;QAAAtG,cAAA,GAAAqB,CAAA;QAAArB,cAAA,GAAAoB,CAAA;QAAA,OAAAkF,CAAC,CAACjE,EAAE,KAAK4D,UAAU;MAAV,CAAU,CAAC;MAAC;MAAAjG,cAAA,GAAAoB,CAAA;MAEzE,IAAIgF,QAAQ,EAAE;QAAA;QAAApG,cAAA,GAAAsB,CAAA;QAAAtB,cAAA,GAAAoB,CAAA;QACZ,IAAI,CAAC0D,QAAQ,CAACqB,QAAQ,EAAEC,QAAQ,CAAC;QAAC;QAAApG,cAAA,GAAAoB,CAAA;QAClC,OAAOgF,QAAQ;MACjB,CAAC;MAAA;MAAA;QAAApG,cAAA,GAAAsB,CAAA;MAAA;MAED;MAAAtB,cAAA,GAAAoB,CAAA;MACA;MAAI;MAAA,CAAApB,cAAA,GAAAsB,CAAA,WAAA4E,OAAO;MAAA;MAAA,CAAAlG,cAAA,GAAAsB,CAAA,WAAP4E,OAAO;MAAA;MAAA,CAAAlG,cAAA,GAAAsB,CAAA;MAAA;MAAA,CAAAtB,cAAA,GAAAsB,CAAA,WAAP4E,OAAO,CAAE5D,IAAI,GAAE;QAAA;QAAAtC,cAAA,GAAAsB,CAAA;QACjB,MAAMiF,iBAAiB;QAAA;QAAA,CAAAvG,cAAA,GAAAoB,CAAA,QAAG,MAAM,IAAI,CAACoF,yBAAyB,CAACN,OAAO,CAAC;QAAC;QAAAlG,cAAA,GAAAoB,CAAA;QACxE,IAAI,CAAC0D,QAAQ,CAACqB,QAAQ,EAAEI,iBAAiB,CAAC;QAAC;QAAAvG,cAAA,GAAAoB,CAAA;QAC3C,OAAOmF,iBAAiB;MAC1B,CAAC;MAAA;MAAA;QAAAvG,cAAA,GAAAsB,CAAA;MAAA;MAAAtB,cAAA,GAAAoB,CAAA;MAED,OAAO,IAAI;IACb,CAAC,CAAC,OAAOqF,KAAK,EAAE;MAAA;MAAAzG,cAAA,GAAAoB,CAAA;MACdwE,OAAO,CAACa,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;MAAC;MAAAzG,cAAA,GAAAoB,CAAA;MAC5D,IAAAa,QAAA,CAAAyE,cAAc,EAACD,KAAc,EAAE;QAC7BE,OAAO,EAAE,eAAe;QACxBC,MAAM,EAAE;OACT,CAAC;MAAC;MAAA5G,cAAA,GAAAoB,CAAA;MACH,OAAO,IAAI;IACb;EACF;EAEA;;;EAGA,MAAMyF,YAAYA,CAACX,OAAA;EAAA;EAAA,CAAAlG,cAAA,GAAAsB,CAAA,WAA+B,EAAE;IAAA;IAAAtB,cAAA,GAAAqB,CAAA;IAClD,MAAM8E,QAAQ;IAAA;IAAA,CAAAnG,cAAA,GAAAoB,CAAA,QAAG,IAAI,CAAC6C,WAAW,CAAC,cAAc,EAAEiC,OAAO,CAAC;IAC1D,MAAM1B,MAAM;IAAA;IAAA,CAAAxE,cAAA,GAAAoB,CAAA,QAAG,IAAI,CAACkD,YAAY,CAAyB6B,QAAQ,CAAC;IAAC;IAAAnG,cAAA,GAAAoB,CAAA;IACnE,IAAIoD,MAAM,EAAE;MAAA;MAAAxE,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MAAA,OAAOoD,MAAM;IAAA,CAAC;IAAA;IAAA;MAAAxE,cAAA,GAAAsB,CAAA;IAAA;IAAAtB,cAAA,GAAAoB,CAAA;IAE1B,IAAI;MACF,IAAIoB,SAAS;MAAA;MAAA,CAAAxC,cAAA,GAAAoB,CAAA,QAAG,CAAC,GAAGyB,iBAAiB,CAAC;MAEtC;MAAA;MAAA7C,cAAA,GAAAoB,CAAA;MACA,IAAI8E,OAAO,CAACjF,IAAI,EAAE;QAAA;QAAAjB,cAAA,GAAAsB,CAAA;QAAAtB,cAAA,GAAAoB,CAAA;QAChBoB,SAAS,GAAGA,SAAS,CAACiD,MAAM,CAACqB,CAAC,IAAI;UAAA;UAAA9G,cAAA,GAAAqB,CAAA;UAAArB,cAAA,GAAAoB,CAAA;UAAA,OAAA0F,CAAC,CAAC7F,IAAI,KAAKiF,OAAO,CAACjF,IAAI;QAAJ,CAAI,CAAC;MAC5D,CAAC;MAAA;MAAA;QAAAjB,cAAA,GAAAsB,CAAA;MAAA;MAAAtB,cAAA,GAAAoB,CAAA;MACD,IAAI8E,OAAO,CAACzD,UAAU,EAAE;QAAA;QAAAzC,cAAA,GAAAsB,CAAA;QAAAtB,cAAA,GAAAoB,CAAA;QACtBoB,SAAS,GAAGA,SAAS,CAACiD,MAAM,CAACqB,CAAC,IAAI;UAAA;UAAA9G,cAAA,GAAAqB,CAAA;UAAArB,cAAA,GAAAoB,CAAA;UAAA,OAAA0F,CAAC,CAACrE,UAAU,KAAKyD,OAAO,CAACzD,UAAU;QAAV,CAAU,CAAC;MACxE,CAAC;MAAA;MAAA;QAAAzC,cAAA,GAAAsB,CAAA;MAAA;MAAAtB,cAAA,GAAAoB,CAAA;MACD,IAAI8E,OAAO,CAAC3D,SAAS,EAAE;QAAA;QAAAvC,cAAA,GAAAsB,CAAA;QAAAtB,cAAA,GAAAoB,CAAA;QACrBoB,SAAS,GAAGA,SAAS,CAACiD,MAAM,CAACqB,CAAC,IAC5B;UAAA;UAAA9G,cAAA,GAAAqB,CAAA;UAAArB,cAAA,GAAAoB,CAAA;UAAA,OAAA0F,CAAC,CAACvE,SAAS,CAACwE,IAAI,CAACC,IAAI,IAAI;YAAA;YAAAhH,cAAA,GAAAqB,CAAA;YAAArB,cAAA,GAAAoB,CAAA;YAAA,OAAA8E,OAAO,CAAC3D,SAAU,CAACmD,QAAQ,CAACsB,IAAI,CAAC;UAAD,CAAC,CAAC;QAAD,CAAC,CAC5D;MACH,CAAC;MAAA;MAAA;QAAAhH,cAAA,GAAAsB,CAAA;MAAA;MAAAtB,cAAA,GAAAoB,CAAA;MACD,IAAI8E,OAAO,CAACe,UAAU,EAAE;QAAA;QAAAjH,cAAA,GAAAsB,CAAA;QAAAtB,cAAA,GAAAoB,CAAA;QACtBoB,SAAS,GAAGA,SAAS,CAACiD,MAAM,CAACqB,CAAC,IAAI;UAAA;UAAA9G,cAAA,GAAAqB,CAAA;UAAArB,cAAA,GAAAoB,CAAA;UAAA,QAAC8E,OAAO,CAACe,UAAW,CAACvB,QAAQ,CAACoB,CAAC,CAACzE,EAAE,CAAC;QAAD,CAAC,CAAC;MACxE,CAAC;MAAA;MAAA;QAAArC,cAAA,GAAAsB,CAAA;MAAA;MAED;MAAAtB,cAAA,GAAAoB,CAAA;MACA;MAAI;MAAA,CAAApB,cAAA,GAAAsB,CAAA,WAAA4E,OAAO,CAACgB,gBAAgB;MAAA;MAAA,CAAAlH,cAAA,GAAAsB,CAAA,WAAIkB,SAAS,CAACsD,MAAM;MAAI;MAAA,CAAA9F,cAAA,GAAAsB,CAAA,WAAA4E,OAAO,CAACiB,YAAY;MAAA;MAAA,CAAAnH,cAAA,GAAAsB,CAAA,WAAI,EAAE,EAAC,GAAE;QAAA;QAAAtB,cAAA,GAAAsB,CAAA;QAC/E,MAAM8F,mBAAmB;QAAA;QAAA,CAAApH,cAAA,GAAAoB,CAAA,QAAG,MAAM,IAAI,CAACiG,iBAAiB,CAAAtD,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KACnDkC,OAAO;UACViB,YAAY,EAAE;UAAC;UAAA,CAAAnH,cAAA,GAAAsB,CAAA,WAAA4E,OAAO,CAACiB,YAAY;UAAA;UAAA,CAAAnH,cAAA,GAAAsB,CAAA,WAAI,EAAE,KAAIkB,SAAS,CAACsD;QAAM,GAC7D;QAAC;QAAA9F,cAAA,GAAAoB,CAAA;QACHoB,SAAS,CAAC8E,IAAI,CAAC,GAAGF,mBAAmB,CAAC;MACxC,CAAC;MAAA;MAAA;QAAApH,cAAA,GAAAsB,CAAA;MAAA;MAED;MAAAtB,cAAA,GAAAoB,CAAA;MACA,IAAI8E,OAAO,CAACiB,YAAY,EAAE;QAAA;QAAAnH,cAAA,GAAAsB,CAAA;QAAAtB,cAAA,GAAAoB,CAAA;QACxBoB,SAAS,GAAGA,SAAS,CAAC+E,KAAK,CAAC,CAAC,EAAErB,OAAO,CAACiB,YAAY,CAAC;MACtD,CAAC;MAAA;MAAA;QAAAnH,cAAA,GAAAsB,CAAA;MAAA;MAAAtB,cAAA,GAAAoB,CAAA;MAED,IAAI,CAAC0D,QAAQ,CAACqB,QAAQ,EAAE3D,SAAS,CAAC;MAAC;MAAAxC,cAAA,GAAAoB,CAAA;MACnC,OAAOoB,SAAS;IAClB,CAAC,CAAC,OAAOiE,KAAK,EAAE;MAAA;MAAAzG,cAAA,GAAAoB,CAAA;MACdwE,OAAO,CAACa,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAAC;MAAAzG,cAAA,GAAAoB,CAAA;MACnD,IAAAa,QAAA,CAAAyE,cAAc,EAACD,KAAc,EAAE;QAC7BE,OAAO,EAAE,eAAe;QACxBC,MAAM,EAAE;OACT,CAAC;MAAC;MAAA5G,cAAA,GAAAoB,CAAA;MACH,OAAOyB,iBAAiB,CAAC0E,KAAK,CAAC,CAAC;MAAE;MAAA,CAAAvH,cAAA,GAAAsB,CAAA,WAAA4E,OAAO,CAACiB,YAAY;MAAA;MAAA,CAAAnH,cAAA,GAAAsB,CAAA,WAAI,EAAE,EAAC;IAC/D;EACF;EAEA;;;EAGQ,MAAM+F,iBAAiBA,CAACnB,OAA4B;IAAA;IAAAlG,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IAC1D,IAAI;MACF,MAAMoG,MAAM;MAAA;MAAA,CAAAxH,cAAA,GAAAoB,CAAA,QAAG,IAAI,CAACqG,6BAA6B,CAACvB,OAAO,CAAC;MAC1D,MAAMwB,QAAQ;MAAA;MAAA,CAAA1H,cAAA,GAAAoB,CAAA,QAA8B,MAAMe,IAAA,CAAAwF,OAAO,CAACN,iBAAiB,CACzE;QACExG,IAAI,EAAE,WAAW;QACjB+G,UAAU;QAAE;QAAA,CAAA5H,cAAA,GAAAsB,CAAA,WAAA4E,OAAO,CAAC5D,IAAI;QAAA;QAAA,CAAAtC,cAAA,GAAAsB,CAAA,WAAI,oBAAoB;QAChDuG,SAAS,EAAE,kBAAkB;QAC7BC,MAAM,EAAE;QAAC;QAAA,CAAA9H,cAAA,GAAAsB,CAAA,WAAA4E,OAAO,CAAC3D,SAAS;QAAA;QAAA,CAAAvC,cAAA,GAAAsB,CAAA,WAAI,EAAE,GAAEyG,IAAI,CAAC,IAAI;OAC5C,EACD;QACEZ,YAAY;QAAE;QAAA,CAAAnH,cAAA,GAAAsB,CAAA,WAAA4E,OAAO,CAACiB,YAAY;QAAA;QAAA,CAAAnH,cAAA,GAAAsB,CAAA,WAAI,CAAC;QACvCmB,UAAU,EAAEyD,OAAO,CAACzD,UAAU;QAC9BuF,aAAa,EAAE9B,OAAO,CAACjF;OACxB,CACF;MAAC;MAAAjB,cAAA,GAAAoB,CAAA;MAEF;MAAI;MAAA,CAAApB,cAAA,GAAAsB,CAAA,YAACoG,QAAQ,CAACO,OAAO;MAAA;MAAA,CAAAjI,cAAA,GAAAsB,CAAA,WAAI,CAACoG,QAAQ,CAAC7C,IAAI,GAAE;QAAA;QAAA7E,cAAA,GAAAsB,CAAA;QAAAtB,cAAA,GAAAoB,CAAA;QACvC,MAAM,IAAI8G,KAAK;QAAC;QAAA,CAAAlI,cAAA,GAAAsB,CAAA,WAAAoG,QAAQ,CAACjB,KAAK;QAAA;QAAA,CAAAzG,cAAA,GAAAsB,CAAA,WAAI,8BAA8B,EAAC;MACnE,CAAC;MAAA;MAAA;QAAAtB,cAAA,GAAAsB,CAAA;MAAA;MAAAtB,cAAA,GAAAoB,CAAA;MAED,OAAOsG,QAAQ,CAAC7C,IAAI,CAACsD,GAAG,CAAC,CAACrF,OAAe,EAAEsF,KAAa,KAAI;QAAA;QAAApI,cAAA,GAAAqB,CAAA;;;;QAAC,OAAC;UAC5DgB,EAAE,EAAE,aAAagB,IAAI,CAACqB,GAAG,EAAE,IAAI0D,KAAK,EAAE;UACtCtF,OAAO;UACP7B,IAAI;UAAE;UAAA,CAAAjB,cAAA,GAAAsB,CAAA,WAAA4E,OAAO,CAACjF,IAAI;UAAA;UAAA,CAAAjB,cAAA,GAAAsB,CAAA,WAAI,OAAO;UAC7BmB,UAAU;UAAE;UAAA,CAAAzC,cAAA,GAAAsB,CAAA,WAAA4E,OAAO,CAACzD,UAAU;UAAA;UAAA,CAAAzC,cAAA,GAAAsB,CAAA,WAAI,QAAQ;UAC1CiB,SAAS;UAAE;UAAA,CAAAvC,cAAA,GAAAsB,CAAA,WAAA4E,OAAO,CAAC3D,SAAS;UAAA;UAAA,CAAAvC,cAAA,GAAAsB,CAAA,WAAI,EAAE;UAClCyB,QAAQ;UAAE;UAAA,CAAA/C,cAAA,GAAAsB,CAAA;UAAA;UAAA,CAAAtB,cAAA,GAAAsB,CAAA,YAAA+G,EAAA,GAAAnC,OAAO,CAAC5D,IAAI;UAAA;UAAA,CAAAtC,cAAA,GAAAsB,CAAA,WAAA+G,EAAA;UAAA;UAAA,CAAArI,cAAA,GAAAsB,CAAA;UAAA;UAAA,CAAAtB,cAAA,GAAAsB,CAAA,WAAA+G,EAAA,CAAEC,WAAW,GAAGC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC;UAAA;UAAA,CAAAvI,cAAA,GAAAsB,CAAA,WAAI,SAAS;UACpE0B,aAAa,EAAE,CAAC;UAChBC,QAAQ,EAAE;YACRC,IAAI,EAAE,CAAC,WAAW,EAAE,IAAI,CAAC;YACzBC,MAAM,EAAE,WAAoB;YAC5BtB,OAAO,EAAE,KAAK;YACduB,WAAW,EAAE,IAAIC,IAAI;;SAExB;OAAC,CAAC;IACL,CAAC,CAAC,OAAOoD,KAAK,EAAE;MAAA;MAAAzG,cAAA,GAAAoB,CAAA;MACdwE,OAAO,CAACa,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MAAC;MAAAzG,cAAA,GAAAoB,CAAA;MACtD,OAAO,EAAE;IACX;EACF;EAEA;;;EAGQ,MAAMoF,yBAAyBA,CAACN,OAA4B;IAAA;IAAAlG,cAAA,GAAAqB,CAAA;IAClE,MAAMmB,SAAS;IAAA;IAAA,CAAAxC,cAAA,GAAAoB,CAAA,QAAG,MAAM,IAAI,CAACiG,iBAAiB,CAAAtD,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KACzCkC,OAAO;MACViB,YAAY,EAAE,CAAC;MACfD,gBAAgB,EAAE;IAAI,GACtB;IAAC;IAAAlH,cAAA,GAAAoB,CAAA;IAEH,OAAO;MACLiB,EAAE,EAAE,aAAagB,IAAI,CAACqB,GAAG,EAAE,EAAE;MAC7BpC,IAAI;MAAE;MAAA,CAAAtC,cAAA,GAAAsB,CAAA,WAAA4E,OAAO,CAAC5D,IAAI;MAAA;MAAA,CAAAtC,cAAA,GAAAsB,CAAA,WAAI,oBAAoB;MAC1CL,IAAI;MAAE;MAAA,CAAAjB,cAAA,GAAAsB,CAAA,WAAA4E,OAAO,CAACjF,IAAI;MAAA;MAAA,CAAAjB,cAAA,GAAAsB,CAAA,WAAI,OAAO;MAC7BiB,SAAS;MAAE;MAAA,CAAAvC,cAAA,GAAAsB,CAAA,WAAA4E,OAAO,CAAC3D,SAAS;MAAA;MAAA,CAAAvC,cAAA,GAAAsB,CAAA,WAAI,EAAE;MAClCkB,SAAS,EAAEA,SAAS,CAAC2F,GAAG,CAACrB,CAAC,IAAI;QAAA;QAAA9G,cAAA,GAAAqB,CAAA;QAAArB,cAAA,GAAAoB,CAAA;QAAA,OAAA0F,CAAC,CAAChE,OAAO;MAAP,CAAO,CAAC;MACxCL,UAAU;MAAE;MAAA,CAAAzC,cAAA,GAAAsB,CAAA,WAAA4E,OAAO,CAACzD,UAAU;MAAA;MAAA,CAAAzC,cAAA,GAAAsB,CAAA,WAAI,QAAQ;MAC1CoB,iBAAiB,EAAEF,SAAS,CAACsD,MAAM,GAAG,CAAC;MAAE;MACzCnD,WAAW,EAAE;MAAoC;MAAA,CAAA3C,cAAA,GAAAsB,CAAA,WAAA4E,OAAO,CAAC5D,IAAI;MAAA;MAAA,CAAAtC,cAAA,GAAAsB,CAAA,WAAI,oBAAoB,GAAE;MACvF2B,QAAQ,EAAE;QACRuF,UAAU,EAAE,CAAC;QACbC,WAAW,EAAE,CAAC;QACdC,QAAQ,EAAE,IAAIrF,IAAI;;KAErB;EACH;EAEA;;;EAGAsF,eAAeA,CAAA;IAAA;IAAA3I,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IACb,OAAO,CAAC,GAAGgB,wBAAwB,CAAC;EACtC;EAEA;;;EAGAwG,kBAAkBA,CAACtG,IAAY;IAAA;IAAAtC,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IAC7B,OAAOgB,wBAAwB,CAACqD,MAAM,CAACa,CAAC,IACtC;MAAA;MAAAtG,cAAA,GAAAqB,CAAA;MAAArB,cAAA,GAAAoB,CAAA;MAAA,OAAAkF,CAAC,CAAChE,IAAI,CAACgG,WAAW,EAAE,CAAC5C,QAAQ,CAACpD,IAAI,CAACgG,WAAW,EAAE,CAAC;IAAD,CAAC,CAClD;EACH;EAEA;;;EAGQb,6BAA6BA,CAACvB,OAA4B;IAAA;IAAAlG,cAAA,GAAAqB,CAAA;IAChE,MAAMwH,KAAK;IAAA;IAAA,CAAA7I,cAAA,GAAAoB,CAAA,QAAG,CACZ;IAAY;IAAA,CAAApB,cAAA,GAAAsB,CAAA,WAAA4E,OAAO,CAACiB,YAAY;IAAA;IAAA,CAAAnH,cAAA,GAAAsB,CAAA,WAAI,CAAC;IAA8B;IAAA,CAAAtB,cAAA,GAAAsB,CAAA,WAAA4E,OAAO,CAAC5D,IAAI;IAAA;IAAA,CAAAtC,cAAA,GAAAsB,CAAA,WAAI,oBAAoB,aAAY,CACpH;IAAC;IAAAtB,cAAA,GAAAoB,CAAA;IAEF,IAAI8E,OAAO,CAACjF,IAAI,EAAE;MAAA;MAAAjB,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MAChByH,KAAK,CAACvB,IAAI,CAAC,YAAYpB,OAAO,CAACjF,IAAI,aAAa,CAAC;IACnD,CAAC;IAAA;IAAA;MAAAjB,cAAA,GAAAsB,CAAA;IAAA;IAAAtB,cAAA,GAAAoB,CAAA;IAED,IAAI8E,OAAO,CAACzD,UAAU,EAAE;MAAA;MAAAzC,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MACtByH,KAAK,CAACvB,IAAI,CAAC,uBAAuBpB,OAAO,CAACzD,UAAU,oBAAoB,CAAC;IAC3E,CAAC;IAAA;IAAA;MAAAzC,cAAA,GAAAsB,CAAA;IAAA;IAAAtB,cAAA,GAAAoB,CAAA;IAED;IAAI;IAAA,CAAApB,cAAA,GAAAsB,CAAA,WAAA4E,OAAO,CAAC3D,SAAS;IAAA;IAAA,CAAAvC,cAAA,GAAAsB,CAAA,WAAI4E,OAAO,CAAC3D,SAAS,CAACuD,MAAM,GAAG,CAAC,GAAE;MAAA;MAAA9F,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MACrDyH,KAAK,CAACvB,IAAI,CAAC,4BAA4BpB,OAAO,CAAC3D,SAAS,CAACwF,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;IACzE,CAAC;IAAA;IAAA;MAAA/H,cAAA,GAAAsB,CAAA;IAAA;IAAAtB,cAAA,GAAAoB,CAAA;IAEDyH,KAAK,CAACvB,IAAI,CAAC,gEAAgE,CAAC;IAAC;IAAAtH,cAAA,GAAAoB,CAAA;IAE7E,OAAOyH,KAAK,CAACd,IAAI,CAAC,GAAG,CAAC;EACxB;EAEA;;;EAGAe,aAAaA,CAAA;IAAA;IAAA9I,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IACX,OAAO;MACL2D,IAAI,EAAE,IAAI,CAACtB,KAAK,CAACsB,IAAI;MACrBjB,OAAO,EAAE,IAAI,CAACH,WAAW,CAACG,OAAO;MACjCF,OAAO,EAAE,IAAI,CAACD,WAAW,CAACC,OAAO;MACjCC,GAAG,EAAE,IAAI,CAACF,WAAW,CAACE;KACvB;EACH;;AAGF;AAEA;AAAA;AAAA7D,cAAA,GAAAoB,CAAA;AACawB,OAAA,CAAAmG,mBAAmB,GAAG,IAAIzF,mBAAmB,CAAC;EACzDM,OAAO,EAAE,IAAI;EACbC,GAAG,EAAE,IAAI;EAAE;EACXC,OAAO,EAAE,GAAG,CAAC;CACd,CAAC","ignoreList":[]}