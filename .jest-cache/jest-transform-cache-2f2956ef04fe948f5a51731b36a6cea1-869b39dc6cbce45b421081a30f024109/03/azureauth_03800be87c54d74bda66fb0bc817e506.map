{"version":3,"names":["cov_5300tinbj","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","exports","azureAuthMiddleware","azureRoleMiddleware","azureAdminMiddleware","createAuthenticatedAzureFunction","createAdminAzureFunction","createRoleBasedAzureFunction","createAzureHealthResponse","extractUserFromAzureRequest","legacyAzureAuthMiddleware","initializeFirebaseForAzure","benchmarkAzureAuth","core_1","require","types_1","context","req","options","monitor","AuthPerformanceMonitor","getInstance","endTiming","startTiming","authHeader","headers","authorization","Authorization","authResult","verifyAuthHeader","success","user","error","UnifiedAuthError","errorCode","AuthErrorCode","INVALID_TOKEN","response","createAzureErrorResponse","message","code","_a","requiredRoles","length","auth","getUnifiedAuth","hasRequiredRoles","insufficientPermissions","customValidator","isValid","INSUFFICIENT_PERMISSIONS","log","info","uid","email","authError","UNKNOWN_ERROR","handlerFunction","skipAuth","res","status","statusCode","body","JSON","stringify","details","timestamp","Date","toISOString","service","initialize","iterations","results","i","duration","push","sorted","sort","a","sum","reduce","stats","average","median","Math","floor","p95","p99","min","max"],"sources":["/Users/dikshantvashistha/PrepBettr/lib/shared/auth/adapters/azure-auth.ts"],"sourcesContent":["/**\n * Azure Functions Authentication Middleware Adapter\n * \n * Provides Azure Functions-specific authentication middleware using the unified auth library\n */\n\nimport { \n  getUnifiedAuth, \n  verifyAuthHeader, \n  UnifiedAuthError,\n  AuthPerformanceMonitor \n} from '../core';\nimport { \n  AuthenticatedUser, \n  AuthMiddlewareOptions, \n  AuthMiddlewareResult,\n  AuthErrorCode,\n  AzureContext,\n  AzureRequest \n} from '../types';\n\n// ===== AZURE FUNCTIONS MIDDLEWARE =====\n\n/**\n * Core authentication middleware for Azure Functions\n */\nexport async function azureAuthMiddleware(\n  context: AzureContext,\n  req: AzureRequest,\n  options: AuthMiddlewareOptions = {}\n): Promise<AuthMiddlewareResult<any>> {\n  const monitor = AuthPerformanceMonitor.getInstance();\n  const endTiming = monitor.startTiming('azure-auth-middleware');\n\n  try {\n    const authHeader = req.headers.authorization || req.headers.Authorization;\n    const authResult = await verifyAuthHeader(authHeader);\n\n    if (!authResult.success || !authResult.user) {\n      const error = new UnifiedAuthError(\n        authResult.errorCode || AuthErrorCode.INVALID_TOKEN,\n        authResult.error || 'Authentication failed'\n      );\n\n      return {\n        success: false,\n        user: null,\n        response: createAzureErrorResponse(error),\n        error: error.message,\n        errorCode: error.code\n      };\n    }\n\n    // Check roles if required\n    if (options.requiredRoles?.length) {\n      const auth = getUnifiedAuth();\n      if (!auth.hasRequiredRoles(authResult.user, options.requiredRoles)) {\n        const error = UnifiedAuthError.insufficientPermissions(options.requiredRoles);\n        return {\n          success: false,\n          user: null,\n          response: createAzureErrorResponse(error),\n          error: error.message,\n          errorCode: error.code\n        };\n      }\n    }\n\n    // Custom validation\n    if (options.customValidator) {\n      const isValid = await options.customValidator(authResult.user);\n      if (!isValid) {\n        const error = new UnifiedAuthError(\n          AuthErrorCode.INSUFFICIENT_PERMISSIONS,\n          'Custom validation failed'\n        );\n        return {\n          success: false,\n          user: null,\n          response: createAzureErrorResponse(error),\n          error: error.message,\n          errorCode: error.code\n        };\n      }\n    }\n\n    // Log successful authentication\n    context.log.info(`Authenticated user: ${authResult.user.uid} (${authResult.user.email})`);\n\n    endTiming();\n    return {\n      success: true,\n      user: authResult.user\n    };\n\n  } catch (error) {\n    endTiming();\n    context.log.error(`Azure Functions auth middleware error: ${error}`);\n    \n    const authError = error instanceof UnifiedAuthError ? error : \n      new UnifiedAuthError(AuthErrorCode.UNKNOWN_ERROR, 'Authentication system error');\n\n    return {\n      success: false,\n      user: null,\n      response: createAzureErrorResponse(authError),\n      error: authError.message,\n      errorCode: authError.code\n    };\n  }\n}\n\n/**\n * Role-based authentication middleware for Azure Functions\n */\nexport async function azureRoleMiddleware(\n  context: AzureContext,\n  req: AzureRequest,\n  requiredRoles: string[]\n): Promise<AuthMiddlewareResult<any>> {\n  return azureAuthMiddleware(context, req, { requiredRoles });\n}\n\n/**\n * Admin-only middleware for Azure Functions\n */\nexport async function azureAdminMiddleware(\n  context: AzureContext,\n  req: AzureRequest\n): Promise<AuthMiddlewareResult<any>> {\n  return azureAuthMiddleware(context, req, { requiredRoles: ['admin'] });\n}\n\n// ===== HIGHER-ORDER FUNCTIONS =====\n\n/**\n * Create authenticated Azure Function wrapper\n */\nexport function createAuthenticatedAzureFunction(\n  handlerFunction: (context: AzureContext, req: AzureRequest, user: AuthenticatedUser) => Promise<void>,\n  options: AuthMiddlewareOptions = {}\n) {\n  return async function (context: AzureContext, req: AzureRequest): Promise<void> {\n    if (options.skipAuth) {\n      return await handlerFunction(context, req, null as any);\n    }\n\n    const authResult = await azureAuthMiddleware(context, req, options);\n\n    if (!authResult.success || !authResult.user) {\n      context.res = authResult.response;\n      return;\n    }\n\n    // Call the actual handler with the authenticated user\n    return await handlerFunction(context, req, authResult.user);\n  };\n}\n\n/**\n * Create admin-only Azure Function wrapper\n */\nexport function createAdminAzureFunction(\n  handlerFunction: (context: AzureContext, req: AzureRequest, user: AuthenticatedUser) => Promise<void>\n) {\n  return createAuthenticatedAzureFunction(handlerFunction, { requiredRoles: ['admin'] });\n}\n\n/**\n * Create role-based Azure Function wrapper\n */\nexport function createRoleBasedAzureFunction(\n  handlerFunction: (context: AzureContext, req: AzureRequest, user: AuthenticatedUser) => Promise<void>,\n  requiredRoles: string[]\n) {\n  return createAuthenticatedAzureFunction(handlerFunction, { requiredRoles });\n}\n\n// ===== UTILITY FUNCTIONS =====\n\n/**\n * Create standardized error response for Azure Functions\n */\nfunction createAzureErrorResponse(error: UnifiedAuthError): any {\n  return {\n    status: error.statusCode || 500,\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      error: error.message,\n      code: error.code,\n      details: error.details\n    })\n  };\n}\n\n/**\n * Create health check response for Azure Functions\n */\nexport function createAzureHealthResponse(): any {\n  return {\n    status: 200,\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      status: 'healthy',\n      timestamp: new Date().toISOString(),\n      service: 'Azure Functions Unified Auth Middleware'\n    })\n  };\n}\n\n/**\n * Extract user from Azure Functions request\n */\nexport async function extractUserFromAzureRequest(\n  context: AzureContext,\n  req: AzureRequest\n): Promise<AuthenticatedUser | null> {\n  try {\n    const authHeader = req.headers.authorization || req.headers.Authorization;\n    const authResult = await verifyAuthHeader(authHeader);\n    \n    return authResult.success ? authResult.user : null;\n  } catch (error) {\n    context.log.error(`Failed to extract user from Azure request: ${error}`);\n    return null;\n  }\n}\n\n// ===== LEGACY COMPATIBILITY =====\n\n/**\n * Legacy Azure Functions middleware format (for backward compatibility)\n */\nexport async function legacyAzureAuthMiddleware(context: AzureContext, req: AzureRequest) {\n  const authResult = await azureAuthMiddleware(context, req);\n  \n  // Return in the old format for backward compatibility\n  return {\n    success: authResult.success,\n    user: authResult.user,\n    response: authResult.response\n  };\n}\n\n/**\n * Initialize Firebase for Azure Functions (backward compatibility)\n */\nexport async function initializeFirebaseForAzure(): Promise<any> {\n  const auth = getUnifiedAuth();\n  await auth.initialize();\n  return auth;\n}\n\n// ===== PERFORMANCE HELPERS =====\n\n/**\n * Benchmark Azure Functions authentication performance\n */\nexport async function benchmarkAzureAuth(\n  context: AzureContext,\n  req: AzureRequest,\n  iterations: number = 100\n): Promise<Record<string, any>> {\n  const monitor = AuthPerformanceMonitor.getInstance();\n  const results: number[] = [];\n\n  for (let i = 0; i < iterations; i++) {\n    const endTiming = monitor.startTiming('benchmark');\n    await azureAuthMiddleware(context, req);\n    const duration = endTiming();\n    results.push(duration);\n  }\n\n  const sorted = results.sort((a, b) => a - b);\n  const sum = results.reduce((a, b) => a + b, 0);\n\n  const stats = {\n    iterations,\n    average: sum / iterations,\n    median: sorted[Math.floor(sorted.length / 2)],\n    p95: sorted[Math.floor(sorted.length * 0.95)],\n    p99: sorted[Math.floor(sorted.length * 0.99)],\n    min: sorted[0],\n    max: sorted[sorted.length - 1]\n  };\n\n  context.log.info(`Azure auth performance benchmark: ${JSON.stringify(stats)}`);\n  return stats;\n}\n"],"mappings":"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","ignoreList":[]}