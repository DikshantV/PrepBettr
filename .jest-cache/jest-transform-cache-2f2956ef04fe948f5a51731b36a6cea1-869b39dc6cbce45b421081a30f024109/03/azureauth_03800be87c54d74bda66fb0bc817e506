0f441d10234f3c2aeb32a7f43932a40d
"use strict";

/**
 * Azure Functions Authentication Middleware Adapter
 *
 * Provides Azure Functions-specific authentication middleware using the unified auth library
 */
/* istanbul ignore next */
function cov_5300tinbj() {
  var path = "/Users/dikshantvashistha/PrepBettr/lib/shared/auth/adapters/azure-auth.ts";
  var hash = "7d82059fab532ef293afe23c0eee44eb600686d7";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dikshantvashistha/PrepBettr/lib/shared/auth/adapters/azure-auth.ts",
    statementMap: {
      "0": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 7,
          column: 62
        }
      },
      "1": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 50
        }
      },
      "2": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 50
        }
      },
      "3": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 10,
          column: 52
        }
      },
      "4": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 76
        }
      },
      "5": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 60
        }
      },
      "6": {
        start: {
          line: 13,
          column: 0
        },
        end: {
          line: 13,
          column: 68
        }
      },
      "7": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 14,
          column: 62
        }
      },
      "8": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 15,
          column: 66
        }
      },
      "9": {
        start: {
          line: 16,
          column: 0
        },
        end: {
          line: 16,
          column: 62
        }
      },
      "10": {
        start: {
          line: 17,
          column: 0
        },
        end: {
          line: 17,
          column: 64
        }
      },
      "11": {
        start: {
          line: 18,
          column: 0
        },
        end: {
          line: 18,
          column: 48
        }
      },
      "12": {
        start: {
          line: 19,
          column: 15
        },
        end: {
          line: 19,
          column: 33
        }
      },
      "13": {
        start: {
          line: 20,
          column: 16
        },
        end: {
          line: 20,
          column: 35
        }
      },
      "14": {
        start: {
          line: 27,
          column: 20
        },
        end: {
          line: 27,
          column: 63
        }
      },
      "15": {
        start: {
          line: 28,
          column: 22
        },
        end: {
          line: 28,
          column: 66
        }
      },
      "16": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 90,
          column: 5
        }
      },
      "17": {
        start: {
          line: 30,
          column: 27
        },
        end: {
          line: 30,
          column: 81
        }
      },
      "18": {
        start: {
          line: 31,
          column: 27
        },
        end: {
          line: 31,
          column: 73
        }
      },
      "19": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 41,
          column: 9
        }
      },
      "20": {
        start: {
          line: 33,
          column: 26
        },
        end: {
          line: 33,
          column: 159
        }
      },
      "21": {
        start: {
          line: 34,
          column: 12
        },
        end: {
          line: 40,
          column: 14
        }
      },
      "22": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 55,
          column: 9
        }
      },
      "23": {
        start: {
          line: 44,
          column: 25
        },
        end: {
          line: 44,
          column: 53
        }
      },
      "24": {
        start: {
          line: 45,
          column: 12
        },
        end: {
          line: 54,
          column: 13
        }
      },
      "25": {
        start: {
          line: 46,
          column: 30
        },
        end: {
          line: 46,
          column: 100
        }
      },
      "26": {
        start: {
          line: 47,
          column: 16
        },
        end: {
          line: 53,
          column: 18
        }
      },
      "27": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 69,
          column: 9
        }
      },
      "28": {
        start: {
          line: 58,
          column: 28
        },
        end: {
          line: 58,
          column: 74
        }
      },
      "29": {
        start: {
          line: 59,
          column: 12
        },
        end: {
          line: 68,
          column: 13
        }
      },
      "30": {
        start: {
          line: 60,
          column: 30
        },
        end: {
          line: 60,
          column: 133
        }
      },
      "31": {
        start: {
          line: 61,
          column: 16
        },
        end: {
          line: 67,
          column: 18
        }
      },
      "32": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 71,
          column: 98
        }
      },
      "33": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 72,
          column: 20
        }
      },
      "34": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 76,
          column: 10
        }
      },
      "35": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 79,
          column: 20
        }
      },
      "36": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 80,
          column: 77
        }
      },
      "37": {
        start: {
          line: 81,
          column: 26
        },
        end: {
          line: 82,
          column: 107
        }
      },
      "38": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 89,
          column: 10
        }
      },
      "39": {
        start: {
          line: 96,
          column: 4
        },
        end: {
          line: 96,
          column: 64
        }
      },
      "40": {
        start: {
          line: 102,
          column: 4
        },
        end: {
          line: 102,
          column: 75
        }
      },
      "41": {
        start: {
          line: 109,
          column: 4
        },
        end: {
          line: 120,
          column: 6
        }
      },
      "42": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 112,
          column: 9
        }
      },
      "43": {
        start: {
          line: 111,
          column: 12
        },
        end: {
          line: 111,
          column: 61
        }
      },
      "44": {
        start: {
          line: 113,
          column: 27
        },
        end: {
          line: 113,
          column: 75
        }
      },
      "45": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 117,
          column: 9
        }
      },
      "46": {
        start: {
          line: 115,
          column: 12
        },
        end: {
          line: 115,
          column: 46
        }
      },
      "47": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 116,
          column: 19
        }
      },
      "48": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 119,
          column: 68
        }
      },
      "49": {
        start: {
          line: 126,
          column: 4
        },
        end: {
          line: 126,
          column: 91
        }
      },
      "50": {
        start: {
          line: 132,
          column: 4
        },
        end: {
          line: 132,
          column: 80
        }
      },
      "51": {
        start: {
          line: 139,
          column: 4
        },
        end: {
          line: 149,
          column: 6
        }
      },
      "52": {
        start: {
          line: 155,
          column: 4
        },
        end: {
          line: 165,
          column: 6
        }
      },
      "53": {
        start: {
          line: 171,
          column: 4
        },
        end: {
          line: 179,
          column: 5
        }
      },
      "54": {
        start: {
          line: 172,
          column: 27
        },
        end: {
          line: 172,
          column: 81
        }
      },
      "55": {
        start: {
          line: 173,
          column: 27
        },
        end: {
          line: 173,
          column: 73
        }
      },
      "56": {
        start: {
          line: 174,
          column: 8
        },
        end: {
          line: 174,
          column: 59
        }
      },
      "57": {
        start: {
          line: 177,
          column: 8
        },
        end: {
          line: 177,
          column: 81
        }
      },
      "58": {
        start: {
          line: 178,
          column: 8
        },
        end: {
          line: 178,
          column: 20
        }
      },
      "59": {
        start: {
          line: 186,
          column: 23
        },
        end: {
          line: 186,
          column: 62
        }
      },
      "60": {
        start: {
          line: 188,
          column: 4
        },
        end: {
          line: 192,
          column: 6
        }
      },
      "61": {
        start: {
          line: 198,
          column: 17
        },
        end: {
          line: 198,
          column: 45
        }
      },
      "62": {
        start: {
          line: 199,
          column: 4
        },
        end: {
          line: 199,
          column: 28
        }
      },
      "63": {
        start: {
          line: 200,
          column: 4
        },
        end: {
          line: 200,
          column: 16
        }
      },
      "64": {
        start: {
          line: 207,
          column: 20
        },
        end: {
          line: 207,
          column: 63
        }
      },
      "65": {
        start: {
          line: 208,
          column: 20
        },
        end: {
          line: 208,
          column: 22
        }
      },
      "66": {
        start: {
          line: 209,
          column: 4
        },
        end: {
          line: 214,
          column: 5
        }
      },
      "67": {
        start: {
          line: 209,
          column: 17
        },
        end: {
          line: 209,
          column: 18
        }
      },
      "68": {
        start: {
          line: 210,
          column: 26
        },
        end: {
          line: 210,
          column: 58
        }
      },
      "69": {
        start: {
          line: 211,
          column: 8
        },
        end: {
          line: 211,
          column: 48
        }
      },
      "70": {
        start: {
          line: 212,
          column: 25
        },
        end: {
          line: 212,
          column: 36
        }
      },
      "71": {
        start: {
          line: 213,
          column: 8
        },
        end: {
          line: 213,
          column: 31
        }
      },
      "72": {
        start: {
          line: 215,
          column: 19
        },
        end: {
          line: 215,
          column: 48
        }
      },
      "73": {
        start: {
          line: 215,
          column: 42
        },
        end: {
          line: 215,
          column: 47
        }
      },
      "74": {
        start: {
          line: 216,
          column: 16
        },
        end: {
          line: 216,
          column: 50
        }
      },
      "75": {
        start: {
          line: 216,
          column: 41
        },
        end: {
          line: 216,
          column: 46
        }
      },
      "76": {
        start: {
          line: 217,
          column: 18
        },
        end: {
          line: 225,
          column: 5
        }
      },
      "77": {
        start: {
          line: 226,
          column: 4
        },
        end: {
          line: 226,
          column: 83
        }
      },
      "78": {
        start: {
          line: 227,
          column: 4
        },
        end: {
          line: 227,
          column: 17
        }
      }
    },
    fnMap: {
      "0": {
        name: "azureAuthMiddleware",
        decl: {
          start: {
            line: 25,
            column: 15
          },
          end: {
            line: 25,
            column: 34
          }
        },
        loc: {
          start: {
            line: 25,
            column: 63
          },
          end: {
            line: 91,
            column: 1
          }
        },
        line: 25
      },
      "1": {
        name: "azureRoleMiddleware",
        decl: {
          start: {
            line: 95,
            column: 15
          },
          end: {
            line: 95,
            column: 34
          }
        },
        loc: {
          start: {
            line: 95,
            column: 64
          },
          end: {
            line: 97,
            column: 1
          }
        },
        line: 95
      },
      "2": {
        name: "azureAdminMiddleware",
        decl: {
          start: {
            line: 101,
            column: 15
          },
          end: {
            line: 101,
            column: 35
          }
        },
        loc: {
          start: {
            line: 101,
            column: 50
          },
          end: {
            line: 103,
            column: 1
          }
        },
        line: 101
      },
      "3": {
        name: "createAuthenticatedAzureFunction",
        decl: {
          start: {
            line: 108,
            column: 9
          },
          end: {
            line: 108,
            column: 41
          }
        },
        loc: {
          start: {
            line: 108,
            column: 73
          },
          end: {
            line: 121,
            column: 1
          }
        },
        line: 108
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 109,
            column: 11
          },
          end: {
            line: 109,
            column: 12
          }
        },
        loc: {
          start: {
            line: 109,
            column: 41
          },
          end: {
            line: 120,
            column: 5
          }
        },
        line: 109
      },
      "5": {
        name: "createAdminAzureFunction",
        decl: {
          start: {
            line: 125,
            column: 9
          },
          end: {
            line: 125,
            column: 33
          }
        },
        loc: {
          start: {
            line: 125,
            column: 51
          },
          end: {
            line: 127,
            column: 1
          }
        },
        line: 125
      },
      "6": {
        name: "createRoleBasedAzureFunction",
        decl: {
          start: {
            line: 131,
            column: 9
          },
          end: {
            line: 131,
            column: 37
          }
        },
        loc: {
          start: {
            line: 131,
            column: 70
          },
          end: {
            line: 133,
            column: 1
          }
        },
        line: 131
      },
      "7": {
        name: "createAzureErrorResponse",
        decl: {
          start: {
            line: 138,
            column: 9
          },
          end: {
            line: 138,
            column: 33
          }
        },
        loc: {
          start: {
            line: 138,
            column: 41
          },
          end: {
            line: 150,
            column: 1
          }
        },
        line: 138
      },
      "8": {
        name: "createAzureHealthResponse",
        decl: {
          start: {
            line: 154,
            column: 9
          },
          end: {
            line: 154,
            column: 34
          }
        },
        loc: {
          start: {
            line: 154,
            column: 37
          },
          end: {
            line: 166,
            column: 1
          }
        },
        line: 154
      },
      "9": {
        name: "extractUserFromAzureRequest",
        decl: {
          start: {
            line: 170,
            column: 15
          },
          end: {
            line: 170,
            column: 42
          }
        },
        loc: {
          start: {
            line: 170,
            column: 57
          },
          end: {
            line: 180,
            column: 1
          }
        },
        line: 170
      },
      "10": {
        name: "legacyAzureAuthMiddleware",
        decl: {
          start: {
            line: 185,
            column: 15
          },
          end: {
            line: 185,
            column: 40
          }
        },
        loc: {
          start: {
            line: 185,
            column: 55
          },
          end: {
            line: 193,
            column: 1
          }
        },
        line: 185
      },
      "11": {
        name: "initializeFirebaseForAzure",
        decl: {
          start: {
            line: 197,
            column: 15
          },
          end: {
            line: 197,
            column: 41
          }
        },
        loc: {
          start: {
            line: 197,
            column: 44
          },
          end: {
            line: 201,
            column: 1
          }
        },
        line: 197
      },
      "12": {
        name: "benchmarkAzureAuth",
        decl: {
          start: {
            line: 206,
            column: 15
          },
          end: {
            line: 206,
            column: 33
          }
        },
        loc: {
          start: {
            line: 206,
            column: 66
          },
          end: {
            line: 228,
            column: 1
          }
        },
        line: 206
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 215,
            column: 32
          },
          end: {
            line: 215,
            column: 33
          }
        },
        loc: {
          start: {
            line: 215,
            column: 42
          },
          end: {
            line: 215,
            column: 47
          }
        },
        line: 215
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 216,
            column: 31
          },
          end: {
            line: 216,
            column: 32
          }
        },
        loc: {
          start: {
            line: 216,
            column: 41
          },
          end: {
            line: 216,
            column: 46
          }
        },
        line: 216
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 25,
            column: 49
          },
          end: {
            line: 25,
            column: 61
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 25,
            column: 59
          },
          end: {
            line: 25,
            column: 61
          }
        }],
        line: 25
      },
      "1": {
        loc: {
          start: {
            line: 30,
            column: 27
          },
          end: {
            line: 30,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 30,
            column: 27
          },
          end: {
            line: 30,
            column: 52
          }
        }, {
          start: {
            line: 30,
            column: 56
          },
          end: {
            line: 30,
            column: 81
          }
        }],
        line: 30
      },
      "2": {
        loc: {
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 41,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 41,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 32
      },
      "3": {
        loc: {
          start: {
            line: 32,
            column: 12
          },
          end: {
            line: 32,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 32,
            column: 12
          },
          end: {
            line: 32,
            column: 31
          }
        }, {
          start: {
            line: 32,
            column: 35
          },
          end: {
            line: 32,
            column: 51
          }
        }],
        line: 32
      },
      "4": {
        loc: {
          start: {
            line: 33,
            column: 54
          },
          end: {
            line: 33,
            column: 113
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 33,
            column: 54
          },
          end: {
            line: 33,
            column: 74
          }
        }, {
          start: {
            line: 33,
            column: 78
          },
          end: {
            line: 33,
            column: 113
          }
        }],
        line: 33
      },
      "5": {
        loc: {
          start: {
            line: 33,
            column: 115
          },
          end: {
            line: 33,
            column: 158
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 33,
            column: 115
          },
          end: {
            line: 33,
            column: 131
          }
        }, {
          start: {
            line: 33,
            column: 135
          },
          end: {
            line: 33,
            column: 158
          }
        }],
        line: 33
      },
      "6": {
        loc: {
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 55,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 55,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 43
      },
      "7": {
        loc: {
          start: {
            line: 43,
            column: 12
          },
          end: {
            line: 43,
            column: 87
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 43,
            column: 69
          },
          end: {
            line: 43,
            column: 75
          }
        }, {
          start: {
            line: 43,
            column: 78
          },
          end: {
            line: 43,
            column: 87
          }
        }],
        line: 43
      },
      "8": {
        loc: {
          start: {
            line: 43,
            column: 12
          },
          end: {
            line: 43,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 43,
            column: 12
          },
          end: {
            line: 43,
            column: 49
          }
        }, {
          start: {
            line: 43,
            column: 53
          },
          end: {
            line: 43,
            column: 66
          }
        }],
        line: 43
      },
      "9": {
        loc: {
          start: {
            line: 45,
            column: 12
          },
          end: {
            line: 54,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 45,
            column: 12
          },
          end: {
            line: 54,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 45
      },
      "10": {
        loc: {
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 69,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 69,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 57
      },
      "11": {
        loc: {
          start: {
            line: 59,
            column: 12
          },
          end: {
            line: 68,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 59,
            column: 12
          },
          end: {
            line: 68,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 59
      },
      "12": {
        loc: {
          start: {
            line: 81,
            column: 26
          },
          end: {
            line: 82,
            column: 107
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 81,
            column: 69
          },
          end: {
            line: 81,
            column: 74
          }
        }, {
          start: {
            line: 82,
            column: 12
          },
          end: {
            line: 82,
            column: 107
          }
        }],
        line: 81
      },
      "13": {
        loc: {
          start: {
            line: 108,
            column: 59
          },
          end: {
            line: 108,
            column: 71
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 108,
            column: 69
          },
          end: {
            line: 108,
            column: 71
          }
        }],
        line: 108
      },
      "14": {
        loc: {
          start: {
            line: 110,
            column: 8
          },
          end: {
            line: 112,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 110,
            column: 8
          },
          end: {
            line: 112,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 110
      },
      "15": {
        loc: {
          start: {
            line: 114,
            column: 8
          },
          end: {
            line: 117,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 114,
            column: 8
          },
          end: {
            line: 117,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 114
      },
      "16": {
        loc: {
          start: {
            line: 114,
            column: 12
          },
          end: {
            line: 114,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 114,
            column: 12
          },
          end: {
            line: 114,
            column: 31
          }
        }, {
          start: {
            line: 114,
            column: 35
          },
          end: {
            line: 114,
            column: 51
          }
        }],
        line: 114
      },
      "17": {
        loc: {
          start: {
            line: 140,
            column: 16
          },
          end: {
            line: 140,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 140,
            column: 16
          },
          end: {
            line: 140,
            column: 32
          }
        }, {
          start: {
            line: 140,
            column: 36
          },
          end: {
            line: 140,
            column: 39
          }
        }],
        line: 140
      },
      "18": {
        loc: {
          start: {
            line: 172,
            column: 27
          },
          end: {
            line: 172,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 172,
            column: 27
          },
          end: {
            line: 172,
            column: 52
          }
        }, {
          start: {
            line: 172,
            column: 56
          },
          end: {
            line: 172,
            column: 81
          }
        }],
        line: 172
      },
      "19": {
        loc: {
          start: {
            line: 174,
            column: 15
          },
          end: {
            line: 174,
            column: 58
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 174,
            column: 36
          },
          end: {
            line: 174,
            column: 51
          }
        }, {
          start: {
            line: 174,
            column: 54
          },
          end: {
            line: 174,
            column: 58
          }
        }],
        line: 174
      },
      "20": {
        loc: {
          start: {
            line: 206,
            column: 48
          },
          end: {
            line: 206,
            column: 64
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 206,
            column: 61
          },
          end: {
            line: 206,
            column: 64
          }
        }],
        line: 206
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0]
    },
    inputSourceMap: {
      file: "/Users/dikshantvashistha/PrepBettr/lib/shared/auth/adapters/azure-auth.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/dikshantvashistha/PrepBettr/lib/shared/auth/adapters/azure-auth.ts"],
      sourcesContent: ["/**\n * Azure Functions Authentication Middleware Adapter\n * \n * Provides Azure Functions-specific authentication middleware using the unified auth library\n */\n\nimport { \n  getUnifiedAuth, \n  verifyAuthHeader, \n  UnifiedAuthError,\n  AuthPerformanceMonitor \n} from '../core';\nimport { \n  AuthenticatedUser, \n  AuthMiddlewareOptions, \n  AuthMiddlewareResult,\n  AuthErrorCode,\n  AzureContext,\n  AzureRequest \n} from '../types';\n\n// ===== AZURE FUNCTIONS MIDDLEWARE =====\n\n/**\n * Core authentication middleware for Azure Functions\n */\nexport async function azureAuthMiddleware(\n  context: AzureContext,\n  req: AzureRequest,\n  options: AuthMiddlewareOptions = {}\n): Promise<AuthMiddlewareResult<any>> {\n  const monitor = AuthPerformanceMonitor.getInstance();\n  const endTiming = monitor.startTiming('azure-auth-middleware');\n\n  try {\n    const authHeader = req.headers.authorization || req.headers.Authorization;\n    const authResult = await verifyAuthHeader(authHeader);\n\n    if (!authResult.success || !authResult.user) {\n      const error = new UnifiedAuthError(\n        authResult.errorCode || AuthErrorCode.INVALID_TOKEN,\n        authResult.error || 'Authentication failed'\n      );\n\n      return {\n        success: false,\n        user: null,\n        response: createAzureErrorResponse(error),\n        error: error.message,\n        errorCode: error.code\n      };\n    }\n\n    // Check roles if required\n    if (options.requiredRoles?.length) {\n      const auth = getUnifiedAuth();\n      if (!auth.hasRequiredRoles(authResult.user, options.requiredRoles)) {\n        const error = UnifiedAuthError.insufficientPermissions(options.requiredRoles);\n        return {\n          success: false,\n          user: null,\n          response: createAzureErrorResponse(error),\n          error: error.message,\n          errorCode: error.code\n        };\n      }\n    }\n\n    // Custom validation\n    if (options.customValidator) {\n      const isValid = await options.customValidator(authResult.user);\n      if (!isValid) {\n        const error = new UnifiedAuthError(\n          AuthErrorCode.INSUFFICIENT_PERMISSIONS,\n          'Custom validation failed'\n        );\n        return {\n          success: false,\n          user: null,\n          response: createAzureErrorResponse(error),\n          error: error.message,\n          errorCode: error.code\n        };\n      }\n    }\n\n    // Log successful authentication\n    context.log.info(`Authenticated user: ${authResult.user.uid} (${authResult.user.email})`);\n\n    endTiming();\n    return {\n      success: true,\n      user: authResult.user\n    };\n\n  } catch (error) {\n    endTiming();\n    context.log.error(`Azure Functions auth middleware error: ${error}`);\n    \n    const authError = error instanceof UnifiedAuthError ? error : \n      new UnifiedAuthError(AuthErrorCode.UNKNOWN_ERROR, 'Authentication system error');\n\n    return {\n      success: false,\n      user: null,\n      response: createAzureErrorResponse(authError),\n      error: authError.message,\n      errorCode: authError.code\n    };\n  }\n}\n\n/**\n * Role-based authentication middleware for Azure Functions\n */\nexport async function azureRoleMiddleware(\n  context: AzureContext,\n  req: AzureRequest,\n  requiredRoles: string[]\n): Promise<AuthMiddlewareResult<any>> {\n  return azureAuthMiddleware(context, req, { requiredRoles });\n}\n\n/**\n * Admin-only middleware for Azure Functions\n */\nexport async function azureAdminMiddleware(\n  context: AzureContext,\n  req: AzureRequest\n): Promise<AuthMiddlewareResult<any>> {\n  return azureAuthMiddleware(context, req, { requiredRoles: ['admin'] });\n}\n\n// ===== HIGHER-ORDER FUNCTIONS =====\n\n/**\n * Create authenticated Azure Function wrapper\n */\nexport function createAuthenticatedAzureFunction(\n  handlerFunction: (context: AzureContext, req: AzureRequest, user: AuthenticatedUser) => Promise<void>,\n  options: AuthMiddlewareOptions = {}\n) {\n  return async function (context: AzureContext, req: AzureRequest): Promise<void> {\n    if (options.skipAuth) {\n      return await handlerFunction(context, req, null as any);\n    }\n\n    const authResult = await azureAuthMiddleware(context, req, options);\n\n    if (!authResult.success || !authResult.user) {\n      context.res = authResult.response;\n      return;\n    }\n\n    // Call the actual handler with the authenticated user\n    return await handlerFunction(context, req, authResult.user);\n  };\n}\n\n/**\n * Create admin-only Azure Function wrapper\n */\nexport function createAdminAzureFunction(\n  handlerFunction: (context: AzureContext, req: AzureRequest, user: AuthenticatedUser) => Promise<void>\n) {\n  return createAuthenticatedAzureFunction(handlerFunction, { requiredRoles: ['admin'] });\n}\n\n/**\n * Create role-based Azure Function wrapper\n */\nexport function createRoleBasedAzureFunction(\n  handlerFunction: (context: AzureContext, req: AzureRequest, user: AuthenticatedUser) => Promise<void>,\n  requiredRoles: string[]\n) {\n  return createAuthenticatedAzureFunction(handlerFunction, { requiredRoles });\n}\n\n// ===== UTILITY FUNCTIONS =====\n\n/**\n * Create standardized error response for Azure Functions\n */\nfunction createAzureErrorResponse(error: UnifiedAuthError): any {\n  return {\n    status: error.statusCode || 500,\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      error: error.message,\n      code: error.code,\n      details: error.details\n    })\n  };\n}\n\n/**\n * Create health check response for Azure Functions\n */\nexport function createAzureHealthResponse(): any {\n  return {\n    status: 200,\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      status: 'healthy',\n      timestamp: new Date().toISOString(),\n      service: 'Azure Functions Unified Auth Middleware'\n    })\n  };\n}\n\n/**\n * Extract user from Azure Functions request\n */\nexport async function extractUserFromAzureRequest(\n  context: AzureContext,\n  req: AzureRequest\n): Promise<AuthenticatedUser | null> {\n  try {\n    const authHeader = req.headers.authorization || req.headers.Authorization;\n    const authResult = await verifyAuthHeader(authHeader);\n    \n    return authResult.success ? authResult.user : null;\n  } catch (error) {\n    context.log.error(`Failed to extract user from Azure request: ${error}`);\n    return null;\n  }\n}\n\n// ===== LEGACY COMPATIBILITY =====\n\n/**\n * Legacy Azure Functions middleware format (for backward compatibility)\n */\nexport async function legacyAzureAuthMiddleware(context: AzureContext, req: AzureRequest) {\n  const authResult = await azureAuthMiddleware(context, req);\n  \n  // Return in the old format for backward compatibility\n  return {\n    success: authResult.success,\n    user: authResult.user,\n    response: authResult.response\n  };\n}\n\n/**\n * Initialize Firebase for Azure Functions (backward compatibility)\n */\nexport async function initializeFirebaseForAzure(): Promise<any> {\n  const auth = getUnifiedAuth();\n  await auth.initialize();\n  return auth;\n}\n\n// ===== PERFORMANCE HELPERS =====\n\n/**\n * Benchmark Azure Functions authentication performance\n */\nexport async function benchmarkAzureAuth(\n  context: AzureContext,\n  req: AzureRequest,\n  iterations: number = 100\n): Promise<Record<string, any>> {\n  const monitor = AuthPerformanceMonitor.getInstance();\n  const results: number[] = [];\n\n  for (let i = 0; i < iterations; i++) {\n    const endTiming = monitor.startTiming('benchmark');\n    await azureAuthMiddleware(context, req);\n    const duration = endTiming();\n    results.push(duration);\n  }\n\n  const sorted = results.sort((a, b) => a - b);\n  const sum = results.reduce((a, b) => a + b, 0);\n\n  const stats = {\n    iterations,\n    average: sum / iterations,\n    median: sorted[Math.floor(sorted.length / 2)],\n    p95: sorted[Math.floor(sorted.length * 0.95)],\n    p99: sorted[Math.floor(sorted.length * 0.99)],\n    min: sorted[0],\n    max: sorted[sorted.length - 1]\n  };\n\n  context.log.info(`Azure auth performance benchmark: ${JSON.stringify(stats)}`);\n  return stats;\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "7d82059fab532ef293afe23c0eee44eb600686d7"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_5300tinbj = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_5300tinbj();
cov_5300tinbj().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_5300tinbj().s[1]++;
exports.azureAuthMiddleware = azureAuthMiddleware;
/* istanbul ignore next */
cov_5300tinbj().s[2]++;
exports.azureRoleMiddleware = azureRoleMiddleware;
/* istanbul ignore next */
cov_5300tinbj().s[3]++;
exports.azureAdminMiddleware = azureAdminMiddleware;
/* istanbul ignore next */
cov_5300tinbj().s[4]++;
exports.createAuthenticatedAzureFunction = createAuthenticatedAzureFunction;
/* istanbul ignore next */
cov_5300tinbj().s[5]++;
exports.createAdminAzureFunction = createAdminAzureFunction;
/* istanbul ignore next */
cov_5300tinbj().s[6]++;
exports.createRoleBasedAzureFunction = createRoleBasedAzureFunction;
/* istanbul ignore next */
cov_5300tinbj().s[7]++;
exports.createAzureHealthResponse = createAzureHealthResponse;
/* istanbul ignore next */
cov_5300tinbj().s[8]++;
exports.extractUserFromAzureRequest = extractUserFromAzureRequest;
/* istanbul ignore next */
cov_5300tinbj().s[9]++;
exports.legacyAzureAuthMiddleware = legacyAzureAuthMiddleware;
/* istanbul ignore next */
cov_5300tinbj().s[10]++;
exports.initializeFirebaseForAzure = initializeFirebaseForAzure;
/* istanbul ignore next */
cov_5300tinbj().s[11]++;
exports.benchmarkAzureAuth = benchmarkAzureAuth;
const core_1 =
/* istanbul ignore next */
(cov_5300tinbj().s[12]++, require("../core"));
const types_1 =
/* istanbul ignore next */
(cov_5300tinbj().s[13]++, require("../types"));
// ===== AZURE FUNCTIONS MIDDLEWARE =====
/**
 * Core authentication middleware for Azure Functions
 */
async function azureAuthMiddleware(context, req, options =
/* istanbul ignore next */
(cov_5300tinbj().b[0][0]++, {})) {
  /* istanbul ignore next */
  cov_5300tinbj().f[0]++;
  var _a;
  const monitor =
  /* istanbul ignore next */
  (cov_5300tinbj().s[14]++, core_1.AuthPerformanceMonitor.getInstance());
  const endTiming =
  /* istanbul ignore next */
  (cov_5300tinbj().s[15]++, monitor.startTiming('azure-auth-middleware'));
  /* istanbul ignore next */
  cov_5300tinbj().s[16]++;
  try {
    const authHeader =
    /* istanbul ignore next */
    (cov_5300tinbj().s[17]++,
    /* istanbul ignore next */
    (cov_5300tinbj().b[1][0]++, req.headers.authorization) ||
    /* istanbul ignore next */
    (cov_5300tinbj().b[1][1]++, req.headers.Authorization));
    const authResult =
    /* istanbul ignore next */
    (cov_5300tinbj().s[18]++, await (0, core_1.verifyAuthHeader)(authHeader));
    /* istanbul ignore next */
    cov_5300tinbj().s[19]++;
    if (
    /* istanbul ignore next */
    (cov_5300tinbj().b[3][0]++, !authResult.success) ||
    /* istanbul ignore next */
    (cov_5300tinbj().b[3][1]++, !authResult.user)) {
      /* istanbul ignore next */
      cov_5300tinbj().b[2][0]++;
      const error =
      /* istanbul ignore next */
      (cov_5300tinbj().s[20]++, new core_1.UnifiedAuthError(
      /* istanbul ignore next */
      (cov_5300tinbj().b[4][0]++, authResult.errorCode) ||
      /* istanbul ignore next */
      (cov_5300tinbj().b[4][1]++, types_1.AuthErrorCode.INVALID_TOKEN),
      /* istanbul ignore next */
      (cov_5300tinbj().b[5][0]++, authResult.error) ||
      /* istanbul ignore next */
      (cov_5300tinbj().b[5][1]++, 'Authentication failed')));
      /* istanbul ignore next */
      cov_5300tinbj().s[21]++;
      return {
        success: false,
        user: null,
        response: createAzureErrorResponse(error),
        error: error.message,
        errorCode: error.code
      };
    } else
    /* istanbul ignore next */
    {
      cov_5300tinbj().b[2][1]++;
    }
    // Check roles if required
    cov_5300tinbj().s[22]++;
    if (
    /* istanbul ignore next */
    (cov_5300tinbj().b[8][0]++, (_a = options.requiredRoles) === null) ||
    /* istanbul ignore next */
    (cov_5300tinbj().b[8][1]++, _a === void 0) ?
    /* istanbul ignore next */
    (cov_5300tinbj().b[7][0]++, void 0) :
    /* istanbul ignore next */
    (cov_5300tinbj().b[7][1]++, _a.length)) {
      /* istanbul ignore next */
      cov_5300tinbj().b[6][0]++;
      const auth =
      /* istanbul ignore next */
      (cov_5300tinbj().s[23]++, (0, core_1.getUnifiedAuth)());
      /* istanbul ignore next */
      cov_5300tinbj().s[24]++;
      if (!auth.hasRequiredRoles(authResult.user, options.requiredRoles)) {
        /* istanbul ignore next */
        cov_5300tinbj().b[9][0]++;
        const error =
        /* istanbul ignore next */
        (cov_5300tinbj().s[25]++, core_1.UnifiedAuthError.insufficientPermissions(options.requiredRoles));
        /* istanbul ignore next */
        cov_5300tinbj().s[26]++;
        return {
          success: false,
          user: null,
          response: createAzureErrorResponse(error),
          error: error.message,
          errorCode: error.code
        };
      } else
      /* istanbul ignore next */
      {
        cov_5300tinbj().b[9][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_5300tinbj().b[6][1]++;
    }
    // Custom validation
    cov_5300tinbj().s[27]++;
    if (options.customValidator) {
      /* istanbul ignore next */
      cov_5300tinbj().b[10][0]++;
      const isValid =
      /* istanbul ignore next */
      (cov_5300tinbj().s[28]++, await options.customValidator(authResult.user));
      /* istanbul ignore next */
      cov_5300tinbj().s[29]++;
      if (!isValid) {
        /* istanbul ignore next */
        cov_5300tinbj().b[11][0]++;
        const error =
        /* istanbul ignore next */
        (cov_5300tinbj().s[30]++, new core_1.UnifiedAuthError(types_1.AuthErrorCode.INSUFFICIENT_PERMISSIONS, 'Custom validation failed'));
        /* istanbul ignore next */
        cov_5300tinbj().s[31]++;
        return {
          success: false,
          user: null,
          response: createAzureErrorResponse(error),
          error: error.message,
          errorCode: error.code
        };
      } else
      /* istanbul ignore next */
      {
        cov_5300tinbj().b[11][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_5300tinbj().b[10][1]++;
    }
    // Log successful authentication
    cov_5300tinbj().s[32]++;
    context.log.info(`Authenticated user: ${authResult.user.uid} (${authResult.user.email})`);
    /* istanbul ignore next */
    cov_5300tinbj().s[33]++;
    endTiming();
    /* istanbul ignore next */
    cov_5300tinbj().s[34]++;
    return {
      success: true,
      user: authResult.user
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_5300tinbj().s[35]++;
    endTiming();
    /* istanbul ignore next */
    cov_5300tinbj().s[36]++;
    context.log.error(`Azure Functions auth middleware error: ${error}`);
    const authError =
    /* istanbul ignore next */
    (cov_5300tinbj().s[37]++, error instanceof core_1.UnifiedAuthError ?
    /* istanbul ignore next */
    (cov_5300tinbj().b[12][0]++, error) :
    /* istanbul ignore next */
    (cov_5300tinbj().b[12][1]++, new core_1.UnifiedAuthError(types_1.AuthErrorCode.UNKNOWN_ERROR, 'Authentication system error')));
    /* istanbul ignore next */
    cov_5300tinbj().s[38]++;
    return {
      success: false,
      user: null,
      response: createAzureErrorResponse(authError),
      error: authError.message,
      errorCode: authError.code
    };
  }
}
/**
 * Role-based authentication middleware for Azure Functions
 */
async function azureRoleMiddleware(context, req, requiredRoles) {
  /* istanbul ignore next */
  cov_5300tinbj().f[1]++;
  cov_5300tinbj().s[39]++;
  return azureAuthMiddleware(context, req, {
    requiredRoles
  });
}
/**
 * Admin-only middleware for Azure Functions
 */
async function azureAdminMiddleware(context, req) {
  /* istanbul ignore next */
  cov_5300tinbj().f[2]++;
  cov_5300tinbj().s[40]++;
  return azureAuthMiddleware(context, req, {
    requiredRoles: ['admin']
  });
}
// ===== HIGHER-ORDER FUNCTIONS =====
/**
 * Create authenticated Azure Function wrapper
 */
function createAuthenticatedAzureFunction(handlerFunction, options =
/* istanbul ignore next */
(cov_5300tinbj().b[13][0]++, {})) {
  /* istanbul ignore next */
  cov_5300tinbj().f[3]++;
  cov_5300tinbj().s[41]++;
  return async function (context, req) {
    /* istanbul ignore next */
    cov_5300tinbj().f[4]++;
    cov_5300tinbj().s[42]++;
    if (options.skipAuth) {
      /* istanbul ignore next */
      cov_5300tinbj().b[14][0]++;
      cov_5300tinbj().s[43]++;
      return await handlerFunction(context, req, null);
    } else
    /* istanbul ignore next */
    {
      cov_5300tinbj().b[14][1]++;
    }
    const authResult =
    /* istanbul ignore next */
    (cov_5300tinbj().s[44]++, await azureAuthMiddleware(context, req, options));
    /* istanbul ignore next */
    cov_5300tinbj().s[45]++;
    if (
    /* istanbul ignore next */
    (cov_5300tinbj().b[16][0]++, !authResult.success) ||
    /* istanbul ignore next */
    (cov_5300tinbj().b[16][1]++, !authResult.user)) {
      /* istanbul ignore next */
      cov_5300tinbj().b[15][0]++;
      cov_5300tinbj().s[46]++;
      context.res = authResult.response;
      /* istanbul ignore next */
      cov_5300tinbj().s[47]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_5300tinbj().b[15][1]++;
    }
    // Call the actual handler with the authenticated user
    cov_5300tinbj().s[48]++;
    return await handlerFunction(context, req, authResult.user);
  };
}
/**
 * Create admin-only Azure Function wrapper
 */
function createAdminAzureFunction(handlerFunction) {
  /* istanbul ignore next */
  cov_5300tinbj().f[5]++;
  cov_5300tinbj().s[49]++;
  return createAuthenticatedAzureFunction(handlerFunction, {
    requiredRoles: ['admin']
  });
}
/**
 * Create role-based Azure Function wrapper
 */
function createRoleBasedAzureFunction(handlerFunction, requiredRoles) {
  /* istanbul ignore next */
  cov_5300tinbj().f[6]++;
  cov_5300tinbj().s[50]++;
  return createAuthenticatedAzureFunction(handlerFunction, {
    requiredRoles
  });
}
// ===== UTILITY FUNCTIONS =====
/**
 * Create standardized error response for Azure Functions
 */
function createAzureErrorResponse(error) {
  /* istanbul ignore next */
  cov_5300tinbj().f[7]++;
  cov_5300tinbj().s[51]++;
  return {
    status:
    /* istanbul ignore next */
    (cov_5300tinbj().b[17][0]++, error.statusCode) ||
    /* istanbul ignore next */
    (cov_5300tinbj().b[17][1]++, 500),
    headers: {
      'Content-Type': 'application/json'
    },
    body: JSON.stringify({
      error: error.message,
      code: error.code,
      details: error.details
    })
  };
}
/**
 * Create health check response for Azure Functions
 */
function createAzureHealthResponse() {
  /* istanbul ignore next */
  cov_5300tinbj().f[8]++;
  cov_5300tinbj().s[52]++;
  return {
    status: 200,
    headers: {
      'Content-Type': 'application/json'
    },
    body: JSON.stringify({
      status: 'healthy',
      timestamp: new Date().toISOString(),
      service: 'Azure Functions Unified Auth Middleware'
    })
  };
}
/**
 * Extract user from Azure Functions request
 */
async function extractUserFromAzureRequest(context, req) {
  /* istanbul ignore next */
  cov_5300tinbj().f[9]++;
  cov_5300tinbj().s[53]++;
  try {
    const authHeader =
    /* istanbul ignore next */
    (cov_5300tinbj().s[54]++,
    /* istanbul ignore next */
    (cov_5300tinbj().b[18][0]++, req.headers.authorization) ||
    /* istanbul ignore next */
    (cov_5300tinbj().b[18][1]++, req.headers.Authorization));
    const authResult =
    /* istanbul ignore next */
    (cov_5300tinbj().s[55]++, await (0, core_1.verifyAuthHeader)(authHeader));
    /* istanbul ignore next */
    cov_5300tinbj().s[56]++;
    return authResult.success ?
    /* istanbul ignore next */
    (cov_5300tinbj().b[19][0]++, authResult.user) :
    /* istanbul ignore next */
    (cov_5300tinbj().b[19][1]++, null);
  } catch (error) {
    /* istanbul ignore next */
    cov_5300tinbj().s[57]++;
    context.log.error(`Failed to extract user from Azure request: ${error}`);
    /* istanbul ignore next */
    cov_5300tinbj().s[58]++;
    return null;
  }
}
// ===== LEGACY COMPATIBILITY =====
/**
 * Legacy Azure Functions middleware format (for backward compatibility)
 */
async function legacyAzureAuthMiddleware(context, req) {
  /* istanbul ignore next */
  cov_5300tinbj().f[10]++;
  const authResult =
  /* istanbul ignore next */
  (cov_5300tinbj().s[59]++, await azureAuthMiddleware(context, req));
  // Return in the old format for backward compatibility
  /* istanbul ignore next */
  cov_5300tinbj().s[60]++;
  return {
    success: authResult.success,
    user: authResult.user,
    response: authResult.response
  };
}
/**
 * Initialize Firebase for Azure Functions (backward compatibility)
 */
async function initializeFirebaseForAzure() {
  /* istanbul ignore next */
  cov_5300tinbj().f[11]++;
  const auth =
  /* istanbul ignore next */
  (cov_5300tinbj().s[61]++, (0, core_1.getUnifiedAuth)());
  /* istanbul ignore next */
  cov_5300tinbj().s[62]++;
  await auth.initialize();
  /* istanbul ignore next */
  cov_5300tinbj().s[63]++;
  return auth;
}
// ===== PERFORMANCE HELPERS =====
/**
 * Benchmark Azure Functions authentication performance
 */
async function benchmarkAzureAuth(context, req, iterations =
/* istanbul ignore next */
(cov_5300tinbj().b[20][0]++, 100)) {
  /* istanbul ignore next */
  cov_5300tinbj().f[12]++;
  const monitor =
  /* istanbul ignore next */
  (cov_5300tinbj().s[64]++, core_1.AuthPerformanceMonitor.getInstance());
  const results =
  /* istanbul ignore next */
  (cov_5300tinbj().s[65]++, []);
  /* istanbul ignore next */
  cov_5300tinbj().s[66]++;
  for (let i =
  /* istanbul ignore next */
  (cov_5300tinbj().s[67]++, 0); i < iterations; i++) {
    const endTiming =
    /* istanbul ignore next */
    (cov_5300tinbj().s[68]++, monitor.startTiming('benchmark'));
    /* istanbul ignore next */
    cov_5300tinbj().s[69]++;
    await azureAuthMiddleware(context, req);
    const duration =
    /* istanbul ignore next */
    (cov_5300tinbj().s[70]++, endTiming());
    /* istanbul ignore next */
    cov_5300tinbj().s[71]++;
    results.push(duration);
  }
  const sorted =
  /* istanbul ignore next */
  (cov_5300tinbj().s[72]++, results.sort((a, b) => {
    /* istanbul ignore next */
    cov_5300tinbj().f[13]++;
    cov_5300tinbj().s[73]++;
    return a - b;
  }));
  const sum =
  /* istanbul ignore next */
  (cov_5300tinbj().s[74]++, results.reduce((a, b) => {
    /* istanbul ignore next */
    cov_5300tinbj().f[14]++;
    cov_5300tinbj().s[75]++;
    return a + b;
  }, 0));
  const stats =
  /* istanbul ignore next */
  (cov_5300tinbj().s[76]++, {
    iterations,
    average: sum / iterations,
    median: sorted[Math.floor(sorted.length / 2)],
    p95: sorted[Math.floor(sorted.length * 0.95)],
    p99: sorted[Math.floor(sorted.length * 0.99)],
    min: sorted[0],
    max: sorted[sorted.length - 1]
  });
  /* istanbul ignore next */
  cov_5300tinbj().s[77]++;
  context.log.info(`Azure auth performance benchmark: ${JSON.stringify(stats)}`);
  /* istanbul ignore next */
  cov_5300tinbj().s[78]++;
  return stats;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,