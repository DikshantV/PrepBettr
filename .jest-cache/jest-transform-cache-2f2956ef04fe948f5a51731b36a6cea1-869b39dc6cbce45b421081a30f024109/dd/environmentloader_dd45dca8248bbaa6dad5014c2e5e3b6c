eb2b6235217774f840212eee210f3ab0
"use strict";

/**
 * Environment Configuration Loader
 *
 * Provides centralized environment variable management with hierarchical loading:
 * 1. Azure App Configuration (primary)
 * 2. Azure Key Vault (sensitive secrets)
 * 3. Environment variables (fallback for local dev)
 *
 * Special handling for Cosmos DB connection strings and other sensitive data.
 */
/* istanbul ignore next */
function cov_130ucqrunm() {
  var path = "/Users/dikshantvashistha/PrepBettr/lib/config/environment-loader.ts";
  var hash = "888d619c269b9222902acb96221c1b0fe89a0cc8";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dikshantvashistha/PrepBettr/lib/config/environment-loader.ts",
    statementMap: {
      "0": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 62
        }
      },
      "1": {
        start: {
          line: 13,
          column: 0
        },
        end: {
          line: 13,
          column: 35
        }
      },
      "2": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 14,
          column: 54
        }
      },
      "3": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 15,
          column: 46
        }
      },
      "4": {
        start: {
          line: 16,
          column: 0
        },
        end: {
          line: 16,
          column: 46
        }
      },
      "5": {
        start: {
          line: 17,
          column: 0
        },
        end: {
          line: 17,
          column: 48
        }
      },
      "6": {
        start: {
          line: 18,
          column: 33
        },
        end: {
          line: 18,
          column: 81
        }
      },
      "7": {
        start: {
          line: 19,
          column: 17
        },
        end: {
          line: 19,
          column: 40
        }
      },
      "8": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 27
        }
      },
      "9": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 33
        }
      },
      "10": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 32,
          column: 9
        }
      },
      "11": {
        start: {
          line: 31,
          column: 12
        },
        end: {
          line: 31,
          column: 31
        }
      },
      "12": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 61,
          column: 9
        }
      },
      "13": {
        start: {
          line: 34,
          column: 12
        },
        end: {
          line: 34,
          column: 67
        }
      },
      "14": {
        start: {
          line: 36,
          column: 32
        },
        end: {
          line: 36,
          column: 53
        }
      },
      "15": {
        start: {
          line: 38,
          column: 29
        },
        end: {
          line: 38,
          column: 60
        }
      },
      "16": {
        start: {
          line: 40,
          column: 26
        },
        end: {
          line: 40,
          column: 54
        }
      },
      "17": {
        start: {
          line: 42,
          column: 29
        },
        end: {
          line: 42,
          column: 60
        }
      },
      "18": {
        start: {
          line: 44,
          column: 29
        },
        end: {
          line: 44,
          column: 59
        }
      },
      "19": {
        start: {
          line: 45,
          column: 12
        },
        end: {
          line: 51,
          column: 14
        }
      },
      "20": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 52,
          column: 36
        }
      },
      "21": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 53,
          column: 81
        }
      },
      "22": {
        start: {
          line: 54,
          column: 12
        },
        end: {
          line: 54,
          column: 31
        }
      },
      "23": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 57,
          column: 80
        }
      },
      "24": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 58,
          column: 99
        }
      },
      "25": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 60,
          column: 44
        }
      },
      "26": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 98,
          column: 9
        }
      },
      "27": {
        start: {
          line: 69,
          column: 100
        },
        end: {
          line: 75,
          column: 14
        }
      },
      "28": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 78,
          column: 13
        }
      },
      "29": {
        start: {
          line: 77,
          column: 16
        },
        end: {
          line: 77,
          column: 75
        }
      },
      "30": {
        start: {
          line: 79,
          column: 12
        },
        end: {
          line: 86,
          column: 14
        }
      },
      "31": {
        start: {
          line: 89,
          column: 12
        },
        end: {
          line: 89,
          column: 112
        }
      },
      "32": {
        start: {
          line: 90,
          column: 12
        },
        end: {
          line: 97,
          column: 14
        }
      },
      "33": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 108,
          column: 10
        }
      },
      "34": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 127,
          column: 9
        }
      },
      "35": {
        start: {
          line: 115,
          column: 42
        },
        end: {
          line: 118,
          column: 14
        }
      },
      "36": {
        start: {
          line: 119,
          column: 12
        },
        end: {
          line: 119,
          column: 43
        }
      },
      "37": {
        start: {
          line: 122,
          column: 12
        },
        end: {
          line: 122,
          column: 111
        }
      },
      "38": {
        start: {
          line: 123,
          column: 12
        },
        end: {
          line: 126,
          column: 14
        }
      },
      "39": {
        start: {
          line: 133,
          column: 8
        },
        end: {
          line: 152,
          column: 9
        }
      },
      "40": {
        start: {
          line: 134,
          column: 74
        },
        end: {
          line: 138,
          column: 14
        }
      },
      "41": {
        start: {
          line: 139,
          column: 12
        },
        end: {
          line: 143,
          column: 14
        }
      },
      "42": {
        start: {
          line: 146,
          column: 12
        },
        end: {
          line: 146,
          column: 98
        }
      },
      "43": {
        start: {
          line: 147,
          column: 12
        },
        end: {
          line: 151,
          column: 14
        }
      },
      "44": {
        start: {
          line: 158,
          column: 8
        },
        end: {
          line: 167,
          column: 9
        }
      },
      "45": {
        start: {
          line: 160,
          column: 26
        },
        end: {
          line: 160,
          column: 96
        }
      },
      "46": {
        start: {
          line: 161,
          column: 12
        },
        end: {
          line: 161,
          column: 25
        }
      },
      "47": {
        start: {
          line: 165,
          column: 12
        },
        end: {
          line: 165,
          column: 88
        }
      },
      "48": {
        start: {
          line: 166,
          column: 12
        },
        end: {
          line: 166,
          column: 28
        }
      },
      "49": {
        start: {
          line: 173,
          column: 20
        },
        end: {
          line: 173,
          column: 57
        }
      },
      "50": {
        start: {
          line: 174,
          column: 26
        },
        end: {
          line: 174,
          column: 48
        }
      },
      "51": {
        start: {
          line: 175,
          column: 8
        },
        end: {
          line: 183,
          column: 9
        }
      },
      "52": {
        start: {
          line: 176,
          column: 12
        },
        end: {
          line: 176,
          column: 32
        }
      },
      "53": {
        start: {
          line: 178,
          column: 13
        },
        end: {
          line: 183,
          column: 9
        }
      },
      "54": {
        start: {
          line: 179,
          column: 12
        },
        end: {
          line: 179,
          column: 29
        }
      },
      "55": {
        start: {
          line: 182,
          column: 12
        },
        end: {
          line: 182,
          column: 33
        }
      },
      "56": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 189,
          column: 68
        }
      },
      "57": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 214,
          column: 10
        }
      },
      "58": {
        start: {
          line: 220,
          column: 8
        },
        end: {
          line: 220,
          column: 27
        }
      },
      "59": {
        start: {
          line: 221,
          column: 8
        },
        end: {
          line: 221,
          column: 33
        }
      },
      "60": {
        start: {
          line: 222,
          column: 8
        },
        end: {
          line: 222,
          column: 33
        }
      },
      "61": {
        start: {
          line: 228,
          column: 8
        },
        end: {
          line: 230,
          column: 9
        }
      },
      "62": {
        start: {
          line: 229,
          column: 12
        },
        end: {
          line: 229,
          column: 88
        }
      },
      "63": {
        start: {
          line: 231,
          column: 8
        },
        end: {
          line: 231,
          column: 27
        }
      },
      "64": {
        start: {
          line: 237,
          column: 8
        },
        end: {
          line: 237,
          column: 56
        }
      },
      "65": {
        start: {
          line: 243,
          column: 23
        },
        end: {
          line: 243,
          column: 46
        }
      },
      "66": {
        start: {
          line: 244,
          column: 8
        },
        end: {
          line: 254,
          column: 10
        }
      },
      "67": {
        start: {
          line: 258,
          column: 0
        },
        end: {
          line: 258,
          column: 65
        }
      },
      "68": {
        start: {
          line: 264,
          column: 4
        },
        end: {
          line: 264,
          column: 50
        }
      },
      "69": {
        start: {
          line: 270,
          column: 19
        },
        end: {
          line: 270,
          column: 48
        }
      },
      "70": {
        start: {
          line: 271,
          column: 4
        },
        end: {
          line: 271,
          column: 27
        }
      },
      "71": {
        start: {
          line: 277,
          column: 4
        },
        end: {
          line: 284,
          column: 5
        }
      },
      "72": {
        start: {
          line: 278,
          column: 23
        },
        end: {
          line: 278,
          column: 52
        }
      },
      "73": {
        start: {
          line: 279,
          column: 8
        },
        end: {
          line: 279,
          column: 84
        }
      },
      "74": {
        start: {
          line: 282,
          column: 8
        },
        end: {
          line: 282,
          column: 65
        }
      },
      "75": {
        start: {
          line: 283,
          column: 8
        },
        end: {
          line: 283,
          column: 21
        }
      },
      "76": {
        start: {
          line: 290,
          column: 19
        },
        end: {
          line: 290,
          column: 48
        }
      },
      "77": {
        start: {
          line: 291,
          column: 4
        },
        end: {
          line: 291,
          column: 30
        }
      },
      "78": {
        start: {
          line: 293,
          column: 0
        },
        end: {
          line: 293,
          column: 44
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 18
          },
          end: {
            line: 25,
            column: 5
          }
        },
        line: 22
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        },
        loc: {
          start: {
            line: 29,
            column: 17
          },
          end: {
            line: 62,
            column: 5
          }
        },
        line: 29
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 66,
            column: 4
          },
          end: {
            line: 66,
            column: 5
          }
        },
        loc: {
          start: {
            line: 66,
            column: 31
          },
          end: {
            line: 99,
            column: 5
          }
        },
        line: 66
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 103,
            column: 4
          },
          end: {
            line: 103,
            column: 5
          }
        },
        loc: {
          start: {
            line: 103,
            column: 28
          },
          end: {
            line: 109,
            column: 5
          }
        },
        line: 103
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 113,
            column: 4
          },
          end: {
            line: 113,
            column: 5
          }
        },
        loc: {
          start: {
            line: 113,
            column: 31
          },
          end: {
            line: 128,
            column: 5
          }
        },
        line: 113
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 132,
            column: 4
          },
          end: {
            line: 132,
            column: 5
          }
        },
        loc: {
          start: {
            line: 132,
            column: 30
          },
          end: {
            line: 153,
            column: 5
          }
        },
        line: 132
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 157,
            column: 4
          },
          end: {
            line: 157,
            column: 5
          }
        },
        loc: {
          start: {
            line: 157,
            column: 40
          },
          end: {
            line: 168,
            column: 5
          }
        },
        line: 157
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 172,
            column: 4
          },
          end: {
            line: 172,
            column: 5
          }
        },
        loc: {
          start: {
            line: 172,
            column: 21
          },
          end: {
            line: 184,
            column: 5
          }
        },
        line: 172
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 188,
            column: 4
          },
          end: {
            line: 188,
            column: 5
          }
        },
        loc: {
          start: {
            line: 188,
            column: 24
          },
          end: {
            line: 215,
            column: 5
          }
        },
        line: 188
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 219,
            column: 4
          },
          end: {
            line: 219,
            column: 5
          }
        },
        loc: {
          start: {
            line: 219,
            column: 20
          },
          end: {
            line: 223,
            column: 5
          }
        },
        line: 219
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 227,
            column: 4
          },
          end: {
            line: 227,
            column: 5
          }
        },
        loc: {
          start: {
            line: 227,
            column: 23
          },
          end: {
            line: 232,
            column: 5
          }
        },
        line: 227
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 236,
            column: 4
          },
          end: {
            line: 236,
            column: 5
          }
        },
        loc: {
          start: {
            line: 236,
            column: 15
          },
          end: {
            line: 238,
            column: 5
          }
        },
        line: 236
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 242,
            column: 4
          },
          end: {
            line: 242,
            column: 5
          }
        },
        loc: {
          start: {
            line: 242,
            column: 26
          },
          end: {
            line: 255,
            column: 5
          }
        },
        line: 242
      },
      "13": {
        name: "loadEnvironmentConfig",
        decl: {
          start: {
            line: 263,
            column: 15
          },
          end: {
            line: 263,
            column: 36
          }
        },
        loc: {
          start: {
            line: 263,
            column: 39
          },
          end: {
            line: 265,
            column: 1
          }
        },
        line: 263
      },
      "14": {
        name: "getCosmosDbConfig",
        decl: {
          start: {
            line: 269,
            column: 15
          },
          end: {
            line: 269,
            column: 32
          }
        },
        loc: {
          start: {
            line: 269,
            column: 35
          },
          end: {
            line: 272,
            column: 1
          }
        },
        line: 269
      },
      "15": {
        name: "isCosmosDbEnabled",
        decl: {
          start: {
            line: 276,
            column: 15
          },
          end: {
            line: 276,
            column: 32
          }
        },
        loc: {
          start: {
            line: 276,
            column: 35
          },
          end: {
            line: 285,
            column: 1
          }
        },
        line: 276
      },
      "16": {
        name: "getEnvironmentName",
        decl: {
          start: {
            line: 289,
            column: 15
          },
          end: {
            line: 289,
            column: 33
          }
        },
        loc: {
          start: {
            line: 289,
            column: 36
          },
          end: {
            line: 292,
            column: 1
          }
        },
        line: 289
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 32,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 32,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "1": {
        loc: {
          start: {
            line: 30,
            column: 12
          },
          end: {
            line: 30,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 30,
            column: 12
          },
          end: {
            line: 30,
            column: 23
          }
        }, {
          start: {
            line: 30,
            column: 27
          },
          end: {
            line: 30,
            column: 43
          }
        }],
        line: 30
      },
      "2": {
        loc: {
          start: {
            line: 76,
            column: 12
          },
          end: {
            line: 78,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 76,
            column: 12
          },
          end: {
            line: 78,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 76
      },
      "3": {
        loc: {
          start: {
            line: 81,
            column: 26
          },
          end: {
            line: 81,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 81,
            column: 26
          },
          end: {
            line: 81,
            column: 53
          }
        }, {
          start: {
            line: 81,
            column: 57
          },
          end: {
            line: 81,
            column: 68
          }
        }],
        line: 81
      },
      "4": {
        loc: {
          start: {
            line: 91,
            column: 34
          },
          end: {
            line: 91,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 91,
            column: 34
          },
          end: {
            line: 91,
            column: 70
          }
        }, {
          start: {
            line: 91,
            column: 74
          },
          end: {
            line: 91,
            column: 76
          }
        }],
        line: 91
      },
      "5": {
        loc: {
          start: {
            line: 92,
            column: 26
          },
          end: {
            line: 92,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 92,
            column: 26
          },
          end: {
            line: 92,
            column: 53
          }
        }, {
          start: {
            line: 92,
            column: 57
          },
          end: {
            line: 92,
            column: 68
          }
        }],
        line: 92
      },
      "6": {
        loc: {
          start: {
            line: 93,
            column: 39
          },
          end: {
            line: 93,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 93,
            column: 39
          },
          end: {
            line: 93,
            column: 75
          }
        }, {
          start: {
            line: 93,
            column: 79
          },
          end: {
            line: 93,
            column: 83
          }
        }],
        line: 93
      },
      "7": {
        loc: {
          start: {
            line: 94,
            column: 34
          },
          end: {
            line: 94,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 94,
            column: 34
          },
          end: {
            line: 94,
            column: 63
          }
        }, {
          start: {
            line: 94,
            column: 67
          },
          end: {
            line: 94,
            column: 70
          }
        }],
        line: 94
      },
      "8": {
        loc: {
          start: {
            line: 95,
            column: 42
          },
          end: {
            line: 95,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 95,
            column: 42
          },
          end: {
            line: 95,
            column: 79
          }
        }, {
          start: {
            line: 95,
            column: 83
          },
          end: {
            line: 95,
            column: 88
          }
        }],
        line: 95
      },
      "9": {
        loc: {
          start: {
            line: 96,
            column: 38
          },
          end: {
            line: 96,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 96,
            column: 38
          },
          end: {
            line: 96,
            column: 71
          }
        }, {
          start: {
            line: 96,
            column: 75
          },
          end: {
            line: 96,
            column: 76
          }
        }],
        line: 96
      },
      "10": {
        loc: {
          start: {
            line: 173,
            column: 20
          },
          end: {
            line: 173,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 173,
            column: 20
          },
          end: {
            line: 173,
            column: 40
          }
        }, {
          start: {
            line: 173,
            column: 44
          },
          end: {
            line: 173,
            column: 57
          }
        }],
        line: 173
      },
      "11": {
        loc: {
          start: {
            line: 175,
            column: 8
          },
          end: {
            line: 183,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 175,
            column: 8
          },
          end: {
            line: 183,
            column: 9
          }
        }, {
          start: {
            line: 178,
            column: 13
          },
          end: {
            line: 183,
            column: 9
          }
        }],
        line: 175
      },
      "12": {
        loc: {
          start: {
            line: 178,
            column: 13
          },
          end: {
            line: 183,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 178,
            column: 13
          },
          end: {
            line: 183,
            column: 9
          }
        }, {
          start: {
            line: 181,
            column: 13
          },
          end: {
            line: 183,
            column: 9
          }
        }],
        line: 178
      },
      "13": {
        loc: {
          start: {
            line: 178,
            column: 17
          },
          end: {
            line: 178,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 178,
            column: 17
          },
          end: {
            line: 178,
            column: 40
          }
        }, {
          start: {
            line: 178,
            column: 44
          },
          end: {
            line: 178,
            column: 77
          }
        }],
        line: 178
      },
      "14": {
        loc: {
          start: {
            line: 193,
            column: 34
          },
          end: {
            line: 193,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 193,
            column: 34
          },
          end: {
            line: 193,
            column: 70
          }
        }, {
          start: {
            line: 193,
            column: 74
          },
          end: {
            line: 193,
            column: 76
          }
        }],
        line: 193
      },
      "15": {
        loc: {
          start: {
            line: 194,
            column: 26
          },
          end: {
            line: 194,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 194,
            column: 26
          },
          end: {
            line: 194,
            column: 53
          }
        }, {
          start: {
            line: 194,
            column: 57
          },
          end: {
            line: 194,
            column: 68
          }
        }],
        line: 194
      },
      "16": {
        loc: {
          start: {
            line: 228,
            column: 8
          },
          end: {
            line: 230,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 228,
            column: 8
          },
          end: {
            line: 230,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 228
      },
      "17": {
        loc: {
          start: {
            line: 237,
            column: 15
          },
          end: {
            line: 237,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 237,
            column: 15
          },
          end: {
            line: 237,
            column: 31
          }
        }, {
          start: {
            line: 237,
            column: 35
          },
          end: {
            line: 237,
            column: 55
          }
        }],
        line: 237
      },
      "18": {
        loc: {
          start: {
            line: 252,
            column: 39
          },
          end: {
            line: 252,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 252,
            column: 39
          },
          end: {
            line: 252,
            column: 69
          }
        }, {
          start: {
            line: 252,
            column: 73
          },
          end: {
            line: 252,
            column: 75
          }
        }],
        line: 252
      },
      "19": {
        loc: {
          start: {
            line: 253,
            column: 33
          },
          end: {
            line: 253,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 253,
            column: 33
          },
          end: {
            line: 253,
            column: 57
          }
        }, {
          start: {
            line: 253,
            column: 61
          },
          end: {
            line: 253,
            column: 63
          }
        }],
        line: 253
      },
      "20": {
        loc: {
          start: {
            line: 279,
            column: 15
          },
          end: {
            line: 279,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 279,
            column: 15
          },
          end: {
            line: 279,
            column: 45
          }
        }, {
          start: {
            line: 279,
            column: 49
          },
          end: {
            line: 279,
            column: 83
          }
        }],
        line: 279
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/dikshantvashistha/PrepBettr/lib/config/environment-loader.ts",
      mappings: ";AAAA;;;;;;;;;GASG;;;AAkTH,sDAEC;AAKD,8CAGC;AAKD,8CAQC;AAKD,gDAGC;AA/UD,kFAA6E;AAC7E,yCAA8C;AAgC9C,mCAAmC;AAEnC,MAAM,8BAA8B;IAApC;QACU,WAAM,GAA6B,IAAI,CAAC;QACxC,gBAAW,GAAG,KAAK,CAAC;IAgQ9B,CAAC;IA9PC;;OAEG;IACH,KAAK,CAAC,IAAI;QACR,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,WAAW,EAAE,CAAC;YACpC,OAAO,IAAI,CAAC,MAAM,CAAC;QACrB,CAAC;QAED,IAAI,CAAC;YACH,OAAO,CAAC,GAAG,CAAC,yCAAyC,CAAC,CAAC;YAEvD,iCAAiC;YACjC,MAAM,WAAW,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;YAE1C,+BAA+B;YAC/B,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAEjD,mCAAmC;YACnC,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,eAAe,EAAE,CAAC;YAE3C,8BAA8B;YAC9B,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAEjD,qBAAqB;YACrB,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,iBAAiB,EAAE,CAAC;YAEhD,IAAI,CAAC,MAAM,GAAG;gBACZ,WAAW;gBACX,QAAQ;gBACR,KAAK;gBACL,QAAQ;gBACR,QAAQ;aACT,CAAC;YAEF,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,0CAA0C,WAAW,EAAE,CAAC,CAAC;YAErE,OAAO,IAAI,CAAC,MAAM,CAAC;QACrB,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,KAAK,CAAC,6CAA6C,EAAE,KAAK,CAAC,CAAC;YACpE,IAAA,uBAAc,EAAC,KAAc,EAAE,EAAE,OAAO,EAAE,oBAAoB,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;YAElF,wCAAwC;YACxC,OAAO,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAClC,CAAC;IACH,CAAC;IAED;;OAEG;IACK,KAAK,CAAC,kBAAkB;QAC9B,IAAI,CAAC;YACH,mCAAmC;YACnC,MAAM,CAAC,gBAAgB,EAAE,cAAc,EAAE,SAAS,EAAE,iBAAiB,EAAE,aAAa,CAAC,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC;gBACxG,IAAI,CAAC,cAAc,CAAC,8BAA8B,EAAE,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC;gBACzF,IAAI,CAAC,cAAc,CAAC,4BAA4B,EAAE,IAAI,CAAC;gBACvD,IAAI,CAAC,cAAc,CAAC,uBAAuB,EAAE,GAAG,CAAC;gBACjD,IAAI,CAAC,cAAc,CAAC,+BAA+B,EAAE,KAAK,CAAC;gBAC3D,IAAI,CAAC,cAAc,CAAC,2BAA2B,EAAE,CAAC,CAAC;aACpD,CAAC,CAAC;YAEH,IAAI,CAAC,gBAAgB,EAAE,CAAC;gBACtB,MAAM,IAAI,KAAK,CAAC,yCAAyC,CAAC,CAAC;YAC7D,CAAC;YAED,OAAO;gBACL,gBAAgB;gBAChB,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,eAAe,IAAI,WAAW;gBACpD,cAAc,EAAE,MAAM,CAAC,cAAc,CAAC;gBACtC,SAAS,EAAE,MAAM,CAAC,SAAS,CAAC;gBAC5B,iBAAiB,EAAE,MAAM,CAAC,iBAAiB,CAAC;gBAC5C,aAAa,EAAE,MAAM,CAAC,aAAa,CAAC;aACrC,CAAC;QACJ,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,IAAI,CAAC,qFAAqF,CAAC,CAAC;YAEpG,OAAO;gBACL,gBAAgB,EAAE,OAAO,CAAC,GAAG,CAAC,wBAAwB,IAAI,EAAE;gBAC5D,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,eAAe,IAAI,WAAW;gBACpD,cAAc,EAAE,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,wBAAwB,IAAI,IAAI,CAAC;gBACpE,SAAS,EAAE,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,iBAAiB,IAAI,GAAG,CAAC;gBACvD,iBAAiB,EAAE,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,yBAAyB,IAAI,KAAK,CAAC;gBACzE,aAAa,EAAE,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,qBAAqB,IAAI,CAAC,CAAC;aAC9D,CAAC;QACJ,CAAC;IACH,CAAC;IAED;;OAEG;IACK,KAAK,CAAC,eAAe;QAC3B,OAAO;YACL,yBAAyB,EAAE,OAAO,CAAC,GAAG,CAAC,kCAAkC;YACzE,iBAAiB,EAAE,OAAO,CAAC,GAAG,CAAC,yBAAyB;YACxD,WAAW,EAAE,OAAO,CAAC,GAAG,CAAC,mBAAmB;SAC7C,CAAC;IACJ,CAAC;IAED;;OAEG;IACK,KAAK,CAAC,kBAAkB;QAC9B,IAAI,CAAC;YACH,MAAM,CAAC,SAAS,EAAE,QAAQ,CAAC,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC;gBAC9C,IAAI,CAAC,cAAc,CAAC,yBAAyB,EAAE,OAAO,CAAC,GAAG,CAAC,+BAA+B,CAAC;gBAC3F,IAAI,CAAC,cAAc,CAAC,wBAAwB,EAAE,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC;aAC9E,CAAC,CAAC;YAEH,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,CAAC;QACjC,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,IAAI,CAAC,oFAAoF,CAAC,CAAC;YAEnG,OAAO;gBACL,SAAS,EAAE,OAAO,CAAC,GAAG,CAAC,+BAA+B;gBACtD,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,kBAAkB;aACzC,CAAC;QACJ,CAAC;IACH,CAAC;IAED;;OAEG;IACK,KAAK,CAAC,iBAAiB;QAC7B,IAAI,CAAC;YACH,MAAM,CAAC,cAAc,EAAE,mBAAmB,EAAE,cAAc,CAAC,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC;gBAC9E,IAAI,CAAC,cAAc,CAAC,yBAAyB,EAAE,IAAI,CAAC;gBACpD,IAAI,CAAC,cAAc,CAAC,8BAA8B,EAAE,IAAI,CAAC;gBACzD,IAAI,CAAC,cAAc,CAAC,yBAAyB,EAAE,KAAK,CAAC;aACtD,CAAC,CAAC;YAEH,OAAO;gBACL,cAAc,EAAE,OAAO,CAAC,cAAc,CAAC;gBACvC,mBAAmB,EAAE,OAAO,CAAC,mBAAmB,CAAC;gBACjD,cAAc,EAAE,OAAO,CAAC,cAAc,CAAC;aACxC,CAAC;QACJ,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,IAAI,CAAC,uEAAuE,CAAC,CAAC;YAEtF,OAAO;gBACL,cAAc,EAAE,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY;gBACrD,mBAAmB,EAAE,IAAI;gBACzB,cAAc,EAAE,KAAK;aACtB,CAAC;QACJ,CAAC;IACH,CAAC;IAED;;OAEG;IACK,KAAK,CAAC,cAAc,CAAI,GAAW,EAAE,QAAW;QACtD,IAAI,CAAC;YACH,mCAAmC;YACnC,MAAM,KAAK,GAAG,MAAM,6CAAoB,CAAC,GAAG,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;YAC5D,OAAO,KAAK,CAAC;QACf,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,uCAAuC;YACvC,OAAO,CAAC,IAAI,CAAC,2BAA2B,GAAG,wBAAwB,EAAE,KAAK,CAAC,CAAC;YAC5E,OAAO,QAAQ,CAAC;QAClB,CAAC;IACH,CAAC;IAED;;OAEG;IACK,cAAc;QACpB,MAAM,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,IAAI,aAAa,CAAC;QAClD,MAAM,SAAS,GAAG,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC;QAEzC,IAAI,GAAG,KAAK,YAAY,EAAE,CAAC;YACzB,OAAO,YAAY,CAAC;QACtB,CAAC;aAAM,IAAI,SAAS,KAAK,SAAS,IAAI,OAAO,CAAC,GAAG,CAAC,OAAO,KAAK,SAAS,EAAE,CAAC;YACxE,OAAO,SAAS,CAAC;QACnB,CAAC;aAAM,CAAC;YACN,OAAO,aAAa,CAAC;QACvB,CAAC;IACH,CAAC;IAED;;OAEG;IACK,iBAAiB;QACvB,OAAO,CAAC,IAAI,CAAC,6CAA6C,CAAC,CAAC;QAE5D,OAAO;YACL,WAAW,EAAE,IAAI,CAAC,cAAc,EAAE;YAClC,QAAQ,EAAE;gBACR,gBAAgB,EAAE,OAAO,CAAC,GAAG,CAAC,wBAAwB,IAAI,EAAE;gBAC5D,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,eAAe,IAAI,WAAW;gBACpD,cAAc,EAAE,IAAI;gBACpB,SAAS,EAAE,GAAG;gBACd,iBAAiB,EAAE,KAAK;gBACxB,aAAa,EAAE,CAAC;aACjB;YACD,KAAK,EAAE;gBACL,yBAAyB,EAAE,OAAO,CAAC,GAAG,CAAC,kCAAkC;gBACzE,iBAAiB,EAAE,OAAO,CAAC,GAAG,CAAC,yBAAyB;gBACxD,WAAW,EAAE,OAAO,CAAC,GAAG,CAAC,mBAAmB;aAC7C;YACD,QAAQ,EAAE;gBACR,SAAS,EAAE,OAAO,CAAC,GAAG,CAAC,+BAA+B;gBACtD,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,kBAAkB;aACzC;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY;gBACrD,mBAAmB,EAAE,KAAK,EAAE,mCAAmC;gBAC/D,cAAc,EAAE,KAAK;aACtB;SACF,CAAC;IACJ,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,OAAO;QACX,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,OAAO,MAAM,IAAI,CAAC,IAAI,EAAE,CAAC;IAC3B,CAAC;IAED;;OAEG;IACH,gBAAgB;QACd,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;YACjB,MAAM,IAAI,KAAK,CAAC,0DAA0D,CAAC,CAAC;QAC9E,CAAC;QACD,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;IAED;;OAEG;IACH,QAAQ;QACN,OAAO,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC;IAClD,CAAC;IAED;;OAEG;IACH,mBAAmB;QACjB,MAAM,MAAM,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAEvC,OAAO;YACL,QAAQ,EAAE,MAAM,CAAC,WAAW;YAC5B,eAAe,EAAE,MAAM,CAAC,QAAQ,CAAC,QAAQ;YACzC,wBAAwB,EAAE,MAAM,CAAC,QAAQ,CAAC,cAAc,CAAC,QAAQ,EAAE;YACnE,iBAAiB,EAAE,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,QAAQ,EAAE;YACvD,yBAAyB,EAAE,MAAM,CAAC,QAAQ,CAAC,iBAAiB,CAAC,QAAQ,EAAE;YACvE,qBAAqB,EAAE,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,QAAQ,EAAE;YAC/D,uEAAuE;YACvE,yBAAyB,EAAE,MAAM,CAAC,KAAK,CAAC,iBAAiB,IAAI,EAAE;YAC/D,mBAAmB,EAAE,MAAM,CAAC,KAAK,CAAC,WAAW,IAAI,EAAE;SACpD,CAAC;IACJ,CAAC;CACF;AAED,iCAAiC;AAEpB,QAAA,iBAAiB,GAAG,IAAI,8BAA8B,EAAE,CAAC;AAEtE,oCAAoC;AAEpC;;GAEG;AACI,KAAK,UAAU,qBAAqB;IACzC,OAAO,MAAM,yBAAiB,CAAC,IAAI,EAAE,CAAC;AACxC,CAAC;AAED;;GAEG;AACI,KAAK,UAAU,iBAAiB;IACrC,MAAM,MAAM,GAAG,MAAM,qBAAqB,EAAE,CAAC;IAC7C,OAAO,MAAM,CAAC,QAAQ,CAAC;AACzB,CAAC;AAED;;GAEG;AACI,KAAK,UAAU,iBAAiB;IACrC,IAAI,CAAC;QACH,MAAM,MAAM,GAAG,MAAM,qBAAqB,EAAE,CAAC;QAC7C,OAAO,MAAM,CAAC,QAAQ,CAAC,cAAc,IAAI,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,gBAAgB,CAAC;IAC9E,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,IAAI,CAAC,mCAAmC,EAAE,KAAK,CAAC,CAAC;QACzD,OAAO,KAAK,CAAC;IACf,CAAC;AACH,CAAC;AAED;;GAEG;AACI,KAAK,UAAU,kBAAkB;IACtC,MAAM,MAAM,GAAG,MAAM,qBAAqB,EAAE,CAAC;IAC7C,OAAO,MAAM,CAAC,WAAW,CAAC;AAC5B,CAAC;AAED,kBAAe,yBAAiB,CAAC",
      names: [],
      sources: ["/Users/dikshantvashistha/PrepBettr/lib/config/environment-loader.ts"],
      sourcesContent: ["/**\n * Environment Configuration Loader\n * \n * Provides centralized environment variable management with hierarchical loading:\n * 1. Azure App Configuration (primary)\n * 2. Azure Key Vault (sensitive secrets)\n * 3. Environment variables (fallback for local dev)\n * \n * Special handling for Cosmos DB connection strings and other sensitive data.\n */\n\nimport { unifiedConfigService } from '@/lib/services/unified-config-service';\nimport { logServerError } from '@/lib/errors';\n\n// ===== INTERFACES =====\n\nexport interface CosmosDbConfig {\n  connectionString: string;\n  database: string;\n  maxRUPerSecond: number;\n  batchSize: number;\n  connectionTimeout: number;\n  retryAttempts: number;\n}\n\nexport interface EnvironmentConfig {\n  environment: 'development' | 'staging' | 'production';\n  cosmosDb: CosmosDbConfig;\n  azure: {\n    appConfigConnectionString?: string;\n    appConfigEndpoint?: string;\n    keyVaultUrl?: string;\n  };\n  firebase: {\n    clientKey?: string;\n    adminKey?: string;\n  };\n  features: {\n    enableCosmosDb: boolean;\n    enableUnifiedConfig: boolean;\n    enableKeyVault: boolean;\n  };\n}\n\n// ===== CONFIGURATION LOADER =====\n\nclass EnvironmentConfigurationLoader {\n  private config: EnvironmentConfig | null = null;\n  private initialized = false;\n\n  /**\n   * Load environment configuration with hierarchy\n   */\n  async load(): Promise<EnvironmentConfig> {\n    if (this.config && this.initialized) {\n      return this.config;\n    }\n\n    try {\n      console.log('\uD83D\uDD27 Loading environment configuration...');\n\n      // Load base environment settings\n      const environment = this.getEnvironment();\n\n      // Load Cosmos DB configuration\n      const cosmosDb = await this.loadCosmosDbConfig();\n\n      // Load Azure service configuration\n      const azure = await this.loadAzureConfig();\n\n      // Load Firebase configuration\n      const firebase = await this.loadFirebaseConfig();\n\n      // Load feature flags\n      const features = await this.loadFeatureConfig();\n\n      this.config = {\n        environment,\n        cosmosDb,\n        azure,\n        firebase,\n        features\n      };\n\n      this.initialized = true;\n      console.log(`\u2705 Environment configuration loaded for ${environment}`);\n\n      return this.config;\n    } catch (error) {\n      console.error('\u274C Failed to load environment configuration:', error);\n      logServerError(error as Error, { service: 'environment-loader', action: 'load' });\n\n      // Return minimal fallback configuration\n      return this.getFallbackConfig();\n    }\n  }\n\n  /**\n   * Load Cosmos DB configuration with hierarchy\n   */\n  private async loadCosmosDbConfig(): Promise<CosmosDbConfig> {\n    try {\n      // Try unified config service first\n      const [connectionString, maxRUPerSecond, batchSize, connectionTimeout, retryAttempts] = await Promise.all([\n        this.getConfigValue('data.cosmos.connectionString', process.env.COSMOS_CONNECTION_STRING),\n        this.getConfigValue('data.cosmos.maxRUPerSecond', 4000),\n        this.getConfigValue('data.cosmos.batchSize', 100),\n        this.getConfigValue('data.cosmos.connectionTimeout', 10000),\n        this.getConfigValue('data.cosmos.retryAttempts', 3)\n      ]);\n\n      if (!connectionString) {\n        throw new Error('Cosmos DB connection string is required');\n      }\n\n      return {\n        connectionString,\n        database: process.env.COSMOS_DATABASE || 'prepbettr',\n        maxRUPerSecond: Number(maxRUPerSecond),\n        batchSize: Number(batchSize),\n        connectionTimeout: Number(connectionTimeout),\n        retryAttempts: Number(retryAttempts)\n      };\n    } catch (error) {\n      console.warn('\u26A0\uFE0F Failed to load Cosmos DB config from unified service, using environment fallback');\n      \n      return {\n        connectionString: process.env.COSMOS_CONNECTION_STRING || '',\n        database: process.env.COSMOS_DATABASE || 'prepbettr',\n        maxRUPerSecond: Number(process.env.COSMOS_MAX_RU_PER_SECOND || 4000),\n        batchSize: Number(process.env.COSMOS_BATCH_SIZE || 100),\n        connectionTimeout: Number(process.env.COSMOS_CONNECTION_TIMEOUT || 10000),\n        retryAttempts: Number(process.env.COSMOS_RETRY_ATTEMPTS || 3)\n      };\n    }\n  }\n\n  /**\n   * Load Azure service configuration\n   */\n  private async loadAzureConfig() {\n    return {\n      appConfigConnectionString: process.env.AZURE_APP_CONFIG_CONNECTION_STRING,\n      appConfigEndpoint: process.env.AZURE_APP_CONFIG_ENDPOINT,\n      keyVaultUrl: process.env.AZURE_KEY_VAULT_URL\n    };\n  }\n\n  /**\n   * Load Firebase configuration\n   */\n  private async loadFirebaseConfig() {\n    try {\n      const [clientKey, adminKey] = await Promise.all([\n        this.getConfigValue('auth.firebase.clientKey', process.env.NEXT_PUBLIC_FIREBASE_CLIENT_KEY),\n        this.getConfigValue('auth.firebase.adminKey', process.env.FIREBASE_ADMIN_KEY)\n      ]);\n\n      return { clientKey, adminKey };\n    } catch (error) {\n      console.warn('\u26A0\uFE0F Failed to load Firebase config from unified service, using environment fallback');\n      \n      return {\n        clientKey: process.env.NEXT_PUBLIC_FIREBASE_CLIENT_KEY,\n        adminKey: process.env.FIREBASE_ADMIN_KEY\n      };\n    }\n  }\n\n  /**\n   * Load feature configuration\n   */\n  private async loadFeatureConfig() {\n    try {\n      const [enableCosmosDb, enableUnifiedConfig, enableKeyVault] = await Promise.all([\n        this.getConfigValue('features.enableCosmosDb', true),\n        this.getConfigValue('features.enableUnifiedConfig', true),\n        this.getConfigValue('features.enableKeyVault', false)\n      ]);\n\n      return {\n        enableCosmosDb: Boolean(enableCosmosDb),\n        enableUnifiedConfig: Boolean(enableUnifiedConfig),\n        enableKeyVault: Boolean(enableKeyVault)\n      };\n    } catch (error) {\n      console.warn('\u26A0\uFE0F Failed to load feature config from unified service, using defaults');\n      \n      return {\n        enableCosmosDb: process.env.NODE_ENV === 'production',\n        enableUnifiedConfig: true,\n        enableKeyVault: false\n      };\n    }\n  }\n\n  /**\n   * Get configuration value with fallback hierarchy\n   */\n  private async getConfigValue<T>(key: string, fallback: T): Promise<T> {\n    try {\n      // Try unified config service first\n      const value = await unifiedConfigService.get(key, fallback);\n      return value;\n    } catch (error) {\n      // Fall back to provided fallback value\n      console.warn(`\u26A0\uFE0F Failed to get config ${key} from unified service:`, error);\n      return fallback;\n    }\n  }\n\n  /**\n   * Determine current environment\n   */\n  private getEnvironment(): 'development' | 'staging' | 'production' {\n    const env = process.env.NODE_ENV || 'development';\n    const vercelEnv = process.env.VERCEL_ENV;\n    \n    if (env === 'production') {\n      return 'production';\n    } else if (vercelEnv === 'preview' || process.env.APP_ENV === 'staging') {\n      return 'staging';\n    } else {\n      return 'development';\n    }\n  }\n\n  /**\n   * Get fallback configuration when loading fails\n   */\n  private getFallbackConfig(): EnvironmentConfig {\n    console.warn('\u26A0\uFE0F Using fallback environment configuration');\n    \n    return {\n      environment: this.getEnvironment(),\n      cosmosDb: {\n        connectionString: process.env.COSMOS_CONNECTION_STRING || '',\n        database: process.env.COSMOS_DATABASE || 'prepbettr',\n        maxRUPerSecond: 4000,\n        batchSize: 100,\n        connectionTimeout: 10000,\n        retryAttempts: 3\n      },\n      azure: {\n        appConfigConnectionString: process.env.AZURE_APP_CONFIG_CONNECTION_STRING,\n        appConfigEndpoint: process.env.AZURE_APP_CONFIG_ENDPOINT,\n        keyVaultUrl: process.env.AZURE_KEY_VAULT_URL\n      },\n      firebase: {\n        clientKey: process.env.NEXT_PUBLIC_FIREBASE_CLIENT_KEY,\n        adminKey: process.env.FIREBASE_ADMIN_KEY\n      },\n      features: {\n        enableCosmosDb: process.env.NODE_ENV === 'production',\n        enableUnifiedConfig: false, // Disable if unified config failed\n        enableKeyVault: false\n      }\n    };\n  }\n\n  /**\n   * Refresh configuration (useful for hot reloading in development)\n   */\n  async refresh(): Promise<EnvironmentConfig> {\n    this.config = null;\n    this.initialized = false;\n    return await this.load();\n  }\n\n  /**\n   * Get current configuration (throws if not loaded)\n   */\n  getCurrentConfig(): EnvironmentConfig {\n    if (!this.config) {\n      throw new Error('Environment configuration not loaded. Call load() first.');\n    }\n    return this.config;\n  }\n\n  /**\n   * Check if configuration is loaded\n   */\n  isLoaded(): boolean {\n    return this.initialized && this.config !== null;\n  }\n\n  /**\n   * Export configuration for deployment scripts\n   */\n  exportForDeployment(): Record<string, string> {\n    const config = this.getCurrentConfig();\n    \n    return {\n      NODE_ENV: config.environment,\n      COSMOS_DATABASE: config.cosmosDb.database,\n      COSMOS_MAX_RU_PER_SECOND: config.cosmosDb.maxRUPerSecond.toString(),\n      COSMOS_BATCH_SIZE: config.cosmosDb.batchSize.toString(),\n      COSMOS_CONNECTION_TIMEOUT: config.cosmosDb.connectionTimeout.toString(),\n      COSMOS_RETRY_ATTEMPTS: config.cosmosDb.retryAttempts.toString(),\n      // NOTE: Don't export connection strings or sensitive keys for security\n      AZURE_APP_CONFIG_ENDPOINT: config.azure.appConfigEndpoint || '',\n      AZURE_KEY_VAULT_URL: config.azure.keyVaultUrl || ''\n    };\n  }\n}\n\n// ===== SINGLETON INSTANCE =====\n\nexport const environmentLoader = new EnvironmentConfigurationLoader();\n\n// ===== CONVENIENCE FUNCTIONS =====\n\n/**\n * Load environment configuration (idempotent)\n */\nexport async function loadEnvironmentConfig(): Promise<EnvironmentConfig> {\n  return await environmentLoader.load();\n}\n\n/**\n * Get Cosmos DB configuration\n */\nexport async function getCosmosDbConfig(): Promise<CosmosDbConfig> {\n  const config = await loadEnvironmentConfig();\n  return config.cosmosDb;\n}\n\n/**\n * Check if Cosmos DB is enabled\n */\nexport async function isCosmosDbEnabled(): Promise<boolean> {\n  try {\n    const config = await loadEnvironmentConfig();\n    return config.features.enableCosmosDb && !!config.cosmosDb.connectionString;\n  } catch (error) {\n    console.warn('Failed to check Cosmos DB status:', error);\n    return false;\n  }\n}\n\n/**\n * Get environment name\n */\nexport async function getEnvironmentName(): Promise<string> {\n  const config = await loadEnvironmentConfig();\n  return config.environment;\n}\n\nexport default environmentLoader;\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "888d619c269b9222902acb96221c1b0fe89a0cc8"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_130ucqrunm = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_130ucqrunm();
cov_130ucqrunm().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_130ucqrunm().s[1]++;
exports.environmentLoader = void 0;
/* istanbul ignore next */
cov_130ucqrunm().s[2]++;
exports.loadEnvironmentConfig = loadEnvironmentConfig;
/* istanbul ignore next */
cov_130ucqrunm().s[3]++;
exports.getCosmosDbConfig = getCosmosDbConfig;
/* istanbul ignore next */
cov_130ucqrunm().s[4]++;
exports.isCosmosDbEnabled = isCosmosDbEnabled;
/* istanbul ignore next */
cov_130ucqrunm().s[5]++;
exports.getEnvironmentName = getEnvironmentName;
const unified_config_service_1 =
/* istanbul ignore next */
(cov_130ucqrunm().s[6]++, require("@/lib/services/unified-config-service"));
const errors_1 =
/* istanbul ignore next */
(cov_130ucqrunm().s[7]++, require("@/lib/errors"));
// ===== CONFIGURATION LOADER =====
class EnvironmentConfigurationLoader {
  constructor() {
    /* istanbul ignore next */
    cov_130ucqrunm().f[0]++;
    cov_130ucqrunm().s[8]++;
    this.config = null;
    /* istanbul ignore next */
    cov_130ucqrunm().s[9]++;
    this.initialized = false;
  }
  /**
   * Load environment configuration with hierarchy
   */
  async load() {
    /* istanbul ignore next */
    cov_130ucqrunm().f[1]++;
    cov_130ucqrunm().s[10]++;
    if (
    /* istanbul ignore next */
    (cov_130ucqrunm().b[1][0]++, this.config) &&
    /* istanbul ignore next */
    (cov_130ucqrunm().b[1][1]++, this.initialized)) {
      /* istanbul ignore next */
      cov_130ucqrunm().b[0][0]++;
      cov_130ucqrunm().s[11]++;
      return this.config;
    } else
    /* istanbul ignore next */
    {
      cov_130ucqrunm().b[0][1]++;
    }
    cov_130ucqrunm().s[12]++;
    try {
      /* istanbul ignore next */
      cov_130ucqrunm().s[13]++;
      console.log('🔧 Loading environment configuration...');
      // Load base environment settings
      const environment =
      /* istanbul ignore next */
      (cov_130ucqrunm().s[14]++, this.getEnvironment());
      // Load Cosmos DB configuration
      const cosmosDb =
      /* istanbul ignore next */
      (cov_130ucqrunm().s[15]++, await this.loadCosmosDbConfig());
      // Load Azure service configuration
      const azure =
      /* istanbul ignore next */
      (cov_130ucqrunm().s[16]++, await this.loadAzureConfig());
      // Load Firebase configuration
      const firebase =
      /* istanbul ignore next */
      (cov_130ucqrunm().s[17]++, await this.loadFirebaseConfig());
      // Load feature flags
      const features =
      /* istanbul ignore next */
      (cov_130ucqrunm().s[18]++, await this.loadFeatureConfig());
      /* istanbul ignore next */
      cov_130ucqrunm().s[19]++;
      this.config = {
        environment,
        cosmosDb,
        azure,
        firebase,
        features
      };
      /* istanbul ignore next */
      cov_130ucqrunm().s[20]++;
      this.initialized = true;
      /* istanbul ignore next */
      cov_130ucqrunm().s[21]++;
      console.log(`✅ Environment configuration loaded for ${environment}`);
      /* istanbul ignore next */
      cov_130ucqrunm().s[22]++;
      return this.config;
    } catch (error) {
      /* istanbul ignore next */
      cov_130ucqrunm().s[23]++;
      console.error('❌ Failed to load environment configuration:', error);
      /* istanbul ignore next */
      cov_130ucqrunm().s[24]++;
      (0, errors_1.logServerError)(error, {
        service: 'environment-loader',
        action: 'load'
      });
      // Return minimal fallback configuration
      /* istanbul ignore next */
      cov_130ucqrunm().s[25]++;
      return this.getFallbackConfig();
    }
  }
  /**
   * Load Cosmos DB configuration with hierarchy
   */
  async loadCosmosDbConfig() {
    /* istanbul ignore next */
    cov_130ucqrunm().f[2]++;
    cov_130ucqrunm().s[26]++;
    try {
      // Try unified config service first
      const [connectionString, maxRUPerSecond, batchSize, connectionTimeout, retryAttempts] =
      /* istanbul ignore next */
      (cov_130ucqrunm().s[27]++, await Promise.all([this.getConfigValue('data.cosmos.connectionString', process.env.COSMOS_CONNECTION_STRING), this.getConfigValue('data.cosmos.maxRUPerSecond', 4000), this.getConfigValue('data.cosmos.batchSize', 100), this.getConfigValue('data.cosmos.connectionTimeout', 10000), this.getConfigValue('data.cosmos.retryAttempts', 3)]));
      /* istanbul ignore next */
      cov_130ucqrunm().s[28]++;
      if (!connectionString) {
        /* istanbul ignore next */
        cov_130ucqrunm().b[2][0]++;
        cov_130ucqrunm().s[29]++;
        throw new Error('Cosmos DB connection string is required');
      } else
      /* istanbul ignore next */
      {
        cov_130ucqrunm().b[2][1]++;
      }
      cov_130ucqrunm().s[30]++;
      return {
        connectionString,
        database:
        /* istanbul ignore next */
        (cov_130ucqrunm().b[3][0]++, process.env.COSMOS_DATABASE) ||
        /* istanbul ignore next */
        (cov_130ucqrunm().b[3][1]++, 'prepbettr'),
        maxRUPerSecond: Number(maxRUPerSecond),
        batchSize: Number(batchSize),
        connectionTimeout: Number(connectionTimeout),
        retryAttempts: Number(retryAttempts)
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_130ucqrunm().s[31]++;
      console.warn('⚠️ Failed to load Cosmos DB config from unified service, using environment fallback');
      /* istanbul ignore next */
      cov_130ucqrunm().s[32]++;
      return {
        connectionString:
        /* istanbul ignore next */
        (cov_130ucqrunm().b[4][0]++, process.env.COSMOS_CONNECTION_STRING) ||
        /* istanbul ignore next */
        (cov_130ucqrunm().b[4][1]++, ''),
        database:
        /* istanbul ignore next */
        (cov_130ucqrunm().b[5][0]++, process.env.COSMOS_DATABASE) ||
        /* istanbul ignore next */
        (cov_130ucqrunm().b[5][1]++, 'prepbettr'),
        maxRUPerSecond: Number(
        /* istanbul ignore next */
        (cov_130ucqrunm().b[6][0]++, process.env.COSMOS_MAX_RU_PER_SECOND) ||
        /* istanbul ignore next */
        (cov_130ucqrunm().b[6][1]++, 4000)),
        batchSize: Number(
        /* istanbul ignore next */
        (cov_130ucqrunm().b[7][0]++, process.env.COSMOS_BATCH_SIZE) ||
        /* istanbul ignore next */
        (cov_130ucqrunm().b[7][1]++, 100)),
        connectionTimeout: Number(
        /* istanbul ignore next */
        (cov_130ucqrunm().b[8][0]++, process.env.COSMOS_CONNECTION_TIMEOUT) ||
        /* istanbul ignore next */
        (cov_130ucqrunm().b[8][1]++, 10000)),
        retryAttempts: Number(
        /* istanbul ignore next */
        (cov_130ucqrunm().b[9][0]++, process.env.COSMOS_RETRY_ATTEMPTS) ||
        /* istanbul ignore next */
        (cov_130ucqrunm().b[9][1]++, 3))
      };
    }
  }
  /**
   * Load Azure service configuration
   */
  async loadAzureConfig() {
    /* istanbul ignore next */
    cov_130ucqrunm().f[3]++;
    cov_130ucqrunm().s[33]++;
    return {
      appConfigConnectionString: process.env.AZURE_APP_CONFIG_CONNECTION_STRING,
      appConfigEndpoint: process.env.AZURE_APP_CONFIG_ENDPOINT,
      keyVaultUrl: process.env.AZURE_KEY_VAULT_URL
    };
  }
  /**
   * Load Firebase configuration
   */
  async loadFirebaseConfig() {
    /* istanbul ignore next */
    cov_130ucqrunm().f[4]++;
    cov_130ucqrunm().s[34]++;
    try {
      const [clientKey, adminKey] =
      /* istanbul ignore next */
      (cov_130ucqrunm().s[35]++, await Promise.all([this.getConfigValue('auth.firebase.clientKey', process.env.NEXT_PUBLIC_FIREBASE_CLIENT_KEY), this.getConfigValue('auth.firebase.adminKey', process.env.FIREBASE_ADMIN_KEY)]));
      /* istanbul ignore next */
      cov_130ucqrunm().s[36]++;
      return {
        clientKey,
        adminKey
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_130ucqrunm().s[37]++;
      console.warn('⚠️ Failed to load Firebase config from unified service, using environment fallback');
      /* istanbul ignore next */
      cov_130ucqrunm().s[38]++;
      return {
        clientKey: process.env.NEXT_PUBLIC_FIREBASE_CLIENT_KEY,
        adminKey: process.env.FIREBASE_ADMIN_KEY
      };
    }
  }
  /**
   * Load feature configuration
   */
  async loadFeatureConfig() {
    /* istanbul ignore next */
    cov_130ucqrunm().f[5]++;
    cov_130ucqrunm().s[39]++;
    try {
      const [enableCosmosDb, enableUnifiedConfig, enableKeyVault] =
      /* istanbul ignore next */
      (cov_130ucqrunm().s[40]++, await Promise.all([this.getConfigValue('features.enableCosmosDb', true), this.getConfigValue('features.enableUnifiedConfig', true), this.getConfigValue('features.enableKeyVault', false)]));
      /* istanbul ignore next */
      cov_130ucqrunm().s[41]++;
      return {
        enableCosmosDb: Boolean(enableCosmosDb),
        enableUnifiedConfig: Boolean(enableUnifiedConfig),
        enableKeyVault: Boolean(enableKeyVault)
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_130ucqrunm().s[42]++;
      console.warn('⚠️ Failed to load feature config from unified service, using defaults');
      /* istanbul ignore next */
      cov_130ucqrunm().s[43]++;
      return {
        enableCosmosDb: process.env.NODE_ENV === 'production',
        enableUnifiedConfig: true,
        enableKeyVault: false
      };
    }
  }
  /**
   * Get configuration value with fallback hierarchy
   */
  async getConfigValue(key, fallback) {
    /* istanbul ignore next */
    cov_130ucqrunm().f[6]++;
    cov_130ucqrunm().s[44]++;
    try {
      // Try unified config service first
      const value =
      /* istanbul ignore next */
      (cov_130ucqrunm().s[45]++, await unified_config_service_1.unifiedConfigService.get(key, fallback));
      /* istanbul ignore next */
      cov_130ucqrunm().s[46]++;
      return value;
    } catch (error) {
      /* istanbul ignore next */
      cov_130ucqrunm().s[47]++;
      // Fall back to provided fallback value
      console.warn(`⚠️ Failed to get config ${key} from unified service:`, error);
      /* istanbul ignore next */
      cov_130ucqrunm().s[48]++;
      return fallback;
    }
  }
  /**
   * Determine current environment
   */
  getEnvironment() {
    /* istanbul ignore next */
    cov_130ucqrunm().f[7]++;
    const env =
    /* istanbul ignore next */
    (cov_130ucqrunm().s[49]++,
    /* istanbul ignore next */
    (cov_130ucqrunm().b[10][0]++, process.env.NODE_ENV) ||
    /* istanbul ignore next */
    (cov_130ucqrunm().b[10][1]++, 'development'));
    const vercelEnv =
    /* istanbul ignore next */
    (cov_130ucqrunm().s[50]++, process.env.VERCEL_ENV);
    /* istanbul ignore next */
    cov_130ucqrunm().s[51]++;
    if (env === 'production') {
      /* istanbul ignore next */
      cov_130ucqrunm().b[11][0]++;
      cov_130ucqrunm().s[52]++;
      return 'production';
    } else {
      /* istanbul ignore next */
      cov_130ucqrunm().b[11][1]++;
      cov_130ucqrunm().s[53]++;
      if (
      /* istanbul ignore next */
      (cov_130ucqrunm().b[13][0]++, vercelEnv === 'preview') ||
      /* istanbul ignore next */
      (cov_130ucqrunm().b[13][1]++, process.env.APP_ENV === 'staging')) {
        /* istanbul ignore next */
        cov_130ucqrunm().b[12][0]++;
        cov_130ucqrunm().s[54]++;
        return 'staging';
      } else {
        /* istanbul ignore next */
        cov_130ucqrunm().b[12][1]++;
        cov_130ucqrunm().s[55]++;
        return 'development';
      }
    }
  }
  /**
   * Get fallback configuration when loading fails
   */
  getFallbackConfig() {
    /* istanbul ignore next */
    cov_130ucqrunm().f[8]++;
    cov_130ucqrunm().s[56]++;
    console.warn('⚠️ Using fallback environment configuration');
    /* istanbul ignore next */
    cov_130ucqrunm().s[57]++;
    return {
      environment: this.getEnvironment(),
      cosmosDb: {
        connectionString:
        /* istanbul ignore next */
        (cov_130ucqrunm().b[14][0]++, process.env.COSMOS_CONNECTION_STRING) ||
        /* istanbul ignore next */
        (cov_130ucqrunm().b[14][1]++, ''),
        database:
        /* istanbul ignore next */
        (cov_130ucqrunm().b[15][0]++, process.env.COSMOS_DATABASE) ||
        /* istanbul ignore next */
        (cov_130ucqrunm().b[15][1]++, 'prepbettr'),
        maxRUPerSecond: 4000,
        batchSize: 100,
        connectionTimeout: 10000,
        retryAttempts: 3
      },
      azure: {
        appConfigConnectionString: process.env.AZURE_APP_CONFIG_CONNECTION_STRING,
        appConfigEndpoint: process.env.AZURE_APP_CONFIG_ENDPOINT,
        keyVaultUrl: process.env.AZURE_KEY_VAULT_URL
      },
      firebase: {
        clientKey: process.env.NEXT_PUBLIC_FIREBASE_CLIENT_KEY,
        adminKey: process.env.FIREBASE_ADMIN_KEY
      },
      features: {
        enableCosmosDb: process.env.NODE_ENV === 'production',
        enableUnifiedConfig: false,
        // Disable if unified config failed
        enableKeyVault: false
      }
    };
  }
  /**
   * Refresh configuration (useful for hot reloading in development)
   */
  async refresh() {
    /* istanbul ignore next */
    cov_130ucqrunm().f[9]++;
    cov_130ucqrunm().s[58]++;
    this.config = null;
    /* istanbul ignore next */
    cov_130ucqrunm().s[59]++;
    this.initialized = false;
    /* istanbul ignore next */
    cov_130ucqrunm().s[60]++;
    return await this.load();
  }
  /**
   * Get current configuration (throws if not loaded)
   */
  getCurrentConfig() {
    /* istanbul ignore next */
    cov_130ucqrunm().f[10]++;
    cov_130ucqrunm().s[61]++;
    if (!this.config) {
      /* istanbul ignore next */
      cov_130ucqrunm().b[16][0]++;
      cov_130ucqrunm().s[62]++;
      throw new Error('Environment configuration not loaded. Call load() first.');
    } else
    /* istanbul ignore next */
    {
      cov_130ucqrunm().b[16][1]++;
    }
    cov_130ucqrunm().s[63]++;
    return this.config;
  }
  /**
   * Check if configuration is loaded
   */
  isLoaded() {
    /* istanbul ignore next */
    cov_130ucqrunm().f[11]++;
    cov_130ucqrunm().s[64]++;
    return /* istanbul ignore next */(cov_130ucqrunm().b[17][0]++, this.initialized) &&
    /* istanbul ignore next */
    (cov_130ucqrunm().b[17][1]++, this.config !== null);
  }
  /**
   * Export configuration for deployment scripts
   */
  exportForDeployment() {
    /* istanbul ignore next */
    cov_130ucqrunm().f[12]++;
    const config =
    /* istanbul ignore next */
    (cov_130ucqrunm().s[65]++, this.getCurrentConfig());
    /* istanbul ignore next */
    cov_130ucqrunm().s[66]++;
    return {
      NODE_ENV: config.environment,
      COSMOS_DATABASE: config.cosmosDb.database,
      COSMOS_MAX_RU_PER_SECOND: config.cosmosDb.maxRUPerSecond.toString(),
      COSMOS_BATCH_SIZE: config.cosmosDb.batchSize.toString(),
      COSMOS_CONNECTION_TIMEOUT: config.cosmosDb.connectionTimeout.toString(),
      COSMOS_RETRY_ATTEMPTS: config.cosmosDb.retryAttempts.toString(),
      // NOTE: Don't export connection strings or sensitive keys for security
      AZURE_APP_CONFIG_ENDPOINT:
      /* istanbul ignore next */
      (cov_130ucqrunm().b[18][0]++, config.azure.appConfigEndpoint) ||
      /* istanbul ignore next */
      (cov_130ucqrunm().b[18][1]++, ''),
      AZURE_KEY_VAULT_URL:
      /* istanbul ignore next */
      (cov_130ucqrunm().b[19][0]++, config.azure.keyVaultUrl) ||
      /* istanbul ignore next */
      (cov_130ucqrunm().b[19][1]++, '')
    };
  }
}
// ===== SINGLETON INSTANCE =====
/* istanbul ignore next */
cov_130ucqrunm().s[67]++;
exports.environmentLoader = new EnvironmentConfigurationLoader();
// ===== CONVENIENCE FUNCTIONS =====
/**
 * Load environment configuration (idempotent)
 */
async function loadEnvironmentConfig() {
  /* istanbul ignore next */
  cov_130ucqrunm().f[13]++;
  cov_130ucqrunm().s[68]++;
  return await exports.environmentLoader.load();
}
/**
 * Get Cosmos DB configuration
 */
async function getCosmosDbConfig() {
  /* istanbul ignore next */
  cov_130ucqrunm().f[14]++;
  const config =
  /* istanbul ignore next */
  (cov_130ucqrunm().s[69]++, await loadEnvironmentConfig());
  /* istanbul ignore next */
  cov_130ucqrunm().s[70]++;
  return config.cosmosDb;
}
/**
 * Check if Cosmos DB is enabled
 */
async function isCosmosDbEnabled() {
  /* istanbul ignore next */
  cov_130ucqrunm().f[15]++;
  cov_130ucqrunm().s[71]++;
  try {
    const config =
    /* istanbul ignore next */
    (cov_130ucqrunm().s[72]++, await loadEnvironmentConfig());
    /* istanbul ignore next */
    cov_130ucqrunm().s[73]++;
    return /* istanbul ignore next */(cov_130ucqrunm().b[20][0]++, config.features.enableCosmosDb) &&
    /* istanbul ignore next */
    (cov_130ucqrunm().b[20][1]++, !!config.cosmosDb.connectionString);
  } catch (error) {
    /* istanbul ignore next */
    cov_130ucqrunm().s[74]++;
    console.warn('Failed to check Cosmos DB status:', error);
    /* istanbul ignore next */
    cov_130ucqrunm().s[75]++;
    return false;
  }
}
/**
 * Get environment name
 */
async function getEnvironmentName() {
  /* istanbul ignore next */
  cov_130ucqrunm().f[16]++;
  const config =
  /* istanbul ignore next */
  (cov_130ucqrunm().s[76]++, await loadEnvironmentConfig());
  /* istanbul ignore next */
  cov_130ucqrunm().s[77]++;
  return config.environment;
}
/* istanbul ignore next */
cov_130ucqrunm().s[78]++;
exports.default = exports.environmentLoader;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,