4c888e5bd619baeb1a52d4e5e13a5366
"use strict";

/* istanbul ignore next */
function cov_xkq9sped5() {
  var path = "/Users/dikshantvashistha/PrepBettr/lib/services/azure-speech-service.ts";
  var hash = "ef4e802f3ae727e78a0c1d540747e75e81b6326e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dikshantvashistha/PrepBettr/lib/services/azure-speech-service.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 12,
          column: 3
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "2": {
        start: {
          line: 3,
          column: 26
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "3": {
        start: {
          line: 4,
          column: 15
        },
        end: {
          line: 4,
          column: 52
        }
      },
      "4": {
        start: {
          line: 5,
          column: 4
        },
        end: {
          line: 7,
          column: 5
        }
      },
      "5": {
        start: {
          line: 6,
          column: 6
        },
        end: {
          line: 6,
          column: 68
        }
      },
      "6": {
        start: {
          line: 6,
          column: 51
        },
        end: {
          line: 6,
          column: 63
        }
      },
      "7": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 8,
          column: 39
        }
      },
      "8": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "9": {
        start: {
          line: 10,
          column: 26
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "10": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 11,
          column: 17
        }
      },
      "11": {
        start: {
          line: 13,
          column: 25
        },
        end: {
          line: 17,
          column: 2
        }
      },
      "12": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 72
        }
      },
      "13": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 21
        }
      },
      "14": {
        start: {
          line: 18,
          column: 19
        },
        end: {
          line: 34,
          column: 4
        }
      },
      "15": {
        start: {
          line: 19,
          column: 18
        },
        end: {
          line: 26,
          column: 5
        }
      },
      "16": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 24,
          column: 10
        }
      },
      "17": {
        start: {
          line: 21,
          column: 21
        },
        end: {
          line: 21,
          column: 23
        }
      },
      "18": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "19": {
        start: {
          line: 22,
          column: 29
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "20": {
        start: {
          line: 22,
          column: 77
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "21": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 23,
          column: 22
        }
      },
      "22": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 26
        }
      },
      "23": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 33,
          column: 6
        }
      },
      "24": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 46
        }
      },
      "25": {
        start: {
          line: 28,
          column: 35
        },
        end: {
          line: 28,
          column: 46
        }
      },
      "26": {
        start: {
          line: 29,
          column: 21
        },
        end: {
          line: 29,
          column: 23
        }
      },
      "27": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "28": {
        start: {
          line: 30,
          column: 25
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "29": {
        start: {
          line: 30,
          column: 38
        },
        end: {
          line: 30,
          column: 50
        }
      },
      "30": {
        start: {
          line: 30,
          column: 56
        },
        end: {
          line: 30,
          column: 57
        }
      },
      "31": {
        start: {
          line: 30,
          column: 78
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "32": {
        start: {
          line: 30,
          column: 102
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "33": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 40
        }
      },
      "34": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 22
        }
      },
      "35": {
        start: {
          line: 35,
          column: 0
        },
        end: {
          line: 35,
          column: 62
        }
      },
      "36": {
        start: {
          line: 36,
          column: 0
        },
        end: {
          line: 36,
          column: 65
        }
      },
      "37": {
        start: {
          line: 37,
          column: 18
        },
        end: {
          line: 37,
          column: 81
        }
      },
      "38": {
        start: {
          line: 38,
          column: 23
        },
        end: {
          line: 38,
          column: 52
        }
      },
      "39": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 41,
          column: 33
        }
      },
      "40": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 31
        }
      },
      "41": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 32
        }
      },
      "42": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 44,
          column: 35
        }
      },
      "43": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 78,
          column: 9
        }
      },
      "44": {
        start: {
          line: 52,
          column: 28
        },
        end: {
          line: 52,
          column: 73
        }
      },
      "45": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 56,
          column: 13
        }
      },
      "46": {
        start: {
          line: 54,
          column: 16
        },
        end: {
          line: 54,
          column: 74
        }
      },
      "47": {
        start: {
          line: 55,
          column: 16
        },
        end: {
          line: 55,
          column: 29
        }
      },
      "48": {
        start: {
          line: 58,
          column: 27
        },
        end: {
          line: 58,
          column: 140
        }
      },
      "49": {
        start: {
          line: 59,
          column: 12
        },
        end: {
          line: 59,
          column: 99
        }
      },
      "50": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 61,
          column: 66
        }
      },
      "51": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 62,
          column: 121
        }
      },
      "52": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 63,
          column: 116
        }
      },
      "53": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 64,
          column: 108
        }
      },
      "54": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 65,
          column: 121
        }
      },
      "55": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 66,
          column: 125
        }
      },
      "56": {
        start: {
          line: 67,
          column: 12
        },
        end: {
          line: 67,
          column: 113
        }
      },
      "57": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 69,
          column: 76
        }
      },
      "58": {
        start: {
          line: 70,
          column: 12
        },
        end: {
          line: 70,
          column: 126
        }
      },
      "59": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 71,
          column: 38
        }
      },
      "60": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 72,
          column: 62
        }
      },
      "61": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 73,
          column: 24
        }
      },
      "62": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 76,
          column: 81
        }
      },
      "63": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 77,
          column: 25
        }
      },
      "64": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 87,
          column: 9
        }
      },
      "65": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 85,
          column: 68
        }
      },
      "66": {
        start: {
          line: 86,
          column: 12
        },
        end: {
          line: 86,
          column: 25
        }
      },
      "67": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 122,
          column: 9
        }
      },
      "68": {
        start: {
          line: 89,
          column: 32
        },
        end: {
          line: 89,
          column: 82
        }
      },
      "69": {
        start: {
          line: 90,
          column: 12
        },
        end: {
          line: 90,
          column: 93
        }
      },
      "70": {
        start: {
          line: 91,
          column: 12
        },
        end: {
          line: 100,
          column: 14
        }
      },
      "71": {
        start: {
          line: 93,
          column: 16
        },
        end: {
          line: 99,
          column: 17
        }
      },
      "72": {
        start: {
          line: 94,
          column: 20
        },
        end: {
          line: 98,
          column: 23
        }
      },
      "73": {
        start: {
          line: 101,
          column: 12
        },
        end: {
          line: 107,
          column: 14
        }
      },
      "74": {
        start: {
          line: 102,
          column: 16
        },
        end: {
          line: 102,
          column: 67
        }
      },
      "75": {
        start: {
          line: 103,
          column: 16
        },
        end: {
          line: 105,
          column: 17
        }
      },
      "76": {
        start: {
          line: 104,
          column: 20
        },
        end: {
          line: 104,
          column: 63
        }
      },
      "77": {
        start: {
          line: 106,
          column: 16
        },
        end: {
          line: 106,
          column: 49
        }
      },
      "78": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 111,
          column: 14
        }
      },
      "79": {
        start: {
          line: 109,
          column: 16
        },
        end: {
          line: 109,
          column: 62
        }
      },
      "80": {
        start: {
          line: 110,
          column: 16
        },
        end: {
          line: 110,
          column: 49
        }
      },
      "81": {
        start: {
          line: 112,
          column: 12
        },
        end: {
          line: 112,
          column: 68
        }
      },
      "82": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 113,
          column: 68
        }
      },
      "83": {
        start: {
          line: 114,
          column: 12
        },
        end: {
          line: 114,
          column: 24
        }
      },
      "84": {
        start: {
          line: 117,
          column: 12
        },
        end: {
          line: 117,
          column: 74
        }
      },
      "85": {
        start: {
          line: 118,
          column: 12
        },
        end: {
          line: 120,
          column: 13
        }
      },
      "86": {
        start: {
          line: 119,
          column: 16
        },
        end: {
          line: 119,
          column: 79
        }
      },
      "87": {
        start: {
          line: 121,
          column: 12
        },
        end: {
          line: 121,
          column: 25
        }
      },
      "88": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 138,
          column: 9
        }
      },
      "89": {
        start: {
          line: 129,
          column: 12
        },
        end: {
          line: 137,
          column: 13
        }
      },
      "90": {
        start: {
          line: 130,
          column: 16
        },
        end: {
          line: 130,
          column: 71
        }
      },
      "91": {
        start: {
          line: 131,
          column: 16
        },
        end: {
          line: 131,
          column: 40
        }
      },
      "92": {
        start: {
          line: 132,
          column: 16
        },
        end: {
          line: 132,
          column: 39
        }
      },
      "93": {
        start: {
          line: 133,
          column: 16
        },
        end: {
          line: 133,
          column: 61
        }
      },
      "94": {
        start: {
          line: 136,
          column: 16
        },
        end: {
          line: 136,
          column: 77
        }
      },
      "95": {
        start: {
          line: 144,
          column: 8
        },
        end: {
          line: 147,
          column: 9
        }
      },
      "96": {
        start: {
          line: 145,
          column: 12
        },
        end: {
          line: 145,
          column: 68
        }
      },
      "97": {
        start: {
          line: 146,
          column: 12
        },
        end: {
          line: 146,
          column: 24
        }
      },
      "98": {
        start: {
          line: 148,
          column: 8
        },
        end: {
          line: 190,
          column: 9
        }
      },
      "99": {
        start: {
          line: 149,
          column: 32
        },
        end: {
          line: 149,
          column: 80
        }
      },
      "100": {
        start: {
          line: 150,
          column: 12
        },
        end: {
          line: 150,
          column: 95
        }
      },
      "101": {
        start: {
          line: 151,
          column: 30
        },
        end: {
          line: 151,
          column: 69
        }
      },
      "102": {
        start: {
          line: 152,
          column: 25
        },
        end: {
          line: 152,
          column: 46
        }
      },
      "103": {
        start: {
          line: 153,
          column: 26
        },
        end: {
          line: 153,
          column: 48
        }
      },
      "104": {
        start: {
          line: 155,
          column: 34
        },
        end: {
          line: 155,
          column: 64
        }
      },
      "105": {
        start: {
          line: 156,
          column: 25
        },
        end: {
          line: 164,
          column: 7
        }
      },
      "106": {
        start: {
          line: 165,
          column: 12
        },
        end: {
          line: 185,
          column: 15
        }
      },
      "107": {
        start: {
          line: 166,
          column: 16
        },
        end: {
          line: 184,
          column: 19
        }
      },
      "108": {
        start: {
          line: 168,
          column: 20
        },
        end: {
          line: 175,
          column: 21
        }
      },
      "109": {
        start: {
          line: 169,
          column: 24
        },
        end: {
          line: 169,
          column: 68
        }
      },
      "110": {
        start: {
          line: 170,
          column: 24
        },
        end: {
          line: 170,
          column: 50
        }
      },
      "111": {
        start: {
          line: 173,
          column: 24
        },
        end: {
          line: 173,
          column: 89
        }
      },
      "112": {
        start: {
          line: 174,
          column: 24
        },
        end: {
          line: 174,
          column: 92
        }
      },
      "113": {
        start: {
          line: 176,
          column: 20
        },
        end: {
          line: 176,
          column: 92
        }
      },
      "114": {
        start: {
          line: 177,
          column: 20
        },
        end: {
          line: 177,
          column: 44
        }
      },
      "115": {
        start: {
          line: 180,
          column: 20
        },
        end: {
          line: 180,
          column: 70
        }
      },
      "116": {
        start: {
          line: 181,
          column: 20
        },
        end: {
          line: 181,
          column: 34
        }
      },
      "117": {
        start: {
          line: 182,
          column: 20
        },
        end: {
          line: 182,
          column: 92
        }
      },
      "118": {
        start: {
          line: 183,
          column: 20
        },
        end: {
          line: 183,
          column: 44
        }
      },
      "119": {
        start: {
          line: 188,
          column: 12
        },
        end: {
          line: 188,
          column: 67
        }
      },
      "120": {
        start: {
          line: 189,
          column: 12
        },
        end: {
          line: 189,
          column: 24
        }
      },
      "121": {
        start: {
          line: 196,
          column: 8
        },
        end: {
          line: 211,
          column: 20
        }
      },
      "122": {
        start: {
          line: 217,
          column: 8
        },
        end: {
          line: 220,
          column: 9
        }
      },
      "123": {
        start: {
          line: 218,
          column: 12
        },
        end: {
          line: 218,
          column: 68
        }
      },
      "124": {
        start: {
          line: 219,
          column: 12
        },
        end: {
          line: 219,
          column: 24
        }
      },
      "125": {
        start: {
          line: 221,
          column: 8
        },
        end: {
          line: 291,
          column: 9
        }
      },
      "126": {
        start: {
          line: 223,
          column: 31
        },
        end: {
          line: 223,
          column: 76
        }
      },
      "127": {
        start: {
          line: 224,
          column: 27
        },
        end: {
          line: 224,
          column: 54
        }
      },
      "128": {
        start: {
          line: 225,
          column: 12
        },
        end: {
          line: 225,
          column: 37
        }
      },
      "129": {
        start: {
          line: 226,
          column: 12
        },
        end: {
          line: 226,
          column: 31
        }
      },
      "130": {
        start: {
          line: 227,
          column: 32
        },
        end: {
          line: 227,
          column: 81
        }
      },
      "131": {
        start: {
          line: 228,
          column: 31
        },
        end: {
          line: 228,
          column: 93
        }
      },
      "132": {
        start: {
          line: 230,
          column: 12
        },
        end: {
          line: 286,
          column: 15
        }
      },
      "133": {
        start: {
          line: 231,
          column: 42
        },
        end: {
          line: 231,
          column: 47
        }
      },
      "134": {
        start: {
          line: 232,
          column: 34
        },
        end: {
          line: 232,
          column: 38
        }
      },
      "135": {
        start: {
          line: 234,
          column: 41
        },
        end: {
          line: 240,
          column: 25
        }
      },
      "136": {
        start: {
          line: 235,
          column: 20
        },
        end: {
          line: 235,
          column: 88
        }
      },
      "137": {
        start: {
          line: 236,
          column: 20
        },
        end: {
          line: 236,
          column: 64
        }
      },
      "138": {
        start: {
          line: 237,
          column: 20
        },
        end: {
          line: 239,
          column: 21
        }
      },
      "139": {
        start: {
          line: 238,
          column: 24
        },
        end: {
          line: 238,
          column: 38
        }
      },
      "140": {
        start: {
          line: 242,
          column: 16
        },
        end: {
          line: 256,
          column: 18
        }
      },
      "141": {
        start: {
          line: 244,
          column: 20
        },
        end: {
          line: 255,
          column: 21
        }
      },
      "142": {
        start: {
          line: 245,
          column: 24
        },
        end: {
          line: 245,
          column: 81
        }
      },
      "143": {
        start: {
          line: 246,
          column: 24
        },
        end: {
          line: 246,
          column: 51
        }
      },
      "144": {
        start: {
          line: 247,
          column: 24
        },
        end: {
          line: 251,
          column: 26
        }
      },
      "145": {
        start: {
          line: 253,
          column: 24
        },
        end: {
          line: 253,
          column: 55
        }
      },
      "146": {
        start: {
          line: 254,
          column: 24
        },
        end: {
          line: 254,
          column: 68
        }
      },
      "147": {
        start: {
          line: 258,
          column: 16
        },
        end: {
          line: 263,
          column: 18
        }
      },
      "148": {
        start: {
          line: 259,
          column: 20
        },
        end: {
          line: 259,
          column: 66
        }
      },
      "149": {
        start: {
          line: 260,
          column: 20
        },
        end: {
          line: 260,
          column: 51
        }
      },
      "150": {
        start: {
          line: 261,
          column: 20
        },
        end: {
          line: 261,
          column: 39
        }
      },
      "151": {
        start: {
          line: 262,
          column: 20
        },
        end: {
          line: 262,
          column: 41
        }
      },
      "152": {
        start: {
          line: 265,
          column: 16
        },
        end: {
          line: 276,
          column: 18
        }
      },
      "153": {
        start: {
          line: 266,
          column: 20
        },
        end: {
          line: 266,
          column: 75
        }
      },
      "154": {
        start: {
          line: 267,
          column: 20
        },
        end: {
          line: 267,
          column: 51
        }
      },
      "155": {
        start: {
          line: 268,
          column: 20
        },
        end: {
          line: 268,
          column: 64
        }
      },
      "156": {
        start: {
          line: 269,
          column: 20
        },
        end: {
          line: 275,
          column: 21
        }
      },
      "157": {
        start: {
          line: 270,
          column: 24
        },
        end: {
          line: 270,
          column: 80
        }
      },
      "158": {
        start: {
          line: 271,
          column: 24
        },
        end: {
          line: 271,
          column: 93
        }
      },
      "159": {
        start: {
          line: 274,
          column: 24
        },
        end: {
          line: 274,
          column: 45
        }
      },
      "160": {
        start: {
          line: 278,
          column: 16
        },
        end: {
          line: 285,
          column: 19
        }
      },
      "161": {
        start: {
          line: 279,
          column: 20
        },
        end: {
          line: 279,
          column: 90
        }
      },
      "162": {
        start: {
          line: 281,
          column: 20
        },
        end: {
          line: 281,
          column: 86
        }
      },
      "163": {
        start: {
          line: 282,
          column: 20
        },
        end: {
          line: 282,
          column: 51
        }
      },
      "164": {
        start: {
          line: 283,
          column: 20
        },
        end: {
          line: 283,
          column: 39
        }
      },
      "165": {
        start: {
          line: 284,
          column: 20
        },
        end: {
          line: 284,
          column: 45
        }
      },
      "166": {
        start: {
          line: 289,
          column: 12
        },
        end: {
          line: 289,
          column: 81
        }
      },
      "167": {
        start: {
          line: 290,
          column: 12
        },
        end: {
          line: 290,
          column: 24
        }
      },
      "168": {
        start: {
          line: 297,
          column: 8
        },
        end: {
          line: 297,
          column: 64
        }
      },
      "169": {
        start: {
          line: 303,
          column: 8
        },
        end: {
          line: 303,
          column: 41
        }
      },
      "170": {
        start: {
          line: 304,
          column: 8
        },
        end: {
          line: 307,
          column: 9
        }
      },
      "171": {
        start: {
          line: 305,
          column: 12
        },
        end: {
          line: 305,
          column: 37
        }
      },
      "172": {
        start: {
          line: 306,
          column: 12
        },
        end: {
          line: 306,
          column: 36
        }
      },
      "173": {
        start: {
          line: 308,
          column: 8
        },
        end: {
          line: 308,
          column: 33
        }
      },
      "174": {
        start: {
          line: 309,
          column: 8
        },
        end: {
          line: 309,
          column: 35
        }
      },
      "175": {
        start: {
          line: 310,
          column: 8
        },
        end: {
          line: 310,
          column: 56
        }
      },
      "176": {
        start: {
          line: 313,
          column: 0
        },
        end: {
          line: 313,
          column: 48
        }
      },
      "177": {
        start: {
          line: 315,
          column: 0
        },
        end: {
          line: 315,
          column: 54
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 2,
            column: 75
          }
        },
        loc: {
          start: {
            line: 2,
            column: 96
          },
          end: {
            line: 9,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 6,
            column: 38
          },
          end: {
            line: 6,
            column: 39
          }
        },
        loc: {
          start: {
            line: 6,
            column: 49
          },
          end: {
            line: 6,
            column: 65
          }
        },
        line: 6
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 9,
            column: 7
          }
        },
        loc: {
          start: {
            line: 9,
            column: 28
          },
          end: {
            line: 12,
            column: 1
          }
        },
        line: 9
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 13,
            column: 81
          }
        },
        loc: {
          start: {
            line: 13,
            column: 95
          },
          end: {
            line: 15,
            column: 1
          }
        },
        line: 13
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 15,
            column: 6
          }
        },
        loc: {
          start: {
            line: 15,
            column: 20
          },
          end: {
            line: 17,
            column: 1
          }
        },
        line: 15
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 18,
            column: 51
          },
          end: {
            line: 18,
            column: 52
          }
        },
        loc: {
          start: {
            line: 18,
            column: 63
          },
          end: {
            line: 34,
            column: 1
          }
        },
        line: 18
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 19,
            column: 18
          },
          end: {
            line: 19,
            column: 19
          }
        },
        loc: {
          start: {
            line: 19,
            column: 30
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 19
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 20,
            column: 48
          },
          end: {
            line: 20,
            column: 49
          }
        },
        loc: {
          start: {
            line: 20,
            column: 61
          },
          end: {
            line: 24,
            column: 9
          }
        },
        line: 20
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 27,
            column: 11
          },
          end: {
            line: 27,
            column: 12
          }
        },
        loc: {
          start: {
            line: 27,
            column: 26
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 27
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 40,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        },
        loc: {
          start: {
            line: 40,
            column: 18
          },
          end: {
            line: 45,
            column: 5
          }
        },
        line: 40
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 49,
            column: 5
          }
        },
        loc: {
          start: {
            line: 49,
            column: 23
          },
          end: {
            line: 79,
            column: 5
          }
        },
        line: 49
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 83,
            column: 4
          },
          end: {
            line: 83,
            column: 5
          }
        },
        loc: {
          start: {
            line: 83,
            column: 60
          },
          end: {
            line: 123,
            column: 5
          }
        },
        line: 83
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 91,
            column: 41
          },
          end: {
            line: 91,
            column: 42
          }
        },
        loc: {
          start: {
            line: 91,
            column: 51
          },
          end: {
            line: 100,
            column: 13
          }
        },
        line: 91
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 101,
            column: 39
          },
          end: {
            line: 101,
            column: 40
          }
        },
        loc: {
          start: {
            line: 101,
            column: 49
          },
          end: {
            line: 107,
            column: 13
          }
        },
        line: 101
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 108,
            column: 45
          },
          end: {
            line: 108,
            column: 46
          }
        },
        loc: {
          start: {
            line: 108,
            column: 55
          },
          end: {
            line: 111,
            column: 13
          }
        },
        line: 108
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 127,
            column: 4
          },
          end: {
            line: 127,
            column: 5
          }
        },
        loc: {
          start: {
            line: 127,
            column: 38
          },
          end: {
            line: 139,
            column: 5
          }
        },
        line: 127
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 143,
            column: 4
          },
          end: {
            line: 143,
            column: 5
          }
        },
        loc: {
          start: {
            line: 143,
            column: 47
          },
          end: {
            line: 191,
            column: 5
          }
        },
        line: 143
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 165,
            column: 31
          },
          end: {
            line: 165,
            column: 32
          }
        },
        loc: {
          start: {
            line: 165,
            column: 52
          },
          end: {
            line: 185,
            column: 13
          }
        },
        line: 165
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 166,
            column: 54
          },
          end: {
            line: 166,
            column: 55
          }
        },
        loc: {
          start: {
            line: 166,
            column: 66
          },
          end: {
            line: 178,
            column: 17
          }
        },
        line: 166
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 178,
            column: 19
          },
          end: {
            line: 178,
            column: 20
          }
        },
        loc: {
          start: {
            line: 178,
            column: 30
          },
          end: {
            line: 184,
            column: 17
          }
        },
        line: 178
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 195,
            column: 4
          },
          end: {
            line: 195,
            column: 5
          }
        },
        loc: {
          start: {
            line: 195,
            column: 30
          },
          end: {
            line: 212,
            column: 5
          }
        },
        line: 195
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 216,
            column: 4
          },
          end: {
            line: 216,
            column: 5
          }
        },
        loc: {
          start: {
            line: 216,
            column: 51
          },
          end: {
            line: 292,
            column: 5
          }
        },
        line: 216
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 230,
            column: 31
          },
          end: {
            line: 230,
            column: 32
          }
        },
        loc: {
          start: {
            line: 230,
            column: 52
          },
          end: {
            line: 286,
            column: 13
          }
        },
        line: 230
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 234,
            column: 52
          },
          end: {
            line: 234,
            column: 53
          }
        },
        loc: {
          start: {
            line: 234,
            column: 58
          },
          end: {
            line: 240,
            column: 17
          }
        },
        line: 234
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 242,
            column: 40
          },
          end: {
            line: 242,
            column: 41
          }
        },
        loc: {
          start: {
            line: 242,
            column: 59
          },
          end: {
            line: 256,
            column: 17
          }
        },
        line: 242
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 258,
            column: 44
          },
          end: {
            line: 258,
            column: 45
          }
        },
        loc: {
          start: {
            line: 258,
            column: 63
          },
          end: {
            line: 263,
            column: 17
          }
        },
        line: 258
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 265,
            column: 38
          },
          end: {
            line: 265,
            column: 39
          }
        },
        loc: {
          start: {
            line: 265,
            column: 57
          },
          end: {
            line: 276,
            column: 17
          }
        },
        line: 265
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 278,
            column: 59
          },
          end: {
            line: 278,
            column: 60
          }
        },
        loc: {
          start: {
            line: 278,
            column: 65
          },
          end: {
            line: 280,
            column: 17
          }
        },
        line: 278
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 280,
            column: 19
          },
          end: {
            line: 280,
            column: 20
          }
        },
        loc: {
          start: {
            line: 280,
            column: 30
          },
          end: {
            line: 285,
            column: 17
          }
        },
        line: 280
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 296,
            column: 4
          },
          end: {
            line: 296,
            column: 5
          }
        },
        loc: {
          start: {
            line: 296,
            column: 14
          },
          end: {
            line: 298,
            column: 5
          }
        },
        line: 296
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 302,
            column: 4
          },
          end: {
            line: 302,
            column: 5
          }
        },
        loc: {
          start: {
            line: 302,
            column: 14
          },
          end: {
            line: 311,
            column: 5
          }
        },
        line: 302
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 12,
            column: 3
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 9,
            column: 1
          }
        }, {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 12,
            column: 1
          }
        }],
        line: 2
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 5
      },
      "4": {
        loc: {
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 13
          }
        }, {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "5": {
        loc: {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 47
          }
        }, {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "6": {
        loc: {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 63
          }
        }, {
          start: {
            line: 5,
            column: 67
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "7": {
        loc: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 10
      },
      "8": {
        loc: {
          start: {
            line: 13,
            column: 25
          },
          end: {
            line: 17,
            column: 2
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 26
          },
          end: {
            line: 13,
            column: 30
          }
        }, {
          start: {
            line: 13,
            column: 34
          },
          end: {
            line: 13,
            column: 57
          }
        }, {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "9": {
        loc: {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 15,
            column: 1
          }
        }, {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "10": {
        loc: {
          start: {
            line: 18,
            column: 19
          },
          end: {
            line: 34,
            column: 4
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 20
          },
          end: {
            line: 18,
            column: 24
          }
        }, {
          start: {
            line: 18,
            column: 28
          },
          end: {
            line: 18,
            column: 45
          }
        }, {
          start: {
            line: 18,
            column: 50
          },
          end: {
            line: 34,
            column: 4
          }
        }],
        line: 18
      },
      "11": {
        loc: {
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 24,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 20,
            column: 44
          }
        }, {
          start: {
            line: 20,
            column: 48
          },
          end: {
            line: 24,
            column: 9
          }
        }],
        line: 20
      },
      "12": {
        loc: {
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 22,
            column: 95
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 22,
            column: 95
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "13": {
        loc: {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 46
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 46
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "14": {
        loc: {
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 15
          }
        }, {
          start: {
            line: 28,
            column: 19
          },
          end: {
            line: 28,
            column: 33
          }
        }],
        line: 28
      },
      "15": {
        loc: {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "16": {
        loc: {
          start: {
            line: 30,
            column: 78
          },
          end: {
            line: 30,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 78
          },
          end: {
            line: 30,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "17": {
        loc: {
          start: {
            line: 53,
            column: 12
          },
          end: {
            line: 56,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 53,
            column: 12
          },
          end: {
            line: 56,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 53
      },
      "18": {
        loc: {
          start: {
            line: 53,
            column: 16
          },
          end: {
            line: 53,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 53,
            column: 16
          },
          end: {
            line: 53,
            column: 34
          }
        }, {
          start: {
            line: 53,
            column: 38
          },
          end: {
            line: 53,
            column: 61
          }
        }],
        line: 53
      },
      "19": {
        loc: {
          start: {
            line: 58,
            column: 27
          },
          end: {
            line: 58,
            column: 140
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 58,
            column: 28
          },
          end: {
            line: 58,
            column: 127
          }
        }, {
          start: {
            line: 58,
            column: 132
          },
          end: {
            line: 58,
            column: 140
          }
        }],
        line: 58
      },
      "20": {
        loc: {
          start: {
            line: 58,
            column: 28
          },
          end: {
            line: 58,
            column: 127
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 58,
            column: 113
          },
          end: {
            line: 58,
            column: 119
          }
        }, {
          start: {
            line: 58,
            column: 122
          },
          end: {
            line: 58,
            column: 127
          }
        }],
        line: 58
      },
      "21": {
        loc: {
          start: {
            line: 58,
            column: 28
          },
          end: {
            line: 58,
            column: 110
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 58,
            column: 28
          },
          end: {
            line: 58,
            column: 93
          }
        }, {
          start: {
            line: 58,
            column: 97
          },
          end: {
            line: 58,
            column: 110
          }
        }],
        line: 58
      },
      "22": {
        loc: {
          start: {
            line: 84,
            column: 8
          },
          end: {
            line: 87,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 84,
            column: 8
          },
          end: {
            line: 87,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 84
      },
      "23": {
        loc: {
          start: {
            line: 84,
            column: 12
          },
          end: {
            line: 84,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 84,
            column: 12
          },
          end: {
            line: 84,
            column: 31
          }
        }, {
          start: {
            line: 84,
            column: 35
          },
          end: {
            line: 84,
            column: 53
          }
        }],
        line: 84
      },
      "24": {
        loc: {
          start: {
            line: 93,
            column: 16
          },
          end: {
            line: 99,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 93,
            column: 16
          },
          end: {
            line: 99,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 93
      },
      "25": {
        loc: {
          start: {
            line: 93,
            column: 20
          },
          end: {
            line: 93,
            column: 96
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 93,
            column: 20
          },
          end: {
            line: 93,
            column: 79
          }
        }, {
          start: {
            line: 93,
            column: 83
          },
          end: {
            line: 93,
            column: 96
          }
        }],
        line: 93
      },
      "26": {
        loc: {
          start: {
            line: 96,
            column: 36
          },
          end: {
            line: 96,
            column: 183
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 96,
            column: 174
          },
          end: {
            line: 96,
            column: 177
          }
        }, {
          start: {
            line: 96,
            column: 180
          },
          end: {
            line: 96,
            column: 183
          }
        }],
        line: 96
      },
      "27": {
        loc: {
          start: {
            line: 96,
            column: 37
          },
          end: {
            line: 96,
            column: 170
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 96,
            column: 92
          },
          end: {
            line: 96,
            column: 98
          }
        }, {
          start: {
            line: 96,
            column: 101
          },
          end: {
            line: 96,
            column: 170
          }
        }],
        line: 96
      },
      "28": {
        loc: {
          start: {
            line: 96,
            column: 37
          },
          end: {
            line: 96,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 96,
            column: 37
          },
          end: {
            line: 96,
            column: 72
          }
        }, {
          start: {
            line: 96,
            column: 76
          },
          end: {
            line: 96,
            column: 89
          }
        }],
        line: 96
      },
      "29": {
        loc: {
          start: {
            line: 103,
            column: 16
          },
          end: {
            line: 105,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 103,
            column: 16
          },
          end: {
            line: 105,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 103
      },
      "30": {
        loc: {
          start: {
            line: 103,
            column: 20
          },
          end: {
            line: 103,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 103,
            column: 20
          },
          end: {
            line: 103,
            column: 67
          }
        }, {
          start: {
            line: 103,
            column: 71
          },
          end: {
            line: 103,
            column: 78
          }
        }],
        line: 103
      },
      "31": {
        loc: {
          start: {
            line: 104,
            column: 28
          },
          end: {
            line: 104,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 104,
            column: 28
          },
          end: {
            line: 104,
            column: 42
          }
        }, {
          start: {
            line: 104,
            column: 46
          },
          end: {
            line: 104,
            column: 61
          }
        }],
        line: 104
      },
      "32": {
        loc: {
          start: {
            line: 118,
            column: 12
          },
          end: {
            line: 120,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 118,
            column: 12
          },
          end: {
            line: 120,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 118
      },
      "33": {
        loc: {
          start: {
            line: 119,
            column: 24
          },
          end: {
            line: 119,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 119,
            column: 24
          },
          end: {
            line: 119,
            column: 37
          }
        }, {
          start: {
            line: 119,
            column: 41
          },
          end: {
            line: 119,
            column: 77
          }
        }],
        line: 119
      },
      "34": {
        loc: {
          start: {
            line: 128,
            column: 8
          },
          end: {
            line: 138,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 128,
            column: 8
          },
          end: {
            line: 138,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 128
      },
      "35": {
        loc: {
          start: {
            line: 143,
            column: 33
          },
          end: {
            line: 143,
            column: 45
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 143,
            column: 43
          },
          end: {
            line: 143,
            column: 45
          }
        }],
        line: 143
      },
      "36": {
        loc: {
          start: {
            line: 144,
            column: 8
          },
          end: {
            line: 147,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 144,
            column: 8
          },
          end: {
            line: 147,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 144
      },
      "37": {
        loc: {
          start: {
            line: 144,
            column: 12
          },
          end: {
            line: 144,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 144,
            column: 12
          },
          end: {
            line: 144,
            column: 31
          }
        }, {
          start: {
            line: 144,
            column: 35
          },
          end: {
            line: 144,
            column: 53
          }
        }],
        line: 144
      },
      "38": {
        loc: {
          start: {
            line: 151,
            column: 30
          },
          end: {
            line: 151,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 151,
            column: 30
          },
          end: {
            line: 151,
            column: 47
          }
        }, {
          start: {
            line: 151,
            column: 51
          },
          end: {
            line: 151,
            column: 69
          }
        }],
        line: 151
      },
      "39": {
        loc: {
          start: {
            line: 152,
            column: 25
          },
          end: {
            line: 152,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 152,
            column: 25
          },
          end: {
            line: 152,
            column: 37
          }
        }, {
          start: {
            line: 152,
            column: 41
          },
          end: {
            line: 152,
            column: 46
          }
        }],
        line: 152
      },
      "40": {
        loc: {
          start: {
            line: 153,
            column: 26
          },
          end: {
            line: 153,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 153,
            column: 26
          },
          end: {
            line: 153,
            column: 39
          }
        }, {
          start: {
            line: 153,
            column: 43
          },
          end: {
            line: 153,
            column: 48
          }
        }],
        line: 153
      },
      "41": {
        loc: {
          start: {
            line: 168,
            column: 20
          },
          end: {
            line: 175,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 168,
            column: 20
          },
          end: {
            line: 175,
            column: 21
          }
        }, {
          start: {
            line: 172,
            column: 25
          },
          end: {
            line: 175,
            column: 21
          }
        }],
        line: 168
      },
      "42": {
        loc: {
          start: {
            line: 174,
            column: 41
          },
          end: {
            line: 174,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 174,
            column: 41
          },
          end: {
            line: 174,
            column: 60
          }
        }, {
          start: {
            line: 174,
            column: 64
          },
          end: {
            line: 174,
            column: 89
          }
        }],
        line: 174
      },
      "43": {
        loc: {
          start: {
            line: 176,
            column: 20
          },
          end: {
            line: 176,
            column: 91
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 176,
            column: 72
          },
          end: {
            line: 176,
            column: 78
          }
        }, {
          start: {
            line: 176,
            column: 81
          },
          end: {
            line: 176,
            column: 91
          }
        }],
        line: 176
      },
      "44": {
        loc: {
          start: {
            line: 176,
            column: 20
          },
          end: {
            line: 176,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 176,
            column: 20
          },
          end: {
            line: 176,
            column: 52
          }
        }, {
          start: {
            line: 176,
            column: 56
          },
          end: {
            line: 176,
            column: 69
          }
        }],
        line: 176
      },
      "45": {
        loc: {
          start: {
            line: 182,
            column: 20
          },
          end: {
            line: 182,
            column: 91
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 182,
            column: 72
          },
          end: {
            line: 182,
            column: 78
          }
        }, {
          start: {
            line: 182,
            column: 81
          },
          end: {
            line: 182,
            column: 91
          }
        }],
        line: 182
      },
      "46": {
        loc: {
          start: {
            line: 182,
            column: 20
          },
          end: {
            line: 182,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 182,
            column: 20
          },
          end: {
            line: 182,
            column: 52
          }
        }, {
          start: {
            line: 182,
            column: 56
          },
          end: {
            line: 182,
            column: 69
          }
        }],
        line: 182
      },
      "47": {
        loc: {
          start: {
            line: 217,
            column: 8
          },
          end: {
            line: 220,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 217,
            column: 8
          },
          end: {
            line: 220,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 217
      },
      "48": {
        loc: {
          start: {
            line: 217,
            column: 12
          },
          end: {
            line: 217,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 217,
            column: 12
          },
          end: {
            line: 217,
            column: 31
          }
        }, {
          start: {
            line: 217,
            column: 35
          },
          end: {
            line: 217,
            column: 53
          }
        }],
        line: 217
      },
      "49": {
        loc: {
          start: {
            line: 237,
            column: 20
          },
          end: {
            line: 239,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 237,
            column: 20
          },
          end: {
            line: 239,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 237
      },
      "50": {
        loc: {
          start: {
            line: 244,
            column: 20
          },
          end: {
            line: 255,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 244,
            column: 20
          },
          end: {
            line: 255,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 244
      },
      "51": {
        loc: {
          start: {
            line: 244,
            column: 24
          },
          end: {
            line: 244,
            column: 108
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 244,
            column: 24
          },
          end: {
            line: 244,
            column: 87
          }
        }, {
          start: {
            line: 244,
            column: 91
          },
          end: {
            line: 244,
            column: 108
          }
        }],
        line: 244
      },
      "52": {
        loc: {
          start: {
            line: 249,
            column: 40
          },
          end: {
            line: 249,
            column: 191
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 249,
            column: 182
          },
          end: {
            line: 249,
            column: 185
          }
        }, {
          start: {
            line: 249,
            column: 188
          },
          end: {
            line: 249,
            column: 191
          }
        }],
        line: 249
      },
      "53": {
        loc: {
          start: {
            line: 249,
            column: 41
          },
          end: {
            line: 249,
            column: 178
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 249,
            column: 100
          },
          end: {
            line: 249,
            column: 106
          }
        }, {
          start: {
            line: 249,
            column: 109
          },
          end: {
            line: 249,
            column: 178
          }
        }],
        line: 249
      },
      "54": {
        loc: {
          start: {
            line: 249,
            column: 41
          },
          end: {
            line: 249,
            column: 97
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 249,
            column: 41
          },
          end: {
            line: 249,
            column: 80
          }
        }, {
          start: {
            line: 249,
            column: 84
          },
          end: {
            line: 249,
            column: 97
          }
        }],
        line: 249
      },
      "55": {
        loc: {
          start: {
            line: 269,
            column: 20
          },
          end: {
            line: 275,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 269,
            column: 20
          },
          end: {
            line: 275,
            column: 21
          }
        }, {
          start: {
            line: 273,
            column: 25
          },
          end: {
            line: 275,
            column: 21
          }
        }],
        line: 269
      },
      "56": {
        loc: {
          start: {
            line: 271,
            column: 41
          },
          end: {
            line: 271,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 271,
            column: 41
          },
          end: {
            line: 271,
            column: 59
          }
        }, {
          start: {
            line: 271,
            column: 63
          },
          end: {
            line: 271,
            column: 90
          }
        }],
        line: 271
      },
      "57": {
        loc: {
          start: {
            line: 297,
            column: 15
          },
          end: {
            line: 297,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 297,
            column: 15
          },
          end: {
            line: 297,
            column: 33
          }
        }, {
          start: {
            line: 297,
            column: 37
          },
          end: {
            line: 297,
            column: 63
          }
        }],
        line: 297
      },
      "58": {
        loc: {
          start: {
            line: 304,
            column: 8
          },
          end: {
            line: 307,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 304,
            column: 8
          },
          end: {
            line: 307,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 304
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0, 0],
      "9": [0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/dikshantvashistha/PrepBettr/lib/services/azure-speech-service.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/dikshantvashistha/PrepBettr/lib/services/azure-speech-service.ts"],
      sourcesContent: ["import * as SpeechSDK from 'microsoft-cognitiveservices-speech-sdk';\nimport { fetchAzureSecrets } from '@/lib/azure-config';\n\nexport interface SpeechRecognitionResult {\n  text: string;\n  confidence: number;\n  reason: string;\n}\n\nexport interface SpeechSynthesisOptions {\n  voiceName?: string;\n  rate?: string;\n  pitch?: string;\n}\n\nexport class AzureSpeechService {\n  private speechConfig: SpeechSDK.SpeechConfig | null = null;\n  private recognizer: SpeechSDK.SpeechRecognizer | null = null;\n  private synthesizer: SpeechSDK.SpeechSynthesizer | null = null;\n  private isInitialized = false;\n\n  /**\n   * Initialize the Azure Speech Service\n   */\n  async initialize(): Promise<boolean> {\n    try {\n      const secrets = await fetchAzureSecrets();\n      \n      if (!secrets.speechKey || !secrets.speechEndpoint) {\n        console.warn('\u26A0\uFE0F Azure Speech credentials not available');\n        return false;\n      }\n\n      // Extract region from endpoint (e.g., https://westus.api.cognitive.microsoft.com -> westus)\n      const region = secrets.speechEndpoint.match(/https:\\/\\/([^.]+)/)?.[1] || 'westus';\n\n      this.speechConfig = SpeechSDK.SpeechConfig.fromSubscription(secrets.speechKey, region);\n      \n      // Enhanced Speech Recognition Configuration\n      this.speechConfig.speechRecognitionLanguage = 'en-US';\n      this.speechConfig.setProperty(SpeechSDK.PropertyId.SpeechServiceConnection_InitialSilenceTimeoutMs, '15000'); // Extended to 15s\n      this.speechConfig.setProperty(SpeechSDK.PropertyId.SpeechServiceConnection_EndSilenceTimeoutMs, '2000');\n      this.speechConfig.setProperty(SpeechSDK.PropertyId.Speech_SegmentationSilenceTimeoutMs, '2000');\n      this.speechConfig.setProperty(SpeechSDK.PropertyId.SpeechServiceResponse_DiarizeIntermediateResults, 'true');\n      this.speechConfig.setProperty(SpeechSDK.PropertyId.SpeechServiceResponse_RequestDetailedResultTrueFalse, 'true');\n      this.speechConfig.setProperty(SpeechSDK.PropertyId.SpeechServiceConnection_RecoMode, 'CONVERSATION');\n      \n      // Enhanced Speech Synthesis Configuration\n      this.speechConfig.speechSynthesisVoiceName = 'en-US-AriaNeural'; // More natural sounding\n      this.speechConfig.speechSynthesisOutputFormat = SpeechSDK.SpeechSynthesisOutputFormat.Audio24Khz48KBitRateMonoMp3;\n\n      this.isInitialized = true;\n      console.log('\u2705 Azure Speech Service initialized');\n      return true;\n    } catch (error) {\n      console.error('\u274C Failed to initialize Azure Speech Service:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Start continuous speech recognition\n   */\n  async startContinuousRecognition(\n    onRecognized: (result: SpeechRecognitionResult) => void,\n    onError?: (error: string) => void\n  ): Promise<boolean> {\n    if (!this.isInitialized || !this.speechConfig) {\n      console.error('\u274C Azure Speech Service not initialized');\n      return false;\n    }\n\n    try {\n      const audioConfig = SpeechSDK.AudioConfig.fromDefaultMicrophoneInput();\n      this.recognizer = new SpeechSDK.SpeechRecognizer(this.speechConfig, audioConfig);\n\n      this.recognizer.recognized = (s, e) => {\n        if (e.result.reason === SpeechSDK.ResultReason.RecognizedSpeech && e.result.text) {\n          onRecognized({\n            text: e.result.text,\n            confidence: e.result.properties?.getProperty(SpeechSDK.PropertyId.SpeechServiceResponse_JsonResult) ? 1.0 : 0.8,\n            reason: 'RecognizedSpeech'\n          });\n        }\n      };\n\n      this.recognizer.canceled = (s, e) => {\n        console.log(`\u274C Recognition canceled: ${e.reason}`);\n        if (e.reason === SpeechSDK.CancellationReason.Error && onError) {\n          onError(e.errorDetails || 'Unknown error');\n        }\n        this.stopContinuousRecognition();\n      };\n\n      this.recognizer.sessionStopped = (s, e) => {\n        console.log('\uD83D\uDED1 Recognition session stopped');\n        this.stopContinuousRecognition();\n      };\n\n      await this.recognizer.startContinuousRecognitionAsync();\n      console.log('\uD83C\uDFA4 Started continuous speech recognition');\n      return true;\n    } catch (error: any) {\n      console.error('\u274C Failed to start speech recognition:', error);\n      if (onError) {\n        onError(error.message || 'Failed to start speech recognition');\n      }\n      return false;\n    }\n  }\n\n  /**\n   * Stop continuous speech recognition\n   */\n  async stopContinuousRecognition(): Promise<void> {\n    if (this.recognizer) {\n      try {\n        await this.recognizer.stopContinuousRecognitionAsync();\n        this.recognizer.close();\n        this.recognizer = null;\n        console.log('\uD83D\uDED1 Stopped speech recognition');\n      } catch (error) {\n        console.error('\u274C Error stopping speech recognition:', error);\n      }\n    }\n  }\n\n  /**\n   * Synthesize speech from text\n   */\n  async synthesizeSpeech(\n    text: string,\n    options: SpeechSynthesisOptions = {}\n  ): Promise<ArrayBuffer | null> {\n    if (!this.isInitialized || !this.speechConfig) {\n      console.error('\u274C Azure Speech Service not initialized');\n      return null;\n    }\n\n    try {\n      const audioConfig = SpeechSDK.AudioConfig.fromDefaultSpeakerOutput();\n      this.synthesizer = new SpeechSDK.SpeechSynthesizer(this.speechConfig, audioConfig);\n\n      const voiceName = options.voiceName || 'en-US-SaraNeural';\n      const rate = options.rate || '1.0';\n      const pitch = options.pitch || '0Hz';\n\n      // Sanitize text for SSML\n      const sanitizedText = this.sanitizeTextForSSML(text);\n\n      const ssml = `\n        <speak version=\"1.0\" xmlns=\"http://www.w3.org/2001/10/synthesis\" xml:lang=\"en-US\">\n          <voice name=\"${voiceName}\">\n            <prosody rate=\"${rate}\" pitch=\"${pitch}\">\n              ${sanitizedText}\n            </prosody>\n          </voice>\n        </speak>\n      `;\n\n      return new Promise((resolve, reject) => {\n        this.synthesizer!.speakSsmlAsync(\n          ssml,\n          (result) => {\n            if (result.reason === SpeechSDK.ResultReason.SynthesizingAudioCompleted) {\n              console.log('\u2705 Speech synthesis completed');\n              resolve(result.audioData);\n            } else {\n              console.error('\u274C Speech synthesis failed:', result.errorDetails);\n              reject(new Error(result.errorDetails || 'Speech synthesis failed'));\n            }\n            this.synthesizer?.close();\n            this.synthesizer = null;\n          },\n          (error) => {\n            console.error('\u274C Speech synthesis error:', error);\n            reject(error);\n            this.synthesizer?.close();\n            this.synthesizer = null;\n          }\n        );\n      });\n    } catch (error) {\n      console.error('\u274C Failed to synthesize speech:', error);\n      return null;\n    }\n  }\n\n  /**\n   * Sanitize text for SSML to handle special characters and emojis\n   */\n  private sanitizeTextForSSML(text: string): string {\n    return text\n      // Remove or replace emojis and special unicode characters\n      .replace(/[\\u{1F600}-\\u{1F64F}]|[\\u{1F300}-\\u{1F5FF}]|[\\u{1F680}-\\u{1F6FF}]|[\\u{1F1E0}-\\u{1F1FF}]|[\\u{2600}-\\u{26FF}]|[\\u{2700}-\\u{27BF}]/gu, '')\n      // Escape XML special characters (but NOT apostrophes - they cause TTS to say \"apos\")\n      .replace(/&/g, '&amp;')\n      .replace(/</g, '&lt;')\n      .replace(/>/g, '&gt;')\n      .replace(/\"/g, '&quot;')\n      // NOTE: We intentionally do NOT escape apostrophes with &apos; as TTS reads it as \"apos\"\n      // Single quotes/apostrophes are safe in SSML content and will be pronounced correctly\n      // .replace(/'/g, '&apos;')  // REMOVED - causes \"apos\" pronunciation\n      // Remove problematic symbols that might cause parsing issues\n      .replace(/[@#$%^&*()]/g, ' ')\n      // Clean up multiple spaces\n      .replace(/\\s+/g, ' ')\n      .trim();\n  }\n\n  /**\n   * Process audio with Azure Speech using continuous recognition for better silence handling\n   */\n  async processAudioWithAzureSpeech(audioBuffer: ArrayBuffer): Promise<SpeechRecognitionResult | null> {\n    if (!this.isInitialized || !this.speechConfig) {\n      console.error('\u274C Azure Speech Service not initialized');\n      return null;\n    }\n\n    try {\n      // Create push stream for the audio\n      const pushStream = SpeechSDK.AudioInputStream.createPushStream();\n      const buffer = new Uint8Array(audioBuffer);\n      pushStream.write(buffer as any); // Azure SDK expects ArrayBuffer but Uint8Array is compatible\n      pushStream.close();\n      \n      const audioConfig = SpeechSDK.AudioConfig.fromStreamInput(pushStream);\n      const recognizer = new SpeechSDK.SpeechRecognizer(this.speechConfig, audioConfig);\n\n      // Use continuous recognition instead of recognizeOnceAsync\n      return new Promise((resolve, reject) => {\n        let hasRecognizedSpeech = false;\n        let finalResult: SpeechRecognitionResult | null = null;\n        \n        // Set maximum duration (65 seconds) to prevent hanging\n        const maxDurationTimer = setTimeout(() => {\n          console.log('\u23F1\uFE0F Maximum recognition duration reached, stopping...');\n          recognizer.stopContinuousRecognitionAsync();\n          if (!hasRecognizedSpeech) {\n            resolve(null);\n          }\n        }, 65000);\n\n        // Handle final recognized results\n        recognizer.recognized = (sender, event) => {\n          if (event.result.reason === SpeechSDK.ResultReason.RecognizedSpeech && event.result.text) {\n            console.log(`\u2705 Speech recognized: ${event.result.text}`);\n            hasRecognizedSpeech = true;\n            \n            finalResult = {\n              text: event.result.text,\n              confidence: event.result.properties?.getProperty(SpeechSDK.PropertyId.SpeechServiceResponse_JsonResult) ? 1.0 : 0.8,\n              reason: 'RecognizedSpeech'\n            };\n            \n            // Stop recognition after first meaningful result\n            clearTimeout(maxDurationTimer);\n            recognizer.stopContinuousRecognitionAsync();\n          }\n        };\n\n        // Handle session stopped\n        recognizer.sessionStopped = (sender, event) => {\n          console.log('\uD83D\uDED1 Recognition session stopped');\n          clearTimeout(maxDurationTimer);\n          recognizer.close();\n          resolve(finalResult);\n        };\n\n        // Handle cancellation/errors\n        recognizer.canceled = (sender, event) => {\n          console.log(`\u274C Recognition canceled: ${event.reason}`);\n          clearTimeout(maxDurationTimer);\n          recognizer.stopContinuousRecognitionAsync();\n          \n          if (event.reason === SpeechSDK.CancellationReason.Error) {\n            console.error('Recognition error:', event.errorDetails);\n            reject(new Error(event.errorDetails || 'Unknown recognition error'));\n          } else {\n            resolve(finalResult);\n          }\n        };\n\n        // Start continuous recognition\n        recognizer.startContinuousRecognitionAsync(\n          () => {\n            console.log('\uD83C\uDFA4 Started continuous recognition for audio processing');\n          },\n          (error) => {\n            console.error('\u274C Failed to start continuous recognition:', error);\n            clearTimeout(maxDurationTimer);\n            recognizer.close();\n            reject(new Error(error));\n          }\n        );\n      });\n    } catch (error) {\n      console.error('\u274C Failed to process audio with Azure Speech:', error);\n      return null;\n    }\n  }\n\n  /**\n   * Check if the service is initialized and ready\n   */\n  isReady(): boolean {\n    return this.isInitialized && this.speechConfig !== null;\n  }\n\n  /**\n   * Clean up resources\n   */\n  dispose(): void {\n    this.stopContinuousRecognition();\n    if (this.synthesizer) {\n      this.synthesizer.close();\n      this.synthesizer = null;\n    }\n    this.speechConfig = null;\n    this.isInitialized = false;\n    console.log('\uD83E\uDDF9 Azure Speech Service disposed');\n  }\n}\n\n// Export singleton instance\nexport const azureSpeechService = new AzureSpeechService();\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ef4e802f3ae727e78a0c1d540747e75e81b6326e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_xkq9sped5 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_xkq9sped5();
var __createBinding =
/* istanbul ignore next */
(cov_xkq9sped5().s[0]++,
/* istanbul ignore next */
(cov_xkq9sped5().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_xkq9sped5().b[0][1]++, this.__createBinding) ||
/* istanbul ignore next */
(cov_xkq9sped5().b[0][2]++, Object.create ?
/* istanbul ignore next */
(cov_xkq9sped5().b[1][0]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_xkq9sped5().f[0]++;
  cov_xkq9sped5().s[1]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_xkq9sped5().b[2][0]++;
    cov_xkq9sped5().s[2]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_xkq9sped5().b[2][1]++;
  }
  var desc =
  /* istanbul ignore next */
  (cov_xkq9sped5().s[3]++, Object.getOwnPropertyDescriptor(m, k));
  /* istanbul ignore next */
  cov_xkq9sped5().s[4]++;
  if (
  /* istanbul ignore next */
  (cov_xkq9sped5().b[4][0]++, !desc) ||
  /* istanbul ignore next */
  (cov_xkq9sped5().b[4][1]++, "get" in desc ?
  /* istanbul ignore next */
  (cov_xkq9sped5().b[5][0]++, !m.__esModule) :
  /* istanbul ignore next */
  (cov_xkq9sped5().b[5][1]++,
  /* istanbul ignore next */
  (cov_xkq9sped5().b[6][0]++, desc.writable) ||
  /* istanbul ignore next */
  (cov_xkq9sped5().b[6][1]++, desc.configurable)))) {
    /* istanbul ignore next */
    cov_xkq9sped5().b[3][0]++;
    cov_xkq9sped5().s[5]++;
    desc = {
      enumerable: true,
      get: function () {
        /* istanbul ignore next */
        cov_xkq9sped5().f[1]++;
        cov_xkq9sped5().s[6]++;
        return m[k];
      }
    };
  } else
  /* istanbul ignore next */
  {
    cov_xkq9sped5().b[3][1]++;
  }
  cov_xkq9sped5().s[7]++;
  Object.defineProperty(o, k2, desc);
}) :
/* istanbul ignore next */
(cov_xkq9sped5().b[1][1]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_xkq9sped5().f[2]++;
  cov_xkq9sped5().s[8]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_xkq9sped5().b[7][0]++;
    cov_xkq9sped5().s[9]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_xkq9sped5().b[7][1]++;
  }
  cov_xkq9sped5().s[10]++;
  o[k2] = m[k];
})));
var __setModuleDefault =
/* istanbul ignore next */
(cov_xkq9sped5().s[11]++,
/* istanbul ignore next */
(cov_xkq9sped5().b[8][0]++, this) &&
/* istanbul ignore next */
(cov_xkq9sped5().b[8][1]++, this.__setModuleDefault) ||
/* istanbul ignore next */
(cov_xkq9sped5().b[8][2]++, Object.create ?
/* istanbul ignore next */
(cov_xkq9sped5().b[9][0]++, function (o, v) {
  /* istanbul ignore next */
  cov_xkq9sped5().f[3]++;
  cov_xkq9sped5().s[12]++;
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
}) :
/* istanbul ignore next */
(cov_xkq9sped5().b[9][1]++, function (o, v) {
  /* istanbul ignore next */
  cov_xkq9sped5().f[4]++;
  cov_xkq9sped5().s[13]++;
  o["default"] = v;
})));
var __importStar =
/* istanbul ignore next */
(cov_xkq9sped5().s[14]++,
/* istanbul ignore next */
(cov_xkq9sped5().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_xkq9sped5().b[10][1]++, this.__importStar) ||
/* istanbul ignore next */
(cov_xkq9sped5().b[10][2]++, function () {
  /* istanbul ignore next */
  cov_xkq9sped5().f[5]++;
  cov_xkq9sped5().s[15]++;
  var ownKeys = function (o) {
    /* istanbul ignore next */
    cov_xkq9sped5().f[6]++;
    cov_xkq9sped5().s[16]++;
    ownKeys =
    /* istanbul ignore next */
    (cov_xkq9sped5().b[11][0]++, Object.getOwnPropertyNames) ||
    /* istanbul ignore next */
    (cov_xkq9sped5().b[11][1]++, function (o) {
      /* istanbul ignore next */
      cov_xkq9sped5().f[7]++;
      var ar =
      /* istanbul ignore next */
      (cov_xkq9sped5().s[17]++, []);
      /* istanbul ignore next */
      cov_xkq9sped5().s[18]++;
      for (var k in o) {
        /* istanbul ignore next */
        cov_xkq9sped5().s[19]++;
        if (Object.prototype.hasOwnProperty.call(o, k)) {
          /* istanbul ignore next */
          cov_xkq9sped5().b[12][0]++;
          cov_xkq9sped5().s[20]++;
          ar[ar.length] = k;
        } else
        /* istanbul ignore next */
        {
          cov_xkq9sped5().b[12][1]++;
        }
      }
      /* istanbul ignore next */
      cov_xkq9sped5().s[21]++;
      return ar;
    });
    /* istanbul ignore next */
    cov_xkq9sped5().s[22]++;
    return ownKeys(o);
  };
  /* istanbul ignore next */
  cov_xkq9sped5().s[23]++;
  return function (mod) {
    /* istanbul ignore next */
    cov_xkq9sped5().f[8]++;
    cov_xkq9sped5().s[24]++;
    if (
    /* istanbul ignore next */
    (cov_xkq9sped5().b[14][0]++, mod) &&
    /* istanbul ignore next */
    (cov_xkq9sped5().b[14][1]++, mod.__esModule)) {
      /* istanbul ignore next */
      cov_xkq9sped5().b[13][0]++;
      cov_xkq9sped5().s[25]++;
      return mod;
    } else
    /* istanbul ignore next */
    {
      cov_xkq9sped5().b[13][1]++;
    }
    var result =
    /* istanbul ignore next */
    (cov_xkq9sped5().s[26]++, {});
    /* istanbul ignore next */
    cov_xkq9sped5().s[27]++;
    if (mod != null) {
      /* istanbul ignore next */
      cov_xkq9sped5().b[15][0]++;
      cov_xkq9sped5().s[28]++;
      for (var k =
        /* istanbul ignore next */
        (cov_xkq9sped5().s[29]++, ownKeys(mod)), i =
        /* istanbul ignore next */
        (cov_xkq9sped5().s[30]++, 0); i < k.length; i++) {
        /* istanbul ignore next */
        cov_xkq9sped5().s[31]++;
        if (k[i] !== "default") {
          /* istanbul ignore next */
          cov_xkq9sped5().b[16][0]++;
          cov_xkq9sped5().s[32]++;
          __createBinding(result, mod, k[i]);
        } else
        /* istanbul ignore next */
        {
          cov_xkq9sped5().b[16][1]++;
        }
      }
    } else
    /* istanbul ignore next */
    {
      cov_xkq9sped5().b[15][1]++;
    }
    cov_xkq9sped5().s[33]++;
    __setModuleDefault(result, mod);
    /* istanbul ignore next */
    cov_xkq9sped5().s[34]++;
    return result;
  };
}()));
/* istanbul ignore next */
cov_xkq9sped5().s[35]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_xkq9sped5().s[36]++;
exports.azureSpeechService = exports.AzureSpeechService = void 0;
const SpeechSDK =
/* istanbul ignore next */
(cov_xkq9sped5().s[37]++, __importStar(require("microsoft-cognitiveservices-speech-sdk")));
const azure_config_1 =
/* istanbul ignore next */
(cov_xkq9sped5().s[38]++, require("@/lib/azure-config"));
class AzureSpeechService {
  constructor() {
    /* istanbul ignore next */
    cov_xkq9sped5().f[9]++;
    cov_xkq9sped5().s[39]++;
    this.speechConfig = null;
    /* istanbul ignore next */
    cov_xkq9sped5().s[40]++;
    this.recognizer = null;
    /* istanbul ignore next */
    cov_xkq9sped5().s[41]++;
    this.synthesizer = null;
    /* istanbul ignore next */
    cov_xkq9sped5().s[42]++;
    this.isInitialized = false;
  }
  /**
   * Initialize the Azure Speech Service
   */
  async initialize() {
    /* istanbul ignore next */
    cov_xkq9sped5().f[10]++;
    var _a;
    /* istanbul ignore next */
    cov_xkq9sped5().s[43]++;
    try {
      const secrets =
      /* istanbul ignore next */
      (cov_xkq9sped5().s[44]++, await (0, azure_config_1.fetchAzureSecrets)());
      /* istanbul ignore next */
      cov_xkq9sped5().s[45]++;
      if (
      /* istanbul ignore next */
      (cov_xkq9sped5().b[18][0]++, !secrets.speechKey) ||
      /* istanbul ignore next */
      (cov_xkq9sped5().b[18][1]++, !secrets.speechEndpoint)) {
        /* istanbul ignore next */
        cov_xkq9sped5().b[17][0]++;
        cov_xkq9sped5().s[46]++;
        console.warn('⚠️ Azure Speech credentials not available');
        /* istanbul ignore next */
        cov_xkq9sped5().s[47]++;
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_xkq9sped5().b[17][1]++;
      }
      // Extract region from endpoint (e.g., https://westus.api.cognitive.microsoft.com -> westus)
      const region =
      /* istanbul ignore next */
      (cov_xkq9sped5().s[48]++,
      /* istanbul ignore next */
      (cov_xkq9sped5().b[19][0]++,
      /* istanbul ignore next */
      (cov_xkq9sped5().b[21][0]++, (_a = secrets.speechEndpoint.match(/https:\/\/([^.]+)/)) === null) ||
      /* istanbul ignore next */
      (cov_xkq9sped5().b[21][1]++, _a === void 0) ?
      /* istanbul ignore next */
      (cov_xkq9sped5().b[20][0]++, void 0) :
      /* istanbul ignore next */
      (cov_xkq9sped5().b[20][1]++, _a[1])) ||
      /* istanbul ignore next */
      (cov_xkq9sped5().b[19][1]++, 'westus'));
      /* istanbul ignore next */
      cov_xkq9sped5().s[49]++;
      this.speechConfig = SpeechSDK.SpeechConfig.fromSubscription(secrets.speechKey, region);
      // Enhanced Speech Recognition Configuration
      /* istanbul ignore next */
      cov_xkq9sped5().s[50]++;
      this.speechConfig.speechRecognitionLanguage = 'en-US';
      /* istanbul ignore next */
      cov_xkq9sped5().s[51]++;
      this.speechConfig.setProperty(SpeechSDK.PropertyId.SpeechServiceConnection_InitialSilenceTimeoutMs, '15000'); // Extended to 15s
      /* istanbul ignore next */
      cov_xkq9sped5().s[52]++;
      this.speechConfig.setProperty(SpeechSDK.PropertyId.SpeechServiceConnection_EndSilenceTimeoutMs, '2000');
      /* istanbul ignore next */
      cov_xkq9sped5().s[53]++;
      this.speechConfig.setProperty(SpeechSDK.PropertyId.Speech_SegmentationSilenceTimeoutMs, '2000');
      /* istanbul ignore next */
      cov_xkq9sped5().s[54]++;
      this.speechConfig.setProperty(SpeechSDK.PropertyId.SpeechServiceResponse_DiarizeIntermediateResults, 'true');
      /* istanbul ignore next */
      cov_xkq9sped5().s[55]++;
      this.speechConfig.setProperty(SpeechSDK.PropertyId.SpeechServiceResponse_RequestDetailedResultTrueFalse, 'true');
      /* istanbul ignore next */
      cov_xkq9sped5().s[56]++;
      this.speechConfig.setProperty(SpeechSDK.PropertyId.SpeechServiceConnection_RecoMode, 'CONVERSATION');
      // Enhanced Speech Synthesis Configuration
      /* istanbul ignore next */
      cov_xkq9sped5().s[57]++;
      this.speechConfig.speechSynthesisVoiceName = 'en-US-AriaNeural'; // More natural sounding
      /* istanbul ignore next */
      cov_xkq9sped5().s[58]++;
      this.speechConfig.speechSynthesisOutputFormat = SpeechSDK.SpeechSynthesisOutputFormat.Audio24Khz48KBitRateMonoMp3;
      /* istanbul ignore next */
      cov_xkq9sped5().s[59]++;
      this.isInitialized = true;
      /* istanbul ignore next */
      cov_xkq9sped5().s[60]++;
      console.log('✅ Azure Speech Service initialized');
      /* istanbul ignore next */
      cov_xkq9sped5().s[61]++;
      return true;
    } catch (error) {
      /* istanbul ignore next */
      cov_xkq9sped5().s[62]++;
      console.error('❌ Failed to initialize Azure Speech Service:', error);
      /* istanbul ignore next */
      cov_xkq9sped5().s[63]++;
      return false;
    }
  }
  /**
   * Start continuous speech recognition
   */
  async startContinuousRecognition(onRecognized, onError) {
    /* istanbul ignore next */
    cov_xkq9sped5().f[11]++;
    cov_xkq9sped5().s[64]++;
    if (
    /* istanbul ignore next */
    (cov_xkq9sped5().b[23][0]++, !this.isInitialized) ||
    /* istanbul ignore next */
    (cov_xkq9sped5().b[23][1]++, !this.speechConfig)) {
      /* istanbul ignore next */
      cov_xkq9sped5().b[22][0]++;
      cov_xkq9sped5().s[65]++;
      console.error('❌ Azure Speech Service not initialized');
      /* istanbul ignore next */
      cov_xkq9sped5().s[66]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_xkq9sped5().b[22][1]++;
    }
    cov_xkq9sped5().s[67]++;
    try {
      const audioConfig =
      /* istanbul ignore next */
      (cov_xkq9sped5().s[68]++, SpeechSDK.AudioConfig.fromDefaultMicrophoneInput());
      /* istanbul ignore next */
      cov_xkq9sped5().s[69]++;
      this.recognizer = new SpeechSDK.SpeechRecognizer(this.speechConfig, audioConfig);
      /* istanbul ignore next */
      cov_xkq9sped5().s[70]++;
      this.recognizer.recognized = (s, e) => {
        /* istanbul ignore next */
        cov_xkq9sped5().f[12]++;
        var _a;
        /* istanbul ignore next */
        cov_xkq9sped5().s[71]++;
        if (
        /* istanbul ignore next */
        (cov_xkq9sped5().b[25][0]++, e.result.reason === SpeechSDK.ResultReason.RecognizedSpeech) &&
        /* istanbul ignore next */
        (cov_xkq9sped5().b[25][1]++, e.result.text)) {
          /* istanbul ignore next */
          cov_xkq9sped5().b[24][0]++;
          cov_xkq9sped5().s[72]++;
          onRecognized({
            text: e.result.text,
            confidence: (
            /* istanbul ignore next */
            (cov_xkq9sped5().b[28][0]++, (_a = e.result.properties) === null) ||
            /* istanbul ignore next */
            (cov_xkq9sped5().b[28][1]++, _a === void 0) ?
            /* istanbul ignore next */
            (cov_xkq9sped5().b[27][0]++, void 0) :
            /* istanbul ignore next */
            (cov_xkq9sped5().b[27][1]++, _a.getProperty(SpeechSDK.PropertyId.SpeechServiceResponse_JsonResult))) ?
            /* istanbul ignore next */
            (cov_xkq9sped5().b[26][0]++, 1.0) :
            /* istanbul ignore next */
            (cov_xkq9sped5().b[26][1]++, 0.8),
            reason: 'RecognizedSpeech'
          });
        } else
        /* istanbul ignore next */
        {
          cov_xkq9sped5().b[24][1]++;
        }
      };
      /* istanbul ignore next */
      cov_xkq9sped5().s[73]++;
      this.recognizer.canceled = (s, e) => {
        /* istanbul ignore next */
        cov_xkq9sped5().f[13]++;
        cov_xkq9sped5().s[74]++;
        console.log(`❌ Recognition canceled: ${e.reason}`);
        /* istanbul ignore next */
        cov_xkq9sped5().s[75]++;
        if (
        /* istanbul ignore next */
        (cov_xkq9sped5().b[30][0]++, e.reason === SpeechSDK.CancellationReason.Error) &&
        /* istanbul ignore next */
        (cov_xkq9sped5().b[30][1]++, onError)) {
          /* istanbul ignore next */
          cov_xkq9sped5().b[29][0]++;
          cov_xkq9sped5().s[76]++;
          onError(
          /* istanbul ignore next */
          (cov_xkq9sped5().b[31][0]++, e.errorDetails) ||
          /* istanbul ignore next */
          (cov_xkq9sped5().b[31][1]++, 'Unknown error'));
        } else
        /* istanbul ignore next */
        {
          cov_xkq9sped5().b[29][1]++;
        }
        cov_xkq9sped5().s[77]++;
        this.stopContinuousRecognition();
      };
      /* istanbul ignore next */
      cov_xkq9sped5().s[78]++;
      this.recognizer.sessionStopped = (s, e) => {
        /* istanbul ignore next */
        cov_xkq9sped5().f[14]++;
        cov_xkq9sped5().s[79]++;
        console.log('🛑 Recognition session stopped');
        /* istanbul ignore next */
        cov_xkq9sped5().s[80]++;
        this.stopContinuousRecognition();
      };
      /* istanbul ignore next */
      cov_xkq9sped5().s[81]++;
      await this.recognizer.startContinuousRecognitionAsync();
      /* istanbul ignore next */
      cov_xkq9sped5().s[82]++;
      console.log('🎤 Started continuous speech recognition');
      /* istanbul ignore next */
      cov_xkq9sped5().s[83]++;
      return true;
    } catch (error) {
      /* istanbul ignore next */
      cov_xkq9sped5().s[84]++;
      console.error('❌ Failed to start speech recognition:', error);
      /* istanbul ignore next */
      cov_xkq9sped5().s[85]++;
      if (onError) {
        /* istanbul ignore next */
        cov_xkq9sped5().b[32][0]++;
        cov_xkq9sped5().s[86]++;
        onError(
        /* istanbul ignore next */
        (cov_xkq9sped5().b[33][0]++, error.message) ||
        /* istanbul ignore next */
        (cov_xkq9sped5().b[33][1]++, 'Failed to start speech recognition'));
      } else
      /* istanbul ignore next */
      {
        cov_xkq9sped5().b[32][1]++;
      }
      cov_xkq9sped5().s[87]++;
      return false;
    }
  }
  /**
   * Stop continuous speech recognition
   */
  async stopContinuousRecognition() {
    /* istanbul ignore next */
    cov_xkq9sped5().f[15]++;
    cov_xkq9sped5().s[88]++;
    if (this.recognizer) {
      /* istanbul ignore next */
      cov_xkq9sped5().b[34][0]++;
      cov_xkq9sped5().s[89]++;
      try {
        /* istanbul ignore next */
        cov_xkq9sped5().s[90]++;
        await this.recognizer.stopContinuousRecognitionAsync();
        /* istanbul ignore next */
        cov_xkq9sped5().s[91]++;
        this.recognizer.close();
        /* istanbul ignore next */
        cov_xkq9sped5().s[92]++;
        this.recognizer = null;
        /* istanbul ignore next */
        cov_xkq9sped5().s[93]++;
        console.log('🛑 Stopped speech recognition');
      } catch (error) {
        /* istanbul ignore next */
        cov_xkq9sped5().s[94]++;
        console.error('❌ Error stopping speech recognition:', error);
      }
    } else
    /* istanbul ignore next */
    {
      cov_xkq9sped5().b[34][1]++;
    }
  }
  /**
   * Synthesize speech from text
   */
  async synthesizeSpeech(text, options =
  /* istanbul ignore next */
  (cov_xkq9sped5().b[35][0]++, {})) {
    /* istanbul ignore next */
    cov_xkq9sped5().f[16]++;
    cov_xkq9sped5().s[95]++;
    if (
    /* istanbul ignore next */
    (cov_xkq9sped5().b[37][0]++, !this.isInitialized) ||
    /* istanbul ignore next */
    (cov_xkq9sped5().b[37][1]++, !this.speechConfig)) {
      /* istanbul ignore next */
      cov_xkq9sped5().b[36][0]++;
      cov_xkq9sped5().s[96]++;
      console.error('❌ Azure Speech Service not initialized');
      /* istanbul ignore next */
      cov_xkq9sped5().s[97]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_xkq9sped5().b[36][1]++;
    }
    cov_xkq9sped5().s[98]++;
    try {
      const audioConfig =
      /* istanbul ignore next */
      (cov_xkq9sped5().s[99]++, SpeechSDK.AudioConfig.fromDefaultSpeakerOutput());
      /* istanbul ignore next */
      cov_xkq9sped5().s[100]++;
      this.synthesizer = new SpeechSDK.SpeechSynthesizer(this.speechConfig, audioConfig);
      const voiceName =
      /* istanbul ignore next */
      (cov_xkq9sped5().s[101]++,
      /* istanbul ignore next */
      (cov_xkq9sped5().b[38][0]++, options.voiceName) ||
      /* istanbul ignore next */
      (cov_xkq9sped5().b[38][1]++, 'en-US-SaraNeural'));
      const rate =
      /* istanbul ignore next */
      (cov_xkq9sped5().s[102]++,
      /* istanbul ignore next */
      (cov_xkq9sped5().b[39][0]++, options.rate) ||
      /* istanbul ignore next */
      (cov_xkq9sped5().b[39][1]++, '1.0'));
      const pitch =
      /* istanbul ignore next */
      (cov_xkq9sped5().s[103]++,
      /* istanbul ignore next */
      (cov_xkq9sped5().b[40][0]++, options.pitch) ||
      /* istanbul ignore next */
      (cov_xkq9sped5().b[40][1]++, '0Hz'));
      // Sanitize text for SSML
      const sanitizedText =
      /* istanbul ignore next */
      (cov_xkq9sped5().s[104]++, this.sanitizeTextForSSML(text));
      const ssml =
      /* istanbul ignore next */
      (cov_xkq9sped5().s[105]++, `
        <speak version="1.0" xmlns="http://www.w3.org/2001/10/synthesis" xml:lang="en-US">
          <voice name="${voiceName}">
            <prosody rate="${rate}" pitch="${pitch}">
              ${sanitizedText}
            </prosody>
          </voice>
        </speak>
      `);
      /* istanbul ignore next */
      cov_xkq9sped5().s[106]++;
      return new Promise((resolve, reject) => {
        /* istanbul ignore next */
        cov_xkq9sped5().f[17]++;
        cov_xkq9sped5().s[107]++;
        this.synthesizer.speakSsmlAsync(ssml, result => {
          /* istanbul ignore next */
          cov_xkq9sped5().f[18]++;
          var _a;
          /* istanbul ignore next */
          cov_xkq9sped5().s[108]++;
          if (result.reason === SpeechSDK.ResultReason.SynthesizingAudioCompleted) {
            /* istanbul ignore next */
            cov_xkq9sped5().b[41][0]++;
            cov_xkq9sped5().s[109]++;
            console.log('✅ Speech synthesis completed');
            /* istanbul ignore next */
            cov_xkq9sped5().s[110]++;
            resolve(result.audioData);
          } else {
            /* istanbul ignore next */
            cov_xkq9sped5().b[41][1]++;
            cov_xkq9sped5().s[111]++;
            console.error('❌ Speech synthesis failed:', result.errorDetails);
            /* istanbul ignore next */
            cov_xkq9sped5().s[112]++;
            reject(new Error(
            /* istanbul ignore next */
            (cov_xkq9sped5().b[42][0]++, result.errorDetails) ||
            /* istanbul ignore next */
            (cov_xkq9sped5().b[42][1]++, 'Speech synthesis failed')));
          }
          /* istanbul ignore next */
          cov_xkq9sped5().s[113]++;
          /* istanbul ignore next */
          (cov_xkq9sped5().b[44][0]++, (_a = this.synthesizer) === null) ||
          /* istanbul ignore next */
          (cov_xkq9sped5().b[44][1]++, _a === void 0) ?
          /* istanbul ignore next */
          (cov_xkq9sped5().b[43][0]++, void 0) :
          /* istanbul ignore next */
          (cov_xkq9sped5().b[43][1]++, _a.close());
          /* istanbul ignore next */
          cov_xkq9sped5().s[114]++;
          this.synthesizer = null;
        }, error => {
          /* istanbul ignore next */
          cov_xkq9sped5().f[19]++;
          var _a;
          /* istanbul ignore next */
          cov_xkq9sped5().s[115]++;
          console.error('❌ Speech synthesis error:', error);
          /* istanbul ignore next */
          cov_xkq9sped5().s[116]++;
          reject(error);
          /* istanbul ignore next */
          cov_xkq9sped5().s[117]++;
          /* istanbul ignore next */
          (cov_xkq9sped5().b[46][0]++, (_a = this.synthesizer) === null) ||
          /* istanbul ignore next */
          (cov_xkq9sped5().b[46][1]++, _a === void 0) ?
          /* istanbul ignore next */
          (cov_xkq9sped5().b[45][0]++, void 0) :
          /* istanbul ignore next */
          (cov_xkq9sped5().b[45][1]++, _a.close());
          /* istanbul ignore next */
          cov_xkq9sped5().s[118]++;
          this.synthesizer = null;
        });
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_xkq9sped5().s[119]++;
      console.error('❌ Failed to synthesize speech:', error);
      /* istanbul ignore next */
      cov_xkq9sped5().s[120]++;
      return null;
    }
  }
  /**
   * Sanitize text for SSML to handle special characters and emojis
   */
  sanitizeTextForSSML(text) {
    /* istanbul ignore next */
    cov_xkq9sped5().f[20]++;
    cov_xkq9sped5().s[121]++;
    return text
    // Remove or replace emojis and special unicode characters
    .replace(/[\u{1F600}-\u{1F64F}]|[\u{1F300}-\u{1F5FF}]|[\u{1F680}-\u{1F6FF}]|[\u{1F1E0}-\u{1F1FF}]|[\u{2600}-\u{26FF}]|[\u{2700}-\u{27BF}]/gu, '')
    // Escape XML special characters (but NOT apostrophes - they cause TTS to say "apos")
    .replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;')
    // NOTE: We intentionally do NOT escape apostrophes with &apos; as TTS reads it as "apos"
    // Single quotes/apostrophes are safe in SSML content and will be pronounced correctly
    // .replace(/'/g, '&apos;')  // REMOVED - causes "apos" pronunciation
    // Remove problematic symbols that might cause parsing issues
    .replace(/[@#$%^&*()]/g, ' ')
    // Clean up multiple spaces
    .replace(/\s+/g, ' ').trim();
  }
  /**
   * Process audio with Azure Speech using continuous recognition for better silence handling
   */
  async processAudioWithAzureSpeech(audioBuffer) {
    /* istanbul ignore next */
    cov_xkq9sped5().f[21]++;
    cov_xkq9sped5().s[122]++;
    if (
    /* istanbul ignore next */
    (cov_xkq9sped5().b[48][0]++, !this.isInitialized) ||
    /* istanbul ignore next */
    (cov_xkq9sped5().b[48][1]++, !this.speechConfig)) {
      /* istanbul ignore next */
      cov_xkq9sped5().b[47][0]++;
      cov_xkq9sped5().s[123]++;
      console.error('❌ Azure Speech Service not initialized');
      /* istanbul ignore next */
      cov_xkq9sped5().s[124]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_xkq9sped5().b[47][1]++;
    }
    cov_xkq9sped5().s[125]++;
    try {
      // Create push stream for the audio
      const pushStream =
      /* istanbul ignore next */
      (cov_xkq9sped5().s[126]++, SpeechSDK.AudioInputStream.createPushStream());
      const buffer =
      /* istanbul ignore next */
      (cov_xkq9sped5().s[127]++, new Uint8Array(audioBuffer));
      /* istanbul ignore next */
      cov_xkq9sped5().s[128]++;
      pushStream.write(buffer); // Azure SDK expects ArrayBuffer but Uint8Array is compatible
      /* istanbul ignore next */
      cov_xkq9sped5().s[129]++;
      pushStream.close();
      const audioConfig =
      /* istanbul ignore next */
      (cov_xkq9sped5().s[130]++, SpeechSDK.AudioConfig.fromStreamInput(pushStream));
      const recognizer =
      /* istanbul ignore next */
      (cov_xkq9sped5().s[131]++, new SpeechSDK.SpeechRecognizer(this.speechConfig, audioConfig));
      // Use continuous recognition instead of recognizeOnceAsync
      /* istanbul ignore next */
      cov_xkq9sped5().s[132]++;
      return new Promise((resolve, reject) => {
        /* istanbul ignore next */
        cov_xkq9sped5().f[22]++;
        let hasRecognizedSpeech =
        /* istanbul ignore next */
        (cov_xkq9sped5().s[133]++, false);
        let finalResult =
        /* istanbul ignore next */
        (cov_xkq9sped5().s[134]++, null);
        // Set maximum duration (65 seconds) to prevent hanging
        const maxDurationTimer =
        /* istanbul ignore next */
        (cov_xkq9sped5().s[135]++, setTimeout(() => {
          /* istanbul ignore next */
          cov_xkq9sped5().f[23]++;
          cov_xkq9sped5().s[136]++;
          console.log('⏱️ Maximum recognition duration reached, stopping...');
          /* istanbul ignore next */
          cov_xkq9sped5().s[137]++;
          recognizer.stopContinuousRecognitionAsync();
          /* istanbul ignore next */
          cov_xkq9sped5().s[138]++;
          if (!hasRecognizedSpeech) {
            /* istanbul ignore next */
            cov_xkq9sped5().b[49][0]++;
            cov_xkq9sped5().s[139]++;
            resolve(null);
          } else
          /* istanbul ignore next */
          {
            cov_xkq9sped5().b[49][1]++;
          }
        }, 65000));
        // Handle final recognized results
        /* istanbul ignore next */
        cov_xkq9sped5().s[140]++;
        recognizer.recognized = (sender, event) => {
          /* istanbul ignore next */
          cov_xkq9sped5().f[24]++;
          var _a;
          /* istanbul ignore next */
          cov_xkq9sped5().s[141]++;
          if (
          /* istanbul ignore next */
          (cov_xkq9sped5().b[51][0]++, event.result.reason === SpeechSDK.ResultReason.RecognizedSpeech) &&
          /* istanbul ignore next */
          (cov_xkq9sped5().b[51][1]++, event.result.text)) {
            /* istanbul ignore next */
            cov_xkq9sped5().b[50][0]++;
            cov_xkq9sped5().s[142]++;
            console.log(`✅ Speech recognized: ${event.result.text}`);
            /* istanbul ignore next */
            cov_xkq9sped5().s[143]++;
            hasRecognizedSpeech = true;
            /* istanbul ignore next */
            cov_xkq9sped5().s[144]++;
            finalResult = {
              text: event.result.text,
              confidence: (
              /* istanbul ignore next */
              (cov_xkq9sped5().b[54][0]++, (_a = event.result.properties) === null) ||
              /* istanbul ignore next */
              (cov_xkq9sped5().b[54][1]++, _a === void 0) ?
              /* istanbul ignore next */
              (cov_xkq9sped5().b[53][0]++, void 0) :
              /* istanbul ignore next */
              (cov_xkq9sped5().b[53][1]++, _a.getProperty(SpeechSDK.PropertyId.SpeechServiceResponse_JsonResult))) ?
              /* istanbul ignore next */
              (cov_xkq9sped5().b[52][0]++, 1.0) :
              /* istanbul ignore next */
              (cov_xkq9sped5().b[52][1]++, 0.8),
              reason: 'RecognizedSpeech'
            };
            // Stop recognition after first meaningful result
            /* istanbul ignore next */
            cov_xkq9sped5().s[145]++;
            clearTimeout(maxDurationTimer);
            /* istanbul ignore next */
            cov_xkq9sped5().s[146]++;
            recognizer.stopContinuousRecognitionAsync();
          } else
          /* istanbul ignore next */
          {
            cov_xkq9sped5().b[50][1]++;
          }
        };
        // Handle session stopped
        /* istanbul ignore next */
        cov_xkq9sped5().s[147]++;
        recognizer.sessionStopped = (sender, event) => {
          /* istanbul ignore next */
          cov_xkq9sped5().f[25]++;
          cov_xkq9sped5().s[148]++;
          console.log('🛑 Recognition session stopped');
          /* istanbul ignore next */
          cov_xkq9sped5().s[149]++;
          clearTimeout(maxDurationTimer);
          /* istanbul ignore next */
          cov_xkq9sped5().s[150]++;
          recognizer.close();
          /* istanbul ignore next */
          cov_xkq9sped5().s[151]++;
          resolve(finalResult);
        };
        // Handle cancellation/errors
        /* istanbul ignore next */
        cov_xkq9sped5().s[152]++;
        recognizer.canceled = (sender, event) => {
          /* istanbul ignore next */
          cov_xkq9sped5().f[26]++;
          cov_xkq9sped5().s[153]++;
          console.log(`❌ Recognition canceled: ${event.reason}`);
          /* istanbul ignore next */
          cov_xkq9sped5().s[154]++;
          clearTimeout(maxDurationTimer);
          /* istanbul ignore next */
          cov_xkq9sped5().s[155]++;
          recognizer.stopContinuousRecognitionAsync();
          /* istanbul ignore next */
          cov_xkq9sped5().s[156]++;
          if (event.reason === SpeechSDK.CancellationReason.Error) {
            /* istanbul ignore next */
            cov_xkq9sped5().b[55][0]++;
            cov_xkq9sped5().s[157]++;
            console.error('Recognition error:', event.errorDetails);
            /* istanbul ignore next */
            cov_xkq9sped5().s[158]++;
            reject(new Error(
            /* istanbul ignore next */
            (cov_xkq9sped5().b[56][0]++, event.errorDetails) ||
            /* istanbul ignore next */
            (cov_xkq9sped5().b[56][1]++, 'Unknown recognition error')));
          } else {
            /* istanbul ignore next */
            cov_xkq9sped5().b[55][1]++;
            cov_xkq9sped5().s[159]++;
            resolve(finalResult);
          }
        };
        // Start continuous recognition
        /* istanbul ignore next */
        cov_xkq9sped5().s[160]++;
        recognizer.startContinuousRecognitionAsync(() => {
          /* istanbul ignore next */
          cov_xkq9sped5().f[27]++;
          cov_xkq9sped5().s[161]++;
          console.log('🎤 Started continuous recognition for audio processing');
        }, error => {
          /* istanbul ignore next */
          cov_xkq9sped5().f[28]++;
          cov_xkq9sped5().s[162]++;
          console.error('❌ Failed to start continuous recognition:', error);
          /* istanbul ignore next */
          cov_xkq9sped5().s[163]++;
          clearTimeout(maxDurationTimer);
          /* istanbul ignore next */
          cov_xkq9sped5().s[164]++;
          recognizer.close();
          /* istanbul ignore next */
          cov_xkq9sped5().s[165]++;
          reject(new Error(error));
        });
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_xkq9sped5().s[166]++;
      console.error('❌ Failed to process audio with Azure Speech:', error);
      /* istanbul ignore next */
      cov_xkq9sped5().s[167]++;
      return null;
    }
  }
  /**
   * Check if the service is initialized and ready
   */
  isReady() {
    /* istanbul ignore next */
    cov_xkq9sped5().f[29]++;
    cov_xkq9sped5().s[168]++;
    return /* istanbul ignore next */(cov_xkq9sped5().b[57][0]++, this.isInitialized) &&
    /* istanbul ignore next */
    (cov_xkq9sped5().b[57][1]++, this.speechConfig !== null);
  }
  /**
   * Clean up resources
   */
  dispose() {
    /* istanbul ignore next */
    cov_xkq9sped5().f[30]++;
    cov_xkq9sped5().s[169]++;
    this.stopContinuousRecognition();
    /* istanbul ignore next */
    cov_xkq9sped5().s[170]++;
    if (this.synthesizer) {
      /* istanbul ignore next */
      cov_xkq9sped5().b[58][0]++;
      cov_xkq9sped5().s[171]++;
      this.synthesizer.close();
      /* istanbul ignore next */
      cov_xkq9sped5().s[172]++;
      this.synthesizer = null;
    } else
    /* istanbul ignore next */
    {
      cov_xkq9sped5().b[58][1]++;
    }
    cov_xkq9sped5().s[173]++;
    this.speechConfig = null;
    /* istanbul ignore next */
    cov_xkq9sped5().s[174]++;
    this.isInitialized = false;
    /* istanbul ignore next */
    cov_xkq9sped5().s[175]++;
    console.log('🧹 Azure Speech Service disposed');
  }
}
/* istanbul ignore next */
cov_xkq9sped5().s[176]++;
exports.AzureSpeechService = AzureSpeechService;
// Export singleton instance
/* istanbul ignore next */
cov_xkq9sped5().s[177]++;
exports.azureSpeechService = new AzureSpeechService();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,