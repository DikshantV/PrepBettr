21fba7e6fe19f373f87ebf24aeb71853
/* istanbul ignore next */
function cov_bhl4ux58n() {
  var path = "/Users/dikshantvashistha/PrepBettr/azure/unifiedAuth/index.js";
  var hash = "8c361854c2cbce48d24fe0cee887a34c2dfcefff";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dikshantvashistha/PrepBettr/azure/unifiedAuth/index.js",
    statementMap: {
      "0": {
        start: {
          line: 18,
          column: 17
        },
        end: {
          line: 18,
          column: 47
        }
      },
      "1": {
        start: {
          line: 19,
          column: 26
        },
        end: {
          line: 19,
          column: 66
        }
      },
      "2": {
        start: {
          line: 23,
          column: 21
        },
        end: {
          line: 28,
          column: 1
        }
      },
      "3": {
        start: {
          line: 36,
          column: 2
        },
        end: {
          line: 36,
          column: 55
        }
      },
      "4": {
        start: {
          line: 38,
          column: 2
        },
        end: {
          line: 86,
          column: 3
        }
      },
      "5": {
        start: {
          line: 39,
          column: 24
        },
        end: {
          line: 39,
          column: 38
        }
      },
      "6": {
        start: {
          line: 40,
          column: 23
        },
        end: {
          line: 40,
          column: 77
        }
      },
      "7": {
        start: {
          line: 43,
          column: 18
        },
        end: {
          line: 43,
          column: 84
        }
      },
      "8": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 47,
          column: 5
        }
      },
      "9": {
        start: {
          line: 46,
          column: 6
        },
        end: {
          line: 46,
          column: 76
        }
      },
      "10": {
        start: {
          line: 49,
          column: 19
        },
        end: {
          line: 49,
          column: 54
        }
      },
      "11": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 81,
          column: 5
        }
      },
      "12": {
        start: {
          line: 52,
          column: 6
        },
        end: {
          line: 52,
          column: 78
        }
      },
      "13": {
        start: {
          line: 55,
          column: 6
        },
        end: {
          line: 77,
          column: 8
        }
      },
      "14": {
        start: {
          line: 79,
          column: 6
        },
        end: {
          line: 79,
          column: 64
        }
      },
      "15": {
        start: {
          line: 80,
          column: 6
        },
        end: {
          line: 80,
          column: 70
        }
      },
      "16": {
        start: {
          line: 84,
          column: 4
        },
        end: {
          line: 84,
          column: 58
        }
      },
      "17": {
        start: {
          line: 85,
          column: 4
        },
        end: {
          line: 85,
          column: 87
        }
      },
      "18": {
        start: {
          line: 93,
          column: 17
        },
        end: {
          line: 93,
          column: 41
        }
      },
      "19": {
        start: {
          line: 94,
          column: 2
        },
        end: {
          line: 94,
          column: 61
        }
      },
      "20": {
        start: {
          line: 96,
          column: 2
        },
        end: {
          line: 162,
          column: 3
        }
      },
      "21": {
        start: {
          line: 97,
          column: 4
        },
        end: {
          line: 155,
          column: 5
        }
      },
      "22": {
        start: {
          line: 99,
          column: 37
        },
        end: {
          line: 99,
          column: 51
        }
      },
      "23": {
        start: {
          line: 101,
          column: 6
        },
        end: {
          line: 103,
          column: 7
        }
      },
      "24": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 102,
          column: 81
        }
      },
      "25": {
        start: {
          line: 105,
          column: 21
        },
        end: {
          line: 105,
          column: 79
        }
      },
      "26": {
        start: {
          line: 107,
          column: 6
        },
        end: {
          line: 124,
          column: 7
        }
      },
      "27": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 108,
          column: 59
        }
      },
      "28": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 120,
          column: 10
        }
      },
      "29": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 122,
          column: 71
        }
      },
      "30": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 123,
          column: 81
        }
      },
      "31": {
        start: {
          line: 126,
          column: 11
        },
        end: {
          line: 155,
          column: 5
        }
      },
      "32": {
        start: {
          line: 128,
          column: 28
        },
        end: {
          line: 128,
          column: 86
        }
      },
      "33": {
        start: {
          line: 130,
          column: 6
        },
        end: {
          line: 132,
          column: 7
        }
      },
      "34": {
        start: {
          line: 131,
          column: 8
        },
        end: {
          line: 131,
          column: 88
        }
      },
      "35": {
        start: {
          line: 134,
          column: 21
        },
        end: {
          line: 134,
          column: 70
        }
      },
      "36": {
        start: {
          line: 136,
          column: 6
        },
        end: {
          line: 154,
          column: 7
        }
      },
      "37": {
        start: {
          line: 137,
          column: 8
        },
        end: {
          line: 137,
          column: 76
        }
      },
      "38": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 150,
          column: 10
        }
      },
      "39": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 152,
          column: 75
        }
      },
      "40": {
        start: {
          line: 153,
          column: 8
        },
        end: {
          line: 153,
          column: 72
        }
      },
      "41": {
        start: {
          line: 157,
          column: 4
        },
        end: {
          line: 157,
          column: 80
        }
      },
      "42": {
        start: {
          line: 160,
          column: 4
        },
        end: {
          line: 160,
          column: 64
        }
      },
      "43": {
        start: {
          line: 161,
          column: 4
        },
        end: {
          line: 161,
          column: 81
        }
      },
      "44": {
        start: {
          line: 169,
          column: 2
        },
        end: {
          line: 169,
          column: 54
        }
      },
      "45": {
        start: {
          line: 171,
          column: 2
        },
        end: {
          line: 208,
          column: 3
        }
      },
      "46": {
        start: {
          line: 172,
          column: 23
        },
        end: {
          line: 172,
          column: 77
        }
      },
      "47": {
        start: {
          line: 173,
          column: 41
        },
        end: {
          line: 173,
          column: 55
        }
      },
      "48": {
        start: {
          line: 175,
          column: 4
        },
        end: {
          line: 177,
          column: 5
        }
      },
      "49": {
        start: {
          line: 176,
          column: 6
        },
        end: {
          line: 176,
          column: 90
        }
      },
      "50": {
        start: {
          line: 179,
          column: 18
        },
        end: {
          line: 179,
          column: 51
        }
      },
      "51": {
        start: {
          line: 182,
          column: 23
        },
        end: {
          line: 182,
          column: 58
        }
      },
      "52": {
        start: {
          line: 183,
          column: 4
        },
        end: {
          line: 185,
          column: 5
        }
      },
      "53": {
        start: {
          line: 184,
          column: 6
        },
        end: {
          line: 184,
          column: 78
        }
      },
      "54": {
        start: {
          line: 188,
          column: 30
        },
        end: {
          line: 188,
          column: 99
        }
      },
      "55": {
        start: {
          line: 190,
          column: 4
        },
        end: {
          line: 190,
          column: 128
        }
      },
      "56": {
        start: {
          line: 192,
          column: 4
        },
        end: {
          line: 203,
          column: 6
        }
      },
      "57": {
        start: {
          line: 206,
          column: 4
        },
        end: {
          line: 206,
          column: 56
        }
      },
      "58": {
        start: {
          line: 207,
          column: 4
        },
        end: {
          line: 207,
          column: 83
        }
      },
      "59": {
        start: {
          line: 215,
          column: 2
        },
        end: {
          line: 215,
          column: 50
        }
      },
      "60": {
        start: {
          line: 217,
          column: 2
        },
        end: {
          line: 261,
          column: 3
        }
      },
      "61": {
        start: {
          line: 218,
          column: 23
        },
        end: {
          line: 218,
          column: 77
        }
      },
      "62": {
        start: {
          line: 219,
          column: 28
        },
        end: {
          line: 219,
          column: 42
        }
      },
      "63": {
        start: {
          line: 221,
          column: 4
        },
        end: {
          line: 223,
          column: 5
        }
      },
      "64": {
        start: {
          line: 222,
          column: 6
        },
        end: {
          line: 222,
          column: 90
        }
      },
      "65": {
        start: {
          line: 225,
          column: 4
        },
        end: {
          line: 227,
          column: 5
        }
      },
      "66": {
        start: {
          line: 226,
          column: 6
        },
        end: {
          line: 226,
          column: 91
        }
      },
      "67": {
        start: {
          line: 229,
          column: 18
        },
        end: {
          line: 229,
          column: 51
        }
      },
      "68": {
        start: {
          line: 232,
          column: 23
        },
        end: {
          line: 232,
          column: 58
        }
      },
      "69": {
        start: {
          line: 233,
          column: 4
        },
        end: {
          line: 235,
          column: 5
        }
      },
      "70": {
        start: {
          line: 234,
          column: 6
        },
        end: {
          line: 234,
          column: 78
        }
      },
      "71": {
        start: {
          line: 238,
          column: 19
        },
        end: {
          line: 238,
          column: 83
        }
      },
      "72": {
        start: {
          line: 240,
          column: 4
        },
        end: {
          line: 256,
          column: 5
        }
      },
      "73": {
        start: {
          line: 241,
          column: 6
        },
        end: {
          line: 241,
          column: 69
        }
      },
      "74": {
        start: {
          line: 243,
          column: 6
        },
        end: {
          line: 252,
          column: 8
        }
      },
      "75": {
        start: {
          line: 254,
          column: 6
        },
        end: {
          line: 254,
          column: 59
        }
      },
      "76": {
        start: {
          line: 255,
          column: 6
        },
        end: {
          line: 255,
          column: 76
        }
      },
      "77": {
        start: {
          line: 259,
          column: 4
        },
        end: {
          line: 259,
          column: 53
        }
      },
      "78": {
        start: {
          line: 260,
          column: 4
        },
        end: {
          line: 260,
          column: 86
        }
      },
      "79": {
        start: {
          line: 268,
          column: 2
        },
        end: {
          line: 268,
          column: 49
        }
      },
      "80": {
        start: {
          line: 270,
          column: 2
        },
        end: {
          line: 300,
          column: 3
        }
      },
      "81": {
        start: {
          line: 271,
          column: 19
        },
        end: {
          line: 271,
          column: 47
        }
      },
      "82": {
        start: {
          line: 272,
          column: 19
        },
        end: {
          line: 272,
          column: 43
        }
      },
      "83": {
        start: {
          line: 274,
          column: 23
        },
        end: {
          line: 285,
          column: 5
        }
      },
      "84": {
        start: {
          line: 287,
          column: 4
        },
        end: {
          line: 289,
          column: 5
        }
      },
      "85": {
        start: {
          line: 288,
          column: 6
        },
        end: {
          line: 288,
          column: 38
        }
      },
      "86": {
        start: {
          line: 291,
          column: 4
        },
        end: {
          line: 295,
          column: 6
        }
      },
      "87": {
        start: {
          line: 298,
          column: 4
        },
        end: {
          line: 298,
          column: 52
        }
      },
      "88": {
        start: {
          line: 299,
          column: 4
        },
        end: {
          line: 299,
          column: 81
        }
      },
      "89": {
        start: {
          line: 309,
          column: 20
        },
        end: {
          line: 309,
          column: 30
        }
      },
      "90": {
        start: {
          line: 310,
          column: 2
        },
        end: {
          line: 310,
          column: 66
        }
      },
      "91": {
        start: {
          line: 313,
          column: 2
        },
        end: {
          line: 320,
          column: 3
        }
      },
      "92": {
        start: {
          line: 314,
          column: 4
        },
        end: {
          line: 318,
          column: 6
        }
      },
      "93": {
        start: {
          line: 319,
          column: 4
        },
        end: {
          line: 319,
          column: 11
        }
      },
      "94": {
        start: {
          line: 322,
          column: 2
        },
        end: {
          line: 364,
          column: 3
        }
      },
      "95": {
        start: {
          line: 323,
          column: 19
        },
        end: {
          line: 323,
          column: 47
        }
      },
      "96": {
        start: {
          line: 326,
          column: 4
        },
        end: {
          line: 326,
          column: 48
        }
      },
      "97": {
        start: {
          line: 328,
          column: 4
        },
        end: {
          line: 352,
          column: 5
        }
      },
      "98": {
        start: {
          line: 330,
          column: 8
        },
        end: {
          line: 330,
          column: 57
        }
      },
      "99": {
        start: {
          line: 331,
          column: 8
        },
        end: {
          line: 331,
          column: 14
        }
      },
      "100": {
        start: {
          line: 334,
          column: 8
        },
        end: {
          line: 334,
          column: 59
        }
      },
      "101": {
        start: {
          line: 335,
          column: 8
        },
        end: {
          line: 335,
          column: 14
        }
      },
      "102": {
        start: {
          line: 338,
          column: 8
        },
        end: {
          line: 338,
          column: 57
        }
      },
      "103": {
        start: {
          line: 339,
          column: 8
        },
        end: {
          line: 339,
          column: 14
        }
      },
      "104": {
        start: {
          line: 342,
          column: 8
        },
        end: {
          line: 342,
          column: 58
        }
      },
      "105": {
        start: {
          line: 343,
          column: 8
        },
        end: {
          line: 343,
          column: 14
        }
      },
      "106": {
        start: {
          line: 347,
          column: 8
        },
        end: {
          line: 347,
          column: 57
        }
      },
      "107": {
        start: {
          line: 348,
          column: 8
        },
        end: {
          line: 348,
          column: 14
        }
      },
      "108": {
        start: {
          line: 351,
          column: 8
        },
        end: {
          line: 351,
          column: 91
        }
      },
      "109": {
        start: {
          line: 354,
          column: 21
        },
        end: {
          line: 354,
          column: 43
        }
      },
      "110": {
        start: {
          line: 355,
          column: 4
        },
        end: {
          line: 355,
          column: 83
        }
      },
      "111": {
        start: {
          line: 357,
          column: 4
        },
        end: {
          line: 357,
          column: 27
        }
      },
      "112": {
        start: {
          line: 360,
          column: 21
        },
        end: {
          line: 360,
          column: 43
        }
      },
      "113": {
        start: {
          line: 361,
          column: 4
        },
        end: {
          line: 361,
          column: 77
        }
      },
      "114": {
        start: {
          line: 363,
          column: 4
        },
        end: {
          line: 363,
          column: 86
        }
      },
      "115": {
        start: {
          line: 373,
          column: 2
        },
        end: {
          line: 383,
          column: 4
        }
      },
      "116": {
        start: {
          line: 389,
          column: 32
        },
        end: {
          line: 389,
          column: 81
        }
      },
      "117": {
        start: {
          line: 393,
          column: 0
        },
        end: {
          line: 393,
          column: 41
        }
      },
      "118": {
        start: {
          line: 398,
          column: 0
        },
        end: {
          line: 404,
          column: 2
        }
      },
      "119": {
        start: {
          line: 406,
          column: 0
        },
        end: {
          line: 409,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "handleVerifyToken",
        decl: {
          start: {
            line: 35,
            column: 15
          },
          end: {
            line: 35,
            column: 32
          }
        },
        loc: {
          start: {
            line: 35,
            column: 47
          },
          end: {
            line: 87,
            column: 1
          }
        },
        line: 35
      },
      "1": {
        name: "handleSessionCookie",
        decl: {
          start: {
            line: 92,
            column: 15
          },
          end: {
            line: 92,
            column: 34
          }
        },
        loc: {
          start: {
            line: 92,
            column: 49
          },
          end: {
            line: 163,
            column: 1
          }
        },
        line: 92
      },
      "2": {
        name: "handlePermissions",
        decl: {
          start: {
            line: 168,
            column: 15
          },
          end: {
            line: 168,
            column: 32
          }
        },
        loc: {
          start: {
            line: 168,
            column: 47
          },
          end: {
            line: 209,
            column: 1
          }
        },
        line: 168
      },
      "3": {
        name: "handleCustomClaims",
        decl: {
          start: {
            line: 214,
            column: 15
          },
          end: {
            line: 214,
            column: 33
          }
        },
        loc: {
          start: {
            line: 214,
            column: 48
          },
          end: {
            line: 262,
            column: 1
          }
        },
        line: 214
      },
      "4": {
        name: "handleHealthCheck",
        decl: {
          start: {
            line: 267,
            column: 15
          },
          end: {
            line: 267,
            column: 32
          }
        },
        loc: {
          start: {
            line: 267,
            column: 47
          },
          end: {
            line: 301,
            column: 1
          }
        },
        line: 267
      },
      "5": {
        name: "unifiedAuthHandler",
        decl: {
          start: {
            line: 308,
            column: 15
          },
          end: {
            line: 308,
            column: 33
          }
        },
        loc: {
          start: {
            line: 308,
            column: 48
          },
          end: {
            line: 365,
            column: 1
          }
        },
        line: 308
      },
      "6": {
        name: "createErrorResponse",
        decl: {
          start: {
            line: 372,
            column: 9
          },
          end: {
            line: 372,
            column: 28
          }
        },
        loc: {
          start: {
            line: 372,
            column: 52
          },
          end: {
            line: 384,
            column: 1
          }
        },
        line: 372
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 39,
            column: 24
          },
          end: {
            line: 39,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 39,
            column: 24
          },
          end: {
            line: 39,
            column: 32
          }
        }, {
          start: {
            line: 39,
            column: 36
          },
          end: {
            line: 39,
            column: 38
          }
        }],
        line: 39
      },
      "1": {
        loc: {
          start: {
            line: 40,
            column: 23
          },
          end: {
            line: 40,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 40,
            column: 23
          },
          end: {
            line: 40,
            column: 48
          }
        }, {
          start: {
            line: 40,
            column: 52
          },
          end: {
            line: 40,
            column: 77
          }
        }],
        line: 40
      },
      "2": {
        loc: {
          start: {
            line: 43,
            column: 18
          },
          end: {
            line: 43,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 43,
            column: 18
          },
          end: {
            line: 43,
            column: 25
          }
        }, {
          start: {
            line: 43,
            column: 30
          },
          end: {
            line: 43,
            column: 83
          }
        }],
        line: 43
      },
      "3": {
        loc: {
          start: {
            line: 43,
            column: 30
          },
          end: {
            line: 43,
            column: 83
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 43,
            column: 43
          },
          end: {
            line: 43,
            column: 76
          }
        }, {
          start: {
            line: 43,
            column: 79
          },
          end: {
            line: 43,
            column: 83
          }
        }],
        line: 43
      },
      "4": {
        loc: {
          start: {
            line: 45,
            column: 4
          },
          end: {
            line: 47,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 45,
            column: 4
          },
          end: {
            line: 47,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 45
      },
      "5": {
        loc: {
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 81,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 81,
            column: 5
          }
        }, {
          start: {
            line: 78,
            column: 11
          },
          end: {
            line: 81,
            column: 5
          }
        }],
        line: 51
      },
      "6": {
        loc: {
          start: {
            line: 70,
            column: 51
          },
          end: {
            line: 70,
            column: 94
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 70,
            column: 51
          },
          end: {
            line: 70,
            column: 81
          }
        }, {
          start: {
            line: 70,
            column: 85
          },
          end: {
            line: 70,
            column: 94
          }
        }],
        line: 70
      },
      "7": {
        loc: {
          start: {
            line: 71,
            column: 17
          },
          end: {
            line: 71,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 71,
            column: 17
          },
          end: {
            line: 71,
            column: 47
          }
        }, {
          start: {
            line: 71,
            column: 51
          },
          end: {
            line: 71,
            column: 60
          }
        }],
        line: 71
      },
      "8": {
        loc: {
          start: {
            line: 97,
            column: 4
          },
          end: {
            line: 155,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 97,
            column: 4
          },
          end: {
            line: 155,
            column: 5
          }
        }, {
          start: {
            line: 126,
            column: 11
          },
          end: {
            line: 155,
            column: 5
          }
        }],
        line: 97
      },
      "9": {
        loc: {
          start: {
            line: 99,
            column: 37
          },
          end: {
            line: 99,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 99,
            column: 37
          },
          end: {
            line: 99,
            column: 45
          }
        }, {
          start: {
            line: 99,
            column: 49
          },
          end: {
            line: 99,
            column: 51
          }
        }],
        line: 99
      },
      "10": {
        loc: {
          start: {
            line: 101,
            column: 6
          },
          end: {
            line: 103,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 101,
            column: 6
          },
          end: {
            line: 103,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 101
      },
      "11": {
        loc: {
          start: {
            line: 107,
            column: 6
          },
          end: {
            line: 124,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 107,
            column: 6
          },
          end: {
            line: 124,
            column: 7
          }
        }, {
          start: {
            line: 121,
            column: 13
          },
          end: {
            line: 124,
            column: 7
          }
        }],
        line: 107
      },
      "12": {
        loc: {
          start: {
            line: 126,
            column: 11
          },
          end: {
            line: 155,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 126,
            column: 11
          },
          end: {
            line: 155,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 126
      },
      "13": {
        loc: {
          start: {
            line: 128,
            column: 28
          },
          end: {
            line: 128,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 128,
            column: 28
          },
          end: {
            line: 128,
            column: 51
          }
        }, {
          start: {
            line: 128,
            column: 55
          },
          end: {
            line: 128,
            column: 86
          }
        }],
        line: 128
      },
      "14": {
        loc: {
          start: {
            line: 130,
            column: 6
          },
          end: {
            line: 132,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 130,
            column: 6
          },
          end: {
            line: 132,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 130
      },
      "15": {
        loc: {
          start: {
            line: 136,
            column: 6
          },
          end: {
            line: 154,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 136,
            column: 6
          },
          end: {
            line: 154,
            column: 7
          }
        }, {
          start: {
            line: 151,
            column: 13
          },
          end: {
            line: 154,
            column: 7
          }
        }],
        line: 136
      },
      "16": {
        loc: {
          start: {
            line: 172,
            column: 23
          },
          end: {
            line: 172,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 172,
            column: 23
          },
          end: {
            line: 172,
            column: 48
          }
        }, {
          start: {
            line: 172,
            column: 52
          },
          end: {
            line: 172,
            column: 77
          }
        }],
        line: 172
      },
      "17": {
        loc: {
          start: {
            line: 173,
            column: 12
          },
          end: {
            line: 173,
            column: 36
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 173,
            column: 34
          },
          end: {
            line: 173,
            column: 36
          }
        }],
        line: 173
      },
      "18": {
        loc: {
          start: {
            line: 173,
            column: 41
          },
          end: {
            line: 173,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 173,
            column: 41
          },
          end: {
            line: 173,
            column: 49
          }
        }, {
          start: {
            line: 173,
            column: 53
          },
          end: {
            line: 173,
            column: 55
          }
        }],
        line: 173
      },
      "19": {
        loc: {
          start: {
            line: 175,
            column: 4
          },
          end: {
            line: 177,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 175,
            column: 4
          },
          end: {
            line: 177,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 175
      },
      "20": {
        loc: {
          start: {
            line: 183,
            column: 4
          },
          end: {
            line: 185,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 183,
            column: 4
          },
          end: {
            line: 185,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 183
      },
      "21": {
        loc: {
          start: {
            line: 183,
            column: 8
          },
          end: {
            line: 183,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 183,
            column: 8
          },
          end: {
            line: 183,
            column: 27
          }
        }, {
          start: {
            line: 183,
            column: 31
          },
          end: {
            line: 183,
            column: 47
          }
        }],
        line: 183
      },
      "22": {
        loc: {
          start: {
            line: 190,
            column: 69
          },
          end: {
            line: 190,
            column: 124
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 190,
            column: 104
          },
          end: {
            line: 190,
            column: 113
          }
        }, {
          start: {
            line: 190,
            column: 116
          },
          end: {
            line: 190,
            column: 124
          }
        }],
        line: 190
      },
      "23": {
        loc: {
          start: {
            line: 218,
            column: 23
          },
          end: {
            line: 218,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 218,
            column: 23
          },
          end: {
            line: 218,
            column: 48
          }
        }, {
          start: {
            line: 218,
            column: 52
          },
          end: {
            line: 218,
            column: 77
          }
        }],
        line: 218
      },
      "24": {
        loc: {
          start: {
            line: 219,
            column: 28
          },
          end: {
            line: 219,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 219,
            column: 28
          },
          end: {
            line: 219,
            column: 36
          }
        }, {
          start: {
            line: 219,
            column: 40
          },
          end: {
            line: 219,
            column: 42
          }
        }],
        line: 219
      },
      "25": {
        loc: {
          start: {
            line: 221,
            column: 4
          },
          end: {
            line: 223,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 221,
            column: 4
          },
          end: {
            line: 223,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 221
      },
      "26": {
        loc: {
          start: {
            line: 225,
            column: 4
          },
          end: {
            line: 227,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 225,
            column: 4
          },
          end: {
            line: 227,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 225
      },
      "27": {
        loc: {
          start: {
            line: 225,
            column: 8
          },
          end: {
            line: 225,
            column: 23
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 225,
            column: 8
          },
          end: {
            line: 225,
            column: 12
          }
        }, {
          start: {
            line: 225,
            column: 16
          },
          end: {
            line: 225,
            column: 23
          }
        }],
        line: 225
      },
      "28": {
        loc: {
          start: {
            line: 233,
            column: 4
          },
          end: {
            line: 235,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 233,
            column: 4
          },
          end: {
            line: 235,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 233
      },
      "29": {
        loc: {
          start: {
            line: 233,
            column: 8
          },
          end: {
            line: 233,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 233,
            column: 8
          },
          end: {
            line: 233,
            column: 27
          }
        }, {
          start: {
            line: 233,
            column: 31
          },
          end: {
            line: 233,
            column: 47
          }
        }],
        line: 233
      },
      "30": {
        loc: {
          start: {
            line: 240,
            column: 4
          },
          end: {
            line: 256,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 240,
            column: 4
          },
          end: {
            line: 256,
            column: 5
          }
        }, {
          start: {
            line: 253,
            column: 11
          },
          end: {
            line: 256,
            column: 5
          }
        }],
        line: 240
      },
      "31": {
        loc: {
          start: {
            line: 287,
            column: 4
          },
          end: {
            line: 289,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 287,
            column: 4
          },
          end: {
            line: 289,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 287
      },
      "32": {
        loc: {
          start: {
            line: 292,
            column: 14
          },
          end: {
            line: 292,
            column: 53
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 292,
            column: 44
          },
          end: {
            line: 292,
            column: 47
          }
        }, {
          start: {
            line: 292,
            column: 50
          },
          end: {
            line: 292,
            column: 53
          }
        }],
        line: 292
      },
      "33": {
        loc: {
          start: {
            line: 313,
            column: 2
          },
          end: {
            line: 320,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 313,
            column: 2
          },
          end: {
            line: 320,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 313
      },
      "34": {
        loc: {
          start: {
            line: 323,
            column: 19
          },
          end: {
            line: 323,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 323,
            column: 19
          },
          end: {
            line: 323,
            column: 35
          }
        }, {
          start: {
            line: 323,
            column: 39
          },
          end: {
            line: 323,
            column: 47
          }
        }],
        line: 323
      },
      "35": {
        loc: {
          start: {
            line: 328,
            column: 4
          },
          end: {
            line: 352,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 329,
            column: 6
          },
          end: {
            line: 331,
            column: 14
          }
        }, {
          start: {
            line: 333,
            column: 6
          },
          end: {
            line: 335,
            column: 14
          }
        }, {
          start: {
            line: 337,
            column: 6
          },
          end: {
            line: 339,
            column: 14
          }
        }, {
          start: {
            line: 341,
            column: 6
          },
          end: {
            line: 343,
            column: 14
          }
        }, {
          start: {
            line: 345,
            column: 6
          },
          end: {
            line: 345,
            column: 20
          }
        }, {
          start: {
            line: 346,
            column: 6
          },
          end: {
            line: 348,
            column: 14
          }
        }, {
          start: {
            line: 350,
            column: 6
          },
          end: {
            line: 351,
            column: 91
          }
        }],
        line: 328
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0, 0, 0, 0, 0, 0]
    },
    inputSourceMap: null,
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "8c361854c2cbce48d24fe0cee887a34c2dfcefff"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_bhl4ux58n = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_bhl4ux58n();
/**
 * Unified Authentication Azure Function
 * 
 * Consolidates all Firebase authentication endpoints into a single HTTP trigger.
 * Replaces: verifyToken, verifyPermissions, verifySessionCookie, createSessionCookie
 * 
 * Routes:
 * - POST /api/unifiedAuth?action=verify         → Token verification
 * - POST /api/unifiedAuth?action=session        → Session cookie creation/validation  
 * - POST /api/unifiedAuth?action=permissions    → Permission checking
 * - POST /api/unifiedAuth?action=claims         → Custom claims management (admin)
 * - GET  /api/unifiedAuth?action=status         → Health check
 * 
 * @version 2.0.0
 * @author PrepBettr Platform Team
 */

const coreAuth =
/* istanbul ignore next */
(cov_bhl4ux58n().s[0]++, require('../shared/core-auth'));
const {
  withTelemetry
} =
/* istanbul ignore next */
(cov_bhl4ux58n().s[1]++, require('../shared/core-auth/telemetry'));

// ===== CORS CONFIGURATION =====

const CORS_HEADERS =
/* istanbul ignore next */
(cov_bhl4ux58n().s[2]++, {
  'Access-Control-Allow-Origin': '*',
  'Access-Control-Allow-Methods': 'GET, POST, OPTIONS',
  'Access-Control-Allow-Headers': 'Content-Type, Authorization, X-Functions-Key',
  'Content-Type': 'application/json'
});

// ===== REQUEST HANDLERS =====

/**
 * Handle token verification requests
 */
async function handleVerifyToken(context, req) {
  /* istanbul ignore next */
  cov_bhl4ux58n().f[0]++;
  cov_bhl4ux58n().s[3]++;
  context.log('Processing token verification request');
  /* istanbul ignore next */
  cov_bhl4ux58n().s[4]++;
  try {
    const {
      idToken
    } =
    /* istanbul ignore next */
    (cov_bhl4ux58n().s[5]++,
    /* istanbul ignore next */
    (cov_bhl4ux58n().b[0][0]++, req.body) ||
    /* istanbul ignore next */
    (cov_bhl4ux58n().b[0][1]++, {}));
    const authHeader =
    /* istanbul ignore next */
    (cov_bhl4ux58n().s[6]++,
    /* istanbul ignore next */
    (cov_bhl4ux58n().b[1][0]++, req.headers.authorization) ||
    /* istanbul ignore next */
    (cov_bhl4ux58n().b[1][1]++, req.headers.Authorization));

    // Get token from body or Authorization header
    const token =
    /* istanbul ignore next */
    (cov_bhl4ux58n().s[7]++,
    /* istanbul ignore next */
    (cov_bhl4ux58n().b[2][0]++, idToken) ||
    /* istanbul ignore next */
    (cov_bhl4ux58n().b[2][1]++, authHeader ?
    /* istanbul ignore next */
    (cov_bhl4ux58n().b[3][0]++, authHeader.replace('Bearer ', '')) :
    /* istanbul ignore next */
    (cov_bhl4ux58n().b[3][1]++, null)));
    /* istanbul ignore next */
    cov_bhl4ux58n().s[8]++;
    if (!token) {
      /* istanbul ignore next */
      cov_bhl4ux58n().b[4][0]++;
      cov_bhl4ux58n().s[9]++;
      return createErrorResponse(400, 'No token provided', 'MISSING_TOKEN');
    } else
    /* istanbul ignore next */
    {
      cov_bhl4ux58n().b[4][1]++;
    }
    const result =
    /* istanbul ignore next */
    (cov_bhl4ux58n().s[10]++, await coreAuth.verifyIdToken(token));
    /* istanbul ignore next */
    cov_bhl4ux58n().s[11]++;
    if (result.success) {
      /* istanbul ignore next */
      cov_bhl4ux58n().b[5][0]++;
      cov_bhl4ux58n().s[12]++;
      context.log(`Token verified successfully for user: ${result.user.uid}`);

      // Return format matching Firebase Cloud Function response
      /* istanbul ignore next */
      cov_bhl4ux58n().s[13]++;
      return {
        status: 200,
        headers: CORS_HEADERS,
        body: JSON.stringify({
          success: true,
          uid: result.user.uid,
          email: result.user.email,
          verified: true,
          verificationMethod: result.verificationMethod,
          claims: {
            uid: result.user.uid,
            email: result.user.email,
            email_verified: result.user.email_verified,
            name: result.user.name,
            picture: result.user.picture,
            iss: `https://securetoken.google.com/${
            /* istanbul ignore next */
            (cov_bhl4ux58n().b[6][0]++, result.user.custom_claims?.aud) ||
            /* istanbul ignore next */
            (cov_bhl4ux58n().b[6][1]++, 'unknown')}`,
            aud:
            /* istanbul ignore next */
            (cov_bhl4ux58n().b[7][0]++, result.user.custom_claims?.aud) ||
            /* istanbul ignore next */
            (cov_bhl4ux58n().b[7][1]++, 'unknown'),
            auth_time: result.user.auth_time,
            iat: result.user.iat,
            exp: result.user.exp
          }
        })
      };
    } else {
      /* istanbul ignore next */
      cov_bhl4ux58n().b[5][1]++;
      cov_bhl4ux58n().s[14]++;
      context.log(`Token verification failed: ${result.error}`);
      /* istanbul ignore next */
      cov_bhl4ux58n().s[15]++;
      return createErrorResponse(401, result.error, result.errorCode);
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_bhl4ux58n().s[16]++;
    context.log.error('Token verification error:', error);
    /* istanbul ignore next */
    cov_bhl4ux58n().s[17]++;
    return createErrorResponse(500, 'Token verification failed', 'VERIFICATION_ERROR');
  }
}

/**
 * Handle session cookie operations (creation and validation)
 */
async function handleSessionCookie(context, req) {
  /* istanbul ignore next */
  cov_bhl4ux58n().f[1]++;
  const method =
  /* istanbul ignore next */
  (cov_bhl4ux58n().s[18]++, req.method.toUpperCase());
  /* istanbul ignore next */
  cov_bhl4ux58n().s[19]++;
  context.log(`Processing session cookie ${method} request`);
  /* istanbul ignore next */
  cov_bhl4ux58n().s[20]++;
  try {
    /* istanbul ignore next */
    cov_bhl4ux58n().s[21]++;
    if (method === 'POST') {
      /* istanbul ignore next */
      cov_bhl4ux58n().b[8][0]++;
      // Create session cookie
      const {
        idToken,
        expiresIn
      } =
      /* istanbul ignore next */
      (cov_bhl4ux58n().s[22]++,
      /* istanbul ignore next */
      (cov_bhl4ux58n().b[9][0]++, req.body) ||
      /* istanbul ignore next */
      (cov_bhl4ux58n().b[9][1]++, {}));
      /* istanbul ignore next */
      cov_bhl4ux58n().s[23]++;
      if (!idToken) {
        /* istanbul ignore next */
        cov_bhl4ux58n().b[10][0]++;
        cov_bhl4ux58n().s[24]++;
        return createErrorResponse(400, 'ID token is required', 'MISSING_TOKEN');
      } else
      /* istanbul ignore next */
      {
        cov_bhl4ux58n().b[10][1]++;
      }
      const result =
      /* istanbul ignore next */
      (cov_bhl4ux58n().s[25]++, await coreAuth.createSessionCookie(idToken, {
        expiresIn
      }));
      /* istanbul ignore next */
      cov_bhl4ux58n().s[26]++;
      if (result.success) {
        /* istanbul ignore next */
        cov_bhl4ux58n().b[11][0]++;
        cov_bhl4ux58n().s[27]++;
        context.log('Session cookie created successfully');
        /* istanbul ignore next */
        cov_bhl4ux58n().s[28]++;
        return {
          status: 200,
          headers: CORS_HEADERS,
          body: JSON.stringify({
            success: true,
            sessionCookie: result.sessionCookie,
            expiresIn: result.expiresIn,
            expiresAt: new Date(Date.now() + result.expiresIn).toISOString(),
            method: 'azure-unified-auth'
          })
        };
      } else {
        /* istanbul ignore next */
        cov_bhl4ux58n().b[11][1]++;
        cov_bhl4ux58n().s[29]++;
        context.log(`Session cookie creation failed: ${result.error}`);
        /* istanbul ignore next */
        cov_bhl4ux58n().s[30]++;
        return createErrorResponse(400, result.error, 'SESSION_CREATION_FAILED');
      }
    } else {
      /* istanbul ignore next */
      cov_bhl4ux58n().b[8][1]++;
      cov_bhl4ux58n().s[31]++;
      if (method === 'GET') {
        /* istanbul ignore next */
        cov_bhl4ux58n().b[12][0]++;
        // Verify session cookie
        const sessionCookie =
        /* istanbul ignore next */
        (cov_bhl4ux58n().s[32]++,
        /* istanbul ignore next */
        (cov_bhl4ux58n().b[13][0]++, req.query.sessionCookie) ||
        /* istanbul ignore next */
        (cov_bhl4ux58n().b[13][1]++, req.headers['x-session-cookie']));
        /* istanbul ignore next */
        cov_bhl4ux58n().s[33]++;
        if (!sessionCookie) {
          /* istanbul ignore next */
          cov_bhl4ux58n().b[14][0]++;
          cov_bhl4ux58n().s[34]++;
          return createErrorResponse(400, 'Session cookie is required', 'MISSING_COOKIE');
        } else
        /* istanbul ignore next */
        {
          cov_bhl4ux58n().b[14][1]++;
        }
        const result =
        /* istanbul ignore next */
        (cov_bhl4ux58n().s[35]++, await coreAuth.verifySessionCookie(sessionCookie));
        /* istanbul ignore next */
        cov_bhl4ux58n().s[36]++;
        if (result.success) {
          /* istanbul ignore next */
          cov_bhl4ux58n().b[15][0]++;
          cov_bhl4ux58n().s[37]++;
          context.log(`Session cookie verified for user: ${result.user.uid}`);
          /* istanbul ignore next */
          cov_bhl4ux58n().s[38]++;
          return {
            status: 200,
            headers: CORS_HEADERS,
            body: JSON.stringify({
              success: true,
              uid: result.user.uid,
              email: result.user.email,
              verified: true,
              verificationMethod: result.verificationMethod,
              claims: result.user
            })
          };
        } else {
          /* istanbul ignore next */
          cov_bhl4ux58n().b[15][1]++;
          cov_bhl4ux58n().s[39]++;
          context.log(`Session cookie verification failed: ${result.error}`);
          /* istanbul ignore next */
          cov_bhl4ux58n().s[40]++;
          return createErrorResponse(401, result.error, result.errorCode);
        }
      } else
      /* istanbul ignore next */
      {
        cov_bhl4ux58n().b[12][1]++;
      }
    }
    /* istanbul ignore next */
    cov_bhl4ux58n().s[41]++;
    return createErrorResponse(405, 'Method not allowed', 'METHOD_NOT_ALLOWED');
  } catch (error) {
    /* istanbul ignore next */
    cov_bhl4ux58n().s[42]++;
    context.log.error('Session cookie operation error:', error);
    /* istanbul ignore next */
    cov_bhl4ux58n().s[43]++;
    return createErrorResponse(500, 'Session operation failed', 'SESSION_ERROR');
  }
}

/**
 * Handle permission checking requests
 */
async function handlePermissions(context, req) {
  /* istanbul ignore next */
  cov_bhl4ux58n().f[2]++;
  cov_bhl4ux58n().s[44]++;
  context.log('Processing permissions check request');
  /* istanbul ignore next */
  cov_bhl4ux58n().s[45]++;
  try {
    const authHeader =
    /* istanbul ignore next */
    (cov_bhl4ux58n().s[46]++,
    /* istanbul ignore next */
    (cov_bhl4ux58n().b[16][0]++, req.headers.authorization) ||
    /* istanbul ignore next */
    (cov_bhl4ux58n().b[16][1]++, req.headers.Authorization));
    const {
      requiredPermissions =
      /* istanbul ignore next */
      (cov_bhl4ux58n().b[17][0]++, [])
    } =
    /* istanbul ignore next */
    (cov_bhl4ux58n().s[47]++,
    /* istanbul ignore next */
    (cov_bhl4ux58n().b[18][0]++, req.body) ||
    /* istanbul ignore next */
    (cov_bhl4ux58n().b[18][1]++, {}));
    /* istanbul ignore next */
    cov_bhl4ux58n().s[48]++;
    if (!authHeader) {
      /* istanbul ignore next */
      cov_bhl4ux58n().b[19][0]++;
      cov_bhl4ux58n().s[49]++;
      return createErrorResponse(400, 'Authorization header is required', 'MISSING_AUTH');
    } else
    /* istanbul ignore next */
    {
      cov_bhl4ux58n().b[19][1]++;
    }
    const token =
    /* istanbul ignore next */
    (cov_bhl4ux58n().s[50]++, authHeader.replace('Bearer ', ''));

    // First verify the token
    const authResult =
    /* istanbul ignore next */
    (cov_bhl4ux58n().s[51]++, await coreAuth.verifyIdToken(token));
    /* istanbul ignore next */
    cov_bhl4ux58n().s[52]++;
    if (
    /* istanbul ignore next */
    (cov_bhl4ux58n().b[21][0]++, !authResult.success) ||
    /* istanbul ignore next */
    (cov_bhl4ux58n().b[21][1]++, !authResult.user)) {
      /* istanbul ignore next */
      cov_bhl4ux58n().b[20][0]++;
      cov_bhl4ux58n().s[53]++;
      return createErrorResponse(401, authResult.error, authResult.errorCode);
    } else
    /* istanbul ignore next */
    {
      cov_bhl4ux58n().b[20][1]++;
    }

    // Check permissions
    const permissionsResult =
    /* istanbul ignore next */
    (cov_bhl4ux58n().s[54]++, await coreAuth.checkPermissions(authResult.user, requiredPermissions));
    /* istanbul ignore next */
    cov_bhl4ux58n().s[55]++;
    context.log(`Permission check for user ${authResult.user.uid}: ${permissionsResult.hasPermissions ?
    /* istanbul ignore next */
    (cov_bhl4ux58n().b[22][0]++, 'GRANTED') :
    /* istanbul ignore next */
    (cov_bhl4ux58n().b[22][1]++, 'DENIED')}`);
    /* istanbul ignore next */
    cov_bhl4ux58n().s[56]++;
    return {
      status: 200,
      headers: CORS_HEADERS,
      body: JSON.stringify({
        success: true,
        hasPermissions: permissionsResult.hasPermissions,
        permissions: permissionsResult.userPermissions,
        roles: permissionsResult.userRoles,
        uid: authResult.user.uid,
        requiredPermissions: permissionsResult.requiredPermissions
      })
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_bhl4ux58n().s[57]++;
    context.log.error('Permission check error:', error);
    /* istanbul ignore next */
    cov_bhl4ux58n().s[58]++;
    return createErrorResponse(500, 'Permission check failed', 'PERMISSION_ERROR');
  }
}

/**
 * Handle custom claims management (admin only)
 */
async function handleCustomClaims(context, req) {
  /* istanbul ignore next */
  cov_bhl4ux58n().f[3]++;
  cov_bhl4ux58n().s[59]++;
  context.log('Processing custom claims request');
  /* istanbul ignore next */
  cov_bhl4ux58n().s[60]++;
  try {
    const authHeader =
    /* istanbul ignore next */
    (cov_bhl4ux58n().s[61]++,
    /* istanbul ignore next */
    (cov_bhl4ux58n().b[23][0]++, req.headers.authorization) ||
    /* istanbul ignore next */
    (cov_bhl4ux58n().b[23][1]++, req.headers.Authorization));
    const {
      uid,
      claims
    } =
    /* istanbul ignore next */
    (cov_bhl4ux58n().s[62]++,
    /* istanbul ignore next */
    (cov_bhl4ux58n().b[24][0]++, req.body) ||
    /* istanbul ignore next */
    (cov_bhl4ux58n().b[24][1]++, {}));
    /* istanbul ignore next */
    cov_bhl4ux58n().s[63]++;
    if (!authHeader) {
      /* istanbul ignore next */
      cov_bhl4ux58n().b[25][0]++;
      cov_bhl4ux58n().s[64]++;
      return createErrorResponse(400, 'Authorization header is required', 'MISSING_AUTH');
    } else
    /* istanbul ignore next */
    {
      cov_bhl4ux58n().b[25][1]++;
    }
    cov_bhl4ux58n().s[65]++;
    if (
    /* istanbul ignore next */
    (cov_bhl4ux58n().b[27][0]++, !uid) ||
    /* istanbul ignore next */
    (cov_bhl4ux58n().b[27][1]++, !claims)) {
      /* istanbul ignore next */
      cov_bhl4ux58n().b[26][0]++;
      cov_bhl4ux58n().s[66]++;
      return createErrorResponse(400, 'UID and claims are required', 'MISSING_PARAMETERS');
    } else
    /* istanbul ignore next */
    {
      cov_bhl4ux58n().b[26][1]++;
    }
    const token =
    /* istanbul ignore next */
    (cov_bhl4ux58n().s[67]++, authHeader.replace('Bearer ', ''));

    // Verify admin token
    const authResult =
    /* istanbul ignore next */
    (cov_bhl4ux58n().s[68]++, await coreAuth.verifyIdToken(token));
    /* istanbul ignore next */
    cov_bhl4ux58n().s[69]++;
    if (
    /* istanbul ignore next */
    (cov_bhl4ux58n().b[29][0]++, !authResult.success) ||
    /* istanbul ignore next */
    (cov_bhl4ux58n().b[29][1]++, !authResult.user)) {
      /* istanbul ignore next */
      cov_bhl4ux58n().b[28][0]++;
      cov_bhl4ux58n().s[70]++;
      return createErrorResponse(401, authResult.error, authResult.errorCode);
    } else
    /* istanbul ignore next */
    {
      cov_bhl4ux58n().b[28][1]++;
    }

    // Set custom claims (includes admin permission check)
    const result =
    /* istanbul ignore next */
    (cov_bhl4ux58n().s[71]++, await coreAuth.setCustomUserClaims(authResult.user, uid, claims));
    /* istanbul ignore next */
    cov_bhl4ux58n().s[72]++;
    if (result.success) {
      /* istanbul ignore next */
      cov_bhl4ux58n().b[30][0]++;
      cov_bhl4ux58n().s[73]++;
      context.log(`Custom claims set successfully for user: ${uid}`);
      /* istanbul ignore next */
      cov_bhl4ux58n().s[74]++;
      return {
        status: 200,
        headers: CORS_HEADERS,
        body: JSON.stringify({
          success: true,
          message: 'Custom claims set successfully',
          targetUserId: uid,
          claimsSet: Object.keys(claims)
        })
      };
    } else {
      /* istanbul ignore next */
      cov_bhl4ux58n().b[30][1]++;
      cov_bhl4ux58n().s[75]++;
      context.log(`Custom claims failed: ${result.error}`);
      /* istanbul ignore next */
      cov_bhl4ux58n().s[76]++;
      return createErrorResponse(403, result.error, 'CLAIMS_UPDATE_FAILED');
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_bhl4ux58n().s[77]++;
    context.log.error('Custom claims error:', error);
    /* istanbul ignore next */
    cov_bhl4ux58n().s[78]++;
    return createErrorResponse(500, 'Custom claims operation failed', 'CLAIMS_ERROR');
  }
}

/**
 * Handle health check requests
 */
async function handleHealthCheck(context, req) {
  /* istanbul ignore next */
  cov_bhl4ux58n().f[4]++;
  cov_bhl4ux58n().s[79]++;
  context.log('Processing health check request');
  /* istanbul ignore next */
  cov_bhl4ux58n().s[80]++;
  try {
    const health =
    /* istanbul ignore next */
    (cov_bhl4ux58n().s[81]++, await coreAuth.healthCheck());
    const status =
    /* istanbul ignore next */
    (cov_bhl4ux58n().s[82]++, coreAuth.getAuthStatus());
    const healthData =
    /* istanbul ignore next */
    (cov_bhl4ux58n().s[83]++, {
      status: health.status,
      timestamp: new Date().toISOString(),
      services: health.services,
      authentication: {
        firebaseInitialized: status.firebaseInitialized,
        adminAppsCount: status.adminAppsCount,
        telemetryEnabled: status.telemetryEnabled
      },
      version: '2.0.0',
      consolidatedEndpoints: ['verify', 'session', 'permissions', 'claims']
    });
    /* istanbul ignore next */
    cov_bhl4ux58n().s[84]++;
    if (health.error) {
      /* istanbul ignore next */
      cov_bhl4ux58n().b[31][0]++;
      cov_bhl4ux58n().s[85]++;
      healthData.error = health.error;
    } else
    /* istanbul ignore next */
    {
      cov_bhl4ux58n().b[31][1]++;
    }
    cov_bhl4ux58n().s[86]++;
    return {
      status: health.status === 'healthy' ?
      /* istanbul ignore next */
      (cov_bhl4ux58n().b[32][0]++, 200) :
      /* istanbul ignore next */
      (cov_bhl4ux58n().b[32][1]++, 503),
      headers: CORS_HEADERS,
      body: JSON.stringify(healthData)
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_bhl4ux58n().s[87]++;
    context.log.error('Health check error:', error);
    /* istanbul ignore next */
    cov_bhl4ux58n().s[88]++;
    return createErrorResponse(500, 'Health check failed', 'HEALTH_CHECK_ERROR');
  }
}

// ===== MAIN FUNCTION =====

/**
 * Main Azure Function handler with route-based switching
 */
async function unifiedAuthHandler(context, req) {
  /* istanbul ignore next */
  cov_bhl4ux58n().f[5]++;
  const startTime =
  /* istanbul ignore next */
  (cov_bhl4ux58n().s[89]++, Date.now());
  /* istanbul ignore next */
  cov_bhl4ux58n().s[90]++;
  context.log(`Unified Auth Function - ${req.method} ${req.url}`);

  // Handle preflight requests
  /* istanbul ignore next */
  cov_bhl4ux58n().s[91]++;
  if (req.method === 'OPTIONS') {
    /* istanbul ignore next */
    cov_bhl4ux58n().b[33][0]++;
    cov_bhl4ux58n().s[92]++;
    context.res = {
      status: 204,
      headers: CORS_HEADERS,
      body: ''
    };
    /* istanbul ignore next */
    cov_bhl4ux58n().s[93]++;
    return;
  } else
  /* istanbul ignore next */
  {
    cov_bhl4ux58n().b[33][1]++;
  }
  cov_bhl4ux58n().s[94]++;
  try {
    const action =
    /* istanbul ignore next */
    (cov_bhl4ux58n().s[95]++,
    /* istanbul ignore next */
    (cov_bhl4ux58n().b[34][0]++, req.query.action) ||
    /* istanbul ignore next */
    (cov_bhl4ux58n().b[34][1]++, 'status'));
    let response;
    /* istanbul ignore next */
    cov_bhl4ux58n().s[96]++;
    context.log(`Processing action: ${action}`);
    /* istanbul ignore next */
    cov_bhl4ux58n().s[97]++;
    switch (action.toLowerCase()) {
      case 'verify':
        /* istanbul ignore next */
        cov_bhl4ux58n().b[35][0]++;
        cov_bhl4ux58n().s[98]++;
        response = await handleVerifyToken(context, req);
        /* istanbul ignore next */
        cov_bhl4ux58n().s[99]++;
        break;
      case 'session':
        /* istanbul ignore next */
        cov_bhl4ux58n().b[35][1]++;
        cov_bhl4ux58n().s[100]++;
        response = await handleSessionCookie(context, req);
        /* istanbul ignore next */
        cov_bhl4ux58n().s[101]++;
        break;
      case 'permissions':
        /* istanbul ignore next */
        cov_bhl4ux58n().b[35][2]++;
        cov_bhl4ux58n().s[102]++;
        response = await handlePermissions(context, req);
        /* istanbul ignore next */
        cov_bhl4ux58n().s[103]++;
        break;
      case 'claims':
        /* istanbul ignore next */
        cov_bhl4ux58n().b[35][3]++;
        cov_bhl4ux58n().s[104]++;
        response = await handleCustomClaims(context, req);
        /* istanbul ignore next */
        cov_bhl4ux58n().s[105]++;
        break;
      case 'status':
        /* istanbul ignore next */
        cov_bhl4ux58n().b[35][4]++;
      case 'health':
        /* istanbul ignore next */
        cov_bhl4ux58n().b[35][5]++;
        cov_bhl4ux58n().s[106]++;
        response = await handleHealthCheck(context, req);
        /* istanbul ignore next */
        cov_bhl4ux58n().s[107]++;
        break;
      default:
        /* istanbul ignore next */
        cov_bhl4ux58n().b[35][6]++;
        cov_bhl4ux58n().s[108]++;
        response = createErrorResponse(400, `Unknown action: ${action}`, 'UNKNOWN_ACTION');
    }
    const duration =
    /* istanbul ignore next */
    (cov_bhl4ux58n().s[109]++, Date.now() - startTime);
    /* istanbul ignore next */
    cov_bhl4ux58n().s[110]++;
    context.log(`Request completed in ${duration}ms - Status: ${response.status}`);
    /* istanbul ignore next */
    cov_bhl4ux58n().s[111]++;
    context.res = response;
  } catch (error) {
    const duration =
    /* istanbul ignore next */
    (cov_bhl4ux58n().s[112]++, Date.now() - startTime);
    /* istanbul ignore next */
    cov_bhl4ux58n().s[113]++;
    context.log.error(`Unified Auth Function error (${duration}ms):`, error);
    /* istanbul ignore next */
    cov_bhl4ux58n().s[114]++;
    context.res = createErrorResponse(500, 'Internal server error', 'INTERNAL_ERROR');
  }
}

// ===== UTILITY FUNCTIONS =====

/**
 * Create standardized error response
 */
function createErrorResponse(status, message, code) {
  /* istanbul ignore next */
  cov_bhl4ux58n().f[6]++;
  cov_bhl4ux58n().s[115]++;
  return {
    status,
    headers: CORS_HEADERS,
    body: JSON.stringify({
      success: false,
      error: message,
      code,
      timestamp: new Date().toISOString(),
      service: 'azure-unified-auth'
    })
  };
}

// ===== TELEMETRY WRAPPER =====

// Wrap main handler with telemetry
const telemetryWrappedHandler =
/* istanbul ignore next */
(cov_bhl4ux58n().s[116]++, withTelemetry('unified-auth', unifiedAuthHandler));

// ===== EXPORTS =====
/* istanbul ignore next */
cov_bhl4ux58n().s[117]++;
module.exports = telemetryWrappedHandler;

// ===== BACKWARD COMPATIBILITY =====

// For testing and development
/* istanbul ignore next */
cov_bhl4ux58n().s[118]++;
module.exports.handlers = {
  handleVerifyToken,
  handleSessionCookie,
  handlePermissions,
  handleCustomClaims,
  handleHealthCheck
};
/* istanbul ignore next */
cov_bhl4ux58n().s[119]++;
module.exports.utils = {
  createErrorResponse,
  CORS_HEADERS
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,