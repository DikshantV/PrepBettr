{"version":3,"names":["cov_1h3we8zce1","actualCoverage","exports","generateContent","s","resetClient","isConfigured","openai_1","__importDefault","require","AZURE_OPENAI_KEY","process","env","AZURE_OPENAI_ENDPOINT","AZURE_OPENAI_DEPLOYMENT","openAIClient","getOpenAIClient","f","b","Error","default","apiKey","baseURL","defaultQuery","defaultHeaders","prompt","temperature","client","completion","chat","completions","create","model","messages","role","content","max_tokens","top_p","_b","_a","choices","message","error","translatedError","translateAzureOpenAIError","code","status","retryAfter","headers","retryMessage","includes"],"sources":["/Users/dikshantvashistha/PrepBettr/lib/services/azure-openai.ts"],"sourcesContent":["import OpenAI from 'openai';\n\n// Environment variables for Azure OpenAI configuration\nconst AZURE_OPENAI_KEY = process.env.AZURE_OPENAI_KEY;\nconst AZURE_OPENAI_ENDPOINT = process.env.AZURE_OPENAI_ENDPOINT;\nconst AZURE_OPENAI_DEPLOYMENT = process.env.AZURE_OPENAI_DEPLOYMENT;\n\n// Cached OpenAI client instance for reuse\nlet openAIClient: OpenAI | null = null;\n\n/**\n * Initialize and cache the Azure OpenAI client\n */\nfunction getOpenAIClient(): OpenAI {\n  if (openAIClient) {\n    return openAIClient;\n  }\n\n  // Validate required environment variables\n  if (!AZURE_OPENAI_KEY) {\n    throw new Error('AZURE_OPENAI_KEY environment variable is required');\n  }\n  if (!AZURE_OPENAI_ENDPOINT) {\n    throw new Error('AZURE_OPENAI_ENDPOINT environment variable is required');\n  }\n  if (!AZURE_OPENAI_DEPLOYMENT) {\n    throw new Error('AZURE_OPENAI_DEPLOYMENT environment variable is required');\n  }\n\n  // Create and cache the OpenAI client configured for Azure\n  openAIClient = new OpenAI({\n    apiKey: AZURE_OPENAI_KEY,\n    baseURL: `${AZURE_OPENAI_ENDPOINT}/openai/deployments/${AZURE_OPENAI_DEPLOYMENT}`,\n    defaultQuery: { 'api-version': '2024-02-15-preview' }, // Using stable API version\n    defaultHeaders: {\n      'api-key': AZURE_OPENAI_KEY,\n    },\n  });\n\n  return openAIClient;\n}\n\n/**\n * Generate content using Azure OpenAI with centralized error handling\n * \n * @param prompt - The prompt to send to the AI model\n * @param temperature - Controls randomness (0.0 = deterministic, 1.0 = creative). Default: 0.7\n * @returns Promise resolving to the generated text content\n * \n * @throws Error with translated user-friendly messages for common issues:\n * - Authentication errors (401, 403)\n * - Rate limiting (429) with retry suggestions\n * - Service unavailable (500, 502, 503, 504)\n * - Content policy violations (400 with content_filter)\n */\nexport async function generateContent(prompt: string, temperature: number = 0.7): Promise<string> {\n  try {\n    const client = getOpenAIClient();\n    \n    const completion = await client.chat.completions.create({\n      model: AZURE_OPENAI_DEPLOYMENT!,\n      messages: [{ role: 'user', content: prompt }],\n      temperature,\n      max_tokens: 1000,\n      top_p: 0.9,\n    });\n\n    const content = completion.choices[0]?.message?.content;\n    if (!content) {\n      throw new Error('No content generated from Azure OpenAI');\n    }\n\n    return content;\n  } catch (error: any) {\n    // Centralized error translation for better user experience\n    const translatedError = translateAzureOpenAIError(error);\n    throw translatedError;\n  }\n}\n\n/**\n * Translate Azure OpenAI errors into user-friendly messages\n */\nfunction translateAzureOpenAIError(error: any): Error {\n  // Network or connection errors\n  if (error.code === 'ENOTFOUND' || error.code === 'ECONNREFUSED') {\n    return new Error('Unable to connect to Azure OpenAI service. Please check your network connection.');\n  }\n\n  // Azure OpenAI API errors\n  if (error.status) {\n    switch (error.status) {\n      case 401:\n        return new Error('Azure OpenAI authentication failed. Please check your API key.');\n      \n      case 403:\n        return new Error('Access forbidden. Your Azure OpenAI subscription may not have access to this resource.');\n      \n      case 429:\n        const retryAfter = error.headers?.['retry-after'];\n        const retryMessage = retryAfter \n          ? ` Please retry after ${retryAfter} seconds.`\n          : ' Please try again in a few moments.';\n        return new Error(`Azure OpenAI rate limit exceeded.${retryMessage}`);\n      \n      case 400:\n        // Check for content filtering\n        if (error.message && error.message.includes('content_filter')) {\n          return new Error('Content was filtered by Azure OpenAI content policy. Please modify your request.');\n        }\n        return new Error(`Bad request: ${error.message || 'Invalid request parameters'}`);\n      \n      case 404:\n        return new Error('Azure OpenAI deployment not found. Please check your deployment name and endpoint.');\n      \n      case 500:\n      case 502:\n      case 503:\n      case 504:\n        return new Error('Azure OpenAI service is temporarily unavailable. Please try again later.');\n      \n      default:\n        return new Error(`Azure OpenAI error (${error.status}): ${error.message || 'Unknown error'}`);\n    }\n  }\n\n  // Configuration errors\n  if (error.message && error.message.includes('environment variable')) {\n    return new Error(`Configuration error: ${error.message}`);\n  }\n\n  // Generic fallback\n  return new Error(`Azure OpenAI error: ${error.message || 'An unexpected error occurred'}`);\n}\n\n/**\n * Reset the cached client (useful for testing or credential updates)\n */\nexport function resetClient(): void {\n  openAIClient = null;\n}\n\n/**\n * Check if Azure OpenAI is properly configured\n */\nexport function isConfigured(): boolean {\n  return !!(AZURE_OPENAI_KEY && AZURE_OPENAI_ENDPOINT && AZURE_OPENAI_DEPLOYMENT);\n}\n"],"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","ignoreList":[]}