6e74a737b10c846ccb7a293ad5517907
"use strict";

/**
 * Environment validation for Azure AI Foundry migration
 * This module validates the presence of required Azure AI Foundry environment variables
 * and provides development fallbacks where appropriate.
 */
/* istanbul ignore next */
function cov_1ds7qip2g9() {
  var path = "/Users/dikshantvashistha/PrepBettr/lib/azure-ai-foundry/config/environment.ts";
  var hash = "51a8e4e2be7eb13c6f92702a12b6e09d4712672e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dikshantvashistha/PrepBettr/lib/azure-ai-foundry/config/environment.ts",
    statementMap: {
      "0": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 7,
          column: 62
        }
      },
      "1": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 50
        }
      },
      "2": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 24
        }
      },
      "3": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 10,
          column: 32
        }
      },
      "4": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 54
        }
      },
      "5": {
        start: {
          line: 15,
          column: 22
        },
        end: {
          line: 21,
          column: 1
        }
      },
      "6": {
        start: {
          line: 25,
          column: 22
        },
        end: {
          line: 35,
          column: 1
        }
      },
      "7": {
        start: {
          line: 39,
          column: 30
        },
        end: {
          line: 45,
          column: 1
        }
      },
      "8": {
        start: {
          line: 50,
          column: 18
        },
        end: {
          line: 50,
          column: 34
        }
      },
      "9": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 53,
          column: 5
        }
      },
      "10": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 52,
          column: 21
        }
      },
      "11": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 56,
          column: 5
        }
      },
      "12": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 55,
          column: 28
        }
      },
      "13": {
        start: {
          line: 58,
          column: 18
        },
        end: {
          line: 58,
          column: 97
        }
      },
      "14": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 63,
          column: 5
        }
      },
      "15": {
        start: {
          line: 60,
          column: 25
        },
        end: {
          line: 60,
          column: 51
        }
      },
      "16": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 61,
          column: 78
        }
      },
      "17": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 24
        }
      },
      "18": {
        start: {
          line: 64,
          column: 4
        },
        end: {
          line: 64,
          column: 69
        }
      },
      "19": {
        start: {
          line: 70,
          column: 20
        },
        end: {
          line: 70,
          column: 22
        }
      },
      "20": {
        start: {
          line: 71,
          column: 21
        },
        end: {
          line: 71,
          column: 23
        }
      },
      "21": {
        start: {
          line: 73,
          column: 4
        },
        end: {
          line: 80,
          column: 5
        }
      },
      "22": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 79,
          column: 9
        }
      },
      "23": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 75,
          column: 31
        }
      },
      "24": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 78,
          column: 34
        }
      },
      "25": {
        start: {
          line: 82,
          column: 23
        },
        end: {
          line: 88,
          column: 5
        }
      },
      "26": {
        start: {
          line: 89,
          column: 4
        },
        end: {
          line: 93,
          column: 5
        }
      },
      "27": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 92,
          column: 9
        }
      },
      "28": {
        start: {
          line: 91,
          column: 12
        },
        end: {
          line: 91,
          column: 123
        }
      },
      "29": {
        start: {
          line: 94,
          column: 4
        },
        end: {
          line: 98,
          column: 6
        }
      },
      "30": {
        start: {
          line: 104,
          column: 23
        },
        end: {
          line: 104,
          column: 44
        }
      },
      "31": {
        start: {
          line: 105,
          column: 4
        },
        end: {
          line: 108,
          column: 5
        }
      },
      "32": {
        start: {
          line: 106,
          column: 28
        },
        end: {
          line: 106,
          column: 57
        }
      },
      "33": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 107,
          column: 99
        }
      },
      "34": {
        start: {
          line: 110,
          column: 4
        },
        end: {
          line: 110,
          column: 74
        }
      },
      "35": {
        start: {
          line: 110,
          column: 43
        },
        end: {
          line: 110,
          column: 72
        }
      },
      "36": {
        start: {
          line: 111,
          column: 26
        },
        end: {
          line: 111,
          column: 64
        }
      },
      "37": {
        start: {
          line: 112,
          column: 25
        },
        end: {
          line: 112,
          column: 62
        }
      },
      "38": {
        start: {
          line: 113,
          column: 4
        },
        end: {
          line: 136,
          column: 6
        }
      },
      "39": {
        start: {
          line: 142,
          column: 4
        },
        end: {
          line: 151,
          column: 5
        }
      },
      "40": {
        start: {
          line: 143,
          column: 8
        },
        end: {
          line: 143,
          column: 24
        }
      },
      "41": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 149,
          column: 9
        }
      },
      "42": {
        start: {
          line: 147,
          column: 12
        },
        end: {
          line: 147,
          column: 97
        }
      },
      "43": {
        start: {
          line: 148,
          column: 12
        },
        end: {
          line: 148,
          column: 24
        }
      },
      "44": {
        start: {
          line: 150,
          column: 8
        },
        end: {
          line: 150,
          column: 20
        }
      },
      "45": {
        start: {
          line: 157,
          column: 23
        },
        end: {
          line: 157,
          column: 44
        }
      },
      "46": {
        start: {
          line: 158,
          column: 4
        },
        end: {
          line: 161,
          column: 5
        }
      },
      "47": {
        start: {
          line: 159,
          column: 8
        },
        end: {
          line: 159,
          column: 65
        }
      },
      "48": {
        start: {
          line: 160,
          column: 8
        },
        end: {
          line: 160,
          column: 79
        }
      },
      "49": {
        start: {
          line: 160,
          column: 47
        },
        end: {
          line: 160,
          column: 77
        }
      },
      "50": {
        start: {
          line: 162,
          column: 4
        },
        end: {
          line: 166,
          column: 5
        }
      },
      "51": {
        start: {
          line: 163,
          column: 8
        },
        end: {
          line: 163,
          column: 75
        }
      },
      "52": {
        start: {
          line: 164,
          column: 8
        },
        end: {
          line: 164,
          column: 88
        }
      },
      "53": {
        start: {
          line: 164,
          column: 46
        },
        end: {
          line: 164,
          column: 86
        }
      },
      "54": {
        start: {
          line: 165,
          column: 8
        },
        end: {
          line: 165,
          column: 68
        }
      },
      "55": {
        start: {
          line: 167,
          column: 4
        },
        end: {
          line: 169,
          column: 5
        }
      },
      "56": {
        start: {
          line: 168,
          column: 8
        },
        end: {
          line: 168,
          column: 78
        }
      },
      "57": {
        start: {
          line: 172,
          column: 0
        },
        end: {
          line: 174,
          column: 1
        }
      },
      "58": {
        start: {
          line: 173,
          column: 4
        },
        end: {
          line: 173,
          column: 28
        }
      }
    },
    fnMap: {
      "0": {
        name: "getEnvVar",
        decl: {
          start: {
            line: 49,
            column: 9
          },
          end: {
            line: 49,
            column: 18
          }
        },
        loc: {
          start: {
            line: 49,
            column: 38
          },
          end: {
            line: 65,
            column: 1
          }
        },
        line: 49
      },
      "1": {
        name: "validateEnvironment",
        decl: {
          start: {
            line: 69,
            column: 9
          },
          end: {
            line: 69,
            column: 28
          }
        },
        loc: {
          start: {
            line: 69,
            column: 31
          },
          end: {
            line: 99,
            column: 1
          }
        },
        line: 69
      },
      "2": {
        name: "getEnv",
        decl: {
          start: {
            line: 103,
            column: 9
          },
          end: {
            line: 103,
            column: 15
          }
        },
        loc: {
          start: {
            line: 103,
            column: 18
          },
          end: {
            line: 137,
            column: 1
          }
        },
        line: 103
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 110,
            column: 32
          },
          end: {
            line: 110,
            column: 33
          }
        },
        loc: {
          start: {
            line: 110,
            column: 43
          },
          end: {
            line: 110,
            column: 72
          }
        },
        line: 110
      },
      "4": {
        name: "getEnvSafe",
        decl: {
          start: {
            line: 141,
            column: 9
          },
          end: {
            line: 141,
            column: 19
          }
        },
        loc: {
          start: {
            line: 141,
            column: 22
          },
          end: {
            line: 152,
            column: 1
          }
        },
        line: 141
      },
      "5": {
        name: "initializeEnvironment",
        decl: {
          start: {
            line: 156,
            column: 9
          },
          end: {
            line: 156,
            column: 30
          }
        },
        loc: {
          start: {
            line: 156,
            column: 33
          },
          end: {
            line: 170,
            column: 1
          }
        },
        line: 156
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 160,
            column: 36
          },
          end: {
            line: 160,
            column: 37
          }
        },
        loc: {
          start: {
            line: 160,
            column: 47
          },
          end: {
            line: 160,
            column: 77
          }
        },
        line: 160
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 164,
            column: 35
          },
          end: {
            line: 164,
            column: 36
          }
        },
        loc: {
          start: {
            line: 164,
            column: 46
          },
          end: {
            line: 164,
            column: 86
          }
        },
        line: 164
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 53,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 53,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 51
      },
      "1": {
        loc: {
          start: {
            line: 54,
            column: 4
          },
          end: {
            line: 56,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 4
          },
          end: {
            line: 56,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 54
      },
      "2": {
        loc: {
          start: {
            line: 58,
            column: 18
          },
          end: {
            line: 58,
            column: 97
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 58,
            column: 18
          },
          end: {
            line: 58,
            column: 56
          }
        }, {
          start: {
            line: 58,
            column: 60
          },
          end: {
            line: 58,
            column: 97
          }
        }],
        line: 58
      },
      "3": {
        loc: {
          start: {
            line: 59,
            column: 4
          },
          end: {
            line: 63,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 59,
            column: 4
          },
          end: {
            line: 63,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 59
      },
      "4": {
        loc: {
          start: {
            line: 59,
            column: 8
          },
          end: {
            line: 59,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 59,
            column: 8
          },
          end: {
            line: 59,
            column: 13
          }
        }, {
          start: {
            line: 59,
            column: 17
          },
          end: {
            line: 59,
            column: 45
          }
        }],
        line: 59
      },
      "5": {
        loc: {
          start: {
            line: 90,
            column: 8
          },
          end: {
            line: 92,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 90,
            column: 8
          },
          end: {
            line: 92,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 90
      },
      "6": {
        loc: {
          start: {
            line: 105,
            column: 4
          },
          end: {
            line: 108,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 105,
            column: 4
          },
          end: {
            line: 108,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 105
      },
      "7": {
        loc: {
          start: {
            line: 146,
            column: 8
          },
          end: {
            line: 149,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 146,
            column: 8
          },
          end: {
            line: 149,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 146
      },
      "8": {
        loc: {
          start: {
            line: 158,
            column: 4
          },
          end: {
            line: 161,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 158,
            column: 4
          },
          end: {
            line: 161,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 158
      },
      "9": {
        loc: {
          start: {
            line: 162,
            column: 4
          },
          end: {
            line: 166,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 162,
            column: 4
          },
          end: {
            line: 166,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 162
      },
      "10": {
        loc: {
          start: {
            line: 162,
            column: 8
          },
          end: {
            line: 162,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 162,
            column: 8
          },
          end: {
            line: 162,
            column: 27
          }
        }, {
          start: {
            line: 162,
            column: 31
          },
          end: {
            line: 162,
            column: 68
          }
        }],
        line: 162
      },
      "11": {
        loc: {
          start: {
            line: 167,
            column: 4
          },
          end: {
            line: 169,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 167,
            column: 4
          },
          end: {
            line: 169,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 167
      },
      "12": {
        loc: {
          start: {
            line: 172,
            column: 0
          },
          end: {
            line: 174,
            column: 1
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 172,
            column: 0
          },
          end: {
            line: 174,
            column: 1
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 172
      },
      "13": {
        loc: {
          start: {
            line: 172,
            column: 4
          },
          end: {
            line: 172,
            column: 91
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 172,
            column: 4
          },
          end: {
            line: 172,
            column: 41
          }
        }, {
          start: {
            line: 172,
            column: 45
          },
          end: {
            line: 172,
            column: 91
          }
        }],
        line: 172
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/dikshantvashistha/PrepBettr/lib/azure-ai-foundry/config/environment.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/dikshantvashistha/PrepBettr/lib/azure-ai-foundry/config/environment.ts"],
      sourcesContent: ["/**\n * Environment validation for Azure AI Foundry migration\n * This module validates the presence of required Azure AI Foundry environment variables\n * and provides development fallbacks where appropriate.\n */\n\nexport interface AzureFoundryEnvironment {\n  // Azure AI Foundry Core\n  projectId: string;\n  resourceGroup: string;\n  subscriptionId: string;\n  region: string;\n  \n  // Authentication\n  clientId?: string;\n  clientSecret?: string;\n  tenantId?: string;\n  \n  // Endpoints and Configuration  \n  endpoint: string;\n  apiVersion: string;\n  \n  // Models\n  defaultChatModel: string;\n  defaultEmbeddingModel: string;\n  \n  // Feature flags\n  enableCostTracking: boolean;\n  enableRequestLogging: boolean;\n  enableFallback: boolean;\n  \n  // Development settings\n  isDevelopment: boolean;\n  isProduction: boolean;\n}\n\ninterface EnvironmentValidation {\n  isValid: boolean;\n  missing: string[];\n  warnings: string[];\n}\n\n/**\n * Required environment variables for Azure AI Foundry\n */\nconst REQUIRED_VARS = [\n  'AZURE_FOUNDRY_PROJECT_ID',\n  'AZURE_FOUNDRY_RESOURCE_GROUP', \n  'AZURE_FOUNDRY_SUBSCRIPTION_ID',\n  'AZURE_FOUNDRY_REGION',\n  'AZURE_FOUNDRY_ENDPOINT'\n] as const;\n\n/**\n * Optional environment variables with defaults\n */\nconst OPTIONAL_VARS = {\n  'AZURE_FOUNDRY_CLIENT_ID': undefined,\n  'AZURE_FOUNDRY_CLIENT_SECRET': undefined, \n  'AZURE_FOUNDRY_TENANT_ID': undefined,\n  'AZURE_FOUNDRY_API_VERSION': '2024-02-15-preview',\n  'AZURE_FOUNDRY_DEFAULT_CHAT_MODEL': 'gpt-4o',\n  'AZURE_FOUNDRY_DEFAULT_EMBEDDING_MODEL': 'text-embedding-3-large',\n  'AZURE_FOUNDRY_ENABLE_COST_TRACKING': 'true',\n  'AZURE_FOUNDRY_ENABLE_REQUEST_LOGGING': 'false',\n  'AZURE_FOUNDRY_ENABLE_FALLBACK': 'true'\n} as const;\n\n/**\n * Development fallback values\n */\nconst DEVELOPMENT_FALLBACKS = {\n  'AZURE_FOUNDRY_PROJECT_ID': 'prepbettr-dev-project',\n  'AZURE_FOUNDRY_RESOURCE_GROUP': 'prepbettr-dev-rg',\n  'AZURE_FOUNDRY_SUBSCRIPTION_ID': 'dev-subscription-id',\n  'AZURE_FOUNDRY_REGION': 'eastus',\n  'AZURE_FOUNDRY_ENDPOINT': 'https://prepbettr-ai-foundry.services.ai.azure.com'\n} as const;\n\n/**\n * Get environment variable with validation\n */\nfunction getEnvVar(key: string, defaultValue?: string): string {\n  const value = process.env[key];\n  \n  if (value) {\n    return value;\n  }\n  \n  if (defaultValue !== undefined) {\n    return defaultValue;\n  }\n  \n  // Check for development fallbacks\n  const isDev = process.env.NODE_ENV === 'development' || process.env.NODE_ENV !== 'production';\n  if (isDev && key in DEVELOPMENT_FALLBACKS) {\n    const fallback = DEVELOPMENT_FALLBACKS[key as keyof typeof DEVELOPMENT_FALLBACKS];\n    console.warn(`\u26A0\uFE0F Using development fallback for ${key}: ${fallback}`);\n    return fallback;\n  }\n  \n  throw new Error(`Missing required environment variable: ${key}`);\n}\n\n/**\n * Validate all required environment variables\n */\nexport function validateEnvironment(): EnvironmentValidation {\n  const missing: string[] = [];\n  const warnings: string[] = [];\n  \n  // Check required variables\n  for (const varName of REQUIRED_VARS) {\n    try {\n      getEnvVar(varName);\n    } catch {\n      missing.push(varName);\n    }\n  }\n  \n  // Check for legacy Azure OpenAI variables that should be replaced\n  const legacyVars = [\n    'AZURE_OPENAI_API_KEY',\n    'AZURE_OPENAI_ENDPOINT', \n    'AZURE_OPENAI_DEPLOYMENT',\n    'NEXT_PUBLIC_AZURE_OPENAI_API_KEY',\n    'NEXT_PUBLIC_AZURE_OPENAI_ENDPOINT'\n  ];\n  \n  for (const legacyVar of legacyVars) {\n    if (process.env[legacyVar]) {\n      warnings.push(`Legacy variable ${legacyVar} is still present. Consider removing after migration is complete.`);\n    }\n  }\n  \n  return {\n    isValid: missing.length === 0,\n    missing,\n    warnings\n  };\n}\n\n/**\n * Get validated Azure AI Foundry environment configuration\n */\nexport function getEnv(): AzureFoundryEnvironment {\n  const validation = validateEnvironment();\n  \n  if (!validation.isValid) {\n    const missingVars = validation.missing.join(', ');\n    throw new Error(`Missing required Azure AI Foundry environment variables: ${missingVars}`);\n  }\n  \n  // Log warnings\n  validation.warnings.forEach(warning => console.warn(`\u26A0\uFE0F ${warning}`));\n  \n  const isDevelopment = process.env.NODE_ENV === 'development';\n  const isProduction = process.env.NODE_ENV === 'production';\n  \n  return {\n    // Core configuration\n    projectId: getEnvVar('AZURE_FOUNDRY_PROJECT_ID'),\n    resourceGroup: getEnvVar('AZURE_FOUNDRY_RESOURCE_GROUP'),\n    subscriptionId: getEnvVar('AZURE_FOUNDRY_SUBSCRIPTION_ID'),\n    region: getEnvVar('AZURE_FOUNDRY_REGION'),\n    \n    // Authentication (optional)\n    clientId: getEnvVar('AZURE_FOUNDRY_CLIENT_ID', OPTIONAL_VARS.AZURE_FOUNDRY_CLIENT_ID),\n    clientSecret: getEnvVar('AZURE_FOUNDRY_CLIENT_SECRET', OPTIONAL_VARS.AZURE_FOUNDRY_CLIENT_SECRET),\n    tenantId: getEnvVar('AZURE_FOUNDRY_TENANT_ID', OPTIONAL_VARS.AZURE_FOUNDRY_TENANT_ID),\n    \n    // Endpoints\n    endpoint: getEnvVar('AZURE_FOUNDRY_ENDPOINT'),\n    apiVersion: getEnvVar('AZURE_FOUNDRY_API_VERSION', OPTIONAL_VARS.AZURE_FOUNDRY_API_VERSION),\n    \n    // Models\n    defaultChatModel: getEnvVar('AZURE_FOUNDRY_DEFAULT_CHAT_MODEL', OPTIONAL_VARS.AZURE_FOUNDRY_DEFAULT_CHAT_MODEL),\n    defaultEmbeddingModel: getEnvVar('AZURE_FOUNDRY_DEFAULT_EMBEDDING_MODEL', OPTIONAL_VARS.AZURE_FOUNDRY_DEFAULT_EMBEDDING_MODEL),\n    \n    // Feature flags\n    enableCostTracking: getEnvVar('AZURE_FOUNDRY_ENABLE_COST_TRACKING', OPTIONAL_VARS.AZURE_FOUNDRY_ENABLE_COST_TRACKING) === 'true',\n    enableRequestLogging: getEnvVar('AZURE_FOUNDRY_ENABLE_REQUEST_LOGGING', OPTIONAL_VARS.AZURE_FOUNDRY_ENABLE_REQUEST_LOGGING) === 'true',\n    enableFallback: getEnvVar('AZURE_FOUNDRY_ENABLE_FALLBACK', OPTIONAL_VARS.AZURE_FOUNDRY_ENABLE_FALLBACK) === 'true',\n    \n    // Environment flags\n    isDevelopment,\n    isProduction\n  };\n}\n\n/**\n * Get environment configuration with error handling for development\n */\nexport function getEnvSafe(): AzureFoundryEnvironment | null {\n  try {\n    return getEnv();\n  } catch (error) {\n    if (process.env.NODE_ENV === 'development') {\n      console.error('\u274C Failed to load Azure AI Foundry environment configuration:', error);\n      return null;\n    }\n    throw error;\n  }\n}\n\n/**\n * Initialize and validate environment on module load (for early validation)\n */\nexport function initializeEnvironment(): void {\n  const validation = validateEnvironment();\n  \n  if (validation.warnings.length > 0) {\n    console.log('\uD83D\uDD27 Azure AI Foundry Environment Warnings:');\n    validation.warnings.forEach(warning => console.warn(`  - ${warning}`));\n  }\n  \n  if (!validation.isValid && process.env.NODE_ENV === 'production') {\n    console.error('\u274C Azure AI Foundry Environment Validation Failed:');\n    validation.missing.forEach(missing => console.error(`  - Missing: ${missing}`));\n    throw new Error('Production environment validation failed');\n  }\n  \n  if (validation.isValid) {\n    console.log('\u2705 Azure AI Foundry environment configuration validated');\n  }\n}\n\n// Auto-initialize in production or when explicitly requested\nif (process.env.NODE_ENV === 'production' || process.env.AZURE_FOUNDRY_AUTO_INIT === 'true') {\n  initializeEnvironment();\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "51a8e4e2be7eb13c6f92702a12b6e09d4712672e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1ds7qip2g9 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1ds7qip2g9();
cov_1ds7qip2g9().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1ds7qip2g9().s[1]++;
exports.validateEnvironment = validateEnvironment;
/* istanbul ignore next */
cov_1ds7qip2g9().s[2]++;
exports.getEnv = getEnv;
/* istanbul ignore next */
cov_1ds7qip2g9().s[3]++;
exports.getEnvSafe = getEnvSafe;
/* istanbul ignore next */
cov_1ds7qip2g9().s[4]++;
exports.initializeEnvironment = initializeEnvironment;
/**
 * Required environment variables for Azure AI Foundry
 */
const REQUIRED_VARS =
/* istanbul ignore next */
(cov_1ds7qip2g9().s[5]++, ['AZURE_FOUNDRY_PROJECT_ID', 'AZURE_FOUNDRY_RESOURCE_GROUP', 'AZURE_FOUNDRY_SUBSCRIPTION_ID', 'AZURE_FOUNDRY_REGION', 'AZURE_FOUNDRY_ENDPOINT']);
/**
 * Optional environment variables with defaults
 */
const OPTIONAL_VARS =
/* istanbul ignore next */
(cov_1ds7qip2g9().s[6]++, {
  'AZURE_FOUNDRY_CLIENT_ID': undefined,
  'AZURE_FOUNDRY_CLIENT_SECRET': undefined,
  'AZURE_FOUNDRY_TENANT_ID': undefined,
  'AZURE_FOUNDRY_API_VERSION': '2024-02-15-preview',
  'AZURE_FOUNDRY_DEFAULT_CHAT_MODEL': 'gpt-4o',
  'AZURE_FOUNDRY_DEFAULT_EMBEDDING_MODEL': 'text-embedding-3-large',
  'AZURE_FOUNDRY_ENABLE_COST_TRACKING': 'true',
  'AZURE_FOUNDRY_ENABLE_REQUEST_LOGGING': 'false',
  'AZURE_FOUNDRY_ENABLE_FALLBACK': 'true'
});
/**
 * Development fallback values
 */
const DEVELOPMENT_FALLBACKS =
/* istanbul ignore next */
(cov_1ds7qip2g9().s[7]++, {
  'AZURE_FOUNDRY_PROJECT_ID': 'prepbettr-dev-project',
  'AZURE_FOUNDRY_RESOURCE_GROUP': 'prepbettr-dev-rg',
  'AZURE_FOUNDRY_SUBSCRIPTION_ID': 'dev-subscription-id',
  'AZURE_FOUNDRY_REGION': 'eastus',
  'AZURE_FOUNDRY_ENDPOINT': 'https://prepbettr-ai-foundry.services.ai.azure.com'
});
/**
 * Get environment variable with validation
 */
function getEnvVar(key, defaultValue) {
  /* istanbul ignore next */
  cov_1ds7qip2g9().f[0]++;
  const value =
  /* istanbul ignore next */
  (cov_1ds7qip2g9().s[8]++, process.env[key]);
  /* istanbul ignore next */
  cov_1ds7qip2g9().s[9]++;
  if (value) {
    /* istanbul ignore next */
    cov_1ds7qip2g9().b[0][0]++;
    cov_1ds7qip2g9().s[10]++;
    return value;
  } else
  /* istanbul ignore next */
  {
    cov_1ds7qip2g9().b[0][1]++;
  }
  cov_1ds7qip2g9().s[11]++;
  if (defaultValue !== undefined) {
    /* istanbul ignore next */
    cov_1ds7qip2g9().b[1][0]++;
    cov_1ds7qip2g9().s[12]++;
    return defaultValue;
  } else
  /* istanbul ignore next */
  {
    cov_1ds7qip2g9().b[1][1]++;
  }
  // Check for development fallbacks
  const isDev =
  /* istanbul ignore next */
  (cov_1ds7qip2g9().s[13]++,
  /* istanbul ignore next */
  (cov_1ds7qip2g9().b[2][0]++, process.env.NODE_ENV === 'development') ||
  /* istanbul ignore next */
  (cov_1ds7qip2g9().b[2][1]++, process.env.NODE_ENV !== 'production'));
  /* istanbul ignore next */
  cov_1ds7qip2g9().s[14]++;
  if (
  /* istanbul ignore next */
  (cov_1ds7qip2g9().b[4][0]++, isDev) &&
  /* istanbul ignore next */
  (cov_1ds7qip2g9().b[4][1]++, key in DEVELOPMENT_FALLBACKS)) {
    /* istanbul ignore next */
    cov_1ds7qip2g9().b[3][0]++;
    const fallback =
    /* istanbul ignore next */
    (cov_1ds7qip2g9().s[15]++, DEVELOPMENT_FALLBACKS[key]);
    /* istanbul ignore next */
    cov_1ds7qip2g9().s[16]++;
    console.warn(`⚠️ Using development fallback for ${key}: ${fallback}`);
    /* istanbul ignore next */
    cov_1ds7qip2g9().s[17]++;
    return fallback;
  } else
  /* istanbul ignore next */
  {
    cov_1ds7qip2g9().b[3][1]++;
  }
  cov_1ds7qip2g9().s[18]++;
  throw new Error(`Missing required environment variable: ${key}`);
}
/**
 * Validate all required environment variables
 */
function validateEnvironment() {
  /* istanbul ignore next */
  cov_1ds7qip2g9().f[1]++;
  const missing =
  /* istanbul ignore next */
  (cov_1ds7qip2g9().s[19]++, []);
  const warnings =
  /* istanbul ignore next */
  (cov_1ds7qip2g9().s[20]++, []);
  // Check required variables
  /* istanbul ignore next */
  cov_1ds7qip2g9().s[21]++;
  for (const varName of REQUIRED_VARS) {
    /* istanbul ignore next */
    cov_1ds7qip2g9().s[22]++;
    try {
      /* istanbul ignore next */
      cov_1ds7qip2g9().s[23]++;
      getEnvVar(varName);
    } catch (_a) {
      /* istanbul ignore next */
      cov_1ds7qip2g9().s[24]++;
      missing.push(varName);
    }
  }
  // Check for legacy Azure OpenAI variables that should be replaced
  const legacyVars =
  /* istanbul ignore next */
  (cov_1ds7qip2g9().s[25]++, ['AZURE_OPENAI_API_KEY', 'AZURE_OPENAI_ENDPOINT', 'AZURE_OPENAI_DEPLOYMENT', 'NEXT_PUBLIC_AZURE_OPENAI_API_KEY', 'NEXT_PUBLIC_AZURE_OPENAI_ENDPOINT']);
  /* istanbul ignore next */
  cov_1ds7qip2g9().s[26]++;
  for (const legacyVar of legacyVars) {
    /* istanbul ignore next */
    cov_1ds7qip2g9().s[27]++;
    if (process.env[legacyVar]) {
      /* istanbul ignore next */
      cov_1ds7qip2g9().b[5][0]++;
      cov_1ds7qip2g9().s[28]++;
      warnings.push(`Legacy variable ${legacyVar} is still present. Consider removing after migration is complete.`);
    } else
    /* istanbul ignore next */
    {
      cov_1ds7qip2g9().b[5][1]++;
    }
  }
  /* istanbul ignore next */
  cov_1ds7qip2g9().s[29]++;
  return {
    isValid: missing.length === 0,
    missing,
    warnings
  };
}
/**
 * Get validated Azure AI Foundry environment configuration
 */
function getEnv() {
  /* istanbul ignore next */
  cov_1ds7qip2g9().f[2]++;
  const validation =
  /* istanbul ignore next */
  (cov_1ds7qip2g9().s[30]++, validateEnvironment());
  /* istanbul ignore next */
  cov_1ds7qip2g9().s[31]++;
  if (!validation.isValid) {
    /* istanbul ignore next */
    cov_1ds7qip2g9().b[6][0]++;
    const missingVars =
    /* istanbul ignore next */
    (cov_1ds7qip2g9().s[32]++, validation.missing.join(', '));
    /* istanbul ignore next */
    cov_1ds7qip2g9().s[33]++;
    throw new Error(`Missing required Azure AI Foundry environment variables: ${missingVars}`);
  } else
  /* istanbul ignore next */
  {
    cov_1ds7qip2g9().b[6][1]++;
  }
  // Log warnings
  cov_1ds7qip2g9().s[34]++;
  validation.warnings.forEach(warning => {
    /* istanbul ignore next */
    cov_1ds7qip2g9().f[3]++;
    cov_1ds7qip2g9().s[35]++;
    return console.warn(`⚠️ ${warning}`);
  });
  const isDevelopment =
  /* istanbul ignore next */
  (cov_1ds7qip2g9().s[36]++, process.env.NODE_ENV === 'development');
  const isProduction =
  /* istanbul ignore next */
  (cov_1ds7qip2g9().s[37]++, process.env.NODE_ENV === 'production');
  /* istanbul ignore next */
  cov_1ds7qip2g9().s[38]++;
  return {
    // Core configuration
    projectId: getEnvVar('AZURE_FOUNDRY_PROJECT_ID'),
    resourceGroup: getEnvVar('AZURE_FOUNDRY_RESOURCE_GROUP'),
    subscriptionId: getEnvVar('AZURE_FOUNDRY_SUBSCRIPTION_ID'),
    region: getEnvVar('AZURE_FOUNDRY_REGION'),
    // Authentication (optional)
    clientId: getEnvVar('AZURE_FOUNDRY_CLIENT_ID', OPTIONAL_VARS.AZURE_FOUNDRY_CLIENT_ID),
    clientSecret: getEnvVar('AZURE_FOUNDRY_CLIENT_SECRET', OPTIONAL_VARS.AZURE_FOUNDRY_CLIENT_SECRET),
    tenantId: getEnvVar('AZURE_FOUNDRY_TENANT_ID', OPTIONAL_VARS.AZURE_FOUNDRY_TENANT_ID),
    // Endpoints
    endpoint: getEnvVar('AZURE_FOUNDRY_ENDPOINT'),
    apiVersion: getEnvVar('AZURE_FOUNDRY_API_VERSION', OPTIONAL_VARS.AZURE_FOUNDRY_API_VERSION),
    // Models
    defaultChatModel: getEnvVar('AZURE_FOUNDRY_DEFAULT_CHAT_MODEL', OPTIONAL_VARS.AZURE_FOUNDRY_DEFAULT_CHAT_MODEL),
    defaultEmbeddingModel: getEnvVar('AZURE_FOUNDRY_DEFAULT_EMBEDDING_MODEL', OPTIONAL_VARS.AZURE_FOUNDRY_DEFAULT_EMBEDDING_MODEL),
    // Feature flags
    enableCostTracking: getEnvVar('AZURE_FOUNDRY_ENABLE_COST_TRACKING', OPTIONAL_VARS.AZURE_FOUNDRY_ENABLE_COST_TRACKING) === 'true',
    enableRequestLogging: getEnvVar('AZURE_FOUNDRY_ENABLE_REQUEST_LOGGING', OPTIONAL_VARS.AZURE_FOUNDRY_ENABLE_REQUEST_LOGGING) === 'true',
    enableFallback: getEnvVar('AZURE_FOUNDRY_ENABLE_FALLBACK', OPTIONAL_VARS.AZURE_FOUNDRY_ENABLE_FALLBACK) === 'true',
    // Environment flags
    isDevelopment,
    isProduction
  };
}
/**
 * Get environment configuration with error handling for development
 */
function getEnvSafe() {
  /* istanbul ignore next */
  cov_1ds7qip2g9().f[4]++;
  cov_1ds7qip2g9().s[39]++;
  try {
    /* istanbul ignore next */
    cov_1ds7qip2g9().s[40]++;
    return getEnv();
  } catch (error) {
    /* istanbul ignore next */
    cov_1ds7qip2g9().s[41]++;
    if (process.env.NODE_ENV === 'development') {
      /* istanbul ignore next */
      cov_1ds7qip2g9().b[7][0]++;
      cov_1ds7qip2g9().s[42]++;
      console.error('❌ Failed to load Azure AI Foundry environment configuration:', error);
      /* istanbul ignore next */
      cov_1ds7qip2g9().s[43]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_1ds7qip2g9().b[7][1]++;
    }
    cov_1ds7qip2g9().s[44]++;
    throw error;
  }
}
/**
 * Initialize and validate environment on module load (for early validation)
 */
function initializeEnvironment() {
  /* istanbul ignore next */
  cov_1ds7qip2g9().f[5]++;
  const validation =
  /* istanbul ignore next */
  (cov_1ds7qip2g9().s[45]++, validateEnvironment());
  /* istanbul ignore next */
  cov_1ds7qip2g9().s[46]++;
  if (validation.warnings.length > 0) {
    /* istanbul ignore next */
    cov_1ds7qip2g9().b[8][0]++;
    cov_1ds7qip2g9().s[47]++;
    console.log('🔧 Azure AI Foundry Environment Warnings:');
    /* istanbul ignore next */
    cov_1ds7qip2g9().s[48]++;
    validation.warnings.forEach(warning => {
      /* istanbul ignore next */
      cov_1ds7qip2g9().f[6]++;
      cov_1ds7qip2g9().s[49]++;
      return console.warn(`  - ${warning}`);
    });
  } else
  /* istanbul ignore next */
  {
    cov_1ds7qip2g9().b[8][1]++;
  }
  cov_1ds7qip2g9().s[50]++;
  if (
  /* istanbul ignore next */
  (cov_1ds7qip2g9().b[10][0]++, !validation.isValid) &&
  /* istanbul ignore next */
  (cov_1ds7qip2g9().b[10][1]++, process.env.NODE_ENV === 'production')) {
    /* istanbul ignore next */
    cov_1ds7qip2g9().b[9][0]++;
    cov_1ds7qip2g9().s[51]++;
    console.error('❌ Azure AI Foundry Environment Validation Failed:');
    /* istanbul ignore next */
    cov_1ds7qip2g9().s[52]++;
    validation.missing.forEach(missing => {
      /* istanbul ignore next */
      cov_1ds7qip2g9().f[7]++;
      cov_1ds7qip2g9().s[53]++;
      return console.error(`  - Missing: ${missing}`);
    });
    /* istanbul ignore next */
    cov_1ds7qip2g9().s[54]++;
    throw new Error('Production environment validation failed');
  } else
  /* istanbul ignore next */
  {
    cov_1ds7qip2g9().b[9][1]++;
  }
  cov_1ds7qip2g9().s[55]++;
  if (validation.isValid) {
    /* istanbul ignore next */
    cov_1ds7qip2g9().b[11][0]++;
    cov_1ds7qip2g9().s[56]++;
    console.log('✅ Azure AI Foundry environment configuration validated');
  } else
  /* istanbul ignore next */
  {
    cov_1ds7qip2g9().b[11][1]++;
  }
}
// Auto-initialize in production or when explicitly requested
/* istanbul ignore next */
cov_1ds7qip2g9().s[57]++;
if (
/* istanbul ignore next */
(cov_1ds7qip2g9().b[13][0]++, process.env.NODE_ENV === 'production') ||
/* istanbul ignore next */
(cov_1ds7qip2g9().b[13][1]++, process.env.AZURE_FOUNDRY_AUTO_INIT === 'true')) {
  /* istanbul ignore next */
  cov_1ds7qip2g9().b[12][0]++;
  cov_1ds7qip2g9().s[58]++;
  initializeEnvironment();
} else
/* istanbul ignore next */
{
  cov_1ds7qip2g9().b[12][1]++;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,