1657660f096aa1602704ec0880e9878e
/* istanbul ignore next */
"use strict";
"use client";

/* istanbul ignore next */
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AuthSync = AuthSync;
var
/* istanbul ignore next */
_react = require("react");
var
/* istanbul ignore next */
_auth = require("firebase/auth");
var
/* istanbul ignore next */
_client = require("@/firebase/client");
var
/* istanbul ignore next */
_AuthContext = require("@/contexts/AuthContext");
var
/* istanbul ignore next */
_firebaseAuthDebug = require("@/lib/utils/firebase-auth-debug");
/* istanbul ignore next */
function cov_1b4gyo791u() {
  var path = "/Users/dikshantvashistha/PrepBettr/components/AuthSync.tsx";
  var hash = "c9b0045fe38c2690ce20bde0461273a9fffea7b4";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dikshantvashistha/PrepBettr/components/AuthSync.tsx",
    statementMap: {
      "0": {
        start: {
          line: 10,
          column: 19
        },
        end: {
          line: 10,
          column: 28
        }
      },
      "1": {
        start: {
          line: 12,
          column: 2
        },
        end: {
          line: 50,
          column: 13
        }
      },
      "2": {
        start: {
          line: 15,
          column: 6
        },
        end: {
          line: 21,
          column: 7
        }
      },
      "3": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 47
        }
      },
      "4": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 48
        }
      },
      "5": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 65
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 32
        }
      },
      "7": {
        start: {
          line: 25,
          column: 6
        },
        end: {
          line: 43,
          column: 7
        }
      },
      "8": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 103
        }
      },
      "9": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 67
        }
      },
      "10": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 55
        }
      },
      "11": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 42,
          column: 9
        }
      },
      "12": {
        start: {
          line: 32,
          column: 27
        },
        end: {
          line: 32,
          column: 65
        }
      },
      "13": {
        start: {
          line: 33,
          column: 10
        },
        end: {
          line: 39,
          column: 11
        }
      },
      "14": {
        start: {
          line: 34,
          column: 36
        },
        end: {
          line: 34,
          column: 57
        }
      },
      "15": {
        start: {
          line: 35,
          column: 12
        },
        end: {
          line: 38,
          column: 13
        }
      },
      "16": {
        start: {
          line: 36,
          column: 14
        },
        end: {
          line: 36,
          column: 61
        }
      },
      "17": {
        start: {
          line: 37,
          column: 14
        },
        end: {
          line: 37,
          column: 73
        }
      },
      "18": {
        start: {
          line: 41,
          column: 10
        },
        end: {
          line: 41,
          column: 74
        }
      },
      "19": {
        start: {
          line: 47,
          column: 18
        },
        end: {
          line: 47,
          column: 44
        }
      },
      "20": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 49,
          column: 37
        }
      },
      "21": {
        start: {
          line: 49,
          column: 17
        },
        end: {
          line: 49,
          column: 36
        }
      },
      "22": {
        start: {
          line: 52,
          column: 2
        },
        end: {
          line: 52,
          column: 14
        }
      }
    },
    fnMap: {
      "0": {
        name: "AuthSync",
        decl: {
          start: {
            line: 9,
            column: 16
          },
          end: {
            line: 9,
            column: 24
          }
        },
        loc: {
          start: {
            line: 9,
            column: 27
          },
          end: {
            line: 53,
            column: 1
          }
        },
        line: 9
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 12
          },
          end: {
            line: 12,
            column: 13
          }
        },
        loc: {
          start: {
            line: 12,
            column: 18
          },
          end: {
            line: 50,
            column: 3
          }
        },
        line: 12
      },
      "2": {
        name: "syncAuth",
        decl: {
          start: {
            line: 13,
            column: 19
          },
          end: {
            line: 13,
            column: 27
          }
        },
        loc: {
          start: {
            line: 13,
            column: 30
          },
          end: {
            line: 44,
            column: 5
          }
        },
        line: 13
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 49,
            column: 11
          },
          end: {
            line: 49,
            column: 12
          }
        },
        loc: {
          start: {
            line: 49,
            column: 17
          },
          end: {
            line: 49,
            column: 36
          }
        },
        line: 49
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 15,
            column: 6
          },
          end: {
            line: 21,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 15,
            column: 6
          },
          end: {
            line: 21,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 15
      },
      "1": {
        loc: {
          start: {
            line: 25,
            column: 6
          },
          end: {
            line: 43,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 6
          },
          end: {
            line: 43,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 25
      },
      "2": {
        loc: {
          start: {
            line: 25,
            column: 10
          },
          end: {
            line: 25,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 25,
            column: 10
          },
          end: {
            line: 25,
            column: 14
          }
        }, {
          start: {
            line: 25,
            column: 18
          },
          end: {
            line: 25,
            column: 22
          }
        }, {
          start: {
            line: 25,
            column: 26
          },
          end: {
            line: 25,
            column: 43
          }
        }],
        line: 25
      },
      "3": {
        loc: {
          start: {
            line: 33,
            column: 10
          },
          end: {
            line: 39,
            column: 11
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 10
          },
          end: {
            line: 39,
            column: 11
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 33
      },
      "4": {
        loc: {
          start: {
            line: 35,
            column: 12
          },
          end: {
            line: 38,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 12
          },
          end: {
            line: 38,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 35
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0, 0],
      "3": [0, 0],
      "4": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c9b0045fe38c2690ce20bde0461273a9fffea7b4"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1b4gyo791u = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1b4gyo791u();
function AuthSync() {
  /* istanbul ignore next */
  cov_1b4gyo791u().f[0]++;
  const {
    user
  } =
  /* istanbul ignore next */
  (cov_1b4gyo791u().s[0]++,
  /* istanbul ignore next */
  (0,
  /* istanbul ignore next */
  _AuthContext.
  /* istanbul ignore next */
  useAuth)());
  /* istanbul ignore next */
  cov_1b4gyo791u().s[1]++;
  /* istanbul ignore next */
  (0,
  /* istanbul ignore next */
  _react.
  /* istanbul ignore next */
  useEffect)(() => {
    /* istanbul ignore next */
    cov_1b4gyo791u().f[1]++;
    async function syncAuth() {
      /* istanbul ignore next */
      cov_1b4gyo791u().f[2]++;
      cov_1b4gyo791u().s[2]++;
      // Only run in development for debugging
      if (process.env.NODE_ENV === 'development') {
        /* istanbul ignore next */
        cov_1b4gyo791u().b[0][0]++;
        cov_1b4gyo791u().s[3]++;
        console.log('=== Auth Sync Debug ===');
        /* istanbul ignore next */
        cov_1b4gyo791u().s[4]++;
        console.log('User from context:', user);
        /* istanbul ignore next */
        cov_1b4gyo791u().s[5]++;
        console.log('Firebase current user:',
        /* istanbul ignore next */
        _client.
        /* istanbul ignore next */
        auth?.currentUser);
        /* istanbul ignore next */
        cov_1b4gyo791u().s[6]++;
        /* istanbul ignore next */
        (0,
        /* istanbul ignore next */
        _firebaseAuthDebug.
        /* istanbul ignore next */
        debugFirebaseAuth)(
        /* istanbul ignore next */
        _client.
        /* istanbul ignore next */
        auth);
      } else
      /* istanbul ignore next */
      {
        cov_1b4gyo791u().b[0][1]++;
      }

      // If we have a user from server context but no Firebase user, 
      // there's an authentication mismatch
      cov_1b4gyo791u().s[7]++;
      if (
      /* istanbul ignore next */
      (cov_1b4gyo791u().b[2][0]++, user) &&
      /* istanbul ignore next */
      (cov_1b4gyo791u().b[2][1]++,
      /* istanbul ignore next */
      _client.
      /* istanbul ignore next */
      auth) &&
      /* istanbul ignore next */
      (cov_1b4gyo791u().b[2][2]++, !
      /* istanbul ignore next */
      _client.
      /* istanbul ignore next */
      auth.currentUser)) {
        /* istanbul ignore next */
        cov_1b4gyo791u().b[1][0]++;
        cov_1b4gyo791u().s[8]++;
        console.warn('Authentication mismatch detected: Server has user but Firebase client does not');
        /* istanbul ignore next */
        cov_1b4gyo791u().s[9]++;
        console.warn('This may cause Firestore permission errors');
        /* istanbul ignore next */
        cov_1b4gyo791u().s[10]++;
        console.warn('User ID from server:', user.uid);

        // Try to get a fresh token from the server to sync Firebase auth
        /* istanbul ignore next */
        cov_1b4gyo791u().s[11]++;
        try {
          const response =
          /* istanbul ignore next */
          (cov_1b4gyo791u().s[12]++, await fetch('/api/auth/sync-firebase'));
          /* istanbul ignore next */
          cov_1b4gyo791u().s[13]++;
          if (response.ok) {
            /* istanbul ignore next */
            cov_1b4gyo791u().b[3][0]++;
            const {
              customToken
            } =
            /* istanbul ignore next */
            (cov_1b4gyo791u().s[14]++, await response.json());
            /* istanbul ignore next */
            cov_1b4gyo791u().s[15]++;
            if (customToken) {
              /* istanbul ignore next */
              cov_1b4gyo791u().b[4][0]++;
              cov_1b4gyo791u().s[16]++;
              await
              /* istanbul ignore next */
              (0,
              /* istanbul ignore next */
              _auth.
              /* istanbul ignore next */
              signInWithCustomToken)(
              /* istanbul ignore next */
              _client.
              /* istanbul ignore next */
              auth, customToken);
              /* istanbul ignore next */
              cov_1b4gyo791u().s[17]++;
              console.log('Successfully synced Firebase authentication');
            } else
            /* istanbul ignore next */
            {
              cov_1b4gyo791u().b[4][1]++;
            }
          } else
          /* istanbul ignore next */
          {
            cov_1b4gyo791u().b[3][1]++;
          }
        } catch (error) {
          /* istanbul ignore next */
          cov_1b4gyo791u().s[18]++;
          console.error('Failed to sync Firebase authentication:', error);
        }
      } else
      /* istanbul ignore next */
      {
        cov_1b4gyo791u().b[1][1]++;
      }
    }

    // Run auth sync after a short delay to allow Firebase to initialize
    const timer =
    /* istanbul ignore next */
    (cov_1b4gyo791u().s[19]++, setTimeout(syncAuth, 1000));
    /* istanbul ignore next */
    cov_1b4gyo791u().s[20]++;
    return () => {
      /* istanbul ignore next */
      cov_1b4gyo791u().f[3]++;
      cov_1b4gyo791u().s[21]++;
      return clearTimeout(timer);
    };
  }, [user]);
  /* istanbul ignore next */
  cov_1b4gyo791u().s[22]++;
  return null; // This component doesn't render anything
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,