{"version":3,"names":["cov_gf9ybv1ma","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","exports","cleanTextForTTS","extractQuestionForTTS","prepareConversationForTTS","validateAndCleanForTTS","text","cleanedText","replace","split","map","trim","join","sentences","filter","length","questionSentence","find","sentence","includes","test","result","issues","isValid","push","problematicChars","match","Set","repeatedPatterns"],"sources":["/Users/dikshantvashistha/PrepBettr/lib/utils/text-preprocessing.ts"],"sourcesContent":["/**\n * Text Preprocessing Utilities\n * \n * Functions to clean and prepare text for Text-to-Speech (TTS) services\n * by removing markdown formatting, symbols, and other unwanted characters.\n */\n\n/**\n * Clean Markdown formatting and symbols from text before sending to TTS\n * \n * @param text - Raw text that may contain Markdown formatting\n * @returns Cleaned text suitable for speech synthesis\n */\nexport function cleanTextForTTS(text: string): string {\n  if (!text || typeof text !== 'string') {\n    return '';\n  }\n\n  let cleanedText = text;\n\n  // Remove Markdown headers (# ## ### #### ##### ######)\n  cleanedText = cleanedText.replace(/^#{1,6}\\s*/gm, '');\n  \n  // Remove Markdown bold and italic formatting (** __ * _)\n  cleanedText = cleanedText.replace(/\\*{1,2}([^*]+)\\*{1,2}/g, '$1');\n  cleanedText = cleanedText.replace(/_{1,2}([^_]+)_{1,2}/g, '$1');\n  \n  // Remove Markdown horizontal rules (--- or ***)\n  cleanedText = cleanedText.replace(/^[-*]{3,}\\s*$/gm, '');\n  \n  // Remove Markdown code blocks (```code```)\n  cleanedText = cleanedText.replace(/```[\\s\\S]*?```/g, '');\n  \n  // Remove inline code (`code`)\n  cleanedText = cleanedText.replace(/`([^`]+)`/g, '$1');\n  \n  // Remove Markdown links ([text](url) -> text)\n  cleanedText = cleanedText.replace(/\\[([^\\]]+)\\]\\([^)]+\\)/g, '$1');\n  \n  // Remove HTML tags if any\n  cleanedText = cleanedText.replace(/<[^>]*>/g, '');\n  \n  // Remove excessive whitespace and normalize line breaks\n  cleanedText = cleanedText.replace(/\\n{3,}/g, '\\n\\n'); // Max 2 consecutive newlines\n  cleanedText = cleanedText.replace(/[ \\t]+/g, ' '); // Multiple spaces/tabs to single space\n  \n  // Remove leading/trailing whitespace from each line\n  cleanedText = cleanedText.split('\\n').map(line => line.trim()).join('\\n');\n  \n  // Remove empty lines at start and end\n  cleanedText = cleanedText.trim();\n  \n  // Replace multiple consecutive spaces with single space\n  cleanedText = cleanedText.replace(/\\s{2,}/g, ' ');\n  \n  // Ensure periods for better speech pacing (add period if sentence doesn't end with punctuation)\n  cleanedText = cleanedText.replace(/([a-zA-Z0-9])\\n/g, '$1. ');\n  \n  return cleanedText;\n}\n\n/**\n * Extract clean question text from formatted AI responses\n * Specifically handles interview question formats with headers and metadata\n * \n * @param text - Formatted text that may contain question metadata\n * @returns Clean question text suitable for speech\n */\nexport function extractQuestionForTTS(text: string): string {\n  if (!text || typeof text !== 'string') {\n    return '';\n  }\n\n  let cleanedText = text;\n  \n  // Remove structured headers and metadata commonly generated by AI\n  // Remove \"### Role:\", \"### Category:\", etc.\n  cleanedText = cleanedText.replace(/###?\\s*\\w+:\\s*[^\\n]*/g, '');\n  \n  // Remove \"**Question N:**\" type headers\n  cleanedText = cleanedText.replace(/\\*{1,2}\\s*Question\\s+\\d+[^*]*\\*{1,2}/g, '');\n  \n  // Remove \"**Question Text:**\" labels\n  cleanedText = cleanedText.replace(/\\*{1,2}\\s*Question\\s+Text:\\s*\\*{1,2}/g, '');\n  \n  // Remove other structured labels like \"Key:\", \"Expected:\", etc.\n  cleanedText = cleanedText.replace(/\\*{1,2}\\s*\\w+:\\s*\\*{1,2}/g, '');\n  \n  // Remove numbered list prefixes (1., 2., etc.)\n  cleanedText = cleanedText.replace(/^\\d+\\.\\s*/gm, '');\n  \n  // Apply general markdown cleaning\n  cleanedText = cleanTextForTTS(cleanedText);\n  \n  // Split into sentences and find the actual question\n  const sentences = cleanedText.split(/[.!?]+/).map(s => s.trim()).filter(s => s.length > 0);\n  \n  // Look for the longest sentence that seems like a question or main content\n  const questionSentence = sentences.find(sentence => \n    sentence.includes('?') || \n    sentence.length > 20 || \n    /\\b(describe|explain|tell|how|what|why|when|where)\\b/i.test(sentence)\n  );\n  \n  // Return the question sentence or the first substantial sentence\n  const result = questionSentence || sentences.find(s => s.length > 15) || cleanedText;\n  \n  // Ensure it ends with proper punctuation for speech\n  if (result && !/[.!?]$/.test(result.trim())) {\n    return result.trim() + '.';\n  }\n  \n  return result.trim();\n}\n\n/**\n * Prepare conversation text for natural speech output\n * Handles common conversational patterns and improves speech flow\n * \n * @param text - Conversation text\n * @returns Text optimized for natural speech synthesis\n */\nexport function prepareConversationForTTS(text: string): string {\n  if (!text || typeof text !== 'string') {\n    return '';\n  }\n\n  let cleanedText = cleanTextForTTS(text);\n  \n  // Add natural pauses after greetings\n  cleanedText = cleanedText.replace(/^(Hello|Hi|Hey|Good morning|Good afternoon)[,!]?\\s*/i, '$1! ');\n  \n  // Add pause after \"Great!\" or \"Excellent!\" responses\n  cleanedText = cleanedText.replace(/^(Great|Excellent|Perfect|Wonderful)[!]?\\s*/i, '$1! ');\n  \n  // Ensure questions end with question marks for proper intonation\n  cleanedText = cleanedText.replace(/\\?\\.$/g, '?');\n  \n  // Add slight pause after transition words\n  cleanedText = cleanedText.replace(/\\b(Now|Next|So|Well|However|Therefore)\\s+/gi, '$1, ');\n  \n  // Ensure proper punctuation for speech rhythm\n  if (cleanedText && !/[.!?]$/.test(cleanedText.trim())) {\n    cleanedText = cleanedText.trim() + '.';\n  }\n  \n  return cleanedText;\n}\n\n/**\n * Validate that text is suitable for TTS (not too long, has content, etc.)\n * \n * @param text - Text to validate\n * @returns Object with validation result and cleaned text\n */\nexport function validateAndCleanForTTS(text: string): { \n  isValid: boolean; \n  cleanedText: string; \n  issues: string[]; \n} {\n  const issues: string[] = [];\n  \n  if (!text || typeof text !== 'string') {\n    return { isValid: false, cleanedText: '', issues: ['Text is empty or invalid'] };\n  }\n  \n  const cleanedText = prepareConversationForTTS(text);\n  \n  // Check length constraints (typical TTS services have limits)\n  if (cleanedText.length > 5000) {\n    issues.push('Text is too long for optimal TTS processing (>5000 characters)');\n  }\n  \n  if (cleanedText.length < 3) {\n    issues.push('Text is too short for meaningful speech output');\n  }\n  \n  // Check for remaining problematic characters\n  const problematicChars = cleanedText.match(/[#*_`\\[\\]{}]/g);\n  if (problematicChars && problematicChars.length > 0) {\n    issues.push(`Contains unhandled formatting characters: ${[...new Set(problematicChars)].join(', ')}`);\n  }\n  \n  // Check for repeated patterns that might cause speech issues\n  const repeatedPatterns = cleanedText.match(/(.{3,})\\1{2,}/g);\n  if (repeatedPatterns) {\n    issues.push('Contains repeated text patterns that may affect speech quality');\n  }\n  \n  return {\n    isValid: issues.length === 0,\n    cleanedText,\n    issues\n  };\n}\n"],"mappings":";;AAAA;;;;;;AAAA;AAAA,SAAAA,cAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;IAAA;I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","ignoreList":[]}