95eccd83f939ad56686180941a4434d8
"use strict";

/**
 * Voice Agent Bridge
 * Connects VoiceSession with AgentOrchestrator to enable voice-controlled agent interactions
 */
/* istanbul ignore next */
function cov_1dvhg9su75() {
  var path = "/Users/dikshantvashistha/PrepBettr/lib/azure-ai-foundry/voice/voice-agent-bridge.ts";
  var hash = "5baa0165d73a71998a4bf54cc7043fd46b72569f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dikshantvashistha/PrepBettr/lib/azure-ai-foundry/voice/voice-agent-bridge.ts",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 62
        }
      },
      "1": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 7,
          column: 34
        }
      },
      "2": {
        start: {
          line: 8,
          column: 26
        },
        end: {
          line: 8,
          column: 54
        }
      },
      "3": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 34
        }
      },
      "4": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 17,
          column: 9
        }
      },
      "5": {
        start: {
          line: 16,
          column: 12
        },
        end: {
          line: 16,
          column: 41
        }
      },
      "6": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 47
        }
      },
      "7": {
        start: {
          line: 21,
          column: 25
        },
        end: {
          line: 21,
          column: 49
        }
      },
      "8": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 24,
          column: 9
        }
      },
      "9": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 23,
          column: 55
        }
      },
      "10": {
        start: {
          line: 23,
          column: 40
        },
        end: {
          line: 23,
          column: 53
        }
      },
      "11": {
        start: {
          line: 27,
          column: 25
        },
        end: {
          line: 27,
          column: 49
        }
      },
      "12": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 33,
          column: 9
        }
      },
      "13": {
        start: {
          line: 29,
          column: 26
        },
        end: {
          line: 29,
          column: 51
        }
      },
      "14": {
        start: {
          line: 30,
          column: 12
        },
        end: {
          line: 32,
          column: 13
        }
      },
      "15": {
        start: {
          line: 31,
          column: 16
        },
        end: {
          line: 31,
          column: 42
        }
      },
      "16": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 16
        }
      },
      "17": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 29
        }
      },
      "18": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 30
        }
      },
      "19": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 41,
          column: 41
        }
      },
      "20": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 51
        }
      },
      "21": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 197
        }
      },
      "22": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 55,
          column: 10
        }
      },
      "23": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 56,
          column: 41
        }
      },
      "24": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 35
        }
      },
      "25": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 59,
          column: 83
        }
      },
      "26": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 63,
          column: 11
        }
      },
      "27": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 90,
          column: 9
        }
      },
      "28": {
        start: {
          line: 70,
          column: 12
        },
        end: {
          line: 72,
          column: 15
        }
      },
      "29": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 73,
          column: 44
        }
      },
      "30": {
        start: {
          line: 74,
          column: 12
        },
        end: {
          line: 74,
          column: 44
        }
      },
      "31": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 75,
          column: 49
        }
      },
      "32": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 79,
          column: 15
        }
      },
      "33": {
        start: {
          line: 81,
          column: 12
        },
        end: {
          line: 81,
          column: 40
        }
      },
      "34": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 83,
          column: 72
        }
      },
      "35": {
        start: {
          line: 86,
          column: 32
        },
        end: {
          line: 86,
          column: 100
        }
      },
      "36": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 87,
          column: 121
        }
      },
      "37": {
        start: {
          line: 88,
          column: 12
        },
        end: {
          line: 88,
          column: 42
        }
      },
      "38": {
        start: {
          line: 89,
          column: 12
        },
        end: {
          line: 89,
          column: 30
        }
      },
      "39": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 98,
          column: 11
        }
      },
      "40": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 99,
          column: 41
        }
      },
      "41": {
        start: {
          line: 100,
          column: 8
        },
        end: {
          line: 100,
          column: 33
        }
      },
      "42": {
        start: {
          line: 101,
          column: 8
        },
        end: {
          line: 103,
          column: 9
        }
      },
      "43": {
        start: {
          line: 102,
          column: 12
        },
        end: {
          line: 102,
          column: 37
        }
      },
      "44": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 107,
          column: 11
        }
      },
      "45": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 108,
          column: 56
        }
      },
      "46": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 118,
          column: 9
        }
      },
      "47": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 116,
          column: 74
        }
      },
      "48": {
        start: {
          line: 117,
          column: 12
        },
        end: {
          line: 117,
          column: 19
        }
      },
      "49": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 156,
          column: 9
        }
      },
      "50": {
        start: {
          line: 120,
          column: 12
        },
        end: {
          line: 120,
          column: 45
        }
      },
      "51": {
        start: {
          line: 121,
          column: 34
        },
        end: {
          line: 121,
          column: 57
        }
      },
      "52": {
        start: {
          line: 122,
          column: 12
        },
        end: {
          line: 126,
          column: 15
        }
      },
      "53": {
        start: {
          line: 128,
          column: 12
        },
        end: {
          line: 130,
          column: 13
        }
      },
      "54": {
        start: {
          line: 129,
          column: 16
        },
        end: {
          line: 129,
          column: 73
        }
      },
      "55": {
        start: {
          line: 131,
          column: 12
        },
        end: {
          line: 131,
          column: 48
        }
      },
      "56": {
        start: {
          line: 132,
          column: 12
        },
        end: {
          line: 132,
          column: 46
        }
      },
      "57": {
        start: {
          line: 133,
          column: 12
        },
        end: {
          line: 133,
          column: 49
        }
      },
      "58": {
        start: {
          line: 134,
          column: 12
        },
        end: {
          line: 138,
          column: 15
        }
      },
      "59": {
        start: {
          line: 140,
          column: 39
        },
        end: {
          line: 140,
          column: 76
        }
      },
      "60": {
        start: {
          line: 141,
          column: 12
        },
        end: {
          line: 145,
          column: 13
        }
      },
      "61": {
        start: {
          line: 143,
          column: 16
        },
        end: {
          line: 143,
          column: 120
        }
      },
      "62": {
        start: {
          line: 146,
          column: 12
        },
        end: {
          line: 148,
          column: 15
        }
      },
      "63": {
        start: {
          line: 151,
          column: 12
        },
        end: {
          line: 151,
          column: 46
        }
      },
      "64": {
        start: {
          line: 152,
          column: 33
        },
        end: {
          line: 152,
          column: 99
        }
      },
      "65": {
        start: {
          line: 153,
          column: 12
        },
        end: {
          line: 153,
          column: 123
        }
      },
      "66": {
        start: {
          line: 154,
          column: 12
        },
        end: {
          line: 154,
          column: 43
        }
      },
      "67": {
        start: {
          line: 155,
          column: 12
        },
        end: {
          line: 155,
          column: 31
        }
      },
      "68": {
        start: {
          line: 162,
          column: 8
        },
        end: {
          line: 189,
          column: 9
        }
      },
      "69": {
        start: {
          line: 163,
          column: 12
        },
        end: {
          line: 163,
          column: 49
        }
      },
      "70": {
        start: {
          line: 164,
          column: 12
        },
        end: {
          line: 168,
          column: 15
        }
      },
      "71": {
        start: {
          line: 170,
          column: 12
        },
        end: {
          line: 170,
          column: 48
        }
      },
      "72": {
        start: {
          line: 172,
          column: 12
        },
        end: {
          line: 174,
          column: 13
        }
      },
      "73": {
        start: {
          line: 173,
          column: 16
        },
        end: {
          line: 173,
          column: 61
        }
      },
      "74": {
        start: {
          line: 176,
          column: 12
        },
        end: {
          line: 178,
          column: 13
        }
      },
      "75": {
        start: {
          line: 177,
          column: 16
        },
        end: {
          line: 177,
          column: 61
        }
      },
      "76": {
        start: {
          line: 179,
          column: 12
        },
        end: {
          line: 183,
          column: 15
        }
      },
      "77": {
        start: {
          line: 186,
          column: 34
        },
        end: {
          line: 186,
          column: 109
        }
      },
      "78": {
        start: {
          line: 187,
          column: 12
        },
        end: {
          line: 187,
          column: 125
        }
      },
      "79": {
        start: {
          line: 188,
          column: 12
        },
        end: {
          line: 188,
          column: 44
        }
      },
      "80": {
        start: {
          line: 195,
          column: 8
        },
        end: {
          line: 195,
          column: 45
        }
      },
      "81": {
        start: {
          line: 201,
          column: 8
        },
        end: {
          line: 201,
          column: 36
        }
      },
      "82": {
        start: {
          line: 207,
          column: 8
        },
        end: {
          line: 207,
          column: 73
        }
      },
      "83": {
        start: {
          line: 212,
          column: 8
        },
        end: {
          line: 214,
          column: 11
        }
      },
      "84": {
        start: {
          line: 213,
          column: 12
        },
        end: {
          line: 213,
          column: 50
        }
      },
      "85": {
        start: {
          line: 216,
          column: 8
        },
        end: {
          line: 218,
          column: 11
        }
      },
      "86": {
        start: {
          line: 217,
          column: 12
        },
        end: {
          line: 217,
          column: 65
        }
      },
      "87": {
        start: {
          line: 220,
          column: 8
        },
        end: {
          line: 220,
          column: 79
        }
      },
      "88": {
        start: {
          line: 224,
          column: 8
        },
        end: {
          line: 272,
          column: 9
        }
      },
      "89": {
        start: {
          line: 225,
          column: 12
        },
        end: {
          line: 225,
          column: 49
        }
      },
      "90": {
        start: {
          line: 226,
          column: 12
        },
        end: {
          line: 229,
          column: 15
        }
      },
      "91": {
        start: {
          line: 231,
          column: 12
        },
        end: {
          line: 231,
          column: 53
        }
      },
      "92": {
        start: {
          line: 233,
          column: 36
        },
        end: {
          line: 239,
          column: 13
        }
      },
      "93": {
        start: {
          line: 240,
          column: 12
        },
        end: {
          line: 243,
          column: 15
        }
      },
      "94": {
        start: {
          line: 245,
          column: 12
        },
        end: {
          line: 247,
          column: 13
        }
      },
      "95": {
        start: {
          line: 246,
          column: 16
        },
        end: {
          line: 246,
          column: 66
        }
      },
      "96": {
        start: {
          line: 249,
          column: 12
        },
        end: {
          line: 266,
          column: 13
        }
      },
      "97": {
        start: {
          line: 250,
          column: 16
        },
        end: {
          line: 253,
          column: 19
        }
      },
      "98": {
        start: {
          line: 254,
          column: 33
        },
        end: {
          line: 258,
          column: 18
        }
      },
      "99": {
        start: {
          line: 259,
          column: 16
        },
        end: {
          line: 262,
          column: 19
        }
      },
      "100": {
        start: {
          line: 263,
          column: 16
        },
        end: {
          line: 265,
          column: 17
        }
      },
      "101": {
        start: {
          line: 264,
          column: 20
        },
        end: {
          line: 264,
          column: 84
        }
      },
      "102": {
        start: {
          line: 269,
          column: 36
        },
        end: {
          line: 269,
          column: 109
        }
      },
      "103": {
        start: {
          line: 270,
          column: 12
        },
        end: {
          line: 270,
          column: 134
        }
      },
      "104": {
        start: {
          line: 271,
          column: 12
        },
        end: {
          line: 271,
          column: 46
        }
      },
      "105": {
        start: {
          line: 275,
          column: 8
        },
        end: {
          line: 275,
          column: 45
        }
      },
      "106": {
        start: {
          line: 276,
          column: 8
        },
        end: {
          line: 279,
          column: 11
        }
      },
      "107": {
        start: {
          line: 281,
          column: 8
        },
        end: {
          line: 283,
          column: 9
        }
      },
      "108": {
        start: {
          line: 282,
          column: 12
        },
        end: {
          line: 282,
          column: 57
        }
      },
      "109": {
        start: {
          line: 286,
          column: 22
        },
        end: {
          line: 292,
          column: 9
        }
      },
      "110": {
        start: {
          line: 293,
          column: 8
        },
        end: {
          line: 293,
          column: 36
        }
      },
      "111": {
        start: {
          line: 295,
          column: 8
        },
        end: {
          line: 297,
          column: 9
        }
      },
      "112": {
        start: {
          line: 296,
          column: 12
        },
        end: {
          line: 296,
          column: 42
        }
      },
      "113": {
        start: {
          line: 298,
          column: 8
        },
        end: {
          line: 302,
          column: 11
        }
      },
      "114": {
        start: {
          line: 305,
          column: 8
        },
        end: {
          line: 307,
          column: 9
        }
      },
      "115": {
        start: {
          line: 306,
          column: 12
        },
        end: {
          line: 306,
          column: 19
        }
      },
      "116": {
        start: {
          line: 308,
          column: 8
        },
        end: {
          line: 318,
          column: 10
        }
      },
      "117": {
        start: {
          line: 319,
          column: 8
        },
        end: {
          line: 322,
          column: 11
        }
      },
      "118": {
        start: {
          line: 325,
          column: 8
        },
        end: {
          line: 327,
          column: 9
        }
      },
      "119": {
        start: {
          line: 326,
          column: 12
        },
        end: {
          line: 326,
          column: 19
        }
      },
      "120": {
        start: {
          line: 328,
          column: 8
        },
        end: {
          line: 355,
          column: 9
        }
      },
      "121": {
        start: {
          line: 330,
          column: 32
        },
        end: {
          line: 330,
          column: 67
        }
      },
      "122": {
        start: {
          line: 331,
          column: 26
        },
        end: {
          line: 344,
          column: 13
        }
      },
      "123": {
        start: {
          line: 345,
          column: 12
        },
        end: {
          line: 345,
          column: 46
        }
      },
      "124": {
        start: {
          line: 346,
          column: 12
        },
        end: {
          line: 346,
          column: 59
        }
      },
      "125": {
        start: {
          line: 347,
          column: 12
        },
        end: {
          line: 351,
          column: 15
        }
      },
      "126": {
        start: {
          line: 354,
          column: 12
        },
        end: {
          line: 354,
          column: 87
        }
      },
      "127": {
        start: {
          line: 358,
          column: 8
        },
        end: {
          line: 360,
          column: 9
        }
      },
      "128": {
        start: {
          line: 359,
          column: 12
        },
        end: {
          line: 359,
          column: 19
        }
      },
      "129": {
        start: {
          line: 361,
          column: 8
        },
        end: {
          line: 361,
          column: 44
        }
      },
      "130": {
        start: {
          line: 362,
          column: 8
        },
        end: {
          line: 362,
          column: 55
        }
      },
      "131": {
        start: {
          line: 364,
          column: 8
        },
        end: {
          line: 368,
          column: 11
        }
      },
      "132": {
        start: {
          line: 373,
          column: 28
        },
        end: {
          line: 373,
          column: 104
        }
      },
      "133": {
        start: {
          line: 374,
          column: 30
        },
        end: {
          line: 374,
          column: 101
        }
      },
      "134": {
        start: {
          line: 375,
          column: 22
        },
        end: {
          line: 375,
          column: 51
        }
      },
      "135": {
        start: {
          line: 376,
          column: 32
        },
        end: {
          line: 376,
          column: 87
        }
      },
      "136": {
        start: {
          line: 376,
          column: 53
        },
        end: {
          line: 376,
          column: 79
        }
      },
      "137": {
        start: {
          line: 377,
          column: 34
        },
        end: {
          line: 377,
          column: 91
        }
      },
      "138": {
        start: {
          line: 377,
          column: 55
        },
        end: {
          line: 377,
          column: 83
        }
      },
      "139": {
        start: {
          line: 378,
          column: 20
        },
        end: {
          line: 378,
          column: 21
        }
      },
      "140": {
        start: {
          line: 379,
          column: 8
        },
        end: {
          line: 384,
          column: 9
        }
      },
      "141": {
        start: {
          line: 380,
          column: 12
        },
        end: {
          line: 380,
          column: 24
        }
      },
      "142": {
        start: {
          line: 382,
          column: 13
        },
        end: {
          line: 384,
          column: 9
        }
      },
      "143": {
        start: {
          line: 383,
          column: 12
        },
        end: {
          line: 383,
          column: 25
        }
      },
      "144": {
        start: {
          line: 385,
          column: 26
        },
        end: {
          line: 396,
          column: 9
        }
      },
      "145": {
        start: {
          line: 392,
          column: 50
        },
        end: {
          line: 392,
          column: 76
        }
      },
      "146": {
        start: {
          line: 397,
          column: 8
        },
        end: {
          line: 400,
          column: 11
        }
      },
      "147": {
        start: {
          line: 401,
          column: 8
        },
        end: {
          line: 411,
          column: 9
        }
      },
      "148": {
        start: {
          line: 402,
          column: 12
        },
        end: {
          line: 410,
          column: 15
        }
      },
      "149": {
        start: {
          line: 416,
          column: 30
        },
        end: {
          line: 432,
          column: 9
        }
      },
      "150": {
        start: {
          line: 433,
          column: 8
        },
        end: {
          line: 433,
          column: 46
        }
      },
      "151": {
        start: {
          line: 437,
          column: 8
        },
        end: {
          line: 443,
          column: 10
        }
      },
      "152": {
        start: {
          line: 447,
          column: 8
        },
        end: {
          line: 451,
          column: 11
        }
      },
      "153": {
        start: {
          line: 454,
          column: 30
        },
        end: {
          line: 462,
          column: 9
        }
      },
      "154": {
        start: {
          line: 455,
          column: 38
        },
        end: {
          line: 455,
          column: 74
        }
      },
      "155": {
        start: {
          line: 456,
          column: 12
        },
        end: {
          line: 460,
          column: 13
        }
      },
      "156": {
        start: {
          line: 457,
          column: 16
        },
        end: {
          line: 457,
          column: 72
        }
      },
      "157": {
        start: {
          line: 458,
          column: 16
        },
        end: {
          line: 458,
          column: 28
        }
      },
      "158": {
        start: {
          line: 459,
          column: 16
        },
        end: {
          line: 459,
          column: 23
        }
      },
      "159": {
        start: {
          line: 461,
          column: 12
        },
        end: {
          line: 461,
          column: 45
        }
      },
      "160": {
        start: {
          line: 463,
          column: 8
        },
        end: {
          line: 463,
          column: 41
        }
      },
      "161": {
        start: {
          line: 466,
          column: 8
        },
        end: {
          line: 466,
          column: 32
        }
      },
      "162": {
        start: {
          line: 467,
          column: 8
        },
        end: {
          line: 470,
          column: 11
        }
      },
      "163": {
        start: {
          line: 471,
          column: 8
        },
        end: {
          line: 474,
          column: 11
        }
      },
      "164": {
        start: {
          line: 476,
          column: 8
        },
        end: {
          line: 478,
          column: 9
        }
      },
      "165": {
        start: {
          line: 477,
          column: 12
        },
        end: {
          line: 477,
          column: 35
        }
      },
      "166": {
        start: {
          line: 481,
          column: 8
        },
        end: {
          line: 483,
          column: 9
        }
      },
      "167": {
        start: {
          line: 482,
          column: 12
        },
        end: {
          line: 482,
          column: 19
        }
      },
      "168": {
        start: {
          line: 484,
          column: 8
        },
        end: {
          line: 484,
          column: 46
        }
      },
      "169": {
        start: {
          line: 485,
          column: 8
        },
        end: {
          line: 485,
          column: 39
        }
      },
      "170": {
        start: {
          line: 486,
          column: 8
        },
        end: {
          line: 486,
          column: 53
        }
      },
      "171": {
        start: {
          line: 487,
          column: 8
        },
        end: {
          line: 506,
          column: 9
        }
      },
      "172": {
        start: {
          line: 488,
          column: 12
        },
        end: {
          line: 491,
          column: 15
        }
      },
      "173": {
        start: {
          line: 493,
          column: 12
        },
        end: {
          line: 495,
          column: 13
        }
      },
      "174": {
        start: {
          line: 494,
          column: 16
        },
        end: {
          line: 494,
          column: 48
        }
      },
      "175": {
        start: {
          line: 496,
          column: 12
        },
        end: {
          line: 496,
          column: 51
        }
      },
      "176": {
        start: {
          line: 497,
          column: 12
        },
        end: {
          line: 497,
          column: 64
        }
      },
      "177": {
        start: {
          line: 500,
          column: 12
        },
        end: {
          line: 500,
          column: 51
        }
      },
      "178": {
        start: {
          line: 501,
          column: 12
        },
        end: {
          line: 501,
          column: 70
        }
      },
      "179": {
        start: {
          line: 502,
          column: 12
        },
        end: {
          line: 505,
          column: 13
        }
      },
      "180": {
        start: {
          line: 503,
          column: 16
        },
        end: {
          line: 503,
          column: 98
        }
      },
      "181": {
        start: {
          line: 504,
          column: 16
        },
        end: {
          line: 504,
          column: 28
        }
      },
      "182": {
        start: {
          line: 509,
          column: 29
        },
        end: {
          line: 509,
          column: 41
        }
      },
      "183": {
        start: {
          line: 510,
          column: 22
        },
        end: {
          line: 510,
          column: 57
        }
      },
      "184": {
        start: {
          line: 511,
          column: 8
        },
        end: {
          line: 513,
          column: 9
        }
      },
      "185": {
        start: {
          line: 511,
          column: 21
        },
        end: {
          line: 511,
          column: 22
        }
      },
      "186": {
        start: {
          line: 512,
          column: 12
        },
        end: {
          line: 512,
          column: 50
        }
      },
      "187": {
        start: {
          line: 514,
          column: 8
        },
        end: {
          line: 514,
          column: 28
        }
      },
      "188": {
        start: {
          line: 517,
          column: 0
        },
        end: {
          line: 517,
          column: 44
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 11,
            column: 4
          },
          end: {
            line: 11,
            column: 5
          }
        },
        loc: {
          start: {
            line: 11,
            column: 18
          },
          end: {
            line: 13,
            column: 5
          }
        },
        line: 11
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 14,
            column: 5
          }
        },
        loc: {
          start: {
            line: 14,
            column: 23
          },
          end: {
            line: 19,
            column: 5
          }
        },
        line: 14
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 20,
            column: 5
          }
        },
        loc: {
          start: {
            line: 20,
            column: 22
          },
          end: {
            line: 25,
            column: 5
          }
        },
        line: 20
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 23,
            column: 29
          },
          end: {
            line: 23,
            column: 30
          }
        },
        loc: {
          start: {
            line: 23,
            column: 40
          },
          end: {
            line: 23,
            column: 53
          }
        },
        line: 23
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 26,
            column: 5
          }
        },
        loc: {
          start: {
            line: 26,
            column: 24
          },
          end: {
            line: 34,
            column: 5
          }
        },
        line: 26
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        },
        loc: {
          start: {
            line: 37,
            column: 57
          },
          end: {
            line: 64,
            column: 5
          }
        },
        line: 37
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 68,
            column: 4
          },
          end: {
            line: 68,
            column: 5
          }
        },
        loc: {
          start: {
            line: 68,
            column: 18
          },
          end: {
            line: 91,
            column: 5
          }
        },
        line: 68
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 95,
            column: 4
          },
          end: {
            line: 95,
            column: 5
          }
        },
        loc: {
          start: {
            line: 95,
            column: 11
          },
          end: {
            line: 109,
            column: 5
          }
        },
        line: 95
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 113,
            column: 4
          },
          end: {
            line: 113,
            column: 5
          }
        },
        loc: {
          start: {
            line: 113,
            column: 45
          },
          end: {
            line: 157,
            column: 5
          }
        },
        line: 113
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 161,
            column: 4
          },
          end: {
            line: 161,
            column: 5
          }
        },
        loc: {
          start: {
            line: 161,
            column: 45
          },
          end: {
            line: 190,
            column: 5
          }
        },
        line: 161
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 194,
            column: 4
          },
          end: {
            line: 194,
            column: 5
          }
        },
        loc: {
          start: {
            line: 194,
            column: 15
          },
          end: {
            line: 196,
            column: 5
          }
        },
        line: 194
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 200,
            column: 4
          },
          end: {
            line: 200,
            column: 5
          }
        },
        loc: {
          start: {
            line: 200,
            column: 20
          },
          end: {
            line: 202,
            column: 5
          }
        },
        line: 200
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 206,
            column: 4
          },
          end: {
            line: 206,
            column: 5
          }
        },
        loc: {
          start: {
            line: 206,
            column: 19
          },
          end: {
            line: 208,
            column: 5
          }
        },
        line: 206
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 210,
            column: 4
          },
          end: {
            line: 210,
            column: 5
          }
        },
        loc: {
          start: {
            line: 210,
            column: 32
          },
          end: {
            line: 221,
            column: 5
          }
        },
        line: 210
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 212,
            column: 39
          },
          end: {
            line: 212,
            column: 40
          }
        },
        loc: {
          start: {
            line: 212,
            column: 50
          },
          end: {
            line: 214,
            column: 9
          }
        },
        line: 212
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 216,
            column: 37
          },
          end: {
            line: 216,
            column: 38
          }
        },
        loc: {
          start: {
            line: 216,
            column: 48
          },
          end: {
            line: 218,
            column: 9
          }
        },
        line: 216
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 222,
            column: 4
          },
          end: {
            line: 222,
            column: 5
          }
        },
        loc: {
          start: {
            line: 222,
            column: 43
          },
          end: {
            line: 273,
            column: 5
          }
        },
        line: 222
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 274,
            column: 4
          },
          end: {
            line: 274,
            column: 5
          }
        },
        loc: {
          start: {
            line: 274,
            column: 35
          },
          end: {
            line: 284,
            column: 5
          }
        },
        line: 274
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 285,
            column: 4
          },
          end: {
            line: 285,
            column: 5
          }
        },
        loc: {
          start: {
            line: 285,
            column: 35
          },
          end: {
            line: 303,
            column: 5
          }
        },
        line: 285
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 304,
            column: 4
          },
          end: {
            line: 304,
            column: 5
          }
        },
        loc: {
          start: {
            line: 304,
            column: 26
          },
          end: {
            line: 323,
            column: 5
          }
        },
        line: 304
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 324,
            column: 4
          },
          end: {
            line: 324,
            column: 5
          }
        },
        loc: {
          start: {
            line: 324,
            column: 44
          },
          end: {
            line: 356,
            column: 5
          }
        },
        line: 324
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 357,
            column: 4
          },
          end: {
            line: 357,
            column: 5
          }
        },
        loc: {
          start: {
            line: 357,
            column: 24
          },
          end: {
            line: 369,
            column: 5
          }
        },
        line: 357
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 370,
            column: 4
          },
          end: {
            line: 370,
            column: 5
          }
        },
        loc: {
          start: {
            line: 370,
            column: 44
          },
          end: {
            line: 412,
            column: 5
          }
        },
        line: 370
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 376,
            column: 45
          },
          end: {
            line: 376,
            column: 46
          }
        },
        loc: {
          start: {
            line: 376,
            column: 53
          },
          end: {
            line: 376,
            column: 79
          }
        },
        line: 376
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 377,
            column: 47
          },
          end: {
            line: 377,
            column: 48
          }
        },
        loc: {
          start: {
            line: 377,
            column: 55
          },
          end: {
            line: 377,
            column: 83
          }
        },
        line: 377
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 392,
            column: 42
          },
          end: {
            line: 392,
            column: 43
          }
        },
        loc: {
          start: {
            line: 392,
            column: 50
          },
          end: {
            line: 392,
            column: 76
          }
        },
        line: 392
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 413,
            column: 4
          },
          end: {
            line: 413,
            column: 5
          }
        },
        loc: {
          start: {
            line: 413,
            column: 37
          },
          end: {
            line: 434,
            column: 5
          }
        },
        line: 413
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 435,
            column: 4
          },
          end: {
            line: 435,
            column: 5
          }
        },
        loc: {
          start: {
            line: 435,
            column: 29
          },
          end: {
            line: 444,
            column: 5
          }
        },
        line: 435
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 445,
            column: 4
          },
          end: {
            line: 445,
            column: 5
          }
        },
        loc: {
          start: {
            line: 445,
            column: 29
          },
          end: {
            line: 452,
            column: 5
          }
        },
        line: 445
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 453,
            column: 4
          },
          end: {
            line: 453,
            column: 5
          }
        },
        loc: {
          start: {
            line: 453,
            column: 27
          },
          end: {
            line: 464,
            column: 5
          }
        },
        line: 453
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 454,
            column: 30
          },
          end: {
            line: 454,
            column: 31
          }
        },
        loc: {
          start: {
            line: 454,
            column: 36
          },
          end: {
            line: 462,
            column: 9
          }
        },
        line: 454
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 465,
            column: 4
          },
          end: {
            line: 465,
            column: 5
          }
        },
        loc: {
          start: {
            line: 465,
            column: 23
          },
          end: {
            line: 479,
            column: 5
          }
        },
        line: 465
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 480,
            column: 4
          },
          end: {
            line: 480,
            column: 5
          }
        },
        loc: {
          start: {
            line: 480,
            column: 28
          },
          end: {
            line: 507,
            column: 5
          }
        },
        line: 480
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 508,
            column: 4
          },
          end: {
            line: 508,
            column: 5
          }
        },
        loc: {
          start: {
            line: 508,
            column: 32
          },
          end: {
            line: 515,
            column: 5
          }
        },
        line: 508
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 15,
            column: 8
          },
          end: {
            line: 17,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 15,
            column: 8
          },
          end: {
            line: 17,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 15
      },
      "1": {
        loc: {
          start: {
            line: 22,
            column: 8
          },
          end: {
            line: 24,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 8
          },
          end: {
            line: 24,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "2": {
        loc: {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 33,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 33,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "3": {
        loc: {
          start: {
            line: 30,
            column: 12
          },
          end: {
            line: 32,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 12
          },
          end: {
            line: 32,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "4": {
        loc: {
          start: {
            line: 78,
            column: 23
          },
          end: {
            line: 78,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 78,
            column: 23
          },
          end: {
            line: 78,
            column: 46
          }
        }, {
          start: {
            line: 78,
            column: 50
          },
          end: {
            line: 78,
            column: 59
          }
        }],
        line: 78
      },
      "5": {
        loc: {
          start: {
            line: 86,
            column: 32
          },
          end: {
            line: 86,
            column: 100
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 86,
            column: 57
          },
          end: {
            line: 86,
            column: 62
          }
        }, {
          start: {
            line: 86,
            column: 65
          },
          end: {
            line: 86,
            column: 100
          }
        }],
        line: 86
      },
      "6": {
        loc: {
          start: {
            line: 101,
            column: 8
          },
          end: {
            line: 103,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 101,
            column: 8
          },
          end: {
            line: 103,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 101
      },
      "7": {
        loc: {
          start: {
            line: 115,
            column: 8
          },
          end: {
            line: 118,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 115,
            column: 8
          },
          end: {
            line: 118,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 115
      },
      "8": {
        loc: {
          start: {
            line: 128,
            column: 12
          },
          end: {
            line: 130,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 128,
            column: 12
          },
          end: {
            line: 130,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 128
      },
      "9": {
        loc: {
          start: {
            line: 128,
            column: 16
          },
          end: {
            line: 128,
            column: 93
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 128,
            column: 74
          },
          end: {
            line: 128,
            column: 80
          }
        }, {
          start: {
            line: 128,
            column: 83
          },
          end: {
            line: 128,
            column: 93
          }
        }],
        line: 128
      },
      "10": {
        loc: {
          start: {
            line: 128,
            column: 16
          },
          end: {
            line: 128,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 128,
            column: 16
          },
          end: {
            line: 128,
            column: 54
          }
        }, {
          start: {
            line: 128,
            column: 58
          },
          end: {
            line: 128,
            column: 71
          }
        }],
        line: 128
      },
      "11": {
        loc: {
          start: {
            line: 135,
            column: 22
          },
          end: {
            line: 135,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 135,
            column: 22
          },
          end: {
            line: 135,
            column: 35
          }
        }, {
          start: {
            line: 135,
            column: 39
          },
          end: {
            line: 135,
            column: 45
          }
        }],
        line: 135
      },
      "12": {
        loc: {
          start: {
            line: 141,
            column: 12
          },
          end: {
            line: 145,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 141,
            column: 12
          },
          end: {
            line: 145,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 141
      },
      "13": {
        loc: {
          start: {
            line: 152,
            column: 33
          },
          end: {
            line: 152,
            column: 99
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 152,
            column: 58
          },
          end: {
            line: 152,
            column: 63
          }
        }, {
          start: {
            line: 152,
            column: 66
          },
          end: {
            line: 152,
            column: 99
          }
        }],
        line: 152
      },
      "14": {
        loc: {
          start: {
            line: 165,
            column: 23
          },
          end: {
            line: 165,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 165,
            column: 23
          },
          end: {
            line: 165,
            column: 46
          }
        }, {
          start: {
            line: 165,
            column: 50
          },
          end: {
            line: 165,
            column: 59
          }
        }],
        line: 165
      },
      "15": {
        loc: {
          start: {
            line: 172,
            column: 12
          },
          end: {
            line: 174,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 172,
            column: 12
          },
          end: {
            line: 174,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 172
      },
      "16": {
        loc: {
          start: {
            line: 172,
            column: 16
          },
          end: {
            line: 172,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 172,
            column: 16
          },
          end: {
            line: 172,
            column: 25
          }
        }, {
          start: {
            line: 172,
            column: 29
          },
          end: {
            line: 172,
            column: 57
          }
        }],
        line: 172
      },
      "17": {
        loc: {
          start: {
            line: 176,
            column: 12
          },
          end: {
            line: 178,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 176,
            column: 12
          },
          end: {
            line: 178,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 176
      },
      "18": {
        loc: {
          start: {
            line: 186,
            column: 34
          },
          end: {
            line: 186,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 186,
            column: 59
          },
          end: {
            line: 186,
            column: 64
          }
        }, {
          start: {
            line: 186,
            column: 67
          },
          end: {
            line: 186,
            column: 109
          }
        }],
        line: 186
      },
      "19": {
        loc: {
          start: {
            line: 207,
            column: 15
          },
          end: {
            line: 207,
            column: 72
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 207,
            column: 32
          },
          end: {
            line: 207,
            column: 65
          }
        }, {
          start: {
            line: 207,
            column: 68
          },
          end: {
            line: 207,
            column: 72
          }
        }],
        line: 207
      },
      "20": {
        loc: {
          start: {
            line: 227,
            column: 60
          },
          end: {
            line: 227,
            column: 96
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 227,
            column: 86
          },
          end: {
            line: 227,
            column: 91
          }
        }, {
          start: {
            line: 227,
            column: 94
          },
          end: {
            line: 227,
            column: 96
          }
        }],
        line: 227
      },
      "21": {
        loc: {
          start: {
            line: 245,
            column: 12
          },
          end: {
            line: 247,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 245,
            column: 12
          },
          end: {
            line: 247,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 245
      },
      "22": {
        loc: {
          start: {
            line: 249,
            column: 12
          },
          end: {
            line: 266,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 249,
            column: 12
          },
          end: {
            line: 266,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 249
      },
      "23": {
        loc: {
          start: {
            line: 249,
            column: 16
          },
          end: {
            line: 249,
            column: 97
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 249,
            column: 74
          },
          end: {
            line: 249,
            column: 80
          }
        }, {
          start: {
            line: 249,
            column: 83
          },
          end: {
            line: 249,
            column: 97
          }
        }],
        line: 249
      },
      "24": {
        loc: {
          start: {
            line: 249,
            column: 16
          },
          end: {
            line: 249,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 249,
            column: 16
          },
          end: {
            line: 249,
            column: 54
          }
        }, {
          start: {
            line: 249,
            column: 58
          },
          end: {
            line: 249,
            column: 71
          }
        }],
        line: 249
      },
      "25": {
        loc: {
          start: {
            line: 251,
            column: 27
          },
          end: {
            line: 251,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 251,
            column: 27
          },
          end: {
            line: 251,
            column: 50
          }
        }, {
          start: {
            line: 251,
            column: 54
          },
          end: {
            line: 251,
            column: 62
          }
        }],
        line: 251
      },
      "26": {
        loc: {
          start: {
            line: 260,
            column: 27
          },
          end: {
            line: 260,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 260,
            column: 27
          },
          end: {
            line: 260,
            column: 50
          }
        }, {
          start: {
            line: 260,
            column: 54
          },
          end: {
            line: 260,
            column: 62
          }
        }],
        line: 260
      },
      "27": {
        loc: {
          start: {
            line: 263,
            column: 16
          },
          end: {
            line: 265,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 263,
            column: 16
          },
          end: {
            line: 265,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 263
      },
      "28": {
        loc: {
          start: {
            line: 269,
            column: 36
          },
          end: {
            line: 269,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 269,
            column: 61
          },
          end: {
            line: 269,
            column: 66
          }
        }, {
          start: {
            line: 269,
            column: 69
          },
          end: {
            line: 269,
            column: 109
          }
        }],
        line: 269
      },
      "29": {
        loc: {
          start: {
            line: 281,
            column: 8
          },
          end: {
            line: 283,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 281,
            column: 8
          },
          end: {
            line: 283,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 281
      },
      "30": {
        loc: {
          start: {
            line: 291,
            column: 24
          },
          end: {
            line: 291,
            column: 55
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 291,
            column: 45
          },
          end: {
            line: 291,
            column: 49
          }
        }, {
          start: {
            line: 291,
            column: 52
          },
          end: {
            line: 291,
            column: 55
          }
        }],
        line: 291
      },
      "31": {
        loc: {
          start: {
            line: 295,
            column: 8
          },
          end: {
            line: 297,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 295,
            column: 8
          },
          end: {
            line: 297,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 295
      },
      "32": {
        loc: {
          start: {
            line: 295,
            column: 12
          },
          end: {
            line: 295,
            column: 102
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 295,
            column: 12
          },
          end: {
            line: 295,
            column: 58
          }
        }, {
          start: {
            line: 295,
            column: 62
          },
          end: {
            line: 295,
            column: 102
          }
        }],
        line: 295
      },
      "33": {
        loc: {
          start: {
            line: 305,
            column: 8
          },
          end: {
            line: 307,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 305,
            column: 8
          },
          end: {
            line: 307,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 305
      },
      "34": {
        loc: {
          start: {
            line: 325,
            column: 8
          },
          end: {
            line: 327,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 325,
            column: 8
          },
          end: {
            line: 327,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 325
      },
      "35": {
        loc: {
          start: {
            line: 325,
            column: 12
          },
          end: {
            line: 325,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 325,
            column: 12
          },
          end: {
            line: 325,
            column: 27
          }
        }, {
          start: {
            line: 325,
            column: 31
          },
          end: {
            line: 325,
            column: 60
          }
        }],
        line: 325
      },
      "36": {
        loc: {
          start: {
            line: 358,
            column: 8
          },
          end: {
            line: 360,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 358,
            column: 8
          },
          end: {
            line: 360,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 358
      },
      "37": {
        loc: {
          start: {
            line: 379,
            column: 8
          },
          end: {
            line: 384,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 379,
            column: 8
          },
          end: {
            line: 384,
            column: 9
          }
        }, {
          start: {
            line: 382,
            column: 13
          },
          end: {
            line: 384,
            column: 9
          }
        }],
        line: 379
      },
      "38": {
        loc: {
          start: {
            line: 382,
            column: 13
          },
          end: {
            line: 384,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 382,
            column: 13
          },
          end: {
            line: 384,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 382
      },
      "39": {
        loc: {
          start: {
            line: 388,
            column: 19
          },
          end: {
            line: 388,
            column: 83
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 388,
            column: 33
          },
          end: {
            line: 388,
            column: 43
          }
        }, {
          start: {
            line: 388,
            column: 46
          },
          end: {
            line: 388,
            column: 83
          }
        }],
        line: 388
      },
      "40": {
        loc: {
          start: {
            line: 388,
            column: 46
          },
          end: {
            line: 388,
            column: 83
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 388,
            column: 61
          },
          end: {
            line: 388,
            column: 71
          }
        }, {
          start: {
            line: 388,
            column: 74
          },
          end: {
            line: 388,
            column: 83
          }
        }],
        line: 388
      },
      "41": {
        loc: {
          start: {
            line: 393,
            column: 31
          },
          end: {
            line: 393,
            column: 74
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 393,
            column: 53
          },
          end: {
            line: 393,
            column: 63
          }
        }, {
          start: {
            line: 393,
            column: 66
          },
          end: {
            line: 393,
            column: 74
          }
        }],
        line: 393
      },
      "42": {
        loc: {
          start: {
            line: 394,
            column: 32
          },
          end: {
            line: 394,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 394,
            column: 46
          },
          end: {
            line: 394,
            column: 52
          }
        }, {
          start: {
            line: 394,
            column: 55
          },
          end: {
            line: 394,
            column: 88
          }
        }],
        line: 394
      },
      "43": {
        loc: {
          start: {
            line: 394,
            column: 55
          },
          end: {
            line: 394,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 394,
            column: 70
          },
          end: {
            line: 394,
            column: 79
          }
        }, {
          start: {
            line: 394,
            column: 82
          },
          end: {
            line: 394,
            column: 88
          }
        }],
        line: 394
      },
      "44": {
        loc: {
          start: {
            line: 401,
            column: 8
          },
          end: {
            line: 411,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 401,
            column: 8
          },
          end: {
            line: 411,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 401
      },
      "45": {
        loc: {
          start: {
            line: 401,
            column: 12
          },
          end: {
            line: 401,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 401,
            column: 12
          },
          end: {
            line: 401,
            column: 57
          }
        }, {
          start: {
            line: 401,
            column: 61
          },
          end: {
            line: 401,
            column: 79
          }
        }],
        line: 401
      },
      "46": {
        loc: {
          start: {
            line: 404,
            column: 23
          },
          end: {
            line: 404,
            column: 64
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 404,
            column: 45
          },
          end: {
            line: 404,
            column: 51
          }
        }, {
          start: {
            line: 404,
            column: 54
          },
          end: {
            line: 404,
            column: 64
          }
        }],
        line: 404
      },
      "47": {
        loc: {
          start: {
            line: 433,
            column: 15
          },
          end: {
            line: 433,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 433,
            column: 15
          },
          end: {
            line: 433,
            column: 39
          }
        }, {
          start: {
            line: 433,
            column: 43
          },
          end: {
            line: 433,
            column: 45
          }
        }],
        line: 433
      },
      "48": {
        loc: {
          start: {
            line: 440,
            column: 43
          },
          end: {
            line: 440,
            column: 130
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 440,
            column: 44
          },
          end: {
            line: 440,
            column: 115
          }
        }, {
          start: {
            line: 440,
            column: 120
          },
          end: {
            line: 440,
            column: 130
          }
        }],
        line: 440
      },
      "49": {
        loc: {
          start: {
            line: 440,
            column: 44
          },
          end: {
            line: 440,
            column: 115
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 440,
            column: 94
          },
          end: {
            line: 440,
            column: 100
          }
        }, {
          start: {
            line: 440,
            column: 103
          },
          end: {
            line: 440,
            column: 115
          }
        }],
        line: 440
      },
      "50": {
        loc: {
          start: {
            line: 440,
            column: 44
          },
          end: {
            line: 440,
            column: 91
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 440,
            column: 44
          },
          end: {
            line: 440,
            column: 74
          }
        }, {
          start: {
            line: 440,
            column: 78
          },
          end: {
            line: 440,
            column: 91
          }
        }],
        line: 440
      },
      "51": {
        loc: {
          start: {
            line: 456,
            column: 12
          },
          end: {
            line: 460,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 456,
            column: 12
          },
          end: {
            line: 460,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 456
      },
      "52": {
        loc: {
          start: {
            line: 476,
            column: 8
          },
          end: {
            line: 478,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 476,
            column: 8
          },
          end: {
            line: 478,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 476
      },
      "53": {
        loc: {
          start: {
            line: 476,
            column: 12
          },
          end: {
            line: 476,
            column: 106
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 476,
            column: 12
          },
          end: {
            line: 476,
            column: 56
          }
        }, {
          start: {
            line: 476,
            column: 60
          },
          end: {
            line: 476,
            column: 106
          }
        }],
        line: 476
      },
      "54": {
        loc: {
          start: {
            line: 481,
            column: 8
          },
          end: {
            line: 483,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 481,
            column: 8
          },
          end: {
            line: 483,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 481
      },
      "55": {
        loc: {
          start: {
            line: 493,
            column: 12
          },
          end: {
            line: 495,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 493,
            column: 12
          },
          end: {
            line: 495,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 493
      },
      "56": {
        loc: {
          start: {
            line: 502,
            column: 12
          },
          end: {
            line: 505,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 502,
            column: 12
          },
          end: {
            line: 505,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 502
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/dikshantvashistha/PrepBettr/lib/azure-ai-foundry/voice/voice-agent-bridge.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/dikshantvashistha/PrepBettr/lib/azure-ai-foundry/voice/voice-agent-bridge.ts"],
      sourcesContent: ["/**\n * Voice Agent Bridge\n * Connects VoiceSession with AgentOrchestrator to enable voice-controlled agent interactions\n */\n\nimport { VoiceSession } from './voice-session';\nimport { \n  VoiceEventTypes, \n  VoiceEventHandler, \n  BridgeState, \n  AgentBridgeConfig, \n  SentimentAnalysis,\n  TranscriptEntry,\n  SessionRecording,\n  AudioChunk\n} from './types';\nimport { VoiceTelemetry } from './voice-telemetry';\n\n// Event emitter for voice bridge\nclass VoiceEventEmitter {\n  private handlers: Map<string, VoiceEventHandler<any>[]> = new Map();\n\n  on<T extends keyof VoiceEventTypes>(event: T, handler: VoiceEventHandler<T>): void {\n    if (!this.handlers.has(event)) {\n      this.handlers.set(event, []);\n    }\n    this.handlers.get(event)!.push(handler);\n  }\n\n  emit<T extends keyof VoiceEventTypes>(event: T, data: VoiceEventTypes[T]): void {\n    const handlers = this.handlers.get(event);\n    if (handlers) {\n      handlers.forEach(handler => handler(data));\n    }\n  }\n\n  off<T extends keyof VoiceEventTypes>(event: T, handler: VoiceEventHandler<T>): void {\n    const handlers = this.handlers.get(event);\n    if (handlers) {\n      const index = handlers.indexOf(handler);\n      if (index !== -1) {\n        handlers.splice(index, 1);\n      }\n    }\n  }\n}\n\nexport class VoiceAgentBridge extends VoiceEventEmitter {\n  private voiceSession: VoiceSession;\n  private agentOrchestrator: any; // Will be typed when AgentOrchestrator is implemented\n  private config: AgentBridgeConfig;\n  private state: BridgeState;\n  private transcript: TranscriptEntry[] = [];\n  private recording: SessionRecording | null = null;\n\n  constructor(\n    voiceSession: VoiceSession, \n    agentOrchestrator: any, \n    config?: Partial<AgentBridgeConfig>\n  ) {\n    super();\n    \n    this.voiceSession = voiceSession;\n    this.agentOrchestrator = agentOrchestrator;\n    this.config = {\n      sessionTimeout: 1800000, // 30 minutes\n      maxRetries: 3,\n      errorRecoveryMode: 'graceful',\n      sentimentMonitoring: true,\n      recordingEnabled: true,\n      transcriptStorage: 'both',\n      ...config\n    };\n\n    this.state = {\n      currentAgent: null,\n      sessionActive: false,\n      lastActivity: Date.now(),\n      pendingHandoff: false,\n      errorCount: 0,\n      recovery: {\n        inProgress: false,\n        attempts: 0,\n        lastAttempt: 0\n      }\n    };\n\n    this.setupVoiceSessionHandlers();\n    this.initializeRecording();\n\n    // Use VoiceTelemetry.startSession instead of trackSessionCreated\n    VoiceTelemetry.startSession(this.voiceSession.sessionId);\n\n    console.log('\uD83C\uDF09 [VOICE BRIDGE] Bridge created', {\n      sessionId: this.voiceSession.sessionId,\n      config: this.config\n    });\n  }\n\n  /**\n   * Start the voice bridge and begin listening\n   */\n  public async start(): Promise<void> {\n    try {\n      console.log('\uD83D\uDE80 [VOICE BRIDGE] Starting bridge', {\n        sessionId: this.voiceSession.sessionId\n      });\n\n      await this.voiceSession.start();\n      this.state.sessionActive = true;\n      this.state.lastActivity = Date.now();\n\n      this.emit('session:started', {\n        sessionId: this.voiceSession.sessionId,\n        agent: this.state.currentAgent || 'initial'\n      });\n\n      // Set up activity timeout\n      this.setupActivityTimeout();\n\n      // Session already tracked in constructor, no need to track again\n\n      console.log('\u2705 [VOICE BRIDGE] Bridge started successfully');\n\n    } catch (error) {\n      const bridgeError = error instanceof Error ? error : new Error('Failed to start bridge');\n      \n      VoiceTelemetry.trackError(bridgeError, this.voiceSession.sessionId, 'BRIDGE_START_FAILED');\n\n      this.handleError(bridgeError);\n      throw bridgeError;\n    }\n  }\n\n  /**\n   * Stop the voice bridge\n   */\n  public stop(): void {\n    console.log('\uD83D\uDED1 [VOICE BRIDGE] Stopping bridge', {\n      sessionId: this.voiceSession.sessionId\n    });\n\n    this.state.sessionActive = false;\n    this.voiceSession.stop();\n\n    if (this.recording) {\n      this.finalizeRecording();\n    }\n\n    this.emit('session:ended', {\n      sessionId: this.voiceSession.sessionId,\n      reason: 'user_stopped'\n    });\n\n    console.log('\uD83C\uDFC1 [VOICE BRIDGE] Bridge stopped');\n  }\n\n  /**\n   * Handle agent handoff\n   */\n  public async handoffToAgent(agentName: string, context?: any): Promise<void> {\n    if (this.state.pendingHandoff) {\n      console.warn('\u26A0\uFE0F [VOICE BRIDGE] Handoff already in progress');\n      return;\n    }\n\n    try {\n      this.state.pendingHandoff = true;\n      const previousAgent = this.state.currentAgent;\n\n      console.log('\uD83D\uDD04 [VOICE BRIDGE] Handing off to agent', {\n        from: previousAgent,\n        to: agentName,\n        sessionId: this.voiceSession.sessionId\n      });\n\n      // Notify agent orchestrator about handoff\n      if (this.agentOrchestrator?.handoff) {\n        await this.agentOrchestrator.handoff(agentName, context);\n      }\n\n      this.state.currentAgent = agentName;\n      this.state.pendingHandoff = false;\n      this.state.lastActivity = Date.now();\n\n      this.emit('agent:handoff', {\n        from: previousAgent || 'none',\n        to: agentName,\n        context\n      });\n\n      // Update voice session with agent-specific settings if available\n      const agentVoiceSettings = this.getAgentVoiceSettings(agentName);\n      if (agentVoiceSettings) {\n        // TODO: Implement updateSettings method in VoiceSession\n        console.log('\uD83C\uDF9B\uFE0F [VOICE BRIDGE] Would update voice settings for agent:', agentName, agentVoiceSettings);\n        // this.voiceSession.updateSettings(agentVoiceSettings);\n      }\n\n      console.log('\u2705 [VOICE BRIDGE] Handoff completed', {\n        currentAgent: agentName\n      });\n\n    } catch (error) {\n      this.state.pendingHandoff = false;\n      const handoffError = error instanceof Error ? error : new Error('Agent handoff failed');\n      \n      VoiceTelemetry.trackError(handoffError, this.voiceSession.sessionId, 'AGENT_HANDOFF_FAILED');\n\n      this.handleError(handoffError);\n      throw handoffError;\n    }\n  }\n\n  /**\n   * Send synthesized audio response\n   */\n  public async sendAudioResponse(text: string, audioData?: string): Promise<void> {\n    try {\n      this.state.lastActivity = Date.now();\n\n      this.emit('agent:response', {\n        agent: this.state.currentAgent || 'unknown',\n        text,\n        audioData\n      });\n\n      // Add to transcript\n      this.addToTranscript('agent', text);\n\n      // Add to recording if enabled\n      if (audioData && this.config.recordingEnabled) {\n        this.addAudioToRecording('agent', audioData);\n      }\n\n      // Perform sentiment analysis if enabled\n      if (this.config.sentimentMonitoring) {\n        this.performSentimentAnalysis(text, 'agent');\n      }\n\n      console.log('\uD83C\uDFB5 [VOICE BRIDGE] Audio response sent', {\n        agent: this.state.currentAgent,\n        textLength: text.length,\n        hasAudio: !!audioData\n      });\n\n    } catch (error) {\n      const responseError = error instanceof Error ? error : new Error('Failed to send audio response');\n      VoiceTelemetry.trackError(responseError, this.voiceSession.sessionId, 'AUDIO_RESPONSE_FAILED');\n      this.handleError(responseError);\n    }\n  }\n\n  /**\n   * Get current session state\n   */\n  public getState(): BridgeState {\n    return { ...this.state };\n  }\n\n  /**\n   * Get current transcript\n   */\n  public getTranscript(): TranscriptEntry[] {\n    return [...this.transcript];\n  }\n\n  /**\n   * Get current recording\n   */\n  public getRecording(): SessionRecording | null {\n    return this.recording ? { ...this.recording } : null;\n  }\n\n  // ===== PRIVATE METHODS =====\n\n  private setupVoiceSessionHandlers(): void {\n    // Handle transcript from voice session\n    this.voiceSession.onTranscript((event) => {\n      this.handleUserTranscript(event.text);\n    });\n\n    // Handle audio responses using onResponse callback\n    this.voiceSession.onResponse((event) => {\n      this.handleAudioResponse(event.audioData.toString()); // Convert Blob to string if needed\n    });\n\n    // TODO: Add session ready, error, and disconnect handlers when VoiceSession API is complete\n    console.log('\uD83D\uDD17 [VOICE BRIDGE] Voice session handlers setup complete');\n  }\n\n  private async handleUserTranscript(transcript: string): Promise<void> {\n    try {\n      this.state.lastActivity = Date.now();\n\n      console.log('\uD83D\uDCDD [VOICE BRIDGE] User transcript received', {\n        transcript: transcript.substring(0, 100) + (transcript.length > 100 ? '...' : ''),\n        length: transcript.length\n      });\n\n      // Add to transcript\n      this.addToTranscript('user', transcript);\n\n      // Emit transcript event\n      const transcriptEntry: TranscriptEntry = {\n        id: `transcript-${Date.now()}`,\n        timestamp: Date.now(),\n        speaker: 'user',\n        text: transcript,\n        confidence: 0.95 // Will be real confidence from Azure\n      };\n\n      this.emit('transcript:final', {\n        sessionId: this.voiceSession.sessionId,\n        entry: transcriptEntry\n      });\n\n      // Perform sentiment analysis if enabled\n      if (this.config.sentimentMonitoring) {\n        this.performSentimentAnalysis(transcript, 'user');\n      }\n\n      // Route to agent orchestrator if available\n      if (this.agentOrchestrator?.handleInput) {\n        this.emit('agent:thinking', {\n          agent: this.state.currentAgent || 'system',\n          isThinking: true\n        });\n\n        const response = await this.agentOrchestrator.handleInput(transcript, {\n          sessionId: this.voiceSession.sessionId,\n          currentAgent: this.state.currentAgent,\n          context: this.getConversationContext()\n        });\n\n        this.emit('agent:thinking', {\n          agent: this.state.currentAgent || 'system',\n          isThinking: false\n        });\n\n        if (response) {\n          await this.sendAudioResponse(response.text, response.audioData);\n        }\n      }\n\n    } catch (error) {\n      const transcriptError = error instanceof Error ? error : new Error('Failed to handle transcript');\n      VoiceTelemetry.trackError(transcriptError, this.voiceSession.sessionId, 'TRANSCRIPT_PROCESSING_FAILED');\n      this.handleError(transcriptError);\n    }\n  }\n\n  private handleAudioResponse(audioData: string): void {\n    this.state.lastActivity = Date.now();\n\n    this.emit('audio:synthesis:complete', {\n      sessionId: this.voiceSession.sessionId,\n      audioData\n    });\n\n    // Add to recording if enabled\n    if (this.config.recordingEnabled) {\n      this.addAudioToRecording('agent', audioData);\n    }\n  }\n\n  private addToTranscript(speaker: 'user' | 'agent', text: string): void {\n    const entry: TranscriptEntry = {\n      id: `transcript-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n      timestamp: Date.now(),\n      speaker,\n      text,\n      confidence: speaker === 'user' ? 0.95 : 1.0\n    };\n\n    this.transcript.push(entry);\n\n    // Store transcript based on configuration\n    if (this.config.transcriptStorage === 'persistent' || this.config.transcriptStorage === 'both') {\n      this.persistTranscript(entry);\n    }\n\n    console.log(`\uD83D\uDCDD [VOICE BRIDGE] Added to transcript`, {\n      speaker,\n      length: text.length,\n      totalEntries: this.transcript.length\n    });\n  }\n\n  private initializeRecording(): void {\n    if (!this.config.recordingEnabled) {\n      return;\n    }\n\n    this.recording = {\n      sessionId: this.voiceSession.sessionId,\n      startTime: Date.now(),\n      totalDuration: 0,\n      chunks: [],\n      storageLocation: {\n        containerName: 'voice-recordings',\n        blobName: `session-${this.voiceSession.sessionId}-${Date.now()}.wav`\n      },\n      processingStatus: 'uploading'\n    };\n\n    console.log('\uD83C\uDF99\uFE0F [VOICE BRIDGE] Recording initialized', {\n      sessionId: this.voiceSession.sessionId,\n      blobName: this.recording.storageLocation.blobName\n    });\n  }\n\n  private addAudioToRecording(speaker: 'user' | 'agent', audioData: string): void {\n    if (!this.recording || !this.config.recordingEnabled) {\n      return;\n    }\n\n    try {\n      // Decode base64 audio data\n      const audioBuffer = this.base64ToArrayBuffer(audioData);\n      \n      const chunk: AudioChunk = {\n        id: `chunk-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n        sessionId: this.voiceSession.sessionId,\n        timestamp: Date.now(),\n        duration: 1000, // Will be calculated based on audio data\n        format: 'pcm16',\n        sampleRate: 16000,\n        data: audioBuffer,\n        metadata: {\n          speaker,\n          quality: 'medium',\n          noiseLevel: 0.1\n        }\n      };\n\n      this.recording.chunks.push(chunk);\n      this.recording.totalDuration += chunk.duration;\n\n      console.log('\uD83C\uDFB5 [VOICE BRIDGE] Audio chunk added to recording', {\n        speaker,\n        chunkId: chunk.id,\n        totalChunks: this.recording.chunks.length\n      });\n\n    } catch (error) {\n      console.error('\u274C [VOICE BRIDGE] Failed to add audio to recording:', error);\n    }\n  }\n\n  private finalizeRecording(): void {\n    if (!this.recording) {\n      return;\n    }\n\n    this.recording.endTime = Date.now();\n    this.recording.processingStatus = 'processing';\n\n    // In a real implementation, this would upload to blob storage\n    console.log('\uD83D\uDCE6 [VOICE BRIDGE] Recording finalized', {\n      sessionId: this.voiceSession.sessionId,\n      duration: this.recording.totalDuration,\n      chunks: this.recording.chunks.length\n    });\n  }\n\n  private performSentimentAnalysis(text: string, speaker: 'user' | 'agent'): void {\n    // Simple sentiment analysis implementation\n    // In production, this would use Azure Cognitive Services\n    const stressWords = ['nervous', 'worried', 'difficult', 'hard', 'struggle', 'confused', 'stuck'];\n    const positiveWords = ['good', 'great', 'excellent', 'confident', 'sure', 'excited', 'happy'];\n    \n    const words = text.toLowerCase().split(' ');\n    const stressWordCount = words.filter(word => stressWords.includes(word)).length;\n    const positiveWordCount = words.filter(word => positiveWords.includes(word)).length;\n    \n    let score = 0;\n    if (positiveWordCount > stressWordCount) {\n      score = 0.7;\n    } else if (stressWordCount > positiveWordCount) {\n      score = -0.5;\n    }\n\n    const sentiment: SentimentAnalysis = {\n      score,\n      magnitude: Math.abs(score),\n      label: score > 0.5 ? 'positive' : score < -0.3 ? 'negative' : 'neutral',\n      confidence: 0.8,\n      stressIndicators: {\n        hasHighStressWords: stressWordCount > 0,\n        stressWords: words.filter(word => stressWords.includes(word)),\n        speechPattern: stressWordCount > 2 ? 'hesitant' : 'normal',\n        emotionalState: score > 0.5 ? 'calm' : score < -0.3 ? 'nervous' : 'calm'\n      }\n    };\n\n    this.emit('sentiment:analysis', {\n      sessionId: this.voiceSession.sessionId,\n      sentiment\n    });\n\n    if (sentiment.stressIndicators.hasHighStressWords && speaker === 'user') {\n      this.emit('sentiment:stress:detected', {\n        sessionId: this.voiceSession.sessionId,\n        level: stressWordCount > 2 ? 'high' : 'moderate',\n        suggestions: [\n          'Consider taking a brief pause',\n          'Remind the candidate to take their time',\n          'Ask if they need clarification'\n        ]\n      });\n    }\n  }\n\n  private getAgentVoiceSettings(agentName: string): Partial<any> {\n    // Return agent-specific voice settings\n    // This would be expanded when agent classes are implemented\n    const agentSettings: Record<string, any> = {\n      'technical': {\n        voice: 'en-US-JennyNeural',\n        temperature: 0.7,\n        responseStyle: 'detailed'\n      },\n      'behavioral': {\n        voice: 'en-US-AvaMultilingualNeural',\n        temperature: 0.8,\n        responseStyle: 'empathetic'\n      },\n      'general': {\n        voice: 'en-US-AriaNeural',\n        temperature: 0.6,\n        responseStyle: 'conversational'\n      }\n    };\n\n    return agentSettings[agentName] || {};\n  }\n\n  private getConversationContext(): any {\n    return {\n      transcriptLength: this.transcript.length,\n      lastMessages: this.transcript.slice(-5),\n      sessionDuration: Date.now() - (this.recording?.startTime || Date.now()),\n      currentAgent: this.state.currentAgent,\n      errorCount: this.state.errorCount\n    };\n  }\n\n  private persistTranscript(entry: TranscriptEntry): void {\n    // In production, this would save to persistent storage\n    console.log('\uD83D\uDCBE [VOICE BRIDGE] Transcript entry persisted', {\n      id: entry.id,\n      speaker: entry.speaker,\n      length: entry.text.length\n    });\n  }\n\n  private setupActivityTimeout(): void {\n    const checkActivity = () => {\n      const timeSinceActivity = Date.now() - this.state.lastActivity;\n      \n      if (timeSinceActivity > this.config.sessionTimeout) {\n        console.log('\u23F0 [VOICE BRIDGE] Session timeout reached');\n        this.stop();\n        return;\n      }\n\n      setTimeout(checkActivity, 60000); // Check every minute\n    };\n\n    setTimeout(checkActivity, 60000);\n  }\n\n  private handleError(error: Error): void {\n    this.state.errorCount++;\n    \n    console.error('\uD83D\uDCA5 [VOICE BRIDGE] Error occurred', {\n      message: error.message,\n      errorCount: this.state.errorCount\n    });\n\n    this.emit('session:error', {\n      sessionId: this.voiceSession.sessionId,\n      error\n    });\n\n    // Implement recovery based on configuration\n    if (this.config.errorRecoveryMode === 'graceful' && this.state.errorCount < this.config.maxRetries) {\n      this.attemptRecovery();\n    }\n  }\n\n  private async attemptRecovery(): Promise<void> {\n    if (this.state.recovery.inProgress) {\n      return;\n    }\n\n    this.state.recovery.inProgress = true;\n    this.state.recovery.attempts++;\n    this.state.recovery.lastAttempt = Date.now();\n\n    try {\n      console.log('\uD83D\uDD27 [VOICE BRIDGE] Attempting recovery', {\n        attempt: this.state.recovery.attempts,\n        maxRetries: this.config.maxRetries\n      });\n\n      // Simple recovery: try to reconnect voice session\n      if (this.voiceSession.getState() !== 'active') {\n        await this.voiceSession.start();\n      }\n\n      this.state.recovery.inProgress = false;\n      console.log('\u2705 [VOICE BRIDGE] Recovery successful');\n\n    } catch (error) {\n      this.state.recovery.inProgress = false;\n      console.error('\u274C [VOICE BRIDGE] Recovery failed:', error);\n      \n      if (this.state.recovery.attempts >= this.config.maxRetries) {\n        console.error('\uD83D\uDEA8 [VOICE BRIDGE] Max recovery attempts reached, stopping bridge');\n        this.stop();\n      }\n    }\n  }\n\n  private base64ToArrayBuffer(base64: string): ArrayBuffer {\n    const binaryString = atob(base64);\n    const bytes = new Uint8Array(binaryString.length);\n    for (let i = 0; i < binaryString.length; i++) {\n      bytes[i] = binaryString.charCodeAt(i);\n    }\n    return bytes.buffer;\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "5baa0165d73a71998a4bf54cc7043fd46b72569f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1dvhg9su75 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1dvhg9su75();
cov_1dvhg9su75().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1dvhg9su75().s[1]++;
exports.VoiceAgentBridge = void 0;
const voice_telemetry_1 =
/* istanbul ignore next */
(cov_1dvhg9su75().s[2]++, require("./voice-telemetry"));
// Event emitter for voice bridge
class VoiceEventEmitter {
  constructor() {
    /* istanbul ignore next */
    cov_1dvhg9su75().f[0]++;
    cov_1dvhg9su75().s[3]++;
    this.handlers = new Map();
  }
  on(event, handler) {
    /* istanbul ignore next */
    cov_1dvhg9su75().f[1]++;
    cov_1dvhg9su75().s[4]++;
    if (!this.handlers.has(event)) {
      /* istanbul ignore next */
      cov_1dvhg9su75().b[0][0]++;
      cov_1dvhg9su75().s[5]++;
      this.handlers.set(event, []);
    } else
    /* istanbul ignore next */
    {
      cov_1dvhg9su75().b[0][1]++;
    }
    cov_1dvhg9su75().s[6]++;
    this.handlers.get(event).push(handler);
  }
  emit(event, data) {
    /* istanbul ignore next */
    cov_1dvhg9su75().f[2]++;
    const handlers =
    /* istanbul ignore next */
    (cov_1dvhg9su75().s[7]++, this.handlers.get(event));
    /* istanbul ignore next */
    cov_1dvhg9su75().s[8]++;
    if (handlers) {
      /* istanbul ignore next */
      cov_1dvhg9su75().b[1][0]++;
      cov_1dvhg9su75().s[9]++;
      handlers.forEach(handler => {
        /* istanbul ignore next */
        cov_1dvhg9su75().f[3]++;
        cov_1dvhg9su75().s[10]++;
        return handler(data);
      });
    } else
    /* istanbul ignore next */
    {
      cov_1dvhg9su75().b[1][1]++;
    }
  }
  off(event, handler) {
    /* istanbul ignore next */
    cov_1dvhg9su75().f[4]++;
    const handlers =
    /* istanbul ignore next */
    (cov_1dvhg9su75().s[11]++, this.handlers.get(event));
    /* istanbul ignore next */
    cov_1dvhg9su75().s[12]++;
    if (handlers) {
      /* istanbul ignore next */
      cov_1dvhg9su75().b[2][0]++;
      const index =
      /* istanbul ignore next */
      (cov_1dvhg9su75().s[13]++, handlers.indexOf(handler));
      /* istanbul ignore next */
      cov_1dvhg9su75().s[14]++;
      if (index !== -1) {
        /* istanbul ignore next */
        cov_1dvhg9su75().b[3][0]++;
        cov_1dvhg9su75().s[15]++;
        handlers.splice(index, 1);
      } else
      /* istanbul ignore next */
      {
        cov_1dvhg9su75().b[3][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1dvhg9su75().b[2][1]++;
    }
  }
}
class VoiceAgentBridge extends VoiceEventEmitter {
  constructor(voiceSession, agentOrchestrator, config) {
    /* istanbul ignore next */
    cov_1dvhg9su75().f[5]++;
    cov_1dvhg9su75().s[16]++;
    super();
    /* istanbul ignore next */
    cov_1dvhg9su75().s[17]++;
    this.transcript = [];
    /* istanbul ignore next */
    cov_1dvhg9su75().s[18]++;
    this.recording = null;
    /* istanbul ignore next */
    cov_1dvhg9su75().s[19]++;
    this.voiceSession = voiceSession;
    /* istanbul ignore next */
    cov_1dvhg9su75().s[20]++;
    this.agentOrchestrator = agentOrchestrator;
    /* istanbul ignore next */
    cov_1dvhg9su75().s[21]++;
    this.config = Object.assign({
      sessionTimeout: 1800000,
      maxRetries: 3,
      errorRecoveryMode: 'graceful',
      sentimentMonitoring: true,
      recordingEnabled: true,
      transcriptStorage: 'both'
    }, config);
    /* istanbul ignore next */
    cov_1dvhg9su75().s[22]++;
    this.state = {
      currentAgent: null,
      sessionActive: false,
      lastActivity: Date.now(),
      pendingHandoff: false,
      errorCount: 0,
      recovery: {
        inProgress: false,
        attempts: 0,
        lastAttempt: 0
      }
    };
    /* istanbul ignore next */
    cov_1dvhg9su75().s[23]++;
    this.setupVoiceSessionHandlers();
    /* istanbul ignore next */
    cov_1dvhg9su75().s[24]++;
    this.initializeRecording();
    // Use VoiceTelemetry.startSession instead of trackSessionCreated
    /* istanbul ignore next */
    cov_1dvhg9su75().s[25]++;
    voice_telemetry_1.VoiceTelemetry.startSession(this.voiceSession.sessionId);
    /* istanbul ignore next */
    cov_1dvhg9su75().s[26]++;
    console.log('🌉 [VOICE BRIDGE] Bridge created', {
      sessionId: this.voiceSession.sessionId,
      config: this.config
    });
  }
  /**
   * Start the voice bridge and begin listening
   */
  async start() {
    /* istanbul ignore next */
    cov_1dvhg9su75().f[6]++;
    cov_1dvhg9su75().s[27]++;
    try {
      /* istanbul ignore next */
      cov_1dvhg9su75().s[28]++;
      console.log('🚀 [VOICE BRIDGE] Starting bridge', {
        sessionId: this.voiceSession.sessionId
      });
      /* istanbul ignore next */
      cov_1dvhg9su75().s[29]++;
      await this.voiceSession.start();
      /* istanbul ignore next */
      cov_1dvhg9su75().s[30]++;
      this.state.sessionActive = true;
      /* istanbul ignore next */
      cov_1dvhg9su75().s[31]++;
      this.state.lastActivity = Date.now();
      /* istanbul ignore next */
      cov_1dvhg9su75().s[32]++;
      this.emit('session:started', {
        sessionId: this.voiceSession.sessionId,
        agent:
        /* istanbul ignore next */
        (cov_1dvhg9su75().b[4][0]++, this.state.currentAgent) ||
        /* istanbul ignore next */
        (cov_1dvhg9su75().b[4][1]++, 'initial')
      });
      // Set up activity timeout
      /* istanbul ignore next */
      cov_1dvhg9su75().s[33]++;
      this.setupActivityTimeout();
      // Session already tracked in constructor, no need to track again
      /* istanbul ignore next */
      cov_1dvhg9su75().s[34]++;
      console.log('✅ [VOICE BRIDGE] Bridge started successfully');
    } catch (error) {
      const bridgeError =
      /* istanbul ignore next */
      (cov_1dvhg9su75().s[35]++, error instanceof Error ?
      /* istanbul ignore next */
      (cov_1dvhg9su75().b[5][0]++, error) :
      /* istanbul ignore next */
      (cov_1dvhg9su75().b[5][1]++, new Error('Failed to start bridge')));
      /* istanbul ignore next */
      cov_1dvhg9su75().s[36]++;
      voice_telemetry_1.VoiceTelemetry.trackError(bridgeError, this.voiceSession.sessionId, 'BRIDGE_START_FAILED');
      /* istanbul ignore next */
      cov_1dvhg9su75().s[37]++;
      this.handleError(bridgeError);
      /* istanbul ignore next */
      cov_1dvhg9su75().s[38]++;
      throw bridgeError;
    }
  }
  /**
   * Stop the voice bridge
   */
  stop() {
    /* istanbul ignore next */
    cov_1dvhg9su75().f[7]++;
    cov_1dvhg9su75().s[39]++;
    console.log('🛑 [VOICE BRIDGE] Stopping bridge', {
      sessionId: this.voiceSession.sessionId
    });
    /* istanbul ignore next */
    cov_1dvhg9su75().s[40]++;
    this.state.sessionActive = false;
    /* istanbul ignore next */
    cov_1dvhg9su75().s[41]++;
    this.voiceSession.stop();
    /* istanbul ignore next */
    cov_1dvhg9su75().s[42]++;
    if (this.recording) {
      /* istanbul ignore next */
      cov_1dvhg9su75().b[6][0]++;
      cov_1dvhg9su75().s[43]++;
      this.finalizeRecording();
    } else
    /* istanbul ignore next */
    {
      cov_1dvhg9su75().b[6][1]++;
    }
    cov_1dvhg9su75().s[44]++;
    this.emit('session:ended', {
      sessionId: this.voiceSession.sessionId,
      reason: 'user_stopped'
    });
    /* istanbul ignore next */
    cov_1dvhg9su75().s[45]++;
    console.log('🏁 [VOICE BRIDGE] Bridge stopped');
  }
  /**
   * Handle agent handoff
   */
  async handoffToAgent(agentName, context) {
    /* istanbul ignore next */
    cov_1dvhg9su75().f[8]++;
    var _a;
    /* istanbul ignore next */
    cov_1dvhg9su75().s[46]++;
    if (this.state.pendingHandoff) {
      /* istanbul ignore next */
      cov_1dvhg9su75().b[7][0]++;
      cov_1dvhg9su75().s[47]++;
      console.warn('⚠️ [VOICE BRIDGE] Handoff already in progress');
      /* istanbul ignore next */
      cov_1dvhg9su75().s[48]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1dvhg9su75().b[7][1]++;
    }
    cov_1dvhg9su75().s[49]++;
    try {
      /* istanbul ignore next */
      cov_1dvhg9su75().s[50]++;
      this.state.pendingHandoff = true;
      const previousAgent =
      /* istanbul ignore next */
      (cov_1dvhg9su75().s[51]++, this.state.currentAgent);
      /* istanbul ignore next */
      cov_1dvhg9su75().s[52]++;
      console.log('🔄 [VOICE BRIDGE] Handing off to agent', {
        from: previousAgent,
        to: agentName,
        sessionId: this.voiceSession.sessionId
      });
      // Notify agent orchestrator about handoff
      /* istanbul ignore next */
      cov_1dvhg9su75().s[53]++;
      if (
      /* istanbul ignore next */
      (cov_1dvhg9su75().b[10][0]++, (_a = this.agentOrchestrator) === null) ||
      /* istanbul ignore next */
      (cov_1dvhg9su75().b[10][1]++, _a === void 0) ?
      /* istanbul ignore next */
      (cov_1dvhg9su75().b[9][0]++, void 0) :
      /* istanbul ignore next */
      (cov_1dvhg9su75().b[9][1]++, _a.handoff)) {
        /* istanbul ignore next */
        cov_1dvhg9su75().b[8][0]++;
        cov_1dvhg9su75().s[54]++;
        await this.agentOrchestrator.handoff(agentName, context);
      } else
      /* istanbul ignore next */
      {
        cov_1dvhg9su75().b[8][1]++;
      }
      cov_1dvhg9su75().s[55]++;
      this.state.currentAgent = agentName;
      /* istanbul ignore next */
      cov_1dvhg9su75().s[56]++;
      this.state.pendingHandoff = false;
      /* istanbul ignore next */
      cov_1dvhg9su75().s[57]++;
      this.state.lastActivity = Date.now();
      /* istanbul ignore next */
      cov_1dvhg9su75().s[58]++;
      this.emit('agent:handoff', {
        from:
        /* istanbul ignore next */
        (cov_1dvhg9su75().b[11][0]++, previousAgent) ||
        /* istanbul ignore next */
        (cov_1dvhg9su75().b[11][1]++, 'none'),
        to: agentName,
        context
      });
      // Update voice session with agent-specific settings if available
      const agentVoiceSettings =
      /* istanbul ignore next */
      (cov_1dvhg9su75().s[59]++, this.getAgentVoiceSettings(agentName));
      /* istanbul ignore next */
      cov_1dvhg9su75().s[60]++;
      if (agentVoiceSettings) {
        /* istanbul ignore next */
        cov_1dvhg9su75().b[12][0]++;
        cov_1dvhg9su75().s[61]++;
        // TODO: Implement updateSettings method in VoiceSession
        console.log('🎛️ [VOICE BRIDGE] Would update voice settings for agent:', agentName, agentVoiceSettings);
        // this.voiceSession.updateSettings(agentVoiceSettings);
      } else
      /* istanbul ignore next */
      {
        cov_1dvhg9su75().b[12][1]++;
      }
      cov_1dvhg9su75().s[62]++;
      console.log('✅ [VOICE BRIDGE] Handoff completed', {
        currentAgent: agentName
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1dvhg9su75().s[63]++;
      this.state.pendingHandoff = false;
      const handoffError =
      /* istanbul ignore next */
      (cov_1dvhg9su75().s[64]++, error instanceof Error ?
      /* istanbul ignore next */
      (cov_1dvhg9su75().b[13][0]++, error) :
      /* istanbul ignore next */
      (cov_1dvhg9su75().b[13][1]++, new Error('Agent handoff failed')));
      /* istanbul ignore next */
      cov_1dvhg9su75().s[65]++;
      voice_telemetry_1.VoiceTelemetry.trackError(handoffError, this.voiceSession.sessionId, 'AGENT_HANDOFF_FAILED');
      /* istanbul ignore next */
      cov_1dvhg9su75().s[66]++;
      this.handleError(handoffError);
      /* istanbul ignore next */
      cov_1dvhg9su75().s[67]++;
      throw handoffError;
    }
  }
  /**
   * Send synthesized audio response
   */
  async sendAudioResponse(text, audioData) {
    /* istanbul ignore next */
    cov_1dvhg9su75().f[9]++;
    cov_1dvhg9su75().s[68]++;
    try {
      /* istanbul ignore next */
      cov_1dvhg9su75().s[69]++;
      this.state.lastActivity = Date.now();
      /* istanbul ignore next */
      cov_1dvhg9su75().s[70]++;
      this.emit('agent:response', {
        agent:
        /* istanbul ignore next */
        (cov_1dvhg9su75().b[14][0]++, this.state.currentAgent) ||
        /* istanbul ignore next */
        (cov_1dvhg9su75().b[14][1]++, 'unknown'),
        text,
        audioData
      });
      // Add to transcript
      /* istanbul ignore next */
      cov_1dvhg9su75().s[71]++;
      this.addToTranscript('agent', text);
      // Add to recording if enabled
      /* istanbul ignore next */
      cov_1dvhg9su75().s[72]++;
      if (
      /* istanbul ignore next */
      (cov_1dvhg9su75().b[16][0]++, audioData) &&
      /* istanbul ignore next */
      (cov_1dvhg9su75().b[16][1]++, this.config.recordingEnabled)) {
        /* istanbul ignore next */
        cov_1dvhg9su75().b[15][0]++;
        cov_1dvhg9su75().s[73]++;
        this.addAudioToRecording('agent', audioData);
      } else
      /* istanbul ignore next */
      {
        cov_1dvhg9su75().b[15][1]++;
      }
      // Perform sentiment analysis if enabled
      cov_1dvhg9su75().s[74]++;
      if (this.config.sentimentMonitoring) {
        /* istanbul ignore next */
        cov_1dvhg9su75().b[17][0]++;
        cov_1dvhg9su75().s[75]++;
        this.performSentimentAnalysis(text, 'agent');
      } else
      /* istanbul ignore next */
      {
        cov_1dvhg9su75().b[17][1]++;
      }
      cov_1dvhg9su75().s[76]++;
      console.log('🎵 [VOICE BRIDGE] Audio response sent', {
        agent: this.state.currentAgent,
        textLength: text.length,
        hasAudio: !!audioData
      });
    } catch (error) {
      const responseError =
      /* istanbul ignore next */
      (cov_1dvhg9su75().s[77]++, error instanceof Error ?
      /* istanbul ignore next */
      (cov_1dvhg9su75().b[18][0]++, error) :
      /* istanbul ignore next */
      (cov_1dvhg9su75().b[18][1]++, new Error('Failed to send audio response')));
      /* istanbul ignore next */
      cov_1dvhg9su75().s[78]++;
      voice_telemetry_1.VoiceTelemetry.trackError(responseError, this.voiceSession.sessionId, 'AUDIO_RESPONSE_FAILED');
      /* istanbul ignore next */
      cov_1dvhg9su75().s[79]++;
      this.handleError(responseError);
    }
  }
  /**
   * Get current session state
   */
  getState() {
    /* istanbul ignore next */
    cov_1dvhg9su75().f[10]++;
    cov_1dvhg9su75().s[80]++;
    return Object.assign({}, this.state);
  }
  /**
   * Get current transcript
   */
  getTranscript() {
    /* istanbul ignore next */
    cov_1dvhg9su75().f[11]++;
    cov_1dvhg9su75().s[81]++;
    return [...this.transcript];
  }
  /**
   * Get current recording
   */
  getRecording() {
    /* istanbul ignore next */
    cov_1dvhg9su75().f[12]++;
    cov_1dvhg9su75().s[82]++;
    return this.recording ?
    /* istanbul ignore next */
    (cov_1dvhg9su75().b[19][0]++, Object.assign({}, this.recording)) :
    /* istanbul ignore next */
    (cov_1dvhg9su75().b[19][1]++, null);
  }
  // ===== PRIVATE METHODS =====
  setupVoiceSessionHandlers() {
    /* istanbul ignore next */
    cov_1dvhg9su75().f[13]++;
    cov_1dvhg9su75().s[83]++;
    // Handle transcript from voice session
    this.voiceSession.onTranscript(event => {
      /* istanbul ignore next */
      cov_1dvhg9su75().f[14]++;
      cov_1dvhg9su75().s[84]++;
      this.handleUserTranscript(event.text);
    });
    // Handle audio responses using onResponse callback
    /* istanbul ignore next */
    cov_1dvhg9su75().s[85]++;
    this.voiceSession.onResponse(event => {
      /* istanbul ignore next */
      cov_1dvhg9su75().f[15]++;
      cov_1dvhg9su75().s[86]++;
      this.handleAudioResponse(event.audioData.toString()); // Convert Blob to string if needed
    });
    // TODO: Add session ready, error, and disconnect handlers when VoiceSession API is complete
    /* istanbul ignore next */
    cov_1dvhg9su75().s[87]++;
    console.log('🔗 [VOICE BRIDGE] Voice session handlers setup complete');
  }
  async handleUserTranscript(transcript) {
    /* istanbul ignore next */
    cov_1dvhg9su75().f[16]++;
    var _a;
    /* istanbul ignore next */
    cov_1dvhg9su75().s[88]++;
    try {
      /* istanbul ignore next */
      cov_1dvhg9su75().s[89]++;
      this.state.lastActivity = Date.now();
      /* istanbul ignore next */
      cov_1dvhg9su75().s[90]++;
      console.log('📝 [VOICE BRIDGE] User transcript received', {
        transcript: transcript.substring(0, 100) + (transcript.length > 100 ?
        /* istanbul ignore next */
        (cov_1dvhg9su75().b[20][0]++, '...') :
        /* istanbul ignore next */
        (cov_1dvhg9su75().b[20][1]++, '')),
        length: transcript.length
      });
      // Add to transcript
      /* istanbul ignore next */
      cov_1dvhg9su75().s[91]++;
      this.addToTranscript('user', transcript);
      // Emit transcript event
      const transcriptEntry =
      /* istanbul ignore next */
      (cov_1dvhg9su75().s[92]++, {
        id: `transcript-${Date.now()}`,
        timestamp: Date.now(),
        speaker: 'user',
        text: transcript,
        confidence: 0.95 // Will be real confidence from Azure
      });
      /* istanbul ignore next */
      cov_1dvhg9su75().s[93]++;
      this.emit('transcript:final', {
        sessionId: this.voiceSession.sessionId,
        entry: transcriptEntry
      });
      // Perform sentiment analysis if enabled
      /* istanbul ignore next */
      cov_1dvhg9su75().s[94]++;
      if (this.config.sentimentMonitoring) {
        /* istanbul ignore next */
        cov_1dvhg9su75().b[21][0]++;
        cov_1dvhg9su75().s[95]++;
        this.performSentimentAnalysis(transcript, 'user');
      } else
      /* istanbul ignore next */
      {
        cov_1dvhg9su75().b[21][1]++;
      }
      // Route to agent orchestrator if available
      cov_1dvhg9su75().s[96]++;
      if (
      /* istanbul ignore next */
      (cov_1dvhg9su75().b[24][0]++, (_a = this.agentOrchestrator) === null) ||
      /* istanbul ignore next */
      (cov_1dvhg9su75().b[24][1]++, _a === void 0) ?
      /* istanbul ignore next */
      (cov_1dvhg9su75().b[23][0]++, void 0) :
      /* istanbul ignore next */
      (cov_1dvhg9su75().b[23][1]++, _a.handleInput)) {
        /* istanbul ignore next */
        cov_1dvhg9su75().b[22][0]++;
        cov_1dvhg9su75().s[97]++;
        this.emit('agent:thinking', {
          agent:
          /* istanbul ignore next */
          (cov_1dvhg9su75().b[25][0]++, this.state.currentAgent) ||
          /* istanbul ignore next */
          (cov_1dvhg9su75().b[25][1]++, 'system'),
          isThinking: true
        });
        const response =
        /* istanbul ignore next */
        (cov_1dvhg9su75().s[98]++, await this.agentOrchestrator.handleInput(transcript, {
          sessionId: this.voiceSession.sessionId,
          currentAgent: this.state.currentAgent,
          context: this.getConversationContext()
        }));
        /* istanbul ignore next */
        cov_1dvhg9su75().s[99]++;
        this.emit('agent:thinking', {
          agent:
          /* istanbul ignore next */
          (cov_1dvhg9su75().b[26][0]++, this.state.currentAgent) ||
          /* istanbul ignore next */
          (cov_1dvhg9su75().b[26][1]++, 'system'),
          isThinking: false
        });
        /* istanbul ignore next */
        cov_1dvhg9su75().s[100]++;
        if (response) {
          /* istanbul ignore next */
          cov_1dvhg9su75().b[27][0]++;
          cov_1dvhg9su75().s[101]++;
          await this.sendAudioResponse(response.text, response.audioData);
        } else
        /* istanbul ignore next */
        {
          cov_1dvhg9su75().b[27][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_1dvhg9su75().b[22][1]++;
      }
    } catch (error) {
      const transcriptError =
      /* istanbul ignore next */
      (cov_1dvhg9su75().s[102]++, error instanceof Error ?
      /* istanbul ignore next */
      (cov_1dvhg9su75().b[28][0]++, error) :
      /* istanbul ignore next */
      (cov_1dvhg9su75().b[28][1]++, new Error('Failed to handle transcript')));
      /* istanbul ignore next */
      cov_1dvhg9su75().s[103]++;
      voice_telemetry_1.VoiceTelemetry.trackError(transcriptError, this.voiceSession.sessionId, 'TRANSCRIPT_PROCESSING_FAILED');
      /* istanbul ignore next */
      cov_1dvhg9su75().s[104]++;
      this.handleError(transcriptError);
    }
  }
  handleAudioResponse(audioData) {
    /* istanbul ignore next */
    cov_1dvhg9su75().f[17]++;
    cov_1dvhg9su75().s[105]++;
    this.state.lastActivity = Date.now();
    /* istanbul ignore next */
    cov_1dvhg9su75().s[106]++;
    this.emit('audio:synthesis:complete', {
      sessionId: this.voiceSession.sessionId,
      audioData
    });
    // Add to recording if enabled
    /* istanbul ignore next */
    cov_1dvhg9su75().s[107]++;
    if (this.config.recordingEnabled) {
      /* istanbul ignore next */
      cov_1dvhg9su75().b[29][0]++;
      cov_1dvhg9su75().s[108]++;
      this.addAudioToRecording('agent', audioData);
    } else
    /* istanbul ignore next */
    {
      cov_1dvhg9su75().b[29][1]++;
    }
  }
  addToTranscript(speaker, text) {
    /* istanbul ignore next */
    cov_1dvhg9su75().f[18]++;
    const entry =
    /* istanbul ignore next */
    (cov_1dvhg9su75().s[109]++, {
      id: `transcript-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,
      timestamp: Date.now(),
      speaker,
      text,
      confidence: speaker === 'user' ?
      /* istanbul ignore next */
      (cov_1dvhg9su75().b[30][0]++, 0.95) :
      /* istanbul ignore next */
      (cov_1dvhg9su75().b[30][1]++, 1.0)
    });
    /* istanbul ignore next */
    cov_1dvhg9su75().s[110]++;
    this.transcript.push(entry);
    // Store transcript based on configuration
    /* istanbul ignore next */
    cov_1dvhg9su75().s[111]++;
    if (
    /* istanbul ignore next */
    (cov_1dvhg9su75().b[32][0]++, this.config.transcriptStorage === 'persistent') ||
    /* istanbul ignore next */
    (cov_1dvhg9su75().b[32][1]++, this.config.transcriptStorage === 'both')) {
      /* istanbul ignore next */
      cov_1dvhg9su75().b[31][0]++;
      cov_1dvhg9su75().s[112]++;
      this.persistTranscript(entry);
    } else
    /* istanbul ignore next */
    {
      cov_1dvhg9su75().b[31][1]++;
    }
    cov_1dvhg9su75().s[113]++;
    console.log(`📝 [VOICE BRIDGE] Added to transcript`, {
      speaker,
      length: text.length,
      totalEntries: this.transcript.length
    });
  }
  initializeRecording() {
    /* istanbul ignore next */
    cov_1dvhg9su75().f[19]++;
    cov_1dvhg9su75().s[114]++;
    if (!this.config.recordingEnabled) {
      /* istanbul ignore next */
      cov_1dvhg9su75().b[33][0]++;
      cov_1dvhg9su75().s[115]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1dvhg9su75().b[33][1]++;
    }
    cov_1dvhg9su75().s[116]++;
    this.recording = {
      sessionId: this.voiceSession.sessionId,
      startTime: Date.now(),
      totalDuration: 0,
      chunks: [],
      storageLocation: {
        containerName: 'voice-recordings',
        blobName: `session-${this.voiceSession.sessionId}-${Date.now()}.wav`
      },
      processingStatus: 'uploading'
    };
    /* istanbul ignore next */
    cov_1dvhg9su75().s[117]++;
    console.log('🎙️ [VOICE BRIDGE] Recording initialized', {
      sessionId: this.voiceSession.sessionId,
      blobName: this.recording.storageLocation.blobName
    });
  }
  addAudioToRecording(speaker, audioData) {
    /* istanbul ignore next */
    cov_1dvhg9su75().f[20]++;
    cov_1dvhg9su75().s[118]++;
    if (
    /* istanbul ignore next */
    (cov_1dvhg9su75().b[35][0]++, !this.recording) ||
    /* istanbul ignore next */
    (cov_1dvhg9su75().b[35][1]++, !this.config.recordingEnabled)) {
      /* istanbul ignore next */
      cov_1dvhg9su75().b[34][0]++;
      cov_1dvhg9su75().s[119]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1dvhg9su75().b[34][1]++;
    }
    cov_1dvhg9su75().s[120]++;
    try {
      // Decode base64 audio data
      const audioBuffer =
      /* istanbul ignore next */
      (cov_1dvhg9su75().s[121]++, this.base64ToArrayBuffer(audioData));
      const chunk =
      /* istanbul ignore next */
      (cov_1dvhg9su75().s[122]++, {
        id: `chunk-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,
        sessionId: this.voiceSession.sessionId,
        timestamp: Date.now(),
        duration: 1000,
        // Will be calculated based on audio data
        format: 'pcm16',
        sampleRate: 16000,
        data: audioBuffer,
        metadata: {
          speaker,
          quality: 'medium',
          noiseLevel: 0.1
        }
      });
      /* istanbul ignore next */
      cov_1dvhg9su75().s[123]++;
      this.recording.chunks.push(chunk);
      /* istanbul ignore next */
      cov_1dvhg9su75().s[124]++;
      this.recording.totalDuration += chunk.duration;
      /* istanbul ignore next */
      cov_1dvhg9su75().s[125]++;
      console.log('🎵 [VOICE BRIDGE] Audio chunk added to recording', {
        speaker,
        chunkId: chunk.id,
        totalChunks: this.recording.chunks.length
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_1dvhg9su75().s[126]++;
      console.error('❌ [VOICE BRIDGE] Failed to add audio to recording:', error);
    }
  }
  finalizeRecording() {
    /* istanbul ignore next */
    cov_1dvhg9su75().f[21]++;
    cov_1dvhg9su75().s[127]++;
    if (!this.recording) {
      /* istanbul ignore next */
      cov_1dvhg9su75().b[36][0]++;
      cov_1dvhg9su75().s[128]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1dvhg9su75().b[36][1]++;
    }
    cov_1dvhg9su75().s[129]++;
    this.recording.endTime = Date.now();
    /* istanbul ignore next */
    cov_1dvhg9su75().s[130]++;
    this.recording.processingStatus = 'processing';
    // In a real implementation, this would upload to blob storage
    /* istanbul ignore next */
    cov_1dvhg9su75().s[131]++;
    console.log('📦 [VOICE BRIDGE] Recording finalized', {
      sessionId: this.voiceSession.sessionId,
      duration: this.recording.totalDuration,
      chunks: this.recording.chunks.length
    });
  }
  performSentimentAnalysis(text, speaker) {
    /* istanbul ignore next */
    cov_1dvhg9su75().f[22]++;
    // Simple sentiment analysis implementation
    // In production, this would use Azure Cognitive Services
    const stressWords =
    /* istanbul ignore next */
    (cov_1dvhg9su75().s[132]++, ['nervous', 'worried', 'difficult', 'hard', 'struggle', 'confused', 'stuck']);
    const positiveWords =
    /* istanbul ignore next */
    (cov_1dvhg9su75().s[133]++, ['good', 'great', 'excellent', 'confident', 'sure', 'excited', 'happy']);
    const words =
    /* istanbul ignore next */
    (cov_1dvhg9su75().s[134]++, text.toLowerCase().split(' '));
    const stressWordCount =
    /* istanbul ignore next */
    (cov_1dvhg9su75().s[135]++, words.filter(word => {
      /* istanbul ignore next */
      cov_1dvhg9su75().f[23]++;
      cov_1dvhg9su75().s[136]++;
      return stressWords.includes(word);
    }).length);
    const positiveWordCount =
    /* istanbul ignore next */
    (cov_1dvhg9su75().s[137]++, words.filter(word => {
      /* istanbul ignore next */
      cov_1dvhg9su75().f[24]++;
      cov_1dvhg9su75().s[138]++;
      return positiveWords.includes(word);
    }).length);
    let score =
    /* istanbul ignore next */
    (cov_1dvhg9su75().s[139]++, 0);
    /* istanbul ignore next */
    cov_1dvhg9su75().s[140]++;
    if (positiveWordCount > stressWordCount) {
      /* istanbul ignore next */
      cov_1dvhg9su75().b[37][0]++;
      cov_1dvhg9su75().s[141]++;
      score = 0.7;
    } else {
      /* istanbul ignore next */
      cov_1dvhg9su75().b[37][1]++;
      cov_1dvhg9su75().s[142]++;
      if (stressWordCount > positiveWordCount) {
        /* istanbul ignore next */
        cov_1dvhg9su75().b[38][0]++;
        cov_1dvhg9su75().s[143]++;
        score = -0.5;
      } else
      /* istanbul ignore next */
      {
        cov_1dvhg9su75().b[38][1]++;
      }
    }
    const sentiment =
    /* istanbul ignore next */
    (cov_1dvhg9su75().s[144]++, {
      score,
      magnitude: Math.abs(score),
      label: score > 0.5 ?
      /* istanbul ignore next */
      (cov_1dvhg9su75().b[39][0]++, 'positive') :
      /* istanbul ignore next */
      (cov_1dvhg9su75().b[39][1]++, score < -0.3 ?
      /* istanbul ignore next */
      (cov_1dvhg9su75().b[40][0]++, 'negative') :
      /* istanbul ignore next */
      (cov_1dvhg9su75().b[40][1]++, 'neutral')),
      confidence: 0.8,
      stressIndicators: {
        hasHighStressWords: stressWordCount > 0,
        stressWords: words.filter(word => {
          /* istanbul ignore next */
          cov_1dvhg9su75().f[25]++;
          cov_1dvhg9su75().s[145]++;
          return stressWords.includes(word);
        }),
        speechPattern: stressWordCount > 2 ?
        /* istanbul ignore next */
        (cov_1dvhg9su75().b[41][0]++, 'hesitant') :
        /* istanbul ignore next */
        (cov_1dvhg9su75().b[41][1]++, 'normal'),
        emotionalState: score > 0.5 ?
        /* istanbul ignore next */
        (cov_1dvhg9su75().b[42][0]++, 'calm') :
        /* istanbul ignore next */
        (cov_1dvhg9su75().b[42][1]++, score < -0.3 ?
        /* istanbul ignore next */
        (cov_1dvhg9su75().b[43][0]++, 'nervous') :
        /* istanbul ignore next */
        (cov_1dvhg9su75().b[43][1]++, 'calm'))
      }
    });
    /* istanbul ignore next */
    cov_1dvhg9su75().s[146]++;
    this.emit('sentiment:analysis', {
      sessionId: this.voiceSession.sessionId,
      sentiment
    });
    /* istanbul ignore next */
    cov_1dvhg9su75().s[147]++;
    if (
    /* istanbul ignore next */
    (cov_1dvhg9su75().b[45][0]++, sentiment.stressIndicators.hasHighStressWords) &&
    /* istanbul ignore next */
    (cov_1dvhg9su75().b[45][1]++, speaker === 'user')) {
      /* istanbul ignore next */
      cov_1dvhg9su75().b[44][0]++;
      cov_1dvhg9su75().s[148]++;
      this.emit('sentiment:stress:detected', {
        sessionId: this.voiceSession.sessionId,
        level: stressWordCount > 2 ?
        /* istanbul ignore next */
        (cov_1dvhg9su75().b[46][0]++, 'high') :
        /* istanbul ignore next */
        (cov_1dvhg9su75().b[46][1]++, 'moderate'),
        suggestions: ['Consider taking a brief pause', 'Remind the candidate to take their time', 'Ask if they need clarification']
      });
    } else
    /* istanbul ignore next */
    {
      cov_1dvhg9su75().b[44][1]++;
    }
  }
  getAgentVoiceSettings(agentName) {
    /* istanbul ignore next */
    cov_1dvhg9su75().f[26]++;
    // Return agent-specific voice settings
    // This would be expanded when agent classes are implemented
    const agentSettings =
    /* istanbul ignore next */
    (cov_1dvhg9su75().s[149]++, {
      'technical': {
        voice: 'en-US-JennyNeural',
        temperature: 0.7,
        responseStyle: 'detailed'
      },
      'behavioral': {
        voice: 'en-US-AvaMultilingualNeural',
        temperature: 0.8,
        responseStyle: 'empathetic'
      },
      'general': {
        voice: 'en-US-AriaNeural',
        temperature: 0.6,
        responseStyle: 'conversational'
      }
    });
    /* istanbul ignore next */
    cov_1dvhg9su75().s[150]++;
    return /* istanbul ignore next */(cov_1dvhg9su75().b[47][0]++, agentSettings[agentName]) ||
    /* istanbul ignore next */
    (cov_1dvhg9su75().b[47][1]++, {});
  }
  getConversationContext() {
    /* istanbul ignore next */
    cov_1dvhg9su75().f[27]++;
    var _a;
    /* istanbul ignore next */
    cov_1dvhg9su75().s[151]++;
    return {
      transcriptLength: this.transcript.length,
      lastMessages: this.transcript.slice(-5),
      sessionDuration: Date.now() - (
      /* istanbul ignore next */
      (cov_1dvhg9su75().b[48][0]++,
      /* istanbul ignore next */
      (cov_1dvhg9su75().b[50][0]++, (_a = this.recording) === null) ||
      /* istanbul ignore next */
      (cov_1dvhg9su75().b[50][1]++, _a === void 0) ?
      /* istanbul ignore next */
      (cov_1dvhg9su75().b[49][0]++, void 0) :
      /* istanbul ignore next */
      (cov_1dvhg9su75().b[49][1]++, _a.startTime)) ||
      /* istanbul ignore next */
      (cov_1dvhg9su75().b[48][1]++, Date.now())),
      currentAgent: this.state.currentAgent,
      errorCount: this.state.errorCount
    };
  }
  persistTranscript(entry) {
    /* istanbul ignore next */
    cov_1dvhg9su75().f[28]++;
    cov_1dvhg9su75().s[152]++;
    // In production, this would save to persistent storage
    console.log('💾 [VOICE BRIDGE] Transcript entry persisted', {
      id: entry.id,
      speaker: entry.speaker,
      length: entry.text.length
    });
  }
  setupActivityTimeout() {
    /* istanbul ignore next */
    cov_1dvhg9su75().f[29]++;
    cov_1dvhg9su75().s[153]++;
    const checkActivity = () => {
      /* istanbul ignore next */
      cov_1dvhg9su75().f[30]++;
      const timeSinceActivity =
      /* istanbul ignore next */
      (cov_1dvhg9su75().s[154]++, Date.now() - this.state.lastActivity);
      /* istanbul ignore next */
      cov_1dvhg9su75().s[155]++;
      if (timeSinceActivity > this.config.sessionTimeout) {
        /* istanbul ignore next */
        cov_1dvhg9su75().b[51][0]++;
        cov_1dvhg9su75().s[156]++;
        console.log('⏰ [VOICE BRIDGE] Session timeout reached');
        /* istanbul ignore next */
        cov_1dvhg9su75().s[157]++;
        this.stop();
        /* istanbul ignore next */
        cov_1dvhg9su75().s[158]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1dvhg9su75().b[51][1]++;
      }
      cov_1dvhg9su75().s[159]++;
      setTimeout(checkActivity, 60000); // Check every minute
    };
    /* istanbul ignore next */
    cov_1dvhg9su75().s[160]++;
    setTimeout(checkActivity, 60000);
  }
  handleError(error) {
    /* istanbul ignore next */
    cov_1dvhg9su75().f[31]++;
    cov_1dvhg9su75().s[161]++;
    this.state.errorCount++;
    /* istanbul ignore next */
    cov_1dvhg9su75().s[162]++;
    console.error('💥 [VOICE BRIDGE] Error occurred', {
      message: error.message,
      errorCount: this.state.errorCount
    });
    /* istanbul ignore next */
    cov_1dvhg9su75().s[163]++;
    this.emit('session:error', {
      sessionId: this.voiceSession.sessionId,
      error
    });
    // Implement recovery based on configuration
    /* istanbul ignore next */
    cov_1dvhg9su75().s[164]++;
    if (
    /* istanbul ignore next */
    (cov_1dvhg9su75().b[53][0]++, this.config.errorRecoveryMode === 'graceful') &&
    /* istanbul ignore next */
    (cov_1dvhg9su75().b[53][1]++, this.state.errorCount < this.config.maxRetries)) {
      /* istanbul ignore next */
      cov_1dvhg9su75().b[52][0]++;
      cov_1dvhg9su75().s[165]++;
      this.attemptRecovery();
    } else
    /* istanbul ignore next */
    {
      cov_1dvhg9su75().b[52][1]++;
    }
  }
  async attemptRecovery() {
    /* istanbul ignore next */
    cov_1dvhg9su75().f[32]++;
    cov_1dvhg9su75().s[166]++;
    if (this.state.recovery.inProgress) {
      /* istanbul ignore next */
      cov_1dvhg9su75().b[54][0]++;
      cov_1dvhg9su75().s[167]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1dvhg9su75().b[54][1]++;
    }
    cov_1dvhg9su75().s[168]++;
    this.state.recovery.inProgress = true;
    /* istanbul ignore next */
    cov_1dvhg9su75().s[169]++;
    this.state.recovery.attempts++;
    /* istanbul ignore next */
    cov_1dvhg9su75().s[170]++;
    this.state.recovery.lastAttempt = Date.now();
    /* istanbul ignore next */
    cov_1dvhg9su75().s[171]++;
    try {
      /* istanbul ignore next */
      cov_1dvhg9su75().s[172]++;
      console.log('🔧 [VOICE BRIDGE] Attempting recovery', {
        attempt: this.state.recovery.attempts,
        maxRetries: this.config.maxRetries
      });
      // Simple recovery: try to reconnect voice session
      /* istanbul ignore next */
      cov_1dvhg9su75().s[173]++;
      if (this.voiceSession.getState() !== 'active') {
        /* istanbul ignore next */
        cov_1dvhg9su75().b[55][0]++;
        cov_1dvhg9su75().s[174]++;
        await this.voiceSession.start();
      } else
      /* istanbul ignore next */
      {
        cov_1dvhg9su75().b[55][1]++;
      }
      cov_1dvhg9su75().s[175]++;
      this.state.recovery.inProgress = false;
      /* istanbul ignore next */
      cov_1dvhg9su75().s[176]++;
      console.log('✅ [VOICE BRIDGE] Recovery successful');
    } catch (error) {
      /* istanbul ignore next */
      cov_1dvhg9su75().s[177]++;
      this.state.recovery.inProgress = false;
      /* istanbul ignore next */
      cov_1dvhg9su75().s[178]++;
      console.error('❌ [VOICE BRIDGE] Recovery failed:', error);
      /* istanbul ignore next */
      cov_1dvhg9su75().s[179]++;
      if (this.state.recovery.attempts >= this.config.maxRetries) {
        /* istanbul ignore next */
        cov_1dvhg9su75().b[56][0]++;
        cov_1dvhg9su75().s[180]++;
        console.error('🚨 [VOICE BRIDGE] Max recovery attempts reached, stopping bridge');
        /* istanbul ignore next */
        cov_1dvhg9su75().s[181]++;
        this.stop();
      } else
      /* istanbul ignore next */
      {
        cov_1dvhg9su75().b[56][1]++;
      }
    }
  }
  base64ToArrayBuffer(base64) {
    /* istanbul ignore next */
    cov_1dvhg9su75().f[33]++;
    const binaryString =
    /* istanbul ignore next */
    (cov_1dvhg9su75().s[182]++, atob(base64));
    const bytes =
    /* istanbul ignore next */
    (cov_1dvhg9su75().s[183]++, new Uint8Array(binaryString.length));
    /* istanbul ignore next */
    cov_1dvhg9su75().s[184]++;
    for (let i =
    /* istanbul ignore next */
    (cov_1dvhg9su75().s[185]++, 0); i < binaryString.length; i++) {
      /* istanbul ignore next */
      cov_1dvhg9su75().s[186]++;
      bytes[i] = binaryString.charCodeAt(i);
    }
    /* istanbul ignore next */
    cov_1dvhg9su75().s[187]++;
    return bytes.buffer;
  }
}
/* istanbul ignore next */
cov_1dvhg9su75().s[188]++;
exports.VoiceAgentBridge = VoiceAgentBridge;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,