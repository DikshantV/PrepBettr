{"version":3,"names":["Object","defineProperty","exports","value","default","CodeEditorWrapper","_dynamic","_interopRequireDefault","require","_jsxRuntime","cov_1imvtpkchp","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","s","f","b","_coverageSchema","coverage","actualCoverage","e","__esModule","CodeEditor","dynamic","ssr","loading","jsx","className","children","initialValue","language","isExpanded","onToggleExpand","_default"],"sources":["CodeEditorWrapper.tsx"],"sourcesContent":["'use client';\n\nimport dynamic from 'next/dynamic';\n\nconst CodeEditor = dynamic(\n  () => import('@/components/CodeEditor'),\n  { \n    ssr: false,\n    loading: () => <div className=\"h-64 bg-gray-100 dark:bg-gray-800 rounded-lg flex items-center justify-center\">\n      <div className=\"animate-pulse text-gray-500\">Loading editor...</div>\n    </div>\n  }\n);\n\ninterface CodeEditorWrapperProps {\n  initialValue?: string;\n  language?: string;\n  className?: string;\n  isExpanded?: boolean;\n  onToggleExpand?: () => void;\n}\n\nexport const CodeEditorWrapper = ({ \n  initialValue = \"// Write your code here\", \n  language = \"javascript\",\n  className = \"\",\n  isExpanded = true,\n  onToggleExpand\n}: CodeEditorWrapperProps) => {\n  return (\n    <div className={className}>\n      <CodeEditor \n        initialValue={initialValue} \n        language={language} \n        isExpanded={isExpanded}\n        onToggleExpand={onToggleExpand}\n      />\n    </div>\n  );\n};\n\nexport default CodeEditorWrapper;\n"],"mappings":"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","ignoreList":[]}