f30bad7fec300c3bbe97c9511b6d6c31
"use strict";

/**
 * Azure Function: Config Sync
 *
 * Automatically synchronizes Azure App Configuration to Firebase Remote Config
 * to eliminate configuration drift between platforms.
 *
 * Triggers:
 * - Timer: Every 5 minutes
 * - HTTP: Manual trigger with optional dry-run and rollback
 */
/* istanbul ignore next */
function cov_5dw3r5ies() {
  var path = "/Users/dikshantvashistha/PrepBettr/azure/config-sync/index.ts";
  var hash = "c924e7733f58fab508899aca99732eef2d3e8ab3";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dikshantvashistha/PrepBettr/azure/config-sync/index.ts",
    statementMap: {
      "0": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 18,
          column: 1
        }
      },
      "1": {
        start: {
          line: 13,
          column: 4
        },
        end: {
          line: 13,
          column: 91
        }
      },
      "2": {
        start: {
          line: 13,
          column: 31
        },
        end: {
          line: 13,
          column: 91
        }
      },
      "3": {
        start: {
          line: 14,
          column: 12
        },
        end: {
          line: 14,
          column: 35
        }
      },
      "4": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 15,
          column: 213
        }
      },
      "5": {
        start: {
          line: 15,
          column: 194
        },
        end: {
          line: 15,
          column: 206
        }
      },
      "6": {
        start: {
          line: 16,
          column: 23
        },
        end: {
          line: 16,
          column: 162
        }
      },
      "7": {
        start: {
          line: 16,
          column: 53
        },
        end: {
          line: 16,
          column: 159
        }
      },
      "8": {
        start: {
          line: 16,
          column: 101
        },
        end: {
          line: 16,
          column: 155
        }
      },
      "9": {
        start: {
          line: 17,
          column: 45
        },
        end: {
          line: 17,
          column: 126
        }
      },
      "10": {
        start: {
          line: 17,
          column: 83
        },
        end: {
          line: 17,
          column: 114
        }
      },
      "11": {
        start: {
          line: 19,
          column: 0
        },
        end: {
          line: 19,
          column: 62
        }
      },
      "12": {
        start: {
          line: 20,
          column: 0
        },
        end: {
          line: 20,
          column: 29
        }
      },
      "13": {
        start: {
          line: 21,
          column: 28
        },
        end: {
          line: 21,
          column: 63
        }
      },
      "14": {
        start: {
          line: 22,
          column: 19
        },
        end: {
          line: 22,
          column: 45
        }
      },
      "15": {
        start: {
          line: 23,
          column: 16
        },
        end: {
          line: 23,
          column: 48
        }
      },
      "16": {
        start: {
          line: 24,
          column: 31
        },
        end: {
          line: 24,
          column: 76
        }
      },
      "17": {
        start: {
          line: 25,
          column: 25
        },
        end: {
          line: 25,
          column: 64
        }
      },
      "18": {
        start: {
          line: 27,
          column: 20
        },
        end: {
          line: 27,
          column: 50
        }
      },
      "19": {
        start: {
          line: 28,
          column: 0
        },
        end: {
          line: 35,
          column: 1
        }
      },
      "20": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 34,
          column: 17
        }
      },
      "21": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 31
        }
      },
      "22": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 32
        }
      },
      "23": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 41,
          column: 33
        }
      },
      "24": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 30
        }
      },
      "25": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 69,
          column: 9
        }
      },
      "26": {
        start: {
          line: 47,
          column: 37
        },
        end: {
          line: 47,
          column: 83
        }
      },
      "27": {
        start: {
          line: 48,
          column: 29
        },
        end: {
          line: 48,
          column: 66
        }
      },
      "28": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 58,
          column: 13
        }
      },
      "29": {
        start: {
          line: 50,
          column: 16
        },
        end: {
          line: 50,
          column: 100
        }
      },
      "30": {
        start: {
          line: 52,
          column: 17
        },
        end: {
          line: 58,
          column: 13
        }
      },
      "31": {
        start: {
          line: 53,
          column: 35
        },
        end: {
          line: 53,
          column: 74
        }
      },
      "32": {
        start: {
          line: 54,
          column: 16
        },
        end: {
          line: 54,
          column: 104
        }
      },
      "33": {
        start: {
          line: 57,
          column: 16
        },
        end: {
          line: 57,
          column: 74
        }
      },
      "34": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 60,
          column: 68
        }
      },
      "35": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 61,
          column: 62
        }
      },
      "36": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 63,
          column: 73
        }
      },
      "37": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 64,
          column: 66
        }
      },
      "38": {
        start: {
          line: 67,
          column: 12
        },
        end: {
          line: 67,
          column: 89
        }
      },
      "39": {
        start: {
          line: 68,
          column: 12
        },
        end: {
          line: 68,
          column: 24
        }
      },
      "40": {
        start: {
          line: 72,
          column: 132
        },
        end: {
          line: 72,
          column: 139
        }
      },
      "41": {
        start: {
          line: 73,
          column: 23
        },
        end: {
          line: 82,
          column: 9
        }
      },
      "42": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 162,
          column: 9
        }
      },
      "43": {
        start: {
          line: 84,
          column: 12
        },
        end: {
          line: 84,
          column: 36
        }
      },
      "44": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 87,
          column: 13
        }
      },
      "45": {
        start: {
          line: 86,
          column: 16
        },
        end: {
          line: 86,
          column: 67
        }
      },
      "46": {
        start: {
          line: 89,
          column: 33
        },
        end: {
          line: 89,
          column: 67
        }
      },
      "47": {
        start: {
          line: 90,
          column: 12
        },
        end: {
          line: 94,
          column: 13
        }
      },
      "48": {
        start: {
          line: 91,
          column: 16
        },
        end: {
          line: 91,
          column: 82
        }
      },
      "49": {
        start: {
          line: 92,
          column: 16
        },
        end: {
          line: 92,
          column: 38
        }
      },
      "50": {
        start: {
          line: 93,
          column: 16
        },
        end: {
          line: 93,
          column: 30
        }
      },
      "51": {
        start: {
          line: 96,
          column: 37
        },
        end: {
          line: 96,
          column: 74
        }
      },
      "52": {
        start: {
          line: 97,
          column: 35
        },
        end: {
          line: 97,
          column: 40
        }
      },
      "53": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 98,
          column: 93
        }
      },
      "54": {
        start: {
          line: 100,
          column: 12
        },
        end: {
          line: 128,
          column: 13
        }
      },
      "55": {
        start: {
          line: 101,
          column: 16
        },
        end: {
          line: 127,
          column: 17
        }
      },
      "56": {
        start: {
          line: 102,
          column: 35
        },
        end: {
          line: 102,
          column: 123
        }
      },
      "57": {
        start: {
          line: 103,
          column: 20
        },
        end: {
          line: 103,
          column: 48
        }
      },
      "58": {
        start: {
          line: 104,
          column: 20
        },
        end: {
          line: 115,
          column: 21
        }
      },
      "59": {
        start: {
          line: 106,
          column: 28
        },
        end: {
          line: 106,
          column: 49
        }
      },
      "60": {
        start: {
          line: 107,
          column: 28
        },
        end: {
          line: 107,
          column: 52
        }
      },
      "61": {
        start: {
          line: 108,
          column: 28
        },
        end: {
          line: 108,
          column: 34
        }
      },
      "62": {
        start: {
          line: 110,
          column: 28
        },
        end: {
          line: 110,
          column: 51
        }
      },
      "63": {
        start: {
          line: 111,
          column: 28
        },
        end: {
          line: 111,
          column: 34
        }
      },
      "64": {
        start: {
          line: 113,
          column: 28
        },
        end: {
          line: 113,
          column: 49
        }
      },
      "65": {
        start: {
          line: 114,
          column: 28
        },
        end: {
          line: 114,
          column: 34
        }
      },
      "66": {
        start: {
          line: 118,
          column: 37
        },
        end: {
          line: 118,
          column: 133
        }
      },
      "67": {
        start: {
          line: 119,
          column: 20
        },
        end: {
          line: 119,
          column: 49
        }
      },
      "68": {
        start: {
          line: 120,
          column: 20
        },
        end: {
          line: 120,
          column: 41
        }
      },
      "69": {
        start: {
          line: 121,
          column: 20
        },
        end: {
          line: 125,
          column: 23
        }
      },
      "70": {
        start: {
          line: 126,
          column: 20
        },
        end: {
          line: 126,
          column: 60
        }
      },
      "71": {
        start: {
          line: 130,
          column: 12
        },
        end: {
          line: 140,
          column: 13
        }
      },
      "72": {
        start: {
          line: 131,
          column: 16
        },
        end: {
          line: 139,
          column: 17
        }
      },
      "73": {
        start: {
          line: 132,
          column: 20
        },
        end: {
          line: 132,
          column: 82
        }
      },
      "74": {
        start: {
          line: 133,
          column: 20
        },
        end: {
          line: 133,
          column: 106
        }
      },
      "75": {
        start: {
          line: 136,
          column: 37
        },
        end: {
          line: 136,
          column: 135
        }
      },
      "76": {
        start: {
          line: 137,
          column: 20
        },
        end: {
          line: 137,
          column: 49
        }
      },
      "77": {
        start: {
          line: 138,
          column: 20
        },
        end: {
          line: 138,
          column: 60
        }
      },
      "78": {
        start: {
          line: 142,
          column: 12
        },
        end: {
          line: 144,
          column: 13
        }
      },
      "79": {
        start: {
          line: 143,
          column: 16
        },
        end: {
          line: 143,
          column: 64
        }
      },
      "80": {
        start: {
          line: 146,
          column: 12
        },
        end: {
          line: 146,
          column: 39
        }
      },
      "81": {
        start: {
          line: 148,
          column: 12
        },
        end: {
          line: 148,
          column: 54
        }
      },
      "82": {
        start: {
          line: 149,
          column: 12
        },
        end: {
          line: 149,
          column: 178
        }
      },
      "83": {
        start: {
          line: 150,
          column: 12
        },
        end: {
          line: 152,
          column: 13
        }
      },
      "84": {
        start: {
          line: 151,
          column: 16
        },
        end: {
          line: 151,
          column: 78
        }
      },
      "85": {
        start: {
          line: 153,
          column: 12
        },
        end: {
          line: 153,
          column: 26
        }
      },
      "86": {
        start: {
          line: 156,
          column: 29
        },
        end: {
          line: 156,
          column: 113
        }
      },
      "87": {
        start: {
          line: 157,
          column: 12
        },
        end: {
          line: 157,
          column: 41
        }
      },
      "88": {
        start: {
          line: 158,
          column: 12
        },
        end: {
          line: 158,
          column: 35
        }
      },
      "89": {
        start: {
          line: 159,
          column: 12
        },
        end: {
          line: 159,
          column: 52
        }
      },
      "90": {
        start: {
          line: 160,
          column: 12
        },
        end: {
          line: 160,
          column: 100
        }
      },
      "91": {
        start: {
          line: 161,
          column: 12
        },
        end: {
          line: 161,
          column: 26
        }
      },
      "92": {
        start: {
          line: 167,
          column: 8
        },
        end: {
          line: 168,
          column: 60
        }
      },
      "93": {
        start: {
          line: 168,
          column: 12
        },
        end: {
          line: 168,
          column: 60
        }
      },
      "94": {
        start: {
          line: 169,
          column: 24
        },
        end: {
          line: 169,
          column: 26
        }
      },
      "95": {
        start: {
          line: 170,
          column: 8
        },
        end: {
          line: 195,
          column: 9
        }
      },
      "96": {
        start: {
          line: 171,
          column: 37
        },
        end: {
          line: 171,
          column: 81
        }
      },
      "97": {
        start: {
          line: 172,
          column: 12
        },
        end: {
          line: 189,
          column: 13
        }
      },
      "98": {
        start: {
          line: 173,
          column: 16
        },
        end: {
          line: 181,
          column: 17
        }
      },
      "99": {
        start: {
          line: 173,
          column: 30
        },
        end: {
          line: 173,
          column: 34
        }
      },
      "100": {
        start: {
          line: 173,
          column: 57
        },
        end: {
          line: 173,
          column: 88
        }
      },
      "101": {
        start: {
          line: 174,
          column: 20
        },
        end: {
          line: 174,
          column: 52
        }
      },
      "102": {
        start: {
          line: 175,
          column: 20
        },
        end: {
          line: 175,
          column: 31
        }
      },
      "103": {
        start: {
          line: 176,
          column: 36
        },
        end: {
          line: 176,
          column: 38
        }
      },
      "104": {
        start: {
          line: 178,
          column: 20
        },
        end: {
          line: 180,
          column: 21
        }
      },
      "105": {
        start: {
          line: 179,
          column: 24
        },
        end: {
          line: 179,
          column: 46
        }
      },
      "106": {
        start: {
          line: 183,
          column: 28
        },
        end: {
          line: 183,
          column: 51
        }
      },
      "107": {
        start: {
          line: 185,
          column: 16
        },
        end: {
          line: 188,
          column: 53
        }
      },
      "108": {
        start: {
          line: 186,
          column: 20
        },
        end: {
          line: 186,
          column: 106
        }
      },
      "109": {
        start: {
          line: 186,
          column: 72
        },
        end: {
          line: 186,
          column: 106
        }
      },
      "110": {
        start: {
          line: 188,
          column: 26
        },
        end: {
          line: 188,
          column: 51
        }
      },
      "111": {
        start: {
          line: 188,
          column: 35
        },
        end: {
          line: 188,
          column: 51
        }
      },
      "112": {
        start: {
          line: 190,
          column: 12
        },
        end: {
          line: 190,
          column: 27
        }
      },
      "113": {
        start: {
          line: 193,
          column: 12
        },
        end: {
          line: 193,
          column: 74
        }
      },
      "114": {
        start: {
          line: 194,
          column: 12
        },
        end: {
          line: 194,
          column: 24
        }
      },
      "115": {
        start: {
          line: 199,
          column: 49
        },
        end: {
          line: 199,
          column: 60
        }
      },
      "116": {
        start: {
          line: 200,
          column: 38
        },
        end: {
          line: 200,
          column: 45
        }
      },
      "117": {
        start: {
          line: 202,
          column: 37
        },
        end: {
          line: 202,
          column: 116
        }
      },
      "118": {
        start: {
          line: 203,
          column: 37
        },
        end: {
          line: 203,
          column: 199
        }
      },
      "119": {
        start: {
          line: 205,
          column: 26
        },
        end: {
          line: 205,
          column: 56
        }
      },
      "120": {
        start: {
          line: 206,
          column: 29
        },
        end: {
          line: 206,
          column: 69
        }
      },
      "121": {
        start: {
          line: 208,
          column: 8
        },
        end: {
          line: 215,
          column: 9
        }
      },
      "122": {
        start: {
          line: 209,
          column: 12
        },
        end: {
          line: 214,
          column: 14
        }
      },
      "123": {
        start: {
          line: 217,
          column: 8
        },
        end: {
          line: 219,
          column: 9
        }
      },
      "124": {
        start: {
          line: 218,
          column: 12
        },
        end: {
          line: 218,
          column: 121
        }
      },
      "125": {
        start: {
          line: 220,
          column: 8
        },
        end: {
          line: 227,
          column: 9
        }
      },
      "126": {
        start: {
          line: 221,
          column: 12
        },
        end: {
          line: 226,
          column: 14
        }
      },
      "127": {
        start: {
          line: 229,
          column: 8
        },
        end: {
          line: 248,
          column: 9
        }
      },
      "128": {
        start: {
          line: 230,
          column: 12
        },
        end: {
          line: 232,
          column: 13
        }
      },
      "129": {
        start: {
          line: 231,
          column: 16
        },
        end: {
          line: 231,
          column: 49
        }
      },
      "130": {
        start: {
          line: 233,
          column: 12
        },
        end: {
          line: 237,
          column: 14
        }
      },
      "131": {
        start: {
          line: 238,
          column: 12
        },
        end: {
          line: 238,
          column: 64
        }
      },
      "132": {
        start: {
          line: 239,
          column: 12
        },
        end: {
          line: 244,
          column: 14
        }
      },
      "133": {
        start: {
          line: 247,
          column: 12
        },
        end: {
          line: 247,
          column: 138
        }
      },
      "134": {
        start: {
          line: 251,
          column: 8
        },
        end: {
          line: 268,
          column: 9
        }
      },
      "135": {
        start: {
          line: 253,
          column: 12
        },
        end: {
          line: 259,
          column: 14
        }
      },
      "136": {
        start: {
          line: 261,
          column: 12
        },
        end: {
          line: 261,
          column: 63
        }
      },
      "137": {
        start: {
          line: 263,
          column: 38
        },
        end: {
          line: 263,
          column: 87
        }
      },
      "138": {
        start: {
          line: 264,
          column: 12
        },
        end: {
          line: 264,
          column: 129
        }
      },
      "139": {
        start: {
          line: 267,
          column: 12
        },
        end: {
          line: 267,
          column: 120
        }
      },
      "140": {
        start: {
          line: 272,
          column: 8
        },
        end: {
          line: 295,
          column: 9
        }
      },
      "141": {
        start: {
          line: 273,
          column: 12
        },
        end: {
          line: 273,
          column: 77
        }
      },
      "142": {
        start: {
          line: 275,
          column: 35
        },
        end: {
          line: 275,
          column: 90
        }
      },
      "143": {
        start: {
          line: 276,
          column: 34
        },
        end: {
          line: 276,
          column: 147
        }
      },
      "144": {
        start: {
          line: 276,
          column: 117
        },
        end: {
          line: 276,
          column: 146
        }
      },
      "145": {
        start: {
          line: 277,
          column: 12
        },
        end: {
          line: 279,
          column: 13
        }
      },
      "146": {
        start: {
          line: 278,
          column: 16
        },
        end: {
          line: 278,
          column: 100
        }
      },
      "147": {
        start: {
          line: 281,
          column: 37
        },
        end: {
          line: 281,
          column: 83
        }
      },
      "148": {
        start: {
          line: 283,
          column: 12
        },
        end: {
          line: 283,
          column: 104
        }
      },
      "149": {
        start: {
          line: 284,
          column: 12
        },
        end: {
          line: 284,
          column: 34
        }
      },
      "150": {
        start: {
          line: 285,
          column: 12
        },
        end: {
          line: 285,
          column: 87
        }
      },
      "151": {
        start: {
          line: 286,
          column: 12
        },
        end: {
          line: 286,
          column: 83
        }
      },
      "152": {
        start: {
          line: 287,
          column: 12
        },
        end: {
          line: 287,
          column: 26
        }
      },
      "153": {
        start: {
          line: 290,
          column: 29
        },
        end: {
          line: 290,
          column: 107
        }
      },
      "154": {
        start: {
          line: 291,
          column: 12
        },
        end: {
          line: 291,
          column: 41
        }
      },
      "155": {
        start: {
          line: 292,
          column: 12
        },
        end: {
          line: 292,
          column: 35
        }
      },
      "156": {
        start: {
          line: 293,
          column: 12
        },
        end: {
          line: 293,
          column: 52
        }
      },
      "157": {
        start: {
          line: 294,
          column: 12
        },
        end: {
          line: 294,
          column: 24
        }
      },
      "158": {
        start: {
          line: 298,
          column: 8
        },
        end: {
          line: 336,
          column: 9
        }
      },
      "159": {
        start: {
          line: 299,
          column: 31
        },
        end: {
          line: 312,
          column: 13
        }
      },
      "160": {
        start: {
          line: 313,
          column: 12
        },
        end: {
          line: 313,
          column: 106
        }
      },
      "161": {
        start: {
          line: 315,
          column: 12
        },
        end: {
          line: 331,
          column: 13
        }
      },
      "162": {
        start: {
          line: 316,
          column: 16
        },
        end: {
          line: 330,
          column: 17
        }
      },
      "163": {
        start: {
          line: 317,
          column: 40
        },
        end: {
          line: 328,
          column: 21
        }
      },
      "164": {
        start: {
          line: 329,
          column: 20
        },
        end: {
          line: 329,
          column: 176
        }
      },
      "165": {
        start: {
          line: 332,
          column: 12
        },
        end: {
          line: 332,
          column: 63
        }
      },
      "166": {
        start: {
          line: 335,
          column: 12
        },
        end: {
          line: 335,
          column: 74
        }
      },
      "167": {
        start: {
          line: 339,
          column: 8
        },
        end: {
          line: 359,
          column: 9
        }
      },
      "168": {
        start: {
          line: 340,
          column: 34
        },
        end: {
          line: 349,
          column: 13
        }
      },
      "169": {
        start: {
          line: 351,
          column: 12
        },
        end: {
          line: 351,
          column: 77
        }
      },
      "170": {
        start: {
          line: 353,
          column: 12
        },
        end: {
          line: 355,
          column: 13
        }
      },
      "171": {
        start: {
          line: 354,
          column: 16
        },
        end: {
          line: 354,
          column: 105
        }
      },
      "172": {
        start: {
          line: 358,
          column: 12
        },
        end: {
          line: 358,
          column: 71
        }
      },
      "173": {
        start: {
          line: 362,
          column: 23
        },
        end: {
          line: 362,
          column: 40
        }
      },
      "174": {
        start: {
          line: 363,
          column: 27
        },
        end: {
          line: 363,
          column: 81
        }
      },
      "175": {
        start: {
          line: 364,
          column: 8
        },
        end: {
          line: 364,
          column: 93
        }
      },
      "176": {
        start: {
          line: 368,
          column: 21
        },
        end: {
          line: 401,
          column: 1
        }
      },
      "177": {
        start: {
          line: 369,
          column: 4
        },
        end: {
          line: 369,
          column: 68
        }
      },
      "178": {
        start: {
          line: 370,
          column: 24
        },
        end: {
          line: 370,
          column: 54
        }
      },
      "179": {
        start: {
          line: 371,
          column: 4
        },
        end: {
          line: 400,
          column: 5
        }
      },
      "180": {
        start: {
          line: 372,
          column: 23
        },
        end: {
          line: 375,
          column: 10
        }
      },
      "181": {
        start: {
          line: 376,
          column: 8
        },
        end: {
          line: 381,
          column: 9
        }
      },
      "182": {
        start: {
          line: 377,
          column: 12
        },
        end: {
          line: 377,
          column: 67
        }
      },
      "183": {
        start: {
          line: 380,
          column: 12
        },
        end: {
          line: 380,
          column: 72
        }
      },
      "184": {
        start: {
          line: 383,
          column: 8
        },
        end: {
          line: 389,
          column: 10
        }
      },
      "185": {
        start: {
          line: 392,
          column: 8
        },
        end: {
          line: 392,
          column: 61
        }
      },
      "186": {
        start: {
          line: 393,
          column: 8
        },
        end: {
          line: 399,
          column: 10
        }
      },
      "187": {
        start: {
          line: 402,
          column: 20
        },
        end: {
          line: 437,
          column: 1
        }
      },
      "188": {
        start: {
          line: 403,
          column: 4
        },
        end: {
          line: 403,
          column: 65
        }
      },
      "189": {
        start: {
          line: 404,
          column: 105
        },
        end: {
          line: 404,
          column: 114
        }
      },
      "190": {
        start: {
          line: 405,
          column: 24
        },
        end: {
          line: 405,
          column: 54
        }
      },
      "191": {
        start: {
          line: 406,
          column: 4
        },
        end: {
          line: 436,
          column: 5
        }
      },
      "192": {
        start: {
          line: 407,
          column: 24
        },
        end: {
          line: 413,
          column: 9
        }
      },
      "193": {
        start: {
          line: 414,
          column: 23
        },
        end: {
          line: 414,
          column: 68
        }
      },
      "194": {
        start: {
          line: 415,
          column: 8
        },
        end: {
          line: 423,
          column: 10
        }
      },
      "195": {
        start: {
          line: 424,
          column: 8
        },
        end: {
          line: 424,
          column: 75
        }
      },
      "196": {
        start: {
          line: 427,
          column: 8
        },
        end: {
          line: 427,
          column: 58
        }
      },
      "197": {
        start: {
          line: 428,
          column: 8
        },
        end: {
          line: 435,
          column: 10
        }
      },
      "198": {
        start: {
          line: 438,
          column: 0
        },
        end: {
          line: 438,
          column: 34
        }
      },
      "199": {
        start: {
          line: 440,
          column: 0
        },
        end: {
          line: 440,
          column: 31
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 12,
            column: 52
          },
          end: {
            line: 12,
            column: 53
          }
        },
        loc: {
          start: {
            line: 12,
            column: 65
          },
          end: {
            line: 18,
            column: 1
          }
        },
        line: 12
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 15,
            column: 180
          },
          end: {
            line: 15,
            column: 181
          }
        },
        loc: {
          start: {
            line: 15,
            column: 192
          },
          end: {
            line: 15,
            column: 208
          }
        },
        line: 15
      },
      "2": {
        name: "verb",
        decl: {
          start: {
            line: 16,
            column: 13
          },
          end: {
            line: 16,
            column: 17
          }
        },
        loc: {
          start: {
            line: 16,
            column: 21
          },
          end: {
            line: 16,
            column: 164
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 16,
            column: 38
          },
          end: {
            line: 16,
            column: 39
          }
        },
        loc: {
          start: {
            line: 16,
            column: 51
          },
          end: {
            line: 16,
            column: 161
          }
        },
        line: 16
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 16,
            column: 72
          },
          end: {
            line: 16,
            column: 73
          }
        },
        loc: {
          start: {
            line: 16,
            column: 99
          },
          end: {
            line: 16,
            column: 157
          }
        },
        line: 16
      },
      "5": {
        name: "settle",
        decl: {
          start: {
            line: 17,
            column: 13
          },
          end: {
            line: 17,
            column: 19
          }
        },
        loc: {
          start: {
            line: 17,
            column: 43
          },
          end: {
            line: 17,
            column: 128
          }
        },
        line: 17
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 17,
            column: 69
          },
          end: {
            line: 17,
            column: 70
          }
        },
        loc: {
          start: {
            line: 17,
            column: 81
          },
          end: {
            line: 17,
            column: 116
          }
        },
        line: 17
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        },
        loc: {
          start: {
            line: 38,
            column: 25
          },
          end: {
            line: 43,
            column: 5
          }
        },
        line: 38
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        },
        loc: {
          start: {
            line: 44,
            column: 23
          },
          end: {
            line: 70,
            column: 5
          }
        },
        line: 44
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 71,
            column: 4
          },
          end: {
            line: 71,
            column: 5
          }
        },
        loc: {
          start: {
            line: 71,
            column: 43
          },
          end: {
            line: 163,
            column: 5
          }
        },
        line: 71
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 164,
            column: 4
          },
          end: {
            line: 164,
            column: 5
          }
        },
        loc: {
          start: {
            line: 164,
            column: 34
          },
          end: {
            line: 196,
            column: 5
          }
        },
        line: 164
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 197,
            column: 4
          },
          end: {
            line: 197,
            column: 5
          }
        },
        loc: {
          start: {
            line: 197,
            column: 74
          },
          end: {
            line: 249,
            column: 5
          }
        },
        line: 197
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 250,
            column: 4
          },
          end: {
            line: 250,
            column: 5
          }
        },
        loc: {
          start: {
            line: 250,
            column: 53
          },
          end: {
            line: 269,
            column: 5
          }
        },
        line: 250
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 270,
            column: 4
          },
          end: {
            line: 270,
            column: 5
          }
        },
        loc: {
          start: {
            line: 270,
            column: 45
          },
          end: {
            line: 296,
            column: 5
          }
        },
        line: 270
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 276,
            column: 110
          },
          end: {
            line: 276,
            column: 111
          }
        },
        loc: {
          start: {
            line: 276,
            column: 117
          },
          end: {
            line: 276,
            column: 146
          }
        },
        line: 276
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 297,
            column: 4
          },
          end: {
            line: 297,
            column: 5
          }
        },
        loc: {
          start: {
            line: 297,
            column: 47
          },
          end: {
            line: 337,
            column: 5
          }
        },
        line: 297
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 338,
            column: 4
          },
          end: {
            line: 338,
            column: 5
          }
        },
        loc: {
          start: {
            line: 338,
            column: 32
          },
          end: {
            line: 360,
            column: 5
          }
        },
        line: 338
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 361,
            column: 4
          },
          end: {
            line: 361,
            column: 5
          }
        },
        loc: {
          start: {
            line: 361,
            column: 25
          },
          end: {
            line: 365,
            column: 5
          }
        },
        line: 361
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 368,
            column: 21
          },
          end: {
            line: 368,
            column: 22
          }
        },
        loc: {
          start: {
            line: 368,
            column: 55
          },
          end: {
            line: 401,
            column: 1
          }
        },
        line: 368
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 402,
            column: 20
          },
          end: {
            line: 402,
            column: 21
          }
        },
        loc: {
          start: {
            line: 402,
            column: 50
          },
          end: {
            line: 437,
            column: 1
          }
        },
        line: 402
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 12,
            column: 20
          },
          end: {
            line: 18,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 12,
            column: 21
          },
          end: {
            line: 12,
            column: 25
          }
        }, {
          start: {
            line: 12,
            column: 29
          },
          end: {
            line: 12,
            column: 47
          }
        }, {
          start: {
            line: 12,
            column: 52
          },
          end: {
            line: 18,
            column: 1
          }
        }],
        line: 12
      },
      "1": {
        loc: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 91
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 91
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 13
      },
      "2": {
        loc: {
          start: {
            line: 15,
            column: 11
          },
          end: {
            line: 15,
            column: 212
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 15,
            column: 15
          },
          end: {
            line: 15,
            column: 24
          }
        }, {
          start: {
            line: 15,
            column: 28
          },
          end: {
            line: 15,
            column: 211
          }
        }],
        line: 15
      },
      "3": {
        loc: {
          start: {
            line: 15,
            column: 32
          },
          end: {
            line: 15,
            column: 99
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 15,
            column: 65
          },
          end: {
            line: 15,
            column: 76
          }
        }, {
          start: {
            line: 15,
            column: 79
          },
          end: {
            line: 15,
            column: 99
          }
        }],
        line: 15
      },
      "4": {
        loc: {
          start: {
            line: 16,
            column: 30
          },
          end: {
            line: 16,
            column: 161
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 16,
            column: 30
          },
          end: {
            line: 16,
            column: 34
          }
        }, {
          start: {
            line: 16,
            column: 38
          },
          end: {
            line: 16,
            column: 161
          }
        }],
        line: 16
      },
      "5": {
        loc: {
          start: {
            line: 28,
            column: 0
          },
          end: {
            line: 35,
            column: 1
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 0
          },
          end: {
            line: 35,
            column: 1
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "6": {
        loc: {
          start: {
            line: 49,
            column: 12
          },
          end: {
            line: 58,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 12
          },
          end: {
            line: 58,
            column: 13
          }
        }, {
          start: {
            line: 52,
            column: 17
          },
          end: {
            line: 58,
            column: 13
          }
        }],
        line: 49
      },
      "7": {
        loc: {
          start: {
            line: 52,
            column: 17
          },
          end: {
            line: 58,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 17
          },
          end: {
            line: 58,
            column: 13
          }
        }, {
          start: {
            line: 56,
            column: 17
          },
          end: {
            line: 58,
            column: 13
          }
        }],
        line: 52
      },
      "8": {
        loc: {
          start: {
            line: 71,
            column: 29
          },
          end: {
            line: 71,
            column: 41
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 71,
            column: 39
          },
          end: {
            line: 71,
            column: 41
          }
        }],
        line: 71
      },
      "9": {
        loc: {
          start: {
            line: 72,
            column: 16
          },
          end: {
            line: 72,
            column: 30
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 72,
            column: 25
          },
          end: {
            line: 72,
            column: 30
          }
        }],
        line: 72
      },
      "10": {
        loc: {
          start: {
            line: 72,
            column: 32
          },
          end: {
            line: 72,
            column: 62
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 72,
            column: 42
          },
          end: {
            line: 72,
            column: 62
          }
        }],
        line: 72
      },
      "11": {
        loc: {
          start: {
            line: 72,
            column: 64
          },
          end: {
            line: 72,
            column: 81
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 72,
            column: 76
          },
          end: {
            line: 72,
            column: 81
          }
        }],
        line: 72
      },
      "12": {
        loc: {
          start: {
            line: 72,
            column: 83
          },
          end: {
            line: 72,
            column: 99
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 72,
            column: 94
          },
          end: {
            line: 72,
            column: 99
          }
        }],
        line: 72
      },
      "13": {
        loc: {
          start: {
            line: 72,
            column: 101
          },
          end: {
            line: 72,
            column: 127
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 72,
            column: 115
          },
          end: {
            line: 72,
            column: 127
          }
        }],
        line: 72
      },
      "14": {
        loc: {
          start: {
            line: 85,
            column: 12
          },
          end: {
            line: 87,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 85,
            column: 12
          },
          end: {
            line: 87,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 85
      },
      "15": {
        loc: {
          start: {
            line: 90,
            column: 12
          },
          end: {
            line: 94,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 90,
            column: 12
          },
          end: {
            line: 94,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 90
      },
      "16": {
        loc: {
          start: {
            line: 104,
            column: 20
          },
          end: {
            line: 115,
            column: 21
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 105,
            column: 24
          },
          end: {
            line: 108,
            column: 34
          }
        }, {
          start: {
            line: 109,
            column: 24
          },
          end: {
            line: 111,
            column: 34
          }
        }, {
          start: {
            line: 112,
            column: 24
          },
          end: {
            line: 114,
            column: 34
          }
        }],
        line: 104
      },
      "17": {
        loc: {
          start: {
            line: 118,
            column: 75
          },
          end: {
            line: 118,
            column: 131
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 118,
            column: 100
          },
          end: {
            line: 118,
            column: 113
          }
        }, {
          start: {
            line: 118,
            column: 116
          },
          end: {
            line: 118,
            column: 131
          }
        }],
        line: 118
      },
      "18": {
        loc: {
          start: {
            line: 130,
            column: 12
          },
          end: {
            line: 140,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 130,
            column: 12
          },
          end: {
            line: 140,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 130
      },
      "19": {
        loc: {
          start: {
            line: 130,
            column: 16
          },
          end: {
            line: 130,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 130,
            column: 16
          },
          end: {
            line: 130,
            column: 32
          }
        }, {
          start: {
            line: 130,
            column: 36
          },
          end: {
            line: 130,
            column: 43
          }
        }],
        line: 130
      },
      "20": {
        loc: {
          start: {
            line: 136,
            column: 77
          },
          end: {
            line: 136,
            column: 133
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 136,
            column: 102
          },
          end: {
            line: 136,
            column: 115
          }
        }, {
          start: {
            line: 136,
            column: 118
          },
          end: {
            line: 136,
            column: 133
          }
        }],
        line: 136
      },
      "21": {
        loc: {
          start: {
            line: 142,
            column: 12
          },
          end: {
            line: 144,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 142,
            column: 12
          },
          end: {
            line: 144,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 142
      },
      "22": {
        loc: {
          start: {
            line: 149,
            column: 32
          },
          end: {
            line: 149,
            column: 59
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 149,
            column: 49
          },
          end: {
            line: 149,
            column: 52
          }
        }, {
          start: {
            line: 149,
            column: 55
          },
          end: {
            line: 149,
            column: 59
          }
        }],
        line: 149
      },
      "23": {
        loc: {
          start: {
            line: 150,
            column: 12
          },
          end: {
            line: 152,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 150,
            column: 12
          },
          end: {
            line: 152,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 150
      },
      "24": {
        loc: {
          start: {
            line: 156,
            column: 55
          },
          end: {
            line: 156,
            column: 111
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 156,
            column: 80
          },
          end: {
            line: 156,
            column: 93
          }
        }, {
          start: {
            line: 156,
            column: 96
          },
          end: {
            line: 156,
            column: 111
          }
        }],
        line: 156
      },
      "25": {
        loc: {
          start: {
            line: 167,
            column: 8
          },
          end: {
            line: 168,
            column: 60
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 167,
            column: 8
          },
          end: {
            line: 168,
            column: 60
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 167
      },
      "26": {
        loc: {
          start: {
            line: 178,
            column: 20
          },
          end: {
            line: 180,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 178,
            column: 20
          },
          end: {
            line: 180,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 178
      },
      "27": {
        loc: {
          start: {
            line: 178,
            column: 25
          },
          end: {
            line: 178,
            column: 99
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 178,
            column: 73
          },
          end: {
            line: 178,
            column: 79
          }
        }, {
          start: {
            line: 178,
            column: 82
          },
          end: {
            line: 178,
            column: 99
          }
        }],
        line: 178
      },
      "28": {
        loc: {
          start: {
            line: 178,
            column: 25
          },
          end: {
            line: 178,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 178,
            column: 25
          },
          end: {
            line: 178,
            column: 53
          }
        }, {
          start: {
            line: 178,
            column: 57
          },
          end: {
            line: 178,
            column: 70
          }
        }],
        line: 178
      },
      "29": {
        loc: {
          start: {
            line: 186,
            column: 20
          },
          end: {
            line: 186,
            column: 106
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 186,
            column: 20
          },
          end: {
            line: 186,
            column: 106
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 186
      },
      "30": {
        loc: {
          start: {
            line: 186,
            column: 24
          },
          end: {
            line: 186,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 186,
            column: 24
          },
          end: {
            line: 186,
            column: 27
          }
        }, {
          start: {
            line: 186,
            column: 31
          },
          end: {
            line: 186,
            column: 34
          }
        }, {
          start: {
            line: 186,
            column: 39
          },
          end: {
            line: 186,
            column: 69
          }
        }],
        line: 186
      },
      "31": {
        loc: {
          start: {
            line: 188,
            column: 26
          },
          end: {
            line: 188,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 188,
            column: 26
          },
          end: {
            line: 188,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 188
      },
      "32": {
        loc: {
          start: {
            line: 202,
            column: 37
          },
          end: {
            line: 202,
            column: 116
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 202,
            column: 100
          },
          end: {
            line: 202,
            column: 106
          }
        }, {
          start: {
            line: 202,
            column: 109
          },
          end: {
            line: 202,
            column: 116
          }
        }],
        line: 202
      },
      "33": {
        loc: {
          start: {
            line: 202,
            column: 37
          },
          end: {
            line: 202,
            column: 97
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 202,
            column: 37
          },
          end: {
            line: 202,
            column: 80
          }
        }, {
          start: {
            line: 202,
            column: 84
          },
          end: {
            line: 202,
            column: 97
          }
        }],
        line: 202
      },
      "34": {
        loc: {
          start: {
            line: 203,
            column: 37
          },
          end: {
            line: 203,
            column: 199
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 203,
            column: 182
          },
          end: {
            line: 203,
            column: 188
          }
        }, {
          start: {
            line: 203,
            column: 191
          },
          end: {
            line: 203,
            column: 199
          }
        }],
        line: 203
      },
      "35": {
        loc: {
          start: {
            line: 203,
            column: 37
          },
          end: {
            line: 203,
            column: 179
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 203,
            column: 37
          },
          end: {
            line: 203,
            column: 162
          }
        }, {
          start: {
            line: 203,
            column: 166
          },
          end: {
            line: 203,
            column: 179
          }
        }],
        line: 203
      },
      "36": {
        loc: {
          start: {
            line: 203,
            column: 43
          },
          end: {
            line: 203,
            column: 152
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 203,
            column: 110
          },
          end: {
            line: 203,
            column: 116
          }
        }, {
          start: {
            line: 203,
            column: 119
          },
          end: {
            line: 203,
            column: 152
          }
        }],
        line: 203
      },
      "37": {
        loc: {
          start: {
            line: 203,
            column: 43
          },
          end: {
            line: 203,
            column: 107
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 203,
            column: 43
          },
          end: {
            line: 203,
            column: 72
          }
        }, {
          start: {
            line: 203,
            column: 76
          },
          end: {
            line: 203,
            column: 107
          }
        }],
        line: 203
      },
      "38": {
        loc: {
          start: {
            line: 208,
            column: 8
          },
          end: {
            line: 215,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 208,
            column: 8
          },
          end: {
            line: 215,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 208
      },
      "39": {
        loc: {
          start: {
            line: 208,
            column: 12
          },
          end: {
            line: 208,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 208,
            column: 12
          },
          end: {
            line: 208,
            column: 22
          }
        }, {
          start: {
            line: 208,
            column: 26
          },
          end: {
            line: 208,
            column: 52
          }
        }],
        line: 208
      },
      "40": {
        loc: {
          start: {
            line: 217,
            column: 8
          },
          end: {
            line: 219,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 217,
            column: 8
          },
          end: {
            line: 219,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 217
      },
      "41": {
        loc: {
          start: {
            line: 217,
            column: 12
          },
          end: {
            line: 217,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 217,
            column: 12
          },
          end: {
            line: 217,
            column: 46
          }
        }, {
          start: {
            line: 217,
            column: 50
          },
          end: {
            line: 217,
            column: 76
          }
        }],
        line: 217
      },
      "42": {
        loc: {
          start: {
            line: 220,
            column: 8
          },
          end: {
            line: 227,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 220,
            column: 8
          },
          end: {
            line: 227,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 220
      },
      "43": {
        loc: {
          start: {
            line: 223,
            column: 24
          },
          end: {
            line: 223,
            column: 80
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 223,
            column: 53
          },
          end: {
            line: 223,
            column: 69
          }
        }, {
          start: {
            line: 223,
            column: 72
          },
          end: {
            line: 223,
            column: 80
          }
        }],
        line: 223
      },
      "44": {
        loc: {
          start: {
            line: 230,
            column: 12
          },
          end: {
            line: 232,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 230,
            column: 12
          },
          end: {
            line: 232,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 230
      },
      "45": {
        loc: {
          start: {
            line: 235,
            column: 79
          },
          end: {
            line: 235,
            column: 150
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 235,
            column: 80
          },
          end: {
            line: 235,
            column: 136
          }
        }, {
          start: {
            line: 235,
            column: 141
          },
          end: {
            line: 235,
            column: 150
          }
        }],
        line: 235
      },
      "46": {
        loc: {
          start: {
            line: 235,
            column: 80
          },
          end: {
            line: 235,
            column: 136
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 235,
            column: 115
          },
          end: {
            line: 235,
            column: 121
          }
        }, {
          start: {
            line: 235,
            column: 124
          },
          end: {
            line: 235,
            column: 136
          }
        }],
        line: 235
      },
      "47": {
        loc: {
          start: {
            line: 235,
            column: 80
          },
          end: {
            line: 235,
            column: 112
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 235,
            column: 80
          },
          end: {
            line: 235,
            column: 93
          }
        }, {
          start: {
            line: 235,
            column: 97
          },
          end: {
            line: 235,
            column: 112
          }
        }],
        line: 235
      },
      "48": {
        loc: {
          start: {
            line: 236,
            column: 35
          },
          end: {
            line: 236,
            column: 157
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 236,
            column: 36
          },
          end: {
            line: 236,
            column: 150
          }
        }, {
          start: {
            line: 236,
            column: 155
          },
          end: {
            line: 236,
            column: 157
          }
        }],
        line: 236
      },
      "49": {
        loc: {
          start: {
            line: 236,
            column: 36
          },
          end: {
            line: 236,
            column: 150
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 236,
            column: 103
          },
          end: {
            line: 236,
            column: 109
          }
        }, {
          start: {
            line: 236,
            column: 112
          },
          end: {
            line: 236,
            column: 150
          }
        }],
        line: 236
      },
      "50": {
        loc: {
          start: {
            line: 236,
            column: 36
          },
          end: {
            line: 236,
            column: 100
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 236,
            column: 36
          },
          end: {
            line: 236,
            column: 65
          }
        }, {
          start: {
            line: 236,
            column: 69
          },
          end: {
            line: 236,
            column: 100
          }
        }],
        line: 236
      },
      "51": {
        loc: {
          start: {
            line: 247,
            column: 78
          },
          end: {
            line: 247,
            column: 134
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 247,
            column: 103
          },
          end: {
            line: 247,
            column: 116
          }
        }, {
          start: {
            line: 247,
            column: 119
          },
          end: {
            line: 247,
            column: 134
          }
        }],
        line: 247
      },
      "52": {
        loc: {
          start: {
            line: 267,
            column: 60
          },
          end: {
            line: 267,
            column: 116
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 267,
            column: 85
          },
          end: {
            line: 267,
            column: 98
          }
        }, {
          start: {
            line: 267,
            column: 101
          },
          end: {
            line: 267,
            column: 116
          }
        }],
        line: 267
      },
      "53": {
        loc: {
          start: {
            line: 276,
            column: 34
          },
          end: {
            line: 276,
            column: 147
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 276,
            column: 93
          },
          end: {
            line: 276,
            column: 99
          }
        }, {
          start: {
            line: 276,
            column: 102
          },
          end: {
            line: 276,
            column: 147
          }
        }],
        line: 276
      },
      "54": {
        loc: {
          start: {
            line: 276,
            column: 34
          },
          end: {
            line: 276,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 276,
            column: 34
          },
          end: {
            line: 276,
            column: 73
          }
        }, {
          start: {
            line: 276,
            column: 77
          },
          end: {
            line: 276,
            column: 90
          }
        }],
        line: 276
      },
      "55": {
        loc: {
          start: {
            line: 277,
            column: 12
          },
          end: {
            line: 279,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 277,
            column: 12
          },
          end: {
            line: 279,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 277
      },
      "56": {
        loc: {
          start: {
            line: 285,
            column: 45
          },
          end: {
            line: 285,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 285,
            column: 45
          },
          end: {
            line: 285,
            column: 72
          }
        }, {
          start: {
            line: 285,
            column: 76
          },
          end: {
            line: 285,
            column: 78
          }
        }],
        line: 285
      },
      "57": {
        loc: {
          start: {
            line: 290,
            column: 49
          },
          end: {
            line: 290,
            column: 105
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 290,
            column: 74
          },
          end: {
            line: 290,
            column: 87
          }
        }, {
          start: {
            line: 290,
            column: 90
          },
          end: {
            line: 290,
            column: 105
          }
        }],
        line: 290
      },
      "58": {
        loc: {
          start: {
            line: 316,
            column: 16
          },
          end: {
            line: 330,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 316,
            column: 16
          },
          end: {
            line: 330,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 316
      },
      "59": {
        loc: {
          start: {
            line: 353,
            column: 12
          },
          end: {
            line: 355,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 353,
            column: 12
          },
          end: {
            line: 355,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 353
      },
      "60": {
        loc: {
          start: {
            line: 363,
            column: 61
          },
          end: {
            line: 363,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 363,
            column: 61
          },
          end: {
            line: 363,
            column: 66
          }
        }, {
          start: {
            line: 363,
            column: 70
          },
          end: {
            line: 363,
            column: 72
          }
        }],
        line: 363
      },
      "61": {
        loc: {
          start: {
            line: 373,
            column: 25
          },
          end: {
            line: 373,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 373,
            column: 25
          },
          end: {
            line: 373,
            column: 48
          }
        }, {
          start: {
            line: 373,
            column: 52
          },
          end: {
            line: 373,
            column: 64
          }
        }],
        line: 373
      },
      "62": {
        loc: {
          start: {
            line: 376,
            column: 8
          },
          end: {
            line: 381,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 376,
            column: 8
          },
          end: {
            line: 381,
            column: 9
          }
        }, {
          start: {
            line: 379,
            column: 13
          },
          end: {
            line: 381,
            column: 9
          }
        }],
        line: 376
      },
      "63": {
        loc: {
          start: {
            line: 384,
            column: 20
          },
          end: {
            line: 384,
            column: 46
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 384,
            column: 37
          },
          end: {
            line: 384,
            column: 40
          }
        }, {
          start: {
            line: 384,
            column: 43
          },
          end: {
            line: 384,
            column: 46
          }
        }],
        line: 384
      },
      "64": {
        loc: {
          start: {
            line: 397,
            column: 25
          },
          end: {
            line: 397,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 397,
            column: 50
          },
          end: {
            line: 397,
            column: 63
          }
        }, {
          start: {
            line: 397,
            column: 66
          },
          end: {
            line: 397,
            column: 81
          }
        }],
        line: 397
      },
      "65": {
        loc: {
          start: {
            line: 404,
            column: 12
          },
          end: {
            line: 404,
            column: 26
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 404,
            column: 21
          },
          end: {
            line: 404,
            column: 26
          }
        }],
        line: 404
      },
      "66": {
        loc: {
          start: {
            line: 404,
            column: 37
          },
          end: {
            line: 404,
            column: 54
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 404,
            column: 49
          },
          end: {
            line: 404,
            column: 54
          }
        }],
        line: 404
      },
      "67": {
        loc: {
          start: {
            line: 404,
            column: 56
          },
          end: {
            line: 404,
            column: 72
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 404,
            column: 67
          },
          end: {
            line: 404,
            column: 72
          }
        }],
        line: 404
      },
      "68": {
        loc: {
          start: {
            line: 404,
            column: 74
          },
          end: {
            line: 404,
            column: 100
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 404,
            column: 88
          },
          end: {
            line: 404,
            column: 100
          }
        }],
        line: 404
      },
      "69": {
        loc: {
          start: {
            line: 409,
            column: 21
          },
          end: {
            line: 409,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 409,
            column: 21
          },
          end: {
            line: 409,
            column: 28
          }
        }, {
          start: {
            line: 409,
            column: 32
          },
          end: {
            line: 409,
            column: 54
          }
        }],
        line: 409
      },
      "70": {
        loc: {
          start: {
            line: 416,
            column: 20
          },
          end: {
            line: 416,
            column: 46
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 416,
            column: 37
          },
          end: {
            line: 416,
            column: 40
          }
        }, {
          start: {
            line: 416,
            column: 43
          },
          end: {
            line: 416,
            column: 46
          }
        }],
        line: 416
      },
      "71": {
        loc: {
          start: {
            line: 419,
            column: 25
          },
          end: {
            line: 419,
            column: 90
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 419,
            column: 44
          },
          end: {
            line: 419,
            column: 64
          }
        }, {
          start: {
            line: 419,
            column: 67
          },
          end: {
            line: 419,
            column: 90
          }
        }],
        line: 419
      },
      "72": {
        loc: {
          start: {
            line: 424,
            column: 23
          },
          end: {
            line: 424,
            column: 49
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 424,
            column: 40
          },
          end: {
            line: 424,
            column: 43
          }
        }, {
          start: {
            line: 424,
            column: 46
          },
          end: {
            line: 424,
            column: 49
          }
        }],
        line: 424
      },
      "73": {
        loc: {
          start: {
            line: 433,
            column: 25
          },
          end: {
            line: 433,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 433,
            column: 50
          },
          end: {
            line: 433,
            column: 63
          }
        }, {
          start: {
            line: 433,
            column: 66
          },
          end: {
            line: 433,
            column: 81
          }
        }],
        line: 433
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0],
      "9": [0],
      "10": [0],
      "11": [0],
      "12": [0],
      "13": [0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0],
      "66": [0],
      "67": [0],
      "68": [0],
      "69": [0, 0],
      "70": [0, 0],
      "71": [0, 0],
      "72": [0, 0],
      "73": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/dikshantvashistha/PrepBettr/azure/config-sync/index.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/dikshantvashistha/PrepBettr/azure/config-sync/index.ts"],
      sourcesContent: ["/**\n * Azure Function: Config Sync\n * \n * Automatically synchronizes Azure App Configuration to Firebase Remote Config\n * to eliminate configuration drift between platforms.\n * \n * Triggers:\n * - Timer: Every 5 minutes\n * - HTTP: Manual trigger with optional dry-run and rollback\n */\n\nimport { Context, HttpRequest } from \"@azure/functions\";\nimport { AppConfigurationClient } from '@azure/app-configuration';\nimport { DefaultAzureCredential } from '@azure/identity';\nimport { getAdminFirestore, getAdminRemoteConfig } from '../lib/firebase/admin';\nimport { azureCosmosService } from '../lib/shared/azure-cosmos-service';\nimport { logServerError } from '../lib/shared/error-handling';\n\n// Application Insights setup\nconst appInsights = require('applicationinsights');\nif (process.env.APPLICATIONINSIGHTS_CONNECTION_STRING) {\n  appInsights.setup(process.env.APPLICATIONINSIGHTS_CONNECTION_STRING)\n    .setAutoCollectRequests(true)\n    .setAutoCollectPerformance(true)\n    .setAutoCollectExceptions(true)\n    .setAutoCollectDependencies(true)\n    .start();\n}\n\n// ===== INTERFACES =====\n\ninterface SyncOptions {\n  dryRun?: boolean;\n  version?: string;\n  forceSync?: boolean;\n  rollback?: boolean;\n  environment?: string;\n}\n\ninterface SyncResult {\n  success: boolean;\n  syncedCount: number;\n  failedCount: number;\n  driftDetected: number;\n  details: SyncDetail[];\n  errors: string[];\n  timestamp: Date;\n  version: string;\n}\n\ninterface SyncDetail {\n  key: string;\n  action: 'synced' | 'no_change' | 'failed' | 'drift_detected';\n  azureValue?: any;\n  firebaseValue?: any;\n  error?: string;\n}\n\ninterface ConfigAuditEntry {\n  id: string;\n  key: string;\n  oldValue: any;\n  newValue: any;\n  version: string;\n  source: 'config-sync';\n  changedBy: string;\n  timestamp: Date;\n  environment: string;\n  syncResult: boolean;\n}\n\n// ===== CONFIG SYNC SERVICE =====\n\nclass ConfigSyncService {\n  private azureClient: AppConfigurationClient | null = null;\n  private remoteConfig: any = null;\n  private firestore: any = null;\n\n  constructor(private context: Context) {}\n\n  async initialize(): Promise<void> {\n    try {\n      // Initialize Azure App Configuration\n      const connectionString = process.env.AZURE_APP_CONFIG_CONNECTION_STRING;\n      const endpoint = process.env.AZURE_APP_CONFIG_ENDPOINT;\n\n      if (connectionString) {\n        this.azureClient = new AppConfigurationClient(connectionString);\n      } else if (endpoint) {\n        const credential = new DefaultAzureCredential();\n        this.azureClient = new AppConfigurationClient(endpoint, credential);\n      } else {\n        throw new Error('Azure App Configuration not configured');\n      }\n\n      // Initialize Firebase Admin\n      this.remoteConfig = getAdminRemoteConfig();\n      this.firestore = getAdminFirestore();\n\n      // Initialize Cosmos DB for audit logging\n      await azureCosmosService.initialize();\n\n      this.context.log('\u2705 Config Sync Service initialized');\n    } catch (error) {\n      this.context.log.error('\u274C Failed to initialize Config Sync Service:', error);\n      throw error;\n    }\n  }\n\n  async syncConfigurations(options: SyncOptions = {}): Promise<SyncResult> {\n    const {\n      dryRun = false,\n      version = `sync_${Date.now()}`,\n      forceSync = false,\n      rollback = false,\n      environment = 'production'\n    } = options;\n\n    const result: SyncResult = {\n      success: false,\n      syncedCount: 0,\n      failedCount: 0,\n      driftDetected: 0,\n      details: [],\n      errors: [],\n      timestamp: new Date(),\n      version\n    };\n\n    try {\n      await this.initialize();\n\n      if (rollback) {\n        return await this.performRollback(version, result);\n      }\n\n      // Get all Azure App Configuration settings that should sync to Firebase\n      const azureConfigs = await this.getAzureConfigsToSync();\n      \n      if (azureConfigs.length === 0) {\n        this.context.log('\u2139\uFE0F No configurations marked for Firebase sync');\n        result.success = true;\n        return result;\n      }\n\n      // Get current Firebase Remote Config template\n      const firebaseTemplate = await this.remoteConfig.getTemplate();\n      let templateModified = false;\n\n      this.context.log(`\uD83D\uDCE6 Processing ${azureConfigs.length} configurations for sync`);\n\n      // Process each configuration\n      for (const azureConfig of azureConfigs) {\n        try {\n          const detail = await this.syncSingleConfiguration(\n            azureConfig,\n            firebaseTemplate,\n            { dryRun, forceSync }\n          );\n\n          result.details.push(detail);\n\n          switch (detail.action) {\n            case 'synced':\n              result.syncedCount++;\n              templateModified = true;\n              break;\n            case 'drift_detected':\n              result.driftDetected++;\n              break;\n            case 'failed':\n              result.failedCount++;\n              break;\n          }\n\n        } catch (error) {\n          const errorMsg = `Failed to sync ${azureConfig.key}: ${error instanceof Error ? error.message : 'Unknown error'}`;\n          result.errors.push(errorMsg);\n          result.failedCount++;\n\n          result.details.push({\n            key: azureConfig.key!,\n            action: 'failed',\n            error: errorMsg\n          });\n\n          this.context.log.error(`\u274C ${errorMsg}`);\n        }\n      }\n\n      // Publish updated template to Firebase if changes were made\n      if (templateModified && !dryRun) {\n        try {\n          await this.publishFirebaseTemplate(firebaseTemplate, version);\n          this.context.log(`\u2705 Published Firebase Remote Config template (version: ${version})`);\n        } catch (error) {\n          const errorMsg = `Failed to publish Firebase template: ${error instanceof Error ? error.message : 'Unknown error'}`;\n          result.errors.push(errorMsg);\n          this.context.log.error(`\u274C ${errorMsg}`);\n        }\n      }\n\n      // Record sync operation in audit log\n      if (!dryRun) {\n        await this.recordSyncAudit(result, environment);\n      }\n\n      // Send Application Insights telemetry\n      this.sendTelemetry(result);\n\n      // Determine overall success\n      result.success = result.failedCount === 0;\n\n      this.context.log(`${result.success ? '\u2705' : '\u26A0\uFE0F'} Sync completed: ${result.syncedCount} synced, ${result.failedCount} failed, ${result.driftDetected} drift detected`);\n\n      if (dryRun) {\n        this.context.log('\uD83E\uDDEA DRY RUN: No changes were actually made');\n      }\n\n      return result;\n\n    } catch (error) {\n      const errorMsg = `Sync operation failed: ${error instanceof Error ? error.message : 'Unknown error'}`;\n      result.errors.push(errorMsg);\n      result.success = false;\n      \n      this.context.log.error(`\u274C ${errorMsg}`);\n      logServerError(error as Error, { service: 'config-sync', action: 'sync' });\n\n      return result;\n    }\n  }\n\n  private async getAzureConfigsToSync(): Promise<any[]> {\n    if (!this.azureClient) throw new Error('Azure client not initialized');\n\n    const configs: any[] = [];\n\n    try {\n      const settingsIterable = this.azureClient.listConfigurationSettings();\n\n      for await (const setting of settingsIterable) {\n        // Only sync settings tagged for Firebase sync\n        if (setting.tags?.syncToFirebase === 'true') {\n          configs.push(setting);\n        }\n      }\n\n      return configs;\n    } catch (error) {\n      this.context.log.error('Failed to get Azure configs:', error);\n      throw error;\n    }\n  }\n\n  private async syncSingleConfiguration(\n    azureConfig: any,\n    firebaseTemplate: any,\n    options: { dryRun: boolean; forceSync: boolean }\n  ): Promise<SyncDetail> {\n    const { key, value: azureValue, tags } = azureConfig;\n    const { dryRun, forceSync } = options;\n\n    // Get current Firebase value\n    const currentFirebaseParam = firebaseTemplate.parameters?.[key];\n    const currentFirebaseValue = currentFirebaseParam?.defaultValue?.value;\n\n    // Calculate hashes for drift detection\n    const azureHash = this.calculateHash(azureValue);\n    const firebaseHash = this.calculateHash(currentFirebaseValue);\n\n    // Check if values are already in sync\n    if (!forceSync && azureHash === firebaseHash) {\n      return {\n        key,\n        action: 'no_change',\n        azureValue,\n        firebaseValue: currentFirebaseValue\n      };\n    }\n\n    // Detect drift\n    if (currentFirebaseValue !== undefined && azureHash !== firebaseHash) {\n      this.context.log.warn(`\u26A0\uFE0F Drift detected for ${key}: Azure=${azureValue}, Firebase=${currentFirebaseValue}`);\n    }\n\n    if (dryRun) {\n      return {\n        key,\n        action: azureHash !== firebaseHash ? 'drift_detected' : 'synced',\n        azureValue,\n        firebaseValue: currentFirebaseValue\n      };\n    }\n\n    // Update Firebase template\n    try {\n      if (!firebaseTemplate.parameters) {\n        firebaseTemplate.parameters = {};\n      }\n\n      firebaseTemplate.parameters[key] = {\n        defaultValue: { value: azureValue },\n        description: `Synced from Azure App Configuration - Version: ${tags?.version || 'unknown'}`,\n        conditionalValues: currentFirebaseParam?.conditionalValues || {}\n      };\n\n      this.context.log(`\uD83D\uDD04 Synced ${key}: ${azureValue}`);\n\n      return {\n        key,\n        action: 'synced',\n        azureValue,\n        firebaseValue: currentFirebaseValue\n      };\n\n    } catch (error) {\n      throw new Error(`Failed to update Firebase template for ${key}: ${error instanceof Error ? error.message : 'Unknown error'}`);\n    }\n  }\n\n  private async publishFirebaseTemplate(template: any, version: string): Promise<void> {\n    try {\n      // Add version information\n      template.version = {\n        versionNumber: version,\n        updateTime: new Date().toISOString(),\n        updateUser: { email: 'config-sync@prepbettr.com' },\n        updateOrigin: 'ADMIN_SDK_NODE',\n        updateType: 'INCREMENTAL_UPDATE'\n      };\n\n      // Validate template before publishing\n      await this.remoteConfig.validateTemplate(template);\n\n      // Publish the template\n      const publishedTemplate = await this.remoteConfig.publishTemplate(template);\n      \n      this.context.log(`\u2705 Firebase template published successfully (version: ${publishedTemplate.version.versionNumber})`);\n    } catch (error) {\n      throw new Error(`Template publication failed: ${error instanceof Error ? error.message : 'Unknown error'}`);\n    }\n  }\n\n  private async performRollback(versionId: string, result: SyncResult): Promise<SyncResult> {\n    try {\n      this.context.log(`\uD83D\uDD04 Starting rollback to version ${versionId}`);\n\n      // Get rollback template from Firebase version history\n      const versionHistory = await this.remoteConfig.listVersions({ pageSize: 100 });\n      const targetVersion = versionHistory.versions?.find((v: any) => v.versionNumber === versionId);\n\n      if (!targetVersion) {\n        throw new Error(`Version ${versionId} not found in Firebase Remote Config history`);\n      }\n\n      // Get the template for the target version\n      const rollbackTemplate = await this.remoteConfig.getTemplate(versionId);\n\n      // Publish the rollback template\n      await this.publishFirebaseTemplate(rollbackTemplate, `rollback_${versionId}_${Date.now()}`);\n\n      result.success = true;\n      result.syncedCount = Object.keys(rollbackTemplate.parameters || {}).length;\n      \n      this.context.log(`\u2705 Successfully rolled back to version ${versionId}`);\n\n      return result;\n\n    } catch (error) {\n      const errorMsg = `Rollback failed: ${error instanceof Error ? error.message : 'Unknown error'}`;\n      result.errors.push(errorMsg);\n      result.success = false;\n\n      this.context.log.error(`\u274C ${errorMsg}`);\n      throw error;\n    }\n  }\n\n  private async recordSyncAudit(result: SyncResult, environment: string): Promise<void> {\n    try {\n      const auditEntry = {\n        id: `sync_audit_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n        timestamp: new Date(),\n        version: result.version,\n        environment,\n        success: result.success,\n        syncedCount: result.syncedCount,\n        failedCount: result.failedCount,\n        driftDetected: result.driftDetected,\n        details: result.details,\n        errors: result.errors,\n        source: 'config-sync-function',\n        _partitionKey: 'sync-audit'\n      };\n\n      await azureCosmosService.createDocument('configSyncAudit', auditEntry);\n\n      // Also record individual config changes\n      for (const detail of result.details) {\n        if (detail.action === 'synced') {\n          const configAudit: ConfigAuditEntry = {\n            id: `config_audit_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n            key: detail.key,\n            oldValue: detail.firebaseValue,\n            newValue: detail.azureValue,\n            version: result.version,\n            source: 'config-sync',\n            changedBy: 'azure-function',\n            timestamp: new Date(),\n            environment,\n            syncResult: true\n          };\n\n          await azureCosmosService.createDocument('configAudit', {\n            ...configAudit,\n            _partitionKey: detail.key\n          });\n        }\n      }\n\n      this.context.log('\uD83D\uDCDD Recorded sync audit entries');\n    } catch (error) {\n      this.context.log.error('Failed to record sync audit:', error);\n    }\n  }\n\n  private async sendTelemetry(result: SyncResult): Promise<void> {\n    try {\n      const telemetryData = {\n        operationType: 'config-sync',\n        success: result.success,\n        syncedCount: result.syncedCount,\n        failedCount: result.failedCount,\n        driftDetected: result.driftDetected,\n        version: result.version,\n        timestamp: result.timestamp,\n        duration: Date.now() - result.timestamp.getTime()\n      };\n\n      // Send custom event to Application Insights\n      this.context.log.info('\uD83D\uDCCA Config sync telemetry', telemetryData);\n\n      // If drift was detected, log as warning\n      if (result.driftDetected > 0) {\n        this.context.log.warn(`\u26A0\uFE0F Configuration drift detected in ${result.driftDetected} keys`);\n      }\n\n    } catch (error) {\n      this.context.log.error('Failed to send telemetry:', error);\n    }\n  }\n\n  private calculateHash(value: any): string {\n    const crypto = require('crypto');\n    const normalized = JSON.stringify(value, Object.keys(value || {}).sort());\n    return crypto.createHash('sha256').update(normalized).digest('hex').substring(0, 16);\n  }\n}\n\n// ===== AZURE FUNCTION HANDLERS =====\n\nconst timerTrigger = async function (context: Context, myTimer: any): Promise<void> {\n  context.log('\uD83D\uDD50 Timer trigger: Starting scheduled config sync');\n\n  const syncService = new ConfigSyncService(context);\n\n  try {\n    const result = await syncService.syncConfigurations({\n      environment: process.env.ENVIRONMENT || 'production',\n      version: `scheduled_${Date.now()}`\n    });\n\n    if (result.success) {\n      context.log('\u2705 Scheduled sync completed successfully');\n    } else {\n      context.log.error('\u274C Scheduled sync completed with errors');\n    }\n\n    // Set response for monitoring\n    context.res = {\n      status: result.success ? 200 : 500,\n      body: {\n        message: 'Scheduled sync completed',\n        result\n      }\n    };\n\n  } catch (error) {\n    context.log.error('\u274C Scheduled sync failed:', error);\n    \n    context.res = {\n      status: 500,\n      body: {\n        error: 'Sync operation failed',\n        message: error instanceof Error ? error.message : 'Unknown error'\n      }\n    };\n  }\n};\n\nconst httpTrigger = async function (context: Context, req: HttpRequest): Promise<void> {\n  context.log('\uD83C\uDF10 HTTP trigger: Manual config sync requested');\n\n  const {\n    dryRun = false,\n    version,\n    forceSync = false,\n    rollback = false,\n    environment = 'production'\n  } = req.query;\n\n  const syncService = new ConfigSyncService(context);\n\n  try {\n    const options: SyncOptions = {\n      dryRun: dryRun === 'true',\n      version: version || `manual_${Date.now()}`,\n      forceSync: forceSync === 'true',\n      rollback: rollback === 'true',\n      environment: environment as string\n    };\n\n    const result = await syncService.syncConfigurations(options);\n\n    context.res = {\n      status: result.success ? 200 : 400,\n      headers: { 'Content-Type': 'application/json' },\n      body: {\n        message: options.rollback ? 'Rollback completed' : 'Manual sync completed',\n        result,\n        options\n      }\n    };\n\n    context.log(`${result.success ? '\u2705' : '\u274C'} Manual sync completed`);\n\n  } catch (error) {\n    context.log.error('\u274C Manual sync failed:', error);\n\n    context.res = {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' },\n      body: {\n        error: 'Manual sync failed',\n        message: error instanceof Error ? error.message : 'Unknown error'\n      }\n    };\n  }\n};\n\n// ===== EXPORTS =====\n\nexport default timerTrigger;\nexport { httpTrigger };\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c924e7733f58fab508899aca99732eef2d3e8ab3"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_5dw3r5ies = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_5dw3r5ies();
var __asyncValues =
/* istanbul ignore next */
(cov_5dw3r5ies().s[0]++,
/* istanbul ignore next */
(cov_5dw3r5ies().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_5dw3r5ies().b[0][1]++, this.__asyncValues) ||
/* istanbul ignore next */
(cov_5dw3r5ies().b[0][2]++, function (o) {
  /* istanbul ignore next */
  cov_5dw3r5ies().f[0]++;
  cov_5dw3r5ies().s[1]++;
  if (!Symbol.asyncIterator) {
    /* istanbul ignore next */
    cov_5dw3r5ies().b[1][0]++;
    cov_5dw3r5ies().s[2]++;
    throw new TypeError("Symbol.asyncIterator is not defined.");
  } else
  /* istanbul ignore next */
  {
    cov_5dw3r5ies().b[1][1]++;
  }
  var m =
    /* istanbul ignore next */
    (cov_5dw3r5ies().s[3]++, o[Symbol.asyncIterator]),
    i;
  /* istanbul ignore next */
  cov_5dw3r5ies().s[4]++;
  return m ?
  /* istanbul ignore next */
  (cov_5dw3r5ies().b[2][0]++, m.call(o)) :
  /* istanbul ignore next */
  (cov_5dw3r5ies().b[2][1]++, o = typeof __values === "function" ?
  /* istanbul ignore next */
  (cov_5dw3r5ies().b[3][0]++, __values(o)) :
  /* istanbul ignore next */
  (cov_5dw3r5ies().b[3][1]++, o[Symbol.iterator]()), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () {
    /* istanbul ignore next */
    cov_5dw3r5ies().f[1]++;
    cov_5dw3r5ies().s[5]++;
    return this;
  }, i);
  function verb(n) {
    /* istanbul ignore next */
    cov_5dw3r5ies().f[2]++;
    cov_5dw3r5ies().s[6]++;
    i[n] =
    /* istanbul ignore next */
    (cov_5dw3r5ies().b[4][0]++, o[n]) &&
    /* istanbul ignore next */
    (cov_5dw3r5ies().b[4][1]++, function (v) {
      /* istanbul ignore next */
      cov_5dw3r5ies().f[3]++;
      cov_5dw3r5ies().s[7]++;
      return new Promise(function (resolve, reject) {
        /* istanbul ignore next */
        cov_5dw3r5ies().f[4]++;
        cov_5dw3r5ies().s[8]++;
        v = o[n](v), settle(resolve, reject, v.done, v.value);
      });
    });
  }
  function settle(resolve, reject, d, v) {
    /* istanbul ignore next */
    cov_5dw3r5ies().f[5]++;
    cov_5dw3r5ies().s[9]++;
    Promise.resolve(v).then(function (v) {
      /* istanbul ignore next */
      cov_5dw3r5ies().f[6]++;
      cov_5dw3r5ies().s[10]++;
      resolve({
        value: v,
        done: d
      });
    }, reject);
  }
}));
/* istanbul ignore next */
cov_5dw3r5ies().s[11]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_5dw3r5ies().s[12]++;
exports.httpTrigger = void 0;
const app_configuration_1 =
/* istanbul ignore next */
(cov_5dw3r5ies().s[13]++, require("@azure/app-configuration"));
const identity_1 =
/* istanbul ignore next */
(cov_5dw3r5ies().s[14]++, require("@azure/identity"));
const admin_1 =
/* istanbul ignore next */
(cov_5dw3r5ies().s[15]++, require("../lib/firebase/admin"));
const azure_cosmos_service_1 =
/* istanbul ignore next */
(cov_5dw3r5ies().s[16]++, require("../lib/shared/azure-cosmos-service"));
const error_handling_1 =
/* istanbul ignore next */
(cov_5dw3r5ies().s[17]++, require("../lib/shared/error-handling"));
// Application Insights setup
const appInsights =
/* istanbul ignore next */
(cov_5dw3r5ies().s[18]++, require('applicationinsights'));
/* istanbul ignore next */
cov_5dw3r5ies().s[19]++;
if (process.env.APPLICATIONINSIGHTS_CONNECTION_STRING) {
  /* istanbul ignore next */
  cov_5dw3r5ies().b[5][0]++;
  cov_5dw3r5ies().s[20]++;
  appInsights.setup(process.env.APPLICATIONINSIGHTS_CONNECTION_STRING).setAutoCollectRequests(true).setAutoCollectPerformance(true).setAutoCollectExceptions(true).setAutoCollectDependencies(true).start();
} else
/* istanbul ignore next */
{
  cov_5dw3r5ies().b[5][1]++;
}
// ===== CONFIG SYNC SERVICE =====
class ConfigSyncService {
  constructor(context) {
    /* istanbul ignore next */
    cov_5dw3r5ies().f[7]++;
    cov_5dw3r5ies().s[21]++;
    this.context = context;
    /* istanbul ignore next */
    cov_5dw3r5ies().s[22]++;
    this.azureClient = null;
    /* istanbul ignore next */
    cov_5dw3r5ies().s[23]++;
    this.remoteConfig = null;
    /* istanbul ignore next */
    cov_5dw3r5ies().s[24]++;
    this.firestore = null;
  }
  async initialize() {
    /* istanbul ignore next */
    cov_5dw3r5ies().f[8]++;
    cov_5dw3r5ies().s[25]++;
    try {
      // Initialize Azure App Configuration
      const connectionString =
      /* istanbul ignore next */
      (cov_5dw3r5ies().s[26]++, process.env.AZURE_APP_CONFIG_CONNECTION_STRING);
      const endpoint =
      /* istanbul ignore next */
      (cov_5dw3r5ies().s[27]++, process.env.AZURE_APP_CONFIG_ENDPOINT);
      /* istanbul ignore next */
      cov_5dw3r5ies().s[28]++;
      if (connectionString) {
        /* istanbul ignore next */
        cov_5dw3r5ies().b[6][0]++;
        cov_5dw3r5ies().s[29]++;
        this.azureClient = new app_configuration_1.AppConfigurationClient(connectionString);
      } else {
        /* istanbul ignore next */
        cov_5dw3r5ies().b[6][1]++;
        cov_5dw3r5ies().s[30]++;
        if (endpoint) {
          /* istanbul ignore next */
          cov_5dw3r5ies().b[7][0]++;
          const credential =
          /* istanbul ignore next */
          (cov_5dw3r5ies().s[31]++, new identity_1.DefaultAzureCredential());
          /* istanbul ignore next */
          cov_5dw3r5ies().s[32]++;
          this.azureClient = new app_configuration_1.AppConfigurationClient(endpoint, credential);
        } else {
          /* istanbul ignore next */
          cov_5dw3r5ies().b[7][1]++;
          cov_5dw3r5ies().s[33]++;
          throw new Error('Azure App Configuration not configured');
        }
      }
      // Initialize Firebase Admin
      /* istanbul ignore next */
      cov_5dw3r5ies().s[34]++;
      this.remoteConfig = (0, admin_1.getAdminRemoteConfig)();
      /* istanbul ignore next */
      cov_5dw3r5ies().s[35]++;
      this.firestore = (0, admin_1.getAdminFirestore)();
      // Initialize Cosmos DB for audit logging
      /* istanbul ignore next */
      cov_5dw3r5ies().s[36]++;
      await azure_cosmos_service_1.azureCosmosService.initialize();
      /* istanbul ignore next */
      cov_5dw3r5ies().s[37]++;
      this.context.log('✅ Config Sync Service initialized');
    } catch (error) {
      /* istanbul ignore next */
      cov_5dw3r5ies().s[38]++;
      this.context.log.error('❌ Failed to initialize Config Sync Service:', error);
      /* istanbul ignore next */
      cov_5dw3r5ies().s[39]++;
      throw error;
    }
  }
  async syncConfigurations(options =
  /* istanbul ignore next */
  (cov_5dw3r5ies().b[8][0]++, {})) {
    /* istanbul ignore next */
    cov_5dw3r5ies().f[9]++;
    const {
      dryRun =
      /* istanbul ignore next */
      (cov_5dw3r5ies().b[9][0]++, false),
      version =
      /* istanbul ignore next */
      (cov_5dw3r5ies().b[10][0]++, `sync_${Date.now()}`),
      forceSync =
      /* istanbul ignore next */
      (cov_5dw3r5ies().b[11][0]++, false),
      rollback =
      /* istanbul ignore next */
      (cov_5dw3r5ies().b[12][0]++, false),
      environment =
      /* istanbul ignore next */
      (cov_5dw3r5ies().b[13][0]++, 'production')
    } =
    /* istanbul ignore next */
    (cov_5dw3r5ies().s[40]++, options);
    const result =
    /* istanbul ignore next */
    (cov_5dw3r5ies().s[41]++, {
      success: false,
      syncedCount: 0,
      failedCount: 0,
      driftDetected: 0,
      details: [],
      errors: [],
      timestamp: new Date(),
      version
    });
    /* istanbul ignore next */
    cov_5dw3r5ies().s[42]++;
    try {
      /* istanbul ignore next */
      cov_5dw3r5ies().s[43]++;
      await this.initialize();
      /* istanbul ignore next */
      cov_5dw3r5ies().s[44]++;
      if (rollback) {
        /* istanbul ignore next */
        cov_5dw3r5ies().b[14][0]++;
        cov_5dw3r5ies().s[45]++;
        return await this.performRollback(version, result);
      } else
      /* istanbul ignore next */
      {
        cov_5dw3r5ies().b[14][1]++;
      }
      // Get all Azure App Configuration settings that should sync to Firebase
      const azureConfigs =
      /* istanbul ignore next */
      (cov_5dw3r5ies().s[46]++, await this.getAzureConfigsToSync());
      /* istanbul ignore next */
      cov_5dw3r5ies().s[47]++;
      if (azureConfigs.length === 0) {
        /* istanbul ignore next */
        cov_5dw3r5ies().b[15][0]++;
        cov_5dw3r5ies().s[48]++;
        this.context.log('ℹ️ No configurations marked for Firebase sync');
        /* istanbul ignore next */
        cov_5dw3r5ies().s[49]++;
        result.success = true;
        /* istanbul ignore next */
        cov_5dw3r5ies().s[50]++;
        return result;
      } else
      /* istanbul ignore next */
      {
        cov_5dw3r5ies().b[15][1]++;
      }
      // Get current Firebase Remote Config template
      const firebaseTemplate =
      /* istanbul ignore next */
      (cov_5dw3r5ies().s[51]++, await this.remoteConfig.getTemplate());
      let templateModified =
      /* istanbul ignore next */
      (cov_5dw3r5ies().s[52]++, false);
      /* istanbul ignore next */
      cov_5dw3r5ies().s[53]++;
      this.context.log(`📦 Processing ${azureConfigs.length} configurations for sync`);
      // Process each configuration
      /* istanbul ignore next */
      cov_5dw3r5ies().s[54]++;
      for (const azureConfig of azureConfigs) {
        /* istanbul ignore next */
        cov_5dw3r5ies().s[55]++;
        try {
          const detail =
          /* istanbul ignore next */
          (cov_5dw3r5ies().s[56]++, await this.syncSingleConfiguration(azureConfig, firebaseTemplate, {
            dryRun,
            forceSync
          }));
          /* istanbul ignore next */
          cov_5dw3r5ies().s[57]++;
          result.details.push(detail);
          /* istanbul ignore next */
          cov_5dw3r5ies().s[58]++;
          switch (detail.action) {
            case 'synced':
              /* istanbul ignore next */
              cov_5dw3r5ies().b[16][0]++;
              cov_5dw3r5ies().s[59]++;
              result.syncedCount++;
              /* istanbul ignore next */
              cov_5dw3r5ies().s[60]++;
              templateModified = true;
              /* istanbul ignore next */
              cov_5dw3r5ies().s[61]++;
              break;
            case 'drift_detected':
              /* istanbul ignore next */
              cov_5dw3r5ies().b[16][1]++;
              cov_5dw3r5ies().s[62]++;
              result.driftDetected++;
              /* istanbul ignore next */
              cov_5dw3r5ies().s[63]++;
              break;
            case 'failed':
              /* istanbul ignore next */
              cov_5dw3r5ies().b[16][2]++;
              cov_5dw3r5ies().s[64]++;
              result.failedCount++;
              /* istanbul ignore next */
              cov_5dw3r5ies().s[65]++;
              break;
          }
        } catch (error) {
          const errorMsg =
          /* istanbul ignore next */
          (cov_5dw3r5ies().s[66]++, `Failed to sync ${azureConfig.key}: ${error instanceof Error ?
          /* istanbul ignore next */
          (cov_5dw3r5ies().b[17][0]++, error.message) :
          /* istanbul ignore next */
          (cov_5dw3r5ies().b[17][1]++, 'Unknown error')}`);
          /* istanbul ignore next */
          cov_5dw3r5ies().s[67]++;
          result.errors.push(errorMsg);
          /* istanbul ignore next */
          cov_5dw3r5ies().s[68]++;
          result.failedCount++;
          /* istanbul ignore next */
          cov_5dw3r5ies().s[69]++;
          result.details.push({
            key: azureConfig.key,
            action: 'failed',
            error: errorMsg
          });
          /* istanbul ignore next */
          cov_5dw3r5ies().s[70]++;
          this.context.log.error(`❌ ${errorMsg}`);
        }
      }
      // Publish updated template to Firebase if changes were made
      /* istanbul ignore next */
      cov_5dw3r5ies().s[71]++;
      if (
      /* istanbul ignore next */
      (cov_5dw3r5ies().b[19][0]++, templateModified) &&
      /* istanbul ignore next */
      (cov_5dw3r5ies().b[19][1]++, !dryRun)) {
        /* istanbul ignore next */
        cov_5dw3r5ies().b[18][0]++;
        cov_5dw3r5ies().s[72]++;
        try {
          /* istanbul ignore next */
          cov_5dw3r5ies().s[73]++;
          await this.publishFirebaseTemplate(firebaseTemplate, version);
          /* istanbul ignore next */
          cov_5dw3r5ies().s[74]++;
          this.context.log(`✅ Published Firebase Remote Config template (version: ${version})`);
        } catch (error) {
          const errorMsg =
          /* istanbul ignore next */
          (cov_5dw3r5ies().s[75]++, `Failed to publish Firebase template: ${error instanceof Error ?
          /* istanbul ignore next */
          (cov_5dw3r5ies().b[20][0]++, error.message) :
          /* istanbul ignore next */
          (cov_5dw3r5ies().b[20][1]++, 'Unknown error')}`);
          /* istanbul ignore next */
          cov_5dw3r5ies().s[76]++;
          result.errors.push(errorMsg);
          /* istanbul ignore next */
          cov_5dw3r5ies().s[77]++;
          this.context.log.error(`❌ ${errorMsg}`);
        }
      } else
      /* istanbul ignore next */
      {
        cov_5dw3r5ies().b[18][1]++;
      }
      // Record sync operation in audit log
      cov_5dw3r5ies().s[78]++;
      if (!dryRun) {
        /* istanbul ignore next */
        cov_5dw3r5ies().b[21][0]++;
        cov_5dw3r5ies().s[79]++;
        await this.recordSyncAudit(result, environment);
      } else
      /* istanbul ignore next */
      {
        cov_5dw3r5ies().b[21][1]++;
      }
      // Send Application Insights telemetry
      cov_5dw3r5ies().s[80]++;
      this.sendTelemetry(result);
      // Determine overall success
      /* istanbul ignore next */
      cov_5dw3r5ies().s[81]++;
      result.success = result.failedCount === 0;
      /* istanbul ignore next */
      cov_5dw3r5ies().s[82]++;
      this.context.log(`${result.success ?
      /* istanbul ignore next */
      (cov_5dw3r5ies().b[22][0]++, '✅') :
      /* istanbul ignore next */
      (cov_5dw3r5ies().b[22][1]++, '⚠️')} Sync completed: ${result.syncedCount} synced, ${result.failedCount} failed, ${result.driftDetected} drift detected`);
      /* istanbul ignore next */
      cov_5dw3r5ies().s[83]++;
      if (dryRun) {
        /* istanbul ignore next */
        cov_5dw3r5ies().b[23][0]++;
        cov_5dw3r5ies().s[84]++;
        this.context.log('🧪 DRY RUN: No changes were actually made');
      } else
      /* istanbul ignore next */
      {
        cov_5dw3r5ies().b[23][1]++;
      }
      cov_5dw3r5ies().s[85]++;
      return result;
    } catch (error) {
      const errorMsg =
      /* istanbul ignore next */
      (cov_5dw3r5ies().s[86]++, `Sync operation failed: ${error instanceof Error ?
      /* istanbul ignore next */
      (cov_5dw3r5ies().b[24][0]++, error.message) :
      /* istanbul ignore next */
      (cov_5dw3r5ies().b[24][1]++, 'Unknown error')}`);
      /* istanbul ignore next */
      cov_5dw3r5ies().s[87]++;
      result.errors.push(errorMsg);
      /* istanbul ignore next */
      cov_5dw3r5ies().s[88]++;
      result.success = false;
      /* istanbul ignore next */
      cov_5dw3r5ies().s[89]++;
      this.context.log.error(`❌ ${errorMsg}`);
      /* istanbul ignore next */
      cov_5dw3r5ies().s[90]++;
      (0, error_handling_1.logServerError)(error, {
        service: 'config-sync',
        action: 'sync'
      });
      /* istanbul ignore next */
      cov_5dw3r5ies().s[91]++;
      return result;
    }
  }
  async getAzureConfigsToSync() {
    /* istanbul ignore next */
    cov_5dw3r5ies().f[10]++;
    var _a, e_1, _b, _c;
    var _d;
    /* istanbul ignore next */
    cov_5dw3r5ies().s[92]++;
    if (!this.azureClient) {
      /* istanbul ignore next */
      cov_5dw3r5ies().b[25][0]++;
      cov_5dw3r5ies().s[93]++;
      throw new Error('Azure client not initialized');
    } else
    /* istanbul ignore next */
    {
      cov_5dw3r5ies().b[25][1]++;
    }
    const configs =
    /* istanbul ignore next */
    (cov_5dw3r5ies().s[94]++, []);
    /* istanbul ignore next */
    cov_5dw3r5ies().s[95]++;
    try {
      const settingsIterable =
      /* istanbul ignore next */
      (cov_5dw3r5ies().s[96]++, this.azureClient.listConfigurationSettings());
      /* istanbul ignore next */
      cov_5dw3r5ies().s[97]++;
      try {
        /* istanbul ignore next */
        cov_5dw3r5ies().s[98]++;
        for (var _e =
          /* istanbul ignore next */
          (cov_5dw3r5ies().s[99]++, true), settingsIterable_1 =
          /* istanbul ignore next */
          (cov_5dw3r5ies().s[100]++, __asyncValues(settingsIterable)), settingsIterable_1_1; settingsIterable_1_1 = await settingsIterable_1.next(), _a = settingsIterable_1_1.done, !_a; _e = true) {
          /* istanbul ignore next */
          cov_5dw3r5ies().s[101]++;
          _c = settingsIterable_1_1.value;
          /* istanbul ignore next */
          cov_5dw3r5ies().s[102]++;
          _e = false;
          const setting =
          /* istanbul ignore next */
          (cov_5dw3r5ies().s[103]++, _c);
          // Only sync settings tagged for Firebase sync
          /* istanbul ignore next */
          cov_5dw3r5ies().s[104]++;
          if ((
          /* istanbul ignore next */
          (cov_5dw3r5ies().b[28][0]++, (_d = setting.tags) === null) ||
          /* istanbul ignore next */
          (cov_5dw3r5ies().b[28][1]++, _d === void 0) ?
          /* istanbul ignore next */
          (cov_5dw3r5ies().b[27][0]++, void 0) :
          /* istanbul ignore next */
          (cov_5dw3r5ies().b[27][1]++, _d.syncToFirebase)) === 'true') {
            /* istanbul ignore next */
            cov_5dw3r5ies().b[26][0]++;
            cov_5dw3r5ies().s[105]++;
            configs.push(setting);
          } else
          /* istanbul ignore next */
          {
            cov_5dw3r5ies().b[26][1]++;
          }
        }
      } catch (e_1_1) {
        /* istanbul ignore next */
        cov_5dw3r5ies().s[106]++;
        e_1 = {
          error: e_1_1
        };
      } finally {
        /* istanbul ignore next */
        cov_5dw3r5ies().s[107]++;
        try {
          /* istanbul ignore next */
          cov_5dw3r5ies().s[108]++;
          if (
          /* istanbul ignore next */
          (cov_5dw3r5ies().b[30][0]++, !_e) &&
          /* istanbul ignore next */
          (cov_5dw3r5ies().b[30][1]++, !_a) &&
          /* istanbul ignore next */
          (cov_5dw3r5ies().b[30][2]++, _b = settingsIterable_1.return)) {
            /* istanbul ignore next */
            cov_5dw3r5ies().b[29][0]++;
            cov_5dw3r5ies().s[109]++;
            await _b.call(settingsIterable_1);
          } else
          /* istanbul ignore next */
          {
            cov_5dw3r5ies().b[29][1]++;
          }
        } finally {
          /* istanbul ignore next */
          cov_5dw3r5ies().s[110]++;
          if (e_1) {
            /* istanbul ignore next */
            cov_5dw3r5ies().b[31][0]++;
            cov_5dw3r5ies().s[111]++;
            throw e_1.error;
          } else
          /* istanbul ignore next */
          {
            cov_5dw3r5ies().b[31][1]++;
          }
        }
      }
      /* istanbul ignore next */
      cov_5dw3r5ies().s[112]++;
      return configs;
    } catch (error) {
      /* istanbul ignore next */
      cov_5dw3r5ies().s[113]++;
      this.context.log.error('Failed to get Azure configs:', error);
      /* istanbul ignore next */
      cov_5dw3r5ies().s[114]++;
      throw error;
    }
  }
  async syncSingleConfiguration(azureConfig, firebaseTemplate, options) {
    /* istanbul ignore next */
    cov_5dw3r5ies().f[11]++;
    var _a, _b;
    const {
      key,
      value: azureValue,
      tags
    } =
    /* istanbul ignore next */
    (cov_5dw3r5ies().s[115]++, azureConfig);
    const {
      dryRun,
      forceSync
    } =
    /* istanbul ignore next */
    (cov_5dw3r5ies().s[116]++, options);
    // Get current Firebase value
    const currentFirebaseParam =
    /* istanbul ignore next */
    (cov_5dw3r5ies().s[117]++,
    /* istanbul ignore next */
    (cov_5dw3r5ies().b[33][0]++, (_a = firebaseTemplate.parameters) === null) ||
    /* istanbul ignore next */
    (cov_5dw3r5ies().b[33][1]++, _a === void 0) ?
    /* istanbul ignore next */
    (cov_5dw3r5ies().b[32][0]++, void 0) :
    /* istanbul ignore next */
    (cov_5dw3r5ies().b[32][1]++, _a[key]));
    const currentFirebaseValue =
    /* istanbul ignore next */
    (cov_5dw3r5ies().s[118]++,
    /* istanbul ignore next */
    (cov_5dw3r5ies().b[35][0]++, (_b =
    /* istanbul ignore next */
    (cov_5dw3r5ies().b[37][0]++, currentFirebaseParam === null) ||
    /* istanbul ignore next */
    (cov_5dw3r5ies().b[37][1]++, currentFirebaseParam === void 0) ?
    /* istanbul ignore next */
    (cov_5dw3r5ies().b[36][0]++, void 0) :
    /* istanbul ignore next */
    (cov_5dw3r5ies().b[36][1]++, currentFirebaseParam.defaultValue)) === null) ||
    /* istanbul ignore next */
    (cov_5dw3r5ies().b[35][1]++, _b === void 0) ?
    /* istanbul ignore next */
    (cov_5dw3r5ies().b[34][0]++, void 0) :
    /* istanbul ignore next */
    (cov_5dw3r5ies().b[34][1]++, _b.value));
    // Calculate hashes for drift detection
    const azureHash =
    /* istanbul ignore next */
    (cov_5dw3r5ies().s[119]++, this.calculateHash(azureValue));
    const firebaseHash =
    /* istanbul ignore next */
    (cov_5dw3r5ies().s[120]++, this.calculateHash(currentFirebaseValue));
    // Check if values are already in sync
    /* istanbul ignore next */
    cov_5dw3r5ies().s[121]++;
    if (
    /* istanbul ignore next */
    (cov_5dw3r5ies().b[39][0]++, !forceSync) &&
    /* istanbul ignore next */
    (cov_5dw3r5ies().b[39][1]++, azureHash === firebaseHash)) {
      /* istanbul ignore next */
      cov_5dw3r5ies().b[38][0]++;
      cov_5dw3r5ies().s[122]++;
      return {
        key,
        action: 'no_change',
        azureValue,
        firebaseValue: currentFirebaseValue
      };
    } else
    /* istanbul ignore next */
    {
      cov_5dw3r5ies().b[38][1]++;
    }
    // Detect drift
    cov_5dw3r5ies().s[123]++;
    if (
    /* istanbul ignore next */
    (cov_5dw3r5ies().b[41][0]++, currentFirebaseValue !== undefined) &&
    /* istanbul ignore next */
    (cov_5dw3r5ies().b[41][1]++, azureHash !== firebaseHash)) {
      /* istanbul ignore next */
      cov_5dw3r5ies().b[40][0]++;
      cov_5dw3r5ies().s[124]++;
      this.context.log.warn(`⚠️ Drift detected for ${key}: Azure=${azureValue}, Firebase=${currentFirebaseValue}`);
    } else
    /* istanbul ignore next */
    {
      cov_5dw3r5ies().b[40][1]++;
    }
    cov_5dw3r5ies().s[125]++;
    if (dryRun) {
      /* istanbul ignore next */
      cov_5dw3r5ies().b[42][0]++;
      cov_5dw3r5ies().s[126]++;
      return {
        key,
        action: azureHash !== firebaseHash ?
        /* istanbul ignore next */
        (cov_5dw3r5ies().b[43][0]++, 'drift_detected') :
        /* istanbul ignore next */
        (cov_5dw3r5ies().b[43][1]++, 'synced'),
        azureValue,
        firebaseValue: currentFirebaseValue
      };
    } else
    /* istanbul ignore next */
    {
      cov_5dw3r5ies().b[42][1]++;
    }
    // Update Firebase template
    cov_5dw3r5ies().s[127]++;
    try {
      /* istanbul ignore next */
      cov_5dw3r5ies().s[128]++;
      if (!firebaseTemplate.parameters) {
        /* istanbul ignore next */
        cov_5dw3r5ies().b[44][0]++;
        cov_5dw3r5ies().s[129]++;
        firebaseTemplate.parameters = {};
      } else
      /* istanbul ignore next */
      {
        cov_5dw3r5ies().b[44][1]++;
      }
      cov_5dw3r5ies().s[130]++;
      firebaseTemplate.parameters[key] = {
        defaultValue: {
          value: azureValue
        },
        description: `Synced from Azure App Configuration - Version: ${
        /* istanbul ignore next */
        (cov_5dw3r5ies().b[45][0]++,
        /* istanbul ignore next */
        (cov_5dw3r5ies().b[47][0]++, tags === null) ||
        /* istanbul ignore next */
        (cov_5dw3r5ies().b[47][1]++, tags === void 0) ?
        /* istanbul ignore next */
        (cov_5dw3r5ies().b[46][0]++, void 0) :
        /* istanbul ignore next */
        (cov_5dw3r5ies().b[46][1]++, tags.version)) ||
        /* istanbul ignore next */
        (cov_5dw3r5ies().b[45][1]++, 'unknown')}`,
        conditionalValues:
        /* istanbul ignore next */
        (cov_5dw3r5ies().b[48][0]++,
        /* istanbul ignore next */
        (cov_5dw3r5ies().b[50][0]++, currentFirebaseParam === null) ||
        /* istanbul ignore next */
        (cov_5dw3r5ies().b[50][1]++, currentFirebaseParam === void 0) ?
        /* istanbul ignore next */
        (cov_5dw3r5ies().b[49][0]++, void 0) :
        /* istanbul ignore next */
        (cov_5dw3r5ies().b[49][1]++, currentFirebaseParam.conditionalValues)) ||
        /* istanbul ignore next */
        (cov_5dw3r5ies().b[48][1]++, {})
      };
      /* istanbul ignore next */
      cov_5dw3r5ies().s[131]++;
      this.context.log(`🔄 Synced ${key}: ${azureValue}`);
      /* istanbul ignore next */
      cov_5dw3r5ies().s[132]++;
      return {
        key,
        action: 'synced',
        azureValue,
        firebaseValue: currentFirebaseValue
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_5dw3r5ies().s[133]++;
      throw new Error(`Failed to update Firebase template for ${key}: ${error instanceof Error ?
      /* istanbul ignore next */
      (cov_5dw3r5ies().b[51][0]++, error.message) :
      /* istanbul ignore next */
      (cov_5dw3r5ies().b[51][1]++, 'Unknown error')}`);
    }
  }
  async publishFirebaseTemplate(template, version) {
    /* istanbul ignore next */
    cov_5dw3r5ies().f[12]++;
    cov_5dw3r5ies().s[134]++;
    try {
      /* istanbul ignore next */
      cov_5dw3r5ies().s[135]++;
      // Add version information
      template.version = {
        versionNumber: version,
        updateTime: new Date().toISOString(),
        updateUser: {
          email: 'config-sync@prepbettr.com'
        },
        updateOrigin: 'ADMIN_SDK_NODE',
        updateType: 'INCREMENTAL_UPDATE'
      };
      // Validate template before publishing
      /* istanbul ignore next */
      cov_5dw3r5ies().s[136]++;
      await this.remoteConfig.validateTemplate(template);
      // Publish the template
      const publishedTemplate =
      /* istanbul ignore next */
      (cov_5dw3r5ies().s[137]++, await this.remoteConfig.publishTemplate(template));
      /* istanbul ignore next */
      cov_5dw3r5ies().s[138]++;
      this.context.log(`✅ Firebase template published successfully (version: ${publishedTemplate.version.versionNumber})`);
    } catch (error) {
      /* istanbul ignore next */
      cov_5dw3r5ies().s[139]++;
      throw new Error(`Template publication failed: ${error instanceof Error ?
      /* istanbul ignore next */
      (cov_5dw3r5ies().b[52][0]++, error.message) :
      /* istanbul ignore next */
      (cov_5dw3r5ies().b[52][1]++, 'Unknown error')}`);
    }
  }
  async performRollback(versionId, result) {
    /* istanbul ignore next */
    cov_5dw3r5ies().f[13]++;
    var _a;
    /* istanbul ignore next */
    cov_5dw3r5ies().s[140]++;
    try {
      /* istanbul ignore next */
      cov_5dw3r5ies().s[141]++;
      this.context.log(`🔄 Starting rollback to version ${versionId}`);
      // Get rollback template from Firebase version history
      const versionHistory =
      /* istanbul ignore next */
      (cov_5dw3r5ies().s[142]++, await this.remoteConfig.listVersions({
        pageSize: 100
      }));
      const targetVersion =
      /* istanbul ignore next */
      (cov_5dw3r5ies().s[143]++,
      /* istanbul ignore next */
      (cov_5dw3r5ies().b[54][0]++, (_a = versionHistory.versions) === null) ||
      /* istanbul ignore next */
      (cov_5dw3r5ies().b[54][1]++, _a === void 0) ?
      /* istanbul ignore next */
      (cov_5dw3r5ies().b[53][0]++, void 0) :
      /* istanbul ignore next */
      (cov_5dw3r5ies().b[53][1]++, _a.find(v => {
        /* istanbul ignore next */
        cov_5dw3r5ies().f[14]++;
        cov_5dw3r5ies().s[144]++;
        return v.versionNumber === versionId;
      })));
      /* istanbul ignore next */
      cov_5dw3r5ies().s[145]++;
      if (!targetVersion) {
        /* istanbul ignore next */
        cov_5dw3r5ies().b[55][0]++;
        cov_5dw3r5ies().s[146]++;
        throw new Error(`Version ${versionId} not found in Firebase Remote Config history`);
      } else
      /* istanbul ignore next */
      {
        cov_5dw3r5ies().b[55][1]++;
      }
      // Get the template for the target version
      const rollbackTemplate =
      /* istanbul ignore next */
      (cov_5dw3r5ies().s[147]++, await this.remoteConfig.getTemplate(versionId));
      // Publish the rollback template
      /* istanbul ignore next */
      cov_5dw3r5ies().s[148]++;
      await this.publishFirebaseTemplate(rollbackTemplate, `rollback_${versionId}_${Date.now()}`);
      /* istanbul ignore next */
      cov_5dw3r5ies().s[149]++;
      result.success = true;
      /* istanbul ignore next */
      cov_5dw3r5ies().s[150]++;
      result.syncedCount = Object.keys(
      /* istanbul ignore next */
      (cov_5dw3r5ies().b[56][0]++, rollbackTemplate.parameters) ||
      /* istanbul ignore next */
      (cov_5dw3r5ies().b[56][1]++, {})).length;
      /* istanbul ignore next */
      cov_5dw3r5ies().s[151]++;
      this.context.log(`✅ Successfully rolled back to version ${versionId}`);
      /* istanbul ignore next */
      cov_5dw3r5ies().s[152]++;
      return result;
    } catch (error) {
      const errorMsg =
      /* istanbul ignore next */
      (cov_5dw3r5ies().s[153]++, `Rollback failed: ${error instanceof Error ?
      /* istanbul ignore next */
      (cov_5dw3r5ies().b[57][0]++, error.message) :
      /* istanbul ignore next */
      (cov_5dw3r5ies().b[57][1]++, 'Unknown error')}`);
      /* istanbul ignore next */
      cov_5dw3r5ies().s[154]++;
      result.errors.push(errorMsg);
      /* istanbul ignore next */
      cov_5dw3r5ies().s[155]++;
      result.success = false;
      /* istanbul ignore next */
      cov_5dw3r5ies().s[156]++;
      this.context.log.error(`❌ ${errorMsg}`);
      /* istanbul ignore next */
      cov_5dw3r5ies().s[157]++;
      throw error;
    }
  }
  async recordSyncAudit(result, environment) {
    /* istanbul ignore next */
    cov_5dw3r5ies().f[15]++;
    cov_5dw3r5ies().s[158]++;
    try {
      const auditEntry =
      /* istanbul ignore next */
      (cov_5dw3r5ies().s[159]++, {
        id: `sync_audit_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,
        timestamp: new Date(),
        version: result.version,
        environment,
        success: result.success,
        syncedCount: result.syncedCount,
        failedCount: result.failedCount,
        driftDetected: result.driftDetected,
        details: result.details,
        errors: result.errors,
        source: 'config-sync-function',
        _partitionKey: 'sync-audit'
      });
      /* istanbul ignore next */
      cov_5dw3r5ies().s[160]++;
      await azure_cosmos_service_1.azureCosmosService.createDocument('configSyncAudit', auditEntry);
      // Also record individual config changes
      /* istanbul ignore next */
      cov_5dw3r5ies().s[161]++;
      for (const detail of result.details) {
        /* istanbul ignore next */
        cov_5dw3r5ies().s[162]++;
        if (detail.action === 'synced') {
          /* istanbul ignore next */
          cov_5dw3r5ies().b[58][0]++;
          const configAudit =
          /* istanbul ignore next */
          (cov_5dw3r5ies().s[163]++, {
            id: `config_audit_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,
            key: detail.key,
            oldValue: detail.firebaseValue,
            newValue: detail.azureValue,
            version: result.version,
            source: 'config-sync',
            changedBy: 'azure-function',
            timestamp: new Date(),
            environment,
            syncResult: true
          });
          /* istanbul ignore next */
          cov_5dw3r5ies().s[164]++;
          await azure_cosmos_service_1.azureCosmosService.createDocument('configAudit', Object.assign(Object.assign({}, configAudit), {
            _partitionKey: detail.key
          }));
        } else
        /* istanbul ignore next */
        {
          cov_5dw3r5ies().b[58][1]++;
        }
      }
      /* istanbul ignore next */
      cov_5dw3r5ies().s[165]++;
      this.context.log('📝 Recorded sync audit entries');
    } catch (error) {
      /* istanbul ignore next */
      cov_5dw3r5ies().s[166]++;
      this.context.log.error('Failed to record sync audit:', error);
    }
  }
  async sendTelemetry(result) {
    /* istanbul ignore next */
    cov_5dw3r5ies().f[16]++;
    cov_5dw3r5ies().s[167]++;
    try {
      const telemetryData =
      /* istanbul ignore next */
      (cov_5dw3r5ies().s[168]++, {
        operationType: 'config-sync',
        success: result.success,
        syncedCount: result.syncedCount,
        failedCount: result.failedCount,
        driftDetected: result.driftDetected,
        version: result.version,
        timestamp: result.timestamp,
        duration: Date.now() - result.timestamp.getTime()
      });
      // Send custom event to Application Insights
      /* istanbul ignore next */
      cov_5dw3r5ies().s[169]++;
      this.context.log.info('📊 Config sync telemetry', telemetryData);
      // If drift was detected, log as warning
      /* istanbul ignore next */
      cov_5dw3r5ies().s[170]++;
      if (result.driftDetected > 0) {
        /* istanbul ignore next */
        cov_5dw3r5ies().b[59][0]++;
        cov_5dw3r5ies().s[171]++;
        this.context.log.warn(`⚠️ Configuration drift detected in ${result.driftDetected} keys`);
      } else
      /* istanbul ignore next */
      {
        cov_5dw3r5ies().b[59][1]++;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_5dw3r5ies().s[172]++;
      this.context.log.error('Failed to send telemetry:', error);
    }
  }
  calculateHash(value) {
    /* istanbul ignore next */
    cov_5dw3r5ies().f[17]++;
    const crypto =
    /* istanbul ignore next */
    (cov_5dw3r5ies().s[173]++, require('crypto'));
    const normalized =
    /* istanbul ignore next */
    (cov_5dw3r5ies().s[174]++, JSON.stringify(value, Object.keys(
    /* istanbul ignore next */
    (cov_5dw3r5ies().b[60][0]++, value) ||
    /* istanbul ignore next */
    (cov_5dw3r5ies().b[60][1]++, {})).sort()));
    /* istanbul ignore next */
    cov_5dw3r5ies().s[175]++;
    return crypto.createHash('sha256').update(normalized).digest('hex').substring(0, 16);
  }
}
// ===== AZURE FUNCTION HANDLERS =====
/* istanbul ignore next */
cov_5dw3r5ies().s[176]++;
const timerTrigger = async function (context, myTimer) {
  /* istanbul ignore next */
  cov_5dw3r5ies().f[18]++;
  cov_5dw3r5ies().s[177]++;
  context.log('🕐 Timer trigger: Starting scheduled config sync');
  const syncService =
  /* istanbul ignore next */
  (cov_5dw3r5ies().s[178]++, new ConfigSyncService(context));
  /* istanbul ignore next */
  cov_5dw3r5ies().s[179]++;
  try {
    const result =
    /* istanbul ignore next */
    (cov_5dw3r5ies().s[180]++, await syncService.syncConfigurations({
      environment:
      /* istanbul ignore next */
      (cov_5dw3r5ies().b[61][0]++, process.env.ENVIRONMENT) ||
      /* istanbul ignore next */
      (cov_5dw3r5ies().b[61][1]++, 'production'),
      version: `scheduled_${Date.now()}`
    }));
    /* istanbul ignore next */
    cov_5dw3r5ies().s[181]++;
    if (result.success) {
      /* istanbul ignore next */
      cov_5dw3r5ies().b[62][0]++;
      cov_5dw3r5ies().s[182]++;
      context.log('✅ Scheduled sync completed successfully');
    } else {
      /* istanbul ignore next */
      cov_5dw3r5ies().b[62][1]++;
      cov_5dw3r5ies().s[183]++;
      context.log.error('❌ Scheduled sync completed with errors');
    }
    // Set response for monitoring
    /* istanbul ignore next */
    cov_5dw3r5ies().s[184]++;
    context.res = {
      status: result.success ?
      /* istanbul ignore next */
      (cov_5dw3r5ies().b[63][0]++, 200) :
      /* istanbul ignore next */
      (cov_5dw3r5ies().b[63][1]++, 500),
      body: {
        message: 'Scheduled sync completed',
        result
      }
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_5dw3r5ies().s[185]++;
    context.log.error('❌ Scheduled sync failed:', error);
    /* istanbul ignore next */
    cov_5dw3r5ies().s[186]++;
    context.res = {
      status: 500,
      body: {
        error: 'Sync operation failed',
        message: error instanceof Error ?
        /* istanbul ignore next */
        (cov_5dw3r5ies().b[64][0]++, error.message) :
        /* istanbul ignore next */
        (cov_5dw3r5ies().b[64][1]++, 'Unknown error')
      }
    };
  }
};
/* istanbul ignore next */
cov_5dw3r5ies().s[187]++;
const httpTrigger = async function (context, req) {
  /* istanbul ignore next */
  cov_5dw3r5ies().f[19]++;
  cov_5dw3r5ies().s[188]++;
  context.log('🌐 HTTP trigger: Manual config sync requested');
  const {
    dryRun =
    /* istanbul ignore next */
    (cov_5dw3r5ies().b[65][0]++, false),
    version,
    forceSync =
    /* istanbul ignore next */
    (cov_5dw3r5ies().b[66][0]++, false),
    rollback =
    /* istanbul ignore next */
    (cov_5dw3r5ies().b[67][0]++, false),
    environment =
    /* istanbul ignore next */
    (cov_5dw3r5ies().b[68][0]++, 'production')
  } =
  /* istanbul ignore next */
  (cov_5dw3r5ies().s[189]++, req.query);
  const syncService =
  /* istanbul ignore next */
  (cov_5dw3r5ies().s[190]++, new ConfigSyncService(context));
  /* istanbul ignore next */
  cov_5dw3r5ies().s[191]++;
  try {
    const options =
    /* istanbul ignore next */
    (cov_5dw3r5ies().s[192]++, {
      dryRun: dryRun === 'true',
      version:
      /* istanbul ignore next */
      (cov_5dw3r5ies().b[69][0]++, version) ||
      /* istanbul ignore next */
      (cov_5dw3r5ies().b[69][1]++, `manual_${Date.now()}`),
      forceSync: forceSync === 'true',
      rollback: rollback === 'true',
      environment: environment
    });
    const result =
    /* istanbul ignore next */
    (cov_5dw3r5ies().s[193]++, await syncService.syncConfigurations(options));
    /* istanbul ignore next */
    cov_5dw3r5ies().s[194]++;
    context.res = {
      status: result.success ?
      /* istanbul ignore next */
      (cov_5dw3r5ies().b[70][0]++, 200) :
      /* istanbul ignore next */
      (cov_5dw3r5ies().b[70][1]++, 400),
      headers: {
        'Content-Type': 'application/json'
      },
      body: {
        message: options.rollback ?
        /* istanbul ignore next */
        (cov_5dw3r5ies().b[71][0]++, 'Rollback completed') :
        /* istanbul ignore next */
        (cov_5dw3r5ies().b[71][1]++, 'Manual sync completed'),
        result,
        options
      }
    };
    /* istanbul ignore next */
    cov_5dw3r5ies().s[195]++;
    context.log(`${result.success ?
    /* istanbul ignore next */
    (cov_5dw3r5ies().b[72][0]++, '✅') :
    /* istanbul ignore next */
    (cov_5dw3r5ies().b[72][1]++, '❌')} Manual sync completed`);
  } catch (error) {
    /* istanbul ignore next */
    cov_5dw3r5ies().s[196]++;
    context.log.error('❌ Manual sync failed:', error);
    /* istanbul ignore next */
    cov_5dw3r5ies().s[197]++;
    context.res = {
      status: 500,
      headers: {
        'Content-Type': 'application/json'
      },
      body: {
        error: 'Manual sync failed',
        message: error instanceof Error ?
        /* istanbul ignore next */
        (cov_5dw3r5ies().b[73][0]++, error.message) :
        /* istanbul ignore next */
        (cov_5dw3r5ies().b[73][1]++, 'Unknown error')
      }
    };
  }
};
/* istanbul ignore next */
cov_5dw3r5ies().s[198]++;
exports.httpTrigger = httpTrigger;
// ===== EXPORTS =====
/* istanbul ignore next */
cov_5dw3r5ies().s[199]++;
exports.default = timerTrigger;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,