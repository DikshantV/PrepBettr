{"version":3,"names":["cov_15wcsvsff0","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","exports","verifyTokenWithCloudFunction","verifyUserPermissions","azure_functions_client_1","require","CloudFunctionsVerificationService","constructor","CLOUD_FUNCTIONS_URL","process","env","FIREBASE_FUNCTIONS_URL","FIREBASE_PROJECT_ID","AZURE_FUNCTIONS_URL","idToken","functionName","console","log","azureResult","azureFunctionsClient","verifyToken","valid","decoded","success","data","method","error","Error","azureError","warn","response","fetch","headers","body","JSON","stringify","timestamp","Date","now","ok","errorData","json","catch","status","result","Object","assign","message","requiredPermissions","hasPermissions","permissions","cloudFunctionsVerification"],"sources":["/Users/dikshantvashistha/PrepBettr/lib/services/cloud-functions-verification.ts"],"sourcesContent":["\"use server\";\n\nimport { azureFunctionsClient } from '@/lib/services/azure-functions-client';\n\n/**\n * Cloud Functions verification service\n * Uses Azure Functions as primary, Firebase Cloud Functions as fallback\n */\nclass CloudFunctionsVerificationService {\n  private readonly CLOUD_FUNCTIONS_URL = process.env.FIREBASE_FUNCTIONS_URL || \n    `https://us-central1-${process.env.FIREBASE_PROJECT_ID}.cloudfunctions.net`;\n  private readonly AZURE_FUNCTIONS_URL = process.env.AZURE_FUNCTIONS_URL;\n\n  /**\n   * Verify token using Azure Functions (primary) or Firebase Cloud Functions (fallback)\n   */\n  async verifyTokenWithCloudFunction(idToken: string, functionName: string = 'verifyToken'): Promise<CloudFunctionResult> {\n    // Try Azure Functions first\n    if (this.AZURE_FUNCTIONS_URL) {\n      try {\n        console.log('Attempting token verification via Azure Function');\n        const azureResult = await azureFunctionsClient.verifyToken(idToken);\n        \n        if (azureResult.valid && azureResult.decoded) {\n          return {\n            success: true,\n            data: {\n              valid: true,\n              decoded: azureResult.decoded,\n              method: 'azure-function'\n            },\n            error: null\n          };\n        } else {\n          throw new Error(azureResult.error || 'Azure Function verification failed');\n        }\n      } catch (azureError) {\n        console.warn('Azure Function verification failed, falling back to Firebase:', azureError);\n        // Continue to Firebase fallback\n      }\n    }\n    \n    // Fallback to Firebase Cloud Functions\n    try {\n      console.log('Attempting token verification via Firebase Cloud Function');\n      const response = await fetch(`${this.CLOUD_FUNCTIONS_URL}/${functionName}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${idToken}`, // Send token in header\n        },\n        body: JSON.stringify({\n          idToken,\n          timestamp: Date.now()\n        })\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({ error: 'Network error' }));\n        throw new Error(errorData.error || `HTTP ${response.status}`);\n      }\n\n      const result = await response.json();\n      return {\n        success: true,\n        data: { ...result, method: 'firebase-cloud-function' },\n        error: null\n      };\n    } catch (error) {\n      console.error('Both Azure and Firebase Cloud Function verification failed:', error);\n      return {\n        success: false,\n        data: null,\n        error: error instanceof Error ? error.message : 'Unknown error'\n      };\n    }\n  }\n\n  /**\n   * Verify user permissions using Cloud Function\n   */\n  async verifyUserPermissions(idToken: string, requiredPermissions: string[]): Promise<PermissionResult> {\n    try {\n      const response = await fetch(`${this.CLOUD_FUNCTIONS_URL}/verifyPermissions`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${idToken}`,\n        },\n        body: JSON.stringify({\n          requiredPermissions,\n          timestamp: Date.now()\n        })\n      });\n\n      if (!response.ok) {\n        throw new Error(`Permission check failed: HTTP ${response.status}`);\n      }\n\n      const result = await response.json();\n      return {\n        success: true,\n        hasPermissions: result.hasPermissions,\n        permissions: result.permissions,\n        error: null\n      };\n    } catch (error) {\n      console.error('Permission verification failed:', error);\n      return {\n        success: false,\n        hasPermissions: false,\n        permissions: [],\n        error: error instanceof Error ? error.message : 'Unknown error'\n      };\n    }\n  }\n}\n\n\n// Types\ninterface CloudFunctionResult {\n  success: boolean;\n  data: any | null;\n  error: string | null;\n}\n\ninterface PermissionResult {\n  success: boolean;\n  hasPermissions: boolean;\n  permissions: string[];\n  error: string | null;\n}\n\n// Export singleton instance\nexport const cloudFunctionsVerification = new CloudFunctionsVerificationService();\n\n// Helper functions\nexport async function verifyTokenWithCloudFunction(idToken: string): Promise<CloudFunctionResult> {\n  return await cloudFunctionsVerification.verifyTokenWithCloudFunction(idToken);\n}\n\nexport async function verifyUserPermissions(idToken: string, permissions: string[]): Promise<PermissionResult> {\n  return await cloudFunctionsVerification.verifyUserPermissions(idToken, permissions);\n}\n"],"mappings":";AAAA,YAAY;;AAAC;AAAA,SAAAA,eAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;IAAA;IAAAE,KAAA;MAAA;QAAAC,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;IAAA;IAAAO,SAAA;MAAA;QAAAD,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;UAAAR,GAAA;YAAAF,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;QAAA;QAAAV,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;UAAAR,GAAA;YAAAF,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;QAAA;QAAAV,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;UAAAR,GAAA;YAAAF,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;QAAA;QAAAV,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;IAAA;IAAAW,CAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;IAAA;IAAAC,CAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;IAAA;IAAAC,CAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;IAAA;IAAAC,cAAA;MAAAC,IAAA;MAAAC,QAAA;MAAAC,KAAA;MAAAC,OAAA;MAAAC,cAAA;MAAAC,OAAA;IAAA;IAAAC,eAAA;IAAA5B,IAAA;EAAA;EAAA,IAAA6B,QAAA,GAAA5B,MAAA,CAAAE,GAAA,MAAAF,MAAA,CAAAE,GAAA;EAAA,KAAA0B,QAAA,CAAA9B,IAAA,KAAA8B,QAAA,CAAA9B,IAAA,EAAAC,IAAA,KAAAA,IAAA;IAAA6B,QAAA,CAAA9B,IAAA,IAAAK,YAAA;EAAA;EAAA,IAAA0B,cAAA,GAAAD,QAAA,CAAA9B,IAAA;EAAA;IAWM;IAAAD,cAAA,YAAAA,CAAA;MAAA,OAAAgC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAhC,cAAA;AAAAA,cAAA,GAAAoB,CAAA;;;;;;;;;AA8HnBa,OAAA,CAAAC,4BAAA,GAAAA,4BAAA;AAEC;AAAAlC,cAAA,GAAAoB,CAAA;AAEDa,OAAA,CAAAE,qBAAA,GAAAA,qBAAA;AA3IA,MAAAC,wBAAA;AAAA;AAAA,CAAApC,cAAA,GAAAoB,CAAA,OAAAiB,OAAA;AAEA;;;;AAIA,MAAMC,iCAAiC;EAAvCC,YAAA;IAAA;IAAAvC,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IACmB,KAAAoB,mBAAmB;IAAG;IAAA,CAAAxC,cAAA,GAAAsB,CAAA,UAAAmB,OAAO,CAACC,GAAG,CAACC,sBAAsB;IAAA;IAAA,CAAA3C,cAAA,GAAAsB,CAAA,UACvE,uBAAuBmB,OAAO,CAACC,GAAG,CAACE,mBAAmB,qBAAqB;IAAC;IAAA5C,cAAA,GAAAoB,CAAA;IAC7D,KAAAyB,mBAAmB,GAAGJ,OAAO,CAACC,GAAG,CAACG,mBAAmB;EAyGxE;EAvGE;;;EAGA,MAAMX,4BAA4BA,CAACY,OAAe,EAAEC,YAAA;EAAA;EAAA,CAAA/C,cAAA,GAAAsB,CAAA,UAAuB,aAAa;IAAA;IAAAtB,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IACtF;IACA,IAAI,IAAI,CAACyB,mBAAmB,EAAE;MAAA;MAAA7C,cAAA,GAAAsB,CAAA;MAAAtB,cAAA,GAAAoB,CAAA;MAC5B,IAAI;QAAA;QAAApB,cAAA,GAAAoB,CAAA;QACF4B,OAAO,CAACC,GAAG,CAAC,kDAAkD,CAAC;QAC/D,MAAMC,WAAW;QAAA;QAAA,CAAAlD,cAAA,GAAAoB,CAAA,QAAG,MAAMgB,wBAAA,CAAAe,oBAAoB,CAACC,WAAW,CAACN,OAAO,CAAC;QAAC;QAAA9C,cAAA,GAAAoB,CAAA;QAEpE;QAAI;QAAA,CAAApB,cAAA,GAAAsB,CAAA,UAAA4B,WAAW,CAACG,KAAK;QAAA;QAAA,CAAArD,cAAA,GAAAsB,CAAA,UAAI4B,WAAW,CAACI,OAAO,GAAE;UAAA;UAAAtD,cAAA,GAAAsB,CAAA;UAAAtB,cAAA,GAAAoB,CAAA;UAC5C,OAAO;YACLmC,OAAO,EAAE,IAAI;YACbC,IAAI,EAAE;cACJH,KAAK,EAAE,IAAI;cACXC,OAAO,EAAEJ,WAAW,CAACI,OAAO;cAC5BG,MAAM,EAAE;aACT;YACDC,KAAK,EAAE;WACR;QACH,CAAC,MAAM;UAAA;UAAA1D,cAAA,GAAAsB,CAAA;UAAAtB,cAAA,GAAAoB,CAAA;UACL,MAAM,IAAIuC,KAAK;UAAC;UAAA,CAAA3D,cAAA,GAAAsB,CAAA,UAAA4B,WAAW,CAACQ,KAAK;UAAA;UAAA,CAAA1D,cAAA,GAAAsB,CAAA,UAAI,oCAAoC,EAAC;QAC5E;MACF,CAAC,CAAC,OAAOsC,UAAU,EAAE;QAAA;QAAA5D,cAAA,GAAAoB,CAAA;QACnB4B,OAAO,CAACa,IAAI,CAAC,+DAA+D,EAAED,UAAU,CAAC;QACzF;MACF;IACF,CAAC;IAAA;IAAA;MAAA5D,cAAA,GAAAsB,CAAA;IAAA;IAED;IAAAtB,cAAA,GAAAoB,CAAA;IACA,IAAI;MAAA;MAAApB,cAAA,GAAAoB,CAAA;MACF4B,OAAO,CAACC,GAAG,CAAC,2DAA2D,CAAC;MACxE,MAAMa,QAAQ;MAAA;MAAA,CAAA9D,cAAA,GAAAoB,CAAA,QAAG,MAAM2C,KAAK,CAAC,GAAG,IAAI,CAACvB,mBAAmB,IAAIO,YAAY,EAAE,EAAE;QAC1EU,MAAM,EAAE,MAAM;QACdO,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAE,UAAUlB,OAAO,EAAE,CAAE;SACvC;QACDmB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBrB,OAAO;UACPsB,SAAS,EAAEC,IAAI,CAACC,GAAG;SACpB;OACF,CAAC;MAAC;MAAAtE,cAAA,GAAAoB,CAAA;MAEH,IAAI,CAAC0C,QAAQ,CAACS,EAAE,EAAE;QAAA;QAAAvE,cAAA,GAAAsB,CAAA;QAChB,MAAMkD,SAAS;QAAA;QAAA,CAAAxE,cAAA,GAAAoB,CAAA,QAAG,MAAM0C,QAAQ,CAACW,IAAI,EAAE,CAACC,KAAK,CAAC,MAAO;UAAA;UAAA1E,cAAA,GAAAqB,CAAA;UAAArB,cAAA,GAAAoB,CAAA;UAAA;YAAEsC,KAAK,EAAE;UAAe,CAAE;QAAF,CAAG,CAAC;QAAC;QAAA1D,cAAA,GAAAoB,CAAA;QAClF,MAAM,IAAIuC,KAAK;QAAC;QAAA,CAAA3D,cAAA,GAAAsB,CAAA,UAAAkD,SAAS,CAACd,KAAK;QAAA;QAAA,CAAA1D,cAAA,GAAAsB,CAAA,UAAI,QAAQwC,QAAQ,CAACa,MAAM,EAAE,EAAC;MAC/D,CAAC;MAAA;MAAA;QAAA3E,cAAA,GAAAsB,CAAA;MAAA;MAED,MAAMsD,MAAM;MAAA;MAAA,CAAA5E,cAAA,GAAAoB,CAAA,QAAG,MAAM0C,QAAQ,CAACW,IAAI,EAAE;MAAC;MAAAzE,cAAA,GAAAoB,CAAA;MACrC,OAAO;QACLmC,OAAO,EAAE,IAAI;QACbC,IAAI,EAAAqB,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KAAOF,MAAM;UAAEnB,MAAM,EAAE;QAAyB,EAAE;QACtDC,KAAK,EAAE;OACR;IACH,CAAC,CAAC,OAAOA,KAAK,EAAE;MAAA;MAAA1D,cAAA,GAAAoB,CAAA;MACd4B,OAAO,CAACU,KAAK,CAAC,6DAA6D,EAAEA,KAAK,CAAC;MAAC;MAAA1D,cAAA,GAAAoB,CAAA;MACpF,OAAO;QACLmC,OAAO,EAAE,KAAK;QACdC,IAAI,EAAE,IAAI;QACVE,KAAK,EAAEA,KAAK,YAAYC,KAAK;QAAA;QAAA,CAAA3D,cAAA,GAAAsB,CAAA,UAAGoC,KAAK,CAACqB,OAAO;QAAA;QAAA,CAAA/E,cAAA,GAAAsB,CAAA,UAAG,eAAe;OAChE;IACH;EACF;EAEA;;;EAGA,MAAMa,qBAAqBA,CAACW,OAAe,EAAEkC,mBAA6B;IAAA;IAAAhF,cAAA,GAAAqB,CAAA;IAAArB,cAAA,GAAAoB,CAAA;IACxE,IAAI;MACF,MAAM0C,QAAQ;MAAA;MAAA,CAAA9D,cAAA,GAAAoB,CAAA,QAAG,MAAM2C,KAAK,CAAC,GAAG,IAAI,CAACvB,mBAAmB,oBAAoB,EAAE;QAC5EiB,MAAM,EAAE,MAAM;QACdO,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAE,UAAUlB,OAAO;SACnC;QACDmB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBa,mBAAmB;UACnBZ,SAAS,EAAEC,IAAI,CAACC,GAAG;SACpB;OACF,CAAC;MAAC;MAAAtE,cAAA,GAAAoB,CAAA;MAEH,IAAI,CAAC0C,QAAQ,CAACS,EAAE,EAAE;QAAA;QAAAvE,cAAA,GAAAsB,CAAA;QAAAtB,cAAA,GAAAoB,CAAA;QAChB,MAAM,IAAIuC,KAAK,CAAC,iCAAiCG,QAAQ,CAACa,MAAM,EAAE,CAAC;MACrE,CAAC;MAAA;MAAA;QAAA3E,cAAA,GAAAsB,CAAA;MAAA;MAED,MAAMsD,MAAM;MAAA;MAAA,CAAA5E,cAAA,GAAAoB,CAAA,QAAG,MAAM0C,QAAQ,CAACW,IAAI,EAAE;MAAC;MAAAzE,cAAA,GAAAoB,CAAA;MACrC,OAAO;QACLmC,OAAO,EAAE,IAAI;QACb0B,cAAc,EAAEL,MAAM,CAACK,cAAc;QACrCC,WAAW,EAAEN,MAAM,CAACM,WAAW;QAC/BxB,KAAK,EAAE;OACR;IACH,CAAC,CAAC,OAAOA,KAAK,EAAE;MAAA;MAAA1D,cAAA,GAAAoB,CAAA;MACd4B,OAAO,CAACU,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MAAC;MAAA1D,cAAA,GAAAoB,CAAA;MACxD,OAAO;QACLmC,OAAO,EAAE,KAAK;QACd0B,cAAc,EAAE,KAAK;QACrBC,WAAW,EAAE,EAAE;QACfxB,KAAK,EAAEA,KAAK,YAAYC,KAAK;QAAA;QAAA,CAAA3D,cAAA,GAAAsB,CAAA,WAAGoC,KAAK,CAACqB,OAAO;QAAA;QAAA,CAAA/E,cAAA,GAAAsB,CAAA,WAAG,eAAe;OAChE;IACH;EACF;;AAkBF;AAAA;AAAAtB,cAAA,GAAAoB,CAAA;AACaa,OAAA,CAAAkD,0BAA0B,GAAG,IAAI7C,iCAAiC,EAAE;AAEjF;AACO,eAAeJ,4BAA4BA,CAACY,OAAe;EAAA;EAAA9C,cAAA,GAAAqB,CAAA;EAAArB,cAAA,GAAAoB,CAAA;EAChE,OAAO,MAAMa,OAAA,CAAAkD,0BAA0B,CAACjD,4BAA4B,CAACY,OAAO,CAAC;AAC/E;AAEO,eAAeX,qBAAqBA,CAACW,OAAe,EAAEoC,WAAqB;EAAA;EAAAlF,cAAA,GAAAqB,CAAA;EAAArB,cAAA,GAAAoB,CAAA;EAChF,OAAO,MAAMa,OAAA,CAAAkD,0BAA0B,CAAChD,qBAAqB,CAACW,OAAO,EAAEoC,WAAW,CAAC;AACrF","ignoreList":[]}