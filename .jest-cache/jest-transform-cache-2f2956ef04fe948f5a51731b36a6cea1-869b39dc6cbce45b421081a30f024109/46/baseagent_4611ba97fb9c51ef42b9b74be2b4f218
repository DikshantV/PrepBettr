a74708607f28e28d5656cbb4fe06d0b0
"use strict";

/**
 * Base Agent Class and Core Interfaces for Azure AI Foundry Agent System
 *
 * This module provides the foundational classes and interfaces for implementing
 * specialized interview agents (technical, behavioral, industry expert).
 */
/* istanbul ignore next */
function cov_279ou9k41z() {
  var path = "/Users/dikshantvashistha/PrepBettr/lib/azure-ai-foundry/agents/base-agent.ts";
  var hash = "85c3ee95700c0b295737b1205f33589476560fe7";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dikshantvashistha/PrepBettr/lib/azure-ai-foundry/agents/base-agent.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 62
        }
      },
      "1": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 27
        }
      },
      "2": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 10,
          column: 48
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 64
        }
      },
      "4": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 62
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 43
        }
      },
      "6": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 29
        }
      },
      "7": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 54,
          column: 9
        }
      },
      "8": {
        start: {
          line: 25,
          column: 12
        },
        end: {
          line: 25,
          column: 116
        }
      },
      "9": {
        start: {
          line: 26,
          column: 27
        },
        end: {
          line: 26,
          column: 61
        }
      },
      "10": {
        start: {
          line: 27,
          column: 29
        },
        end: {
          line: 44,
          column: 14
        }
      },
      "11": {
        start: {
          line: 45,
          column: 34
        },
        end: {
          line: 45,
          column: 286
        }
      },
      "12": {
        start: {
          line: 46,
          column: 30
        },
        end: {
          line: 46,
          column: 85
        }
      },
      "13": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 48,
          column: 50
        }
      },
      "14": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 49,
          column: 29
        }
      },
      "15": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 52,
          column: 92
        }
      },
      "16": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 53,
          column: 54
        }
      },
      "17": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 70,
          column: 9
        }
      },
      "18": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 63,
          column: 104
        }
      },
      "19": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 65,
          column: 89
        }
      },
      "20": {
        start: {
          line: 68,
          column: 12
        },
        end: {
          line: 68,
          column: 91
        }
      },
      "21": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 69,
          column: 89
        }
      },
      "22": {
        start: {
          line: 77,
          column: 31
        },
        end: {
          line: 77,
          column: 111
        }
      },
      "23": {
        start: {
          line: 77,
          column: 69
        },
        end: {
          line: 77,
          column: 110
        }
      },
      "24": {
        start: {
          line: 78,
          column: 26
        },
        end: {
          line: 78,
          column: 159
        }
      },
      "25": {
        start: {
          line: 78,
          column: 104
        },
        end: {
          line: 78,
          column: 151
        }
      },
      "26": {
        start: {
          line: 78,
          column: 129
        },
        end: {
          line: 78,
          column: 150
        }
      },
      "27": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 80,
          column: 80
        }
      },
      "28": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 117,
          column: 13
        }
      },
      "29": {
        start: {
          line: 99,
          column: 37
        },
        end: {
          line: 99,
          column: 50
        }
      },
      "30": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 137,
          column: 9
        }
      },
      "31": {
        start: {
          line: 122,
          column: 30
        },
        end: {
          line: 122,
          column: 63
        }
      },
      "32": {
        start: {
          line: 123,
          column: 12
        },
        end: {
          line: 126,
          column: 13
        }
      },
      "33": {
        start: {
          line: 124,
          column: 16
        },
        end: {
          line: 124,
          column: 105
        }
      },
      "34": {
        start: {
          line: 125,
          column: 16
        },
        end: {
          line: 125,
          column: 58
        }
      },
      "35": {
        start: {
          line: 127,
          column: 30
        },
        end: {
          line: 127,
          column: 54
        }
      },
      "36": {
        start: {
          line: 129,
          column: 12
        },
        end: {
          line: 132,
          column: 59
        }
      },
      "37": {
        start: {
          line: 130,
          column: 29
        },
        end: {
          line: 130,
          column: 43
        }
      },
      "38": {
        start: {
          line: 131,
          column: 27
        },
        end: {
          line: 131,
          column: 212
        }
      },
      "39": {
        start: {
          line: 135,
          column: 12
        },
        end: {
          line: 135,
          column: 90
        }
      },
      "40": {
        start: {
          line: 136,
          column: 12
        },
        end: {
          line: 136,
          column: 54
        }
      },
      "41": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 153,
          column: 10
        }
      },
      "42": {
        start: {
          line: 156,
          column: 30
        },
        end: {
          line: 156,
          column: 62
        }
      },
      "43": {
        start: {
          line: 157,
          column: 35
        },
        end: {
          line: 157,
          column: 69
        }
      },
      "44": {
        start: {
          line: 158,
          column: 29
        },
        end: {
          line: 158,
          column: 118
        }
      },
      "45": {
        start: {
          line: 159,
          column: 8
        },
        end: {
          line: 159,
          column: 41
        }
      },
      "46": {
        start: {
          line: 165,
          column: 8
        },
        end: {
          line: 180,
          column: 9
        }
      },
      "47": {
        start: {
          line: 166,
          column: 26
        },
        end: {
          line: 166,
          column: 104
        }
      },
      "48": {
        start: {
          line: 167,
          column: 12
        },
        end: {
          line: 176,
          column: 13
        }
      },
      "49": {
        start: {
          line: 168,
          column: 16
        },
        end: {
          line: 168,
          column: 146
        }
      },
      "50": {
        start: {
          line: 179,
          column: 12
        },
        end: {
          line: 179,
          column: 85
        }
      },
      "51": {
        start: {
          line: 186,
          column: 8
        },
        end: {
          line: 192,
          column: 11
        }
      },
      "52": {
        start: {
          line: 203,
          column: 0
        },
        end: {
          line: 203,
          column: 30
        }
      },
      "53": {
        start: {
          line: 206,
          column: 22
        },
        end: {
          line: 206,
          column: 32
        }
      },
      "54": {
        start: {
          line: 207,
          column: 19
        },
        end: {
          line: 207,
          column: 58
        }
      },
      "55": {
        start: {
          line: 208,
          column: 4
        },
        end: {
          line: 208,
          column: 75
        }
      },
      "56": {
        start: {
          line: 212,
          column: 35
        },
        end: {
          line: 212,
          column: 36
        }
      },
      "57": {
        start: {
          line: 213,
          column: 31
        },
        end: {
          line: 213,
          column: 109
        }
      },
      "58": {
        start: {
          line: 214,
          column: 4
        },
        end: {
          line: 214,
          column: 90
        }
      },
      "59": {
        start: {
          line: 218,
          column: 31
        },
        end: {
          line: 218,
          column: 109
        }
      },
      "60": {
        start: {
          line: 219,
          column: 31
        },
        end: {
          line: 219,
          column: 73
        }
      },
      "61": {
        start: {
          line: 220,
          column: 31
        },
        end: {
          line: 220,
          column: 106
        }
      },
      "62": {
        start: {
          line: 221,
          column: 4
        },
        end: {
          line: 221,
          column: 51
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 39
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 15
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 37
          },
          end: {
            line: 55,
            column: 5
          }
        },
        line: 22
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 59,
            column: 4
          },
          end: {
            line: 59,
            column: 5
          }
        },
        loc: {
          start: {
            line: 59,
            column: 45
          },
          end: {
            line: 71,
            column: 5
          }
        },
        line: 59
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 75,
            column: 4
          },
          end: {
            line: 75,
            column: 5
          }
        },
        loc: {
          start: {
            line: 75,
            column: 24
          },
          end: {
            line: 81,
            column: 5
          }
        },
        line: 75
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 77,
            column: 64
          },
          end: {
            line: 77,
            column: 65
          }
        },
        loc: {
          start: {
            line: 77,
            column: 69
          },
          end: {
            line: 77,
            column: 110
          }
        },
        line: 77
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 78,
            column: 99
          },
          end: {
            line: 78,
            column: 100
          }
        },
        loc: {
          start: {
            line: 78,
            column: 104
          },
          end: {
            line: 78,
            column: 151
          }
        },
        line: 78
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 78,
            column: 124
          },
          end: {
            line: 78,
            column: 125
          }
        },
        loc: {
          start: {
            line: 78,
            column: 129
          },
          end: {
            line: 78,
            column: 150
          }
        },
        line: 78
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 83,
            column: 4
          },
          end: {
            line: 83,
            column: 5
          }
        },
        loc: {
          start: {
            line: 83,
            column: 34
          },
          end: {
            line: 118,
            column: 5
          }
        },
        line: 83
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 99,
            column: 32
          },
          end: {
            line: 99,
            column: 33
          }
        },
        loc: {
          start: {
            line: 99,
            column: 37
          },
          end: {
            line: 99,
            column: 50
          }
        },
        line: 99
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 119,
            column: 4
          },
          end: {
            line: 119,
            column: 5
          }
        },
        loc: {
          start: {
            line: 119,
            column: 54
          },
          end: {
            line: 138,
            column: 5
          }
        },
        line: 119
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 130,
            column: 24
          },
          end: {
            line: 130,
            column: 25
          }
        },
        loc: {
          start: {
            line: 130,
            column: 29
          },
          end: {
            line: 130,
            column: 43
          }
        },
        line: 130
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 131,
            column: 21
          },
          end: {
            line: 131,
            column: 22
          }
        },
        loc: {
          start: {
            line: 131,
            column: 27
          },
          end: {
            line: 131,
            column: 212
          }
        },
        line: 131
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 139,
            column: 4
          },
          end: {
            line: 139,
            column: 5
          }
        },
        loc: {
          start: {
            line: 139,
            column: 34
          },
          end: {
            line: 154,
            column: 5
          }
        },
        line: 139
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 155,
            column: 4
          },
          end: {
            line: 155,
            column: 5
          }
        },
        loc: {
          start: {
            line: 155,
            column: 30
          },
          end: {
            line: 160,
            column: 5
          }
        },
        line: 155
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 164,
            column: 4
          },
          end: {
            line: 164,
            column: 5
          }
        },
        loc: {
          start: {
            line: 164,
            column: 36
          },
          end: {
            line: 181,
            column: 5
          }
        },
        line: 164
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 185,
            column: 4
          },
          end: {
            line: 185,
            column: 5
          }
        },
        loc: {
          start: {
            line: 185,
            column: 43
          },
          end: {
            line: 201,
            column: 5
          }
        },
        line: 185
      },
      "16": {
        name: "generateQuestionId",
        decl: {
          start: {
            line: 205,
            column: 9
          },
          end: {
            line: 205,
            column: 27
          }
        },
        loc: {
          start: {
            line: 205,
            column: 49
          },
          end: {
            line: 209,
            column: 1
          }
        },
        line: 205
      },
      "17": {
        name: "calculateInterviewProgress",
        decl: {
          start: {
            line: 210,
            column: 9
          },
          end: {
            line: 210,
            column: 35
          }
        },
        loc: {
          start: {
            line: 210,
            column: 45
          },
          end: {
            line: 215,
            column: 1
          }
        },
        line: 210
      },
      "18": {
        name: "getEstimatedRemainingTime",
        decl: {
          start: {
            line: 216,
            column: 9
          },
          end: {
            line: 216,
            column: 34
          }
        },
        loc: {
          start: {
            line: 216,
            column: 58
          },
          end: {
            line: 222,
            column: 1
          }
        },
        line: 216
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 45,
            column: 34
          },
          end: {
            line: 45,
            column: 286
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 45,
            column: 35
          },
          end: {
            line: 45,
            column: 263
          }
        }, {
          start: {
            line: 45,
            column: 268
          },
          end: {
            line: 45,
            column: 280
          }
        }, {
          start: {
            line: 45,
            column: 284
          },
          end: {
            line: 45,
            column: 286
          }
        }],
        line: 45
      },
      "1": {
        loc: {
          start: {
            line: 45,
            column: 35
          },
          end: {
            line: 45,
            column: 263
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 45,
            column: 244
          },
          end: {
            line: 45,
            column: 250
          }
        }, {
          start: {
            line: 45,
            column: 253
          },
          end: {
            line: 45,
            column: 263
          }
        }],
        line: 45
      },
      "2": {
        loc: {
          start: {
            line: 45,
            column: 35
          },
          end: {
            line: 45,
            column: 241
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 45,
            column: 35
          },
          end: {
            line: 45,
            column: 224
          }
        }, {
          start: {
            line: 45,
            column: 228
          },
          end: {
            line: 45,
            column: 241
          }
        }],
        line: 45
      },
      "3": {
        loc: {
          start: {
            line: 45,
            column: 41
          },
          end: {
            line: 45,
            column: 214
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 45,
            column: 195
          },
          end: {
            line: 45,
            column: 201
          }
        }, {
          start: {
            line: 45,
            column: 204
          },
          end: {
            line: 45,
            column: 214
          }
        }],
        line: 45
      },
      "4": {
        loc: {
          start: {
            line: 45,
            column: 41
          },
          end: {
            line: 45,
            column: 192
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 45,
            column: 41
          },
          end: {
            line: 45,
            column: 175
          }
        }, {
          start: {
            line: 45,
            column: 179
          },
          end: {
            line: 45,
            column: 192
          }
        }],
        line: 45
      },
      "5": {
        loc: {
          start: {
            line: 45,
            column: 47
          },
          end: {
            line: 45,
            column: 165
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 45,
            column: 151
          },
          end: {
            line: 45,
            column: 157
          }
        }, {
          start: {
            line: 45,
            column: 160
          },
          end: {
            line: 45,
            column: 165
          }
        }],
        line: 45
      },
      "6": {
        loc: {
          start: {
            line: 45,
            column: 47
          },
          end: {
            line: 45,
            column: 148
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 45,
            column: 47
          },
          end: {
            line: 45,
            column: 131
          }
        }, {
          start: {
            line: 45,
            column: 135
          },
          end: {
            line: 45,
            column: 148
          }
        }],
        line: 45
      },
      "7": {
        loc: {
          start: {
            line: 45,
            column: 53
          },
          end: {
            line: 45,
            column: 121
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 45,
            column: 102
          },
          end: {
            line: 45,
            column: 108
          }
        }, {
          start: {
            line: 45,
            column: 111
          },
          end: {
            line: 45,
            column: 121
          }
        }],
        line: 45
      },
      "8": {
        loc: {
          start: {
            line: 45,
            column: 53
          },
          end: {
            line: 45,
            column: 99
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 45,
            column: 53
          },
          end: {
            line: 45,
            column: 82
          }
        }, {
          start: {
            line: 45,
            column: 86
          },
          end: {
            line: 45,
            column: 99
          }
        }],
        line: 45
      },
      "9": {
        loc: {
          start: {
            line: 78,
            column: 26
          },
          end: {
            line: 78,
            column: 159
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 78,
            column: 27
          },
          end: {
            line: 78,
            column: 152
          }
        }, {
          start: {
            line: 78,
            column: 157
          },
          end: {
            line: 78,
            column: 159
          }
        }],
        line: 78
      },
      "10": {
        loc: {
          start: {
            line: 78,
            column: 27
          },
          end: {
            line: 78,
            column: 152
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 78,
            column: 80
          },
          end: {
            line: 78,
            column: 86
          }
        }, {
          start: {
            line: 78,
            column: 89
          },
          end: {
            line: 78,
            column: 152
          }
        }],
        line: 78
      },
      "11": {
        loc: {
          start: {
            line: 78,
            column: 27
          },
          end: {
            line: 78,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 78,
            column: 27
          },
          end: {
            line: 78,
            column: 60
          }
        }, {
          start: {
            line: 78,
            column: 64
          },
          end: {
            line: 78,
            column: 77
          }
        }],
        line: 78
      },
      "12": {
        loc: {
          start: {
            line: 80,
            column: 47
          },
          end: {
            line: 80,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 80,
            column: 47
          },
          end: {
            line: 80,
            column: 73
          }
        }, {
          start: {
            line: 80,
            column: 77
          },
          end: {
            line: 80,
            column: 78
          }
        }],
        line: 80
      },
      "13": {
        loc: {
          start: {
            line: 96,
            column: 76
          },
          end: {
            line: 96,
            column: 107
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 96,
            column: 76
          },
          end: {
            line: 96,
            column: 102
          }
        }, {
          start: {
            line: 96,
            column: 106
          },
          end: {
            line: 96,
            column: 107
          }
        }],
        line: 96
      },
      "14": {
        loc: {
          start: {
            line: 99,
            column: 2
          },
          end: {
            line: 99,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 99,
            column: 2
          },
          end: {
            line: 99,
            column: 62
          }
        }, {
          start: {
            line: 99,
            column: 66
          },
          end: {
            line: 99,
            column: 72
          }
        }],
        line: 99
      },
      "15": {
        loc: {
          start: {
            line: 123,
            column: 12
          },
          end: {
            line: 126,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 123,
            column: 12
          },
          end: {
            line: 126,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 123
      },
      "16": {
        loc: {
          start: {
            line: 130,
            column: 29
          },
          end: {
            line: 130,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 130,
            column: 29
          },
          end: {
            line: 130,
            column: 35
          }
        }, {
          start: {
            line: 130,
            column: 39
          },
          end: {
            line: 130,
            column: 43
          }
        }],
        line: 130
      },
      "17": {
        loc: {
          start: {
            line: 131,
            column: 107
          },
          end: {
            line: 131,
            column: 209
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 131,
            column: 107
          },
          end: {
            line: 131,
            column: 111
          }
        }, {
          start: {
            line: 131,
            column: 115
          },
          end: {
            line: 131,
            column: 209
          }
        }],
        line: 131
      },
      "18": {
        loc: {
          start: {
            line: 132,
            column: 26
          },
          end: {
            line: 132,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 132,
            column: 26
          },
          end: {
            line: 132,
            column: 52
          }
        }, {
          start: {
            line: 132,
            column: 56
          },
          end: {
            line: 132,
            column: 57
          }
        }],
        line: 132
      },
      "19": {
        loc: {
          start: {
            line: 144,
            column: 22
          },
          end: {
            line: 144,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 144,
            column: 22
          },
          end: {
            line: 144,
            column: 48
          }
        }, {
          start: {
            line: 144,
            column: 52
          },
          end: {
            line: 144,
            column: 61
          }
        }],
        line: 144
      },
      "20": {
        loc: {
          start: {
            line: 145,
            column: 26
          },
          end: {
            line: 145,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 145,
            column: 26
          },
          end: {
            line: 145,
            column: 52
          }
        }, {
          start: {
            line: 145,
            column: 56
          },
          end: {
            line: 145,
            column: 65
          }
        }],
        line: 145
      },
      "21": {
        loc: {
          start: {
            line: 148,
            column: 35
          },
          end: {
            line: 148,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 148,
            column: 35
          },
          end: {
            line: 148,
            column: 58
          }
        }, {
          start: {
            line: 148,
            column: 62
          },
          end: {
            line: 148,
            column: 71
          }
        }],
        line: 148
      },
      "22": {
        loc: {
          start: {
            line: 157,
            column: 35
          },
          end: {
            line: 157,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 157,
            column: 35
          },
          end: {
            line: 157,
            column: 64
          }
        }, {
          start: {
            line: 157,
            column: 68
          },
          end: {
            line: 157,
            column: 69
          }
        }],
        line: 157
      },
      "23": {
        loc: {
          start: {
            line: 158,
            column: 38
          },
          end: {
            line: 158,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 158,
            column: 38
          },
          end: {
            line: 158,
            column: 64
          }
        }, {
          start: {
            line: 158,
            column: 68
          },
          end: {
            line: 158,
            column: 69
          }
        }],
        line: 158
      },
      "24": {
        loc: {
          start: {
            line: 166,
            column: 26
          },
          end: {
            line: 166,
            column: 104
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 166,
            column: 77
          },
          end: {
            line: 166,
            column: 83
          }
        }, {
          start: {
            line: 166,
            column: 86
          },
          end: {
            line: 166,
            column: 104
          }
        }],
        line: 166
      },
      "25": {
        loc: {
          start: {
            line: 166,
            column: 26
          },
          end: {
            line: 166,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 166,
            column: 26
          },
          end: {
            line: 166,
            column: 47
          }
        }, {
          start: {
            line: 166,
            column: 51
          },
          end: {
            line: 166,
            column: 74
          }
        }],
        line: 166
      },
      "26": {
        loc: {
          start: {
            line: 167,
            column: 12
          },
          end: {
            line: 176,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 167,
            column: 12
          },
          end: {
            line: 176,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 167
      },
      "27": {
        loc: {
          start: {
            line: 213,
            column: 31
          },
          end: {
            line: 213,
            column: 109
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 213,
            column: 32
          },
          end: {
            line: 213,
            column: 103
          }
        }, {
          start: {
            line: 213,
            column: 108
          },
          end: {
            line: 213,
            column: 109
          }
        }],
        line: 213
      },
      "28": {
        loc: {
          start: {
            line: 213,
            column: 32
          },
          end: {
            line: 213,
            column: 103
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 213,
            column: 85
          },
          end: {
            line: 213,
            column: 91
          }
        }, {
          start: {
            line: 213,
            column: 94
          },
          end: {
            line: 213,
            column: 103
          }
        }],
        line: 213
      },
      "29": {
        loc: {
          start: {
            line: 213,
            column: 32
          },
          end: {
            line: 213,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 213,
            column: 32
          },
          end: {
            line: 213,
            column: 65
          }
        }, {
          start: {
            line: 213,
            column: 69
          },
          end: {
            line: 213,
            column: 82
          }
        }],
        line: 213
      },
      "30": {
        loc: {
          start: {
            line: 218,
            column: 31
          },
          end: {
            line: 218,
            column: 109
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 218,
            column: 32
          },
          end: {
            line: 218,
            column: 103
          }
        }, {
          start: {
            line: 218,
            column: 108
          },
          end: {
            line: 218,
            column: 109
          }
        }],
        line: 218
      },
      "31": {
        loc: {
          start: {
            line: 218,
            column: 32
          },
          end: {
            line: 218,
            column: 103
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 218,
            column: 85
          },
          end: {
            line: 218,
            column: 91
          }
        }, {
          start: {
            line: 218,
            column: 94
          },
          end: {
            line: 218,
            column: 103
          }
        }],
        line: 218
      },
      "32": {
        loc: {
          start: {
            line: 218,
            column: 32
          },
          end: {
            line: 218,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 218,
            column: 32
          },
          end: {
            line: 218,
            column: 65
          }
        }, {
          start: {
            line: 218,
            column: 69
          },
          end: {
            line: 218,
            column: 82
          }
        }],
        line: 218
      },
      "33": {
        loc: {
          start: {
            line: 219,
            column: 31
          },
          end: {
            line: 219,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 219,
            column: 31
          },
          end: {
            line: 219,
            column: 68
          }
        }, {
          start: {
            line: 219,
            column: 72
          },
          end: {
            line: 219,
            column: 73
          }
        }],
        line: 219
      },
      "34": {
        loc: {
          start: {
            line: 220,
            column: 44
          },
          end: {
            line: 220,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 220,
            column: 44
          },
          end: {
            line: 220,
            column: 78
          }
        }, {
          start: {
            line: 220,
            column: 82
          },
          end: {
            line: 220,
            column: 83
          }
        }],
        line: 220
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/dikshantvashistha/PrepBettr/lib/azure-ai-foundry/agents/base-agent.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/dikshantvashistha/PrepBettr/lib/azure-ai-foundry/agents/base-agent.ts"],
      sourcesContent: ["/**\n * Base Agent Class and Core Interfaces for Azure AI Foundry Agent System\n * \n * This module provides the foundational classes and interfaces for implementing\n * specialized interview agents (technical, behavioral, industry expert).\n */\n\nimport { FoundryClientBase } from '../clients/foundry-client';\nimport { FoundryConfig } from '../config/foundry-config';\nimport { \n  Question, \n  InterviewContext, \n  SessionState, \n  AgentMetadata, \n  FoundryAgent \n} from '../types/agent-types';\n\n// ===== BASE AGENT CLASS =====\n\nexport abstract class BaseAgent implements FoundryAgent {\n  protected foundryClient: FoundryClientBase;\n  protected config: FoundryConfig;\n  \n  // Required by FoundryAgent interface\n  public abstract readonly id: string;\n  public abstract readonly name: string;\n  public abstract readonly type: 'technical' | 'behavioral' | 'industry';\n  \n  public abstract readonly metadata: AgentMetadata;\n  public abstract readonly instructions: string;\n  protected abstract readonly modelName: string;\n\n  constructor(foundryClient: FoundryClientBase, config: FoundryConfig) {\n    this.foundryClient = foundryClient;\n    this.config = config;\n  }\n\n  /**\n   * Generate interview questions based on context\n   */\n  public async generateQuestions(context: InterviewContext): Promise<Question[]> {\n    try {\n      console.log(`\uD83E\uDD16 ${this.metadata.name} generating questions for ${context.candidateProfile.targetRole}`);\n      \n      const prompt = this.buildQuestionsPrompt(context);\n      \n      const response = await this.foundryClient.request(`/chat/completions`, {\n        method: 'POST',\n        body: {\n          model: this.modelName,\n          messages: [\n            {\n              role: 'system',\n              content: this.instructions\n            },\n            {\n              role: 'user',\n              content: prompt\n            }\n          ],\n          temperature: 0.7,\n          max_tokens: 2000\n        }\n      });\n\n      const questionsText = response.data?.choices?.[0]?.message?.content || response.raw || '';\n      const questions = this.parseQuestionsFromResponse(questionsText, context);\n      \n      // Log usage for monitoring\n      this.logUsage(context, response.data);\n      \n      return questions;\n      \n    } catch (error) {\n      console.error(`\u274C Error generating questions for ${this.metadata.name}:`, error);\n      return this.getFallbackQuestions(context);\n    }\n  }\n\n  /**\n   * Process candidate response and return follow-up or acknowledgment\n   */\n  public async processResponse(response: string, context: InterviewContext): Promise<string> {\n    try {\n      // For now, just return a simple acknowledgment\n      // In a full implementation, this would analyze the response and provide feedback\n      console.log(`\uD83D\uDCDD ${this.metadata.name} processed response: ${response.substring(0, 50)}...`);\n      \n      // Return acknowledgment or follow-up question\n      return \"Thank you for your response. That's a good approach to the problem.\";\n      \n    } catch (error) {\n      console.error(`\u274C Error processing response for ${this.metadata.name}:`, error);\n      return \"Thank you for your response. Let's continue with the next question.\";\n    }\n  }\n\n  /**\n   * Check if agent has completed its interview phase\n   */\n  public isComplete(context: InterviewContext): boolean {\n    const agentQuestions = context.previousQuestions.filter(\n      q => q.category === this.getQuestionCategory()\n    );\n    \n    const responses = context.responses?.filter(r => \n      agentQuestions.some(q => q.id === r.questionId)\n    ) || [];\n\n    // Complete if we have responses to at least 3 questions or reached max questions\n    return responses.length >= Math.min(3, this.metadata.maxQuestions || 5);\n  }\n\n  // ===== PROTECTED HELPER METHODS =====\n\n  protected buildQuestionsPrompt(context: InterviewContext): string {\n    return `\nGenerate ${this.getQuestionCount(context)} interview questions for:\n\n**Candidate Profile:**\n- Target Role: ${context.candidateProfile.targetRole}\n- Experience: ${context.candidateProfile.experience}\n- Skills: ${context.candidateProfile.skills.join(', ')}\n- Industry: ${context.candidateProfile.industry}\n\n**Interview Requirements:**\n- Difficulty: ${context.interviewConfig.difficulty}\n- Focus Areas: ${context.interviewConfig.focusAreas.join(', ')}\n|- Duration per question: ~${Math.floor(context.interviewConfig.duration / (this.metadata.maxQuestions || 5))} minutes\n\n**Previously Asked Questions:**\n${context.previousQuestions.map(q => `- ${q.text}`).join('\\n') || 'None'}\n\nReturn questions in JSON format:\n[\n  {\n    \"id\": \"unique-id\",\n    \"text\": \"Question text here\",\n    \"category\": \"${this.getQuestionCategory()}\",\n    \"difficulty\": \"easy|medium|hard\",\n    \"expectedDuration\": 180,\n    \"followUpQuestions\": [\"follow-up if needed\"],\n    \"tags\": [\"relevant\", \"tags\"],\n    \"metadata\": {\n      \"skill\": \"specific skill\",\n      \"topic\": \"topic area\"\n    }\n  }\n]\n    `.trim();\n  }\n\n  protected parseQuestionsFromResponse(responseText: string, context: InterviewContext): Question[] {\n    try {\n      // Try to extract JSON from the response\n      const jsonMatch = responseText.match(/\\[[\\s\\S]*\\]/);\n      if (!jsonMatch) {\n        console.warn(`\u26A0\uFE0F Could not find JSON in ${this.metadata.name} response, using fallback`);\n        return this.getFallbackQuestions(context);\n      }\n\n      const questions = JSON.parse(jsonMatch[0]) as Question[];\n      \n      // Validate and clean questions\n      return questions\n        .filter(q => q.text && q.id)\n        .map(q => ({\n          ...q,\n          category: this.getQuestionCategory(),\n          id: q.id || `${this.metadata.name.toLowerCase()}-${Date.now()}-${Math.random().toString(36).substr(2, 5)}`\n        }))\n        .slice(0, this.metadata.maxQuestions || 5);\n        \n    } catch (error) {\n      console.error(`\u274C Error parsing questions from ${this.metadata.name}:`, error);\n      return this.getFallbackQuestions(context);\n    }\n  }\n\n  protected getFallbackQuestions(context: InterviewContext): Question[] {\n    return [\n      {\n        id: `${this.metadata.name.toLowerCase()}-fallback-${Date.now()}`,\n        text: this.getDefaultQuestion(context),\n        type: this.getQuestionCategory() || 'general',\n        category: this.getQuestionCategory() || 'general',\n        difficulty: 'medium',\n        expectedDuration: 180,\n        tags: ['fallback', this.metadata.specialty || 'general'],\n        metadata: {\n          topic: 'general'\n        }\n      }\n    ];\n  }\n\n  protected getQuestionCount(context: InterviewContext): number {\n    const remainingTime = context.interviewConfig.duration;\n    const avgTimePerQuestion = this.metadata.averageDuration || 5;\n    const maxQuestions = Math.min(\n      this.metadata.maxQuestions || 5,\n      Math.floor(remainingTime / avgTimePerQuestion)\n    );\n    return Math.max(1, maxQuestions);\n  }\n\n  /**\n   * Log usage metrics for monitoring and cost tracking\n   */\n  protected logUsage(context: InterviewContext, responseData: any): void {\n    try {\n      const usage = responseData?.usage;\n      if (usage) {\n        console.log(`\uD83D\uDCCA ${this.metadata.name} usage - Tokens: ${usage.total_tokens} (${usage.prompt_tokens}+${usage.completion_tokens})`);\n        \n        // TODO: Integrate with Application Insights or monitoring service\n        // trackEvent('agent_usage', {\n        //   agent: this.metadata.name,\n        //   sessionId: context.sessionId,\n        //   tokens: usage.total_tokens,\n        //   model: this.modelName\n        // });\n      }\n    } catch (error) {\n      console.warn(`\u26A0\uFE0F Failed to log usage for ${this.metadata.name}:`, error);\n    }\n  }\n\n  /**\n   * Handle errors with context-aware logging\n   */\n  protected handleError(error: Error, context: InterviewContext, operation: string): void {\n    console.error(`\u274C ${this.metadata.name} error in ${operation}:`, {\n      error: error.message,\n      sessionId: context.sessionId,\n      agent: this.metadata.name,\n      operation,\n      timestamp: new Date().toISOString()\n    });\n    \n    // TODO: Integrate with error tracking service\n    // reportError(error, {\n    //   context: `agent_${operation}`,\n    //   metadata: {\n    //     agent: this.metadata.name,\n    //     sessionId: context.sessionId\n    //   }\n    // });\n  }\n\n  // ===== ABSTRACT METHODS =====\n\n  protected abstract getQuestionCategory(): Question['category'];\n  protected abstract getDefaultQuestion(context: InterviewContext): string;\n}\n\n// ===== UTILITY FUNCTIONS =====\n\nexport function generateQuestionId(agentName: string, category: string): string {\n  const timestamp = Date.now();\n  const random = Math.random().toString(36).substr(2, 5);\n  return `${agentName.toLowerCase()}-${category}-${timestamp}-${random}`;\n}\n\nexport function calculateInterviewProgress(context: InterviewContext): number {\n  const totalExpectedQuestions = 9; // 3 per agent type\n  const completedQuestions = context.responses?.length || 0;\n  return Math.min(100, Math.round((completedQuestions / totalExpectedQuestions) * 100));\n}\n\nexport function getEstimatedRemainingTime(context: InterviewContext, currentAgent: FoundryAgent): number {\n  const completedQuestions = context.responses?.length || 0;\n  const avgTimePerQuestion = currentAgent.metadata.averageDuration || 5;\n  const remainingQuestions = Math.max(0, (currentAgent.metadata.maxQuestions || 5) - completedQuestions);\n  return remainingQuestions * avgTimePerQuestion;\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "85c3ee95700c0b295737b1205f33589476560fe7"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_279ou9k41z = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_279ou9k41z();
cov_279ou9k41z().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_279ou9k41z().s[1]++;
exports.BaseAgent = void 0;
/* istanbul ignore next */
cov_279ou9k41z().s[2]++;
exports.generateQuestionId = generateQuestionId;
/* istanbul ignore next */
cov_279ou9k41z().s[3]++;
exports.calculateInterviewProgress = calculateInterviewProgress;
/* istanbul ignore next */
cov_279ou9k41z().s[4]++;
exports.getEstimatedRemainingTime = getEstimatedRemainingTime;
// ===== BASE AGENT CLASS =====
class BaseAgent {
  constructor(foundryClient, config) {
    /* istanbul ignore next */
    cov_279ou9k41z().f[0]++;
    cov_279ou9k41z().s[5]++;
    this.foundryClient = foundryClient;
    /* istanbul ignore next */
    cov_279ou9k41z().s[6]++;
    this.config = config;
  }
  /**
   * Generate interview questions based on context
   */
  async generateQuestions(context) {
    /* istanbul ignore next */
    cov_279ou9k41z().f[1]++;
    var _a, _b, _c, _d;
    /* istanbul ignore next */
    cov_279ou9k41z().s[7]++;
    try {
      /* istanbul ignore next */
      cov_279ou9k41z().s[8]++;
      console.log(`🤖 ${this.metadata.name} generating questions for ${context.candidateProfile.targetRole}`);
      const prompt =
      /* istanbul ignore next */
      (cov_279ou9k41z().s[9]++, this.buildQuestionsPrompt(context));
      const response =
      /* istanbul ignore next */
      (cov_279ou9k41z().s[10]++, await this.foundryClient.request(`/chat/completions`, {
        method: 'POST',
        body: {
          model: this.modelName,
          messages: [{
            role: 'system',
            content: this.instructions
          }, {
            role: 'user',
            content: prompt
          }],
          temperature: 0.7,
          max_tokens: 2000
        }
      }));
      const questionsText =
      /* istanbul ignore next */
      (cov_279ou9k41z().s[11]++,
      /* istanbul ignore next */
      (cov_279ou9k41z().b[0][0]++,
      /* istanbul ignore next */
      (cov_279ou9k41z().b[2][0]++, (_d =
      /* istanbul ignore next */
      (cov_279ou9k41z().b[4][0]++, (_c =
      /* istanbul ignore next */
      (cov_279ou9k41z().b[6][0]++, (_b =
      /* istanbul ignore next */
      (cov_279ou9k41z().b[8][0]++, (_a = response.data) === null) ||
      /* istanbul ignore next */
      (cov_279ou9k41z().b[8][1]++, _a === void 0) ?
      /* istanbul ignore next */
      (cov_279ou9k41z().b[7][0]++, void 0) :
      /* istanbul ignore next */
      (cov_279ou9k41z().b[7][1]++, _a.choices)) === null) ||
      /* istanbul ignore next */
      (cov_279ou9k41z().b[6][1]++, _b === void 0) ?
      /* istanbul ignore next */
      (cov_279ou9k41z().b[5][0]++, void 0) :
      /* istanbul ignore next */
      (cov_279ou9k41z().b[5][1]++, _b[0])) === null) ||
      /* istanbul ignore next */
      (cov_279ou9k41z().b[4][1]++, _c === void 0) ?
      /* istanbul ignore next */
      (cov_279ou9k41z().b[3][0]++, void 0) :
      /* istanbul ignore next */
      (cov_279ou9k41z().b[3][1]++, _c.message)) === null) ||
      /* istanbul ignore next */
      (cov_279ou9k41z().b[2][1]++, _d === void 0) ?
      /* istanbul ignore next */
      (cov_279ou9k41z().b[1][0]++, void 0) :
      /* istanbul ignore next */
      (cov_279ou9k41z().b[1][1]++, _d.content)) ||
      /* istanbul ignore next */
      (cov_279ou9k41z().b[0][1]++, response.raw) ||
      /* istanbul ignore next */
      (cov_279ou9k41z().b[0][2]++, ''));
      const questions =
      /* istanbul ignore next */
      (cov_279ou9k41z().s[12]++, this.parseQuestionsFromResponse(questionsText, context));
      // Log usage for monitoring
      /* istanbul ignore next */
      cov_279ou9k41z().s[13]++;
      this.logUsage(context, response.data);
      /* istanbul ignore next */
      cov_279ou9k41z().s[14]++;
      return questions;
    } catch (error) {
      /* istanbul ignore next */
      cov_279ou9k41z().s[15]++;
      console.error(`❌ Error generating questions for ${this.metadata.name}:`, error);
      /* istanbul ignore next */
      cov_279ou9k41z().s[16]++;
      return this.getFallbackQuestions(context);
    }
  }
  /**
   * Process candidate response and return follow-up or acknowledgment
   */
  async processResponse(response, context) {
    /* istanbul ignore next */
    cov_279ou9k41z().f[2]++;
    cov_279ou9k41z().s[17]++;
    try {
      /* istanbul ignore next */
      cov_279ou9k41z().s[18]++;
      // For now, just return a simple acknowledgment
      // In a full implementation, this would analyze the response and provide feedback
      console.log(`📝 ${this.metadata.name} processed response: ${response.substring(0, 50)}...`);
      // Return acknowledgment or follow-up question
      /* istanbul ignore next */
      cov_279ou9k41z().s[19]++;
      return "Thank you for your response. That's a good approach to the problem.";
    } catch (error) {
      /* istanbul ignore next */
      cov_279ou9k41z().s[20]++;
      console.error(`❌ Error processing response for ${this.metadata.name}:`, error);
      /* istanbul ignore next */
      cov_279ou9k41z().s[21]++;
      return "Thank you for your response. Let's continue with the next question.";
    }
  }
  /**
   * Check if agent has completed its interview phase
   */
  isComplete(context) {
    /* istanbul ignore next */
    cov_279ou9k41z().f[3]++;
    var _a;
    const agentQuestions =
    /* istanbul ignore next */
    (cov_279ou9k41z().s[22]++, context.previousQuestions.filter(q => {
      /* istanbul ignore next */
      cov_279ou9k41z().f[4]++;
      cov_279ou9k41z().s[23]++;
      return q.category === this.getQuestionCategory();
    }));
    const responses =
    /* istanbul ignore next */
    (cov_279ou9k41z().s[24]++,
    /* istanbul ignore next */
    (cov_279ou9k41z().b[9][0]++,
    /* istanbul ignore next */
    (cov_279ou9k41z().b[11][0]++, (_a = context.responses) === null) ||
    /* istanbul ignore next */
    (cov_279ou9k41z().b[11][1]++, _a === void 0) ?
    /* istanbul ignore next */
    (cov_279ou9k41z().b[10][0]++, void 0) :
    /* istanbul ignore next */
    (cov_279ou9k41z().b[10][1]++, _a.filter(r => {
      /* istanbul ignore next */
      cov_279ou9k41z().f[5]++;
      cov_279ou9k41z().s[25]++;
      return agentQuestions.some(q => {
        /* istanbul ignore next */
        cov_279ou9k41z().f[6]++;
        cov_279ou9k41z().s[26]++;
        return q.id === r.questionId;
      });
    }))) ||
    /* istanbul ignore next */
    (cov_279ou9k41z().b[9][1]++, []));
    // Complete if we have responses to at least 3 questions or reached max questions
    /* istanbul ignore next */
    cov_279ou9k41z().s[27]++;
    return responses.length >= Math.min(3,
    /* istanbul ignore next */
    (cov_279ou9k41z().b[12][0]++, this.metadata.maxQuestions) ||
    /* istanbul ignore next */
    (cov_279ou9k41z().b[12][1]++, 5));
  }
  // ===== PROTECTED HELPER METHODS =====
  buildQuestionsPrompt(context) {
    /* istanbul ignore next */
    cov_279ou9k41z().f[7]++;
    cov_279ou9k41z().s[28]++;
    return `
Generate ${this.getQuestionCount(context)} interview questions for:

**Candidate Profile:**
- Target Role: ${context.candidateProfile.targetRole}
- Experience: ${context.candidateProfile.experience}
- Skills: ${context.candidateProfile.skills.join(', ')}
- Industry: ${context.candidateProfile.industry}

**Interview Requirements:**
- Difficulty: ${context.interviewConfig.difficulty}
- Focus Areas: ${context.interviewConfig.focusAreas.join(', ')}
|- Duration per question: ~${Math.floor(context.interviewConfig.duration / (
    /* istanbul ignore next */
    (cov_279ou9k41z().b[13][0]++, this.metadata.maxQuestions) ||
    /* istanbul ignore next */
    (cov_279ou9k41z().b[13][1]++, 5)))} minutes

**Previously Asked Questions:**
${
    /* istanbul ignore next */
    (cov_279ou9k41z().b[14][0]++, context.previousQuestions.map(q => {
      /* istanbul ignore next */
      cov_279ou9k41z().f[8]++;
      cov_279ou9k41z().s[29]++;
      return `- ${q.text}`;
    }).join('\n')) ||
    /* istanbul ignore next */
    (cov_279ou9k41z().b[14][1]++, 'None')}

Return questions in JSON format:
[
  {
    "id": "unique-id",
    "text": "Question text here",
    "category": "${this.getQuestionCategory()}",
    "difficulty": "easy|medium|hard",
    "expectedDuration": 180,
    "followUpQuestions": ["follow-up if needed"],
    "tags": ["relevant", "tags"],
    "metadata": {
      "skill": "specific skill",
      "topic": "topic area"
    }
  }
]
    `.trim();
  }
  parseQuestionsFromResponse(responseText, context) {
    /* istanbul ignore next */
    cov_279ou9k41z().f[9]++;
    cov_279ou9k41z().s[30]++;
    try {
      // Try to extract JSON from the response
      const jsonMatch =
      /* istanbul ignore next */
      (cov_279ou9k41z().s[31]++, responseText.match(/\[[\s\S]*\]/));
      /* istanbul ignore next */
      cov_279ou9k41z().s[32]++;
      if (!jsonMatch) {
        /* istanbul ignore next */
        cov_279ou9k41z().b[15][0]++;
        cov_279ou9k41z().s[33]++;
        console.warn(`⚠️ Could not find JSON in ${this.metadata.name} response, using fallback`);
        /* istanbul ignore next */
        cov_279ou9k41z().s[34]++;
        return this.getFallbackQuestions(context);
      } else
      /* istanbul ignore next */
      {
        cov_279ou9k41z().b[15][1]++;
      }
      const questions =
      /* istanbul ignore next */
      (cov_279ou9k41z().s[35]++, JSON.parse(jsonMatch[0]));
      // Validate and clean questions
      /* istanbul ignore next */
      cov_279ou9k41z().s[36]++;
      return questions.filter(q => {
        /* istanbul ignore next */
        cov_279ou9k41z().f[10]++;
        cov_279ou9k41z().s[37]++;
        return /* istanbul ignore next */(cov_279ou9k41z().b[16][0]++, q.text) &&
        /* istanbul ignore next */
        (cov_279ou9k41z().b[16][1]++, q.id);
      }).map(q => {
        /* istanbul ignore next */
        cov_279ou9k41z().f[11]++;
        cov_279ou9k41z().s[38]++;
        return Object.assign(Object.assign({}, q), {
          category: this.getQuestionCategory(),
          id:
          /* istanbul ignore next */
          (cov_279ou9k41z().b[17][0]++, q.id) ||
          /* istanbul ignore next */
          (cov_279ou9k41z().b[17][1]++, `${this.metadata.name.toLowerCase()}-${Date.now()}-${Math.random().toString(36).substr(2, 5)}`)
        });
      }).slice(0,
      /* istanbul ignore next */
      (cov_279ou9k41z().b[18][0]++, this.metadata.maxQuestions) ||
      /* istanbul ignore next */
      (cov_279ou9k41z().b[18][1]++, 5));
    } catch (error) {
      /* istanbul ignore next */
      cov_279ou9k41z().s[39]++;
      console.error(`❌ Error parsing questions from ${this.metadata.name}:`, error);
      /* istanbul ignore next */
      cov_279ou9k41z().s[40]++;
      return this.getFallbackQuestions(context);
    }
  }
  getFallbackQuestions(context) {
    /* istanbul ignore next */
    cov_279ou9k41z().f[12]++;
    cov_279ou9k41z().s[41]++;
    return [{
      id: `${this.metadata.name.toLowerCase()}-fallback-${Date.now()}`,
      text: this.getDefaultQuestion(context),
      type:
      /* istanbul ignore next */
      (cov_279ou9k41z().b[19][0]++, this.getQuestionCategory()) ||
      /* istanbul ignore next */
      (cov_279ou9k41z().b[19][1]++, 'general'),
      category:
      /* istanbul ignore next */
      (cov_279ou9k41z().b[20][0]++, this.getQuestionCategory()) ||
      /* istanbul ignore next */
      (cov_279ou9k41z().b[20][1]++, 'general'),
      difficulty: 'medium',
      expectedDuration: 180,
      tags: ['fallback',
      /* istanbul ignore next */
      (cov_279ou9k41z().b[21][0]++, this.metadata.specialty) ||
      /* istanbul ignore next */
      (cov_279ou9k41z().b[21][1]++, 'general')],
      metadata: {
        topic: 'general'
      }
    }];
  }
  getQuestionCount(context) {
    /* istanbul ignore next */
    cov_279ou9k41z().f[13]++;
    const remainingTime =
    /* istanbul ignore next */
    (cov_279ou9k41z().s[42]++, context.interviewConfig.duration);
    const avgTimePerQuestion =
    /* istanbul ignore next */
    (cov_279ou9k41z().s[43]++,
    /* istanbul ignore next */
    (cov_279ou9k41z().b[22][0]++, this.metadata.averageDuration) ||
    /* istanbul ignore next */
    (cov_279ou9k41z().b[22][1]++, 5));
    const maxQuestions =
    /* istanbul ignore next */
    (cov_279ou9k41z().s[44]++, Math.min(
    /* istanbul ignore next */
    (cov_279ou9k41z().b[23][0]++, this.metadata.maxQuestions) ||
    /* istanbul ignore next */
    (cov_279ou9k41z().b[23][1]++, 5), Math.floor(remainingTime / avgTimePerQuestion)));
    /* istanbul ignore next */
    cov_279ou9k41z().s[45]++;
    return Math.max(1, maxQuestions);
  }
  /**
   * Log usage metrics for monitoring and cost tracking
   */
  logUsage(context, responseData) {
    /* istanbul ignore next */
    cov_279ou9k41z().f[14]++;
    cov_279ou9k41z().s[46]++;
    try {
      const usage =
      /* istanbul ignore next */
      (cov_279ou9k41z().s[47]++,
      /* istanbul ignore next */
      (cov_279ou9k41z().b[25][0]++, responseData === null) ||
      /* istanbul ignore next */
      (cov_279ou9k41z().b[25][1]++, responseData === void 0) ?
      /* istanbul ignore next */
      (cov_279ou9k41z().b[24][0]++, void 0) :
      /* istanbul ignore next */
      (cov_279ou9k41z().b[24][1]++, responseData.usage));
      /* istanbul ignore next */
      cov_279ou9k41z().s[48]++;
      if (usage) {
        /* istanbul ignore next */
        cov_279ou9k41z().b[26][0]++;
        cov_279ou9k41z().s[49]++;
        console.log(`📊 ${this.metadata.name} usage - Tokens: ${usage.total_tokens} (${usage.prompt_tokens}+${usage.completion_tokens})`);
        // TODO: Integrate with Application Insights or monitoring service
        // trackEvent('agent_usage', {
        //   agent: this.metadata.name,
        //   sessionId: context.sessionId,
        //   tokens: usage.total_tokens,
        //   model: this.modelName
        // });
      } else
      /* istanbul ignore next */
      {
        cov_279ou9k41z().b[26][1]++;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_279ou9k41z().s[50]++;
      console.warn(`⚠️ Failed to log usage for ${this.metadata.name}:`, error);
    }
  }
  /**
   * Handle errors with context-aware logging
   */
  handleError(error, context, operation) {
    /* istanbul ignore next */
    cov_279ou9k41z().f[15]++;
    cov_279ou9k41z().s[51]++;
    console.error(`❌ ${this.metadata.name} error in ${operation}:`, {
      error: error.message,
      sessionId: context.sessionId,
      agent: this.metadata.name,
      operation,
      timestamp: new Date().toISOString()
    });
    // TODO: Integrate with error tracking service
    // reportError(error, {
    //   context: `agent_${operation}`,
    //   metadata: {
    //     agent: this.metadata.name,
    //     sessionId: context.sessionId
    //   }
    // });
  }
}
/* istanbul ignore next */
cov_279ou9k41z().s[52]++;
exports.BaseAgent = BaseAgent;
// ===== UTILITY FUNCTIONS =====
function generateQuestionId(agentName, category) {
  /* istanbul ignore next */
  cov_279ou9k41z().f[16]++;
  const timestamp =
  /* istanbul ignore next */
  (cov_279ou9k41z().s[53]++, Date.now());
  const random =
  /* istanbul ignore next */
  (cov_279ou9k41z().s[54]++, Math.random().toString(36).substr(2, 5));
  /* istanbul ignore next */
  cov_279ou9k41z().s[55]++;
  return `${agentName.toLowerCase()}-${category}-${timestamp}-${random}`;
}
function calculateInterviewProgress(context) {
  /* istanbul ignore next */
  cov_279ou9k41z().f[17]++;
  var _a;
  const totalExpectedQuestions =
  /* istanbul ignore next */
  (cov_279ou9k41z().s[56]++, 9); // 3 per agent type
  const completedQuestions =
  /* istanbul ignore next */
  (cov_279ou9k41z().s[57]++,
  /* istanbul ignore next */
  (cov_279ou9k41z().b[27][0]++,
  /* istanbul ignore next */
  (cov_279ou9k41z().b[29][0]++, (_a = context.responses) === null) ||
  /* istanbul ignore next */
  (cov_279ou9k41z().b[29][1]++, _a === void 0) ?
  /* istanbul ignore next */
  (cov_279ou9k41z().b[28][0]++, void 0) :
  /* istanbul ignore next */
  (cov_279ou9k41z().b[28][1]++, _a.length)) ||
  /* istanbul ignore next */
  (cov_279ou9k41z().b[27][1]++, 0));
  /* istanbul ignore next */
  cov_279ou9k41z().s[58]++;
  return Math.min(100, Math.round(completedQuestions / totalExpectedQuestions * 100));
}
function getEstimatedRemainingTime(context, currentAgent) {
  /* istanbul ignore next */
  cov_279ou9k41z().f[18]++;
  var _a;
  const completedQuestions =
  /* istanbul ignore next */
  (cov_279ou9k41z().s[59]++,
  /* istanbul ignore next */
  (cov_279ou9k41z().b[30][0]++,
  /* istanbul ignore next */
  (cov_279ou9k41z().b[32][0]++, (_a = context.responses) === null) ||
  /* istanbul ignore next */
  (cov_279ou9k41z().b[32][1]++, _a === void 0) ?
  /* istanbul ignore next */
  (cov_279ou9k41z().b[31][0]++, void 0) :
  /* istanbul ignore next */
  (cov_279ou9k41z().b[31][1]++, _a.length)) ||
  /* istanbul ignore next */
  (cov_279ou9k41z().b[30][1]++, 0));
  const avgTimePerQuestion =
  /* istanbul ignore next */
  (cov_279ou9k41z().s[60]++,
  /* istanbul ignore next */
  (cov_279ou9k41z().b[33][0]++, currentAgent.metadata.averageDuration) ||
  /* istanbul ignore next */
  (cov_279ou9k41z().b[33][1]++, 5));
  const remainingQuestions =
  /* istanbul ignore next */
  (cov_279ou9k41z().s[61]++, Math.max(0, (
  /* istanbul ignore next */
  (cov_279ou9k41z().b[34][0]++, currentAgent.metadata.maxQuestions) ||
  /* istanbul ignore next */
  (cov_279ou9k41z().b[34][1]++, 5)) - completedQuestions));
  /* istanbul ignore next */
  cov_279ou9k41z().s[62]++;
  return remainingQuestions * avgTimePerQuestion;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,