d67c46d829a2821cb37afbc4a1831d33
"use strict";

/* istanbul ignore next */
function cov_1yq1w51grr() {
  var path = "/Users/dikshantvashistha/PrepBettr/lib/services/azure-form-recognizer.ts";
  var hash = "2898233a38962d3c92685ab2ba6917448759468c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dikshantvashistha/PrepBettr/lib/services/azure-form-recognizer.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 12,
          column: 3
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "2": {
        start: {
          line: 3,
          column: 26
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "3": {
        start: {
          line: 4,
          column: 15
        },
        end: {
          line: 4,
          column: 52
        }
      },
      "4": {
        start: {
          line: 5,
          column: 4
        },
        end: {
          line: 7,
          column: 5
        }
      },
      "5": {
        start: {
          line: 6,
          column: 6
        },
        end: {
          line: 6,
          column: 68
        }
      },
      "6": {
        start: {
          line: 6,
          column: 51
        },
        end: {
          line: 6,
          column: 63
        }
      },
      "7": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 8,
          column: 39
        }
      },
      "8": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "9": {
        start: {
          line: 10,
          column: 26
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "10": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 11,
          column: 17
        }
      },
      "11": {
        start: {
          line: 13,
          column: 25
        },
        end: {
          line: 17,
          column: 2
        }
      },
      "12": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 72
        }
      },
      "13": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 21
        }
      },
      "14": {
        start: {
          line: 18,
          column: 19
        },
        end: {
          line: 34,
          column: 4
        }
      },
      "15": {
        start: {
          line: 19,
          column: 18
        },
        end: {
          line: 26,
          column: 5
        }
      },
      "16": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 24,
          column: 10
        }
      },
      "17": {
        start: {
          line: 21,
          column: 21
        },
        end: {
          line: 21,
          column: 23
        }
      },
      "18": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "19": {
        start: {
          line: 22,
          column: 29
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "20": {
        start: {
          line: 22,
          column: 77
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "21": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 23,
          column: 22
        }
      },
      "22": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 26
        }
      },
      "23": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 33,
          column: 6
        }
      },
      "24": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 46
        }
      },
      "25": {
        start: {
          line: 28,
          column: 35
        },
        end: {
          line: 28,
          column: 46
        }
      },
      "26": {
        start: {
          line: 29,
          column: 21
        },
        end: {
          line: 29,
          column: 23
        }
      },
      "27": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "28": {
        start: {
          line: 30,
          column: 25
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "29": {
        start: {
          line: 30,
          column: 38
        },
        end: {
          line: 30,
          column: 50
        }
      },
      "30": {
        start: {
          line: 30,
          column: 56
        },
        end: {
          line: 30,
          column: 57
        }
      },
      "31": {
        start: {
          line: 30,
          column: 78
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "32": {
        start: {
          line: 30,
          column: 102
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "33": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 40
        }
      },
      "34": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 22
        }
      },
      "35": {
        start: {
          line: 35,
          column: 0
        },
        end: {
          line: 35,
          column: 62
        }
      },
      "36": {
        start: {
          line: 36,
          column: 0
        },
        end: {
          line: 36,
          column: 37
        }
      },
      "37": {
        start: {
          line: 37,
          column: 29
        },
        end: {
          line: 37,
          column: 65
        }
      },
      "38": {
        start: {
          line: 38,
          column: 23
        },
        end: {
          line: 38,
          column: 58
        }
      },
      "39": {
        start: {
          line: 39,
          column: 17
        },
        end: {
          line: 39,
          column: 40
        }
      },
      "40": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 27
        }
      },
      "41": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 43
        }
      },
      "42": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 65,
          column: 9
        }
      },
      "43": {
        start: {
          line: 50,
          column: 28
        },
        end: {
          line: 50,
          column: 73
        }
      },
      "44": {
        start: {
          line: 51,
          column: 29
        },
        end: {
          line: 51,
          column: 110
        }
      },
      "45": {
        start: {
          line: 52,
          column: 27
        },
        end: {
          line: 52,
          column: 98
        }
      },
      "46": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 56,
          column: 13
        }
      },
      "47": {
        start: {
          line: 54,
          column: 16
        },
        end: {
          line: 54,
          column: 105
        }
      },
      "48": {
        start: {
          line: 55,
          column: 16
        },
        end: {
          line: 55,
          column: 29
        }
      },
      "49": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 57,
          column: 137
        }
      },
      "50": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 58,
          column: 71
        }
      },
      "51": {
        start: {
          line: 59,
          column: 12
        },
        end: {
          line: 59,
          column: 24
        }
      },
      "52": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 62,
          column: 82
        }
      },
      "53": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 63,
          column: 108
        }
      },
      "54": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 64,
          column: 25
        }
      },
      "55": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 71,
          column: 36
        }
      },
      "56": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 79,
          column: 9
        }
      },
      "57": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 78,
          column: 77
        }
      },
      "58": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 111,
          column: 9
        }
      },
      "59": {
        start: {
          line: 81,
          column: 12
        },
        end: {
          line: 81,
          column: 83
        }
      },
      "60": {
        start: {
          line: 83,
          column: 27
        },
        end: {
          line: 83,
          column: 91
        }
      },
      "61": {
        start: {
          line: 84,
          column: 27
        },
        end: {
          line: 84,
          column: 55
        }
      },
      "62": {
        start: {
          line: 86,
          column: 29
        },
        end: {
          line: 86,
          column: 49
        }
      },
      "63": {
        start: {
          line: 88,
          column: 34
        },
        end: {
          line: 94,
          column: 13
        }
      },
      "64": {
        start: {
          line: 96,
          column: 34
        },
        end: {
          line: 96,
          column: 73
        }
      },
      "65": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 98,
          column: 56
        }
      },
      "66": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 99,
          column: 91
        }
      },
      "67": {
        start: {
          line: 100,
          column: 12
        },
        end: {
          line: 100,
          column: 33
        }
      },
      "68": {
        start: {
          line: 103,
          column: 12
        },
        end: {
          line: 103,
          column: 94
        }
      },
      "69": {
        start: {
          line: 104,
          column: 12
        },
        end: {
          line: 109,
          column: 15
        }
      },
      "70": {
        start: {
          line: 110,
          column: 12
        },
        end: {
          line: 110,
          column: 24
        }
      },
      "71": {
        start: {
          line: 120,
          column: 23
        },
        end: {
          line: 191,
          column: 5
        }
      },
      "72": {
        start: {
          line: 192,
          column: 8
        },
        end: {
          line: 225,
          column: 9
        }
      },
      "73": {
        start: {
          line: 194,
          column: 37
        },
        end: {
          line: 194,
          column: 106
        }
      },
      "74": {
        start: {
          line: 194,
          column: 72
        },
        end: {
          line: 194,
          column: 105
        }
      },
      "75": {
        start: {
          line: 196,
          column: 37
        },
        end: {
          line: 196,
          column: 69
        }
      },
      "76": {
        start: {
          line: 197,
          column: 12
        },
        end: {
          line: 218,
          column: 13
        }
      },
      "77": {
        start: {
          line: 198,
          column: 16
        },
        end: {
          line: 217,
          column: 17
        }
      },
      "78": {
        start: {
          line: 200,
          column: 39
        },
        end: {
          line: 202,
          column: 47
        }
      },
      "79": {
        start: {
          line: 203,
          column: 20
        },
        end: {
          line: 212,
          column: 22
        }
      },
      "80": {
        start: {
          line: 215,
          column: 20
        },
        end: {
          line: 215,
          column: 97
        }
      },
      "81": {
        start: {
          line: 216,
          column: 20
        },
        end: {
          line: 216,
          column: 58
        }
      },
      "82": {
        start: {
          line: 220,
          column: 12
        },
        end: {
          line: 220,
          column: 50
        }
      },
      "83": {
        start: {
          line: 223,
          column: 12
        },
        end: {
          line: 223,
          column: 83
        }
      },
      "84": {
        start: {
          line: 224,
          column: 12
        },
        end: {
          line: 224,
          column: 50
        }
      },
      "85": {
        start: {
          line: 231,
          column: 22
        },
        end: {
          line: 231,
          column: 84
        }
      },
      "86": {
        start: {
          line: 231,
          column: 51
        },
        end: {
          line: 231,
          column: 62
        }
      },
      "87": {
        start: {
          line: 231,
          column: 79
        },
        end: {
          line: 231,
          column: 83
        }
      },
      "88": {
        start: {
          line: 233,
          column: 27
        },
        end: {
          line: 233,
          column: 81
        }
      },
      "89": {
        start: {
          line: 234,
          column: 27
        },
        end: {
          line: 234,
          column: 89
        }
      },
      "90": {
        start: {
          line: 235,
          column: 30
        },
        end: {
          line: 235,
          column: 59
        }
      },
      "91": {
        start: {
          line: 236,
          column: 28
        },
        end: {
          line: 236,
          column: 51
        }
      },
      "92": {
        start: {
          line: 237,
          column: 23
        },
        end: {
          line: 237,
          column: 51
        }
      },
      "93": {
        start: {
          line: 238,
          column: 23
        },
        end: {
          line: 238,
          column: 51
        }
      },
      "94": {
        start: {
          line: 239,
          column: 29
        },
        end: {
          line: 239,
          column: 60
        }
      },
      "95": {
        start: {
          line: 240,
          column: 27
        },
        end: {
          line: 240,
          column: 56
        }
      },
      "96": {
        start: {
          line: 242,
          column: 30
        },
        end: {
          line: 249,
          column: 9
        }
      },
      "97": {
        start: {
          line: 250,
          column: 31
        },
        end: {
          line: 250,
          column: 110
        }
      },
      "98": {
        start: {
          line: 250,
          column: 61
        },
        end: {
          line: 250,
          column: 109
        }
      },
      "99": {
        start: {
          line: 251,
          column: 8
        },
        end: {
          line: 264,
          column: 10
        }
      },
      "100": {
        start: {
          line: 268,
          column: 0
        },
        end: {
          line: 268,
          column: 63
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 2,
            column: 75
          }
        },
        loc: {
          start: {
            line: 2,
            column: 96
          },
          end: {
            line: 9,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 6,
            column: 38
          },
          end: {
            line: 6,
            column: 39
          }
        },
        loc: {
          start: {
            line: 6,
            column: 49
          },
          end: {
            line: 6,
            column: 65
          }
        },
        line: 6
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 9,
            column: 7
          }
        },
        loc: {
          start: {
            line: 9,
            column: 28
          },
          end: {
            line: 12,
            column: 1
          }
        },
        line: 9
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 13,
            column: 81
          }
        },
        loc: {
          start: {
            line: 13,
            column: 95
          },
          end: {
            line: 15,
            column: 1
          }
        },
        line: 13
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 15,
            column: 6
          }
        },
        loc: {
          start: {
            line: 15,
            column: 20
          },
          end: {
            line: 17,
            column: 1
          }
        },
        line: 15
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 18,
            column: 51
          },
          end: {
            line: 18,
            column: 52
          }
        },
        loc: {
          start: {
            line: 18,
            column: 63
          },
          end: {
            line: 34,
            column: 1
          }
        },
        line: 18
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 19,
            column: 18
          },
          end: {
            line: 19,
            column: 19
          }
        },
        loc: {
          start: {
            line: 19,
            column: 30
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 19
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 20,
            column: 48
          },
          end: {
            line: 20,
            column: 49
          }
        },
        loc: {
          start: {
            line: 20,
            column: 61
          },
          end: {
            line: 24,
            column: 9
          }
        },
        line: 20
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 27,
            column: 11
          },
          end: {
            line: 27,
            column: 12
          }
        },
        loc: {
          start: {
            line: 27,
            column: 26
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 27
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 41,
            column: 5
          }
        },
        loc: {
          start: {
            line: 41,
            column: 18
          },
          end: {
            line: 44,
            column: 5
          }
        },
        line: 41
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 48,
            column: 4
          },
          end: {
            line: 48,
            column: 5
          }
        },
        loc: {
          start: {
            line: 48,
            column: 23
          },
          end: {
            line: 66,
            column: 5
          }
        },
        line: 48
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 70,
            column: 4
          },
          end: {
            line: 70,
            column: 5
          }
        },
        loc: {
          start: {
            line: 70,
            column: 14
          },
          end: {
            line: 72,
            column: 5
          }
        },
        line: 70
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 76,
            column: 4
          },
          end: {
            line: 76,
            column: 5
          }
        },
        loc: {
          start: {
            line: 76,
            column: 50
          },
          end: {
            line: 112,
            column: 5
          }
        },
        line: 76
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 117,
            column: 4
          },
          end: {
            line: 117,
            column: 5
          }
        },
        loc: {
          start: {
            line: 117,
            column: 35
          },
          end: {
            line: 226,
            column: 5
          }
        },
        line: 117
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 194,
            column: 66
          },
          end: {
            line: 194,
            column: 67
          }
        },
        loc: {
          start: {
            line: 194,
            column: 72
          },
          end: {
            line: 194,
            column: 105
          }
        },
        line: 194
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 230,
            column: 4
          },
          end: {
            line: 230,
            column: 5
          }
        },
        loc: {
          start: {
            line: 230,
            column: 30
          },
          end: {
            line: 265,
            column: 5
          }
        },
        line: 230
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 231,
            column: 43
          },
          end: {
            line: 231,
            column: 44
          }
        },
        loc: {
          start: {
            line: 231,
            column: 51
          },
          end: {
            line: 231,
            column: 62
          }
        },
        line: 231
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 231,
            column: 71
          },
          end: {
            line: 231,
            column: 72
          }
        },
        loc: {
          start: {
            line: 231,
            column: 79
          },
          end: {
            line: 231,
            column: 83
          }
        },
        line: 231
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 250,
            column: 52
          },
          end: {
            line: 250,
            column: 53
          }
        },
        loc: {
          start: {
            line: 250,
            column: 61
          },
          end: {
            line: 250,
            column: 109
          }
        },
        line: 250
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 12,
            column: 3
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 9,
            column: 1
          }
        }, {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 12,
            column: 1
          }
        }],
        line: 2
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 5
      },
      "4": {
        loc: {
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 13
          }
        }, {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "5": {
        loc: {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 47
          }
        }, {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "6": {
        loc: {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 63
          }
        }, {
          start: {
            line: 5,
            column: 67
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "7": {
        loc: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 10
      },
      "8": {
        loc: {
          start: {
            line: 13,
            column: 25
          },
          end: {
            line: 17,
            column: 2
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 26
          },
          end: {
            line: 13,
            column: 30
          }
        }, {
          start: {
            line: 13,
            column: 34
          },
          end: {
            line: 13,
            column: 57
          }
        }, {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "9": {
        loc: {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 15,
            column: 1
          }
        }, {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "10": {
        loc: {
          start: {
            line: 18,
            column: 19
          },
          end: {
            line: 34,
            column: 4
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 20
          },
          end: {
            line: 18,
            column: 24
          }
        }, {
          start: {
            line: 18,
            column: 28
          },
          end: {
            line: 18,
            column: 45
          }
        }, {
          start: {
            line: 18,
            column: 50
          },
          end: {
            line: 34,
            column: 4
          }
        }],
        line: 18
      },
      "11": {
        loc: {
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 24,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 20,
            column: 44
          }
        }, {
          start: {
            line: 20,
            column: 48
          },
          end: {
            line: 24,
            column: 9
          }
        }],
        line: 20
      },
      "12": {
        loc: {
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 22,
            column: 95
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 22,
            column: 95
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "13": {
        loc: {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 46
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 46
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "14": {
        loc: {
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 15
          }
        }, {
          start: {
            line: 28,
            column: 19
          },
          end: {
            line: 28,
            column: 33
          }
        }],
        line: 28
      },
      "15": {
        loc: {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "16": {
        loc: {
          start: {
            line: 30,
            column: 78
          },
          end: {
            line: 30,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 78
          },
          end: {
            line: 30,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "17": {
        loc: {
          start: {
            line: 51,
            column: 29
          },
          end: {
            line: 51,
            column: 110
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 51,
            column: 29
          },
          end: {
            line: 51,
            column: 71
          }
        }, {
          start: {
            line: 51,
            column: 75
          },
          end: {
            line: 51,
            column: 110
          }
        }],
        line: 51
      },
      "18": {
        loc: {
          start: {
            line: 52,
            column: 27
          },
          end: {
            line: 52,
            column: 98
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 52,
            column: 27
          },
          end: {
            line: 52,
            column: 64
          }
        }, {
          start: {
            line: 52,
            column: 68
          },
          end: {
            line: 52,
            column: 98
          }
        }],
        line: 52
      },
      "19": {
        loc: {
          start: {
            line: 53,
            column: 12
          },
          end: {
            line: 56,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 53,
            column: 12
          },
          end: {
            line: 56,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 53
      },
      "20": {
        loc: {
          start: {
            line: 53,
            column: 16
          },
          end: {
            line: 53,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 53,
            column: 16
          },
          end: {
            line: 53,
            column: 25
          }
        }, {
          start: {
            line: 53,
            column: 29
          },
          end: {
            line: 53,
            column: 36
          }
        }],
        line: 53
      },
      "21": {
        loc: {
          start: {
            line: 77,
            column: 8
          },
          end: {
            line: 79,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 77,
            column: 8
          },
          end: {
            line: 79,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 77
      },
      "22": {
        loc: {
          start: {
            line: 86,
            column: 29
          },
          end: {
            line: 86,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 86,
            column: 29
          },
          end: {
            line: 86,
            column: 43
          }
        }, {
          start: {
            line: 86,
            column: 47
          },
          end: {
            line: 86,
            column: 49
          }
        }],
        line: 86
      },
      "23": {
        loc: {
          start: {
            line: 197,
            column: 12
          },
          end: {
            line: 218,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 197,
            column: 12
          },
          end: {
            line: 218,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 197
      },
      "24": {
        loc: {
          start: {
            line: 197,
            column: 16
          },
          end: {
            line: 197,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 197,
            column: 16
          },
          end: {
            line: 197,
            column: 40
          }
        }, {
          start: {
            line: 197,
            column: 44
          },
          end: {
            line: 197,
            column: 65
          }
        }],
        line: 197
      },
      "25": {
        loc: {
          start: {
            line: 200,
            column: 39
          },
          end: {
            line: 202,
            column: 47
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 201,
            column: 26
          },
          end: {
            line: 201,
            column: 59
          }
        }, {
          start: {
            line: 202,
            column: 26
          },
          end: {
            line: 202,
            column: 47
          }
        }],
        line: 200
      },
      "26": {
        loc: {
          start: {
            line: 204,
            column: 38
          },
          end: {
            line: 204,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 204,
            column: 38
          },
          end: {
            line: 204,
            column: 61
          }
        }, {
          start: {
            line: 204,
            column: 65
          },
          end: {
            line: 204,
            column: 67
          }
        }],
        line: 204
      },
      "27": {
        loc: {
          start: {
            line: 206,
            column: 32
          },
          end: {
            line: 206,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 206,
            column: 32
          },
          end: {
            line: 206,
            column: 49
          }
        }, {
          start: {
            line: 206,
            column: 53
          },
          end: {
            line: 206,
            column: 55
          }
        }],
        line: 206
      },
      "28": {
        loc: {
          start: {
            line: 207,
            column: 36
          },
          end: {
            line: 207,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 207,
            column: 36
          },
          end: {
            line: 207,
            column: 57
          }
        }, {
          start: {
            line: 207,
            column: 61
          },
          end: {
            line: 207,
            column: 63
          }
        }],
        line: 207
      },
      "29": {
        loc: {
          start: {
            line: 208,
            column: 35
          },
          end: {
            line: 208,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 208,
            column: 35
          },
          end: {
            line: 208,
            column: 55
          }
        }, {
          start: {
            line: 208,
            column: 59
          },
          end: {
            line: 208,
            column: 61
          }
        }],
        line: 208
      },
      "30": {
        loc: {
          start: {
            line: 209,
            column: 34
          },
          end: {
            line: 209,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 209,
            column: 34
          },
          end: {
            line: 209,
            column: 53
          }
        }, {
          start: {
            line: 209,
            column: 57
          },
          end: {
            line: 209,
            column: 59
          }
        }],
        line: 209
      },
      "31": {
        loc: {
          start: {
            line: 210,
            column: 40
          },
          end: {
            line: 210,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 210,
            column: 40
          },
          end: {
            line: 210,
            column: 65
          }
        }, {
          start: {
            line: 210,
            column: 69
          },
          end: {
            line: 210,
            column: 71
          }
        }],
        line: 210
      },
      "32": {
        loc: {
          start: {
            line: 211,
            column: 35
          },
          end: {
            line: 211,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 211,
            column: 35
          },
          end: {
            line: 211,
            column: 55
          }
        }, {
          start: {
            line: 211,
            column: 59
          },
          end: {
            line: 211,
            column: 61
          }
        }],
        line: 211
      },
      "33": {
        loc: {
          start: {
            line: 237,
            column: 23
          },
          end: {
            line: 237,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 237,
            column: 23
          },
          end: {
            line: 237,
            column: 45
          }
        }, {
          start: {
            line: 237,
            column: 49
          },
          end: {
            line: 237,
            column: 51
          }
        }],
        line: 237
      },
      "34": {
        loc: {
          start: {
            line: 238,
            column: 23
          },
          end: {
            line: 238,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 238,
            column: 23
          },
          end: {
            line: 238,
            column: 45
          }
        }, {
          start: {
            line: 238,
            column: 49
          },
          end: {
            line: 238,
            column: 51
          }
        }],
        line: 238
      },
      "35": {
        loc: {
          start: {
            line: 239,
            column: 29
          },
          end: {
            line: 239,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 239,
            column: 29
          },
          end: {
            line: 239,
            column: 54
          }
        }, {
          start: {
            line: 239,
            column: 58
          },
          end: {
            line: 239,
            column: 60
          }
        }],
        line: 239
      },
      "36": {
        loc: {
          start: {
            line: 240,
            column: 27
          },
          end: {
            line: 240,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 240,
            column: 27
          },
          end: {
            line: 240,
            column: 50
          }
        }, {
          start: {
            line: 240,
            column: 54
          },
          end: {
            line: 240,
            column: 56
          }
        }],
        line: 240
      },
      "37": {
        loc: {
          start: {
            line: 255,
            column: 26
          },
          end: {
            line: 255,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 255,
            column: 44
          },
          end: {
            line: 255,
            column: 72
          }
        }, {
          start: {
            line: 255,
            column: 75
          },
          end: {
            line: 255,
            column: 84
          }
        }],
        line: 255
      },
      "38": {
        loc: {
          start: {
            line: 256,
            column: 24
          },
          end: {
            line: 256,
            column: 78
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 256,
            column: 40
          },
          end: {
            line: 256,
            column: 66
          }
        }, {
          start: {
            line: 256,
            column: 69
          },
          end: {
            line: 256,
            column: 78
          }
        }],
        line: 256
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0, 0],
      "9": [0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/dikshantvashistha/PrepBettr/lib/services/azure-form-recognizer.ts",
      mappings: ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,kEAAuF;AACvF,2DAA6D;AAC7D,yCAA8C;AAsE9C,MAAM,0BAA0B;IAAhC;QACU,WAAM,GAAkC,IAAI,CAAC;QAC7C,YAAO,GAAG,mBAAmB,CAAC,CAAC,8BAA8B;IA4PvE,CAAC;IA1PC;;OAEG;IACH,KAAK,CAAC,UAAU;QACd,IAAI,CAAC;YACH,MAAM,OAAO,GAAG,MAAM,IAAA,gCAAiB,GAAE,CAAC;YAE1C,MAAM,QAAQ,GAAG,OAAO,CAAC,GAAG,CAAC,8BAA8B,IAAI,OAAO,CAAC,2BAA2B,CAAC;YACnG,MAAM,MAAM,GAAG,OAAO,CAAC,GAAG,CAAC,yBAAyB,IAAI,OAAO,CAAC,sBAAsB,CAAC;YAEvF,IAAI,CAAC,QAAQ,IAAI,CAAC,MAAM,EAAE,CAAC;gBACzB,OAAO,CAAC,IAAI,CAAC,0EAA0E,CAAC,CAAC;gBACzF,OAAO,KAAK,CAAC;YACf,CAAC;YAED,IAAI,CAAC,MAAM,GAAG,IAAI,2CAAsB,CACtC,QAAQ,EACR,IAAI,uCAAkB,CAAC,MAAM,CAAC,CAC/B,CAAC;YAEF,OAAO,CAAC,GAAG,CAAC,6CAA6C,CAAC,CAAC;YAC3D,OAAO,IAAI,CAAC;QACd,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,KAAK,CAAC,+CAA+C,EAAE,KAAK,CAAC,CAAC;YACtE,IAAA,uBAAc,EAAC,KAAc,EAAE,EAAE,OAAO,EAAE,uBAAuB,EAAE,MAAM,EAAE,YAAY,EAAE,CAAC,CAAC;YAC3F,OAAO,KAAK,CAAC;QACf,CAAC;IACH,CAAC;IAED;;OAEG;IACH,OAAO;QACL,OAAO,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC;IAC9B,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,iBAAiB,CAAC,UAAkB,EAAE,QAAgB;QAC1D,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,CAAC;YACpB,MAAM,IAAI,KAAK,CAAC,+CAA+C,CAAC,CAAC;QACnE,CAAC;QAED,IAAI,CAAC;YACH,OAAO,CAAC,GAAG,CAAC,yDAAyD,CAAC,CAAC;YAEvE,uBAAuB;YACvB,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,MAAO,CAAC,oBAAoB,CAAC,IAAI,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;YACjF,MAAM,MAAM,GAAG,MAAM,MAAM,CAAC,aAAa,EAAE,CAAC;YAE5C,yCAAyC;YACzC,MAAM,QAAQ,GAAG,MAAM,CAAC,OAAO,IAAI,EAAE,CAAC;YAEtC,uCAAuC;YACvC,MAAM,aAAa,GAAG;gBACpB,OAAO,EAAE,MAAM,CAAC,OAAO;gBACvB,KAAK,EAAE,MAAM,CAAC,KAAK;gBACnB,MAAM,EAAE,MAAM,CAAC,MAAM;gBACrB,aAAa,EAAE,MAAM,CAAC,aAAa;gBACnC,MAAM,EAAE,MAAM,CAAC,MAAM;aACtB,CAAC;YAEF,6CAA6C;YAC7C,MAAM,aAAa,GAAG,MAAM,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;YAE9D,yBAAyB;YACzB,aAAa,CAAC,aAAa,GAAG,aAAa,CAAC;YAE5C,OAAO,CAAC,GAAG,CAAC,iEAAiE,CAAC,CAAC;YAC/E,OAAO,aAAa,CAAC;QAEvB,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,KAAK,CAAC,2DAA2D,EAAE,KAAK,CAAC,CAAC;YAClF,IAAA,uBAAc,EAAC,KAAc,EAAE;gBAC7B,OAAO,EAAE,uBAAuB;gBAChC,MAAM,EAAE,SAAS;aAClB,EAAE;gBACD,QAAQ;aACT,CAAC,CAAC;YACH,MAAM,KAAK,CAAC;QACd,CAAC;IACH,CAAC;IAED;;;OAGG;IACK,KAAK,CAAC,kBAAkB,CAAC,IAAY;QAC3C,oFAAoF;QAEpF,8DAA8D;QAC9D,MAAM,MAAM,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAsEb,IAAI;KACL,CAAC;QAEF,IAAI,CAAC;YACH,yCAAyC;YACzC,MAAM,EAAE,YAAY,EAAE,GAAG,wDAAa,UAAU,GAAC,CAAC;YAElD,wCAAwC;YACxC,MAAM,gBAAgB,GAAG,MAAM,YAAY,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;YAE1D,IAAI,gBAAgB,CAAC,OAAO,IAAI,gBAAgB,CAAC,IAAI,EAAE,CAAC;gBACtD,IAAI,CAAC;oBACH,0BAA0B;oBAC1B,MAAM,UAAU,GAAG,OAAO,gBAAgB,CAAC,IAAI,KAAK,QAAQ;wBAC1D,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,IAAI,CAAC;wBACnC,CAAC,CAAC,gBAAgB,CAAC,IAAI,CAAC;oBAE1B,OAAO;wBACL,YAAY,EAAE,UAAU,CAAC,YAAY,IAAI,EAAE;wBAC3C,OAAO,EAAE,UAAU,CAAC,OAAO;wBAC3B,MAAM,EAAE,UAAU,CAAC,MAAM,IAAI,EAAE;wBAC/B,UAAU,EAAE,UAAU,CAAC,UAAU,IAAI,EAAE;wBACvC,SAAS,EAAE,UAAU,CAAC,SAAS,IAAI,EAAE;wBACrC,QAAQ,EAAE,UAAU,CAAC,QAAQ,IAAI,EAAE;wBACnC,cAAc,EAAE,UAAU,CAAC,cAAc,IAAI,EAAE;wBAC/C,SAAS,EAAE,UAAU,CAAC,SAAS,IAAI,EAAE;qBACtC,CAAC;gBACJ,CAAC;gBAAC,OAAO,UAAU,EAAE,CAAC;oBACpB,OAAO,CAAC,IAAI,CAAC,8DAA8D,CAAC,CAAC;oBAC7E,OAAO,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;gBACxC,CAAC;YACH,CAAC;YAED,8CAA8C;YAC9C,OAAO,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;QAExC,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,IAAI,CAAC,iDAAiD,EAAE,KAAK,CAAC,CAAC;YACvE,OAAO,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;QACxC,CAAC;IACH,CAAC;IAED;;OAEG;IACK,mBAAmB,CAAC,IAAY;QACtC,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;QAE7E,6CAA6C;QAC7C,MAAM,UAAU,GAAG,sDAAsD,CAAC;QAC1E,MAAM,UAAU,GAAG,8DAA8D,CAAC;QAClF,MAAM,aAAa,GAAG,6BAA6B,CAAC;QACpD,MAAM,WAAW,GAAG,uBAAuB,CAAC;QAE5C,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;QAC5C,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;QAC5C,MAAM,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;QACrD,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;QAEjD,2CAA2C;QAC3C,MAAM,aAAa,GAAG;YACpB,YAAY,EAAE,YAAY,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,SAAS;YACxE,SAAS,EAAE,KAAK,EAAE,YAAY,EAAE,OAAO,EAAE,QAAQ,EAAE,YAAY,EAAE,KAAK;YACtE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,QAAQ;YAChE,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,OAAO;YACpE,QAAQ,EAAE,SAAS,EAAE,MAAM,EAAE,YAAY,EAAE,SAAS,EAAE,kBAAkB;YACxE,cAAc,EAAE,yBAAyB,EAAE,YAAY,EAAE,QAAQ;SAClE,CAAC;QAEF,MAAM,cAAc,GAAG,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAClD,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CACjD,CAAC;QAEF,OAAO;YACL,YAAY,EAAE;gBACZ,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC;gBAChB,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC;gBAChB,QAAQ,EAAE,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,YAAY,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS;gBACpE,MAAM,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS;aAC/D;YACD,MAAM,EAAE,cAAc;YACtB,UAAU,EAAE,EAAE;YACd,SAAS,EAAE,EAAE;YACb,QAAQ,EAAE,EAAE;YACZ,cAAc,EAAE,EAAE;YAClB,SAAS,EAAE,EAAE;SACd,CAAC;IACJ,CAAC;CACF;AAED,4BAA4B;AACf,QAAA,mBAAmB,GAAG,IAAI,0BAA0B,EAAE,CAAC",
      names: [],
      sources: ["/Users/dikshantvashistha/PrepBettr/lib/services/azure-form-recognizer.ts"],
      sourcesContent: ["import { DocumentAnalysisClient, AzureKeyCredential } from '@azure/ai-form-recognizer';\nimport { fetchAzureSecrets } from '@/azure/lib/azure-config';\nimport { logServerError } from '@/lib/errors';\n\n// Types for extracted resume data\nexport interface ExtractedResumeData {\n  personalInfo: {\n    name?: string;\n    email?: string;\n    phone?: string;\n    address?: string;\n    linkedin?: string;\n    github?: string;\n    website?: string;\n  };\n  summary?: string;\n  skills: string[];\n  experience: WorkExperience[];\n  education: Education[];\n  projects?: Project[];\n  certifications?: Certification[];\n  languages?: Language[];\n  rawExtraction?: any; // Store raw extraction for GDPR export\n}\n\nexport interface WorkExperience {\n  company: string;\n  position: string;\n  startDate?: string;\n  endDate?: string;\n  isCurrent?: boolean;\n  description: string;\n  achievements?: string[];\n  technologies?: string[];\n  location?: string;\n}\n\nexport interface Education {\n  institution: string;\n  degree: string;\n  field: string;\n  startDate?: string;\n  endDate?: string;\n  gpa?: number;\n  description?: string;\n  location?: string;\n}\n\nexport interface Project {\n  name: string;\n  description: string;\n  technologies?: string[];\n  url?: string;\n  github?: string;\n  startDate?: string;\n  endDate?: string;\n}\n\nexport interface Certification {\n  name: string;\n  issuer: string;\n  date?: string;\n  expiryDate?: string;\n  credentialId?: string;\n  url?: string;\n}\n\nexport interface Language {\n  name: string;\n  proficiency: string;\n}\n\nclass AzureFormRecognizerService {\n  private client: DocumentAnalysisClient | null = null;\n  private modelId = 'prebuilt-document'; // Use prebuilt document model\n\n  /**\n   * Initialize the Azure Form Recognizer service\n   */\n  async initialize(): Promise<boolean> {\n    try {\n      const secrets = await fetchAzureSecrets();\n      \n      const endpoint = process.env.AZURE_FORM_RECOGNIZER_ENDPOINT || secrets.azureFormRecognizerEndpoint;\n      const apiKey = process.env.AZURE_FORM_RECOGNIZER_KEY || secrets.azureFormRecognizerKey;\n\n      if (!endpoint || !apiKey) {\n        console.warn('\u26A0\uFE0F Azure Form Recognizer credentials not found, will use OpenAI fallback');\n        return false;\n      }\n\n      this.client = new DocumentAnalysisClient(\n        endpoint,\n        new AzureKeyCredential(apiKey)\n      );\n\n      console.log('\u2705 Azure Form Recognizer service initialized');\n      return true;\n    } catch (error) {\n      console.error('\u274C Failed to initialize Azure Form Recognizer:', error);\n      logServerError(error as Error, { service: 'azure-form-recognizer', action: 'initialize' });\n      return false;\n    }\n  }\n\n  /**\n   * Check if service is ready\n   */\n  isReady(): boolean {\n    return this.client !== null;\n  }\n\n  /**\n   * Extract resume data from buffer using Azure Form Recognizer\n   */\n  async extractResumeData(fileBuffer: Buffer, mimeType: string): Promise<ExtractedResumeData> {\n    if (!this.isReady()) {\n      throw new Error('Azure Form Recognizer service not initialized');\n    }\n\n    try {\n      console.log('\uD83D\uDD0D Extracting resume data with Azure Form Recognizer...');\n\n      // Analyze the document\n      const poller = await this.client!.beginAnalyzeDocument(this.modelId, fileBuffer);\n      const result = await poller.pollUntilDone();\n\n      // Extract text content from the document\n      const fullText = result.content || '';\n      \n      // Store raw extraction for GDPR export\n      const rawExtraction = {\n        content: result.content,\n        pages: result.pages,\n        tables: result.tables,\n        keyValuePairs: result.keyValuePairs,\n        styles: result.styles\n      };\n\n      // Parse the extracted text to structure data\n      const extractedData = await this.parseResumeContent(fullText);\n      \n      // Include raw extraction\n      extractedData.rawExtraction = rawExtraction;\n\n      console.log('\u2705 Resume data extracted successfully with Azure Form Recognizer');\n      return extractedData;\n\n    } catch (error) {\n      console.error('Failed to extract resume data with Azure Form Recognizer:', error);\n      logServerError(error as Error, { \n        service: 'azure-form-recognizer', \n        action: 'extract'\n      }, {\n        mimeType\n      });\n      throw error;\n    }\n  }\n\n  /**\n   * Parse resume content using AI to extract structured data\n   * This method uses OpenAI as a processing layer on top of Form Recognizer\n   */\n  private async parseResumeContent(text: string): Promise<ExtractedResumeData> {\n    // We'll use tailorResume function as it's the main AI processing function available\n    \n    // Use OpenAI function calling to structure the extracted text\n    const prompt = `\n    Extract the following information from this resume text and return as JSON:\n    \n    {\n      \"personalInfo\": {\n        \"name\": \"Full name\",\n        \"email\": \"Email address\",\n        \"phone\": \"Phone number\",\n        \"address\": \"Address\",\n        \"linkedin\": \"LinkedIn URL\",\n        \"github\": \"GitHub URL\",\n        \"website\": \"Personal website URL\"\n      },\n      \"summary\": \"Professional summary or objective\",\n      \"skills\": [\"skill1\", \"skill2\", ...],\n      \"experience\": [\n        {\n          \"company\": \"Company name\",\n          \"position\": \"Job title\",\n          \"startDate\": \"Start date\",\n          \"endDate\": \"End date or 'Present'\",\n          \"isCurrent\": true/false,\n          \"description\": \"Job description\",\n          \"achievements\": [\"achievement1\", ...],\n          \"technologies\": [\"tech1\", \"tech2\", ...],\n          \"location\": \"Location\"\n        }\n      ],\n      \"education\": [\n        {\n          \"institution\": \"School name\",\n          \"degree\": \"Degree type\",\n          \"field\": \"Field of study\",\n          \"startDate\": \"Start date\",\n          \"endDate\": \"End date\",\n          \"gpa\": 3.5,\n          \"description\": \"Additional details\",\n          \"location\": \"Location\"\n        }\n      ],\n      \"projects\": [\n        {\n          \"name\": \"Project name\",\n          \"description\": \"Project description\",\n          \"technologies\": [\"tech1\", \"tech2\", ...],\n          \"url\": \"Project URL\",\n          \"github\": \"GitHub URL\",\n          \"startDate\": \"Start date\",\n          \"endDate\": \"End date\"\n        }\n      ],\n      \"certifications\": [\n        {\n          \"name\": \"Certification name\",\n          \"issuer\": \"Issuing organization\",\n          \"date\": \"Issue date\",\n          \"expiryDate\": \"Expiry date\",\n          \"credentialId\": \"Credential ID\",\n          \"url\": \"Verification URL\"\n        }\n      ],\n      \"languages\": [\n        {\n          \"name\": \"Language name\",\n          \"proficiency\": \"Proficiency level\"\n        }\n      ]\n    }\n    \n    Resume text:\n    ${text}\n    `;\n\n    try {\n      // Use the AI service to process the text\n      const { tailorResume } = await import('@/lib/ai');\n      \n      // Create a structured extraction prompt\n      const extractionResult = await tailorResume(text, prompt);\n      \n      if (extractionResult.success && extractionResult.data) {\n        try {\n          // Parse the JSON response\n          const parsedData = typeof extractionResult.data === 'string' \n            ? JSON.parse(extractionResult.data) \n            : extractionResult.data;\n            \n          return {\n            personalInfo: parsedData.personalInfo || {},\n            summary: parsedData.summary,\n            skills: parsedData.skills || [],\n            experience: parsedData.experience || [],\n            education: parsedData.education || [],\n            projects: parsedData.projects || [],\n            certifications: parsedData.certifications || [],\n            languages: parsedData.languages || []\n          };\n        } catch (parseError) {\n          console.warn('Failed to parse AI extraction result, using fallback parsing');\n          return this.fallbackTextParsing(text);\n        }\n      }\n      \n      // Fallback to simple text parsing if AI fails\n      return this.fallbackTextParsing(text);\n      \n    } catch (error) {\n      console.warn('AI parsing failed, using fallback text parsing:', error);\n      return this.fallbackTextParsing(text);\n    }\n  }\n\n  /**\n   * Fallback text parsing method\n   */\n  private fallbackTextParsing(text: string): ExtractedResumeData {\n    const lines = text.split('\\n').map(line => line.trim()).filter(line => line);\n    \n    // Simple regex patterns for basic extraction\n    const emailRegex = /\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,}\\b/g;\n    const phoneRegex = /(\\+?1?[-.\\s]?)?\\(?[0-9]{3}\\)?[-.\\s]?[0-9]{3}[-.\\s]?[0-9]{4}/g;\n    const linkedinRegex = /linkedin\\.com\\/in\\/[\\w-]+/gi;\n    const githubRegex = /github\\.com\\/[\\w-]+/gi;\n\n    const emails = text.match(emailRegex) || [];\n    const phones = text.match(phoneRegex) || [];\n    const linkedinUrls = text.match(linkedinRegex) || [];\n    const githubUrls = text.match(githubRegex) || [];\n\n    // Extract skills (simple keyword matching)\n    const skillKeywords = [\n      'javascript', 'typescript', 'python', 'java', 'react', 'node', 'express',\n      'mongodb', 'sql', 'postgresql', 'mysql', 'docker', 'kubernetes', 'aws',\n      'azure', 'gcp', 'git', 'html', 'css', 'angular', 'vue', 'spring',\n      'django', 'flask', 'ruby', 'php', 'go', 'rust', 'c++', 'c#', 'swift',\n      'kotlin', 'flutter', 'dart', 'tensorflow', 'pytorch', 'machine learning',\n      'data science', 'artificial intelligence', 'blockchain', 'devops'\n    ];\n\n    const detectedSkills = skillKeywords.filter(skill => \n      text.toLowerCase().includes(skill.toLowerCase())\n    );\n\n    return {\n      personalInfo: {\n        email: emails[0],\n        phone: phones[0],\n        linkedin: linkedinUrls[0] ? `https://${linkedinUrls[0]}` : undefined,\n        github: githubUrls[0] ? `https://${githubUrls[0]}` : undefined\n      },\n      skills: detectedSkills,\n      experience: [],\n      education: [],\n      projects: [],\n      certifications: [],\n      languages: []\n    };\n  }\n}\n\n// Export singleton instance\nexport const azureFormRecognizer = new AzureFormRecognizerService();\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "2898233a38962d3c92685ab2ba6917448759468c"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1yq1w51grr = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1yq1w51grr();
var __createBinding =
/* istanbul ignore next */
(cov_1yq1w51grr().s[0]++,
/* istanbul ignore next */
(cov_1yq1w51grr().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1yq1w51grr().b[0][1]++, this.__createBinding) ||
/* istanbul ignore next */
(cov_1yq1w51grr().b[0][2]++, Object.create ?
/* istanbul ignore next */
(cov_1yq1w51grr().b[1][0]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_1yq1w51grr().f[0]++;
  cov_1yq1w51grr().s[1]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_1yq1w51grr().b[2][0]++;
    cov_1yq1w51grr().s[2]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_1yq1w51grr().b[2][1]++;
  }
  var desc =
  /* istanbul ignore next */
  (cov_1yq1w51grr().s[3]++, Object.getOwnPropertyDescriptor(m, k));
  /* istanbul ignore next */
  cov_1yq1w51grr().s[4]++;
  if (
  /* istanbul ignore next */
  (cov_1yq1w51grr().b[4][0]++, !desc) ||
  /* istanbul ignore next */
  (cov_1yq1w51grr().b[4][1]++, "get" in desc ?
  /* istanbul ignore next */
  (cov_1yq1w51grr().b[5][0]++, !m.__esModule) :
  /* istanbul ignore next */
  (cov_1yq1w51grr().b[5][1]++,
  /* istanbul ignore next */
  (cov_1yq1w51grr().b[6][0]++, desc.writable) ||
  /* istanbul ignore next */
  (cov_1yq1w51grr().b[6][1]++, desc.configurable)))) {
    /* istanbul ignore next */
    cov_1yq1w51grr().b[3][0]++;
    cov_1yq1w51grr().s[5]++;
    desc = {
      enumerable: true,
      get: function () {
        /* istanbul ignore next */
        cov_1yq1w51grr().f[1]++;
        cov_1yq1w51grr().s[6]++;
        return m[k];
      }
    };
  } else
  /* istanbul ignore next */
  {
    cov_1yq1w51grr().b[3][1]++;
  }
  cov_1yq1w51grr().s[7]++;
  Object.defineProperty(o, k2, desc);
}) :
/* istanbul ignore next */
(cov_1yq1w51grr().b[1][1]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_1yq1w51grr().f[2]++;
  cov_1yq1w51grr().s[8]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_1yq1w51grr().b[7][0]++;
    cov_1yq1w51grr().s[9]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_1yq1w51grr().b[7][1]++;
  }
  cov_1yq1w51grr().s[10]++;
  o[k2] = m[k];
})));
var __setModuleDefault =
/* istanbul ignore next */
(cov_1yq1w51grr().s[11]++,
/* istanbul ignore next */
(cov_1yq1w51grr().b[8][0]++, this) &&
/* istanbul ignore next */
(cov_1yq1w51grr().b[8][1]++, this.__setModuleDefault) ||
/* istanbul ignore next */
(cov_1yq1w51grr().b[8][2]++, Object.create ?
/* istanbul ignore next */
(cov_1yq1w51grr().b[9][0]++, function (o, v) {
  /* istanbul ignore next */
  cov_1yq1w51grr().f[3]++;
  cov_1yq1w51grr().s[12]++;
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
}) :
/* istanbul ignore next */
(cov_1yq1w51grr().b[9][1]++, function (o, v) {
  /* istanbul ignore next */
  cov_1yq1w51grr().f[4]++;
  cov_1yq1w51grr().s[13]++;
  o["default"] = v;
})));
var __importStar =
/* istanbul ignore next */
(cov_1yq1w51grr().s[14]++,
/* istanbul ignore next */
(cov_1yq1w51grr().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_1yq1w51grr().b[10][1]++, this.__importStar) ||
/* istanbul ignore next */
(cov_1yq1w51grr().b[10][2]++, function () {
  /* istanbul ignore next */
  cov_1yq1w51grr().f[5]++;
  cov_1yq1w51grr().s[15]++;
  var ownKeys = function (o) {
    /* istanbul ignore next */
    cov_1yq1w51grr().f[6]++;
    cov_1yq1w51grr().s[16]++;
    ownKeys =
    /* istanbul ignore next */
    (cov_1yq1w51grr().b[11][0]++, Object.getOwnPropertyNames) ||
    /* istanbul ignore next */
    (cov_1yq1w51grr().b[11][1]++, function (o) {
      /* istanbul ignore next */
      cov_1yq1w51grr().f[7]++;
      var ar =
      /* istanbul ignore next */
      (cov_1yq1w51grr().s[17]++, []);
      /* istanbul ignore next */
      cov_1yq1w51grr().s[18]++;
      for (var k in o) {
        /* istanbul ignore next */
        cov_1yq1w51grr().s[19]++;
        if (Object.prototype.hasOwnProperty.call(o, k)) {
          /* istanbul ignore next */
          cov_1yq1w51grr().b[12][0]++;
          cov_1yq1w51grr().s[20]++;
          ar[ar.length] = k;
        } else
        /* istanbul ignore next */
        {
          cov_1yq1w51grr().b[12][1]++;
        }
      }
      /* istanbul ignore next */
      cov_1yq1w51grr().s[21]++;
      return ar;
    });
    /* istanbul ignore next */
    cov_1yq1w51grr().s[22]++;
    return ownKeys(o);
  };
  /* istanbul ignore next */
  cov_1yq1w51grr().s[23]++;
  return function (mod) {
    /* istanbul ignore next */
    cov_1yq1w51grr().f[8]++;
    cov_1yq1w51grr().s[24]++;
    if (
    /* istanbul ignore next */
    (cov_1yq1w51grr().b[14][0]++, mod) &&
    /* istanbul ignore next */
    (cov_1yq1w51grr().b[14][1]++, mod.__esModule)) {
      /* istanbul ignore next */
      cov_1yq1w51grr().b[13][0]++;
      cov_1yq1w51grr().s[25]++;
      return mod;
    } else
    /* istanbul ignore next */
    {
      cov_1yq1w51grr().b[13][1]++;
    }
    var result =
    /* istanbul ignore next */
    (cov_1yq1w51grr().s[26]++, {});
    /* istanbul ignore next */
    cov_1yq1w51grr().s[27]++;
    if (mod != null) {
      /* istanbul ignore next */
      cov_1yq1w51grr().b[15][0]++;
      cov_1yq1w51grr().s[28]++;
      for (var k =
        /* istanbul ignore next */
        (cov_1yq1w51grr().s[29]++, ownKeys(mod)), i =
        /* istanbul ignore next */
        (cov_1yq1w51grr().s[30]++, 0); i < k.length; i++) {
        /* istanbul ignore next */
        cov_1yq1w51grr().s[31]++;
        if (k[i] !== "default") {
          /* istanbul ignore next */
          cov_1yq1w51grr().b[16][0]++;
          cov_1yq1w51grr().s[32]++;
          __createBinding(result, mod, k[i]);
        } else
        /* istanbul ignore next */
        {
          cov_1yq1w51grr().b[16][1]++;
        }
      }
    } else
    /* istanbul ignore next */
    {
      cov_1yq1w51grr().b[15][1]++;
    }
    cov_1yq1w51grr().s[33]++;
    __setModuleDefault(result, mod);
    /* istanbul ignore next */
    cov_1yq1w51grr().s[34]++;
    return result;
  };
}()));
/* istanbul ignore next */
cov_1yq1w51grr().s[35]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1yq1w51grr().s[36]++;
exports.azureFormRecognizer = void 0;
const ai_form_recognizer_1 =
/* istanbul ignore next */
(cov_1yq1w51grr().s[37]++, require("@azure/ai-form-recognizer"));
const azure_config_1 =
/* istanbul ignore next */
(cov_1yq1w51grr().s[38]++, require("@/azure/lib/azure-config"));
const errors_1 =
/* istanbul ignore next */
(cov_1yq1w51grr().s[39]++, require("@/lib/errors"));
class AzureFormRecognizerService {
  constructor() {
    /* istanbul ignore next */
    cov_1yq1w51grr().f[9]++;
    cov_1yq1w51grr().s[40]++;
    this.client = null;
    /* istanbul ignore next */
    cov_1yq1w51grr().s[41]++;
    this.modelId = 'prebuilt-document'; // Use prebuilt document model
  }
  /**
   * Initialize the Azure Form Recognizer service
   */
  async initialize() {
    /* istanbul ignore next */
    cov_1yq1w51grr().f[10]++;
    cov_1yq1w51grr().s[42]++;
    try {
      const secrets =
      /* istanbul ignore next */
      (cov_1yq1w51grr().s[43]++, await (0, azure_config_1.fetchAzureSecrets)());
      const endpoint =
      /* istanbul ignore next */
      (cov_1yq1w51grr().s[44]++,
      /* istanbul ignore next */
      (cov_1yq1w51grr().b[17][0]++, process.env.AZURE_FORM_RECOGNIZER_ENDPOINT) ||
      /* istanbul ignore next */
      (cov_1yq1w51grr().b[17][1]++, secrets.azureFormRecognizerEndpoint));
      const apiKey =
      /* istanbul ignore next */
      (cov_1yq1w51grr().s[45]++,
      /* istanbul ignore next */
      (cov_1yq1w51grr().b[18][0]++, process.env.AZURE_FORM_RECOGNIZER_KEY) ||
      /* istanbul ignore next */
      (cov_1yq1w51grr().b[18][1]++, secrets.azureFormRecognizerKey));
      /* istanbul ignore next */
      cov_1yq1w51grr().s[46]++;
      if (
      /* istanbul ignore next */
      (cov_1yq1w51grr().b[20][0]++, !endpoint) ||
      /* istanbul ignore next */
      (cov_1yq1w51grr().b[20][1]++, !apiKey)) {
        /* istanbul ignore next */
        cov_1yq1w51grr().b[19][0]++;
        cov_1yq1w51grr().s[47]++;
        console.warn('⚠️ Azure Form Recognizer credentials not found, will use OpenAI fallback');
        /* istanbul ignore next */
        cov_1yq1w51grr().s[48]++;
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_1yq1w51grr().b[19][1]++;
      }
      cov_1yq1w51grr().s[49]++;
      this.client = new ai_form_recognizer_1.DocumentAnalysisClient(endpoint, new ai_form_recognizer_1.AzureKeyCredential(apiKey));
      /* istanbul ignore next */
      cov_1yq1w51grr().s[50]++;
      console.log('✅ Azure Form Recognizer service initialized');
      /* istanbul ignore next */
      cov_1yq1w51grr().s[51]++;
      return true;
    } catch (error) {
      /* istanbul ignore next */
      cov_1yq1w51grr().s[52]++;
      console.error('❌ Failed to initialize Azure Form Recognizer:', error);
      /* istanbul ignore next */
      cov_1yq1w51grr().s[53]++;
      (0, errors_1.logServerError)(error, {
        service: 'azure-form-recognizer',
        action: 'initialize'
      });
      /* istanbul ignore next */
      cov_1yq1w51grr().s[54]++;
      return false;
    }
  }
  /**
   * Check if service is ready
   */
  isReady() {
    /* istanbul ignore next */
    cov_1yq1w51grr().f[11]++;
    cov_1yq1w51grr().s[55]++;
    return this.client !== null;
  }
  /**
   * Extract resume data from buffer using Azure Form Recognizer
   */
  async extractResumeData(fileBuffer, mimeType) {
    /* istanbul ignore next */
    cov_1yq1w51grr().f[12]++;
    cov_1yq1w51grr().s[56]++;
    if (!this.isReady()) {
      /* istanbul ignore next */
      cov_1yq1w51grr().b[21][0]++;
      cov_1yq1w51grr().s[57]++;
      throw new Error('Azure Form Recognizer service not initialized');
    } else
    /* istanbul ignore next */
    {
      cov_1yq1w51grr().b[21][1]++;
    }
    cov_1yq1w51grr().s[58]++;
    try {
      /* istanbul ignore next */
      cov_1yq1w51grr().s[59]++;
      console.log('🔍 Extracting resume data with Azure Form Recognizer...');
      // Analyze the document
      const poller =
      /* istanbul ignore next */
      (cov_1yq1w51grr().s[60]++, await this.client.beginAnalyzeDocument(this.modelId, fileBuffer));
      const result =
      /* istanbul ignore next */
      (cov_1yq1w51grr().s[61]++, await poller.pollUntilDone());
      // Extract text content from the document
      const fullText =
      /* istanbul ignore next */
      (cov_1yq1w51grr().s[62]++,
      /* istanbul ignore next */
      (cov_1yq1w51grr().b[22][0]++, result.content) ||
      /* istanbul ignore next */
      (cov_1yq1w51grr().b[22][1]++, ''));
      // Store raw extraction for GDPR export
      const rawExtraction =
      /* istanbul ignore next */
      (cov_1yq1w51grr().s[63]++, {
        content: result.content,
        pages: result.pages,
        tables: result.tables,
        keyValuePairs: result.keyValuePairs,
        styles: result.styles
      });
      // Parse the extracted text to structure data
      const extractedData =
      /* istanbul ignore next */
      (cov_1yq1w51grr().s[64]++, await this.parseResumeContent(fullText));
      // Include raw extraction
      /* istanbul ignore next */
      cov_1yq1w51grr().s[65]++;
      extractedData.rawExtraction = rawExtraction;
      /* istanbul ignore next */
      cov_1yq1w51grr().s[66]++;
      console.log('✅ Resume data extracted successfully with Azure Form Recognizer');
      /* istanbul ignore next */
      cov_1yq1w51grr().s[67]++;
      return extractedData;
    } catch (error) {
      /* istanbul ignore next */
      cov_1yq1w51grr().s[68]++;
      console.error('Failed to extract resume data with Azure Form Recognizer:', error);
      /* istanbul ignore next */
      cov_1yq1w51grr().s[69]++;
      (0, errors_1.logServerError)(error, {
        service: 'azure-form-recognizer',
        action: 'extract'
      }, {
        mimeType
      });
      /* istanbul ignore next */
      cov_1yq1w51grr().s[70]++;
      throw error;
    }
  }
  /**
   * Parse resume content using AI to extract structured data
   * This method uses OpenAI as a processing layer on top of Form Recognizer
   */
  async parseResumeContent(text) {
    /* istanbul ignore next */
    cov_1yq1w51grr().f[13]++;
    // We'll use tailorResume function as it's the main AI processing function available
    // Use OpenAI function calling to structure the extracted text
    const prompt =
    /* istanbul ignore next */
    (cov_1yq1w51grr().s[71]++, `
    Extract the following information from this resume text and return as JSON:
    
    {
      "personalInfo": {
        "name": "Full name",
        "email": "Email address",
        "phone": "Phone number",
        "address": "Address",
        "linkedin": "LinkedIn URL",
        "github": "GitHub URL",
        "website": "Personal website URL"
      },
      "summary": "Professional summary or objective",
      "skills": ["skill1", "skill2", ...],
      "experience": [
        {
          "company": "Company name",
          "position": "Job title",
          "startDate": "Start date",
          "endDate": "End date or 'Present'",
          "isCurrent": true/false,
          "description": "Job description",
          "achievements": ["achievement1", ...],
          "technologies": ["tech1", "tech2", ...],
          "location": "Location"
        }
      ],
      "education": [
        {
          "institution": "School name",
          "degree": "Degree type",
          "field": "Field of study",
          "startDate": "Start date",
          "endDate": "End date",
          "gpa": 3.5,
          "description": "Additional details",
          "location": "Location"
        }
      ],
      "projects": [
        {
          "name": "Project name",
          "description": "Project description",
          "technologies": ["tech1", "tech2", ...],
          "url": "Project URL",
          "github": "GitHub URL",
          "startDate": "Start date",
          "endDate": "End date"
        }
      ],
      "certifications": [
        {
          "name": "Certification name",
          "issuer": "Issuing organization",
          "date": "Issue date",
          "expiryDate": "Expiry date",
          "credentialId": "Credential ID",
          "url": "Verification URL"
        }
      ],
      "languages": [
        {
          "name": "Language name",
          "proficiency": "Proficiency level"
        }
      ]
    }
    
    Resume text:
    ${text}
    `);
    /* istanbul ignore next */
    cov_1yq1w51grr().s[72]++;
    try {
      // Use the AI service to process the text
      const {
        tailorResume
      } =
      /* istanbul ignore next */
      (cov_1yq1w51grr().s[73]++, await Promise.resolve().then(() => {
        /* istanbul ignore next */
        cov_1yq1w51grr().f[14]++;
        cov_1yq1w51grr().s[74]++;
        return __importStar(require('@/lib/ai'));
      }));
      // Create a structured extraction prompt
      const extractionResult =
      /* istanbul ignore next */
      (cov_1yq1w51grr().s[75]++, await tailorResume(text, prompt));
      /* istanbul ignore next */
      cov_1yq1w51grr().s[76]++;
      if (
      /* istanbul ignore next */
      (cov_1yq1w51grr().b[24][0]++, extractionResult.success) &&
      /* istanbul ignore next */
      (cov_1yq1w51grr().b[24][1]++, extractionResult.data)) {
        /* istanbul ignore next */
        cov_1yq1w51grr().b[23][0]++;
        cov_1yq1w51grr().s[77]++;
        try {
          // Parse the JSON response
          const parsedData =
          /* istanbul ignore next */
          (cov_1yq1w51grr().s[78]++, typeof extractionResult.data === 'string' ?
          /* istanbul ignore next */
          (cov_1yq1w51grr().b[25][0]++, JSON.parse(extractionResult.data)) :
          /* istanbul ignore next */
          (cov_1yq1w51grr().b[25][1]++, extractionResult.data));
          /* istanbul ignore next */
          cov_1yq1w51grr().s[79]++;
          return {
            personalInfo:
            /* istanbul ignore next */
            (cov_1yq1w51grr().b[26][0]++, parsedData.personalInfo) ||
            /* istanbul ignore next */
            (cov_1yq1w51grr().b[26][1]++, {}),
            summary: parsedData.summary,
            skills:
            /* istanbul ignore next */
            (cov_1yq1w51grr().b[27][0]++, parsedData.skills) ||
            /* istanbul ignore next */
            (cov_1yq1w51grr().b[27][1]++, []),
            experience:
            /* istanbul ignore next */
            (cov_1yq1w51grr().b[28][0]++, parsedData.experience) ||
            /* istanbul ignore next */
            (cov_1yq1w51grr().b[28][1]++, []),
            education:
            /* istanbul ignore next */
            (cov_1yq1w51grr().b[29][0]++, parsedData.education) ||
            /* istanbul ignore next */
            (cov_1yq1w51grr().b[29][1]++, []),
            projects:
            /* istanbul ignore next */
            (cov_1yq1w51grr().b[30][0]++, parsedData.projects) ||
            /* istanbul ignore next */
            (cov_1yq1w51grr().b[30][1]++, []),
            certifications:
            /* istanbul ignore next */
            (cov_1yq1w51grr().b[31][0]++, parsedData.certifications) ||
            /* istanbul ignore next */
            (cov_1yq1w51grr().b[31][1]++, []),
            languages:
            /* istanbul ignore next */
            (cov_1yq1w51grr().b[32][0]++, parsedData.languages) ||
            /* istanbul ignore next */
            (cov_1yq1w51grr().b[32][1]++, [])
          };
        } catch (parseError) {
          /* istanbul ignore next */
          cov_1yq1w51grr().s[80]++;
          console.warn('Failed to parse AI extraction result, using fallback parsing');
          /* istanbul ignore next */
          cov_1yq1w51grr().s[81]++;
          return this.fallbackTextParsing(text);
        }
      } else
      /* istanbul ignore next */
      {
        cov_1yq1w51grr().b[23][1]++;
      }
      // Fallback to simple text parsing if AI fails
      cov_1yq1w51grr().s[82]++;
      return this.fallbackTextParsing(text);
    } catch (error) {
      /* istanbul ignore next */
      cov_1yq1w51grr().s[83]++;
      console.warn('AI parsing failed, using fallback text parsing:', error);
      /* istanbul ignore next */
      cov_1yq1w51grr().s[84]++;
      return this.fallbackTextParsing(text);
    }
  }
  /**
   * Fallback text parsing method
   */
  fallbackTextParsing(text) {
    /* istanbul ignore next */
    cov_1yq1w51grr().f[15]++;
    const lines =
    /* istanbul ignore next */
    (cov_1yq1w51grr().s[85]++, text.split('\n').map(line => {
      /* istanbul ignore next */
      cov_1yq1w51grr().f[16]++;
      cov_1yq1w51grr().s[86]++;
      return line.trim();
    }).filter(line => {
      /* istanbul ignore next */
      cov_1yq1w51grr().f[17]++;
      cov_1yq1w51grr().s[87]++;
      return line;
    }));
    // Simple regex patterns for basic extraction
    const emailRegex =
    /* istanbul ignore next */
    (cov_1yq1w51grr().s[88]++, /\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Z|a-z]{2,}\b/g);
    const phoneRegex =
    /* istanbul ignore next */
    (cov_1yq1w51grr().s[89]++, /(\+?1?[-.\s]?)?\(?[0-9]{3}\)?[-.\s]?[0-9]{3}[-.\s]?[0-9]{4}/g);
    const linkedinRegex =
    /* istanbul ignore next */
    (cov_1yq1w51grr().s[90]++, /linkedin\.com\/in\/[\w-]+/gi);
    const githubRegex =
    /* istanbul ignore next */
    (cov_1yq1w51grr().s[91]++, /github\.com\/[\w-]+/gi);
    const emails =
    /* istanbul ignore next */
    (cov_1yq1w51grr().s[92]++,
    /* istanbul ignore next */
    (cov_1yq1w51grr().b[33][0]++, text.match(emailRegex)) ||
    /* istanbul ignore next */
    (cov_1yq1w51grr().b[33][1]++, []));
    const phones =
    /* istanbul ignore next */
    (cov_1yq1w51grr().s[93]++,
    /* istanbul ignore next */
    (cov_1yq1w51grr().b[34][0]++, text.match(phoneRegex)) ||
    /* istanbul ignore next */
    (cov_1yq1w51grr().b[34][1]++, []));
    const linkedinUrls =
    /* istanbul ignore next */
    (cov_1yq1w51grr().s[94]++,
    /* istanbul ignore next */
    (cov_1yq1w51grr().b[35][0]++, text.match(linkedinRegex)) ||
    /* istanbul ignore next */
    (cov_1yq1w51grr().b[35][1]++, []));
    const githubUrls =
    /* istanbul ignore next */
    (cov_1yq1w51grr().s[95]++,
    /* istanbul ignore next */
    (cov_1yq1w51grr().b[36][0]++, text.match(githubRegex)) ||
    /* istanbul ignore next */
    (cov_1yq1w51grr().b[36][1]++, []));
    // Extract skills (simple keyword matching)
    const skillKeywords =
    /* istanbul ignore next */
    (cov_1yq1w51grr().s[96]++, ['javascript', 'typescript', 'python', 'java', 'react', 'node', 'express', 'mongodb', 'sql', 'postgresql', 'mysql', 'docker', 'kubernetes', 'aws', 'azure', 'gcp', 'git', 'html', 'css', 'angular', 'vue', 'spring', 'django', 'flask', 'ruby', 'php', 'go', 'rust', 'c++', 'c#', 'swift', 'kotlin', 'flutter', 'dart', 'tensorflow', 'pytorch', 'machine learning', 'data science', 'artificial intelligence', 'blockchain', 'devops']);
    const detectedSkills =
    /* istanbul ignore next */
    (cov_1yq1w51grr().s[97]++, skillKeywords.filter(skill => {
      /* istanbul ignore next */
      cov_1yq1w51grr().f[18]++;
      cov_1yq1w51grr().s[98]++;
      return text.toLowerCase().includes(skill.toLowerCase());
    }));
    /* istanbul ignore next */
    cov_1yq1w51grr().s[99]++;
    return {
      personalInfo: {
        email: emails[0],
        phone: phones[0],
        linkedin: linkedinUrls[0] ?
        /* istanbul ignore next */
        (cov_1yq1w51grr().b[37][0]++, `https://${linkedinUrls[0]}`) :
        /* istanbul ignore next */
        (cov_1yq1w51grr().b[37][1]++, undefined),
        github: githubUrls[0] ?
        /* istanbul ignore next */
        (cov_1yq1w51grr().b[38][0]++, `https://${githubUrls[0]}`) :
        /* istanbul ignore next */
        (cov_1yq1w51grr().b[38][1]++, undefined)
      },
      skills: detectedSkills,
      experience: [],
      education: [],
      projects: [],
      certifications: [],
      languages: []
    };
  }
}
// Export singleton instance
/* istanbul ignore next */
cov_1yq1w51grr().s[100]++;
exports.azureFormRecognizer = new AzureFormRecognizerService();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,