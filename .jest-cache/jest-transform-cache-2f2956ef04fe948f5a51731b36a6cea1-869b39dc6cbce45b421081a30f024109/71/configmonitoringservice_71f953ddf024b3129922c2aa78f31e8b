60e24b92b6028a36bb7bb69c37b2bbb0
"use strict";

/**
 * Configuration Monitoring Service
 *
 * Provides comprehensive monitoring, metrics, and alerting for the
 * unified configuration system with Application Insights integration.
 */
/* istanbul ignore next */
function cov_1va1ruyfoi() {
  var path = "/Users/dikshantvashistha/PrepBettr/lib/services/config-monitoring-service.ts";
  var hash = "444c4cf5a0e118de7745eb3cfcc22d7d6e1e7d77";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dikshantvashistha/PrepBettr/lib/services/config-monitoring-service.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 62
        }
      },
      "1": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 41
        }
      },
      "2": {
        start: {
          line: 10,
          column: 17
        },
        end: {
          line: 10,
          column: 40
        }
      },
      "3": {
        start: {
          line: 11,
          column: 31
        },
        end: {
          line: 11,
          column: 64
        }
      },
      "4": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 36
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 24,
          column: 10
        }
      },
      "6": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 32
        }
      },
      "7": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 39
        }
      },
      "8": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 32,
          column: 10
        }
      },
      "9": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 35
        }
      },
      "10": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 67,
          column: 9
        }
      },
      "11": {
        start: {
          line: 38,
          column: 35
        },
        end: {
          line: 38,
          column: 84
        }
      },
      "12": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 62,
          column: 13
        }
      },
      "13": {
        start: {
          line: 42,
          column: 36
        },
        end: {
          line: 42,
          column: 66
        }
      },
      "14": {
        start: {
          line: 43,
          column: 16
        },
        end: {
          line: 58,
          column: 17
        }
      },
      "15": {
        start: {
          line: 44,
          column: 20
        },
        end: {
          line: 44,
          column: 69
        }
      },
      "16": {
        start: {
          line: 45,
          column: 20
        },
        end: {
          line: 45,
          column: 89
        }
      },
      "17": {
        start: {
          line: 48,
          column: 20
        },
        end: {
          line: 55,
          column: 33
        }
      },
      "18": {
        start: {
          line: 56,
          column: 20
        },
        end: {
          line: 56,
          column: 69
        }
      },
      "19": {
        start: {
          line: 57,
          column: 20
        },
        end: {
          line: 57,
          column: 88
        }
      },
      "20": {
        start: {
          line: 61,
          column: 16
        },
        end: {
          line: 61,
          column: 106
        }
      },
      "21": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 65,
          column: 81
        }
      },
      "22": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 66,
          column: 104
        }
      },
      "23": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 74,
          column: 36
        }
      },
      "24": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 76,
          column: 41
        }
      },
      "25": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 79,
          column: 9
        }
      },
      "26": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 78,
          column: 39
        }
      },
      "27": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 80,
          column: 108
        }
      },
      "28": {
        start: {
          line: 80,
          column: 70
        },
        end: {
          line: 80,
          column: 75
        }
      },
      "29": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 84,
          column: 9
        }
      },
      "30": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 83,
          column: 38
        }
      },
      "31": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 113,
          column: 9
        }
      },
      "32": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 103,
          column: 15
        }
      },
      "33": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 112,
          column: 15
        }
      },
      "34": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 115,
          column: 40
        }
      },
      "35": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 116,
          column: 35
        }
      },
      "36": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 127,
          column: 9
        }
      },
      "37": {
        start: {
          line: 123,
          column: 12
        },
        end: {
          line: 123,
          column: 37
        }
      },
      "38": {
        start: {
          line: 126,
          column: 12
        },
        end: {
          line: 126,
          column: 39
        }
      },
      "39": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 141,
          column: 9
        }
      },
      "40": {
        start: {
          line: 129,
          column: 12
        },
        end: {
          line: 140,
          column: 15
        }
      },
      "41": {
        start: {
          line: 143,
          column: 8
        },
        end: {
          line: 143,
          column: 42
        }
      },
      "42": {
        start: {
          line: 149,
          column: 8
        },
        end: {
          line: 149,
          column: 56
        }
      },
      "43": {
        start: {
          line: 150,
          column: 8
        },
        end: {
          line: 163,
          column: 9
        }
      },
      "44": {
        start: {
          line: 151,
          column: 12
        },
        end: {
          line: 162,
          column: 15
        }
      },
      "45": {
        start: {
          line: 165,
          column: 8
        },
        end: {
          line: 170,
          column: 9
        }
      },
      "46": {
        start: {
          line: 166,
          column: 12
        },
        end: {
          line: 169,
          column: 15
        }
      },
      "47": {
        start: {
          line: 176,
          column: 8
        },
        end: {
          line: 178,
          column: 9
        }
      },
      "48": {
        start: {
          line: 177,
          column: 12
        },
        end: {
          line: 177,
          column: 40
        }
      },
      "49": {
        start: {
          line: 179,
          column: 8
        },
        end: {
          line: 199,
          column: 9
        }
      },
      "50": {
        start: {
          line: 180,
          column: 12
        },
        end: {
          line: 191,
          column: 15
        }
      },
      "51": {
        start: {
          line: 192,
          column: 12
        },
        end: {
          line: 198,
          column: 15
        }
      },
      "52": {
        start: {
          line: 201,
          column: 8
        },
        end: {
          line: 207,
          column: 9
        }
      },
      "53": {
        start: {
          line: 202,
          column: 12
        },
        end: {
          line: 206,
          column: 15
        }
      },
      "54": {
        start: {
          line: 213,
          column: 8
        },
        end: {
          line: 228,
          column: 9
        }
      },
      "55": {
        start: {
          line: 214,
          column: 12
        },
        end: {
          line: 227,
          column: 15
        }
      },
      "56": {
        start: {
          line: 235,
          column: 22
        },
        end: {
          line: 244,
          column: 9
        }
      },
      "57": {
        start: {
          line: 246,
          column: 8
        },
        end: {
          line: 251,
          column: 9
        }
      },
      "58": {
        start: {
          line: 247,
          column: 12
        },
        end: {
          line: 247,
          column: 163
        }
      },
      "59": {
        start: {
          line: 250,
          column: 12
        },
        end: {
          line: 250,
          column: 59
        }
      },
      "60": {
        start: {
          line: 253,
          column: 8
        },
        end: {
          line: 265,
          column: 9
        }
      },
      "61": {
        start: {
          line: 254,
          column: 12
        },
        end: {
          line: 264,
          column: 15
        }
      },
      "62": {
        start: {
          line: 267,
          column: 8
        },
        end: {
          line: 267,
          column: 48
        }
      },
      "63": {
        start: {
          line: 268,
          column: 8
        },
        end: {
          line: 268,
          column: 80
        }
      },
      "64": {
        start: {
          line: 274,
          column: 8
        },
        end: {
          line: 279,
          column: 9
        }
      },
      "65": {
        start: {
          line: 275,
          column: 12
        },
        end: {
          line: 278,
          column: 15
        }
      },
      "66": {
        start: {
          line: 285,
          column: 26
        },
        end: {
          line: 285,
          column: 113
        }
      },
      "67": {
        start: {
          line: 286,
          column: 8
        },
        end: {
          line: 292,
          column: 9
        }
      },
      "68": {
        start: {
          line: 287,
          column: 12
        },
        end: {
          line: 291,
          column: 15
        }
      },
      "69": {
        start: {
          line: 298,
          column: 25
        },
        end: {
          line: 298,
          column: 48
        }
      },
      "70": {
        start: {
          line: 299,
          column: 30
        },
        end: {
          line: 299,
          column: 79
        }
      },
      "71": {
        start: {
          line: 300,
          column: 8
        },
        end: {
          line: 306,
          column: 9
        }
      },
      "72": {
        start: {
          line: 301,
          column: 12
        },
        end: {
          line: 305,
          column: 15
        }
      },
      "73": {
        start: {
          line: 313,
          column: 8
        },
        end: {
          line: 326,
          column: 9
        }
      },
      "74": {
        start: {
          line: 315,
          column: 33
        },
        end: {
          line: 315,
          column: 62
        }
      },
      "75": {
        start: {
          line: 316,
          column: 12
        },
        end: {
          line: 318,
          column: 13
        }
      },
      "76": {
        start: {
          line: 317,
          column: 16
        },
        end: {
          line: 317,
          column: 70
        }
      },
      "77": {
        start: {
          line: 325,
          column: 12
        },
        end: {
          line: 325,
          column: 71
        }
      },
      "78": {
        start: {
          line: 332,
          column: 24
        },
        end: {
          line: 346,
          column: 9
        }
      },
      "79": {
        start: {
          line: 347,
          column: 25
        },
        end: {
          line: 351,
          column: 10
        }
      },
      "80": {
        start: {
          line: 352,
          column: 8
        },
        end: {
          line: 354,
          column: 9
        }
      },
      "81": {
        start: {
          line: 353,
          column: 12
        },
        end: {
          line: 353,
          column: 81
        }
      },
      "82": {
        start: {
          line: 360,
          column: 8
        },
        end: {
          line: 366,
          column: 9
        }
      },
      "83": {
        start: {
          line: 361,
          column: 29
        },
        end: {
          line: 361,
          column: 45
        }
      },
      "84": {
        start: {
          line: 362,
          column: 25
        },
        end: {
          line: 362,
          column: 42
        }
      },
      "85": {
        start: {
          line: 363,
          column: 27
        },
        end: {
          line: 363,
          column: 44
        }
      },
      "86": {
        start: {
          line: 364,
          column: 24
        },
        end: {
          line: 364,
          column: 38
        }
      },
      "87": {
        start: {
          line: 365,
          column: 21
        },
        end: {
          line: 365,
          column: 35
        }
      },
      "88": {
        start: {
          line: 373,
          column: 23
        },
        end: {
          line: 373,
          column: 51
        }
      },
      "89": {
        start: {
          line: 374,
          column: 23
        },
        end: {
          line: 374,
          column: 57
        }
      },
      "90": {
        start: {
          line: 375,
          column: 8
        },
        end: {
          line: 387,
          column: 10
        }
      },
      "91": {
        start: {
          line: 393,
          column: 8
        },
        end: {
          line: 401,
          column: 9
        }
      },
      "92": {
        start: {
          line: 394,
          column: 27
        },
        end: {
          line: 395,
          column: 13
        }
      },
      "93": {
        start: {
          line: 396,
          column: 12
        },
        end: {
          line: 396,
          column: 39
        }
      },
      "94": {
        start: {
          line: 399,
          column: 12
        },
        end: {
          line: 399,
          column: 65
        }
      },
      "95": {
        start: {
          line: 400,
          column: 12
        },
        end: {
          line: 400,
          column: 22
        }
      },
      "96": {
        start: {
          line: 407,
          column: 31
        },
        end: {
          line: 407,
          column: 76
        }
      },
      "97": {
        start: {
          line: 407,
          column: 50
        },
        end: {
          line: 407,
          column: 75
        }
      },
      "98": {
        start: {
          line: 408,
          column: 27
        },
        end: {
          line: 408,
          column: 68
        }
      },
      "99": {
        start: {
          line: 408,
          column: 46
        },
        end: {
          line: 408,
          column: 67
        }
      },
      "100": {
        start: {
          line: 409,
          column: 8
        },
        end: {
          line: 410,
          column: 31
        }
      },
      "101": {
        start: {
          line: 410,
          column: 12
        },
        end: {
          line: 410,
          column: 31
        }
      },
      "102": {
        start: {
          line: 411,
          column: 8
        },
        end: {
          line: 412,
          column: 31
        }
      },
      "103": {
        start: {
          line: 412,
          column: 12
        },
        end: {
          line: 412,
          column: 31
        }
      },
      "104": {
        start: {
          line: 413,
          column: 8
        },
        end: {
          line: 414,
          column: 30
        }
      },
      "105": {
        start: {
          line: 414,
          column: 12
        },
        end: {
          line: 414,
          column: 30
        }
      },
      "106": {
        start: {
          line: 416,
          column: 26
        },
        end: {
          line: 416,
          column: 113
        }
      },
      "107": {
        start: {
          line: 417,
          column: 30
        },
        end: {
          line: 417,
          column: 53
        }
      },
      "108": {
        start: {
          line: 418,
          column: 8
        },
        end: {
          line: 420,
          column: 9
        }
      },
      "109": {
        start: {
          line: 419,
          column: 12
        },
        end: {
          line: 419,
          column: 30
        }
      },
      "110": {
        start: {
          line: 421,
          column: 8
        },
        end: {
          line: 421,
          column: 25
        }
      },
      "111": {
        start: {
          line: 428,
          column: 22
        },
        end: {
          line: 428,
          column: 71
        }
      },
      "112": {
        start: {
          line: 429,
          column: 8
        },
        end: {
          line: 429,
          column: 62
        }
      },
      "113": {
        start: {
          line: 435,
          column: 8
        },
        end: {
          line: 435,
          column: 47
        }
      },
      "114": {
        start: {
          line: 441,
          column: 8
        },
        end: {
          line: 449,
          column: 10
        }
      },
      "115": {
        start: {
          line: 450,
          column: 8
        },
        end: {
          line: 450,
          column: 32
        }
      },
      "116": {
        start: {
          line: 456,
          column: 8
        },
        end: {
          line: 465,
          column: 11
        }
      },
      "117": {
        start: {
          line: 457,
          column: 12
        },
        end: {
          line: 464,
          column: 13
        }
      },
      "118": {
        start: {
          line: 458,
          column: 16
        },
        end: {
          line: 458,
          column: 45
        }
      },
      "119": {
        start: {
          line: 460,
          column: 16
        },
        end: {
          line: 460,
          column: 26
        }
      },
      "120": {
        start: {
          line: 463,
          column: 16
        },
        end: {
          line: 463,
          column: 26
        }
      },
      "121": {
        start: {
          line: 469,
          column: 0
        },
        end: {
          line: 469,
          column: 64
        }
      },
      "122": {
        start: {
          line: 470,
          column: 0
        },
        end: {
          line: 470,
          column: 50
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 14,
            column: 5
          }
        },
        loc: {
          start: {
            line: 14,
            column: 18
          },
          end: {
            line: 34,
            column: 5
          }
        },
        line: 14
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        },
        loc: {
          start: {
            line: 36,
            column: 26
          },
          end: {
            line: 68,
            column: 5
          }
        },
        line: 36
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 73,
            column: 4
          },
          end: {
            line: 73,
            column: 5
          }
        },
        loc: {
          start: {
            line: 73,
            column: 57
          },
          end: {
            line: 117,
            column: 5
          }
        },
        line: 73
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 80,
            column: 60
          },
          end: {
            line: 80,
            column: 61
          }
        },
        loc: {
          start: {
            line: 80,
            column: 70
          },
          end: {
            line: 80,
            column: 75
          }
        },
        line: 80
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 121,
            column: 4
          },
          end: {
            line: 121,
            column: 5
          }
        },
        loc: {
          start: {
            line: 121,
            column: 28
          },
          end: {
            line: 144,
            column: 5
          }
        },
        line: 121
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 148,
            column: 4
          },
          end: {
            line: 148,
            column: 5
          }
        },
        loc: {
          start: {
            line: 148,
            column: 51
          },
          end: {
            line: 171,
            column: 5
          }
        },
        line: 148
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 175,
            column: 4
          },
          end: {
            line: 175,
            column: 5
          }
        },
        loc: {
          start: {
            line: 175,
            column: 59
          },
          end: {
            line: 208,
            column: 5
          }
        },
        line: 175
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 212,
            column: 4
          },
          end: {
            line: 212,
            column: 5
          }
        },
        loc: {
          start: {
            line: 212,
            column: 71
          },
          end: {
            line: 229,
            column: 5
          }
        },
        line: 212
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 234,
            column: 4
          },
          end: {
            line: 234,
            column: 5
          }
        },
        loc: {
          start: {
            line: 234,
            column: 57
          },
          end: {
            line: 269,
            column: 5
          }
        },
        line: 234
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 273,
            column: 4
          },
          end: {
            line: 273,
            column: 5
          }
        },
        loc: {
          start: {
            line: 273,
            column: 31
          },
          end: {
            line: 280,
            column: 5
          }
        },
        line: 273
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 284,
            column: 4
          },
          end: {
            line: 284,
            column: 5
          }
        },
        loc: {
          start: {
            line: 284,
            column: 26
          },
          end: {
            line: 293,
            column: 5
          }
        },
        line: 284
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 297,
            column: 4
          },
          end: {
            line: 297,
            column: 5
          }
        },
        loc: {
          start: {
            line: 297,
            column: 33
          },
          end: {
            line: 307,
            column: 5
          }
        },
        line: 297
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 312,
            column: 4
          },
          end: {
            line: 312,
            column: 5
          }
        },
        loc: {
          start: {
            line: 312,
            column: 39
          },
          end: {
            line: 327,
            column: 5
          }
        },
        line: 312
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 331,
            column: 4
          },
          end: {
            line: 331,
            column: 5
          }
        },
        loc: {
          start: {
            line: 331,
            column: 51
          },
          end: {
            line: 355,
            column: 5
          }
        },
        line: 331
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 359,
            column: 4
          },
          end: {
            line: 359,
            column: 5
          }
        },
        loc: {
          start: {
            line: 359,
            column: 28
          },
          end: {
            line: 367,
            column: 5
          }
        },
        line: 359
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 372,
            column: 4
          },
          end: {
            line: 372,
            column: 5
          }
        },
        loc: {
          start: {
            line: 372,
            column: 24
          },
          end: {
            line: 388,
            column: 5
          }
        },
        line: 372
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 392,
            column: 4
          },
          end: {
            line: 392,
            column: 5
          }
        },
        loc: {
          start: {
            line: 392,
            column: 28
          },
          end: {
            line: 402,
            column: 5
          }
        },
        line: 392
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 406,
            column: 4
          },
          end: {
            line: 406,
            column: 5
          }
        },
        loc: {
          start: {
            line: 406,
            column: 34
          },
          end: {
            line: 422,
            column: 5
          }
        },
        line: 406
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 407,
            column: 45
          },
          end: {
            line: 407,
            column: 46
          }
        },
        loc: {
          start: {
            line: 407,
            column: 50
          },
          end: {
            line: 407,
            column: 75
          }
        },
        line: 407
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 408,
            column: 41
          },
          end: {
            line: 408,
            column: 42
          }
        },
        loc: {
          start: {
            line: 408,
            column: 46
          },
          end: {
            line: 408,
            column: 67
          }
        },
        line: 408
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 427,
            column: 4
          },
          end: {
            line: 427,
            column: 5
          }
        },
        loc: {
          start: {
            line: 427,
            column: 23
          },
          end: {
            line: 430,
            column: 5
          }
        },
        line: 427
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 434,
            column: 4
          },
          end: {
            line: 434,
            column: 5
          }
        },
        loc: {
          start: {
            line: 434,
            column: 17
          },
          end: {
            line: 436,
            column: 5
          }
        },
        line: 434
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 440,
            column: 4
          },
          end: {
            line: 440,
            column: 5
          }
        },
        loc: {
          start: {
            line: 440,
            column: 19
          },
          end: {
            line: 451,
            column: 5
          }
        },
        line: 440
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 455,
            column: 4
          },
          end: {
            line: 455,
            column: 5
          }
        },
        loc: {
          start: {
            line: 455,
            column: 12
          },
          end: {
            line: 466,
            column: 5
          }
        },
        line: 455
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 456,
            column: 27
          },
          end: {
            line: 456,
            column: 28
          }
        },
        loc: {
          start: {
            line: 456,
            column: 40
          },
          end: {
            line: 465,
            column: 9
          }
        },
        line: 456
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 39,
            column: 12
          },
          end: {
            line: 62,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 12
          },
          end: {
            line: 62,
            column: 13
          }
        }, {
          start: {
            line: 60,
            column: 17
          },
          end: {
            line: 62,
            column: 13
          }
        }],
        line: 39
      },
      "1": {
        loc: {
          start: {
            line: 43,
            column: 16
          },
          end: {
            line: 58,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 16
          },
          end: {
            line: 58,
            column: 17
          }
        }, {
          start: {
            line: 47,
            column: 21
          },
          end: {
            line: 58,
            column: 17
          }
        }],
        line: 43
      },
      "2": {
        loc: {
          start: {
            line: 77,
            column: 8
          },
          end: {
            line: 79,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 77,
            column: 8
          },
          end: {
            line: 79,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 77
      },
      "3": {
        loc: {
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 84,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 84,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 82
      },
      "4": {
        loc: {
          start: {
            line: 86,
            column: 8
          },
          end: {
            line: 113,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 86,
            column: 8
          },
          end: {
            line: 113,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 86
      },
      "5": {
        loc: {
          start: {
            line: 91,
            column: 28
          },
          end: {
            line: 91,
            column: 51
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 91,
            column: 38
          },
          end: {
            line: 91,
            column: 43
          }
        }, {
          start: {
            line: 91,
            column: 46
          },
          end: {
            line: 91,
            column: 51
          }
        }],
        line: 91
      },
      "6": {
        loc: {
          start: {
            line: 122,
            column: 8
          },
          end: {
            line: 127,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 122,
            column: 8
          },
          end: {
            line: 127,
            column: 9
          }
        }, {
          start: {
            line: 125,
            column: 13
          },
          end: {
            line: 127,
            column: 9
          }
        }],
        line: 122
      },
      "7": {
        loc: {
          start: {
            line: 128,
            column: 8
          },
          end: {
            line: 141,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 128,
            column: 8
          },
          end: {
            line: 141,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 128
      },
      "8": {
        loc: {
          start: {
            line: 150,
            column: 8
          },
          end: {
            line: 163,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 150,
            column: 8
          },
          end: {
            line: 163,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 150
      },
      "9": {
        loc: {
          start: {
            line: 165,
            column: 8
          },
          end: {
            line: 170,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 165,
            column: 8
          },
          end: {
            line: 170,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 165
      },
      "10": {
        loc: {
          start: {
            line: 176,
            column: 8
          },
          end: {
            line: 178,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 176,
            column: 8
          },
          end: {
            line: 178,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 176
      },
      "11": {
        loc: {
          start: {
            line: 179,
            column: 8
          },
          end: {
            line: 199,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 179,
            column: 8
          },
          end: {
            line: 199,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 179
      },
      "12": {
        loc: {
          start: {
            line: 189,
            column: 27
          },
          end: {
            line: 189,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 189,
            column: 27
          },
          end: {
            line: 189,
            column: 32
          }
        }, {
          start: {
            line: 189,
            column: 36
          },
          end: {
            line: 189,
            column: 38
          }
        }],
        line: 189
      },
      "13": {
        loc: {
          start: {
            line: 201,
            column: 8
          },
          end: {
            line: 207,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 201,
            column: 8
          },
          end: {
            line: 207,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 201
      },
      "14": {
        loc: {
          start: {
            line: 202,
            column: 80
          },
          end: {
            line: 202,
            column: 104
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 202,
            column: 80
          },
          end: {
            line: 202,
            column: 85
          }
        }, {
          start: {
            line: 202,
            column: 89
          },
          end: {
            line: 202,
            column: 104
          }
        }],
        line: 202
      },
      "15": {
        loc: {
          start: {
            line: 213,
            column: 8
          },
          end: {
            line: 228,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 213,
            column: 8
          },
          end: {
            line: 228,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 213
      },
      "16": {
        loc: {
          start: {
            line: 221,
            column: 34
          },
          end: {
            line: 221,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 221,
            column: 34
          },
          end: {
            line: 221,
            column: 51
          }
        }, {
          start: {
            line: 221,
            column: 55
          },
          end: {
            line: 221,
            column: 77
          }
        }],
        line: 221
      },
      "17": {
        loc: {
          start: {
            line: 243,
            column: 25
          },
          end: {
            line: 243,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 243,
            column: 25
          },
          end: {
            line: 243,
            column: 45
          }
        }, {
          start: {
            line: 243,
            column: 49
          },
          end: {
            line: 243,
            column: 62
          }
        }],
        line: 243
      },
      "18": {
        loc: {
          start: {
            line: 253,
            column: 8
          },
          end: {
            line: 265,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 253,
            column: 8
          },
          end: {
            line: 265,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 253
      },
      "19": {
        loc: {
          start: {
            line: 253,
            column: 12
          },
          end: {
            line: 253,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 253,
            column: 12
          },
          end: {
            line: 253,
            column: 32
          }
        }, {
          start: {
            line: 253,
            column: 37
          },
          end: {
            line: 253,
            column: 56
          }
        }, {
          start: {
            line: 253,
            column: 60
          },
          end: {
            line: 253,
            column: 83
          }
        }],
        line: 253
      },
      "20": {
        loc: {
          start: {
            line: 274,
            column: 8
          },
          end: {
            line: 279,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 274,
            column: 8
          },
          end: {
            line: 279,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 274
      },
      "21": {
        loc: {
          start: {
            line: 285,
            column: 26
          },
          end: {
            line: 285,
            column: 113
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 285,
            column: 58
          },
          end: {
            line: 285,
            column: 109
          }
        }, {
          start: {
            line: 285,
            column: 112
          },
          end: {
            line: 285,
            column: 113
          }
        }],
        line: 285
      },
      "22": {
        loc: {
          start: {
            line: 286,
            column: 8
          },
          end: {
            line: 292,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 286,
            column: 8
          },
          end: {
            line: 292,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 286
      },
      "23": {
        loc: {
          start: {
            line: 286,
            column: 12
          },
          end: {
            line: 286,
            column: 100
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 286,
            column: 12
          },
          end: {
            line: 286,
            column: 66
          }
        }, {
          start: {
            line: 286,
            column: 70
          },
          end: {
            line: 286,
            column: 100
          }
        }],
        line: 286
      },
      "24": {
        loc: {
          start: {
            line: 300,
            column: 8
          },
          end: {
            line: 306,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 300,
            column: 8
          },
          end: {
            line: 306,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 300
      },
      "25": {
        loc: {
          start: {
            line: 300,
            column: 12
          },
          end: {
            line: 300,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 300,
            column: 12
          },
          end: {
            line: 300,
            column: 64
          }
        }, {
          start: {
            line: 300,
            column: 68
          },
          end: {
            line: 300,
            column: 86
          }
        }],
        line: 300
      },
      "26": {
        loc: {
          start: {
            line: 316,
            column: 12
          },
          end: {
            line: 318,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 316,
            column: 12
          },
          end: {
            line: 318,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 316
      },
      "27": {
        loc: {
          start: {
            line: 316,
            column: 16
          },
          end: {
            line: 316,
            column: 92
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 316,
            column: 16
          },
          end: {
            line: 316,
            column: 28
          }
        }, {
          start: {
            line: 316,
            column: 33
          },
          end: {
            line: 316,
            column: 58
          }
        }, {
          start: {
            line: 316,
            column: 62
          },
          end: {
            line: 316,
            column: 91
          }
        }],
        line: 316
      },
      "28": {
        loc: {
          start: {
            line: 352,
            column: 8
          },
          end: {
            line: 354,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 352,
            column: 8
          },
          end: {
            line: 354,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 352
      },
      "29": {
        loc: {
          start: {
            line: 360,
            column: 8
          },
          end: {
            line: 366,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 361,
            column: 12
          },
          end: {
            line: 361,
            column: 45
          }
        }, {
          start: {
            line: 362,
            column: 12
          },
          end: {
            line: 362,
            column: 42
          }
        }, {
          start: {
            line: 363,
            column: 12
          },
          end: {
            line: 363,
            column: 44
          }
        }, {
          start: {
            line: 364,
            column: 12
          },
          end: {
            line: 364,
            column: 38
          }
        }, {
          start: {
            line: 365,
            column: 12
          },
          end: {
            line: 365,
            column: 35
          }
        }],
        line: 360
      },
      "30": {
        loc: {
          start: {
            line: 384,
            column: 27
          },
          end: {
            line: 384,
            column: 114
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 384,
            column: 59
          },
          end: {
            line: 384,
            column: 110
          }
        }, {
          start: {
            line: 384,
            column: 113
          },
          end: {
            line: 384,
            column: 114
          }
        }],
        line: 384
      },
      "31": {
        loc: {
          start: {
            line: 409,
            column: 8
          },
          end: {
            line: 410,
            column: 31
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 409,
            column: 8
          },
          end: {
            line: 410,
            column: 31
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 409
      },
      "32": {
        loc: {
          start: {
            line: 411,
            column: 8
          },
          end: {
            line: 412,
            column: 31
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 411,
            column: 8
          },
          end: {
            line: 412,
            column: 31
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 411
      },
      "33": {
        loc: {
          start: {
            line: 413,
            column: 8
          },
          end: {
            line: 414,
            column: 30
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 413,
            column: 8
          },
          end: {
            line: 414,
            column: 30
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 413
      },
      "34": {
        loc: {
          start: {
            line: 416,
            column: 26
          },
          end: {
            line: 416,
            column: 113
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 416,
            column: 58
          },
          end: {
            line: 416,
            column: 109
          }
        }, {
          start: {
            line: 416,
            column: 112
          },
          end: {
            line: 416,
            column: 113
          }
        }],
        line: 416
      },
      "35": {
        loc: {
          start: {
            line: 418,
            column: 8
          },
          end: {
            line: 420,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 418,
            column: 8
          },
          end: {
            line: 420,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 418
      },
      "36": {
        loc: {
          start: {
            line: 418,
            column: 12
          },
          end: {
            line: 418,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 418,
            column: 12
          },
          end: {
            line: 418,
            column: 27
          }
        }, {
          start: {
            line: 418,
            column: 31
          },
          end: {
            line: 418,
            column: 50
          }
        }, {
          start: {
            line: 418,
            column: 54
          },
          end: {
            line: 418,
            column: 84
          }
        }],
        line: 418
      },
      "37": {
        loc: {
          start: {
            line: 429,
            column: 15
          },
          end: {
            line: 429,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 429,
            column: 27
          },
          end: {
            line: 429,
            column: 57
          }
        }, {
          start: {
            line: 429,
            column: 60
          },
          end: {
            line: 429,
            column: 61
          }
        }],
        line: 429
      },
      "38": {
        loc: {
          start: {
            line: 457,
            column: 12
          },
          end: {
            line: 464,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 457,
            column: 12
          },
          end: {
            line: 464,
            column: 13
          }
        }, {
          start: {
            line: 462,
            column: 17
          },
          end: {
            line: 464,
            column: 13
          }
        }],
        line: 457
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0, 0],
      "28": [0, 0],
      "29": [0, 0, 0, 0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0, 0],
      "37": [0, 0],
      "38": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/dikshantvashistha/PrepBettr/lib/services/config-monitoring-service.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/dikshantvashistha/PrepBettr/lib/services/config-monitoring-service.ts"],
      sourcesContent: ["/**\n * Configuration Monitoring Service\n * \n * Provides comprehensive monitoring, metrics, and alerting for the\n * unified configuration system with Application Insights integration.\n */\n\nimport { TelemetryClient } from 'applicationinsights';\nimport { logServerError } from '@/lib/errors';\nimport { azureCosmosService } from './azure-cosmos-service';\n\n// ===== INTERFACES =====\n\nexport interface ConfigMetrics {\n  requestCount: number;\n  cacheHits: number;\n  cacheMisses: number;\n  avgLatency: number;\n  errorCount: number;\n  driftDetected: number;\n  syncFailures: number;\n}\n\nexport interface ConfigAlert {\n  id: string;\n  type: 'drift' | 'sync_failure' | 'high_latency' | 'error_rate' | 'cache_performance';\n  severity: 'low' | 'medium' | 'high' | 'critical';\n  message: string;\n  metadata: Record<string, any>;\n  timestamp: Date;\n  resolved: boolean;\n  environment: string;\n}\n\nexport interface HealthCheckResult {\n  service: string;\n  status: 'healthy' | 'degraded' | 'unhealthy';\n  timestamp: Date;\n  metrics: ConfigMetrics;\n  alerts: ConfigAlert[];\n  details?: Record<string, any>;\n}\n\n// ===== MONITORING SERVICE =====\n\nclass ConfigMonitoringService {\n  private telemetryClient: TelemetryClient | null = null;\n  private metrics: ConfigMetrics = {\n    requestCount: 0,\n    cacheHits: 0,\n    cacheMisses: 0,\n    avgLatency: 0,\n    errorCount: 0,\n    driftDetected: 0,\n    syncFailures: 0\n  };\n  \n  private latencyBuffer: number[] = [];\n  private readonly LATENCY_BUFFER_SIZE = 100;\n  private readonly ALERT_THRESHOLDS = {\n    HIGH_LATENCY_MS: 1000,\n    ERROR_RATE_THRESHOLD: 0.05, // 5%\n    CACHE_HIT_RATIO_MIN: 0.8,   // 80%\n    MAX_DRIFT_COUNT: 5\n  };\n\n  constructor() {\n    this.initializeTelemetry();\n  }\n\n  // ===== INITIALIZATION =====\n\n  private initializeTelemetry(): void {\n    try {\n      const appInsightsKey = process.env.APPLICATIONINSIGHTS_CONNECTION_STRING;\n      \n      if (appInsightsKey) {\n        // Application Insights is typically initialized globally\n        // This service uses the global instance if available\n        const appInsights = require('applicationinsights');\n        \n        if (appInsights.defaultClient) {\n          this.telemetryClient = appInsights.defaultClient;\n          console.log('\u2705 Config monitoring connected to Application Insights');\n        } else {\n          appInsights.setup(appInsightsKey)\n            .setAutoCollectRequests(true)\n            .setAutoCollectPerformance(true)\n            .setAutoCollectExceptions(true)\n            .setAutoCollectDependencies(true)\n            .setAutoCollectConsole(true, true)\n            .setUseDiskRetryCaching(true)\n            .start();\n            \n          this.telemetryClient = appInsights.defaultClient;\n          console.log('\u2705 Config monitoring initialized Application Insights');\n        }\n      } else {\n        console.warn('\u26A0\uFE0F Application Insights connection string not found - monitoring disabled');\n      }\n    } catch (error) {\n      console.error('\u274C Failed to initialize Application Insights:', error);\n      logServerError(error as Error, { service: 'config-monitoring', action: 'initialize' });\n    }\n  }\n\n  // ===== METRICS TRACKING =====\n\n  /**\n   * Track configuration request with timing\n   */\n  trackConfigRequest(key: string, operation: 'get' | 'set' | 'getAll', latency: number, success: boolean): void {\n    this.metrics.requestCount++;\n    \n    // Update latency metrics\n    this.latencyBuffer.push(latency);\n    if (this.latencyBuffer.length > this.LATENCY_BUFFER_SIZE) {\n      this.latencyBuffer.shift();\n    }\n    this.metrics.avgLatency = this.latencyBuffer.reduce((a, b) => a + b, 0) / this.latencyBuffer.length;\n    \n    // Track errors\n    if (!success) {\n      this.metrics.errorCount++;\n    }\n    \n    // Send to Application Insights\n    if (this.telemetryClient) {\n      this.telemetryClient.trackRequest({\n        name: `Config-${operation}`,\n        url: `config://${key}`,\n        duration: latency,\n        resultCode: success ? '200' : '500',\n        success,\n        properties: {\n          configKey: key,\n          operation,\n          service: 'unified-config'\n        },\n        measurements: {\n          latency,\n          cacheHitRatio: this.getCacheHitRatio(),\n          requestCount: this.metrics.requestCount\n        }\n      });\n      \n      // Track custom metric\n      this.telemetryClient.trackMetric({\n        name: 'Config.Request.Latency',\n        value: latency,\n        properties: {\n          operation,\n          key: key.split('.')[0] // Track by namespace\n        }\n      });\n    }\n    \n    // Check for alerts\n    this.checkLatencyAlert(latency);\n    this.checkErrorRateAlert();\n  }\n\n  /**\n   * Track cache hit/miss\n   */\n  trackCacheHit(hit: boolean, key: string): void {\n    if (hit) {\n      this.metrics.cacheHits++;\n    } else {\n      this.metrics.cacheMisses++;\n    }\n    \n    if (this.telemetryClient) {\n      this.telemetryClient.trackEvent({\n        name: 'Config.Cache.Access',\n        properties: {\n          hit: hit.toString(),\n          key: key.split('.')[0],\n          service: 'unified-config'\n        },\n        measurements: {\n          hitRatio: this.getCacheHitRatio(),\n          totalCacheAccess: this.metrics.cacheHits + this.metrics.cacheMisses\n        }\n      });\n    }\n    \n    // Check cache performance alert\n    this.checkCachePerformanceAlert();\n  }\n\n  /**\n   * Track configuration drift detection\n   */\n  trackDriftDetection(driftedKeys: string[], totalChecked: number): void {\n    this.metrics.driftDetected = driftedKeys.length;\n    \n    if (this.telemetryClient) {\n      this.telemetryClient.trackEvent({\n        name: 'Config.Drift.Detection',\n        properties: {\n          driftedKeys: driftedKeys.join(','),\n          service: 'unified-config'\n        },\n        measurements: {\n          driftCount: driftedKeys.length,\n          totalChecked,\n          driftRatio: driftedKeys.length / totalChecked\n        }\n      });\n    }\n    \n    // Alert if drift detected\n    if (driftedKeys.length > 0) {\n      this.createAlert('drift', 'high', `Configuration drift detected in ${driftedKeys.length} keys: ${driftedKeys.join(', ')}`, {\n        driftedKeys,\n        totalChecked\n      });\n    }\n  }\n\n  /**\n   * Track Firebase sync operations\n   */\n  trackSyncOperation(success: boolean, keysSync: number, duration: number, error?: string): void {\n    if (!success) {\n      this.metrics.syncFailures++;\n    }\n    \n    if (this.telemetryClient) {\n      this.telemetryClient.trackDependency({\n        dependencyTypeName: 'Firebase',\n        name: 'Config.Sync',\n        data: `Sync ${keysSync} keys`,\n        duration,\n        success,\n        properties: {\n          keysSync: keysSync.toString(),\n          service: 'config-sync',\n          error: error || ''\n        }\n      });\n      \n      this.telemetryClient.trackMetric({\n        name: 'Config.Sync.KeyCount',\n        value: keysSync,\n        properties: {\n          success: success.toString()\n        }\n      });\n    }\n    \n    // Alert on sync failures\n    if (!success) {\n      this.createAlert('sync_failure', 'medium', `Firebase sync failed: ${error || 'Unknown error'}`, {\n        keysSync,\n        duration,\n        error\n      });\n    }\n  }\n\n  /**\n   * Track configuration changes\n   */\n  trackConfigChange(key: string, oldValue: any, newValue: any, changedBy: string, environment: string): void {\n    if (this.telemetryClient) {\n      this.telemetryClient.trackEvent({\n        name: 'Config.Change',\n        properties: {\n          key,\n          changedBy,\n          environment,\n          service: 'unified-config',\n          hasOldValue: (oldValue !== null && oldValue !== undefined).toString(),\n          valueType: typeof newValue\n        },\n        measurements: {\n          changeTimestamp: Date.now()\n        }\n      });\n    }\n  }\n\n  // ===== ALERTING =====\n\n  /**\n   * Create and process alerts\n   */\n  private async createAlert(type: ConfigAlert['type'], severity: ConfigAlert['severity'], message: string, metadata: Record<string, any>): Promise<void> {\n    const alert: ConfigAlert = {\n      id: `alert_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n      type,\n      severity,\n      message,\n      metadata,\n      timestamp: new Date(),\n      resolved: false,\n      environment: process.env.NODE_ENV || 'development'\n    };\n    \n    // Store alert in Cosmos DB\n    try {\n      await azureCosmosService.createDocument('configAlerts', {\n        ...alert,\n        _partitionKey: alert.type\n      });\n    } catch (error) {\n      console.error('Failed to store alert:', error);\n    }\n    \n    // Send to Application Insights as exception for high/critical severity\n    if (this.telemetryClient && (severity === 'high' || severity === 'critical')) {\n      this.telemetryClient.trackException({\n        exception: new Error(`Config Alert [${severity.toUpperCase()}]: ${message}`),\n        properties: {\n          alertId: alert.id,\n          alertType: type,\n          severity,\n          environment: alert.environment,\n          service: 'unified-config'\n        },\n        measurements: metadata\n      });\n    }\n    \n    // Send to notification channels\n    await this.sendAlertNotification(alert);\n    \n    console.warn(`\uD83D\uDEA8 Config Alert [${severity.toUpperCase()}]: ${message}`);\n  }\n\n  /**\n   * Check for latency alerts\n   */\n  private checkLatencyAlert(latency: number): void {\n    if (latency > this.ALERT_THRESHOLDS.HIGH_LATENCY_MS) {\n      this.createAlert('high_latency', 'medium', `High configuration latency detected: ${latency}ms`, {\n        latency,\n        threshold: this.ALERT_THRESHOLDS.HIGH_LATENCY_MS\n      });\n    }\n  }\n\n  /**\n   * Check for error rate alerts\n   */\n  private checkErrorRateAlert(): void {\n    const errorRate = this.metrics.requestCount > 0 ? this.metrics.errorCount / this.metrics.requestCount : 0;\n    \n    if (errorRate > this.ALERT_THRESHOLDS.ERROR_RATE_THRESHOLD && this.metrics.requestCount > 10) {\n      this.createAlert('error_rate', 'high', `High configuration error rate: ${(errorRate * 100).toFixed(2)}%`, {\n        errorRate,\n        errorCount: this.metrics.errorCount,\n        requestCount: this.metrics.requestCount\n      });\n    }\n  }\n\n  /**\n   * Check for cache performance alerts\n   */\n  private checkCachePerformanceAlert(): void {\n    const hitRatio = this.getCacheHitRatio();\n    const totalRequests = this.metrics.cacheHits + this.metrics.cacheMisses;\n    \n    if (hitRatio < this.ALERT_THRESHOLDS.CACHE_HIT_RATIO_MIN && totalRequests > 50) {\n      this.createAlert('cache_performance', 'medium', `Low cache hit ratio: ${(hitRatio * 100).toFixed(2)}%`, {\n        hitRatio,\n        cacheHits: this.metrics.cacheHits,\n        cacheMisses: this.metrics.cacheMisses\n      });\n    }\n  }\n\n  // ===== NOTIFICATIONS =====\n\n  /**\n   * Send alert notifications to configured channels\n   */\n  private async sendAlertNotification(alert: ConfigAlert): Promise<void> {\n    try {\n      // Slack webhook notification\n      const slackWebhook = process.env.SLACK_WEBHOOK_URL;\n      if (slackWebhook && (alert.severity === 'high' || alert.severity === 'critical')) {\n        await this.sendSlackNotification(alert, slackWebhook);\n      }\n      \n      // Email notification (could be implemented)\n      // await this.sendEmailNotification(alert);\n      \n      // Microsoft Teams notification (could be implemented)\n      // await this.sendTeamsNotification(alert);\n      \n    } catch (error) {\n      console.error('Failed to send alert notification:', error);\n    }\n  }\n\n  /**\n   * Send Slack notification\n   */\n  private async sendSlackNotification(alert: ConfigAlert, webhookUrl: string): Promise<void> {\n    const payload = {\n      text: `\uD83D\uDEA8 Configuration Alert: ${alert.message}`,\n      attachments: [\n        {\n          color: this.getAlertColor(alert.severity),\n          fields: [\n            { title: 'Alert Type', value: alert.type, short: true },\n            { title: 'Severity', value: alert.severity.toUpperCase(), short: true },\n            { title: 'Environment', value: alert.environment, short: true },\n            { title: 'Timestamp', value: alert.timestamp.toISOString(), short: true }\n          ],\n          footer: 'PrepBettr Config Monitoring'\n        }\n      ]\n    };\n    \n    const response = await fetch(webhookUrl, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(payload)\n    });\n    \n    if (!response.ok) {\n      throw new Error(`Slack notification failed: ${response.statusText}`);\n    }\n  }\n\n  /**\n   * Get alert color for Slack\n   */\n  private getAlertColor(severity: ConfigAlert['severity']): string {\n    switch (severity) {\n      case 'critical': return 'danger';\n      case 'high': return 'warning';\n      case 'medium': return 'warning';\n      case 'low': return 'good';\n      default: return 'good';\n    }\n  }\n\n  // ===== HEALTH CHECK =====\n\n  /**\n   * Perform comprehensive health check\n   */\n  async healthCheck(): Promise<HealthCheckResult> {\n    const alerts = await this.getActiveAlerts();\n    const status = this.calculateHealthStatus(alerts);\n    \n    return {\n      service: 'unified-config',\n      status,\n      timestamp: new Date(),\n      metrics: { ...this.metrics },\n      alerts,\n      details: {\n        cacheHitRatio: this.getCacheHitRatio(),\n        avgLatency: this.metrics.avgLatency,\n        errorRate: this.metrics.requestCount > 0 ? this.metrics.errorCount / this.metrics.requestCount : 0,\n        uptime: process.uptime()\n      }\n    };\n  }\n\n  /**\n   * Get active alerts\n   */\n  private async getActiveAlerts(): Promise<ConfigAlert[]> {\n    try {\n      const alerts = await azureCosmosService.queryDocuments<ConfigAlert>(\n        'configAlerts',\n        'SELECT * FROM c WHERE c.resolved = false AND c.timestamp >= @cutoff ORDER BY c.timestamp DESC',\n        [{ name: '@cutoff', value: new Date(Date.now() - 24 * 60 * 60 * 1000) }] // Last 24 hours\n      );\n      return alerts.slice(0, 10); // Limit to 10 most recent\n    } catch (error) {\n      console.error('Failed to get active alerts:', error);\n      return [];\n    }\n  }\n\n  /**\n   * Calculate overall health status\n   */\n  private calculateHealthStatus(alerts: ConfigAlert[]): 'healthy' | 'degraded' | 'unhealthy' {\n    const criticalAlerts = alerts.filter(a => a.severity === 'critical');\n    const highAlerts = alerts.filter(a => a.severity === 'high');\n    \n    if (criticalAlerts.length > 0) return 'unhealthy';\n    if (highAlerts.length > 2) return 'unhealthy';\n    if (alerts.length > 5) return 'degraded';\n    \n    // Check metrics\n    const errorRate = this.metrics.requestCount > 0 ? this.metrics.errorCount / this.metrics.requestCount : 0;\n    const cacheHitRatio = this.getCacheHitRatio();\n    \n    if (errorRate > 0.1 || cacheHitRatio < 0.5 || this.metrics.avgLatency > 2000) {\n      return 'degraded';\n    }\n    \n    return 'healthy';\n  }\n\n  // ===== UTILITY METHODS =====\n\n  /**\n   * Get current cache hit ratio\n   */\n  private getCacheHitRatio(): number {\n    const total = this.metrics.cacheHits + this.metrics.cacheMisses;\n    return total > 0 ? this.metrics.cacheHits / total : 0;\n  }\n\n  /**\n   * Get current metrics\n   */\n  getMetrics(): ConfigMetrics {\n    return { ...this.metrics };\n  }\n\n  /**\n   * Reset metrics (for testing or periodic reset)\n   */\n  resetMetrics(): void {\n    this.metrics = {\n      requestCount: 0,\n      cacheHits: 0,\n      cacheMisses: 0,\n      avgLatency: 0,\n      errorCount: 0,\n      driftDetected: 0,\n      syncFailures: 0\n    };\n    this.latencyBuffer = [];\n  }\n\n  /**\n   * Flush telemetry data\n   */\n  flush(): Promise<void> {\n    return new Promise((resolve) => {\n      if (this.telemetryClient) {\n        this.telemetryClient.flush();\n        // Flush is synchronous, so we can resolve immediately\n        resolve();\n      } else {\n        resolve();\n      }\n    });\n  }\n}\n\n// ===== SINGLETON INSTANCE =====\n\nexport const configMonitoringService = new ConfigMonitoringService();\nexport default configMonitoringService;\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "444c4cf5a0e118de7745eb3cfcc22d7d6e1e7d77"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1va1ruyfoi = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1va1ruyfoi();
cov_1va1ruyfoi().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1va1ruyfoi().s[1]++;
exports.configMonitoringService = void 0;
const errors_1 =
/* istanbul ignore next */
(cov_1va1ruyfoi().s[2]++, require("@/lib/errors"));
const azure_cosmos_service_1 =
/* istanbul ignore next */
(cov_1va1ruyfoi().s[3]++, require("./azure-cosmos-service"));
// ===== MONITORING SERVICE =====
class ConfigMonitoringService {
  constructor() {
    /* istanbul ignore next */
    cov_1va1ruyfoi().f[0]++;
    cov_1va1ruyfoi().s[4]++;
    this.telemetryClient = null;
    /* istanbul ignore next */
    cov_1va1ruyfoi().s[5]++;
    this.metrics = {
      requestCount: 0,
      cacheHits: 0,
      cacheMisses: 0,
      avgLatency: 0,
      errorCount: 0,
      driftDetected: 0,
      syncFailures: 0
    };
    /* istanbul ignore next */
    cov_1va1ruyfoi().s[6]++;
    this.latencyBuffer = [];
    /* istanbul ignore next */
    cov_1va1ruyfoi().s[7]++;
    this.LATENCY_BUFFER_SIZE = 100;
    /* istanbul ignore next */
    cov_1va1ruyfoi().s[8]++;
    this.ALERT_THRESHOLDS = {
      HIGH_LATENCY_MS: 1000,
      ERROR_RATE_THRESHOLD: 0.05,
      // 5%
      CACHE_HIT_RATIO_MIN: 0.8,
      // 80%
      MAX_DRIFT_COUNT: 5
    };
    /* istanbul ignore next */
    cov_1va1ruyfoi().s[9]++;
    this.initializeTelemetry();
  }
  // ===== INITIALIZATION =====
  initializeTelemetry() {
    /* istanbul ignore next */
    cov_1va1ruyfoi().f[1]++;
    cov_1va1ruyfoi().s[10]++;
    try {
      const appInsightsKey =
      /* istanbul ignore next */
      (cov_1va1ruyfoi().s[11]++, process.env.APPLICATIONINSIGHTS_CONNECTION_STRING);
      /* istanbul ignore next */
      cov_1va1ruyfoi().s[12]++;
      if (appInsightsKey) {
        /* istanbul ignore next */
        cov_1va1ruyfoi().b[0][0]++;
        // Application Insights is typically initialized globally
        // This service uses the global instance if available
        const appInsights =
        /* istanbul ignore next */
        (cov_1va1ruyfoi().s[13]++, require('applicationinsights'));
        /* istanbul ignore next */
        cov_1va1ruyfoi().s[14]++;
        if (appInsights.defaultClient) {
          /* istanbul ignore next */
          cov_1va1ruyfoi().b[1][0]++;
          cov_1va1ruyfoi().s[15]++;
          this.telemetryClient = appInsights.defaultClient;
          /* istanbul ignore next */
          cov_1va1ruyfoi().s[16]++;
          console.log('✅ Config monitoring connected to Application Insights');
        } else {
          /* istanbul ignore next */
          cov_1va1ruyfoi().b[1][1]++;
          cov_1va1ruyfoi().s[17]++;
          appInsights.setup(appInsightsKey).setAutoCollectRequests(true).setAutoCollectPerformance(true).setAutoCollectExceptions(true).setAutoCollectDependencies(true).setAutoCollectConsole(true, true).setUseDiskRetryCaching(true).start();
          /* istanbul ignore next */
          cov_1va1ruyfoi().s[18]++;
          this.telemetryClient = appInsights.defaultClient;
          /* istanbul ignore next */
          cov_1va1ruyfoi().s[19]++;
          console.log('✅ Config monitoring initialized Application Insights');
        }
      } else {
        /* istanbul ignore next */
        cov_1va1ruyfoi().b[0][1]++;
        cov_1va1ruyfoi().s[20]++;
        console.warn('⚠️ Application Insights connection string not found - monitoring disabled');
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_1va1ruyfoi().s[21]++;
      console.error('❌ Failed to initialize Application Insights:', error);
      /* istanbul ignore next */
      cov_1va1ruyfoi().s[22]++;
      (0, errors_1.logServerError)(error, {
        service: 'config-monitoring',
        action: 'initialize'
      });
    }
  }
  // ===== METRICS TRACKING =====
  /**
   * Track configuration request with timing
   */
  trackConfigRequest(key, operation, latency, success) {
    /* istanbul ignore next */
    cov_1va1ruyfoi().f[2]++;
    cov_1va1ruyfoi().s[23]++;
    this.metrics.requestCount++;
    // Update latency metrics
    /* istanbul ignore next */
    cov_1va1ruyfoi().s[24]++;
    this.latencyBuffer.push(latency);
    /* istanbul ignore next */
    cov_1va1ruyfoi().s[25]++;
    if (this.latencyBuffer.length > this.LATENCY_BUFFER_SIZE) {
      /* istanbul ignore next */
      cov_1va1ruyfoi().b[2][0]++;
      cov_1va1ruyfoi().s[26]++;
      this.latencyBuffer.shift();
    } else
    /* istanbul ignore next */
    {
      cov_1va1ruyfoi().b[2][1]++;
    }
    cov_1va1ruyfoi().s[27]++;
    this.metrics.avgLatency = this.latencyBuffer.reduce((a, b) => {
      /* istanbul ignore next */
      cov_1va1ruyfoi().f[3]++;
      cov_1va1ruyfoi().s[28]++;
      return a + b;
    }, 0) / this.latencyBuffer.length;
    // Track errors
    /* istanbul ignore next */
    cov_1va1ruyfoi().s[29]++;
    if (!success) {
      /* istanbul ignore next */
      cov_1va1ruyfoi().b[3][0]++;
      cov_1va1ruyfoi().s[30]++;
      this.metrics.errorCount++;
    } else
    /* istanbul ignore next */
    {
      cov_1va1ruyfoi().b[3][1]++;
    }
    // Send to Application Insights
    cov_1va1ruyfoi().s[31]++;
    if (this.telemetryClient) {
      /* istanbul ignore next */
      cov_1va1ruyfoi().b[4][0]++;
      cov_1va1ruyfoi().s[32]++;
      this.telemetryClient.trackRequest({
        name: `Config-${operation}`,
        url: `config://${key}`,
        duration: latency,
        resultCode: success ?
        /* istanbul ignore next */
        (cov_1va1ruyfoi().b[5][0]++, '200') :
        /* istanbul ignore next */
        (cov_1va1ruyfoi().b[5][1]++, '500'),
        success,
        properties: {
          configKey: key,
          operation,
          service: 'unified-config'
        },
        measurements: {
          latency,
          cacheHitRatio: this.getCacheHitRatio(),
          requestCount: this.metrics.requestCount
        }
      });
      // Track custom metric
      /* istanbul ignore next */
      cov_1va1ruyfoi().s[33]++;
      this.telemetryClient.trackMetric({
        name: 'Config.Request.Latency',
        value: latency,
        properties: {
          operation,
          key: key.split('.')[0] // Track by namespace
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_1va1ruyfoi().b[4][1]++;
    }
    // Check for alerts
    cov_1va1ruyfoi().s[34]++;
    this.checkLatencyAlert(latency);
    /* istanbul ignore next */
    cov_1va1ruyfoi().s[35]++;
    this.checkErrorRateAlert();
  }
  /**
   * Track cache hit/miss
   */
  trackCacheHit(hit, key) {
    /* istanbul ignore next */
    cov_1va1ruyfoi().f[4]++;
    cov_1va1ruyfoi().s[36]++;
    if (hit) {
      /* istanbul ignore next */
      cov_1va1ruyfoi().b[6][0]++;
      cov_1va1ruyfoi().s[37]++;
      this.metrics.cacheHits++;
    } else {
      /* istanbul ignore next */
      cov_1va1ruyfoi().b[6][1]++;
      cov_1va1ruyfoi().s[38]++;
      this.metrics.cacheMisses++;
    }
    /* istanbul ignore next */
    cov_1va1ruyfoi().s[39]++;
    if (this.telemetryClient) {
      /* istanbul ignore next */
      cov_1va1ruyfoi().b[7][0]++;
      cov_1va1ruyfoi().s[40]++;
      this.telemetryClient.trackEvent({
        name: 'Config.Cache.Access',
        properties: {
          hit: hit.toString(),
          key: key.split('.')[0],
          service: 'unified-config'
        },
        measurements: {
          hitRatio: this.getCacheHitRatio(),
          totalCacheAccess: this.metrics.cacheHits + this.metrics.cacheMisses
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_1va1ruyfoi().b[7][1]++;
    }
    // Check cache performance alert
    cov_1va1ruyfoi().s[41]++;
    this.checkCachePerformanceAlert();
  }
  /**
   * Track configuration drift detection
   */
  trackDriftDetection(driftedKeys, totalChecked) {
    /* istanbul ignore next */
    cov_1va1ruyfoi().f[5]++;
    cov_1va1ruyfoi().s[42]++;
    this.metrics.driftDetected = driftedKeys.length;
    /* istanbul ignore next */
    cov_1va1ruyfoi().s[43]++;
    if (this.telemetryClient) {
      /* istanbul ignore next */
      cov_1va1ruyfoi().b[8][0]++;
      cov_1va1ruyfoi().s[44]++;
      this.telemetryClient.trackEvent({
        name: 'Config.Drift.Detection',
        properties: {
          driftedKeys: driftedKeys.join(','),
          service: 'unified-config'
        },
        measurements: {
          driftCount: driftedKeys.length,
          totalChecked,
          driftRatio: driftedKeys.length / totalChecked
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_1va1ruyfoi().b[8][1]++;
    }
    // Alert if drift detected
    cov_1va1ruyfoi().s[45]++;
    if (driftedKeys.length > 0) {
      /* istanbul ignore next */
      cov_1va1ruyfoi().b[9][0]++;
      cov_1va1ruyfoi().s[46]++;
      this.createAlert('drift', 'high', `Configuration drift detected in ${driftedKeys.length} keys: ${driftedKeys.join(', ')}`, {
        driftedKeys,
        totalChecked
      });
    } else
    /* istanbul ignore next */
    {
      cov_1va1ruyfoi().b[9][1]++;
    }
  }
  /**
   * Track Firebase sync operations
   */
  trackSyncOperation(success, keysSync, duration, error) {
    /* istanbul ignore next */
    cov_1va1ruyfoi().f[6]++;
    cov_1va1ruyfoi().s[47]++;
    if (!success) {
      /* istanbul ignore next */
      cov_1va1ruyfoi().b[10][0]++;
      cov_1va1ruyfoi().s[48]++;
      this.metrics.syncFailures++;
    } else
    /* istanbul ignore next */
    {
      cov_1va1ruyfoi().b[10][1]++;
    }
    cov_1va1ruyfoi().s[49]++;
    if (this.telemetryClient) {
      /* istanbul ignore next */
      cov_1va1ruyfoi().b[11][0]++;
      cov_1va1ruyfoi().s[50]++;
      this.telemetryClient.trackDependency({
        dependencyTypeName: 'Firebase',
        name: 'Config.Sync',
        data: `Sync ${keysSync} keys`,
        duration,
        success,
        properties: {
          keysSync: keysSync.toString(),
          service: 'config-sync',
          error:
          /* istanbul ignore next */
          (cov_1va1ruyfoi().b[12][0]++, error) ||
          /* istanbul ignore next */
          (cov_1va1ruyfoi().b[12][1]++, '')
        }
      });
      /* istanbul ignore next */
      cov_1va1ruyfoi().s[51]++;
      this.telemetryClient.trackMetric({
        name: 'Config.Sync.KeyCount',
        value: keysSync,
        properties: {
          success: success.toString()
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_1va1ruyfoi().b[11][1]++;
    }
    // Alert on sync failures
    cov_1va1ruyfoi().s[52]++;
    if (!success) {
      /* istanbul ignore next */
      cov_1va1ruyfoi().b[13][0]++;
      cov_1va1ruyfoi().s[53]++;
      this.createAlert('sync_failure', 'medium', `Firebase sync failed: ${
      /* istanbul ignore next */
      (cov_1va1ruyfoi().b[14][0]++, error) ||
      /* istanbul ignore next */
      (cov_1va1ruyfoi().b[14][1]++, 'Unknown error')}`, {
        keysSync,
        duration,
        error
      });
    } else
    /* istanbul ignore next */
    {
      cov_1va1ruyfoi().b[13][1]++;
    }
  }
  /**
   * Track configuration changes
   */
  trackConfigChange(key, oldValue, newValue, changedBy, environment) {
    /* istanbul ignore next */
    cov_1va1ruyfoi().f[7]++;
    cov_1va1ruyfoi().s[54]++;
    if (this.telemetryClient) {
      /* istanbul ignore next */
      cov_1va1ruyfoi().b[15][0]++;
      cov_1va1ruyfoi().s[55]++;
      this.telemetryClient.trackEvent({
        name: 'Config.Change',
        properties: {
          key,
          changedBy,
          environment,
          service: 'unified-config',
          hasOldValue: (
          /* istanbul ignore next */
          (cov_1va1ruyfoi().b[16][0]++, oldValue !== null) &&
          /* istanbul ignore next */
          (cov_1va1ruyfoi().b[16][1]++, oldValue !== undefined)).toString(),
          valueType: typeof newValue
        },
        measurements: {
          changeTimestamp: Date.now()
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_1va1ruyfoi().b[15][1]++;
    }
  }
  // ===== ALERTING =====
  /**
   * Create and process alerts
   */
  async createAlert(type, severity, message, metadata) {
    /* istanbul ignore next */
    cov_1va1ruyfoi().f[8]++;
    const alert =
    /* istanbul ignore next */
    (cov_1va1ruyfoi().s[56]++, {
      id: `alert_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,
      type,
      severity,
      message,
      metadata,
      timestamp: new Date(),
      resolved: false,
      environment:
      /* istanbul ignore next */
      (cov_1va1ruyfoi().b[17][0]++, process.env.NODE_ENV) ||
      /* istanbul ignore next */
      (cov_1va1ruyfoi().b[17][1]++, 'development')
    });
    // Store alert in Cosmos DB
    /* istanbul ignore next */
    cov_1va1ruyfoi().s[57]++;
    try {
      /* istanbul ignore next */
      cov_1va1ruyfoi().s[58]++;
      await azure_cosmos_service_1.azureCosmosService.createDocument('configAlerts', Object.assign(Object.assign({}, alert), {
        _partitionKey: alert.type
      }));
    } catch (error) {
      /* istanbul ignore next */
      cov_1va1ruyfoi().s[59]++;
      console.error('Failed to store alert:', error);
    }
    // Send to Application Insights as exception for high/critical severity
    /* istanbul ignore next */
    cov_1va1ruyfoi().s[60]++;
    if (
    /* istanbul ignore next */
    (cov_1va1ruyfoi().b[19][0]++, this.telemetryClient) && (
    /* istanbul ignore next */
    (cov_1va1ruyfoi().b[19][1]++, severity === 'high') ||
    /* istanbul ignore next */
    (cov_1va1ruyfoi().b[19][2]++, severity === 'critical'))) {
      /* istanbul ignore next */
      cov_1va1ruyfoi().b[18][0]++;
      cov_1va1ruyfoi().s[61]++;
      this.telemetryClient.trackException({
        exception: new Error(`Config Alert [${severity.toUpperCase()}]: ${message}`),
        properties: {
          alertId: alert.id,
          alertType: type,
          severity,
          environment: alert.environment,
          service: 'unified-config'
        },
        measurements: metadata
      });
    } else
    /* istanbul ignore next */
    {
      cov_1va1ruyfoi().b[18][1]++;
    }
    // Send to notification channels
    cov_1va1ruyfoi().s[62]++;
    await this.sendAlertNotification(alert);
    /* istanbul ignore next */
    cov_1va1ruyfoi().s[63]++;
    console.warn(`🚨 Config Alert [${severity.toUpperCase()}]: ${message}`);
  }
  /**
   * Check for latency alerts
   */
  checkLatencyAlert(latency) {
    /* istanbul ignore next */
    cov_1va1ruyfoi().f[9]++;
    cov_1va1ruyfoi().s[64]++;
    if (latency > this.ALERT_THRESHOLDS.HIGH_LATENCY_MS) {
      /* istanbul ignore next */
      cov_1va1ruyfoi().b[20][0]++;
      cov_1va1ruyfoi().s[65]++;
      this.createAlert('high_latency', 'medium', `High configuration latency detected: ${latency}ms`, {
        latency,
        threshold: this.ALERT_THRESHOLDS.HIGH_LATENCY_MS
      });
    } else
    /* istanbul ignore next */
    {
      cov_1va1ruyfoi().b[20][1]++;
    }
  }
  /**
   * Check for error rate alerts
   */
  checkErrorRateAlert() {
    /* istanbul ignore next */
    cov_1va1ruyfoi().f[10]++;
    const errorRate =
    /* istanbul ignore next */
    (cov_1va1ruyfoi().s[66]++, this.metrics.requestCount > 0 ?
    /* istanbul ignore next */
    (cov_1va1ruyfoi().b[21][0]++, this.metrics.errorCount / this.metrics.requestCount) :
    /* istanbul ignore next */
    (cov_1va1ruyfoi().b[21][1]++, 0));
    /* istanbul ignore next */
    cov_1va1ruyfoi().s[67]++;
    if (
    /* istanbul ignore next */
    (cov_1va1ruyfoi().b[23][0]++, errorRate > this.ALERT_THRESHOLDS.ERROR_RATE_THRESHOLD) &&
    /* istanbul ignore next */
    (cov_1va1ruyfoi().b[23][1]++, this.metrics.requestCount > 10)) {
      /* istanbul ignore next */
      cov_1va1ruyfoi().b[22][0]++;
      cov_1va1ruyfoi().s[68]++;
      this.createAlert('error_rate', 'high', `High configuration error rate: ${(errorRate * 100).toFixed(2)}%`, {
        errorRate,
        errorCount: this.metrics.errorCount,
        requestCount: this.metrics.requestCount
      });
    } else
    /* istanbul ignore next */
    {
      cov_1va1ruyfoi().b[22][1]++;
    }
  }
  /**
   * Check for cache performance alerts
   */
  checkCachePerformanceAlert() {
    /* istanbul ignore next */
    cov_1va1ruyfoi().f[11]++;
    const hitRatio =
    /* istanbul ignore next */
    (cov_1va1ruyfoi().s[69]++, this.getCacheHitRatio());
    const totalRequests =
    /* istanbul ignore next */
    (cov_1va1ruyfoi().s[70]++, this.metrics.cacheHits + this.metrics.cacheMisses);
    /* istanbul ignore next */
    cov_1va1ruyfoi().s[71]++;
    if (
    /* istanbul ignore next */
    (cov_1va1ruyfoi().b[25][0]++, hitRatio < this.ALERT_THRESHOLDS.CACHE_HIT_RATIO_MIN) &&
    /* istanbul ignore next */
    (cov_1va1ruyfoi().b[25][1]++, totalRequests > 50)) {
      /* istanbul ignore next */
      cov_1va1ruyfoi().b[24][0]++;
      cov_1va1ruyfoi().s[72]++;
      this.createAlert('cache_performance', 'medium', `Low cache hit ratio: ${(hitRatio * 100).toFixed(2)}%`, {
        hitRatio,
        cacheHits: this.metrics.cacheHits,
        cacheMisses: this.metrics.cacheMisses
      });
    } else
    /* istanbul ignore next */
    {
      cov_1va1ruyfoi().b[24][1]++;
    }
  }
  // ===== NOTIFICATIONS =====
  /**
   * Send alert notifications to configured channels
   */
  async sendAlertNotification(alert) {
    /* istanbul ignore next */
    cov_1va1ruyfoi().f[12]++;
    cov_1va1ruyfoi().s[73]++;
    try {
      // Slack webhook notification
      const slackWebhook =
      /* istanbul ignore next */
      (cov_1va1ruyfoi().s[74]++, process.env.SLACK_WEBHOOK_URL);
      /* istanbul ignore next */
      cov_1va1ruyfoi().s[75]++;
      if (
      /* istanbul ignore next */
      (cov_1va1ruyfoi().b[27][0]++, slackWebhook) && (
      /* istanbul ignore next */
      (cov_1va1ruyfoi().b[27][1]++, alert.severity === 'high') ||
      /* istanbul ignore next */
      (cov_1va1ruyfoi().b[27][2]++, alert.severity === 'critical'))) {
        /* istanbul ignore next */
        cov_1va1ruyfoi().b[26][0]++;
        cov_1va1ruyfoi().s[76]++;
        await this.sendSlackNotification(alert, slackWebhook);
      } else
      /* istanbul ignore next */
      {
        cov_1va1ruyfoi().b[26][1]++;
      }
      // Email notification (could be implemented)
      // await this.sendEmailNotification(alert);
      // Microsoft Teams notification (could be implemented)
      // await this.sendTeamsNotification(alert);
    } catch (error) {
      /* istanbul ignore next */
      cov_1va1ruyfoi().s[77]++;
      console.error('Failed to send alert notification:', error);
    }
  }
  /**
   * Send Slack notification
   */
  async sendSlackNotification(alert, webhookUrl) {
    /* istanbul ignore next */
    cov_1va1ruyfoi().f[13]++;
    const payload =
    /* istanbul ignore next */
    (cov_1va1ruyfoi().s[78]++, {
      text: `🚨 Configuration Alert: ${alert.message}`,
      attachments: [{
        color: this.getAlertColor(alert.severity),
        fields: [{
          title: 'Alert Type',
          value: alert.type,
          short: true
        }, {
          title: 'Severity',
          value: alert.severity.toUpperCase(),
          short: true
        }, {
          title: 'Environment',
          value: alert.environment,
          short: true
        }, {
          title: 'Timestamp',
          value: alert.timestamp.toISOString(),
          short: true
        }],
        footer: 'PrepBettr Config Monitoring'
      }]
    });
    const response =
    /* istanbul ignore next */
    (cov_1va1ruyfoi().s[79]++, await fetch(webhookUrl, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(payload)
    }));
    /* istanbul ignore next */
    cov_1va1ruyfoi().s[80]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_1va1ruyfoi().b[28][0]++;
      cov_1va1ruyfoi().s[81]++;
      throw new Error(`Slack notification failed: ${response.statusText}`);
    } else
    /* istanbul ignore next */
    {
      cov_1va1ruyfoi().b[28][1]++;
    }
  }
  /**
   * Get alert color for Slack
   */
  getAlertColor(severity) {
    /* istanbul ignore next */
    cov_1va1ruyfoi().f[14]++;
    cov_1va1ruyfoi().s[82]++;
    switch (severity) {
      case 'critical':
        /* istanbul ignore next */
        cov_1va1ruyfoi().b[29][0]++;
        cov_1va1ruyfoi().s[83]++;
        return 'danger';
      case 'high':
        /* istanbul ignore next */
        cov_1va1ruyfoi().b[29][1]++;
        cov_1va1ruyfoi().s[84]++;
        return 'warning';
      case 'medium':
        /* istanbul ignore next */
        cov_1va1ruyfoi().b[29][2]++;
        cov_1va1ruyfoi().s[85]++;
        return 'warning';
      case 'low':
        /* istanbul ignore next */
        cov_1va1ruyfoi().b[29][3]++;
        cov_1va1ruyfoi().s[86]++;
        return 'good';
      default:
        /* istanbul ignore next */
        cov_1va1ruyfoi().b[29][4]++;
        cov_1va1ruyfoi().s[87]++;
        return 'good';
    }
  }
  // ===== HEALTH CHECK =====
  /**
   * Perform comprehensive health check
   */
  async healthCheck() {
    /* istanbul ignore next */
    cov_1va1ruyfoi().f[15]++;
    const alerts =
    /* istanbul ignore next */
    (cov_1va1ruyfoi().s[88]++, await this.getActiveAlerts());
    const status =
    /* istanbul ignore next */
    (cov_1va1ruyfoi().s[89]++, this.calculateHealthStatus(alerts));
    /* istanbul ignore next */
    cov_1va1ruyfoi().s[90]++;
    return {
      service: 'unified-config',
      status,
      timestamp: new Date(),
      metrics: Object.assign({}, this.metrics),
      alerts,
      details: {
        cacheHitRatio: this.getCacheHitRatio(),
        avgLatency: this.metrics.avgLatency,
        errorRate: this.metrics.requestCount > 0 ?
        /* istanbul ignore next */
        (cov_1va1ruyfoi().b[30][0]++, this.metrics.errorCount / this.metrics.requestCount) :
        /* istanbul ignore next */
        (cov_1va1ruyfoi().b[30][1]++, 0),
        uptime: process.uptime()
      }
    };
  }
  /**
   * Get active alerts
   */
  async getActiveAlerts() {
    /* istanbul ignore next */
    cov_1va1ruyfoi().f[16]++;
    cov_1va1ruyfoi().s[91]++;
    try {
      const alerts =
      /* istanbul ignore next */
      (cov_1va1ruyfoi().s[92]++, await azure_cosmos_service_1.azureCosmosService.queryDocuments('configAlerts', 'SELECT * FROM c WHERE c.resolved = false AND c.timestamp >= @cutoff ORDER BY c.timestamp DESC', [{
        name: '@cutoff',
        value: new Date(Date.now() - 24 * 60 * 60 * 1000)
      }] // Last 24 hours
      ));
      /* istanbul ignore next */
      cov_1va1ruyfoi().s[93]++;
      return alerts.slice(0, 10); // Limit to 10 most recent
    } catch (error) {
      /* istanbul ignore next */
      cov_1va1ruyfoi().s[94]++;
      console.error('Failed to get active alerts:', error);
      /* istanbul ignore next */
      cov_1va1ruyfoi().s[95]++;
      return [];
    }
  }
  /**
   * Calculate overall health status
   */
  calculateHealthStatus(alerts) {
    /* istanbul ignore next */
    cov_1va1ruyfoi().f[17]++;
    const criticalAlerts =
    /* istanbul ignore next */
    (cov_1va1ruyfoi().s[96]++, alerts.filter(a => {
      /* istanbul ignore next */
      cov_1va1ruyfoi().f[18]++;
      cov_1va1ruyfoi().s[97]++;
      return a.severity === 'critical';
    }));
    const highAlerts =
    /* istanbul ignore next */
    (cov_1va1ruyfoi().s[98]++, alerts.filter(a => {
      /* istanbul ignore next */
      cov_1va1ruyfoi().f[19]++;
      cov_1va1ruyfoi().s[99]++;
      return a.severity === 'high';
    }));
    /* istanbul ignore next */
    cov_1va1ruyfoi().s[100]++;
    if (criticalAlerts.length > 0) {
      /* istanbul ignore next */
      cov_1va1ruyfoi().b[31][0]++;
      cov_1va1ruyfoi().s[101]++;
      return 'unhealthy';
    } else
    /* istanbul ignore next */
    {
      cov_1va1ruyfoi().b[31][1]++;
    }
    cov_1va1ruyfoi().s[102]++;
    if (highAlerts.length > 2) {
      /* istanbul ignore next */
      cov_1va1ruyfoi().b[32][0]++;
      cov_1va1ruyfoi().s[103]++;
      return 'unhealthy';
    } else
    /* istanbul ignore next */
    {
      cov_1va1ruyfoi().b[32][1]++;
    }
    cov_1va1ruyfoi().s[104]++;
    if (alerts.length > 5) {
      /* istanbul ignore next */
      cov_1va1ruyfoi().b[33][0]++;
      cov_1va1ruyfoi().s[105]++;
      return 'degraded';
    } else
    /* istanbul ignore next */
    {
      cov_1va1ruyfoi().b[33][1]++;
    }
    // Check metrics
    const errorRate =
    /* istanbul ignore next */
    (cov_1va1ruyfoi().s[106]++, this.metrics.requestCount > 0 ?
    /* istanbul ignore next */
    (cov_1va1ruyfoi().b[34][0]++, this.metrics.errorCount / this.metrics.requestCount) :
    /* istanbul ignore next */
    (cov_1va1ruyfoi().b[34][1]++, 0));
    const cacheHitRatio =
    /* istanbul ignore next */
    (cov_1va1ruyfoi().s[107]++, this.getCacheHitRatio());
    /* istanbul ignore next */
    cov_1va1ruyfoi().s[108]++;
    if (
    /* istanbul ignore next */
    (cov_1va1ruyfoi().b[36][0]++, errorRate > 0.1) ||
    /* istanbul ignore next */
    (cov_1va1ruyfoi().b[36][1]++, cacheHitRatio < 0.5) ||
    /* istanbul ignore next */
    (cov_1va1ruyfoi().b[36][2]++, this.metrics.avgLatency > 2000)) {
      /* istanbul ignore next */
      cov_1va1ruyfoi().b[35][0]++;
      cov_1va1ruyfoi().s[109]++;
      return 'degraded';
    } else
    /* istanbul ignore next */
    {
      cov_1va1ruyfoi().b[35][1]++;
    }
    cov_1va1ruyfoi().s[110]++;
    return 'healthy';
  }
  // ===== UTILITY METHODS =====
  /**
   * Get current cache hit ratio
   */
  getCacheHitRatio() {
    /* istanbul ignore next */
    cov_1va1ruyfoi().f[20]++;
    const total =
    /* istanbul ignore next */
    (cov_1va1ruyfoi().s[111]++, this.metrics.cacheHits + this.metrics.cacheMisses);
    /* istanbul ignore next */
    cov_1va1ruyfoi().s[112]++;
    return total > 0 ?
    /* istanbul ignore next */
    (cov_1va1ruyfoi().b[37][0]++, this.metrics.cacheHits / total) :
    /* istanbul ignore next */
    (cov_1va1ruyfoi().b[37][1]++, 0);
  }
  /**
   * Get current metrics
   */
  getMetrics() {
    /* istanbul ignore next */
    cov_1va1ruyfoi().f[21]++;
    cov_1va1ruyfoi().s[113]++;
    return Object.assign({}, this.metrics);
  }
  /**
   * Reset metrics (for testing or periodic reset)
   */
  resetMetrics() {
    /* istanbul ignore next */
    cov_1va1ruyfoi().f[22]++;
    cov_1va1ruyfoi().s[114]++;
    this.metrics = {
      requestCount: 0,
      cacheHits: 0,
      cacheMisses: 0,
      avgLatency: 0,
      errorCount: 0,
      driftDetected: 0,
      syncFailures: 0
    };
    /* istanbul ignore next */
    cov_1va1ruyfoi().s[115]++;
    this.latencyBuffer = [];
  }
  /**
   * Flush telemetry data
   */
  flush() {
    /* istanbul ignore next */
    cov_1va1ruyfoi().f[23]++;
    cov_1va1ruyfoi().s[116]++;
    return new Promise(resolve => {
      /* istanbul ignore next */
      cov_1va1ruyfoi().f[24]++;
      cov_1va1ruyfoi().s[117]++;
      if (this.telemetryClient) {
        /* istanbul ignore next */
        cov_1va1ruyfoi().b[38][0]++;
        cov_1va1ruyfoi().s[118]++;
        this.telemetryClient.flush();
        // Flush is synchronous, so we can resolve immediately
        /* istanbul ignore next */
        cov_1va1ruyfoi().s[119]++;
        resolve();
      } else {
        /* istanbul ignore next */
        cov_1va1ruyfoi().b[38][1]++;
        cov_1va1ruyfoi().s[120]++;
        resolve();
      }
    });
  }
}
// ===== SINGLETON INSTANCE =====
/* istanbul ignore next */
cov_1va1ruyfoi().s[121]++;
exports.configMonitoringService = new ConfigMonitoringService();
/* istanbul ignore next */
cov_1va1ruyfoi().s[122]++;
exports.default = exports.configMonitoringService;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,