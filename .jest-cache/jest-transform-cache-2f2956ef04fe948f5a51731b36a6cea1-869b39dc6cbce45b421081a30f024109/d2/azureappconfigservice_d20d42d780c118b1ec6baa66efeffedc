b91629b459478b52394b03a96d52c9fa
"use strict";

/* istanbul ignore next */
function cov_1ofjbnsuyl() {
  var path = "/Users/dikshantvashistha/PrepBettr/lib/services/azure-app-config-service.ts";
  var hash = "df5a998487bd61bf98c30879361037e01f624770";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dikshantvashistha/PrepBettr/lib/services/azure-app-config-service.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 20
        },
        end: {
          line: 8,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 91
        }
      },
      "2": {
        start: {
          line: 3,
          column: 31
        },
        end: {
          line: 3,
          column: 91
        }
      },
      "3": {
        start: {
          line: 4,
          column: 12
        },
        end: {
          line: 4,
          column: 35
        }
      },
      "4": {
        start: {
          line: 5,
          column: 4
        },
        end: {
          line: 5,
          column: 213
        }
      },
      "5": {
        start: {
          line: 5,
          column: 194
        },
        end: {
          line: 5,
          column: 206
        }
      },
      "6": {
        start: {
          line: 6,
          column: 23
        },
        end: {
          line: 6,
          column: 162
        }
      },
      "7": {
        start: {
          line: 6,
          column: 53
        },
        end: {
          line: 6,
          column: 159
        }
      },
      "8": {
        start: {
          line: 6,
          column: 101
        },
        end: {
          line: 6,
          column: 155
        }
      },
      "9": {
        start: {
          line: 7,
          column: 45
        },
        end: {
          line: 7,
          column: 126
        }
      },
      "10": {
        start: {
          line: 7,
          column: 83
        },
        end: {
          line: 7,
          column: 114
        }
      },
      "11": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 62
        }
      },
      "12": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 10,
          column: 39
        }
      },
      "13": {
        start: {
          line: 11,
          column: 28
        },
        end: {
          line: 11,
          column: 63
        }
      },
      "14": {
        start: {
          line: 12,
          column: 19
        },
        end: {
          line: 12,
          column: 45
        }
      },
      "15": {
        start: {
          line: 13,
          column: 17
        },
        end: {
          line: 13,
          column: 40
        }
      },
      "16": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 27
        }
      },
      "17": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 31
        }
      },
      "18": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 33
        }
      },
      "19": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 40
        }
      },
      "20": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 85
        }
      },
      "21": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 24,
          column: 19
        }
      },
      "22": {
        start: {
          line: 24,
          column: 12
        },
        end: {
          line: 24,
          column: 19
        }
      },
      "23": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 49,
          column: 9
        }
      },
      "24": {
        start: {
          line: 26,
          column: 12
        },
        end: {
          line: 42,
          column: 13
        }
      },
      "25": {
        start: {
          line: 27,
          column: 33
        },
        end: {
          line: 27,
          column: 70
        }
      },
      "26": {
        start: {
          line: 28,
          column: 16
        },
        end: {
          line: 36,
          column: 17
        }
      },
      "27": {
        start: {
          line: 30,
          column: 20
        },
        end: {
          line: 30,
          column: 132
        }
      },
      "28": {
        start: {
          line: 31,
          column: 20
        },
        end: {
          line: 31,
          column: 95
        }
      },
      "29": {
        start: {
          line: 34,
          column: 20
        },
        end: {
          line: 34,
          column: 122
        }
      },
      "30": {
        start: {
          line: 35,
          column: 20
        },
        end: {
          line: 35,
          column: 27
        }
      },
      "31": {
        start: {
          line: 40,
          column: 16
        },
        end: {
          line: 40,
          column: 100
        }
      },
      "32": {
        start: {
          line: 41,
          column: 16
        },
        end: {
          line: 41,
          column: 92
        }
      },
      "33": {
        start: {
          line: 43,
          column: 12
        },
        end: {
          line: 43,
          column: 36
        }
      },
      "34": {
        start: {
          line: 46,
          column: 12
        },
        end: {
          line: 46,
          column: 84
        }
      },
      "35": {
        start: {
          line: 47,
          column: 12
        },
        end: {
          line: 47,
          column: 103
        }
      },
      "36": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 48,
          column: 24
        }
      },
      "37": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 55,
          column: 32
        }
      },
      "38": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 59,
          column: 9
        }
      },
      "39": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 57,
          column: 66
        }
      },
      "40": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 58,
          column: 24
        }
      },
      "41": {
        start: {
          line: 60,
          column: 25
        },
        end: {
          line: 60,
          column: 62
        }
      },
      "42": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 70,
          column: 9
        }
      },
      "43": {
        start: {
          line: 63,
          column: 27
        },
        end: {
          line: 63,
          column: 51
        }
      },
      "44": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 69,
          column: 13
        }
      },
      "45": {
        start: {
          line: 65,
          column: 16
        },
        end: {
          line: 65,
          column: 36
        }
      },
      "46": {
        start: {
          line: 68,
          column: 16
        },
        end: {
          line: 68,
          column: 44
        }
      },
      "47": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 91,
          column: 9
        }
      },
      "48": {
        start: {
          line: 72,
          column: 28
        },
        end: {
          line: 72,
          column: 85
        }
      },
      "49": {
        start: {
          line: 73,
          column: 26
        },
        end: {
          line: 73,
          column: 47
        }
      },
      "50": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 81,
          column: 13
        }
      },
      "51": {
        start: {
          line: 76,
          column: 16
        },
        end: {
          line: 80,
          column: 19
        }
      },
      "52": {
        start: {
          line: 82,
          column: 12
        },
        end: {
          line: 82,
          column: 25
        }
      },
      "53": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 85,
          column: 79
        }
      },
      "54": {
        start: {
          line: 86,
          column: 12
        },
        end: {
          line: 89,
          column: 31
        }
      },
      "55": {
        start: {
          line: 90,
          column: 12
        },
        end: {
          line: 90,
          column: 24
        }
      },
      "56": {
        start: {
          line: 97,
          column: 22
        },
        end: {
          line: 97,
          column: 59
        }
      },
      "57": {
        start: {
          line: 98,
          column: 8
        },
        end: {
          line: 100,
          column: 9
        }
      },
      "58": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 99,
          column: 32
        }
      },
      "59": {
        start: {
          line: 101,
          column: 8
        },
        end: {
          line: 121,
          column: 9
        }
      },
      "60": {
        start: {
          line: 102,
          column: 12
        },
        end: {
          line: 104,
          column: 13
        }
      },
      "61": {
        start: {
          line: 103,
          column: 16
        },
        end: {
          line: 103,
          column: 37
        }
      },
      "62": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 115,
          column: 13
        }
      },
      "63": {
        start: {
          line: 107,
          column: 16
        },
        end: {
          line: 107,
          column: 73
        }
      },
      "64": {
        start: {
          line: 109,
          column: 17
        },
        end: {
          line: 115,
          column: 13
        }
      },
      "65": {
        start: {
          line: 110,
          column: 33
        },
        end: {
          line: 110,
          column: 50
        }
      },
      "66": {
        start: {
          line: 111,
          column: 16
        },
        end: {
          line: 111,
          column: 67
        }
      },
      "67": {
        start: {
          line: 113,
          column: 17
        },
        end: {
          line: 115,
          column: 13
        }
      },
      "68": {
        start: {
          line: 114,
          column: 16
        },
        end: {
          line: 114,
          column: 41
        }
      },
      "69": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 116,
          column: 25
        }
      },
      "70": {
        start: {
          line: 119,
          column: 12
        },
        end: {
          line: 119,
          column: 81
        }
      },
      "71": {
        start: {
          line: 120,
          column: 12
        },
        end: {
          line: 120,
          column: 32
        }
      },
      "72": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 127,
          column: 32
        }
      },
      "73": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 131,
          column: 9
        }
      },
      "74": {
        start: {
          line: 129,
          column: 12
        },
        end: {
          line: 129,
          column: 66
        }
      },
      "75": {
        start: {
          line: 130,
          column: 12
        },
        end: {
          line: 130,
          column: 107
        }
      },
      "76": {
        start: {
          line: 130,
          column: 46
        },
        end: {
          line: 130,
          column: 100
        }
      },
      "77": {
        start: {
          line: 132,
          column: 8
        },
        end: {
          line: 149,
          column: 9
        }
      },
      "78": {
        start: {
          line: 133,
          column: 28
        },
        end: {
          line: 133,
          column: 30
        }
      },
      "79": {
        start: {
          line: 135,
          column: 29
        },
        end: {
          line: 138,
          column: 14
        }
      },
      "80": {
        start: {
          line: 136,
          column: 30
        },
        end: {
          line: 136,
          column: 67
        }
      },
      "81": {
        start: {
          line: 137,
          column: 16
        },
        end: {
          line: 137,
          column: 37
        }
      },
      "82": {
        start: {
          line: 139,
          column: 12
        },
        end: {
          line: 139,
          column: 40
        }
      },
      "83": {
        start: {
          line: 140,
          column: 12
        },
        end: {
          line: 140,
          column: 27
        }
      },
      "84": {
        start: {
          line: 143,
          column: 12
        },
        end: {
          line: 143,
          column: 74
        }
      },
      "85": {
        start: {
          line: 144,
          column: 12
        },
        end: {
          line: 147,
          column: 32
        }
      },
      "86": {
        start: {
          line: 148,
          column: 12
        },
        end: {
          line: 148,
          column: 107
        }
      },
      "87": {
        start: {
          line: 148,
          column: 46
        },
        end: {
          line: 148,
          column: 100
        }
      },
      "88": {
        start: {
          line: 156,
          column: 8
        },
        end: {
          line: 156,
          column: 32
        }
      },
      "89": {
        start: {
          line: 157,
          column: 8
        },
        end: {
          line: 160,
          column: 9
        }
      },
      "90": {
        start: {
          line: 158,
          column: 12
        },
        end: {
          line: 158,
          column: 66
        }
      },
      "91": {
        start: {
          line: 159,
          column: 12
        },
        end: {
          line: 159,
          column: 25
        }
      },
      "92": {
        start: {
          line: 161,
          column: 25
        },
        end: {
          line: 161,
          column: 99
        }
      },
      "93": {
        start: {
          line: 163,
          column: 8
        },
        end: {
          line: 171,
          column: 9
        }
      },
      "94": {
        start: {
          line: 164,
          column: 27
        },
        end: {
          line: 164,
          column: 51
        }
      },
      "95": {
        start: {
          line: 165,
          column: 12
        },
        end: {
          line: 170,
          column: 13
        }
      },
      "96": {
        start: {
          line: 166,
          column: 16
        },
        end: {
          line: 166,
          column: 36
        }
      },
      "97": {
        start: {
          line: 169,
          column: 16
        },
        end: {
          line: 169,
          column: 44
        }
      },
      "98": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 217,
          column: 9
        }
      },
      "99": {
        start: {
          line: 174,
          column: 35
        },
        end: {
          line: 174,
          column: 71
        }
      },
      "100": {
        start: {
          line: 175,
          column: 28
        },
        end: {
          line: 175,
          column: 94
        }
      },
      "101": {
        start: {
          line: 176,
          column: 12
        },
        end: {
          line: 178,
          column: 13
        }
      },
      "102": {
        start: {
          line: 177,
          column: 16
        },
        end: {
          line: 177,
          column: 29
        }
      },
      "103": {
        start: {
          line: 179,
          column: 31
        },
        end: {
          line: 179,
          column: 56
        }
      },
      "104": {
        start: {
          line: 180,
          column: 26
        },
        end: {
          line: 180,
          column: 53
        }
      },
      "105": {
        start: {
          line: 182,
          column: 12
        },
        end: {
          line: 201,
          column: 13
        }
      },
      "106": {
        start: {
          line: 184,
          column: 16
        },
        end: {
          line: 200,
          column: 17
        }
      },
      "107": {
        start: {
          line: 185,
          column: 20
        },
        end: {
          line: 199,
          column: 21
        }
      },
      "108": {
        start: {
          line: 186,
          column: 24
        },
        end: {
          line: 198,
          column: 25
        }
      },
      "109": {
        start: {
          line: 187,
          column: 43
        },
        end: {
          line: 187,
          column: 60
        }
      },
      "110": {
        start: {
          line: 189,
          column: 28
        },
        end: {
          line: 191,
          column: 29
        }
      },
      "111": {
        start: {
          line: 190,
          column: 32
        },
        end: {
          line: 190,
          column: 87
        }
      },
      "112": {
        start: {
          line: 193,
          column: 28
        },
        end: {
          line: 197,
          column: 29
        }
      },
      "113": {
        start: {
          line: 194,
          column: 51
        },
        end: {
          line: 194,
          column: 91
        }
      },
      "114": {
        start: {
          line: 195,
          column: 45
        },
        end: {
          line: 195,
          column: 83
        }
      },
      "115": {
        start: {
          line: 196,
          column: 32
        },
        end: {
          line: 196,
          column: 68
        }
      },
      "116": {
        start: {
          line: 203,
          column: 12
        },
        end: {
          line: 207,
          column: 15
        }
      },
      "117": {
        start: {
          line: 208,
          column: 12
        },
        end: {
          line: 208,
          column: 27
        }
      },
      "118": {
        start: {
          line: 211,
          column: 12
        },
        end: {
          line: 211,
          column: 78
        }
      },
      "119": {
        start: {
          line: 212,
          column: 12
        },
        end: {
          line: 215,
          column: 50
        }
      },
      "120": {
        start: {
          line: 216,
          column: 12
        },
        end: {
          line: 216,
          column: 25
        }
      },
      "121": {
        start: {
          line: 224,
          column: 8
        },
        end: {
          line: 224,
          column: 32
        }
      },
      "122": {
        start: {
          line: 225,
          column: 8
        },
        end: {
          line: 228,
          column: 9
        }
      },
      "123": {
        start: {
          line: 226,
          column: 12
        },
        end: {
          line: 226,
          column: 66
        }
      },
      "124": {
        start: {
          line: 227,
          column: 12
        },
        end: {
          line: 227,
          column: 22
        }
      },
      "125": {
        start: {
          line: 229,
          column: 8
        },
        end: {
          line: 262,
          column: 9
        }
      },
      "126": {
        start: {
          line: 230,
          column: 28
        },
        end: {
          line: 230,
          column: 30
        }
      },
      "127": {
        start: {
          line: 232,
          column: 37
        },
        end: {
          line: 235,
          column: 14
        }
      },
      "128": {
        start: {
          line: 236,
          column: 12
        },
        end: {
          line: 252,
          column: 13
        }
      },
      "129": {
        start: {
          line: 237,
          column: 16
        },
        end: {
          line: 244,
          column: 17
        }
      },
      "130": {
        start: {
          line: 237,
          column: 30
        },
        end: {
          line: 237,
          column: 34
        }
      },
      "131": {
        start: {
          line: 237,
          column: 57
        },
        end: {
          line: 237,
          column: 88
        }
      },
      "132": {
        start: {
          line: 238,
          column: 20
        },
        end: {
          line: 238,
          column: 52
        }
      },
      "133": {
        start: {
          line: 239,
          column: 20
        },
        end: {
          line: 239,
          column: 31
        }
      },
      "134": {
        start: {
          line: 240,
          column: 36
        },
        end: {
          line: 240,
          column: 38
        }
      },
      "135": {
        start: {
          line: 241,
          column: 20
        },
        end: {
          line: 243,
          column: 21
        }
      },
      "136": {
        start: {
          line: 242,
          column: 24
        },
        end: {
          line: 242,
          column: 61
        }
      },
      "137": {
        start: {
          line: 246,
          column: 28
        },
        end: {
          line: 246,
          column: 51
        }
      },
      "138": {
        start: {
          line: 248,
          column: 16
        },
        end: {
          line: 251,
          column: 53
        }
      },
      "139": {
        start: {
          line: 249,
          column: 20
        },
        end: {
          line: 249,
          column: 106
        }
      },
      "140": {
        start: {
          line: 249,
          column: 72
        },
        end: {
          line: 249,
          column: 106
        }
      },
      "141": {
        start: {
          line: 251,
          column: 26
        },
        end: {
          line: 251,
          column: 51
        }
      },
      "142": {
        start: {
          line: 251,
          column: 35
        },
        end: {
          line: 251,
          column: 51
        }
      },
      "143": {
        start: {
          line: 253,
          column: 12
        },
        end: {
          line: 253,
          column: 27
        }
      },
      "144": {
        start: {
          line: 256,
          column: 12
        },
        end: {
          line: 256,
          column: 84
        }
      },
      "145": {
        start: {
          line: 257,
          column: 12
        },
        end: {
          line: 260,
          column: 37
        }
      },
      "146": {
        start: {
          line: 261,
          column: 12
        },
        end: {
          line: 261,
          column: 22
        }
      },
      "147": {
        start: {
          line: 268,
          column: 8
        },
        end: {
          line: 268,
          column: 32
        }
      },
      "148": {
        start: {
          line: 269,
          column: 8
        },
        end: {
          line: 271,
          column: 9
        }
      },
      "149": {
        start: {
          line: 270,
          column: 12
        },
        end: {
          line: 270,
          column: 69
        }
      },
      "150": {
        start: {
          line: 272,
          column: 8
        },
        end: {
          line: 291,
          column: 9
        }
      },
      "151": {
        start: {
          line: 273,
          column: 12
        },
        end: {
          line: 278,
          column: 15
        }
      },
      "152": {
        start: {
          line: 280,
          column: 29
        },
        end: {
          line: 280,
          column: 66
        }
      },
      "153": {
        start: {
          line: 281,
          column: 12
        },
        end: {
          line: 281,
          column: 40
        }
      },
      "154": {
        start: {
          line: 282,
          column: 12
        },
        end: {
          line: 282,
          column: 62
        }
      },
      "155": {
        start: {
          line: 285,
          column: 12
        },
        end: {
          line: 285,
          column: 79
        }
      },
      "156": {
        start: {
          line: 286,
          column: 12
        },
        end: {
          line: 289,
          column: 31
        }
      },
      "157": {
        start: {
          line: 290,
          column: 12
        },
        end: {
          line: 290,
          column: 24
        }
      },
      "158": {
        start: {
          line: 297,
          column: 8
        },
        end: {
          line: 297,
          column: 32
        }
      },
      "159": {
        start: {
          line: 298,
          column: 8
        },
        end: {
          line: 300,
          column: 9
        }
      },
      "160": {
        start: {
          line: 299,
          column: 12
        },
        end: {
          line: 299,
          column: 69
        }
      },
      "161": {
        start: {
          line: 301,
          column: 8
        },
        end: {
          line: 315,
          column: 9
        }
      },
      "162": {
        start: {
          line: 302,
          column: 12
        },
        end: {
          line: 302,
          column: 73
        }
      },
      "163": {
        start: {
          line: 304,
          column: 29
        },
        end: {
          line: 304,
          column: 66
        }
      },
      "164": {
        start: {
          line: 305,
          column: 12
        },
        end: {
          line: 305,
          column: 40
        }
      },
      "165": {
        start: {
          line: 306,
          column: 12
        },
        end: {
          line: 306,
          column: 66
        }
      },
      "166": {
        start: {
          line: 309,
          column: 12
        },
        end: {
          line: 309,
          column: 82
        }
      },
      "167": {
        start: {
          line: 310,
          column: 12
        },
        end: {
          line: 313,
          column: 31
        }
      },
      "168": {
        start: {
          line: 314,
          column: 12
        },
        end: {
          line: 314,
          column: 24
        }
      },
      "169": {
        start: {
          line: 321,
          column: 28
        },
        end: {
          line: 330,
          column: 9
        }
      },
      "170": {
        start: {
          line: 331,
          column: 22
        },
        end: {
          line: 331,
          column: 24
        }
      },
      "171": {
        start: {
          line: 332,
          column: 8
        },
        end: {
          line: 334,
          column: 12
        }
      },
      "172": {
        start: {
          line: 333,
          column: 12
        },
        end: {
          line: 333,
          column: 60
        }
      },
      "173": {
        start: {
          line: 335,
          column: 8
        },
        end: {
          line: 335,
          column: 21
        }
      },
      "174": {
        start: {
          line: 341,
          column: 27
        },
        end: {
          line: 350,
          column: 9
        }
      },
      "175": {
        start: {
          line: 351,
          column: 23
        },
        end: {
          line: 351,
          column: 25
        }
      },
      "176": {
        start: {
          line: 352,
          column: 8
        },
        end: {
          line: 367,
          column: 12
        }
      },
      "177": {
        start: {
          line: 353,
          column: 26
        },
        end: {
          line: 353,
          column: 56
        }
      },
      "178": {
        start: {
          line: 355,
          column: 12
        },
        end: {
          line: 366,
          column: 13
        }
      },
      "179": {
        start: {
          line: 356,
          column: 16
        },
        end: {
          line: 356,
          column: 87
        }
      },
      "180": {
        start: {
          line: 358,
          column: 17
        },
        end: {
          line: 366,
          column: 13
        }
      },
      "181": {
        start: {
          line: 359,
          column: 16
        },
        end: {
          line: 359,
          column: 109
        }
      },
      "182": {
        start: {
          line: 361,
          column: 17
        },
        end: {
          line: 366,
          column: 13
        }
      },
      "183": {
        start: {
          line: 362,
          column: 16
        },
        end: {
          line: 362,
          column: 81
        }
      },
      "184": {
        start: {
          line: 365,
          column: 16
        },
        end: {
          line: 365,
          column: 52
        }
      },
      "185": {
        start: {
          line: 368,
          column: 8
        },
        end: {
          line: 368,
          column: 22
        }
      },
      "186": {
        start: {
          line: 374,
          column: 8
        },
        end: {
          line: 374,
          column: 27
        }
      },
      "187": {
        start: {
          line: 375,
          column: 8
        },
        end: {
          line: 375,
          column: 63
        }
      },
      "188": {
        start: {
          line: 381,
          column: 19
        },
        end: {
          line: 381,
          column: 20
        }
      },
      "189": {
        start: {
          line: 382,
          column: 8
        },
        end: {
          line: 386,
          column: 9
        }
      },
      "190": {
        start: {
          line: 382,
          column: 21
        },
        end: {
          line: 382,
          column: 22
        }
      },
      "191": {
        start: {
          line: 383,
          column: 25
        },
        end: {
          line: 383,
          column: 45
        }
      },
      "192": {
        start: {
          line: 384,
          column: 12
        },
        end: {
          line: 384,
          column: 47
        }
      },
      "193": {
        start: {
          line: 385,
          column: 12
        },
        end: {
          line: 385,
          column: 31
        }
      },
      "194": {
        start: {
          line: 387,
          column: 8
        },
        end: {
          line: 387,
          column: 30
        }
      },
      "195": {
        start: {
          line: 393,
          column: 8
        },
        end: {
          line: 413,
          column: 9
        }
      },
      "196": {
        start: {
          line: 394,
          column: 12
        },
        end: {
          line: 394,
          column: 36
        }
      },
      "197": {
        start: {
          line: 395,
          column: 12
        },
        end: {
          line: 397,
          column: 13
        }
      },
      "198": {
        start: {
          line: 396,
          column: 16
        },
        end: {
          line: 396,
          column: 70
        }
      },
      "199": {
        start: {
          line: 399,
          column: 12
        },
        end: {
          line: 407,
          column: 13
        }
      },
      "200": {
        start: {
          line: 400,
          column: 16
        },
        end: {
          line: 400,
          column: 82
        }
      },
      "201": {
        start: {
          line: 404,
          column: 16
        },
        end: {
          line: 406,
          column: 17
        }
      },
      "202": {
        start: {
          line: 405,
          column: 20
        },
        end: {
          line: 405,
          column: 32
        }
      },
      "203": {
        start: {
          line: 408,
          column: 12
        },
        end: {
          line: 408,
          column: 64
        }
      },
      "204": {
        start: {
          line: 411,
          column: 12
        },
        end: {
          line: 411,
          column: 81
        }
      },
      "205": {
        start: {
          line: 412,
          column: 12
        },
        end: {
          line: 412,
          column: 66
        }
      },
      "206": {
        start: {
          line: 417,
          column: 0
        },
        end: {
          line: 417,
          column: 60
        }
      },
      "207": {
        start: {
          line: 418,
          column: 0
        },
        end: {
          line: 418,
          column: 48
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 52
          },
          end: {
            line: 2,
            column: 53
          }
        },
        loc: {
          start: {
            line: 2,
            column: 65
          },
          end: {
            line: 8,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 5,
            column: 180
          },
          end: {
            line: 5,
            column: 181
          }
        },
        loc: {
          start: {
            line: 5,
            column: 192
          },
          end: {
            line: 5,
            column: 208
          }
        },
        line: 5
      },
      "2": {
        name: "verb",
        decl: {
          start: {
            line: 6,
            column: 13
          },
          end: {
            line: 6,
            column: 17
          }
        },
        loc: {
          start: {
            line: 6,
            column: 21
          },
          end: {
            line: 6,
            column: 164
          }
        },
        line: 6
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 6,
            column: 38
          },
          end: {
            line: 6,
            column: 39
          }
        },
        loc: {
          start: {
            line: 6,
            column: 51
          },
          end: {
            line: 6,
            column: 161
          }
        },
        line: 6
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 6,
            column: 72
          },
          end: {
            line: 6,
            column: 73
          }
        },
        loc: {
          start: {
            line: 6,
            column: 99
          },
          end: {
            line: 6,
            column: 157
          }
        },
        line: 6
      },
      "5": {
        name: "settle",
        decl: {
          start: {
            line: 7,
            column: 13
          },
          end: {
            line: 7,
            column: 19
          }
        },
        loc: {
          start: {
            line: 7,
            column: 43
          },
          end: {
            line: 7,
            column: 128
          }
        },
        line: 7
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 7,
            column: 69
          },
          end: {
            line: 7,
            column: 70
          }
        },
        loc: {
          start: {
            line: 7,
            column: 81
          },
          end: {
            line: 7,
            column: 116
          }
        },
        line: 7
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 18
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 15
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 23
          },
          end: {
            line: 50,
            column: 5
          }
        },
        line: 22
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 54,
            column: 4
          },
          end: {
            line: 54,
            column: 5
          }
        },
        loc: {
          start: {
            line: 54,
            column: 54
          },
          end: {
            line: 92,
            column: 5
          }
        },
        line: 54
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 96,
            column: 4
          },
          end: {
            line: 96,
            column: 5
          }
        },
        loc: {
          start: {
            line: 96,
            column: 61
          },
          end: {
            line: 122,
            column: 5
          }
        },
        line: 96
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 126,
            column: 4
          },
          end: {
            line: 126,
            column: 5
          }
        },
        loc: {
          start: {
            line: 126,
            column: 47
          },
          end: {
            line: 150,
            column: 5
          }
        },
        line: 126
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 130,
            column: 31
          },
          end: {
            line: 130,
            column: 32
          }
        },
        loc: {
          start: {
            line: 130,
            column: 46
          },
          end: {
            line: 130,
            column: 100
          }
        },
        line: 130
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 135,
            column: 38
          },
          end: {
            line: 135,
            column: 39
          }
        },
        loc: {
          start: {
            line: 135,
            column: 53
          },
          end: {
            line: 138,
            column: 13
          }
        },
        line: 135
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 148,
            column: 31
          },
          end: {
            line: 148,
            column: 32
          }
        },
        loc: {
          start: {
            line: 148,
            column: 46
          },
          end: {
            line: 148,
            column: 100
          }
        },
        line: 148
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 154,
            column: 4
          },
          end: {
            line: 154,
            column: 5
          }
        },
        loc: {
          start: {
            line: 154,
            column: 58
          },
          end: {
            line: 218,
            column: 5
          }
        },
        line: 154
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 222,
            column: 4
          },
          end: {
            line: 222,
            column: 5
          }
        },
        loc: {
          start: {
            line: 222,
            column: 47
          },
          end: {
            line: 263,
            column: 5
          }
        },
        line: 222
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 267,
            column: 4
          },
          end: {
            line: 267,
            column: 5
          }
        },
        loc: {
          start: {
            line: 267,
            column: 57
          },
          end: {
            line: 292,
            column: 5
          }
        },
        line: 267
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 296,
            column: 4
          },
          end: {
            line: 296,
            column: 5
          }
        },
        loc: {
          start: {
            line: 296,
            column: 40
          },
          end: {
            line: 316,
            column: 5
          }
        },
        line: 296
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 320,
            column: 4
          },
          end: {
            line: 320,
            column: 5
          }
        },
        loc: {
          start: {
            line: 320,
            column: 28
          },
          end: {
            line: 336,
            column: 5
          }
        },
        line: 320
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 332,
            column: 42
          },
          end: {
            line: 332,
            column: 43
          }
        },
        loc: {
          start: {
            line: 332,
            column: 58
          },
          end: {
            line: 334,
            column: 9
          }
        },
        line: 332
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 340,
            column: 4
          },
          end: {
            line: 340,
            column: 5
          }
        },
        loc: {
          start: {
            line: 340,
            column: 25
          },
          end: {
            line: 369,
            column: 5
          }
        },
        line: 340
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 352,
            column: 57
          },
          end: {
            line: 352,
            column: 58
          }
        },
        loc: {
          start: {
            line: 352,
            column: 88
          },
          end: {
            line: 367,
            column: 9
          }
        },
        line: 352
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 373,
            column: 4
          },
          end: {
            line: 373,
            column: 5
          }
        },
        loc: {
          start: {
            line: 373,
            column: 17
          },
          end: {
            line: 376,
            column: 5
          }
        },
        line: 373
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 380,
            column: 4
          },
          end: {
            line: 380,
            column: 5
          }
        },
        loc: {
          start: {
            line: 380,
            column: 23
          },
          end: {
            line: 388,
            column: 5
          }
        },
        line: 380
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 392,
            column: 4
          },
          end: {
            line: 392,
            column: 5
          }
        },
        loc: {
          start: {
            line: 392,
            column: 24
          },
          end: {
            line: 414,
            column: 5
          }
        },
        line: 392
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 20
          },
          end: {
            line: 8,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 21
          },
          end: {
            line: 2,
            column: 25
          }
        }, {
          start: {
            line: 2,
            column: 29
          },
          end: {
            line: 2,
            column: 47
          }
        }, {
          start: {
            line: 2,
            column: 52
          },
          end: {
            line: 8,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 91
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 91
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 5,
            column: 11
          },
          end: {
            line: 5,
            column: 212
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 15
          },
          end: {
            line: 5,
            column: 24
          }
        }, {
          start: {
            line: 5,
            column: 28
          },
          end: {
            line: 5,
            column: 211
          }
        }],
        line: 5
      },
      "3": {
        loc: {
          start: {
            line: 5,
            column: 32
          },
          end: {
            line: 5,
            column: 99
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 65
          },
          end: {
            line: 5,
            column: 76
          }
        }, {
          start: {
            line: 5,
            column: 79
          },
          end: {
            line: 5,
            column: 99
          }
        }],
        line: 5
      },
      "4": {
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 6,
            column: 161
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 6,
            column: 34
          }
        }, {
          start: {
            line: 6,
            column: 38
          },
          end: {
            line: 6,
            column: 161
          }
        }],
        line: 6
      },
      "5": {
        loc: {
          start: {
            line: 20,
            column: 32
          },
          end: {
            line: 20,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 20,
            column: 32
          },
          end: {
            line: 20,
            column: 78
          }
        }, {
          start: {
            line: 20,
            column: 82
          },
          end: {
            line: 20,
            column: 84
          }
        }],
        line: 20
      },
      "6": {
        loc: {
          start: {
            line: 23,
            column: 8
          },
          end: {
            line: 24,
            column: 19
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 23,
            column: 8
          },
          end: {
            line: 24,
            column: 19
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 23
      },
      "7": {
        loc: {
          start: {
            line: 26,
            column: 12
          },
          end: {
            line: 42,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 26,
            column: 12
          },
          end: {
            line: 42,
            column: 13
          }
        }, {
          start: {
            line: 38,
            column: 17
          },
          end: {
            line: 42,
            column: 13
          }
        }],
        line: 26
      },
      "8": {
        loc: {
          start: {
            line: 28,
            column: 16
          },
          end: {
            line: 36,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 16
          },
          end: {
            line: 36,
            column: 17
          }
        }, {
          start: {
            line: 33,
            column: 21
          },
          end: {
            line: 36,
            column: 17
          }
        }],
        line: 28
      },
      "9": {
        loc: {
          start: {
            line: 54,
            column: 37
          },
          end: {
            line: 54,
            column: 52
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 54,
            column: 48
          },
          end: {
            line: 54,
            column: 52
          }
        }],
        line: 54
      },
      "10": {
        loc: {
          start: {
            line: 56,
            column: 8
          },
          end: {
            line: 59,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 8
          },
          end: {
            line: 59,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 56
      },
      "11": {
        loc: {
          start: {
            line: 60,
            column: 42
          },
          end: {
            line: 60,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 60,
            column: 42
          },
          end: {
            line: 60,
            column: 47
          }
        }, {
          start: {
            line: 60,
            column: 51
          },
          end: {
            line: 60,
            column: 60
          }
        }],
        line: 60
      },
      "12": {
        loc: {
          start: {
            line: 62,
            column: 8
          },
          end: {
            line: 70,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 62,
            column: 8
          },
          end: {
            line: 70,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 62
      },
      "13": {
        loc: {
          start: {
            line: 62,
            column: 12
          },
          end: {
            line: 62,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 62,
            column: 12
          },
          end: {
            line: 62,
            column: 20
          }
        }, {
          start: {
            line: 62,
            column: 24
          },
          end: {
            line: 62,
            column: 48
          }
        }],
        line: 62
      },
      "14": {
        loc: {
          start: {
            line: 64,
            column: 12
          },
          end: {
            line: 69,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 64,
            column: 12
          },
          end: {
            line: 69,
            column: 13
          }
        }, {
          start: {
            line: 67,
            column: 17
          },
          end: {
            line: 69,
            column: 13
          }
        }],
        line: 64
      },
      "15": {
        loc: {
          start: {
            line: 73,
            column: 26
          },
          end: {
            line: 73,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 73,
            column: 26
          },
          end: {
            line: 73,
            column: 39
          }
        }, {
          start: {
            line: 73,
            column: 43
          },
          end: {
            line: 73,
            column: 47
          }
        }],
        line: 73
      },
      "16": {
        loc: {
          start: {
            line: 75,
            column: 12
          },
          end: {
            line: 81,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 75,
            column: 12
          },
          end: {
            line: 81,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 75
      },
      "17": {
        loc: {
          start: {
            line: 98,
            column: 8
          },
          end: {
            line: 100,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 98,
            column: 8
          },
          end: {
            line: 100,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 98
      },
      "18": {
        loc: {
          start: {
            line: 102,
            column: 12
          },
          end: {
            line: 104,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 102,
            column: 12
          },
          end: {
            line: 104,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 102
      },
      "19": {
        loc: {
          start: {
            line: 106,
            column: 12
          },
          end: {
            line: 115,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 106,
            column: 12
          },
          end: {
            line: 115,
            column: 13
          }
        }, {
          start: {
            line: 109,
            column: 17
          },
          end: {
            line: 115,
            column: 13
          }
        }],
        line: 106
      },
      "20": {
        loc: {
          start: {
            line: 107,
            column: 24
          },
          end: {
            line: 107,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 107,
            column: 24
          },
          end: {
            line: 107,
            column: 54
          }
        }, {
          start: {
            line: 107,
            column: 58
          },
          end: {
            line: 107,
            column: 71
          }
        }],
        line: 107
      },
      "21": {
        loc: {
          start: {
            line: 109,
            column: 17
          },
          end: {
            line: 115,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 109,
            column: 17
          },
          end: {
            line: 115,
            column: 13
          }
        }, {
          start: {
            line: 113,
            column: 17
          },
          end: {
            line: 115,
            column: 13
          }
        }],
        line: 109
      },
      "22": {
        loc: {
          start: {
            line: 111,
            column: 24
          },
          end: {
            line: 111,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 111,
            column: 42
          },
          end: {
            line: 111,
            column: 54
          }
        }, {
          start: {
            line: 111,
            column: 57
          },
          end: {
            line: 111,
            column: 65
          }
        }],
        line: 111
      },
      "23": {
        loc: {
          start: {
            line: 113,
            column: 17
          },
          end: {
            line: 115,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 113,
            column: 17
          },
          end: {
            line: 115,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 113
      },
      "24": {
        loc: {
          start: {
            line: 128,
            column: 8
          },
          end: {
            line: 131,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 128,
            column: 8
          },
          end: {
            line: 131,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 128
      },
      "25": {
        loc: {
          start: {
            line: 157,
            column: 8
          },
          end: {
            line: 160,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 157,
            column: 8
          },
          end: {
            line: 160,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 157
      },
      "26": {
        loc: {
          start: {
            line: 161,
            column: 48
          },
          end: {
            line: 161,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 161,
            column: 48
          },
          end: {
            line: 161,
            column: 54
          }
        }, {
          start: {
            line: 161,
            column: 58
          },
          end: {
            line: 161,
            column: 69
          }
        }],
        line: 161
      },
      "27": {
        loc: {
          start: {
            line: 161,
            column: 73
          },
          end: {
            line: 161,
            column: 97
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 161,
            column: 73
          },
          end: {
            line: 161,
            column: 84
          }
        }, {
          start: {
            line: 161,
            column: 88
          },
          end: {
            line: 161,
            column: 97
          }
        }],
        line: 161
      },
      "28": {
        loc: {
          start: {
            line: 163,
            column: 8
          },
          end: {
            line: 171,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 163,
            column: 8
          },
          end: {
            line: 171,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 163
      },
      "29": {
        loc: {
          start: {
            line: 165,
            column: 12
          },
          end: {
            line: 170,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 165,
            column: 12
          },
          end: {
            line: 170,
            column: 13
          }
        }, {
          start: {
            line: 168,
            column: 17
          },
          end: {
            line: 170,
            column: 13
          }
        }],
        line: 165
      },
      "30": {
        loc: {
          start: {
            line: 176,
            column: 12
          },
          end: {
            line: 178,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 176,
            column: 12
          },
          end: {
            line: 178,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 176
      },
      "31": {
        loc: {
          start: {
            line: 180,
            column: 26
          },
          end: {
            line: 180,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 180,
            column: 26
          },
          end: {
            line: 180,
            column: 44
          }
        }, {
          start: {
            line: 180,
            column: 48
          },
          end: {
            line: 180,
            column: 53
          }
        }],
        line: 180
      },
      "32": {
        loc: {
          start: {
            line: 182,
            column: 12
          },
          end: {
            line: 201,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 182,
            column: 12
          },
          end: {
            line: 201,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 182
      },
      "33": {
        loc: {
          start: {
            line: 182,
            column: 16
          },
          end: {
            line: 182,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 182,
            column: 16
          },
          end: {
            line: 182,
            column: 23
          }
        }, {
          start: {
            line: 182,
            column: 27
          },
          end: {
            line: 182,
            column: 48
          }
        }],
        line: 182
      },
      "34": {
        loc: {
          start: {
            line: 184,
            column: 16
          },
          end: {
            line: 200,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 184,
            column: 16
          },
          end: {
            line: 200,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 184
      },
      "35": {
        loc: {
          start: {
            line: 186,
            column: 24
          },
          end: {
            line: 198,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 186,
            column: 24
          },
          end: {
            line: 198,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 186
      },
      "36": {
        loc: {
          start: {
            line: 189,
            column: 28
          },
          end: {
            line: 191,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 189,
            column: 28
          },
          end: {
            line: 191,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 189
      },
      "37": {
        loc: {
          start: {
            line: 189,
            column: 32
          },
          end: {
            line: 189,
            column: 118
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 189,
            column: 32
          },
          end: {
            line: 189,
            column: 43
          }
        }, {
          start: {
            line: 189,
            column: 48
          },
          end: {
            line: 189,
            column: 117
          }
        }],
        line: 189
      },
      "38": {
        loc: {
          start: {
            line: 189,
            column: 48
          },
          end: {
            line: 189,
            column: 117
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 189,
            column: 99
          },
          end: {
            line: 189,
            column: 105
          }
        }, {
          start: {
            line: 189,
            column: 108
          },
          end: {
            line: 189,
            column: 117
          }
        }],
        line: 189
      },
      "39": {
        loc: {
          start: {
            line: 189,
            column: 48
          },
          end: {
            line: 189,
            column: 96
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 189,
            column: 48
          },
          end: {
            line: 189,
            column: 79
          }
        }, {
          start: {
            line: 189,
            column: 83
          },
          end: {
            line: 189,
            column: 96
          }
        }],
        line: 189
      },
      "40": {
        loc: {
          start: {
            line: 193,
            column: 28
          },
          end: {
            line: 197,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 193,
            column: 28
          },
          end: {
            line: 197,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 193
      },
      "41": {
        loc: {
          start: {
            line: 193,
            column: 33
          },
          end: {
            line: 193,
            column: 120
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 193,
            column: 84
          },
          end: {
            line: 193,
            column: 90
          }
        }, {
          start: {
            line: 193,
            column: 93
          },
          end: {
            line: 193,
            column: 120
          }
        }],
        line: 193
      },
      "42": {
        loc: {
          start: {
            line: 193,
            column: 33
          },
          end: {
            line: 193,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 193,
            column: 33
          },
          end: {
            line: 193,
            column: 64
          }
        }, {
          start: {
            line: 193,
            column: 68
          },
          end: {
            line: 193,
            column: 81
          }
        }],
        line: 193
      },
      "43": {
        loc: {
          start: {
            line: 195,
            column: 61
          },
          end: {
            line: 195,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 195,
            column: 61
          },
          end: {
            line: 195,
            column: 67
          }
        }, {
          start: {
            line: 195,
            column: 71
          },
          end: {
            line: 195,
            column: 82
          }
        }],
        line: 195
      },
      "44": {
        loc: {
          start: {
            line: 225,
            column: 8
          },
          end: {
            line: 228,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 225,
            column: 8
          },
          end: {
            line: 228,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 225
      },
      "45": {
        loc: {
          start: {
            line: 241,
            column: 20
          },
          end: {
            line: 243,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 241,
            column: 20
          },
          end: {
            line: 243,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 241
      },
      "46": {
        loc: {
          start: {
            line: 241,
            column: 24
          },
          end: {
            line: 241,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 241,
            column: 24
          },
          end: {
            line: 241,
            column: 35
          }
        }, {
          start: {
            line: 241,
            column: 39
          },
          end: {
            line: 241,
            column: 66
          }
        }],
        line: 241
      },
      "47": {
        loc: {
          start: {
            line: 249,
            column: 20
          },
          end: {
            line: 249,
            column: 106
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 249,
            column: 20
          },
          end: {
            line: 249,
            column: 106
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 249
      },
      "48": {
        loc: {
          start: {
            line: 249,
            column: 24
          },
          end: {
            line: 249,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 249,
            column: 24
          },
          end: {
            line: 249,
            column: 27
          }
        }, {
          start: {
            line: 249,
            column: 31
          },
          end: {
            line: 249,
            column: 34
          }
        }, {
          start: {
            line: 249,
            column: 39
          },
          end: {
            line: 249,
            column: 69
          }
        }],
        line: 249
      },
      "49": {
        loc: {
          start: {
            line: 251,
            column: 26
          },
          end: {
            line: 251,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 251,
            column: 26
          },
          end: {
            line: 251,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 251
      },
      "50": {
        loc: {
          start: {
            line: 269,
            column: 8
          },
          end: {
            line: 271,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 269,
            column: 8
          },
          end: {
            line: 271,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 269
      },
      "51": {
        loc: {
          start: {
            line: 280,
            column: 46
          },
          end: {
            line: 280,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 280,
            column: 46
          },
          end: {
            line: 280,
            column: 51
          }
        }, {
          start: {
            line: 280,
            column: 55
          },
          end: {
            line: 280,
            column: 64
          }
        }],
        line: 280
      },
      "52": {
        loc: {
          start: {
            line: 298,
            column: 8
          },
          end: {
            line: 300,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 298,
            column: 8
          },
          end: {
            line: 300,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 298
      },
      "53": {
        loc: {
          start: {
            line: 304,
            column: 46
          },
          end: {
            line: 304,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 304,
            column: 46
          },
          end: {
            line: 304,
            column: 51
          }
        }, {
          start: {
            line: 304,
            column: 55
          },
          end: {
            line: 304,
            column: 64
          }
        }],
        line: 304
      },
      "54": {
        loc: {
          start: {
            line: 355,
            column: 12
          },
          end: {
            line: 366,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 355,
            column: 12
          },
          end: {
            line: 366,
            column: 13
          }
        }, {
          start: {
            line: 358,
            column: 17
          },
          end: {
            line: 366,
            column: 13
          }
        }],
        line: 355
      },
      "55": {
        loc: {
          start: {
            line: 355,
            column: 16
          },
          end: {
            line: 355,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 355,
            column: 16
          },
          end: {
            line: 355,
            column: 36
          }
        }, {
          start: {
            line: 355,
            column: 40
          },
          end: {
            line: 355,
            column: 63
          }
        }, {
          start: {
            line: 355,
            column: 67
          },
          end: {
            line: 355,
            column: 88
          }
        }],
        line: 355
      },
      "56": {
        loc: {
          start: {
            line: 356,
            column: 30
          },
          end: {
            line: 356,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 356,
            column: 38
          },
          end: {
            line: 356,
            column: 57
          }
        }, {
          start: {
            line: 356,
            column: 60
          },
          end: {
            line: 356,
            column: 86
          }
        }],
        line: 356
      },
      "57": {
        loc: {
          start: {
            line: 358,
            column: 17
          },
          end: {
            line: 366,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 358,
            column: 17
          },
          end: {
            line: 366,
            column: 13
          }
        }, {
          start: {
            line: 361,
            column: 17
          },
          end: {
            line: 366,
            column: 13
          }
        }],
        line: 358
      },
      "58": {
        loc: {
          start: {
            line: 358,
            column: 21
          },
          end: {
            line: 358,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 358,
            column: 21
          },
          end: {
            line: 358,
            column: 43
          }
        }, {
          start: {
            line: 358,
            column: 47
          },
          end: {
            line: 358,
            column: 69
          }
        }],
        line: 358
      },
      "59": {
        loc: {
          start: {
            line: 359,
            column: 30
          },
          end: {
            line: 359,
            column: 108
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 359,
            column: 38
          },
          end: {
            line: 359,
            column: 68
          }
        }, {
          start: {
            line: 359,
            column: 71
          },
          end: {
            line: 359,
            column: 108
          }
        }],
        line: 359
      },
      "60": {
        loc: {
          start: {
            line: 361,
            column: 17
          },
          end: {
            line: 366,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 361,
            column: 17
          },
          end: {
            line: 366,
            column: 13
          }
        }, {
          start: {
            line: 364,
            column: 17
          },
          end: {
            line: 366,
            column: 13
          }
        }],
        line: 361
      },
      "61": {
        loc: {
          start: {
            line: 362,
            column: 30
          },
          end: {
            line: 362,
            column: 80
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 362,
            column: 38
          },
          end: {
            line: 362,
            column: 54
          }
        }, {
          start: {
            line: 362,
            column: 57
          },
          end: {
            line: 362,
            column: 80
          }
        }],
        line: 362
      },
      "62": {
        loc: {
          start: {
            line: 365,
            column: 30
          },
          end: {
            line: 365,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 365,
            column: 30
          },
          end: {
            line: 365,
            column: 35
          }
        }, {
          start: {
            line: 365,
            column: 39
          },
          end: {
            line: 365,
            column: 51
          }
        }],
        line: 365
      },
      "63": {
        loc: {
          start: {
            line: 395,
            column: 12
          },
          end: {
            line: 397,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 395,
            column: 12
          },
          end: {
            line: 397,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 395
      },
      "64": {
        loc: {
          start: {
            line: 404,
            column: 16
          },
          end: {
            line: 406,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 404,
            column: 16
          },
          end: {
            line: 406,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 404
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/dikshantvashistha/PrepBettr/lib/services/azure-app-config-service.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/dikshantvashistha/PrepBettr/lib/services/azure-app-config-service.ts"],
      sourcesContent: ["import { AppConfigurationClient } from '@azure/app-configuration';\nimport { DefaultAzureCredential } from '@azure/identity';\nimport { logServerError } from '@/lib/errors';\n\nexport interface FeatureFlag {\n  key: string;\n  enabled: boolean;\n  conditions?: {\n    userSegment?: string[];\n    percentage?: number;\n    timeWindow?: {\n      start: string;\n      end: string;\n    };\n  };\n}\n\nexport interface ConfigValue {\n  key: string;\n  value: string;\n  label?: string;\n  contentType?: string;\n}\n\nclass AzureAppConfigService {\n  private client: AppConfigurationClient | null = null;\n  private cache: Map<string, { value: any; timestamp: number; ttl: number }> = new Map();\n  private initialized = false;\n  private connectionString: string;\n  private defaultTTL = 5 * 60 * 1000; // 5 minutes cache TTL\n\n  constructor() {\n    this.connectionString = process.env.AZURE_APP_CONFIG_CONNECTION_STRING || '';\n  }\n\n  async initialize(): Promise<void> {\n    if (this.initialized) return;\n\n    try {\n      if (!this.connectionString) {\n        const endpoint = process.env.AZURE_APP_CONFIG_ENDPOINT;\n        if (endpoint) {\n          // Use managed identity\n          this.client = new AppConfigurationClient(endpoint, new DefaultAzureCredential());\n          console.log('\u2705 Azure App Configuration initialized with managed identity');\n        } else {\n          console.warn('\u26A0\uFE0F Azure App Configuration not configured - no connection string or endpoint provided');\n          return;\n        }\n      } else {\n        // Use connection string\n        this.client = new AppConfigurationClient(this.connectionString);\n        console.log('\u2705 Azure App Configuration initialized with connection string');\n      }\n\n      this.initialized = true;\n    } catch (error) {\n      console.error('\u274C Failed to initialize Azure App Configuration:', error);\n      logServerError(error as Error, { service: 'azure-app-config', action: 'initialize' });\n      throw error;\n    }\n  }\n\n  /**\n   * Get a configuration value\n   */\n  async getConfigValue(key: string, label?: string, useCache: boolean = true): Promise<string | null> {\n    await this.initialize();\n\n    if (!this.client) {\n      console.warn('Azure App Configuration not available');\n      return null;\n    }\n\n    const cacheKey = `config_${key}_${label || 'default'}`;\n\n    // Check cache first\n    if (useCache && this.cache.has(cacheKey)) {\n      const cached = this.cache.get(cacheKey)!;\n      if (Date.now() - cached.timestamp < cached.ttl) {\n        return cached.value;\n      } else {\n        this.cache.delete(cacheKey);\n      }\n    }\n\n    try {\n      const setting = await this.client.getConfigurationSetting({ key, label });\n      const value = setting.value || null;\n\n      // Cache the result\n      if (useCache) {\n        this.cache.set(cacheKey, {\n          value,\n          timestamp: Date.now(),\n          ttl: this.defaultTTL\n        });\n      }\n\n      return value;\n    } catch (error) {\n      console.error(`Failed to get config value for key ${key}:`, error);\n      logServerError(error as Error, { \n        service: 'azure-app-config', \n        action: 'get-config' \n      }, { key, label });\n      return null;\n    }\n  }\n\n  /**\n   * Get a configuration value as a specific type\n   */\n  async getConfigValueAs<T>(\n    key: string, \n    defaultValue: T, \n    parser?: (value: string) => T,\n    label?: string\n  ): Promise<T> {\n    const value = await this.getConfigValue(key, label);\n    \n    if (value === null) {\n      return defaultValue;\n    }\n\n    try {\n      if (parser) {\n        return parser(value);\n      }\n\n      // Auto-detect type based on default value\n      if (typeof defaultValue === 'boolean') {\n        return (value.toLowerCase() === 'true' || value === '1') as unknown as T;\n      } else if (typeof defaultValue === 'number') {\n        const numValue = parseFloat(value);\n        return (isNaN(numValue) ? defaultValue : numValue) as unknown as T;\n      } else if (typeof defaultValue === 'object') {\n        return JSON.parse(value) as T;\n      }\n\n      return value as unknown as T;\n    } catch (error) {\n      console.error(`Failed to parse config value for key ${key}:`, error);\n      return defaultValue;\n    }\n  }\n\n  /**\n   * Get multiple configuration values\n   */\n  async getMultipleConfigValues(keys: string[], label?: string): Promise<Record<string, string | null>> {\n    await this.initialize();\n\n    if (!this.client) {\n      console.warn('Azure App Configuration not available');\n      return keys.reduce((acc, key) => ({ ...acc, [key]: null }), {});\n    }\n\n    try {\n      const results: Record<string, string | null> = {};\n      \n      // Get all values in parallel\n      const promises = keys.map(async (key) => {\n        const value = await this.getConfigValue(key, label);\n        results[key] = value;\n      });\n\n      await Promise.all(promises);\n      return results;\n    } catch (error) {\n      console.error('Failed to get multiple config values:', error);\n      logServerError(error as Error, { \n        service: 'azure-app-config', \n        action: 'get-multiple-config' \n      }, { keys, label });\n      return keys.reduce((acc, key) => ({ ...acc, [key]: null }), {});\n    }\n  }\n\n  /**\n   * Check if a feature flag is enabled\n   */\n  async isFeatureEnabled(flagName: string, userId?: string, userSegment?: string): Promise<boolean> {\n    await this.initialize();\n\n    if (!this.client) {\n      console.warn('Azure App Configuration not available');\n      return false;\n    }\n\n    const cacheKey = `feature_${flagName}_${userId || 'anonymous'}_${userSegment || 'default'}`;\n\n    // Check cache first\n    if (this.cache.has(cacheKey)) {\n      const cached = this.cache.get(cacheKey)!;\n      if (Date.now() - cached.timestamp < cached.ttl) {\n        return cached.value;\n      } else {\n        this.cache.delete(cacheKey);\n      }\n    }\n\n    try {\n      // Get feature flag configuration\n      const featureFlagKey = `.appconfig.featureflag/${flagName}`;\n      const setting = await this.client.getConfigurationSetting({ key: featureFlagKey });\n\n      if (!setting.value) {\n        return false;\n      }\n\n      const flagConfig = JSON.parse(setting.value);\n      let enabled = flagConfig.enabled || false;\n\n      // Apply conditions if they exist\n      if (enabled && flagConfig.conditions) {\n        // Check user segment condition\n        if (flagConfig.conditions.client_filters) {\n          for (const filter of flagConfig.conditions.client_filters) {\n            if (filter.name === 'Microsoft.Targeting') {\n              const params = filter.parameters;\n              \n              // Check user segment\n              if (userSegment && params.Audience?.Groups) {\n                enabled = params.Audience.Groups.includes(userSegment);\n              }\n              \n              // Check percentage rollout\n              if (params.Audience?.DefaultRolloutPercentage !== undefined) {\n                const percentage = params.Audience.DefaultRolloutPercentage;\n                const hash = this.hashUserId(userId || 'anonymous');\n                enabled = (hash % 100) < percentage;\n              }\n            }\n          }\n        }\n      }\n\n      // Cache the result\n      this.cache.set(cacheKey, {\n        value: enabled,\n        timestamp: Date.now(),\n        ttl: this.defaultTTL\n      });\n\n      return enabled;\n    } catch (error) {\n      console.error(`Failed to check feature flag ${flagName}:`, error);\n      logServerError(error as Error, { \n        service: 'azure-app-config', \n        action: 'check-feature' \n      }, { flagName, userId, userSegment });\n      return false;\n    }\n  }\n\n  /**\n   * Get all configuration values with a specific label prefix\n   */\n  async getConfigsByPrefix(keyPrefix: string, label?: string): Promise<Record<string, string>> {\n    await this.initialize();\n\n    if (!this.client) {\n      console.warn('Azure App Configuration not available');\n      return {};\n    }\n\n    try {\n      const configs: Record<string, string> = {};\n      \n      // List all configuration settings with the prefix\n      const settingsIterable = this.client.listConfigurationSettings({\n        keyFilter: `${keyPrefix}*`,\n        labelFilter: label\n      });\n\n      for await (const setting of settingsIterable) {\n        if (setting.key && setting.value !== undefined) {\n          configs[setting.key] = setting.value;\n        }\n      }\n\n      return configs;\n    } catch (error) {\n      console.error(`Failed to get configs with prefix ${keyPrefix}:`, error);\n      logServerError(error as Error, { \n        service: 'azure-app-config', \n        action: 'get-by-prefix' \n      }, { keyPrefix, label });\n      return {};\n    }\n  }\n\n  /**\n   * Set a configuration value (for admin operations)\n   */\n  async setConfigValue(key: string, value: string, label?: string, contentType?: string): Promise<void> {\n    await this.initialize();\n\n    if (!this.client) {\n      throw new Error('Azure App Configuration not available');\n    }\n\n    try {\n      await this.client.setConfigurationSetting({\n        key,\n        value,\n        label,\n        contentType\n      });\n\n      // Invalidate cache\n      const cacheKey = `config_${key}_${label || 'default'}`;\n      this.cache.delete(cacheKey);\n\n      console.log(`\u2705 Set config value for key: ${key}`);\n    } catch (error) {\n      console.error(`Failed to set config value for key ${key}:`, error);\n      logServerError(error as Error, { \n        service: 'azure-app-config', \n        action: 'set-config' \n      }, { key, label });\n      throw error;\n    }\n  }\n\n  /**\n   * Delete a configuration value\n   */\n  async deleteConfigValue(key: string, label?: string): Promise<void> {\n    await this.initialize();\n\n    if (!this.client) {\n      throw new Error('Azure App Configuration not available');\n    }\n\n    try {\n      await this.client.deleteConfigurationSetting({ key, label });\n\n      // Invalidate cache\n      const cacheKey = `config_${key}_${label || 'default'}`;\n      this.cache.delete(cacheKey);\n\n      console.log(`\u2705 Deleted config value for key: ${key}`);\n    } catch (error) {\n      console.error(`Failed to delete config value for key ${key}:`, error);\n      logServerError(error as Error, { \n        service: 'azure-app-config', \n        action: 'delete-config' \n      }, { key, label });\n      throw error;\n    }\n  }\n\n  /**\n   * Get common feature flags for the application\n   */\n  async getFeatureFlags(): Promise<Record<string, boolean>> {\n    const commonFlags = [\n      'enableAutoApply',\n      'enableVoiceInterview',\n      'enablePremiumFeatures',\n      'enableAnalytics',\n      'maintenanceMode',\n      'enableNewUI',\n      'enableAIFeedback',\n      'enableResumeAnalysis'\n    ];\n\n    const flags: Record<string, boolean> = {};\n    \n    await Promise.all(\n      commonFlags.map(async (flag) => {\n        flags[flag] = await this.isFeatureEnabled(flag);\n      })\n    );\n\n    return flags;\n  }\n\n  /**\n   * Get application configuration\n   */\n  async getAppConfig(): Promise<Record<string, any>> {\n    const configKeys = {\n      maxFileSize: '10485760', // 10MB default\n      allowedFileTypes: 'pdf,doc,docx,txt',\n      sessionTimeout: '3600', // 1 hour\n      rateLimitPerHour: '100',\n      supportEmail: 'support@prepbettr.com',\n      apiBaseUrl: 'https://api.prepbettr.com',\n      enableLogging: 'true',\n      logLevel: 'info'\n    };\n\n    const config: Record<string, any> = {};\n\n    await Promise.all(\n      Object.entries(configKeys).map(async ([key, defaultValue]) => {\n        const value = await this.getConfigValue(key);\n        \n        // Parse values appropriately\n        if (key.includes('Size') || key.includes('Timeout') || key.includes('Limit')) {\n          config[key] = value ? parseInt(value, 10) : parseInt(defaultValue, 10);\n        } else if (key.includes('enable') || key.includes('Enable')) {\n          config[key] = value ? value.toLowerCase() === 'true' : defaultValue.toLowerCase() === 'true';\n        } else if (key === 'allowedFileTypes') {\n          config[key] = value ? value.split(',') : defaultValue.split(',');\n        } else {\n          config[key] = value || defaultValue;\n        }\n      })\n    );\n\n    return config;\n  }\n\n  /**\n   * Clear the cache\n   */\n  clearCache(): void {\n    this.cache.clear();\n    console.log('\u2705 Azure App Configuration cache cleared');\n  }\n\n  /**\n   * Hash user ID for percentage-based feature flags\n   */\n  private hashUserId(userId: string): number {\n    let hash = 0;\n    for (let i = 0; i < userId.length; i++) {\n      const char = userId.charCodeAt(i);\n      hash = ((hash << 5) - hash) + char;\n      hash = hash & hash; // Convert to 32-bit integer\n    }\n    return Math.abs(hash);\n  }\n\n  /**\n   * Health check\n   */\n  async healthCheck(): Promise<{ status: 'healthy' | 'unhealthy'; timestamp: Date }> {\n    try {\n      await this.initialize();\n\n      if (!this.client) {\n        return { status: 'unhealthy', timestamp: new Date() };\n      }\n\n      // Try to read a test configuration\n      try {\n        await this.client.getConfigurationSetting({ key: 'healthCheck' });\n      } catch (error: any) {\n        // It's OK if the key doesn't exist, we just want to test connectivity\n        if (error.statusCode !== 404) {\n          throw error;\n        }\n      }\n\n      return { status: 'healthy', timestamp: new Date() };\n    } catch (error) {\n      console.error('Azure App Configuration health check failed:', error);\n      return { status: 'unhealthy', timestamp: new Date() };\n    }\n  }\n}\n\n// Export singleton instance\nexport const azureAppConfigService = new AzureAppConfigService();\nexport default azureAppConfigService;\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "df5a998487bd61bf98c30879361037e01f624770"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1ofjbnsuyl = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1ofjbnsuyl();
var __asyncValues =
/* istanbul ignore next */
(cov_1ofjbnsuyl().s[0]++,
/* istanbul ignore next */
(cov_1ofjbnsuyl().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1ofjbnsuyl().b[0][1]++, this.__asyncValues) ||
/* istanbul ignore next */
(cov_1ofjbnsuyl().b[0][2]++, function (o) {
  /* istanbul ignore next */
  cov_1ofjbnsuyl().f[0]++;
  cov_1ofjbnsuyl().s[1]++;
  if (!Symbol.asyncIterator) {
    /* istanbul ignore next */
    cov_1ofjbnsuyl().b[1][0]++;
    cov_1ofjbnsuyl().s[2]++;
    throw new TypeError("Symbol.asyncIterator is not defined.");
  } else
  /* istanbul ignore next */
  {
    cov_1ofjbnsuyl().b[1][1]++;
  }
  var m =
    /* istanbul ignore next */
    (cov_1ofjbnsuyl().s[3]++, o[Symbol.asyncIterator]),
    i;
  /* istanbul ignore next */
  cov_1ofjbnsuyl().s[4]++;
  return m ?
  /* istanbul ignore next */
  (cov_1ofjbnsuyl().b[2][0]++, m.call(o)) :
  /* istanbul ignore next */
  (cov_1ofjbnsuyl().b[2][1]++, o = typeof __values === "function" ?
  /* istanbul ignore next */
  (cov_1ofjbnsuyl().b[3][0]++, __values(o)) :
  /* istanbul ignore next */
  (cov_1ofjbnsuyl().b[3][1]++, o[Symbol.iterator]()), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () {
    /* istanbul ignore next */
    cov_1ofjbnsuyl().f[1]++;
    cov_1ofjbnsuyl().s[5]++;
    return this;
  }, i);
  function verb(n) {
    /* istanbul ignore next */
    cov_1ofjbnsuyl().f[2]++;
    cov_1ofjbnsuyl().s[6]++;
    i[n] =
    /* istanbul ignore next */
    (cov_1ofjbnsuyl().b[4][0]++, o[n]) &&
    /* istanbul ignore next */
    (cov_1ofjbnsuyl().b[4][1]++, function (v) {
      /* istanbul ignore next */
      cov_1ofjbnsuyl().f[3]++;
      cov_1ofjbnsuyl().s[7]++;
      return new Promise(function (resolve, reject) {
        /* istanbul ignore next */
        cov_1ofjbnsuyl().f[4]++;
        cov_1ofjbnsuyl().s[8]++;
        v = o[n](v), settle(resolve, reject, v.done, v.value);
      });
    });
  }
  function settle(resolve, reject, d, v) {
    /* istanbul ignore next */
    cov_1ofjbnsuyl().f[5]++;
    cov_1ofjbnsuyl().s[9]++;
    Promise.resolve(v).then(function (v) {
      /* istanbul ignore next */
      cov_1ofjbnsuyl().f[6]++;
      cov_1ofjbnsuyl().s[10]++;
      resolve({
        value: v,
        done: d
      });
    }, reject);
  }
}));
/* istanbul ignore next */
cov_1ofjbnsuyl().s[11]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1ofjbnsuyl().s[12]++;
exports.azureAppConfigService = void 0;
const app_configuration_1 =
/* istanbul ignore next */
(cov_1ofjbnsuyl().s[13]++, require("@azure/app-configuration"));
const identity_1 =
/* istanbul ignore next */
(cov_1ofjbnsuyl().s[14]++, require("@azure/identity"));
const errors_1 =
/* istanbul ignore next */
(cov_1ofjbnsuyl().s[15]++, require("@/lib/errors"));
class AzureAppConfigService {
  constructor() {
    /* istanbul ignore next */
    cov_1ofjbnsuyl().f[7]++;
    cov_1ofjbnsuyl().s[16]++;
    this.client = null;
    /* istanbul ignore next */
    cov_1ofjbnsuyl().s[17]++;
    this.cache = new Map();
    /* istanbul ignore next */
    cov_1ofjbnsuyl().s[18]++;
    this.initialized = false;
    /* istanbul ignore next */
    cov_1ofjbnsuyl().s[19]++;
    this.defaultTTL = 5 * 60 * 1000; // 5 minutes cache TTL
    /* istanbul ignore next */
    cov_1ofjbnsuyl().s[20]++;
    this.connectionString =
    /* istanbul ignore next */
    (cov_1ofjbnsuyl().b[5][0]++, process.env.AZURE_APP_CONFIG_CONNECTION_STRING) ||
    /* istanbul ignore next */
    (cov_1ofjbnsuyl().b[5][1]++, '');
  }
  async initialize() {
    /* istanbul ignore next */
    cov_1ofjbnsuyl().f[8]++;
    cov_1ofjbnsuyl().s[21]++;
    if (this.initialized) {
      /* istanbul ignore next */
      cov_1ofjbnsuyl().b[6][0]++;
      cov_1ofjbnsuyl().s[22]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1ofjbnsuyl().b[6][1]++;
    }
    cov_1ofjbnsuyl().s[23]++;
    try {
      /* istanbul ignore next */
      cov_1ofjbnsuyl().s[24]++;
      if (!this.connectionString) {
        /* istanbul ignore next */
        cov_1ofjbnsuyl().b[7][0]++;
        const endpoint =
        /* istanbul ignore next */
        (cov_1ofjbnsuyl().s[25]++, process.env.AZURE_APP_CONFIG_ENDPOINT);
        /* istanbul ignore next */
        cov_1ofjbnsuyl().s[26]++;
        if (endpoint) {
          /* istanbul ignore next */
          cov_1ofjbnsuyl().b[8][0]++;
          cov_1ofjbnsuyl().s[27]++;
          // Use managed identity
          this.client = new app_configuration_1.AppConfigurationClient(endpoint, new identity_1.DefaultAzureCredential());
          /* istanbul ignore next */
          cov_1ofjbnsuyl().s[28]++;
          console.log('✅ Azure App Configuration initialized with managed identity');
        } else {
          /* istanbul ignore next */
          cov_1ofjbnsuyl().b[8][1]++;
          cov_1ofjbnsuyl().s[29]++;
          console.warn('⚠️ Azure App Configuration not configured - no connection string or endpoint provided');
          /* istanbul ignore next */
          cov_1ofjbnsuyl().s[30]++;
          return;
        }
      } else {
        /* istanbul ignore next */
        cov_1ofjbnsuyl().b[7][1]++;
        cov_1ofjbnsuyl().s[31]++;
        // Use connection string
        this.client = new app_configuration_1.AppConfigurationClient(this.connectionString);
        /* istanbul ignore next */
        cov_1ofjbnsuyl().s[32]++;
        console.log('✅ Azure App Configuration initialized with connection string');
      }
      /* istanbul ignore next */
      cov_1ofjbnsuyl().s[33]++;
      this.initialized = true;
    } catch (error) {
      /* istanbul ignore next */
      cov_1ofjbnsuyl().s[34]++;
      console.error('❌ Failed to initialize Azure App Configuration:', error);
      /* istanbul ignore next */
      cov_1ofjbnsuyl().s[35]++;
      (0, errors_1.logServerError)(error, {
        service: 'azure-app-config',
        action: 'initialize'
      });
      /* istanbul ignore next */
      cov_1ofjbnsuyl().s[36]++;
      throw error;
    }
  }
  /**
   * Get a configuration value
   */
  async getConfigValue(key, label, useCache =
  /* istanbul ignore next */
  (cov_1ofjbnsuyl().b[9][0]++, true)) {
    /* istanbul ignore next */
    cov_1ofjbnsuyl().f[9]++;
    cov_1ofjbnsuyl().s[37]++;
    await this.initialize();
    /* istanbul ignore next */
    cov_1ofjbnsuyl().s[38]++;
    if (!this.client) {
      /* istanbul ignore next */
      cov_1ofjbnsuyl().b[10][0]++;
      cov_1ofjbnsuyl().s[39]++;
      console.warn('Azure App Configuration not available');
      /* istanbul ignore next */
      cov_1ofjbnsuyl().s[40]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_1ofjbnsuyl().b[10][1]++;
    }
    const cacheKey =
    /* istanbul ignore next */
    (cov_1ofjbnsuyl().s[41]++, `config_${key}_${
    /* istanbul ignore next */
    (cov_1ofjbnsuyl().b[11][0]++, label) ||
    /* istanbul ignore next */
    (cov_1ofjbnsuyl().b[11][1]++, 'default')}`);
    // Check cache first
    /* istanbul ignore next */
    cov_1ofjbnsuyl().s[42]++;
    if (
    /* istanbul ignore next */
    (cov_1ofjbnsuyl().b[13][0]++, useCache) &&
    /* istanbul ignore next */
    (cov_1ofjbnsuyl().b[13][1]++, this.cache.has(cacheKey))) {
      /* istanbul ignore next */
      cov_1ofjbnsuyl().b[12][0]++;
      const cached =
      /* istanbul ignore next */
      (cov_1ofjbnsuyl().s[43]++, this.cache.get(cacheKey));
      /* istanbul ignore next */
      cov_1ofjbnsuyl().s[44]++;
      if (Date.now() - cached.timestamp < cached.ttl) {
        /* istanbul ignore next */
        cov_1ofjbnsuyl().b[14][0]++;
        cov_1ofjbnsuyl().s[45]++;
        return cached.value;
      } else {
        /* istanbul ignore next */
        cov_1ofjbnsuyl().b[14][1]++;
        cov_1ofjbnsuyl().s[46]++;
        this.cache.delete(cacheKey);
      }
    } else
    /* istanbul ignore next */
    {
      cov_1ofjbnsuyl().b[12][1]++;
    }
    cov_1ofjbnsuyl().s[47]++;
    try {
      const setting =
      /* istanbul ignore next */
      (cov_1ofjbnsuyl().s[48]++, await this.client.getConfigurationSetting({
        key,
        label
      }));
      const value =
      /* istanbul ignore next */
      (cov_1ofjbnsuyl().s[49]++,
      /* istanbul ignore next */
      (cov_1ofjbnsuyl().b[15][0]++, setting.value) ||
      /* istanbul ignore next */
      (cov_1ofjbnsuyl().b[15][1]++, null));
      // Cache the result
      /* istanbul ignore next */
      cov_1ofjbnsuyl().s[50]++;
      if (useCache) {
        /* istanbul ignore next */
        cov_1ofjbnsuyl().b[16][0]++;
        cov_1ofjbnsuyl().s[51]++;
        this.cache.set(cacheKey, {
          value,
          timestamp: Date.now(),
          ttl: this.defaultTTL
        });
      } else
      /* istanbul ignore next */
      {
        cov_1ofjbnsuyl().b[16][1]++;
      }
      cov_1ofjbnsuyl().s[52]++;
      return value;
    } catch (error) {
      /* istanbul ignore next */
      cov_1ofjbnsuyl().s[53]++;
      console.error(`Failed to get config value for key ${key}:`, error);
      /* istanbul ignore next */
      cov_1ofjbnsuyl().s[54]++;
      (0, errors_1.logServerError)(error, {
        service: 'azure-app-config',
        action: 'get-config'
      }, {
        key,
        label
      });
      /* istanbul ignore next */
      cov_1ofjbnsuyl().s[55]++;
      return null;
    }
  }
  /**
   * Get a configuration value as a specific type
   */
  async getConfigValueAs(key, defaultValue, parser, label) {
    /* istanbul ignore next */
    cov_1ofjbnsuyl().f[10]++;
    const value =
    /* istanbul ignore next */
    (cov_1ofjbnsuyl().s[56]++, await this.getConfigValue(key, label));
    /* istanbul ignore next */
    cov_1ofjbnsuyl().s[57]++;
    if (value === null) {
      /* istanbul ignore next */
      cov_1ofjbnsuyl().b[17][0]++;
      cov_1ofjbnsuyl().s[58]++;
      return defaultValue;
    } else
    /* istanbul ignore next */
    {
      cov_1ofjbnsuyl().b[17][1]++;
    }
    cov_1ofjbnsuyl().s[59]++;
    try {
      /* istanbul ignore next */
      cov_1ofjbnsuyl().s[60]++;
      if (parser) {
        /* istanbul ignore next */
        cov_1ofjbnsuyl().b[18][0]++;
        cov_1ofjbnsuyl().s[61]++;
        return parser(value);
      } else
      /* istanbul ignore next */
      {
        cov_1ofjbnsuyl().b[18][1]++;
      }
      // Auto-detect type based on default value
      cov_1ofjbnsuyl().s[62]++;
      if (typeof defaultValue === 'boolean') {
        /* istanbul ignore next */
        cov_1ofjbnsuyl().b[19][0]++;
        cov_1ofjbnsuyl().s[63]++;
        return /* istanbul ignore next */(cov_1ofjbnsuyl().b[20][0]++, value.toLowerCase() === 'true') ||
        /* istanbul ignore next */
        (cov_1ofjbnsuyl().b[20][1]++, value === '1');
      } else {
        /* istanbul ignore next */
        cov_1ofjbnsuyl().b[19][1]++;
        cov_1ofjbnsuyl().s[64]++;
        if (typeof defaultValue === 'number') {
          /* istanbul ignore next */
          cov_1ofjbnsuyl().b[21][0]++;
          const numValue =
          /* istanbul ignore next */
          (cov_1ofjbnsuyl().s[65]++, parseFloat(value));
          /* istanbul ignore next */
          cov_1ofjbnsuyl().s[66]++;
          return isNaN(numValue) ?
          /* istanbul ignore next */
          (cov_1ofjbnsuyl().b[22][0]++, defaultValue) :
          /* istanbul ignore next */
          (cov_1ofjbnsuyl().b[22][1]++, numValue);
        } else {
          /* istanbul ignore next */
          cov_1ofjbnsuyl().b[21][1]++;
          cov_1ofjbnsuyl().s[67]++;
          if (typeof defaultValue === 'object') {
            /* istanbul ignore next */
            cov_1ofjbnsuyl().b[23][0]++;
            cov_1ofjbnsuyl().s[68]++;
            return JSON.parse(value);
          } else
          /* istanbul ignore next */
          {
            cov_1ofjbnsuyl().b[23][1]++;
          }
        }
      }
      /* istanbul ignore next */
      cov_1ofjbnsuyl().s[69]++;
      return value;
    } catch (error) {
      /* istanbul ignore next */
      cov_1ofjbnsuyl().s[70]++;
      console.error(`Failed to parse config value for key ${key}:`, error);
      /* istanbul ignore next */
      cov_1ofjbnsuyl().s[71]++;
      return defaultValue;
    }
  }
  /**
   * Get multiple configuration values
   */
  async getMultipleConfigValues(keys, label) {
    /* istanbul ignore next */
    cov_1ofjbnsuyl().f[11]++;
    cov_1ofjbnsuyl().s[72]++;
    await this.initialize();
    /* istanbul ignore next */
    cov_1ofjbnsuyl().s[73]++;
    if (!this.client) {
      /* istanbul ignore next */
      cov_1ofjbnsuyl().b[24][0]++;
      cov_1ofjbnsuyl().s[74]++;
      console.warn('Azure App Configuration not available');
      /* istanbul ignore next */
      cov_1ofjbnsuyl().s[75]++;
      return keys.reduce((acc, key) => {
        /* istanbul ignore next */
        cov_1ofjbnsuyl().f[12]++;
        cov_1ofjbnsuyl().s[76]++;
        return Object.assign(Object.assign({}, acc), {
          [key]: null
        });
      }, {});
    } else
    /* istanbul ignore next */
    {
      cov_1ofjbnsuyl().b[24][1]++;
    }
    cov_1ofjbnsuyl().s[77]++;
    try {
      const results =
      /* istanbul ignore next */
      (cov_1ofjbnsuyl().s[78]++, {});
      // Get all values in parallel
      const promises =
      /* istanbul ignore next */
      (cov_1ofjbnsuyl().s[79]++, keys.map(async key => {
        /* istanbul ignore next */
        cov_1ofjbnsuyl().f[13]++;
        const value =
        /* istanbul ignore next */
        (cov_1ofjbnsuyl().s[80]++, await this.getConfigValue(key, label));
        /* istanbul ignore next */
        cov_1ofjbnsuyl().s[81]++;
        results[key] = value;
      }));
      /* istanbul ignore next */
      cov_1ofjbnsuyl().s[82]++;
      await Promise.all(promises);
      /* istanbul ignore next */
      cov_1ofjbnsuyl().s[83]++;
      return results;
    } catch (error) {
      /* istanbul ignore next */
      cov_1ofjbnsuyl().s[84]++;
      console.error('Failed to get multiple config values:', error);
      /* istanbul ignore next */
      cov_1ofjbnsuyl().s[85]++;
      (0, errors_1.logServerError)(error, {
        service: 'azure-app-config',
        action: 'get-multiple-config'
      }, {
        keys,
        label
      });
      /* istanbul ignore next */
      cov_1ofjbnsuyl().s[86]++;
      return keys.reduce((acc, key) => {
        /* istanbul ignore next */
        cov_1ofjbnsuyl().f[14]++;
        cov_1ofjbnsuyl().s[87]++;
        return Object.assign(Object.assign({}, acc), {
          [key]: null
        });
      }, {});
    }
  }
  /**
   * Check if a feature flag is enabled
   */
  async isFeatureEnabled(flagName, userId, userSegment) {
    /* istanbul ignore next */
    cov_1ofjbnsuyl().f[15]++;
    var _a, _b;
    /* istanbul ignore next */
    cov_1ofjbnsuyl().s[88]++;
    await this.initialize();
    /* istanbul ignore next */
    cov_1ofjbnsuyl().s[89]++;
    if (!this.client) {
      /* istanbul ignore next */
      cov_1ofjbnsuyl().b[25][0]++;
      cov_1ofjbnsuyl().s[90]++;
      console.warn('Azure App Configuration not available');
      /* istanbul ignore next */
      cov_1ofjbnsuyl().s[91]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_1ofjbnsuyl().b[25][1]++;
    }
    const cacheKey =
    /* istanbul ignore next */
    (cov_1ofjbnsuyl().s[92]++, `feature_${flagName}_${
    /* istanbul ignore next */
    (cov_1ofjbnsuyl().b[26][0]++, userId) ||
    /* istanbul ignore next */
    (cov_1ofjbnsuyl().b[26][1]++, 'anonymous')}_${
    /* istanbul ignore next */
    (cov_1ofjbnsuyl().b[27][0]++, userSegment) ||
    /* istanbul ignore next */
    (cov_1ofjbnsuyl().b[27][1]++, 'default')}`);
    // Check cache first
    /* istanbul ignore next */
    cov_1ofjbnsuyl().s[93]++;
    if (this.cache.has(cacheKey)) {
      /* istanbul ignore next */
      cov_1ofjbnsuyl().b[28][0]++;
      const cached =
      /* istanbul ignore next */
      (cov_1ofjbnsuyl().s[94]++, this.cache.get(cacheKey));
      /* istanbul ignore next */
      cov_1ofjbnsuyl().s[95]++;
      if (Date.now() - cached.timestamp < cached.ttl) {
        /* istanbul ignore next */
        cov_1ofjbnsuyl().b[29][0]++;
        cov_1ofjbnsuyl().s[96]++;
        return cached.value;
      } else {
        /* istanbul ignore next */
        cov_1ofjbnsuyl().b[29][1]++;
        cov_1ofjbnsuyl().s[97]++;
        this.cache.delete(cacheKey);
      }
    } else
    /* istanbul ignore next */
    {
      cov_1ofjbnsuyl().b[28][1]++;
    }
    cov_1ofjbnsuyl().s[98]++;
    try {
      // Get feature flag configuration
      const featureFlagKey =
      /* istanbul ignore next */
      (cov_1ofjbnsuyl().s[99]++, `.appconfig.featureflag/${flagName}`);
      const setting =
      /* istanbul ignore next */
      (cov_1ofjbnsuyl().s[100]++, await this.client.getConfigurationSetting({
        key: featureFlagKey
      }));
      /* istanbul ignore next */
      cov_1ofjbnsuyl().s[101]++;
      if (!setting.value) {
        /* istanbul ignore next */
        cov_1ofjbnsuyl().b[30][0]++;
        cov_1ofjbnsuyl().s[102]++;
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_1ofjbnsuyl().b[30][1]++;
      }
      const flagConfig =
      /* istanbul ignore next */
      (cov_1ofjbnsuyl().s[103]++, JSON.parse(setting.value));
      let enabled =
      /* istanbul ignore next */
      (cov_1ofjbnsuyl().s[104]++,
      /* istanbul ignore next */
      (cov_1ofjbnsuyl().b[31][0]++, flagConfig.enabled) ||
      /* istanbul ignore next */
      (cov_1ofjbnsuyl().b[31][1]++, false));
      // Apply conditions if they exist
      /* istanbul ignore next */
      cov_1ofjbnsuyl().s[105]++;
      if (
      /* istanbul ignore next */
      (cov_1ofjbnsuyl().b[33][0]++, enabled) &&
      /* istanbul ignore next */
      (cov_1ofjbnsuyl().b[33][1]++, flagConfig.conditions)) {
        /* istanbul ignore next */
        cov_1ofjbnsuyl().b[32][0]++;
        cov_1ofjbnsuyl().s[106]++;
        // Check user segment condition
        if (flagConfig.conditions.client_filters) {
          /* istanbul ignore next */
          cov_1ofjbnsuyl().b[34][0]++;
          cov_1ofjbnsuyl().s[107]++;
          for (const filter of flagConfig.conditions.client_filters) {
            /* istanbul ignore next */
            cov_1ofjbnsuyl().s[108]++;
            if (filter.name === 'Microsoft.Targeting') {
              /* istanbul ignore next */
              cov_1ofjbnsuyl().b[35][0]++;
              const params =
              /* istanbul ignore next */
              (cov_1ofjbnsuyl().s[109]++, filter.parameters);
              // Check user segment
              /* istanbul ignore next */
              cov_1ofjbnsuyl().s[110]++;
              if (
              /* istanbul ignore next */
              (cov_1ofjbnsuyl().b[37][0]++, userSegment) &&
              /* istanbul ignore next */
              (cov_1ofjbnsuyl().b[37][1]++,
              /* istanbul ignore next */
              (cov_1ofjbnsuyl().b[39][0]++, (_a = params.Audience) === null) ||
              /* istanbul ignore next */
              (cov_1ofjbnsuyl().b[39][1]++, _a === void 0) ?
              /* istanbul ignore next */
              (cov_1ofjbnsuyl().b[38][0]++, void 0) :
              /* istanbul ignore next */
              (cov_1ofjbnsuyl().b[38][1]++, _a.Groups))) {
                /* istanbul ignore next */
                cov_1ofjbnsuyl().b[36][0]++;
                cov_1ofjbnsuyl().s[111]++;
                enabled = params.Audience.Groups.includes(userSegment);
              } else
              /* istanbul ignore next */
              {
                cov_1ofjbnsuyl().b[36][1]++;
              }
              // Check percentage rollout
              cov_1ofjbnsuyl().s[112]++;
              if ((
              /* istanbul ignore next */
              (cov_1ofjbnsuyl().b[42][0]++, (_b = params.Audience) === null) ||
              /* istanbul ignore next */
              (cov_1ofjbnsuyl().b[42][1]++, _b === void 0) ?
              /* istanbul ignore next */
              (cov_1ofjbnsuyl().b[41][0]++, void 0) :
              /* istanbul ignore next */
              (cov_1ofjbnsuyl().b[41][1]++, _b.DefaultRolloutPercentage)) !== undefined) {
                /* istanbul ignore next */
                cov_1ofjbnsuyl().b[40][0]++;
                const percentage =
                /* istanbul ignore next */
                (cov_1ofjbnsuyl().s[113]++, params.Audience.DefaultRolloutPercentage);
                const hash =
                /* istanbul ignore next */
                (cov_1ofjbnsuyl().s[114]++, this.hashUserId(
                /* istanbul ignore next */
                (cov_1ofjbnsuyl().b[43][0]++, userId) ||
                /* istanbul ignore next */
                (cov_1ofjbnsuyl().b[43][1]++, 'anonymous')));
                /* istanbul ignore next */
                cov_1ofjbnsuyl().s[115]++;
                enabled = hash % 100 < percentage;
              } else
              /* istanbul ignore next */
              {
                cov_1ofjbnsuyl().b[40][1]++;
              }
            } else
            /* istanbul ignore next */
            {
              cov_1ofjbnsuyl().b[35][1]++;
            }
          }
        } else
        /* istanbul ignore next */
        {
          cov_1ofjbnsuyl().b[34][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_1ofjbnsuyl().b[32][1]++;
      }
      // Cache the result
      cov_1ofjbnsuyl().s[116]++;
      this.cache.set(cacheKey, {
        value: enabled,
        timestamp: Date.now(),
        ttl: this.defaultTTL
      });
      /* istanbul ignore next */
      cov_1ofjbnsuyl().s[117]++;
      return enabled;
    } catch (error) {
      /* istanbul ignore next */
      cov_1ofjbnsuyl().s[118]++;
      console.error(`Failed to check feature flag ${flagName}:`, error);
      /* istanbul ignore next */
      cov_1ofjbnsuyl().s[119]++;
      (0, errors_1.logServerError)(error, {
        service: 'azure-app-config',
        action: 'check-feature'
      }, {
        flagName,
        userId,
        userSegment
      });
      /* istanbul ignore next */
      cov_1ofjbnsuyl().s[120]++;
      return false;
    }
  }
  /**
   * Get all configuration values with a specific label prefix
   */
  async getConfigsByPrefix(keyPrefix, label) {
    /* istanbul ignore next */
    cov_1ofjbnsuyl().f[16]++;
    var _a, e_1, _b, _c;
    /* istanbul ignore next */
    cov_1ofjbnsuyl().s[121]++;
    await this.initialize();
    /* istanbul ignore next */
    cov_1ofjbnsuyl().s[122]++;
    if (!this.client) {
      /* istanbul ignore next */
      cov_1ofjbnsuyl().b[44][0]++;
      cov_1ofjbnsuyl().s[123]++;
      console.warn('Azure App Configuration not available');
      /* istanbul ignore next */
      cov_1ofjbnsuyl().s[124]++;
      return {};
    } else
    /* istanbul ignore next */
    {
      cov_1ofjbnsuyl().b[44][1]++;
    }
    cov_1ofjbnsuyl().s[125]++;
    try {
      const configs =
      /* istanbul ignore next */
      (cov_1ofjbnsuyl().s[126]++, {});
      // List all configuration settings with the prefix
      const settingsIterable =
      /* istanbul ignore next */
      (cov_1ofjbnsuyl().s[127]++, this.client.listConfigurationSettings({
        keyFilter: `${keyPrefix}*`,
        labelFilter: label
      }));
      /* istanbul ignore next */
      cov_1ofjbnsuyl().s[128]++;
      try {
        /* istanbul ignore next */
        cov_1ofjbnsuyl().s[129]++;
        for (var _d =
          /* istanbul ignore next */
          (cov_1ofjbnsuyl().s[130]++, true), settingsIterable_1 =
          /* istanbul ignore next */
          (cov_1ofjbnsuyl().s[131]++, __asyncValues(settingsIterable)), settingsIterable_1_1; settingsIterable_1_1 = await settingsIterable_1.next(), _a = settingsIterable_1_1.done, !_a; _d = true) {
          /* istanbul ignore next */
          cov_1ofjbnsuyl().s[132]++;
          _c = settingsIterable_1_1.value;
          /* istanbul ignore next */
          cov_1ofjbnsuyl().s[133]++;
          _d = false;
          const setting =
          /* istanbul ignore next */
          (cov_1ofjbnsuyl().s[134]++, _c);
          /* istanbul ignore next */
          cov_1ofjbnsuyl().s[135]++;
          if (
          /* istanbul ignore next */
          (cov_1ofjbnsuyl().b[46][0]++, setting.key) &&
          /* istanbul ignore next */
          (cov_1ofjbnsuyl().b[46][1]++, setting.value !== undefined)) {
            /* istanbul ignore next */
            cov_1ofjbnsuyl().b[45][0]++;
            cov_1ofjbnsuyl().s[136]++;
            configs[setting.key] = setting.value;
          } else
          /* istanbul ignore next */
          {
            cov_1ofjbnsuyl().b[45][1]++;
          }
        }
      } catch (e_1_1) {
        /* istanbul ignore next */
        cov_1ofjbnsuyl().s[137]++;
        e_1 = {
          error: e_1_1
        };
      } finally {
        /* istanbul ignore next */
        cov_1ofjbnsuyl().s[138]++;
        try {
          /* istanbul ignore next */
          cov_1ofjbnsuyl().s[139]++;
          if (
          /* istanbul ignore next */
          (cov_1ofjbnsuyl().b[48][0]++, !_d) &&
          /* istanbul ignore next */
          (cov_1ofjbnsuyl().b[48][1]++, !_a) &&
          /* istanbul ignore next */
          (cov_1ofjbnsuyl().b[48][2]++, _b = settingsIterable_1.return)) {
            /* istanbul ignore next */
            cov_1ofjbnsuyl().b[47][0]++;
            cov_1ofjbnsuyl().s[140]++;
            await _b.call(settingsIterable_1);
          } else
          /* istanbul ignore next */
          {
            cov_1ofjbnsuyl().b[47][1]++;
          }
        } finally {
          /* istanbul ignore next */
          cov_1ofjbnsuyl().s[141]++;
          if (e_1) {
            /* istanbul ignore next */
            cov_1ofjbnsuyl().b[49][0]++;
            cov_1ofjbnsuyl().s[142]++;
            throw e_1.error;
          } else
          /* istanbul ignore next */
          {
            cov_1ofjbnsuyl().b[49][1]++;
          }
        }
      }
      /* istanbul ignore next */
      cov_1ofjbnsuyl().s[143]++;
      return configs;
    } catch (error) {
      /* istanbul ignore next */
      cov_1ofjbnsuyl().s[144]++;
      console.error(`Failed to get configs with prefix ${keyPrefix}:`, error);
      /* istanbul ignore next */
      cov_1ofjbnsuyl().s[145]++;
      (0, errors_1.logServerError)(error, {
        service: 'azure-app-config',
        action: 'get-by-prefix'
      }, {
        keyPrefix,
        label
      });
      /* istanbul ignore next */
      cov_1ofjbnsuyl().s[146]++;
      return {};
    }
  }
  /**
   * Set a configuration value (for admin operations)
   */
  async setConfigValue(key, value, label, contentType) {
    /* istanbul ignore next */
    cov_1ofjbnsuyl().f[17]++;
    cov_1ofjbnsuyl().s[147]++;
    await this.initialize();
    /* istanbul ignore next */
    cov_1ofjbnsuyl().s[148]++;
    if (!this.client) {
      /* istanbul ignore next */
      cov_1ofjbnsuyl().b[50][0]++;
      cov_1ofjbnsuyl().s[149]++;
      throw new Error('Azure App Configuration not available');
    } else
    /* istanbul ignore next */
    {
      cov_1ofjbnsuyl().b[50][1]++;
    }
    cov_1ofjbnsuyl().s[150]++;
    try {
      /* istanbul ignore next */
      cov_1ofjbnsuyl().s[151]++;
      await this.client.setConfigurationSetting({
        key,
        value,
        label,
        contentType
      });
      // Invalidate cache
      const cacheKey =
      /* istanbul ignore next */
      (cov_1ofjbnsuyl().s[152]++, `config_${key}_${
      /* istanbul ignore next */
      (cov_1ofjbnsuyl().b[51][0]++, label) ||
      /* istanbul ignore next */
      (cov_1ofjbnsuyl().b[51][1]++, 'default')}`);
      /* istanbul ignore next */
      cov_1ofjbnsuyl().s[153]++;
      this.cache.delete(cacheKey);
      /* istanbul ignore next */
      cov_1ofjbnsuyl().s[154]++;
      console.log(`✅ Set config value for key: ${key}`);
    } catch (error) {
      /* istanbul ignore next */
      cov_1ofjbnsuyl().s[155]++;
      console.error(`Failed to set config value for key ${key}:`, error);
      /* istanbul ignore next */
      cov_1ofjbnsuyl().s[156]++;
      (0, errors_1.logServerError)(error, {
        service: 'azure-app-config',
        action: 'set-config'
      }, {
        key,
        label
      });
      /* istanbul ignore next */
      cov_1ofjbnsuyl().s[157]++;
      throw error;
    }
  }
  /**
   * Delete a configuration value
   */
  async deleteConfigValue(key, label) {
    /* istanbul ignore next */
    cov_1ofjbnsuyl().f[18]++;
    cov_1ofjbnsuyl().s[158]++;
    await this.initialize();
    /* istanbul ignore next */
    cov_1ofjbnsuyl().s[159]++;
    if (!this.client) {
      /* istanbul ignore next */
      cov_1ofjbnsuyl().b[52][0]++;
      cov_1ofjbnsuyl().s[160]++;
      throw new Error('Azure App Configuration not available');
    } else
    /* istanbul ignore next */
    {
      cov_1ofjbnsuyl().b[52][1]++;
    }
    cov_1ofjbnsuyl().s[161]++;
    try {
      /* istanbul ignore next */
      cov_1ofjbnsuyl().s[162]++;
      await this.client.deleteConfigurationSetting({
        key,
        label
      });
      // Invalidate cache
      const cacheKey =
      /* istanbul ignore next */
      (cov_1ofjbnsuyl().s[163]++, `config_${key}_${
      /* istanbul ignore next */
      (cov_1ofjbnsuyl().b[53][0]++, label) ||
      /* istanbul ignore next */
      (cov_1ofjbnsuyl().b[53][1]++, 'default')}`);
      /* istanbul ignore next */
      cov_1ofjbnsuyl().s[164]++;
      this.cache.delete(cacheKey);
      /* istanbul ignore next */
      cov_1ofjbnsuyl().s[165]++;
      console.log(`✅ Deleted config value for key: ${key}`);
    } catch (error) {
      /* istanbul ignore next */
      cov_1ofjbnsuyl().s[166]++;
      console.error(`Failed to delete config value for key ${key}:`, error);
      /* istanbul ignore next */
      cov_1ofjbnsuyl().s[167]++;
      (0, errors_1.logServerError)(error, {
        service: 'azure-app-config',
        action: 'delete-config'
      }, {
        key,
        label
      });
      /* istanbul ignore next */
      cov_1ofjbnsuyl().s[168]++;
      throw error;
    }
  }
  /**
   * Get common feature flags for the application
   */
  async getFeatureFlags() {
    /* istanbul ignore next */
    cov_1ofjbnsuyl().f[19]++;
    const commonFlags =
    /* istanbul ignore next */
    (cov_1ofjbnsuyl().s[169]++, ['enableAutoApply', 'enableVoiceInterview', 'enablePremiumFeatures', 'enableAnalytics', 'maintenanceMode', 'enableNewUI', 'enableAIFeedback', 'enableResumeAnalysis']);
    const flags =
    /* istanbul ignore next */
    (cov_1ofjbnsuyl().s[170]++, {});
    /* istanbul ignore next */
    cov_1ofjbnsuyl().s[171]++;
    await Promise.all(commonFlags.map(async flag => {
      /* istanbul ignore next */
      cov_1ofjbnsuyl().f[20]++;
      cov_1ofjbnsuyl().s[172]++;
      flags[flag] = await this.isFeatureEnabled(flag);
    }));
    /* istanbul ignore next */
    cov_1ofjbnsuyl().s[173]++;
    return flags;
  }
  /**
   * Get application configuration
   */
  async getAppConfig() {
    /* istanbul ignore next */
    cov_1ofjbnsuyl().f[21]++;
    const configKeys =
    /* istanbul ignore next */
    (cov_1ofjbnsuyl().s[174]++, {
      maxFileSize: '10485760',
      // 10MB default
      allowedFileTypes: 'pdf,doc,docx,txt',
      sessionTimeout: '3600',
      // 1 hour
      rateLimitPerHour: '100',
      supportEmail: 'support@prepbettr.com',
      apiBaseUrl: 'https://api.prepbettr.com',
      enableLogging: 'true',
      logLevel: 'info'
    });
    const config =
    /* istanbul ignore next */
    (cov_1ofjbnsuyl().s[175]++, {});
    /* istanbul ignore next */
    cov_1ofjbnsuyl().s[176]++;
    await Promise.all(Object.entries(configKeys).map(async ([key, defaultValue]) => {
      /* istanbul ignore next */
      cov_1ofjbnsuyl().f[22]++;
      const value =
      /* istanbul ignore next */
      (cov_1ofjbnsuyl().s[177]++, await this.getConfigValue(key));
      // Parse values appropriately
      /* istanbul ignore next */
      cov_1ofjbnsuyl().s[178]++;
      if (
      /* istanbul ignore next */
      (cov_1ofjbnsuyl().b[55][0]++, key.includes('Size')) ||
      /* istanbul ignore next */
      (cov_1ofjbnsuyl().b[55][1]++, key.includes('Timeout')) ||
      /* istanbul ignore next */
      (cov_1ofjbnsuyl().b[55][2]++, key.includes('Limit'))) {
        /* istanbul ignore next */
        cov_1ofjbnsuyl().b[54][0]++;
        cov_1ofjbnsuyl().s[179]++;
        config[key] = value ?
        /* istanbul ignore next */
        (cov_1ofjbnsuyl().b[56][0]++, parseInt(value, 10)) :
        /* istanbul ignore next */
        (cov_1ofjbnsuyl().b[56][1]++, parseInt(defaultValue, 10));
      } else {
        /* istanbul ignore next */
        cov_1ofjbnsuyl().b[54][1]++;
        cov_1ofjbnsuyl().s[180]++;
        if (
        /* istanbul ignore next */
        (cov_1ofjbnsuyl().b[58][0]++, key.includes('enable')) ||
        /* istanbul ignore next */
        (cov_1ofjbnsuyl().b[58][1]++, key.includes('Enable'))) {
          /* istanbul ignore next */
          cov_1ofjbnsuyl().b[57][0]++;
          cov_1ofjbnsuyl().s[181]++;
          config[key] = value ?
          /* istanbul ignore next */
          (cov_1ofjbnsuyl().b[59][0]++, value.toLowerCase() === 'true') :
          /* istanbul ignore next */
          (cov_1ofjbnsuyl().b[59][1]++, defaultValue.toLowerCase() === 'true');
        } else {
          /* istanbul ignore next */
          cov_1ofjbnsuyl().b[57][1]++;
          cov_1ofjbnsuyl().s[182]++;
          if (key === 'allowedFileTypes') {
            /* istanbul ignore next */
            cov_1ofjbnsuyl().b[60][0]++;
            cov_1ofjbnsuyl().s[183]++;
            config[key] = value ?
            /* istanbul ignore next */
            (cov_1ofjbnsuyl().b[61][0]++, value.split(',')) :
            /* istanbul ignore next */
            (cov_1ofjbnsuyl().b[61][1]++, defaultValue.split(','));
          } else {
            /* istanbul ignore next */
            cov_1ofjbnsuyl().b[60][1]++;
            cov_1ofjbnsuyl().s[184]++;
            config[key] =
            /* istanbul ignore next */
            (cov_1ofjbnsuyl().b[62][0]++, value) ||
            /* istanbul ignore next */
            (cov_1ofjbnsuyl().b[62][1]++, defaultValue);
          }
        }
      }
    }));
    /* istanbul ignore next */
    cov_1ofjbnsuyl().s[185]++;
    return config;
  }
  /**
   * Clear the cache
   */
  clearCache() {
    /* istanbul ignore next */
    cov_1ofjbnsuyl().f[23]++;
    cov_1ofjbnsuyl().s[186]++;
    this.cache.clear();
    /* istanbul ignore next */
    cov_1ofjbnsuyl().s[187]++;
    console.log('✅ Azure App Configuration cache cleared');
  }
  /**
   * Hash user ID for percentage-based feature flags
   */
  hashUserId(userId) {
    /* istanbul ignore next */
    cov_1ofjbnsuyl().f[24]++;
    let hash =
    /* istanbul ignore next */
    (cov_1ofjbnsuyl().s[188]++, 0);
    /* istanbul ignore next */
    cov_1ofjbnsuyl().s[189]++;
    for (let i =
    /* istanbul ignore next */
    (cov_1ofjbnsuyl().s[190]++, 0); i < userId.length; i++) {
      const char =
      /* istanbul ignore next */
      (cov_1ofjbnsuyl().s[191]++, userId.charCodeAt(i));
      /* istanbul ignore next */
      cov_1ofjbnsuyl().s[192]++;
      hash = (hash << 5) - hash + char;
      /* istanbul ignore next */
      cov_1ofjbnsuyl().s[193]++;
      hash = hash & hash; // Convert to 32-bit integer
    }
    /* istanbul ignore next */
    cov_1ofjbnsuyl().s[194]++;
    return Math.abs(hash);
  }
  /**
   * Health check
   */
  async healthCheck() {
    /* istanbul ignore next */
    cov_1ofjbnsuyl().f[25]++;
    cov_1ofjbnsuyl().s[195]++;
    try {
      /* istanbul ignore next */
      cov_1ofjbnsuyl().s[196]++;
      await this.initialize();
      /* istanbul ignore next */
      cov_1ofjbnsuyl().s[197]++;
      if (!this.client) {
        /* istanbul ignore next */
        cov_1ofjbnsuyl().b[63][0]++;
        cov_1ofjbnsuyl().s[198]++;
        return {
          status: 'unhealthy',
          timestamp: new Date()
        };
      } else
      /* istanbul ignore next */
      {
        cov_1ofjbnsuyl().b[63][1]++;
      }
      // Try to read a test configuration
      cov_1ofjbnsuyl().s[199]++;
      try {
        /* istanbul ignore next */
        cov_1ofjbnsuyl().s[200]++;
        await this.client.getConfigurationSetting({
          key: 'healthCheck'
        });
      } catch (error) {
        /* istanbul ignore next */
        cov_1ofjbnsuyl().s[201]++;
        // It's OK if the key doesn't exist, we just want to test connectivity
        if (error.statusCode !== 404) {
          /* istanbul ignore next */
          cov_1ofjbnsuyl().b[64][0]++;
          cov_1ofjbnsuyl().s[202]++;
          throw error;
        } else
        /* istanbul ignore next */
        {
          cov_1ofjbnsuyl().b[64][1]++;
        }
      }
      /* istanbul ignore next */
      cov_1ofjbnsuyl().s[203]++;
      return {
        status: 'healthy',
        timestamp: new Date()
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_1ofjbnsuyl().s[204]++;
      console.error('Azure App Configuration health check failed:', error);
      /* istanbul ignore next */
      cov_1ofjbnsuyl().s[205]++;
      return {
        status: 'unhealthy',
        timestamp: new Date()
      };
    }
  }
}
// Export singleton instance
/* istanbul ignore next */
cov_1ofjbnsuyl().s[206]++;
exports.azureAppConfigService = new AzureAppConfigService();
/* istanbul ignore next */
cov_1ofjbnsuyl().s[207]++;
exports.default = exports.azureAppConfigService;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,