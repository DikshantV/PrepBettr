{"file":"/Users/dikshantvashistha/PrepBettr/lib/shared/auth/__tests__/azure-adapter.integration.test.ts","mappings":"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","names":[],"sources":["/Users/dikshantvashistha/PrepBettr/lib/shared/auth/__tests__/azure-adapter.integration.test.ts"],"sourcesContent":["/**\n * Integration Tests for Azure Functions Unified Auth Middleware\n * \n * Validates the Azure Functions adapter in a simulated environment\n */\n\nimport { \n  azureAuthMiddleware,\n  createAuthenticatedAzureFunction,\n  createAdminAzureFunction\n} from '../adapters/azure-auth';\nimport { getUnifiedAuth } from '../core';\nimport { AzureContext, AzureRequest } from '../types';\n\n// Mock dependencies\njest.mock('@/lib/firebase/admin', () => ({\n  getAdminAuth: jest.fn(() => ({\n    verifyIdToken: jest.fn()\n  }))\n}));\n\ndescribe('Azure Functions Auth Middleware Integration', () => {\n  let mockFirebaseAuth: any;\n  let mockContext: AzureContext;\n  let mockRequest: AzureRequest;\n\n  beforeEach(async () => {\n    jest.clearAllMocks();\n    const auth = getUnifiedAuth();\n    await auth.initialize();\n    \n    const { getAdminAuth } = require('@/lib/firebase/admin');\n    mockFirebaseAuth = getAdminAuth();\n\n    // Setup mock Azure context and request\n    mockContext = {\n      log: {\n        info: jest.fn(),\n        warn: jest.fn(),\n        error: jest.fn()\n      },\n      res: undefined\n    };\n\n    mockRequest = {\n      headers: {},\n      body: {},\n      query: {}\n    };\n  });\n\n  describe('azureAuthMiddleware', () => {\n    it('should succeed with valid token', async () => {\n      mockFirebaseAuth.verifyIdToken.mockResolvedValue({\n        uid: 'test-user',\n        email: 'test@example.com'\n      });\n\n      mockRequest.headers.authorization = 'Bearer valid-token';\n\n      const result = await azureAuthMiddleware(mockContext, mockRequest);\n\n      expect(result.success).toBe(true);\n      expect(result.user?.uid).toBe('test-user');\n      expect(result.response).toBeUndefined();\n      expect(mockContext.log.info).toHaveBeenCalledWith(\n        expect.stringContaining('Authenticated user: test-user')\n      );\n    });\n\n    it('should fail with missing token and return 401 response', async () => {\n      const result = await azureAuthMiddleware(mockContext, mockRequest);\n\n      expect(result.success).toBe(false);\n      expect(result.response?.status).toBe(401);\n      expect(JSON.parse(result.response?.body || '{}')).toMatchObject({\n        error: 'Missing or invalid Authorization header'\n      });\n    });\n\n    it('should fail with invalid token and return 401 response', async () => {\n      mockFirebaseAuth.verifyIdToken.mockRejectedValue(new Error('Invalid token'));\n      mockRequest.headers.authorization = 'Bearer invalid-token';\n\n      const result = await azureAuthMiddleware(mockContext, mockRequest);\n\n      expect(result.success).toBe(false);\n      expect(result.response?.status).toBe(401);\n    });\n\n    it('should handle case-insensitive authorization header', async () => {\n      mockFirebaseAuth.verifyIdToken.mockResolvedValue({ uid: 'test-user' });\n      mockRequest.headers.Authorization = 'Bearer valid-token'; // Capital A\n\n      const result = await azureAuthMiddleware(mockContext, mockRequest);\n\n      expect(result.success).toBe(true);\n    });\n\n    it('should handle role-based access control', async () => {\n      mockFirebaseAuth.verifyIdToken.mockResolvedValue({\n        uid: 'admin-user',\n        custom_claims: { roles: ['admin'] }\n      });\n\n      mockRequest.headers.authorization = 'Bearer admin-token';\n\n      // Should succeed with correct role\n      const successResult = await azureAuthMiddleware(mockContext, mockRequest, {\n        requiredRoles: ['admin']\n      });\n      expect(successResult.success).toBe(true);\n\n      // Should fail with missing role\n      const failureResult = await azureAuthMiddleware(mockContext, mockRequest, {\n        requiredRoles: ['superuser']\n      });\n      expect(failureResult.success).toBe(false);\n      expect(failureResult.response?.status).toBe(403);\n    });\n\n    it('should handle custom validation', async () => {\n      mockFirebaseAuth.verifyIdToken.mockResolvedValue({\n        uid: 'test-user',\n        email: 'test@blocked-domain.com'\n      });\n\n      mockRequest.headers.authorization = 'Bearer valid-token';\n\n      const customValidator = jest.fn(async (user) => {\n        return !user.email?.includes('blocked-domain');\n      });\n\n      const result = await azureAuthMiddleware(mockContext, mockRequest, {\n        customValidator\n      });\n\n      expect(result.success).toBe(false);\n      expect(result.response?.status).toBe(403);\n      expect(customValidator).toHaveBeenCalled();\n    });\n  });\n\n  describe('createAuthenticatedAzureFunction', () => {\n    it('should call handler with authenticated user', async () => {\n      mockFirebaseAuth.verifyIdToken.mockResolvedValue({\n        uid: 'test-user',\n        email: 'test@example.com'\n      });\n\n      const handler = jest.fn(async (context, req, user) => {\n        expect(user.uid).toBe('test-user');\n        context.res = { status: 200, body: 'Success' };\n      });\n\n      mockRequest.headers.authorization = 'Bearer valid-token';\n\n      const authenticatedFunction = createAuthenticatedAzureFunction(handler);\n      await authenticatedFunction(mockContext, mockRequest);\n\n      expect(handler).toHaveBeenCalled();\n      expect(mockContext.res?.status).toBe(200);\n    });\n\n    it('should not call handler on authentication failure', async () => {\n      mockFirebaseAuth.verifyIdToken.mockRejectedValue(new Error('Invalid token'));\n\n      const handler = jest.fn();\n      mockRequest.headers.authorization = 'Bearer invalid-token';\n\n      const authenticatedFunction = createAuthenticatedAzureFunction(handler);\n      await authenticatedFunction(mockContext, mockRequest);\n\n      expect(handler).not.toHaveBeenCalled();\n      expect(mockContext.res?.status).toBe(401);\n    });\n\n    it('should skip authentication when specified', async () => {\n      const handler = jest.fn(async (context, req, user) => {\n        expect(user).toBeNull();\n        context.res = { status: 200, body: 'Public endpoint' };\n      });\n\n      const publicFunction = createAuthenticatedAzureFunction(handler, { skipAuth: true });\n      await publicFunction(mockContext, mockRequest);\n\n      expect(handler).toHaveBeenCalled();\n      expect(mockContext.res?.status).toBe(200);\n    });\n  });\n\n  describe('createAdminAzureFunction', () => {\n    it('should grant access to admin users', async () => {\n      mockFirebaseAuth.verifyIdToken.mockResolvedValue({\n        uid: 'admin-user',\n        custom_claims: { roles: ['admin'] }\n      });\n\n      const handler = jest.fn(async (context, req, user) => {\n        context.res = { status: 200, body: 'Admin access granted' };\n      });\n\n      mockRequest.headers.authorization = 'Bearer admin-token';\n\n      const adminFunction = createAdminAzureFunction(handler);\n      await adminFunction(mockContext, mockRequest);\n\n      expect(handler).toHaveBeenCalled();\n      expect(mockContext.res?.status).toBe(200);\n    });\n\n    it('should deny access to non-admin users', async () => {\n      mockFirebaseAuth.verifyIdToken.mockResolvedValue({\n        uid: 'regular-user',\n        custom_claims: { roles: ['user'] }\n      });\n\n      const handler = jest.fn();\n      mockRequest.headers.authorization = 'Bearer user-token';\n\n      const adminFunction = createAdminAzureFunction(handler);\n      await adminFunction(mockContext, mockRequest);\n\n      expect(handler).not.toHaveBeenCalled();\n      expect(mockContext.res?.status).toBe(403);\n    });\n  });\n\n  describe('Error handling', () => {\n    it('should handle Firebase service unavailable', async () => {\n      mockFirebaseAuth.verifyIdToken.mockRejectedValue({\n        code: 'auth/service-unavailable'\n      });\n\n      mockRequest.headers.authorization = 'Bearer token';\n\n      const result = await azureAuthMiddleware(mockContext, mockRequest);\n\n      expect(result.success).toBe(false);\n      expect(result.response?.status).toBe(401);\n      expect(mockContext.log.error).toHaveBeenCalled();\n    });\n\n    it('should handle unexpected errors gracefully', async () => {\n      mockFirebaseAuth.verifyIdToken.mockImplementation(() => {\n        throw new Error('Unexpected error');\n      });\n\n      mockRequest.headers.authorization = 'Bearer token';\n\n      const result = await azureAuthMiddleware(mockContext, mockRequest);\n\n      expect(result.success).toBe(false);\n      expect(result.response?.status).toBe(500);\n      expect(mockContext.log.error).toHaveBeenCalled();\n    });\n  });\n});\n"],"version":3}