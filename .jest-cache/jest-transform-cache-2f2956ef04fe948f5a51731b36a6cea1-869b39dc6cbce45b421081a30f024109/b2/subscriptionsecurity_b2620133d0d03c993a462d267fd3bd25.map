{"version":3,"names":["cov_eamr2yal1","actualCoverage","NextResponse","ratelimit","getServerSession","authOptions","z","crypto","sandboxConfig","PAYPAL_PLANS","RATE_LIMITS","s","subscription_create","requests","window","subscription_update","webhook","management","subscriptionSchemas","createSubscription","object","planId","enum","billingCycle","returnUrl","string","url","optional","cancelUrl","metadata","record","any","updateSubscription","subscriptionId","min","action","newPlanId","reason","effectiveDate","datetime","planChange","currentPlan","newPlan","prorationMode","default","id","event_type","resource_type","resource","create_time","event_version","requireAuth","request","f","session","b","user","authenticated","error","response","json","status","emailVerified","userId","console","applyRateLimit","identifier","limitType","warn","success","limit","rateLimitInfo","reset","remaining","retryAfter","Math","round","Date","now","headers","toString","validateSubscriptionInput","data","schema","validated","parse","valid","errorDetails","errors","map","err","field","path","join","message","code","details","validateWebhookSignature","webhookId","process","env","NODE_ENV","log","body","text","requiredHeaders","missingHeaders","filter","header","get","length","mockRequest","Object","fromEntries","entries","JSON","paypalClient","isValid","verifyWebhookSignature","validateSubscriptionPlan","planConfig","expectedCycle","billing_cycle","toLowerCase","plan","checkSubscriptionEligibility","eligible","addSecurityHeaders","set","NEXT_PUBLIC_APP_URL","sanitizeInput","replace","trim","sanitized","key","value","withSubscriptionSecurity","handler","options","securedHandler","startTime","nextUrl","searchParams","rateLimitResult","authResult","catch","sanitizedBody","validationResult","validatedBody","validatePlan","planValidation","checkEligibility","eligibilityResult","securedResponse","duration","withWebhookSecurity","securedWebhookHandler","clientIp","signatureResult","webhookBody","schemas"],"sources":["subscription-security.js"],"sourcesContent":["// lib/subscription-security.js\n\nimport { NextResponse } from 'next/server';\nimport { ratelimit } from '@/lib/upstash';\nimport { getServerSession } from 'next-auth';\nimport { authOptions } from '@/lib/auth';\nimport { z } from 'zod';\nimport crypto from 'crypto';\nimport { sandboxConfig } from '@/lib/paypal-sandbox-config';\nimport { PAYPAL_PLANS } from '@/lib/paypal-config';\n\n/**\n * Subscription Security Layer\n * Provides authentication, validation, rate limiting, and security features\n * for subscription-related API endpoints\n */\n\n// Rate limiting configurations\nconst RATE_LIMITS = {\n  subscription_create: { requests: 3, window: '1 h' },\n  subscription_update: { requests: 10, window: '1 h' },\n  webhook: { requests: 1000, window: '1 m' },\n  management: { requests: 30, window: '1 m' }\n};\n\n// Validation schemas\nexport const subscriptionSchemas = {\n  createSubscription: z.object({\n    planId: z.enum(['INDIVIDUAL_MONTHLY', 'INDIVIDUAL_YEARLY', 'ENTERPRISE_MONTHLY', 'ENTERPRISE_YEARLY']),\n    billingCycle: z.enum(['monthly', 'yearly']),\n    returnUrl: z.string().url().optional(),\n    cancelUrl: z.string().url().optional(),\n    metadata: z.record(z.any()).optional()\n  }),\n\n  updateSubscription: z.object({\n    subscriptionId: z.string().min(1),\n    action: z.enum(['cancel', 'suspend', 'activate', 'change_plan']),\n    newPlanId: z.string().optional(),\n    reason: z.string().optional(),\n    effectiveDate: z.string().datetime().optional()\n  }),\n\n  planChange: z.object({\n    currentPlan: z.string(),\n    newPlan: z.string(),\n    prorationMode: z.enum(['immediate', 'end_of_period']).default('immediate')\n  }),\n\n  webhook: z.object({\n    id: z.string(),\n    event_type: z.string(),\n    resource_type: z.string(),\n    resource: z.record(z.any()),\n    create_time: z.string(),\n    event_version: z.string().optional()\n  })\n};\n\n/**\n * Authentication middleware for subscription APIs\n */\nexport async function requireAuth(request) {\n  try {\n    const session = await getServerSession(authOptions);\n    \n    if (!session || !session.user) {\n      return {\n        authenticated: false,\n        error: 'Authentication required',\n        response: NextResponse.json(\n          { error: 'Authentication required' },\n          { status: 401 }\n        )\n      };\n    }\n\n    // Check if user has verified email (required for subscriptions)\n    if (!session.user.emailVerified) {\n      return {\n        authenticated: false,\n        error: 'Email verification required',\n        response: NextResponse.json(\n          { error: 'Please verify your email before creating a subscription' },\n          { status: 403 }\n        )\n      };\n    }\n\n    return {\n      authenticated: true,\n      user: session.user,\n      userId: session.user.id\n    };\n  } catch (error) {\n    console.error('Authentication error:', error);\n    return {\n      authenticated: false,\n      error: 'Authentication failed',\n      response: NextResponse.json(\n        { error: 'Authentication failed' },\n        { status: 401 }\n      )\n    };\n  }\n}\n\n/**\n * Rate limiting middleware\n */\nexport async function applyRateLimit(identifier, limitType = 'management') {\n  try {\n    if (!ratelimit) {\n      console.warn('Rate limiting not configured');\n      return { success: true };\n    }\n\n    const limit = RATE_LIMITS[limitType];\n    const { success, limit: rateLimitInfo, reset, remaining } = await ratelimit.limit(\n      `subscription_${limitType}:${identifier}`,\n      limit.requests,\n      limit.window\n    );\n\n    if (!success) {\n      return {\n        success: false,\n        error: 'Rate limit exceeded',\n        response: NextResponse.json(\n          { \n            error: 'Too many requests',\n            retryAfter: Math.round((reset - Date.now()) / 1000)\n          },\n          { \n            status: 429,\n            headers: {\n              'X-RateLimit-Limit': rateLimitInfo.toString(),\n              'X-RateLimit-Remaining': remaining.toString(),\n              'X-RateLimit-Reset': reset.toString()\n            }\n          }\n        )\n      };\n    }\n\n    return {\n      success: true,\n      remaining,\n      reset\n    };\n  } catch (error) {\n    console.error('Rate limiting error:', error);\n    // Allow request to proceed if rate limiting fails\n    return { success: true };\n  }\n}\n\n/**\n * Input validation middleware\n */\nexport function validateSubscriptionInput(data, schema) {\n  try {\n    const validated = schema.parse(data);\n    return {\n      valid: true,\n      data: validated\n    };\n  } catch (error) {\n    console.error('Validation error:', error);\n    \n    const errorDetails = error.errors?.map(err => ({\n      field: err.path.join('.'),\n      message: err.message,\n      code: err.code\n    })) || [];\n\n    return {\n      valid: false,\n      errors: errorDetails,\n      response: NextResponse.json(\n        { \n          error: 'Invalid input',\n          details: errorDetails\n        },\n        { status: 400 }\n      )\n    };\n  }\n}\n\n/**\n * Enhanced webhook signature validation\n */\nexport async function validateWebhookSignature(request, webhookId) {\n  try {\n    // Skip validation in test environment\n    if (process.env.NODE_ENV === 'test' && !webhookId) {\n      console.log('Skipping webhook signature validation in test environment');\n      return { valid: true };\n    }\n\n    const headers = request.headers;\n    const body = await request.text();\n\n    // Required PayPal webhook headers\n    const requiredHeaders = [\n      'paypal-transmission-id',\n      'paypal-cert-id', \n      'paypal-auth-algo',\n      'paypal-transmission-sig',\n      'paypal-transmission-time'\n    ];\n\n    const missingHeaders = requiredHeaders.filter(header => !headers.get(header));\n    if (missingHeaders.length > 0) {\n      return {\n        valid: false,\n        error: `Missing required headers: ${missingHeaders.join(', ')}`,\n        response: NextResponse.json(\n          { error: 'Invalid webhook signature - missing headers' },\n          { status: 401 }\n        )\n      };\n    }\n\n    // Verify signature using PayPal client\n    const mockRequest = {\n      headers: Object.fromEntries(headers.entries()),\n      body: JSON.parse(body)\n    };\n\n    const paypalClient = await import('@/lib/paypal-client');\n    const isValid = await paypalClient.default.verifyWebhookSignature(mockRequest, webhookId);\n\n    if (!isValid) {\n      return {\n        valid: false,\n        error: 'Invalid webhook signature',\n        response: NextResponse.json(\n          { error: 'Invalid webhook signature' },\n          { status: 401 }\n        )\n      };\n    }\n\n    return {\n      valid: true,\n      body: JSON.parse(body)\n    };\n  } catch (error) {\n    console.error('Webhook signature validation error:', error);\n    return {\n      valid: false,\n      error: 'Signature validation failed',\n      response: NextResponse.json(\n        { error: 'Webhook signature validation failed' },\n        { status: 401 }\n      )\n    };\n  }\n}\n\n/**\n * Subscription plan validation\n */\nexport function validateSubscriptionPlan(planId, billingCycle) {\n  try {\n    // Check if plan exists in configuration\n    const planConfig = PAYPAL_PLANS[planId];\n    if (!planConfig) {\n      return {\n        valid: false,\n        error: `Invalid plan ID: ${planId}`,\n        response: NextResponse.json(\n          { error: `Invalid subscription plan: ${planId}` },\n          { status: 400 }\n        )\n      };\n    }\n\n    // Validate billing cycle matches plan\n    const expectedCycle = planConfig.billing_cycle.toLowerCase();\n    if (billingCycle !== expectedCycle) {\n      return {\n        valid: false,\n        error: `Billing cycle mismatch: expected ${expectedCycle}, got ${billingCycle}`,\n        response: NextResponse.json(\n          { error: `Invalid billing cycle for plan ${planId}` },\n          { status: 400 }\n        )\n      };\n    }\n\n    // Check if plan is active/available\n    if (planConfig.status === 'INACTIVE') {\n      return {\n        valid: false,\n        error: `Plan ${planId} is not available`,\n        response: NextResponse.json(\n          { error: `Subscription plan ${planId} is currently unavailable` },\n          { status: 400 }\n        )\n      };\n    }\n\n    return {\n      valid: true,\n      plan: planConfig\n    };\n  } catch (error) {\n    console.error('Plan validation error:', error);\n    return {\n      valid: false,\n      error: 'Plan validation failed',\n      response: NextResponse.json(\n        { error: 'Invalid subscription plan configuration' },\n        { status: 500 }\n      )\n    };\n  }\n}\n\n/**\n * User subscription eligibility check\n */\nexport async function checkSubscriptionEligibility(userId) {\n  try {\n    // TODO: Check against your user database\n    // For now, return basic eligibility check\n    \n    // Check if user already has active subscription\n    // const existingSubscription = await getUserActiveSubscription(userId);\n    // if (existingSubscription) {\n    //   return {\n    //     eligible: false,\n    //     error: 'User already has an active subscription',\n    //     response: NextResponse.json(\n    //       { error: 'You already have an active subscription. Please cancel it first to create a new one.' },\n    //       { status: 409 }\n    //     )\n    //   };\n    // }\n\n    return {\n      eligible: true\n    };\n  } catch (error) {\n    console.error('Eligibility check error:', error);\n    return {\n      eligible: false,\n      error: 'Eligibility check failed',\n      response: NextResponse.json(\n        { error: 'Unable to verify subscription eligibility' },\n        { status: 500 }\n      )\n    };\n  }\n}\n\n/**\n * Security headers middleware\n */\nexport function addSecurityHeaders(response) {\n  // Add security headers to response\n  response.headers.set('X-Content-Type-Options', 'nosniff');\n  response.headers.set('X-Frame-Options', 'DENY');\n  response.headers.set('X-XSS-Protection', '1; mode=block');\n  response.headers.set('Referrer-Policy', 'strict-origin-when-cross-origin');\n  \n  // Add CORS headers for subscription endpoints\n  response.headers.set('Access-Control-Allow-Origin', process.env.NEXT_PUBLIC_APP_URL || 'https://prepbettr.com');\n  response.headers.set('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, OPTIONS');\n  response.headers.set('Access-Control-Allow-Headers', 'Content-Type, Authorization');\n  \n  return response;\n}\n\n/**\n * Input sanitization\n */\nexport function sanitizeInput(data) {\n  if (typeof data === 'string') {\n    // Remove potential XSS vectors\n    return data\n      .replace(/<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi, '')\n      .replace(/javascript:/gi, '')\n      .replace(/on\\w+=/gi, '')\n      .trim();\n  }\n  \n  if (typeof data === 'object' && data !== null) {\n    const sanitized = {};\n    for (const [key, value] of Object.entries(data)) {\n      sanitized[sanitizeInput(key)] = sanitizeInput(value);\n    }\n    return sanitized;\n  }\n  \n  return data;\n}\n\n/**\n * Comprehensive security middleware wrapper\n */\nexport function withSubscriptionSecurity(handler, options = {}) {\n  return async function securedHandler(request) {\n    try {\n      const startTime = Date.now();\n      \n      // Apply rate limiting\n      const userId = request.nextUrl.searchParams.get('userId') || \n                    request.headers.get('x-user-id') ||\n                    'anonymous';\n      \n      const rateLimitResult = await applyRateLimit(userId, options.limitType);\n      if (!rateLimitResult.success) {\n        return rateLimitResult.response;\n      }\n\n      // Require authentication (unless webhook)\n      if (options.requireAuth !== false) {\n        const authResult = await requireAuth(request);\n        if (!authResult.authenticated) {\n          return authResult.response;\n        }\n        request.user = authResult.user;\n        request.userId = authResult.userId;\n      }\n\n      // Validate input if schema provided\n      if (options.schema) {\n        const body = await request.json().catch(() => ({}));\n        const sanitizedBody = sanitizeInput(body);\n        const validationResult = validateSubscriptionInput(sanitizedBody, options.schema);\n        \n        if (!validationResult.valid) {\n          return validationResult.response;\n        }\n        \n        request.validatedBody = validationResult.data;\n      }\n\n      // Additional security checks\n      if (options.validatePlan && request.validatedBody) {\n        const { planId, billingCycle } = request.validatedBody;\n        if (planId) {\n          const planValidation = validateSubscriptionPlan(planId, billingCycle);\n          if (!planValidation.valid) {\n            return planValidation.response;\n          }\n          request.planConfig = planValidation.plan;\n        }\n      }\n\n      // Check subscription eligibility\n      if (options.checkEligibility && request.userId) {\n        const eligibilityResult = await checkSubscriptionEligibility(request.userId);\n        if (!eligibilityResult.eligible) {\n          return eligibilityResult.response;\n        }\n      }\n\n      // Call the actual handler\n      const response = await handler(request);\n      \n      // Add security headers\n      const securedResponse = addSecurityHeaders(response);\n      \n      // Add performance timing header\n      const duration = Date.now() - startTime;\n      securedResponse.headers.set('X-Response-Time', `${duration}ms`);\n      \n      return securedResponse;\n      \n    } catch (error) {\n      console.error('Security middleware error:', error);\n      return NextResponse.json(\n        { error: 'Security validation failed' },\n        { status: 500 }\n      );\n    }\n  };\n}\n\n/**\n * Webhook-specific security middleware\n */\nexport function withWebhookSecurity(handler) {\n  return async function securedWebhookHandler(request) {\n    try {\n      const startTime = Date.now();\n      \n      // Apply webhook rate limiting\n      const clientIp = request.headers.get('x-forwarded-for') || 'unknown';\n      const rateLimitResult = await applyRateLimit(clientIp, 'webhook');\n      if (!rateLimitResult.success) {\n        return rateLimitResult.response;\n      }\n\n      // Validate webhook signature\n      const webhookId = sandboxConfig.webhookId;\n      if (webhookId) {\n        const signatureResult = await validateWebhookSignature(request, webhookId);\n        if (!signatureResult.valid) {\n          return signatureResult.response;\n        }\n        request.webhookBody = signatureResult.body;\n      } else {\n        // In development without webhook ID, parse body manually\n        const body = await request.text();\n        request.webhookBody = JSON.parse(body);\n      }\n\n      // Validate webhook payload structure\n      const validationResult = validateSubscriptionInput(\n        request.webhookBody, \n        subscriptionSchemas.webhook\n      );\n      if (!validationResult.valid) {\n        return validationResult.response;\n      }\n\n      // Call the actual webhook handler\n      const response = await handler(request);\n      \n      // Add security headers and timing\n      const securedResponse = addSecurityHeaders(response);\n      const duration = Date.now() - startTime;\n      securedResponse.headers.set('X-Response-Time', `${duration}ms`);\n      \n      return securedResponse;\n      \n    } catch (error) {\n      console.error('Webhook security middleware error:', error);\n      return NextResponse.json(\n        { error: 'Webhook security validation failed' },\n        { status: 500 }\n      );\n    }\n  };\n}\n\n// Export schemas for use in other modules\nexport { subscriptionSchemas as schemas };\n\nexport default {\n  withSubscriptionSecurity,\n  withWebhookSecurity,\n  requireAuth,\n  applyRateLimit,\n  validateSubscriptionInput,\n  validateWebhookSignature,\n  validateSubscriptionPlan,\n  checkSubscriptionEligibility,\n  sanitizeInput,\n  addSecurityHeaders,\n  schemas: subscriptionSchemas\n};"],"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","ignoreList":[]}