0711bfb77673b9ce4b381bbd8f29b001
/* istanbul ignore next */
function cov_1nr30tbi4i() {
  var path = "/Users/dikshantvashistha/PrepBettr/lib/firebase/auth.js";
  var hash = "65e717c5eacb93948b00254ee8c08ee986680c6b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dikshantvashistha/PrepBettr/lib/firebase/auth.js",
    statementMap: {
      "0": {
        start: {
          line: 16,
          column: 2
        },
        end: {
          line: 61,
          column: 3
        }
      },
      "1": {
        start: {
          line: 18,
          column: 24
        },
        end: {
          line: 18,
          column: 30
        }
      },
      "2": {
        start: {
          line: 19,
          column: 28
        },
        end: {
          line: 19,
          column: 44
        }
      },
      "3": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 23,
          column: 5
        }
      },
      "4": {
        start: {
          line: 22,
          column: 6
        },
        end: {
          line: 22,
          column: 55
        }
      },
      "5": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 25,
          column: 65
        }
      },
      "6": {
        start: {
          line: 28,
          column: 19
        },
        end: {
          line: 28,
          column: 70
        }
      },
      "7": {
        start: {
          line: 29,
          column: 17
        },
        end: {
          line: 29,
          column: 28
        }
      },
      "8": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 33,
          column: 5
        }
      },
      "9": {
        start: {
          line: 32,
          column: 6
        },
        end: {
          line: 32,
          column: 69
        }
      },
      "10": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 35,
          column: 85
        }
      },
      "11": {
        start: {
          line: 38,
          column: 20
        },
        end: {
          line: 38,
          column: 48
        }
      },
      "12": {
        start: {
          line: 40,
          column: 4
        },
        end: {
          line: 40,
          column: 62
        }
      },
      "13": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 41,
          column: 71
        }
      },
      "14": {
        start: {
          line: 44,
          column: 4
        },
        end: {
          line: 46,
          column: 5
        }
      },
      "15": {
        start: {
          line: 45,
          column: 6
        },
        end: {
          line: 45,
          column: 70
        }
      },
      "16": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 57,
          column: 6
        }
      },
      "17": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 59,
          column: 70
        }
      },
      "18": {
        start: {
          line: 60,
          column: 4
        },
        end: {
          line: 60,
          column: 16
        }
      },
      "19": {
        start: {
          line: 68,
          column: 2
        },
        end: {
          line: 79,
          column: 3
        }
      },
      "20": {
        start: {
          line: 69,
          column: 24
        },
        end: {
          line: 69,
          column: 30
        }
      },
      "21": {
        start: {
          line: 70,
          column: 4
        },
        end: {
          line: 72,
          column: 5
        }
      },
      "22": {
        start: {
          line: 71,
          column: 6
        },
        end: {
          line: 71,
          column: 55
        }
      },
      "23": {
        start: {
          line: 74,
          column: 4
        },
        end: {
          line: 74,
          column: 32
        }
      },
      "24": {
        start: {
          line: 75,
          column: 4
        },
        end: {
          line: 75,
          column: 51
        }
      },
      "25": {
        start: {
          line: 77,
          column: 4
        },
        end: {
          line: 77,
          column: 57
        }
      },
      "26": {
        start: {
          line: 78,
          column: 4
        },
        end: {
          line: 78,
          column: 16
        }
      },
      "27": {
        start: {
          line: 86,
          column: 2
        },
        end: {
          line: 98,
          column: 3
        }
      },
      "28": {
        start: {
          line: 87,
          column: 24
        },
        end: {
          line: 87,
          column: 30
        }
      },
      "29": {
        start: {
          line: 88,
          column: 4
        },
        end: {
          line: 90,
          column: 5
        }
      },
      "30": {
        start: {
          line: 89,
          column: 6
        },
        end: {
          line: 89,
          column: 52
        }
      },
      "31": {
        start: {
          line: 92,
          column: 20
        },
        end: {
          line: 92,
          column: 75
        }
      },
      "32": {
        start: {
          line: 93,
          column: 4
        },
        end: {
          line: 93,
          column: 53
        }
      },
      "33": {
        start: {
          line: 94,
          column: 4
        },
        end: {
          line: 94,
          column: 19
        }
      },
      "34": {
        start: {
          line: 96,
          column: 4
        },
        end: {
          line: 96,
          column: 68
        }
      },
      "35": {
        start: {
          line: 97,
          column: 4
        },
        end: {
          line: 97,
          column: 16
        }
      },
      "36": {
        start: {
          line: 105,
          column: 2
        },
        end: {
          line: 107,
          column: 3
        }
      },
      "37": {
        start: {
          line: 106,
          column: 4
        },
        end: {
          line: 106,
          column: 17
        }
      },
      "38": {
        start: {
          line: 110,
          column: 16
        },
        end: {
          line: 110,
          column: 32
        }
      },
      "39": {
        start: {
          line: 111,
          column: 2
        },
        end: {
          line: 113,
          column: 3
        }
      },
      "40": {
        start: {
          line: 112,
          column: 4
        },
        end: {
          line: 112,
          column: 17
        }
      },
      "41": {
        start: {
          line: 115,
          column: 2
        },
        end: {
          line: 130,
          column: 3
        }
      },
      "42": {
        start: {
          line: 117,
          column: 20
        },
        end: {
          line: 117,
          column: 84
        }
      },
      "43": {
        start: {
          line: 120,
          column: 4
        },
        end: {
          line: 127,
          column: 6
        }
      },
      "44": {
        start: {
          line: 129,
          column: 4
        },
        end: {
          line: 129,
          column: 17
        }
      }
    },
    fnMap: {
      "0": {
        name: "authenticateWithGoogle",
        decl: {
          start: {
            line: 15,
            column: 22
          },
          end: {
            line: 15,
            column: 44
          }
        },
        loc: {
          start: {
            line: 15,
            column: 47
          },
          end: {
            line: 62,
            column: 1
          }
        },
        line: 15
      },
      "1": {
        name: "signOutFromFirebase",
        decl: {
          start: {
            line: 67,
            column: 22
          },
          end: {
            line: 67,
            column: 41
          }
        },
        loc: {
          start: {
            line: 67,
            column: 44
          },
          end: {
            line: 80,
            column: 1
          }
        },
        line: 67
      },
      "2": {
        name: "getCurrentUserIdToken",
        decl: {
          start: {
            line: 85,
            column: 22
          },
          end: {
            line: 85,
            column: 43
          }
        },
        loc: {
          start: {
            line: 85,
            column: 66
          },
          end: {
            line: 99,
            column: 1
          }
        },
        line: 85
      },
      "3": {
        name: "validateFirebaseIdToken",
        decl: {
          start: {
            line: 104,
            column: 16
          },
          end: {
            line: 104,
            column: 39
          }
        },
        loc: {
          start: {
            line: 104,
            column: 47
          },
          end: {
            line: 131,
            column: 1
          }
        },
        line: 104
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 23,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 23,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 21
      },
      "1": {
        loc: {
          start: {
            line: 21,
            column: 8
          },
          end: {
            line: 21,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 21,
            column: 8
          },
          end: {
            line: 21,
            column: 20
          }
        }, {
          start: {
            line: 21,
            column: 24
          },
          end: {
            line: 21,
            column: 40
          }
        }],
        line: 21
      },
      "2": {
        loc: {
          start: {
            line: 31,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 31
      },
      "3": {
        loc: {
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 44
      },
      "4": {
        loc: {
          start: {
            line: 70,
            column: 4
          },
          end: {
            line: 72,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 70,
            column: 4
          },
          end: {
            line: 72,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 70
      },
      "5": {
        loc: {
          start: {
            line: 85,
            column: 44
          },
          end: {
            line: 85,
            column: 64
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 85,
            column: 59
          },
          end: {
            line: 85,
            column: 64
          }
        }],
        line: 85
      },
      "6": {
        loc: {
          start: {
            line: 88,
            column: 4
          },
          end: {
            line: 90,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 88,
            column: 4
          },
          end: {
            line: 90,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 88
      },
      "7": {
        loc: {
          start: {
            line: 105,
            column: 2
          },
          end: {
            line: 107,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 105,
            column: 2
          },
          end: {
            line: 107,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 105
      },
      "8": {
        loc: {
          start: {
            line: 105,
            column: 6
          },
          end: {
            line: 105,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 105,
            column: 6
          },
          end: {
            line: 105,
            column: 12
          }
        }, {
          start: {
            line: 105,
            column: 16
          },
          end: {
            line: 105,
            column: 41
          }
        }],
        line: 105
      },
      "9": {
        loc: {
          start: {
            line: 111,
            column: 2
          },
          end: {
            line: 113,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 111,
            column: 2
          },
          end: {
            line: 113,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 111
      },
      "10": {
        loc: {
          start: {
            line: 121,
            column: 6
          },
          end: {
            line: 126,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 121,
            column: 6
          },
          end: {
            line: 121,
            column: 17
          }
        }, {
          start: {
            line: 122,
            column: 6
          },
          end: {
            line: 122,
            column: 17
          }
        }, {
          start: {
            line: 123,
            column: 6
          },
          end: {
            line: 123,
            column: 17
          }
        }, {
          start: {
            line: 124,
            column: 6
          },
          end: {
            line: 124,
            column: 17
          }
        }, {
          start: {
            line: 125,
            column: 6
          },
          end: {
            line: 125,
            column: 17
          }
        }, {
          start: {
            line: 126,
            column: 6
          },
          end: {
            line: 126,
            column: 52
          }
        }],
        line: 121
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0, 0, 0, 0, 0]
    },
    inputSourceMap: null,
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "65e717c5eacb93948b00254ee8c08ee986680c6b"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1nr30tbi4i = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1nr30tbi4i();
/**
 * Firebase Authentication Helper
 * 
 * Provides proper Firebase Google authentication flow
 * Ensures Firebase ID tokens are generated correctly
 */

import { auth, googleProvider } from '@/firebase/client';
import { signInWithPopup, getIdToken } from 'firebase/auth';

/**
 * Authenticate with Google using Firebase
 * Returns Firebase ID token (not Google OAuth token)
 */
export async function authenticateWithGoogle() {
  /* istanbul ignore next */
  cov_1nr30tbi4i().f[0]++;
  cov_1nr30tbi4i().s[0]++;
  try {
    // Get Firebase services safely
    const authService =
    /* istanbul ignore next */
    (cov_1nr30tbi4i().s[1]++, auth());
    const providerService =
    /* istanbul ignore next */
    (cov_1nr30tbi4i().s[2]++, googleProvider());
    /* istanbul ignore next */
    cov_1nr30tbi4i().s[3]++;
    if (
    /* istanbul ignore next */
    (cov_1nr30tbi4i().b[1][0]++, !authService) ||
    /* istanbul ignore next */
    (cov_1nr30tbi4i().b[1][1]++, !providerService)) {
      /* istanbul ignore next */
      cov_1nr30tbi4i().b[0][0]++;
      cov_1nr30tbi4i().s[4]++;
      throw new Error('Firebase Auth not initialized');
    } else
    /* istanbul ignore next */
    {
      cov_1nr30tbi4i().b[0][1]++;
    }
    cov_1nr30tbi4i().s[5]++;
    console.log('🔐 Starting Firebase Google authentication...');

    // Sign in with Google using Firebase
    const result =
    /* istanbul ignore next */
    (cov_1nr30tbi4i().s[6]++, await signInWithPopup(authService, providerService));
    const user =
    /* istanbul ignore next */
    (cov_1nr30tbi4i().s[7]++, result.user);
    /* istanbul ignore next */
    cov_1nr30tbi4i().s[8]++;
    if (!user) {
      /* istanbul ignore next */
      cov_1nr30tbi4i().b[2][0]++;
      cov_1nr30tbi4i().s[9]++;
      throw new Error('No user returned from Google authentication');
    } else
    /* istanbul ignore next */
    {
      cov_1nr30tbi4i().b[2][1]++;
    }
    cov_1nr30tbi4i().s[10]++;
    console.log('🔐 Google authentication successful, getting Firebase ID token...');

    // Get Firebase ID token (this is crucial - not Google OAuth token)
    const idToken =
    /* istanbul ignore next */
    (cov_1nr30tbi4i().s[11]++, await getIdToken(user, true)); // Force refresh to ensure fresh token
    /* istanbul ignore next */
    cov_1nr30tbi4i().s[12]++;
    console.log('🔐 Firebase ID token obtained successfully');
    /* istanbul ignore next */
    cov_1nr30tbi4i().s[13]++;
    console.log('🔐 Token preview:', idToken.substring(0, 50) + '...');

    // Validate token format (Firebase ID tokens are JWT)
    /* istanbul ignore next */
    cov_1nr30tbi4i().s[14]++;
    if (!idToken.includes('.')) {
      /* istanbul ignore next */
      cov_1nr30tbi4i().b[3][0]++;
      cov_1nr30tbi4i().s[15]++;
      throw new Error('Invalid Firebase ID token format - not a JWT');
    } else
    /* istanbul ignore next */
    {
      cov_1nr30tbi4i().b[3][1]++;
    }
    cov_1nr30tbi4i().s[16]++;
    return {
      user: {
        uid: user.uid,
        email: user.email,
        displayName: user.displayName,
        photoURL: user.photoURL,
        emailVerified: user.emailVerified
      },
      idToken
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_1nr30tbi4i().s[17]++;
    console.error('🔐 Firebase Google authentication failed:', error);
    /* istanbul ignore next */
    cov_1nr30tbi4i().s[18]++;
    throw error;
  }
}

/**
 * Sign out from Firebase
 */
export async function signOutFromFirebase() {
  /* istanbul ignore next */
  cov_1nr30tbi4i().f[1]++;
  cov_1nr30tbi4i().s[19]++;
  try {
    const authService =
    /* istanbul ignore next */
    (cov_1nr30tbi4i().s[20]++, auth());
    /* istanbul ignore next */
    cov_1nr30tbi4i().s[21]++;
    if (!authService) {
      /* istanbul ignore next */
      cov_1nr30tbi4i().b[4][0]++;
      cov_1nr30tbi4i().s[22]++;
      throw new Error('Firebase Auth not initialized');
    } else
    /* istanbul ignore next */
    {
      cov_1nr30tbi4i().b[4][1]++;
    }
    cov_1nr30tbi4i().s[23]++;
    await authService.signOut();
    /* istanbul ignore next */
    cov_1nr30tbi4i().s[24]++;
    console.log('🔐 Firebase sign out successful');
  } catch (error) {
    /* istanbul ignore next */
    cov_1nr30tbi4i().s[25]++;
    console.error('🔐 Firebase sign out failed:', error);
    /* istanbul ignore next */
    cov_1nr30tbi4i().s[26]++;
    throw error;
  }
}

/**
 * Get current Firebase user's ID token
 */
export async function getCurrentUserIdToken(forceRefresh =
/* istanbul ignore next */
(cov_1nr30tbi4i().b[5][0]++, false)) {
  /* istanbul ignore next */
  cov_1nr30tbi4i().f[2]++;
  cov_1nr30tbi4i().s[27]++;
  try {
    const authService =
    /* istanbul ignore next */
    (cov_1nr30tbi4i().s[28]++, auth());
    /* istanbul ignore next */
    cov_1nr30tbi4i().s[29]++;
    if (!authService?.currentUser) {
      /* istanbul ignore next */
      cov_1nr30tbi4i().b[6][0]++;
      cov_1nr30tbi4i().s[30]++;
      throw new Error('No Firebase user signed in');
    } else
    /* istanbul ignore next */
    {
      cov_1nr30tbi4i().b[6][1]++;
    }
    const idToken =
    /* istanbul ignore next */
    (cov_1nr30tbi4i().s[31]++, await getIdToken(authService.currentUser, forceRefresh));
    /* istanbul ignore next */
    cov_1nr30tbi4i().s[32]++;
    console.log('🔐 Current user ID token obtained');
    /* istanbul ignore next */
    cov_1nr30tbi4i().s[33]++;
    return idToken;
  } catch (error) {
    /* istanbul ignore next */
    cov_1nr30tbi4i().s[34]++;
    console.error('🔐 Failed to get current user ID token:', error);
    /* istanbul ignore next */
    cov_1nr30tbi4i().s[35]++;
    throw error;
  }
}

/**
 * Validate Firebase ID token format
 */
export function validateFirebaseIdToken(token) {
  /* istanbul ignore next */
  cov_1nr30tbi4i().f[3]++;
  cov_1nr30tbi4i().s[36]++;
  if (
  /* istanbul ignore next */
  (cov_1nr30tbi4i().b[8][0]++, !token) ||
  /* istanbul ignore next */
  (cov_1nr30tbi4i().b[8][1]++, typeof token !== 'string')) {
    /* istanbul ignore next */
    cov_1nr30tbi4i().b[7][0]++;
    cov_1nr30tbi4i().s[37]++;
    return false;
  } else
  /* istanbul ignore next */
  {
    cov_1nr30tbi4i().b[7][1]++;
  }

  // Firebase ID tokens are JWTs with 3 parts separated by dots
  const parts =
  /* istanbul ignore next */
  (cov_1nr30tbi4i().s[38]++, token.split('.'));
  /* istanbul ignore next */
  cov_1nr30tbi4i().s[39]++;
  if (parts.length !== 3) {
    /* istanbul ignore next */
    cov_1nr30tbi4i().b[9][0]++;
    cov_1nr30tbi4i().s[40]++;
    return false;
  } else
  /* istanbul ignore next */
  {
    cov_1nr30tbi4i().b[9][1]++;
  }
  cov_1nr30tbi4i().s[41]++;
  try {
    // Try to decode the payload (second part)
    const payload =
    /* istanbul ignore next */
    (cov_1nr30tbi4i().s[42]++, JSON.parse(atob(parts[1].replace(/-/g, '+').replace(/_/g, '/'))));

    // Firebase ID tokens should have these claims
    /* istanbul ignore next */
    cov_1nr30tbi4i().s[43]++;
    return /* istanbul ignore next */(cov_1nr30tbi4i().b[10][0]++, payload.iss) &&
    /* istanbul ignore next */
    (cov_1nr30tbi4i().b[10][1]++, payload.aud) &&
    /* istanbul ignore next */
    (cov_1nr30tbi4i().b[10][2]++, payload.exp) &&
    /* istanbul ignore next */
    (cov_1nr30tbi4i().b[10][3]++, payload.iat) &&
    /* istanbul ignore next */
    (cov_1nr30tbi4i().b[10][4]++, payload.sub) &&
    /* istanbul ignore next */
    (cov_1nr30tbi4i().b[10][5]++, payload.iss.includes('securetoken.google.com'));
  } catch {
    /* istanbul ignore next */
    cov_1nr30tbi4i().s[44]++;
    return false;
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,