{"version":3,"names":["cov_1nr30tbi4i","actualCoverage","auth","googleProvider","signInWithPopup","getIdToken","authenticateWithGoogle","f","s","authService","providerService","b","Error","console","log","result","user","idToken","substring","includes","uid","email","displayName","photoURL","emailVerified","error","signOutFromFirebase","signOut","getCurrentUserIdToken","forceRefresh","currentUser","validateFirebaseIdToken","token","parts","split","length","payload","JSON","parse","atob","replace","iss","aud","exp","iat","sub"],"sources":["auth.js"],"sourcesContent":["/**\n * Firebase Authentication Helper\n * \n * Provides proper Firebase Google authentication flow\n * Ensures Firebase ID tokens are generated correctly\n */\n\nimport { auth, googleProvider } from '@/firebase/client';\nimport { signInWithPopup, getIdToken } from 'firebase/auth';\n\n/**\n * Authenticate with Google using Firebase\n * Returns Firebase ID token (not Google OAuth token)\n */\nexport async function authenticateWithGoogle() {\n  try {\n    // Get Firebase services safely\n    const authService = auth();\n    const providerService = googleProvider();\n    \n    if (!authService || !providerService) {\n      throw new Error('Firebase Auth not initialized');\n    }\n\n    console.log('üîê Starting Firebase Google authentication...');\n    \n    // Sign in with Google using Firebase\n    const result = await signInWithPopup(authService, providerService);\n    const user = result.user;\n    \n    if (!user) {\n      throw new Error('No user returned from Google authentication');\n    }\n\n    console.log('üîê Google authentication successful, getting Firebase ID token...');\n    \n    // Get Firebase ID token (this is crucial - not Google OAuth token)\n    const idToken = await getIdToken(user, true); // Force refresh to ensure fresh token\n    \n    console.log('üîê Firebase ID token obtained successfully');\n    console.log('üîê Token preview:', idToken.substring(0, 50) + '...');\n    \n    // Validate token format (Firebase ID tokens are JWT)\n    if (!idToken.includes('.')) {\n      throw new Error('Invalid Firebase ID token format - not a JWT');\n    }\n\n    return {\n      user: {\n        uid: user.uid,\n        email: user.email,\n        displayName: user.displayName,\n        photoURL: user.photoURL,\n        emailVerified: user.emailVerified\n      },\n      idToken\n    };\n  } catch (error) {\n    console.error('üîê Firebase Google authentication failed:', error);\n    throw error;\n  }\n}\n\n/**\n * Sign out from Firebase\n */\nexport async function signOutFromFirebase() {\n  try {\n    const authService = auth();\n    if (!authService) {\n      throw new Error('Firebase Auth not initialized');\n    }\n\n    await authService.signOut();\n    console.log('üîê Firebase sign out successful');\n  } catch (error) {\n    console.error('üîê Firebase sign out failed:', error);\n    throw error;\n  }\n}\n\n/**\n * Get current Firebase user's ID token\n */\nexport async function getCurrentUserIdToken(forceRefresh = false) {\n  try {\n    const authService = auth();\n    if (!authService?.currentUser) {\n      throw new Error('No Firebase user signed in');\n    }\n\n    const idToken = await getIdToken(authService.currentUser, forceRefresh);\n    console.log('üîê Current user ID token obtained');\n    return idToken;\n  } catch (error) {\n    console.error('üîê Failed to get current user ID token:', error);\n    throw error;\n  }\n}\n\n/**\n * Validate Firebase ID token format\n */\nexport function validateFirebaseIdToken(token) {\n  if (!token || typeof token !== 'string') {\n    return false;\n  }\n\n  // Firebase ID tokens are JWTs with 3 parts separated by dots\n  const parts = token.split('.');\n  if (parts.length !== 3) {\n    return false;\n  }\n\n  try {\n    // Try to decode the payload (second part)\n    const payload = JSON.parse(atob(parts[1].replace(/-/g, '+').replace(/_/g, '/')));\n    \n    // Firebase ID tokens should have these claims\n    return (\n      payload.iss && \n      payload.aud && \n      payload.exp && \n      payload.iat &&\n      payload.sub &&\n      payload.iss.includes('securetoken.google.com')\n    );\n  } catch {\n    return false;\n  }\n}\n"],"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","ignoreList":[]}