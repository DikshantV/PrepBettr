89d12e0f2207a06214b8a9ce0d1a757c
"use strict";

/* istanbul ignore next */
function cov_25mhbiova0() {
  var path = "/Users/dikshantvashistha/PrepBettr/lib/services/user-targeting.ts";
  var hash = "ab1f895ba4c6ae4033849cc08ee92a8cf0d7d12e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dikshantvashistha/PrepBettr/lib/services/user-targeting.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 69
        }
      },
      "2": {
        start: {
          line: 4,
          column: 17
        },
        end: {
          line: 4,
          column: 45
        }
      },
      "3": {
        start: {
          line: 7,
          column: 8
        },
        end: {
          line: 9,
          column: 9
        }
      },
      "4": {
        start: {
          line: 8,
          column: 12
        },
        end: {
          line: 8,
          column: 71
        }
      },
      "5": {
        start: {
          line: 10,
          column: 8
        },
        end: {
          line: 10,
          column: 45
        }
      },
      "6": {
        start: {
          line: 16,
          column: 19
        },
        end: {
          line: 16,
          column: 20
        }
      },
      "7": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 21,
          column: 9
        }
      },
      "8": {
        start: {
          line: 17,
          column: 21
        },
        end: {
          line: 17,
          column: 22
        }
      },
      "9": {
        start: {
          line: 18,
          column: 25
        },
        end: {
          line: 18,
          column: 45
        }
      },
      "10": {
        start: {
          line: 19,
          column: 12
        },
        end: {
          line: 19,
          column: 47
        }
      },
      "11": {
        start: {
          line: 20,
          column: 12
        },
        end: {
          line: 20,
          column: 31
        }
      },
      "12": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 30
        }
      },
      "13": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 30,
          column: 25
        }
      },
      "14": {
        start: {
          line: 30,
          column: 12
        },
        end: {
          line: 30,
          column: 25
        }
      },
      "15": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 32,
          column: 24
        }
      },
      "16": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 32,
          column: 24
        }
      },
      "17": {
        start: {
          line: 34,
          column: 31
        },
        end: {
          line: 34,
          column: 71
        }
      },
      "18": {
        start: {
          line: 35,
          column: 21
        },
        end: {
          line: 35,
          column: 52
        }
      },
      "19": {
        start: {
          line: 37,
          column: 27
        },
        end: {
          line: 37,
          column: 37
        }
      },
      "20": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 53
        }
      },
      "21": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 164
        }
      },
      "22": {
        start: {
          line: 51,
          column: 23
        },
        end: {
          line: 51,
          column: 46
        }
      },
      "23": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 56,
          column: 9
        }
      },
      "24": {
        start: {
          line: 54,
          column: 31
        },
        end: {
          line: 54,
          column: 62
        }
      },
      "25": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 55,
          column: 67
        }
      },
      "26": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 59
        }
      },
      "27": {
        start: {
          line: 65,
          column: 26
        },
        end: {
          line: 65,
          column: 67
        }
      },
      "28": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 70,
          column: 9
        }
      },
      "29": {
        start: {
          line: 68,
          column: 12
        },
        end: {
          line: 68,
          column: 90
        }
      },
      "30": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 69,
          column: 67
        }
      },
      "31": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 71,
          column: 27
        }
      },
      "32": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 83,
          column: 10
        }
      },
      "33": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 91,
          column: 9
        }
      },
      "34": {
        start: {
          line: 90,
          column: 12
        },
        end: {
          line: 90,
          column: 76
        }
      },
      "35": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 92,
          column: 82
        }
      },
      "36": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 93,
          column: 72
        }
      },
      "37": {
        start: {
          line: 96,
          column: 0
        },
        end: {
          line: 96,
          column: 52
        }
      },
      "38": {
        start: {
          line: 100,
          column: 0
        },
        end: {
          line: 121,
          column: 2
        }
      },
      "39": {
        start: {
          line: 123,
          column: 0
        },
        end: {
          line: 123,
          column: 66
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 6,
            column: 4
          },
          end: {
            line: 6,
            column: 5
          }
        },
        loc: {
          start: {
            line: 6,
            column: 25
          },
          end: {
            line: 11,
            column: 5
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 23
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 28,
            column: 5
          }
        },
        loc: {
          start: {
            line: 28,
            column: 43
          },
          end: {
            line: 39,
            column: 5
          }
        },
        line: 28
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 43,
            column: 4
          },
          end: {
            line: 43,
            column: 5
          }
        },
        loc: {
          start: {
            line: 43,
            column: 23
          },
          end: {
            line: 46,
            column: 5
          }
        },
        line: 43
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 50,
            column: 4
          },
          end: {
            line: 50,
            column: 5
          }
        },
        loc: {
          start: {
            line: 50,
            column: 42
          },
          end: {
            line: 58,
            column: 5
          }
        },
        line: 50
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 63,
            column: 4
          },
          end: {
            line: 63,
            column: 5
          }
        },
        loc: {
          start: {
            line: 63,
            column: 31
          },
          end: {
            line: 72,
            column: 5
          }
        },
        line: 63
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 76,
            column: 4
          },
          end: {
            line: 76,
            column: 5
          }
        },
        loc: {
          start: {
            line: 76,
            column: 34
          },
          end: {
            line: 84,
            column: 5
          }
        },
        line: 76
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 88,
            column: 4
          },
          end: {
            line: 88,
            column: 5
          }
        },
        loc: {
          start: {
            line: 88,
            column: 60
          },
          end: {
            line: 94,
            column: 5
          }
        },
        line: 88
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 7,
            column: 8
          },
          end: {
            line: 9,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 7,
            column: 8
          },
          end: {
            line: 9,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 7
      },
      "1": {
        loc: {
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 30,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 30,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 29
      },
      "2": {
        loc: {
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 32,
            column: 24
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 32,
            column: 24
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 31
      },
      "3": {
        loc: {
          start: {
            line: 45,
            column: 15
          },
          end: {
            line: 45,
            column: 163
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 45,
            column: 16
          },
          end: {
            line: 45,
            column: 154
          }
        }, {
          start: {
            line: 45,
            column: 159
          },
          end: {
            line: 45,
            column: 163
          }
        }],
        line: 45
      },
      "4": {
        loc: {
          start: {
            line: 45,
            column: 16
          },
          end: {
            line: 45,
            column: 154
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 45,
            column: 139
          },
          end: {
            line: 45,
            column: 145
          }
        }, {
          start: {
            line: 45,
            column: 148
          },
          end: {
            line: 45,
            column: 154
          }
        }],
        line: 45
      },
      "5": {
        loc: {
          start: {
            line: 45,
            column: 16
          },
          end: {
            line: 45,
            column: 136
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 45,
            column: 16
          },
          end: {
            line: 45,
            column: 119
          }
        }, {
          start: {
            line: 45,
            column: 123
          },
          end: {
            line: 45,
            column: 136
          }
        }],
        line: 45
      },
      "6": {
        loc: {
          start: {
            line: 45,
            column: 22
          },
          end: {
            line: 45,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 45,
            column: 75
          },
          end: {
            line: 45,
            column: 81
          }
        }, {
          start: {
            line: 45,
            column: 84
          },
          end: {
            line: 45,
            column: 109
          }
        }],
        line: 45
      },
      "7": {
        loc: {
          start: {
            line: 45,
            column: 22
          },
          end: {
            line: 45,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 45,
            column: 22
          },
          end: {
            line: 45,
            column: 44
          }
        }, {
          start: {
            line: 45,
            column: 48
          },
          end: {
            line: 45,
            column: 72
          }
        }],
        line: 45
      },
      "8": {
        loc: {
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 56,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 56,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      },
      "9": {
        loc: {
          start: {
            line: 66,
            column: 8
          },
          end: {
            line: 70,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 66,
            column: 8
          },
          end: {
            line: 70,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 66
      },
      "10": {
        loc: {
          start: {
            line: 89,
            column: 8
          },
          end: {
            line: 91,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 89,
            column: 8
          },
          end: {
            line: 91,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 89
      },
      "11": {
        loc: {
          start: {
            line: 89,
            column: 12
          },
          end: {
            line: 89,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 89,
            column: 12
          },
          end: {
            line: 89,
            column: 26
          }
        }, {
          start: {
            line: 89,
            column: 30
          },
          end: {
            line: 89,
            column: 46
          }
        }],
        line: 89
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/dikshantvashistha/PrepBettr/lib/services/user-targeting.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/dikshantvashistha/PrepBettr/lib/services/user-targeting.ts"],
      sourcesContent: ["import { auth } from '@/firebase/client';\n\nexport interface RolloutConfig {\n  percentage: number; // 0-100, percentage of users to include\n  featureName: string;\n}\n\nexport class UserTargetingService {\n  private static instance: UserTargetingService;\n\n  static getInstance(): UserTargetingService {\n    if (!UserTargetingService.instance) {\n      UserTargetingService.instance = new UserTargetingService();\n    }\n    return UserTargetingService.instance;\n  }\n\n  /**\n   * Simple hash function to create a consistent hash from user ID\n   */\n  private hashUserId(userId: string): number {\n    let hash = 0;\n    for (let i = 0; i < userId.length; i++) {\n      const char = userId.charCodeAt(i);\n      hash = ((hash << 5) - hash) + char;\n      hash = hash & hash; // Convert to 32-bit integer\n    }\n    return Math.abs(hash);\n  }\n\n  /**\n   * Determines if a user should be included in a feature rollout\n   * Uses consistent hashing to ensure the same user always gets the same result\n   */\n  isUserInRollout(userId: string, rolloutConfig: RolloutConfig): boolean {\n    if (rolloutConfig.percentage <= 0) return false;\n    if (rolloutConfig.percentage >= 100) return true;\n\n    // Create a feature-specific hash by combining userId and feature name\n    const combinedString = `${userId}-${rolloutConfig.featureName}`;\n    const hash = this.hashUserId(combinedString);\n    \n    // Use modulo to get a consistent percentage (0-99)\n    const userBucket = hash % 100;\n    \n    return userBucket < rolloutConfig.percentage;\n  }\n\n  /**\n   * Get the current user's ID\n   */\n  getCurrentUserId(): string | null {\n    return auth?.currentUser?.uid || null;\n  }\n\n  /**\n   * Check if current user is in a specific feature rollout\n   */\n  isCurrentUserInRollout(rolloutConfig: RolloutConfig): boolean {\n    const userId = this.getCurrentUserId();\n    if (!userId) {\n      // For anonymous users, use a fallback (could be device ID, session ID, etc.)\n      const fallbackId = this.getAnonymousUserFallback();\n      return this.isUserInRollout(fallbackId, rolloutConfig);\n    }\n    \n    return this.isUserInRollout(userId, rolloutConfig);\n  }\n\n  /**\n   * Generate a fallback ID for anonymous users\n   * This could be based on device fingerprinting, localStorage, etc.\n   */\n  private getAnonymousUserFallback(): string {\n    // Try to get or create a persistent anonymous ID\n    let anonymousId = localStorage.getItem('prep_anonymous_id');\n    \n    if (!anonymousId) {\n      // Generate a new anonymous ID\n      anonymousId = `anon_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n      localStorage.setItem('prep_anonymous_id', anonymousId);\n    }\n    \n    return anonymousId;\n  }\n\n  /**\n   * Predefined rollout configurations\n   */\n  static ROLLOUT_CONFIGS = {\n    autoApplyAzure: {\n      percentage: 5, // Start with 5% rollout\n      featureName: 'autoApplyAzure'\n    } as RolloutConfig,\n    \n    portalIntegration: {\n      percentage: 5, // Start with 5% rollout\n      featureName: 'portalIntegration'\n    } as RolloutConfig,\n    \n    voiceInterview: {\n      percentage: 10, // Start with 10% rollout\n      featureName: 'voiceInterview'\n    } as RolloutConfig,\n    \n    premiumFeatures: {\n      percentage: 15, // Start with 15% rollout\n      featureName: 'premiumFeatures'\n    } as RolloutConfig,\n    \n    newUI: {\n      percentage: 20, // Start with 20% rollout\n      featureName: 'newUI'\n    } as RolloutConfig,\n  };\n\n  /**\n   * Get all rollout statuses for the current user\n   */\n  getCurrentUserRolloutStatus(): Record<string, boolean> {\n    return {\n      autoApplyAzure: this.isCurrentUserInRollout(UserTargetingService.ROLLOUT_CONFIGS.autoApplyAzure),\n      portalIntegration: this.isCurrentUserInRollout(UserTargetingService.ROLLOUT_CONFIGS.portalIntegration),\n      voiceInterview: this.isCurrentUserInRollout(UserTargetingService.ROLLOUT_CONFIGS.voiceInterview),\n      premiumFeatures: this.isCurrentUserInRollout(UserTargetingService.ROLLOUT_CONFIGS.premiumFeatures),\n      newUI: this.isCurrentUserInRollout(UserTargetingService.ROLLOUT_CONFIGS.newUI),\n    };\n  }\n\n  /**\n   * Update rollout percentage for a feature (for admin/testing purposes)\n   */\n  static updateRolloutPercentage(featureName: keyof typeof UserTargetingService.ROLLOUT_CONFIGS, percentage: number): void {\n    if (percentage < 0 || percentage > 100) {\n      throw new Error('Rollout percentage must be between 0 and 100');\n    }\n    \n    UserTargetingService.ROLLOUT_CONFIGS[featureName].percentage = percentage;\n    console.log(`Updated ${featureName} rollout to ${percentage}%`);\n  }\n}\n\n// Export singleton instance\nexport const userTargetingService = UserTargetingService.getInstance();\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ab1f895ba4c6ae4033849cc08ee92a8cf0d7d12e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_25mhbiova0 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_25mhbiova0();
cov_25mhbiova0().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_25mhbiova0().s[1]++;
exports.userTargetingService = exports.UserTargetingService = void 0;
const client_1 =
/* istanbul ignore next */
(cov_25mhbiova0().s[2]++, require("@/firebase/client"));
class UserTargetingService {
  static getInstance() {
    /* istanbul ignore next */
    cov_25mhbiova0().f[0]++;
    cov_25mhbiova0().s[3]++;
    if (!UserTargetingService.instance) {
      /* istanbul ignore next */
      cov_25mhbiova0().b[0][0]++;
      cov_25mhbiova0().s[4]++;
      UserTargetingService.instance = new UserTargetingService();
    } else
    /* istanbul ignore next */
    {
      cov_25mhbiova0().b[0][1]++;
    }
    cov_25mhbiova0().s[5]++;
    return UserTargetingService.instance;
  }
  /**
   * Simple hash function to create a consistent hash from user ID
   */
  hashUserId(userId) {
    /* istanbul ignore next */
    cov_25mhbiova0().f[1]++;
    let hash =
    /* istanbul ignore next */
    (cov_25mhbiova0().s[6]++, 0);
    /* istanbul ignore next */
    cov_25mhbiova0().s[7]++;
    for (let i =
    /* istanbul ignore next */
    (cov_25mhbiova0().s[8]++, 0); i < userId.length; i++) {
      const char =
      /* istanbul ignore next */
      (cov_25mhbiova0().s[9]++, userId.charCodeAt(i));
      /* istanbul ignore next */
      cov_25mhbiova0().s[10]++;
      hash = (hash << 5) - hash + char;
      /* istanbul ignore next */
      cov_25mhbiova0().s[11]++;
      hash = hash & hash; // Convert to 32-bit integer
    }
    /* istanbul ignore next */
    cov_25mhbiova0().s[12]++;
    return Math.abs(hash);
  }
  /**
   * Determines if a user should be included in a feature rollout
   * Uses consistent hashing to ensure the same user always gets the same result
   */
  isUserInRollout(userId, rolloutConfig) {
    /* istanbul ignore next */
    cov_25mhbiova0().f[2]++;
    cov_25mhbiova0().s[13]++;
    if (rolloutConfig.percentage <= 0) {
      /* istanbul ignore next */
      cov_25mhbiova0().b[1][0]++;
      cov_25mhbiova0().s[14]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_25mhbiova0().b[1][1]++;
    }
    cov_25mhbiova0().s[15]++;
    if (rolloutConfig.percentage >= 100) {
      /* istanbul ignore next */
      cov_25mhbiova0().b[2][0]++;
      cov_25mhbiova0().s[16]++;
      return true;
    } else
    /* istanbul ignore next */
    {
      cov_25mhbiova0().b[2][1]++;
    }
    // Create a feature-specific hash by combining userId and feature name
    const combinedString =
    /* istanbul ignore next */
    (cov_25mhbiova0().s[17]++, `${userId}-${rolloutConfig.featureName}`);
    const hash =
    /* istanbul ignore next */
    (cov_25mhbiova0().s[18]++, this.hashUserId(combinedString));
    // Use modulo to get a consistent percentage (0-99)
    const userBucket =
    /* istanbul ignore next */
    (cov_25mhbiova0().s[19]++, hash % 100);
    /* istanbul ignore next */
    cov_25mhbiova0().s[20]++;
    return userBucket < rolloutConfig.percentage;
  }
  /**
   * Get the current user's ID
   */
  getCurrentUserId() {
    /* istanbul ignore next */
    cov_25mhbiova0().f[3]++;
    var _a;
    /* istanbul ignore next */
    cov_25mhbiova0().s[21]++;
    return /* istanbul ignore next */(cov_25mhbiova0().b[3][0]++,
    /* istanbul ignore next */
    (cov_25mhbiova0().b[5][0]++, (_a =
    /* istanbul ignore next */
    (cov_25mhbiova0().b[7][0]++, client_1.auth === null) ||
    /* istanbul ignore next */
    (cov_25mhbiova0().b[7][1]++, client_1.auth === void 0) ?
    /* istanbul ignore next */
    (cov_25mhbiova0().b[6][0]++, void 0) :
    /* istanbul ignore next */
    (cov_25mhbiova0().b[6][1]++, client_1.auth.currentUser)) === null) ||
    /* istanbul ignore next */
    (cov_25mhbiova0().b[5][1]++, _a === void 0) ?
    /* istanbul ignore next */
    (cov_25mhbiova0().b[4][0]++, void 0) :
    /* istanbul ignore next */
    (cov_25mhbiova0().b[4][1]++, _a.uid)) ||
    /* istanbul ignore next */
    (cov_25mhbiova0().b[3][1]++, null);
  }
  /**
   * Check if current user is in a specific feature rollout
   */
  isCurrentUserInRollout(rolloutConfig) {
    /* istanbul ignore next */
    cov_25mhbiova0().f[4]++;
    const userId =
    /* istanbul ignore next */
    (cov_25mhbiova0().s[22]++, this.getCurrentUserId());
    /* istanbul ignore next */
    cov_25mhbiova0().s[23]++;
    if (!userId) {
      /* istanbul ignore next */
      cov_25mhbiova0().b[8][0]++;
      // For anonymous users, use a fallback (could be device ID, session ID, etc.)
      const fallbackId =
      /* istanbul ignore next */
      (cov_25mhbiova0().s[24]++, this.getAnonymousUserFallback());
      /* istanbul ignore next */
      cov_25mhbiova0().s[25]++;
      return this.isUserInRollout(fallbackId, rolloutConfig);
    } else
    /* istanbul ignore next */
    {
      cov_25mhbiova0().b[8][1]++;
    }
    cov_25mhbiova0().s[26]++;
    return this.isUserInRollout(userId, rolloutConfig);
  }
  /**
   * Generate a fallback ID for anonymous users
   * This could be based on device fingerprinting, localStorage, etc.
   */
  getAnonymousUserFallback() {
    /* istanbul ignore next */
    cov_25mhbiova0().f[5]++;
    // Try to get or create a persistent anonymous ID
    let anonymousId =
    /* istanbul ignore next */
    (cov_25mhbiova0().s[27]++, localStorage.getItem('prep_anonymous_id'));
    /* istanbul ignore next */
    cov_25mhbiova0().s[28]++;
    if (!anonymousId) {
      /* istanbul ignore next */
      cov_25mhbiova0().b[9][0]++;
      cov_25mhbiova0().s[29]++;
      // Generate a new anonymous ID
      anonymousId = `anon_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;
      /* istanbul ignore next */
      cov_25mhbiova0().s[30]++;
      localStorage.setItem('prep_anonymous_id', anonymousId);
    } else
    /* istanbul ignore next */
    {
      cov_25mhbiova0().b[9][1]++;
    }
    cov_25mhbiova0().s[31]++;
    return anonymousId;
  }
  /**
   * Get all rollout statuses for the current user
   */
  getCurrentUserRolloutStatus() {
    /* istanbul ignore next */
    cov_25mhbiova0().f[6]++;
    cov_25mhbiova0().s[32]++;
    return {
      autoApplyAzure: this.isCurrentUserInRollout(UserTargetingService.ROLLOUT_CONFIGS.autoApplyAzure),
      portalIntegration: this.isCurrentUserInRollout(UserTargetingService.ROLLOUT_CONFIGS.portalIntegration),
      voiceInterview: this.isCurrentUserInRollout(UserTargetingService.ROLLOUT_CONFIGS.voiceInterview),
      premiumFeatures: this.isCurrentUserInRollout(UserTargetingService.ROLLOUT_CONFIGS.premiumFeatures),
      newUI: this.isCurrentUserInRollout(UserTargetingService.ROLLOUT_CONFIGS.newUI)
    };
  }
  /**
   * Update rollout percentage for a feature (for admin/testing purposes)
   */
  static updateRolloutPercentage(featureName, percentage) {
    /* istanbul ignore next */
    cov_25mhbiova0().f[7]++;
    cov_25mhbiova0().s[33]++;
    if (
    /* istanbul ignore next */
    (cov_25mhbiova0().b[11][0]++, percentage < 0) ||
    /* istanbul ignore next */
    (cov_25mhbiova0().b[11][1]++, percentage > 100)) {
      /* istanbul ignore next */
      cov_25mhbiova0().b[10][0]++;
      cov_25mhbiova0().s[34]++;
      throw new Error('Rollout percentage must be between 0 and 100');
    } else
    /* istanbul ignore next */
    {
      cov_25mhbiova0().b[10][1]++;
    }
    cov_25mhbiova0().s[35]++;
    UserTargetingService.ROLLOUT_CONFIGS[featureName].percentage = percentage;
    /* istanbul ignore next */
    cov_25mhbiova0().s[36]++;
    console.log(`Updated ${featureName} rollout to ${percentage}%`);
  }
}
/* istanbul ignore next */
cov_25mhbiova0().s[37]++;
exports.UserTargetingService = UserTargetingService;
/**
 * Predefined rollout configurations
 */
/* istanbul ignore next */
cov_25mhbiova0().s[38]++;
UserTargetingService.ROLLOUT_CONFIGS = {
  autoApplyAzure: {
    percentage: 5,
    // Start with 5% rollout
    featureName: 'autoApplyAzure'
  },
  portalIntegration: {
    percentage: 5,
    // Start with 5% rollout
    featureName: 'portalIntegration'
  },
  voiceInterview: {
    percentage: 10,
    // Start with 10% rollout
    featureName: 'voiceInterview'
  },
  premiumFeatures: {
    percentage: 15,
    // Start with 15% rollout
    featureName: 'premiumFeatures'
  },
  newUI: {
    percentage: 20,
    // Start with 20% rollout
    featureName: 'newUI'
  }
};
// Export singleton instance
/* istanbul ignore next */
cov_25mhbiova0().s[39]++;
exports.userTargetingService = UserTargetingService.getInstance();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMjVtaGJpb3ZhMCIsImFjdHVhbENvdmVyYWdlIiwicyIsImNsaWVudF8xIiwicmVxdWlyZSIsIlVzZXJUYXJnZXRpbmdTZXJ2aWNlIiwiZ2V0SW5zdGFuY2UiLCJmIiwiaW5zdGFuY2UiLCJiIiwiaGFzaFVzZXJJZCIsInVzZXJJZCIsImhhc2giLCJpIiwibGVuZ3RoIiwiY2hhciIsImNoYXJDb2RlQXQiLCJNYXRoIiwiYWJzIiwiaXNVc2VySW5Sb2xsb3V0Iiwicm9sbG91dENvbmZpZyIsInBlcmNlbnRhZ2UiLCJjb21iaW5lZFN0cmluZyIsImZlYXR1cmVOYW1lIiwidXNlckJ1Y2tldCIsImdldEN1cnJlbnRVc2VySWQiLCJfYSIsImF1dGgiLCJjdXJyZW50VXNlciIsInVpZCIsImlzQ3VycmVudFVzZXJJblJvbGxvdXQiLCJmYWxsYmFja0lkIiwiZ2V0QW5vbnltb3VzVXNlckZhbGxiYWNrIiwiYW5vbnltb3VzSWQiLCJsb2NhbFN0b3JhZ2UiLCJnZXRJdGVtIiwiRGF0ZSIsIm5vdyIsInJhbmRvbSIsInRvU3RyaW5nIiwic3Vic3RyIiwic2V0SXRlbSIsImdldEN1cnJlbnRVc2VyUm9sbG91dFN0YXR1cyIsImF1dG9BcHBseUF6dXJlIiwiUk9MTE9VVF9DT05GSUdTIiwicG9ydGFsSW50ZWdyYXRpb24iLCJ2b2ljZUludGVydmlldyIsInByZW1pdW1GZWF0dXJlcyIsIm5ld1VJIiwidXBkYXRlUm9sbG91dFBlcmNlbnRhZ2UiLCJFcnJvciIsImNvbnNvbGUiLCJsb2ciLCJleHBvcnRzIiwidXNlclRhcmdldGluZ1NlcnZpY2UiXSwic291cmNlcyI6WyIvVXNlcnMvZGlrc2hhbnR2YXNoaXN0aGEvUHJlcEJldHRyL2xpYi9zZXJ2aWNlcy91c2VyLXRhcmdldGluZy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBhdXRoIH0gZnJvbSAnQC9maXJlYmFzZS9jbGllbnQnO1xuXG5leHBvcnQgaW50ZXJmYWNlIFJvbGxvdXRDb25maWcge1xuICBwZXJjZW50YWdlOiBudW1iZXI7IC8vIDAtMTAwLCBwZXJjZW50YWdlIG9mIHVzZXJzIHRvIGluY2x1ZGVcbiAgZmVhdHVyZU5hbWU6IHN0cmluZztcbn1cblxuZXhwb3J0IGNsYXNzIFVzZXJUYXJnZXRpbmdTZXJ2aWNlIHtcbiAgcHJpdmF0ZSBzdGF0aWMgaW5zdGFuY2U6IFVzZXJUYXJnZXRpbmdTZXJ2aWNlO1xuXG4gIHN0YXRpYyBnZXRJbnN0YW5jZSgpOiBVc2VyVGFyZ2V0aW5nU2VydmljZSB7XG4gICAgaWYgKCFVc2VyVGFyZ2V0aW5nU2VydmljZS5pbnN0YW5jZSkge1xuICAgICAgVXNlclRhcmdldGluZ1NlcnZpY2UuaW5zdGFuY2UgPSBuZXcgVXNlclRhcmdldGluZ1NlcnZpY2UoKTtcbiAgICB9XG4gICAgcmV0dXJuIFVzZXJUYXJnZXRpbmdTZXJ2aWNlLmluc3RhbmNlO1xuICB9XG5cbiAgLyoqXG4gICAqIFNpbXBsZSBoYXNoIGZ1bmN0aW9uIHRvIGNyZWF0ZSBhIGNvbnNpc3RlbnQgaGFzaCBmcm9tIHVzZXIgSURcbiAgICovXG4gIHByaXZhdGUgaGFzaFVzZXJJZCh1c2VySWQ6IHN0cmluZyk6IG51bWJlciB7XG4gICAgbGV0IGhhc2ggPSAwO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdXNlcklkLmxlbmd0aDsgaSsrKSB7XG4gICAgICBjb25zdCBjaGFyID0gdXNlcklkLmNoYXJDb2RlQXQoaSk7XG4gICAgICBoYXNoID0gKChoYXNoIDw8IDUpIC0gaGFzaCkgKyBjaGFyO1xuICAgICAgaGFzaCA9IGhhc2ggJiBoYXNoOyAvLyBDb252ZXJ0IHRvIDMyLWJpdCBpbnRlZ2VyXG4gICAgfVxuICAgIHJldHVybiBNYXRoLmFicyhoYXNoKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBEZXRlcm1pbmVzIGlmIGEgdXNlciBzaG91bGQgYmUgaW5jbHVkZWQgaW4gYSBmZWF0dXJlIHJvbGxvdXRcbiAgICogVXNlcyBjb25zaXN0ZW50IGhhc2hpbmcgdG8gZW5zdXJlIHRoZSBzYW1lIHVzZXIgYWx3YXlzIGdldHMgdGhlIHNhbWUgcmVzdWx0XG4gICAqL1xuICBpc1VzZXJJblJvbGxvdXQodXNlcklkOiBzdHJpbmcsIHJvbGxvdXRDb25maWc6IFJvbGxvdXRDb25maWcpOiBib29sZWFuIHtcbiAgICBpZiAocm9sbG91dENvbmZpZy5wZXJjZW50YWdlIDw9IDApIHJldHVybiBmYWxzZTtcbiAgICBpZiAocm9sbG91dENvbmZpZy5wZXJjZW50YWdlID49IDEwMCkgcmV0dXJuIHRydWU7XG5cbiAgICAvLyBDcmVhdGUgYSBmZWF0dXJlLXNwZWNpZmljIGhhc2ggYnkgY29tYmluaW5nIHVzZXJJZCBhbmQgZmVhdHVyZSBuYW1lXG4gICAgY29uc3QgY29tYmluZWRTdHJpbmcgPSBgJHt1c2VySWR9LSR7cm9sbG91dENvbmZpZy5mZWF0dXJlTmFtZX1gO1xuICAgIGNvbnN0IGhhc2ggPSB0aGlzLmhhc2hVc2VySWQoY29tYmluZWRTdHJpbmcpO1xuICAgIFxuICAgIC8vIFVzZSBtb2R1bG8gdG8gZ2V0IGEgY29uc2lzdGVudCBwZXJjZW50YWdlICgwLTk5KVxuICAgIGNvbnN0IHVzZXJCdWNrZXQgPSBoYXNoICUgMTAwO1xuICAgIFxuICAgIHJldHVybiB1c2VyQnVja2V0IDwgcm9sbG91dENvbmZpZy5wZXJjZW50YWdlO1xuICB9XG5cbiAgLyoqXG4gICAqIEdldCB0aGUgY3VycmVudCB1c2VyJ3MgSURcbiAgICovXG4gIGdldEN1cnJlbnRVc2VySWQoKTogc3RyaW5nIHwgbnVsbCB7XG4gICAgcmV0dXJuIGF1dGg/LmN1cnJlbnRVc2VyPy51aWQgfHwgbnVsbDtcbiAgfVxuXG4gIC8qKlxuICAgKiBDaGVjayBpZiBjdXJyZW50IHVzZXIgaXMgaW4gYSBzcGVjaWZpYyBmZWF0dXJlIHJvbGxvdXRcbiAgICovXG4gIGlzQ3VycmVudFVzZXJJblJvbGxvdXQocm9sbG91dENvbmZpZzogUm9sbG91dENvbmZpZyk6IGJvb2xlYW4ge1xuICAgIGNvbnN0IHVzZXJJZCA9IHRoaXMuZ2V0Q3VycmVudFVzZXJJZCgpO1xuICAgIGlmICghdXNlcklkKSB7XG4gICAgICAvLyBGb3IgYW5vbnltb3VzIHVzZXJzLCB1c2UgYSBmYWxsYmFjayAoY291bGQgYmUgZGV2aWNlIElELCBzZXNzaW9uIElELCBldGMuKVxuICAgICAgY29uc3QgZmFsbGJhY2tJZCA9IHRoaXMuZ2V0QW5vbnltb3VzVXNlckZhbGxiYWNrKCk7XG4gICAgICByZXR1cm4gdGhpcy5pc1VzZXJJblJvbGxvdXQoZmFsbGJhY2tJZCwgcm9sbG91dENvbmZpZyk7XG4gICAgfVxuICAgIFxuICAgIHJldHVybiB0aGlzLmlzVXNlckluUm9sbG91dCh1c2VySWQsIHJvbGxvdXRDb25maWcpO1xuICB9XG5cbiAgLyoqXG4gICAqIEdlbmVyYXRlIGEgZmFsbGJhY2sgSUQgZm9yIGFub255bW91cyB1c2Vyc1xuICAgKiBUaGlzIGNvdWxkIGJlIGJhc2VkIG9uIGRldmljZSBmaW5nZXJwcmludGluZywgbG9jYWxTdG9yYWdlLCBldGMuXG4gICAqL1xuICBwcml2YXRlIGdldEFub255bW91c1VzZXJGYWxsYmFjaygpOiBzdHJpbmcge1xuICAgIC8vIFRyeSB0byBnZXQgb3IgY3JlYXRlIGEgcGVyc2lzdGVudCBhbm9ueW1vdXMgSURcbiAgICBsZXQgYW5vbnltb3VzSWQgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgncHJlcF9hbm9ueW1vdXNfaWQnKTtcbiAgICBcbiAgICBpZiAoIWFub255bW91c0lkKSB7XG4gICAgICAvLyBHZW5lcmF0ZSBhIG5ldyBhbm9ueW1vdXMgSURcbiAgICAgIGFub255bW91c0lkID0gYGFub25fJHtEYXRlLm5vdygpfV8ke01hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnN1YnN0cigyLCA5KX1gO1xuICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ3ByZXBfYW5vbnltb3VzX2lkJywgYW5vbnltb3VzSWQpO1xuICAgIH1cbiAgICBcbiAgICByZXR1cm4gYW5vbnltb3VzSWQ7XG4gIH1cblxuICAvKipcbiAgICogUHJlZGVmaW5lZCByb2xsb3V0IGNvbmZpZ3VyYXRpb25zXG4gICAqL1xuICBzdGF0aWMgUk9MTE9VVF9DT05GSUdTID0ge1xuICAgIGF1dG9BcHBseUF6dXJlOiB7XG4gICAgICBwZXJjZW50YWdlOiA1LCAvLyBTdGFydCB3aXRoIDUlIHJvbGxvdXRcbiAgICAgIGZlYXR1cmVOYW1lOiAnYXV0b0FwcGx5QXp1cmUnXG4gICAgfSBhcyBSb2xsb3V0Q29uZmlnLFxuICAgIFxuICAgIHBvcnRhbEludGVncmF0aW9uOiB7XG4gICAgICBwZXJjZW50YWdlOiA1LCAvLyBTdGFydCB3aXRoIDUlIHJvbGxvdXRcbiAgICAgIGZlYXR1cmVOYW1lOiAncG9ydGFsSW50ZWdyYXRpb24nXG4gICAgfSBhcyBSb2xsb3V0Q29uZmlnLFxuICAgIFxuICAgIHZvaWNlSW50ZXJ2aWV3OiB7XG4gICAgICBwZXJjZW50YWdlOiAxMCwgLy8gU3RhcnQgd2l0aCAxMCUgcm9sbG91dFxuICAgICAgZmVhdHVyZU5hbWU6ICd2b2ljZUludGVydmlldydcbiAgICB9IGFzIFJvbGxvdXRDb25maWcsXG4gICAgXG4gICAgcHJlbWl1bUZlYXR1cmVzOiB7XG4gICAgICBwZXJjZW50YWdlOiAxNSwgLy8gU3RhcnQgd2l0aCAxNSUgcm9sbG91dFxuICAgICAgZmVhdHVyZU5hbWU6ICdwcmVtaXVtRmVhdHVyZXMnXG4gICAgfSBhcyBSb2xsb3V0Q29uZmlnLFxuICAgIFxuICAgIG5ld1VJOiB7XG4gICAgICBwZXJjZW50YWdlOiAyMCwgLy8gU3RhcnQgd2l0aCAyMCUgcm9sbG91dFxuICAgICAgZmVhdHVyZU5hbWU6ICduZXdVSSdcbiAgICB9IGFzIFJvbGxvdXRDb25maWcsXG4gIH07XG5cbiAgLyoqXG4gICAqIEdldCBhbGwgcm9sbG91dCBzdGF0dXNlcyBmb3IgdGhlIGN1cnJlbnQgdXNlclxuICAgKi9cbiAgZ2V0Q3VycmVudFVzZXJSb2xsb3V0U3RhdHVzKCk6IFJlY29yZDxzdHJpbmcsIGJvb2xlYW4+IHtcbiAgICByZXR1cm4ge1xuICAgICAgYXV0b0FwcGx5QXp1cmU6IHRoaXMuaXNDdXJyZW50VXNlckluUm9sbG91dChVc2VyVGFyZ2V0aW5nU2VydmljZS5ST0xMT1VUX0NPTkZJR1MuYXV0b0FwcGx5QXp1cmUpLFxuICAgICAgcG9ydGFsSW50ZWdyYXRpb246IHRoaXMuaXNDdXJyZW50VXNlckluUm9sbG91dChVc2VyVGFyZ2V0aW5nU2VydmljZS5ST0xMT1VUX0NPTkZJR1MucG9ydGFsSW50ZWdyYXRpb24pLFxuICAgICAgdm9pY2VJbnRlcnZpZXc6IHRoaXMuaXNDdXJyZW50VXNlckluUm9sbG91dChVc2VyVGFyZ2V0aW5nU2VydmljZS5ST0xMT1VUX0NPTkZJR1Mudm9pY2VJbnRlcnZpZXcpLFxuICAgICAgcHJlbWl1bUZlYXR1cmVzOiB0aGlzLmlzQ3VycmVudFVzZXJJblJvbGxvdXQoVXNlclRhcmdldGluZ1NlcnZpY2UuUk9MTE9VVF9DT05GSUdTLnByZW1pdW1GZWF0dXJlcyksXG4gICAgICBuZXdVSTogdGhpcy5pc0N1cnJlbnRVc2VySW5Sb2xsb3V0KFVzZXJUYXJnZXRpbmdTZXJ2aWNlLlJPTExPVVRfQ09ORklHUy5uZXdVSSksXG4gICAgfTtcbiAgfVxuXG4gIC8qKlxuICAgKiBVcGRhdGUgcm9sbG91dCBwZXJjZW50YWdlIGZvciBhIGZlYXR1cmUgKGZvciBhZG1pbi90ZXN0aW5nIHB1cnBvc2VzKVxuICAgKi9cbiAgc3RhdGljIHVwZGF0ZVJvbGxvdXRQZXJjZW50YWdlKGZlYXR1cmVOYW1lOiBrZXlvZiB0eXBlb2YgVXNlclRhcmdldGluZ1NlcnZpY2UuUk9MTE9VVF9DT05GSUdTLCBwZXJjZW50YWdlOiBudW1iZXIpOiB2b2lkIHtcbiAgICBpZiAocGVyY2VudGFnZSA8IDAgfHwgcGVyY2VudGFnZSA+IDEwMCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdSb2xsb3V0IHBlcmNlbnRhZ2UgbXVzdCBiZSBiZXR3ZWVuIDAgYW5kIDEwMCcpO1xuICAgIH1cbiAgICBcbiAgICBVc2VyVGFyZ2V0aW5nU2VydmljZS5ST0xMT1VUX0NPTkZJR1NbZmVhdHVyZU5hbWVdLnBlcmNlbnRhZ2UgPSBwZXJjZW50YWdlO1xuICAgIGNvbnNvbGUubG9nKGBVcGRhdGVkICR7ZmVhdHVyZU5hbWV9IHJvbGxvdXQgdG8gJHtwZXJjZW50YWdlfSVgKTtcbiAgfVxufVxuXG4vLyBFeHBvcnQgc2luZ2xldG9uIGluc3RhbmNlXG5leHBvcnQgY29uc3QgdXNlclRhcmdldGluZ1NlcnZpY2UgPSBVc2VyVGFyZ2V0aW5nU2VydmljZS5nZXRJbnN0YW5jZSgpO1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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