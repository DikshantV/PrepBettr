{"version":3,"names":["cov_2istgqfku","actualCoverage","s","exports","GET","POST","server_1","require","authMiddleware_1","request","f","timestamp","Date","toISOString","console","log","b","_a","headers","get","substring","authHeader","hasAuthHeader","startsWithBearer","startsWith","headerPreview","error","NextResponse","json","status","token","tokenLength","length","tokenParts","split","tokenPrefix","isJWT","includes","authResult","verifyFirebaseToken","success","hasUser","user","uid","_b","email","_c","Error","message"],"sources":["/Users/dikshantvashistha/PrepBettr/app/api/auth/verify/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { verifyFirebaseToken } from '@/lib/middleware/authMiddleware';\n\nexport async function GET(request: NextRequest) {\n  const timestamp = new Date().toISOString();\n  console.log(`üîç [${timestamp}] AUTH VERIFY GET called - User-Agent: ${request.headers.get('user-agent')?.substring(0, 50)}`);\n  try {\n    const authHeader = request.headers.get('authorization');\n    \n    console.log(`üîç [${timestamp}] Authorization header check:`, {\n      hasAuthHeader: !!authHeader,\n      startsWithBearer: authHeader?.startsWith('Bearer ') || false,\n      headerPreview: authHeader ? authHeader.substring(0, 20) + '...' : 'none'\n    });\n    \n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      console.error(`üîç [${timestamp}] Missing or invalid authorization header`);\n      return NextResponse.json(\n        { error: 'Missing or invalid authorization header' },\n        { status: 401 }\n      );\n    }\n\n    const token = authHeader.substring(7); // Remove 'Bearer ' prefix\n    \n    console.log(`üîç [${timestamp}] Token details:`, {\n      tokenLength: token.length,\n      tokenParts: token.split('.').length,\n      tokenPrefix: token.substring(0, 50) + '...',\n      isJWT: token.includes('.')\n    });\n    \n    console.log(`üîç [${timestamp}] Calling verifyFirebaseToken...`);\n    const authResult = await verifyFirebaseToken(token);\n    \n    console.log(`üîç [${timestamp}] Firebase token verification result:`, {\n      success: authResult.success,\n      hasUser: !!authResult.user,\n      uid: authResult.user?.uid,\n      email: authResult.user?.email,\n      error: authResult.error\n    });\n    \n    if (!authResult.success || !authResult.user) {\n      console.error(`üîç [${timestamp}] Token verification failed:`, {\n        success: authResult.success,\n        hasUser: !!authResult.user,\n        error: authResult.error\n      });\n      return NextResponse.json(\n        { error: `Invalid or expired token: ${authResult.error}` },\n        { status: 401 }\n      );\n    }\n\n    console.log(`üîç [${timestamp}] Token verification successful for uid: ${authResult.user.uid}`);\n    return NextResponse.json({\n      success: true,\n      user: authResult.user\n    });\n\n  } catch (error) {\n    console.error(`üîç [${timestamp}] Token verification error:`, error);\n    return NextResponse.json(\n      { error: `Token verification failed: ${error instanceof Error ? error.message : 'Unknown error'}` },\n      { status: 500 }\n    );\n  }\n}\n\nexport async function POST(request: NextRequest) {\n  // Support both GET and POST for flexibility\n  return GET(request);\n}\n"],"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","ignoreList":[]}