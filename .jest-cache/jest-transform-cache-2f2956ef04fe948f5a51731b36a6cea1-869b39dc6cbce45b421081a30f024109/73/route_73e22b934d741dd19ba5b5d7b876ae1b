01212590a00d83c51216953309f0a522
"use strict";

/* istanbul ignore next */
function cov_2istgqfku() {
  var path = "/Users/dikshantvashistha/PrepBettr/app/api/auth/verify/route.ts";
  var hash = "11f6ee55be49c30c21f6bf10d84b43dd2af79607";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dikshantvashistha/PrepBettr/app/api/auth/verify/route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 18
        }
      },
      "2": {
        start: {
          line: 4,
          column: 0
        },
        end: {
          line: 4,
          column: 20
        }
      },
      "3": {
        start: {
          line: 5,
          column: 17
        },
        end: {
          line: 5,
          column: 39
        }
      },
      "4": {
        start: {
          line: 6,
          column: 25
        },
        end: {
          line: 6,
          column: 67
        }
      },
      "5": {
        start: {
          line: 9,
          column: 22
        },
        end: {
          line: 9,
          column: 46
        }
      },
      "6": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 175
        }
      },
      "7": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 55,
          column: 5
        }
      },
      "8": {
        start: {
          line: 12,
          column: 27
        },
        end: {
          line: 12,
          column: 63
        }
      },
      "9": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 17,
          column: 11
        }
      },
      "10": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 21,
          column: 9
        }
      },
      "11": {
        start: {
          line: 19,
          column: 12
        },
        end: {
          line: 19,
          column: 87
        }
      },
      "12": {
        start: {
          line: 20,
          column: 12
        },
        end: {
          line: 20,
          column: 117
        }
      },
      "13": {
        start: {
          line: 22,
          column: 22
        },
        end: {
          line: 22,
          column: 45
        }
      },
      "14": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 28,
          column: 11
        }
      },
      "15": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 72
        }
      },
      "16": {
        start: {
          line: 30,
          column: 27
        },
        end: {
          line: 30,
          column: 81
        }
      },
      "17": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 37,
          column: 11
        }
      },
      "18": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 45,
          column: 9
        }
      },
      "19": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 43,
          column: 15
        }
      },
      "20": {
        start: {
          line: 44,
          column: 12
        },
        end: {
          line: 44,
          column: 123
        }
      },
      "21": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 46,
          column: 103
        }
      },
      "22": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 50,
          column: 11
        }
      },
      "23": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 53,
          column: 76
        }
      },
      "24": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 54,
          column: 160
        }
      },
      "25": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 59,
          column: 24
        }
      }
    },
    fnMap: {
      "0": {
        name: "GET",
        decl: {
          start: {
            line: 7,
            column: 15
          },
          end: {
            line: 7,
            column: 18
          }
        },
        loc: {
          start: {
            line: 7,
            column: 28
          },
          end: {
            line: 56,
            column: 1
          }
        },
        line: 7
      },
      "1": {
        name: "POST",
        decl: {
          start: {
            line: 57,
            column: 15
          },
          end: {
            line: 57,
            column: 19
          }
        },
        loc: {
          start: {
            line: 57,
            column: 29
          },
          end: {
            line: 60,
            column: 1
          }
        },
        line: 57
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 10,
            column: 74
          },
          end: {
            line: 10,
            column: 171
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 10,
            column: 143
          },
          end: {
            line: 10,
            column: 149
          }
        }, {
          start: {
            line: 10,
            column: 152
          },
          end: {
            line: 10,
            column: 171
          }
        }],
        line: 10
      },
      "1": {
        loc: {
          start: {
            line: 10,
            column: 74
          },
          end: {
            line: 10,
            column: 140
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 10,
            column: 74
          },
          end: {
            line: 10,
            column: 123
          }
        }, {
          start: {
            line: 10,
            column: 127
          },
          end: {
            line: 10,
            column: 140
          }
        }],
        line: 10
      },
      "2": {
        loc: {
          start: {
            line: 15,
            column: 30
          },
          end: {
            line: 15,
            column: 129
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 15,
            column: 31
          },
          end: {
            line: 15,
            column: 119
          }
        }, {
          start: {
            line: 15,
            column: 124
          },
          end: {
            line: 15,
            column: 129
          }
        }],
        line: 15
      },
      "3": {
        loc: {
          start: {
            line: 15,
            column: 31
          },
          end: {
            line: 15,
            column: 119
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 15,
            column: 78
          },
          end: {
            line: 15,
            column: 84
          }
        }, {
          start: {
            line: 15,
            column: 87
          },
          end: {
            line: 15,
            column: 119
          }
        }],
        line: 15
      },
      "4": {
        loc: {
          start: {
            line: 15,
            column: 31
          },
          end: {
            line: 15,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 15,
            column: 31
          },
          end: {
            line: 15,
            column: 50
          }
        }, {
          start: {
            line: 15,
            column: 54
          },
          end: {
            line: 15,
            column: 75
          }
        }],
        line: 15
      },
      "5": {
        loc: {
          start: {
            line: 16,
            column: 27
          },
          end: {
            line: 16,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 16,
            column: 40
          },
          end: {
            line: 16,
            column: 75
          }
        }, {
          start: {
            line: 16,
            column: 78
          },
          end: {
            line: 16,
            column: 84
          }
        }],
        line: 16
      },
      "6": {
        loc: {
          start: {
            line: 18,
            column: 8
          },
          end: {
            line: 21,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 18,
            column: 8
          },
          end: {
            line: 21,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 18
      },
      "7": {
        loc: {
          start: {
            line: 18,
            column: 12
          },
          end: {
            line: 18,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 12
          },
          end: {
            line: 18,
            column: 23
          }
        }, {
          start: {
            line: 18,
            column: 27
          },
          end: {
            line: 18,
            column: 60
          }
        }],
        line: 18
      },
      "8": {
        loc: {
          start: {
            line: 34,
            column: 17
          },
          end: {
            line: 34,
            column: 83
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 34,
            column: 68
          },
          end: {
            line: 34,
            column: 74
          }
        }, {
          start: {
            line: 34,
            column: 77
          },
          end: {
            line: 34,
            column: 83
          }
        }],
        line: 34
      },
      "9": {
        loc: {
          start: {
            line: 34,
            column: 17
          },
          end: {
            line: 34,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 34,
            column: 17
          },
          end: {
            line: 34,
            column: 48
          }
        }, {
          start: {
            line: 34,
            column: 52
          },
          end: {
            line: 34,
            column: 65
          }
        }],
        line: 34
      },
      "10": {
        loc: {
          start: {
            line: 35,
            column: 19
          },
          end: {
            line: 35,
            column: 87
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 35,
            column: 70
          },
          end: {
            line: 35,
            column: 76
          }
        }, {
          start: {
            line: 35,
            column: 79
          },
          end: {
            line: 35,
            column: 87
          }
        }],
        line: 35
      },
      "11": {
        loc: {
          start: {
            line: 35,
            column: 19
          },
          end: {
            line: 35,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 19
          },
          end: {
            line: 35,
            column: 50
          }
        }, {
          start: {
            line: 35,
            column: 54
          },
          end: {
            line: 35,
            column: 67
          }
        }],
        line: 35
      },
      "12": {
        loc: {
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 45,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 45,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 38
      },
      "13": {
        loc: {
          start: {
            line: 38,
            column: 12
          },
          end: {
            line: 38,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 38,
            column: 12
          },
          end: {
            line: 38,
            column: 31
          }
        }, {
          start: {
            line: 38,
            column: 35
          },
          end: {
            line: 38,
            column: 51
          }
        }],
        line: 38
      },
      "14": {
        loc: {
          start: {
            line: 54,
            column: 81
          },
          end: {
            line: 54,
            column: 137
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 54,
            column: 106
          },
          end: {
            line: 54,
            column: 119
          }
        }, {
          start: {
            line: 54,
            column: 122
          },
          end: {
            line: 54,
            column: 137
          }
        }],
        line: 54
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/dikshantvashistha/PrepBettr/app/api/auth/verify/route.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/dikshantvashistha/PrepBettr/app/api/auth/verify/route.ts"],
      sourcesContent: ["import { NextRequest, NextResponse } from 'next/server';\nimport { verifyFirebaseToken } from '@/lib/middleware/authMiddleware';\n\nexport async function GET(request: NextRequest) {\n  const timestamp = new Date().toISOString();\n  console.log(`\uD83D\uDD0D [${timestamp}] AUTH VERIFY GET called - User-Agent: ${request.headers.get('user-agent')?.substring(0, 50)}`);\n  try {\n    const authHeader = request.headers.get('authorization');\n    \n    console.log(`\uD83D\uDD0D [${timestamp}] Authorization header check:`, {\n      hasAuthHeader: !!authHeader,\n      startsWithBearer: authHeader?.startsWith('Bearer ') || false,\n      headerPreview: authHeader ? authHeader.substring(0, 20) + '...' : 'none'\n    });\n    \n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      console.error(`\uD83D\uDD0D [${timestamp}] Missing or invalid authorization header`);\n      return NextResponse.json(\n        { error: 'Missing or invalid authorization header' },\n        { status: 401 }\n      );\n    }\n\n    const token = authHeader.substring(7); // Remove 'Bearer ' prefix\n    \n    console.log(`\uD83D\uDD0D [${timestamp}] Token details:`, {\n      tokenLength: token.length,\n      tokenParts: token.split('.').length,\n      tokenPrefix: token.substring(0, 50) + '...',\n      isJWT: token.includes('.')\n    });\n    \n    console.log(`\uD83D\uDD0D [${timestamp}] Calling verifyFirebaseToken...`);\n    const authResult = await verifyFirebaseToken(token);\n    \n    console.log(`\uD83D\uDD0D [${timestamp}] Firebase token verification result:`, {\n      success: authResult.success,\n      hasUser: !!authResult.user,\n      uid: authResult.user?.uid,\n      email: authResult.user?.email,\n      error: authResult.error\n    });\n    \n    if (!authResult.success || !authResult.user) {\n      console.error(`\uD83D\uDD0D [${timestamp}] Token verification failed:`, {\n        success: authResult.success,\n        hasUser: !!authResult.user,\n        error: authResult.error\n      });\n      return NextResponse.json(\n        { error: `Invalid or expired token: ${authResult.error}` },\n        { status: 401 }\n      );\n    }\n\n    console.log(`\uD83D\uDD0D [${timestamp}] Token verification successful for uid: ${authResult.user.uid}`);\n    return NextResponse.json({\n      success: true,\n      user: authResult.user\n    });\n\n  } catch (error) {\n    console.error(`\uD83D\uDD0D [${timestamp}] Token verification error:`, error);\n    return NextResponse.json(\n      { error: `Token verification failed: ${error instanceof Error ? error.message : 'Unknown error'}` },\n      { status: 500 }\n    );\n  }\n}\n\nexport async function POST(request: NextRequest) {\n  // Support both GET and POST for flexibility\n  return GET(request);\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "11f6ee55be49c30c21f6bf10d84b43dd2af79607"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2istgqfku = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2istgqfku();
cov_2istgqfku().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2istgqfku().s[1]++;
exports.GET = GET;
/* istanbul ignore next */
cov_2istgqfku().s[2]++;
exports.POST = POST;
const server_1 =
/* istanbul ignore next */
(cov_2istgqfku().s[3]++, require("next/server"));
const authMiddleware_1 =
/* istanbul ignore next */
(cov_2istgqfku().s[4]++, require("@/lib/middleware/authMiddleware"));
async function GET(request) {
  /* istanbul ignore next */
  cov_2istgqfku().f[0]++;
  var _a, _b, _c;
  const timestamp =
  /* istanbul ignore next */
  (cov_2istgqfku().s[5]++, new Date().toISOString());
  /* istanbul ignore next */
  cov_2istgqfku().s[6]++;
  console.log(`🔍 [${timestamp}] AUTH VERIFY GET called - User-Agent: ${
  /* istanbul ignore next */
  (cov_2istgqfku().b[1][0]++, (_a = request.headers.get('user-agent')) === null) ||
  /* istanbul ignore next */
  (cov_2istgqfku().b[1][1]++, _a === void 0) ?
  /* istanbul ignore next */
  (cov_2istgqfku().b[0][0]++, void 0) :
  /* istanbul ignore next */
  (cov_2istgqfku().b[0][1]++, _a.substring(0, 50))}`);
  /* istanbul ignore next */
  cov_2istgqfku().s[7]++;
  try {
    const authHeader =
    /* istanbul ignore next */
    (cov_2istgqfku().s[8]++, request.headers.get('authorization'));
    /* istanbul ignore next */
    cov_2istgqfku().s[9]++;
    console.log(`🔍 [${timestamp}] Authorization header check:`, {
      hasAuthHeader: !!authHeader,
      startsWithBearer:
      /* istanbul ignore next */
      (cov_2istgqfku().b[2][0]++,
      /* istanbul ignore next */
      (cov_2istgqfku().b[4][0]++, authHeader === null) ||
      /* istanbul ignore next */
      (cov_2istgqfku().b[4][1]++, authHeader === void 0) ?
      /* istanbul ignore next */
      (cov_2istgqfku().b[3][0]++, void 0) :
      /* istanbul ignore next */
      (cov_2istgqfku().b[3][1]++, authHeader.startsWith('Bearer '))) ||
      /* istanbul ignore next */
      (cov_2istgqfku().b[2][1]++, false),
      headerPreview: authHeader ?
      /* istanbul ignore next */
      (cov_2istgqfku().b[5][0]++, authHeader.substring(0, 20) + '...') :
      /* istanbul ignore next */
      (cov_2istgqfku().b[5][1]++, 'none')
    });
    /* istanbul ignore next */
    cov_2istgqfku().s[10]++;
    if (
    /* istanbul ignore next */
    (cov_2istgqfku().b[7][0]++, !authHeader) ||
    /* istanbul ignore next */
    (cov_2istgqfku().b[7][1]++, !authHeader.startsWith('Bearer '))) {
      /* istanbul ignore next */
      cov_2istgqfku().b[6][0]++;
      cov_2istgqfku().s[11]++;
      console.error(`🔍 [${timestamp}] Missing or invalid authorization header`);
      /* istanbul ignore next */
      cov_2istgqfku().s[12]++;
      return server_1.NextResponse.json({
        error: 'Missing or invalid authorization header'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_2istgqfku().b[6][1]++;
    }
    const token =
    /* istanbul ignore next */
    (cov_2istgqfku().s[13]++, authHeader.substring(7)); // Remove 'Bearer ' prefix
    /* istanbul ignore next */
    cov_2istgqfku().s[14]++;
    console.log(`🔍 [${timestamp}] Token details:`, {
      tokenLength: token.length,
      tokenParts: token.split('.').length,
      tokenPrefix: token.substring(0, 50) + '...',
      isJWT: token.includes('.')
    });
    /* istanbul ignore next */
    cov_2istgqfku().s[15]++;
    console.log(`🔍 [${timestamp}] Calling verifyFirebaseToken...`);
    const authResult =
    /* istanbul ignore next */
    (cov_2istgqfku().s[16]++, await (0, authMiddleware_1.verifyFirebaseToken)(token));
    /* istanbul ignore next */
    cov_2istgqfku().s[17]++;
    console.log(`🔍 [${timestamp}] Firebase token verification result:`, {
      success: authResult.success,
      hasUser: !!authResult.user,
      uid:
      /* istanbul ignore next */
      (cov_2istgqfku().b[9][0]++, (_b = authResult.user) === null) ||
      /* istanbul ignore next */
      (cov_2istgqfku().b[9][1]++, _b === void 0) ?
      /* istanbul ignore next */
      (cov_2istgqfku().b[8][0]++, void 0) :
      /* istanbul ignore next */
      (cov_2istgqfku().b[8][1]++, _b.uid),
      email:
      /* istanbul ignore next */
      (cov_2istgqfku().b[11][0]++, (_c = authResult.user) === null) ||
      /* istanbul ignore next */
      (cov_2istgqfku().b[11][1]++, _c === void 0) ?
      /* istanbul ignore next */
      (cov_2istgqfku().b[10][0]++, void 0) :
      /* istanbul ignore next */
      (cov_2istgqfku().b[10][1]++, _c.email),
      error: authResult.error
    });
    /* istanbul ignore next */
    cov_2istgqfku().s[18]++;
    if (
    /* istanbul ignore next */
    (cov_2istgqfku().b[13][0]++, !authResult.success) ||
    /* istanbul ignore next */
    (cov_2istgqfku().b[13][1]++, !authResult.user)) {
      /* istanbul ignore next */
      cov_2istgqfku().b[12][0]++;
      cov_2istgqfku().s[19]++;
      console.error(`🔍 [${timestamp}] Token verification failed:`, {
        success: authResult.success,
        hasUser: !!authResult.user,
        error: authResult.error
      });
      /* istanbul ignore next */
      cov_2istgqfku().s[20]++;
      return server_1.NextResponse.json({
        error: `Invalid or expired token: ${authResult.error}`
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_2istgqfku().b[12][1]++;
    }
    cov_2istgqfku().s[21]++;
    console.log(`🔍 [${timestamp}] Token verification successful for uid: ${authResult.user.uid}`);
    /* istanbul ignore next */
    cov_2istgqfku().s[22]++;
    return server_1.NextResponse.json({
      success: true,
      user: authResult.user
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2istgqfku().s[23]++;
    console.error(`🔍 [${timestamp}] Token verification error:`, error);
    /* istanbul ignore next */
    cov_2istgqfku().s[24]++;
    return server_1.NextResponse.json({
      error: `Token verification failed: ${error instanceof Error ?
      /* istanbul ignore next */
      (cov_2istgqfku().b[14][0]++, error.message) :
      /* istanbul ignore next */
      (cov_2istgqfku().b[14][1]++, 'Unknown error')}`
    }, {
      status: 500
    });
  }
}
async function POST(request) {
  /* istanbul ignore next */
  cov_2istgqfku().f[1]++;
  cov_2istgqfku().s[25]++;
  // Support both GET and POST for flexibility
  return GET(request);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,