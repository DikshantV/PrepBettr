a86f83f5b98653a382844dac3eaa9e6e
"use strict";

/**
 * Error handling utilities to centralize try-catch patterns
 * Reduces duplicate error handling code throughout the application
 */
/* istanbul ignore next */
function cov_2d7i0d52c2() {
  var path = "/Users/dikshantvashistha/PrepBettr/lib/utils/error-utils.ts";
  var hash = "bddfe7ecad2f50083db3daa63745efd5d2e1d940";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dikshantvashistha/PrepBettr/lib/utils/error-utils.ts",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 62
        }
      },
      "1": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 7,
          column: 226
        }
      },
      "2": {
        start: {
          line: 8,
          column: 17
        },
        end: {
          line: 8,
          column: 36
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 16,
          column: 1
        }
      },
      "4": {
        start: {
          line: 13,
          column: 16
        },
        end: {
          line: 13,
          column: 73
        }
      },
      "5": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 80
        }
      },
      "6": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 15,
          column: 15
        }
      },
      "7": {
        start: {
          line: 17,
          column: 0
        },
        end: {
          line: 17,
          column: 34
        }
      },
      "8": {
        start: {
          line: 21,
          column: 25
        },
        end: {
          line: 29,
          column: 1
        }
      },
      "9": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 28,
          column: 5
        }
      },
      "10": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 26
        }
      },
      "11": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 68
        }
      },
      "12": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 24
        }
      },
      "13": {
        start: {
          line: 30,
          column: 0
        },
        end: {
          line: 30,
          column: 44
        }
      },
      "14": {
        start: {
          line: 34,
          column: 18
        },
        end: {
          line: 51,
          column: 1
        }
      },
      "15": {
        start: {
          line: 35,
          column: 18
        },
        end: {
          line: 35,
          column: 19
        }
      },
      "16": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 49,
          column: 5
        }
      },
      "17": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 48,
          column: 9
        }
      },
      "18": {
        start: {
          line: 38,
          column: 12
        },
        end: {
          line: 38,
          column: 30
        }
      },
      "19": {
        start: {
          line: 41,
          column: 12
        },
        end: {
          line: 41,
          column: 22
        }
      },
      "20": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 44,
          column: 13
        }
      },
      "21": {
        start: {
          line: 43,
          column: 16
        },
        end: {
          line: 43,
          column: 105
        }
      },
      "22": {
        start: {
          line: 45,
          column: 26
        },
        end: {
          line: 45,
          column: 58
        }
      },
      "23": {
        start: {
          line: 46,
          column: 12
        },
        end: {
          line: 46,
          column: 108
        }
      },
      "24": {
        start: {
          line: 47,
          column: 12
        },
        end: {
          line: 47,
          column: 69
        }
      },
      "25": {
        start: {
          line: 47,
          column: 41
        },
        end: {
          line: 47,
          column: 67
        }
      },
      "26": {
        start: {
          line: 50,
          column: 4
        },
        end: {
          line: 50,
          column: 64
        }
      },
      "27": {
        start: {
          line: 52,
          column: 0
        },
        end: {
          line: 52,
          column: 30
        }
      },
      "28": {
        start: {
          line: 56,
          column: 20
        },
        end: {
          line: 65,
          column: 1
        }
      },
      "29": {
        start: {
          line: 57,
          column: 4
        },
        end: {
          line: 64,
          column: 7
        }
      },
      "30": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 62,
          column: 26
        }
      },
      "31": {
        start: {
          line: 61,
          column: 16
        },
        end: {
          line: 61,
          column: 79
        }
      },
      "32": {
        start: {
          line: 66,
          column: 0
        },
        end: {
          line: 66,
          column: 34
        }
      },
      "33": {
        start: {
          line: 70,
          column: 22
        },
        end: {
          line: 78,
          column: 1
        }
      },
      "34": {
        start: {
          line: 71,
          column: 4
        },
        end: {
          line: 77,
          column: 5
        }
      },
      "35": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 72,
          column: 38
        }
      },
      "36": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 75,
          column: 103
        }
      },
      "37": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 76,
          column: 24
        }
      },
      "38": {
        start: {
          line: 79,
          column: 0
        },
        end: {
          line: 79,
          column: 38
        }
      },
      "39": {
        start: {
          line: 83,
          column: 23
        },
        end: {
          line: 100,
          column: 1
        }
      },
      "40": {
        start: {
          line: 84,
          column: 29
        },
        end: {
          line: 93,
          column: 5
        }
      },
      "41": {
        start: {
          line: 94,
          column: 28
        },
        end: {
          line: 94,
          column: 96
        }
      },
      "42": {
        start: {
          line: 95,
          column: 29
        },
        end: {
          line: 95,
          column: 89
        }
      },
      "43": {
        start: {
          line: 96,
          column: 18
        },
        end: {
          line: 96,
          column: 44
        }
      },
      "44": {
        start: {
          line: 97,
          column: 4
        },
        end: {
          line: 97,
          column: 46
        }
      },
      "45": {
        start: {
          line: 98,
          column: 4
        },
        end: {
          line: 98,
          column: 35
        }
      },
      "46": {
        start: {
          line: 99,
          column: 4
        },
        end: {
          line: 99,
          column: 17
        }
      },
      "47": {
        start: {
          line: 101,
          column: 0
        },
        end: {
          line: 101,
          column: 40
        }
      },
      "48": {
        start: {
          line: 106,
          column: 30
        },
        end: {
          line: 113,
          column: 1
        }
      },
      "49": {
        start: {
          line: 107,
          column: 20
        },
        end: {
          line: 107,
          column: 69
        }
      },
      "50": {
        start: {
          line: 108,
          column: 24
        },
        end: {
          line: 108,
          column: 68
        }
      },
      "51": {
        start: {
          line: 110,
          column: 4
        },
        end: {
          line: 110,
          column: 62
        }
      },
      "52": {
        start: {
          line: 114,
          column: 0
        },
        end: {
          line: 114,
          column: 54
        }
      },
      "53": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 120,
          column: 23
        }
      },
      "54": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 121,
          column: 27
        }
      },
      "55": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 122,
          column: 38
        }
      },
      "56": {
        start: {
          line: 125,
          column: 0
        },
        end: {
          line: 125,
          column: 42
        }
      },
      "57": {
        start: {
          line: 131,
          column: 8
        },
        end: {
          line: 131,
          column: 23
        }
      },
      "58": {
        start: {
          line: 132,
          column: 8
        },
        end: {
          line: 132,
          column: 41
        }
      },
      "59": {
        start: {
          line: 133,
          column: 8
        },
        end: {
          line: 133,
          column: 33
        }
      },
      "60": {
        start: {
          line: 136,
          column: 0
        },
        end: {
          line: 136,
          column: 32
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 12,
            column: 20
          },
          end: {
            line: 12,
            column: 21
          }
        },
        loc: {
          start: {
            line: 12,
            column: 59
          },
          end: {
            line: 16,
            column: 1
          }
        },
        line: 12
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 21,
            column: 25
          },
          end: {
            line: 21,
            column: 26
          }
        },
        loc: {
          start: {
            line: 21,
            column: 77
          },
          end: {
            line: 29,
            column: 1
          }
        },
        line: 21
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 34,
            column: 18
          },
          end: {
            line: 34,
            column: 19
          }
        },
        loc: {
          start: {
            line: 34,
            column: 90
          },
          end: {
            line: 51,
            column: 1
          }
        },
        line: 34
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 47,
            column: 30
          },
          end: {
            line: 47,
            column: 31
          }
        },
        loc: {
          start: {
            line: 47,
            column: 41
          },
          end: {
            line: 47,
            column: 67
          }
        },
        line: 47
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 56,
            column: 20
          },
          end: {
            line: 56,
            column: 21
          }
        },
        loc: {
          start: {
            line: 56,
            column: 67
          },
          end: {
            line: 65,
            column: 1
          }
        },
        line: 56
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 59,
            column: 20
          },
          end: {
            line: 59,
            column: 21
          }
        },
        loc: {
          start: {
            line: 59,
            column: 35
          },
          end: {
            line: 63,
            column: 9
          }
        },
        line: 59
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 60,
            column: 23
          },
          end: {
            line: 60,
            column: 24
          }
        },
        loc: {
          start: {
            line: 60,
            column: 29
          },
          end: {
            line: 62,
            column: 13
          }
        },
        line: 60
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 70,
            column: 22
          },
          end: {
            line: 70,
            column: 23
          }
        },
        loc: {
          start: {
            line: 70,
            column: 72
          },
          end: {
            line: 78,
            column: 1
          }
        },
        line: 70
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 83,
            column: 23
          },
          end: {
            line: 83,
            column: 24
          }
        },
        loc: {
          start: {
            line: 83,
            column: 62
          },
          end: {
            line: 100,
            column: 1
          }
        },
        line: 83
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 106,
            column: 30
          },
          end: {
            line: 106,
            column: 31
          }
        },
        loc: {
          start: {
            line: 106,
            column: 50
          },
          end: {
            line: 113,
            column: 1
          }
        },
        line: 106
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 119,
            column: 4
          },
          end: {
            line: 119,
            column: 5
          }
        },
        loc: {
          start: {
            line: 119,
            column: 32
          },
          end: {
            line: 123,
            column: 5
          }
        },
        line: 119
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 130,
            column: 4
          },
          end: {
            line: 130,
            column: 5
          }
        },
        loc: {
          start: {
            line: 130,
            column: 39
          },
          end: {
            line: 134,
            column: 5
          }
        },
        line: 130
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 13,
            column: 16
          },
          end: {
            line: 13,
            column: 73
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 13,
            column: 41
          },
          end: {
            line: 13,
            column: 46
          }
        }, {
          start: {
            line: 13,
            column: 49
          },
          end: {
            line: 13,
            column: 73
          }
        }],
        line: 13
      },
      "1": {
        loc: {
          start: {
            line: 34,
            column: 29
          },
          end: {
            line: 34,
            column: 44
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 34,
            column: 43
          },
          end: {
            line: 34,
            column: 44
          }
        }],
        line: 34
      },
      "2": {
        loc: {
          start: {
            line: 34,
            column: 46
          },
          end: {
            line: 34,
            column: 67
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 34,
            column: 56
          },
          end: {
            line: 34,
            column: 67
          }
        }],
        line: 34
      },
      "3": {
        loc: {
          start: {
            line: 34,
            column: 69
          },
          end: {
            line: 34,
            column: 85
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 34,
            column: 81
          },
          end: {
            line: 34,
            column: 85
          }
        }],
        line: 34
      },
      "4": {
        loc: {
          start: {
            line: 42,
            column: 12
          },
          end: {
            line: 44,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 12
          },
          end: {
            line: 44,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 42
      },
      "5": {
        loc: {
          start: {
            line: 56,
            column: 41
          },
          end: {
            line: 56,
            column: 62
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 56,
            column: 51
          },
          end: {
            line: 56,
            column: 62
          }
        }],
        line: 56
      },
      "6": {
        loc: {
          start: {
            line: 70,
            column: 45
          },
          end: {
            line: 70,
            column: 67
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 70,
            column: 55
          },
          end: {
            line: 70,
            column: 67
          }
        }],
        line: 70
      },
      "7": {
        loc: {
          start: {
            line: 83,
            column: 34
          },
          end: {
            line: 83,
            column: 57
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 83,
            column: 44
          },
          end: {
            line: 83,
            column: 57
          }
        }],
        line: 83
      },
      "8": {
        loc: {
          start: {
            line: 94,
            column: 28
          },
          end: {
            line: 94,
            column: 96
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 94,
            column: 28
          },
          end: {
            line: 94,
            column: 61
          }
        }, {
          start: {
            line: 94,
            column: 65
          },
          end: {
            line: 94,
            column: 96
          }
        }],
        line: 94
      },
      "9": {
        loc: {
          start: {
            line: 107,
            column: 20
          },
          end: {
            line: 107,
            column: 69
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 107,
            column: 48
          },
          end: {
            line: 107,
            column: 53
          }
        }, {
          start: {
            line: 107,
            column: 56
          },
          end: {
            line: 107,
            column: 69
          }
        }],
        line: 107
      },
      "10": {
        loc: {
          start: {
            line: 108,
            column: 24
          },
          end: {
            line: 108,
            column: 68
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 108,
            column: 34
          },
          end: {
            line: 108,
            column: 58
          }
        }, {
          start: {
            line: 108,
            column: 61
          },
          end: {
            line: 108,
            column: 68
          }
        }],
        line: 108
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0
    },
    b: {
      "0": [0, 0],
      "1": [0],
      "2": [0],
      "3": [0],
      "4": [0, 0],
      "5": [0],
      "6": [0],
      "7": [0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/dikshantvashistha/PrepBettr/lib/utils/error-utils.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/dikshantvashistha/PrepBettr/lib/utils/error-utils.ts"],
      sourcesContent: ["/**\n * Error handling utilities to centralize try-catch patterns\n * Reduces duplicate error handling code throughout the application\n */\n\nimport { logger } from './logger';\n\nexport interface ErrorContext {\n  [key: string]: any;\n}\n\n/**\n * Standardized error reporting with context\n */\nexport const reportError = (\n  error: Error | unknown,\n  context: string,\n  additionalContext?: ErrorContext\n): Error => {\n  const err = error instanceof Error ? error : new Error(String(error));\n  logger.error(`${context}: ${err.message}`, err, additionalContext);\n  return err;\n};\n\n/**\n * Wrap async functions with standardized error handling\n */\nexport const handleAsyncError = async <T>(\n  fn: () => Promise<T>,\n  context: string,\n  fallback?: T,\n  additionalContext?: ErrorContext\n): Promise<T | undefined> => {\n  try {\n    return await fn();\n  } catch (error) {\n    reportError(error, context, additionalContext);\n    return fallback;\n  }\n};\n\n/**\n * Retry wrapper with exponential backoff\n */\nexport const withRetry = async <T>(\n  fn: () => Promise<T>,\n  maxAttempts: number = 3,\n  context: string = 'Operation',\n  baseDelay: number = 1000\n): Promise<T> => {\n  let attempt = 0;\n  \n  while (attempt < maxAttempts) {\n    try {\n      return await fn();\n    } catch (error) {\n      attempt++;\n      \n      if (attempt >= maxAttempts) {\n        throw reportError(error, `${context} failed after ${maxAttempts} attempts`);\n      }\n      \n      const delay = Math.pow(2, attempt) * baseDelay;\n      logger.warn(`${context} attempt ${attempt} failed, retrying in ${delay}ms`, { error });\n      \n      await new Promise(resolve => setTimeout(resolve, delay));\n    }\n  }\n  \n  throw new Error(`${context}: Exhausted all retry attempts`);\n};\n\n/**\n * Timeout wrapper for promises\n */\nexport const withTimeout = <T>(\n  promise: Promise<T>,\n  timeoutMs: number,\n  context: string = 'Operation'\n): Promise<T> => {\n  return Promise.race([\n    promise,\n    new Promise<T>((_, reject) => {\n      setTimeout(() => {\n        reject(new Error(`${context} timed out after ${timeoutMs}ms`));\n      }, timeoutMs);\n    })\n  ]);\n};\n\n/**\n * Safe JSON parsing with error handling\n */\nexport const safeJsonParse = <T>(\n  jsonString: string,\n  fallback: T,\n  context: string = 'JSON parse'\n): T => {\n  try {\n    return JSON.parse(jsonString);\n  } catch (error) {\n    reportError(error, `${context} failed`, { jsonString: jsonString.slice(0, 100) });\n    return fallback;\n  }\n};\n\n/**\n * Network request error handler with user-friendly messages\n */\nexport const handleApiError = (\n  response: Response,\n  context: string = 'API request'\n): Error => {\n  const friendlyMessages: Record<number, string> = {\n    400: 'Invalid request. Please check your input and try again.',\n    401: 'Authentication failed. Please sign in again.',\n    403: 'Access denied. You may not have permission for this action.',\n    404: 'The requested resource was not found.',\n    429: 'Too many requests. Please wait a moment before trying again.',\n    500: 'Server error. Please try again later.',\n    502: 'Service temporarily unavailable. Please try again later.',\n    503: 'Service temporarily unavailable. Please try again later.'\n  };\n  \n  const friendlyMessage = friendlyMessages[response.status] || 'An unexpected error occurred.';\n  const technicalMessage = `${context}: HTTP ${response.status} ${response.statusText}`;\n  \n  const error = new Error(friendlyMessage);\n  (error as any).technicalMessage = technicalMessage;\n  (error as any).status = response.status;\n  \n  return error;\n};\n\n/**\n * Show user-friendly error notification (replace alert() calls)\n * This will hook into the app's existing toast system\n */\nexport const showErrorNotification = (\n  error: Error | string,\n  context?: string\n): void => {\n  const message = typeof error === 'string' ? error : error.message;\n  const fullMessage = context ? `${context}: ${message}` : message;\n  \n  // Use console.warn for user notifications to reduce error noise\n  logger.warn('User notification: ' + fullMessage);\n  \n  // TODO: Replace with actual toast notification system\n  // toast.error(fullMessage);\n};\n\n/**\n * Validation error for form/input validation\n */\nexport class ValidationError extends Error {\n  constructor(message: string, public field?: string) {\n    super(message);\n    this.name = 'ValidationError';\n  }\n}\n\n/**\n * Audio processing specific error\n */\nexport class AudioError extends Error {\n  constructor(message: string, public audioContext?: any) {\n    super(message);\n    this.name = 'AudioError';\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "bddfe7ecad2f50083db3daa63745efd5d2e1d940"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2d7i0d52c2 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2d7i0d52c2();
cov_2d7i0d52c2().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2d7i0d52c2().s[1]++;
exports.AudioError = exports.ValidationError = exports.showErrorNotification = exports.handleApiError = exports.safeJsonParse = exports.withTimeout = exports.withRetry = exports.handleAsyncError = exports.reportError = void 0;
const logger_1 =
/* istanbul ignore next */
(cov_2d7i0d52c2().s[2]++, require("./logger"));
/**
 * Standardized error reporting with context
 */
/* istanbul ignore next */
cov_2d7i0d52c2().s[3]++;
const reportError = (error, context, additionalContext) => {
  /* istanbul ignore next */
  cov_2d7i0d52c2().f[0]++;
  const err =
  /* istanbul ignore next */
  (cov_2d7i0d52c2().s[4]++, error instanceof Error ?
  /* istanbul ignore next */
  (cov_2d7i0d52c2().b[0][0]++, error) :
  /* istanbul ignore next */
  (cov_2d7i0d52c2().b[0][1]++, new Error(String(error))));
  /* istanbul ignore next */
  cov_2d7i0d52c2().s[5]++;
  logger_1.logger.error(`${context}: ${err.message}`, err, additionalContext);
  /* istanbul ignore next */
  cov_2d7i0d52c2().s[6]++;
  return err;
};
/* istanbul ignore next */
cov_2d7i0d52c2().s[7]++;
exports.reportError = reportError;
/**
 * Wrap async functions with standardized error handling
 */
/* istanbul ignore next */
cov_2d7i0d52c2().s[8]++;
const handleAsyncError = async (fn, context, fallback, additionalContext) => {
  /* istanbul ignore next */
  cov_2d7i0d52c2().f[1]++;
  cov_2d7i0d52c2().s[9]++;
  try {
    /* istanbul ignore next */
    cov_2d7i0d52c2().s[10]++;
    return await fn();
  } catch (error) {
    /* istanbul ignore next */
    cov_2d7i0d52c2().s[11]++;
    (0, exports.reportError)(error, context, additionalContext);
    /* istanbul ignore next */
    cov_2d7i0d52c2().s[12]++;
    return fallback;
  }
};
/* istanbul ignore next */
cov_2d7i0d52c2().s[13]++;
exports.handleAsyncError = handleAsyncError;
/**
 * Retry wrapper with exponential backoff
 */
/* istanbul ignore next */
cov_2d7i0d52c2().s[14]++;
const withRetry = async (fn, maxAttempts =
/* istanbul ignore next */
(cov_2d7i0d52c2().b[1][0]++, 3), context =
/* istanbul ignore next */
(cov_2d7i0d52c2().b[2][0]++, 'Operation'), baseDelay =
/* istanbul ignore next */
(cov_2d7i0d52c2().b[3][0]++, 1000)) => {
  /* istanbul ignore next */
  cov_2d7i0d52c2().f[2]++;
  let attempt =
  /* istanbul ignore next */
  (cov_2d7i0d52c2().s[15]++, 0);
  /* istanbul ignore next */
  cov_2d7i0d52c2().s[16]++;
  while (attempt < maxAttempts) {
    /* istanbul ignore next */
    cov_2d7i0d52c2().s[17]++;
    try {
      /* istanbul ignore next */
      cov_2d7i0d52c2().s[18]++;
      return await fn();
    } catch (error) {
      /* istanbul ignore next */
      cov_2d7i0d52c2().s[19]++;
      attempt++;
      /* istanbul ignore next */
      cov_2d7i0d52c2().s[20]++;
      if (attempt >= maxAttempts) {
        /* istanbul ignore next */
        cov_2d7i0d52c2().b[4][0]++;
        cov_2d7i0d52c2().s[21]++;
        throw (0, exports.reportError)(error, `${context} failed after ${maxAttempts} attempts`);
      } else
      /* istanbul ignore next */
      {
        cov_2d7i0d52c2().b[4][1]++;
      }
      const delay =
      /* istanbul ignore next */
      (cov_2d7i0d52c2().s[22]++, Math.pow(2, attempt) * baseDelay);
      /* istanbul ignore next */
      cov_2d7i0d52c2().s[23]++;
      logger_1.logger.warn(`${context} attempt ${attempt} failed, retrying in ${delay}ms`, {
        error
      });
      /* istanbul ignore next */
      cov_2d7i0d52c2().s[24]++;
      await new Promise(resolve => {
        /* istanbul ignore next */
        cov_2d7i0d52c2().f[3]++;
        cov_2d7i0d52c2().s[25]++;
        return setTimeout(resolve, delay);
      });
    }
  }
  /* istanbul ignore next */
  cov_2d7i0d52c2().s[26]++;
  throw new Error(`${context}: Exhausted all retry attempts`);
};
/* istanbul ignore next */
cov_2d7i0d52c2().s[27]++;
exports.withRetry = withRetry;
/**
 * Timeout wrapper for promises
 */
/* istanbul ignore next */
cov_2d7i0d52c2().s[28]++;
const withTimeout = (promise, timeoutMs, context =
/* istanbul ignore next */
(cov_2d7i0d52c2().b[5][0]++, 'Operation')) => {
  /* istanbul ignore next */
  cov_2d7i0d52c2().f[4]++;
  cov_2d7i0d52c2().s[29]++;
  return Promise.race([promise, new Promise((_, reject) => {
    /* istanbul ignore next */
    cov_2d7i0d52c2().f[5]++;
    cov_2d7i0d52c2().s[30]++;
    setTimeout(() => {
      /* istanbul ignore next */
      cov_2d7i0d52c2().f[6]++;
      cov_2d7i0d52c2().s[31]++;
      reject(new Error(`${context} timed out after ${timeoutMs}ms`));
    }, timeoutMs);
  })]);
};
/* istanbul ignore next */
cov_2d7i0d52c2().s[32]++;
exports.withTimeout = withTimeout;
/**
 * Safe JSON parsing with error handling
 */
/* istanbul ignore next */
cov_2d7i0d52c2().s[33]++;
const safeJsonParse = (jsonString, fallback, context =
/* istanbul ignore next */
(cov_2d7i0d52c2().b[6][0]++, 'JSON parse')) => {
  /* istanbul ignore next */
  cov_2d7i0d52c2().f[7]++;
  cov_2d7i0d52c2().s[34]++;
  try {
    /* istanbul ignore next */
    cov_2d7i0d52c2().s[35]++;
    return JSON.parse(jsonString);
  } catch (error) {
    /* istanbul ignore next */
    cov_2d7i0d52c2().s[36]++;
    (0, exports.reportError)(error, `${context} failed`, {
      jsonString: jsonString.slice(0, 100)
    });
    /* istanbul ignore next */
    cov_2d7i0d52c2().s[37]++;
    return fallback;
  }
};
/* istanbul ignore next */
cov_2d7i0d52c2().s[38]++;
exports.safeJsonParse = safeJsonParse;
/**
 * Network request error handler with user-friendly messages
 */
/* istanbul ignore next */
cov_2d7i0d52c2().s[39]++;
const handleApiError = (response, context =
/* istanbul ignore next */
(cov_2d7i0d52c2().b[7][0]++, 'API request')) => {
  /* istanbul ignore next */
  cov_2d7i0d52c2().f[8]++;
  const friendlyMessages =
  /* istanbul ignore next */
  (cov_2d7i0d52c2().s[40]++, {
    400: 'Invalid request. Please check your input and try again.',
    401: 'Authentication failed. Please sign in again.',
    403: 'Access denied. You may not have permission for this action.',
    404: 'The requested resource was not found.',
    429: 'Too many requests. Please wait a moment before trying again.',
    500: 'Server error. Please try again later.',
    502: 'Service temporarily unavailable. Please try again later.',
    503: 'Service temporarily unavailable. Please try again later.'
  });
  const friendlyMessage =
  /* istanbul ignore next */
  (cov_2d7i0d52c2().s[41]++,
  /* istanbul ignore next */
  (cov_2d7i0d52c2().b[8][0]++, friendlyMessages[response.status]) ||
  /* istanbul ignore next */
  (cov_2d7i0d52c2().b[8][1]++, 'An unexpected error occurred.'));
  const technicalMessage =
  /* istanbul ignore next */
  (cov_2d7i0d52c2().s[42]++, `${context}: HTTP ${response.status} ${response.statusText}`);
  const error =
  /* istanbul ignore next */
  (cov_2d7i0d52c2().s[43]++, new Error(friendlyMessage));
  /* istanbul ignore next */
  cov_2d7i0d52c2().s[44]++;
  error.technicalMessage = technicalMessage;
  /* istanbul ignore next */
  cov_2d7i0d52c2().s[45]++;
  error.status = response.status;
  /* istanbul ignore next */
  cov_2d7i0d52c2().s[46]++;
  return error;
};
/* istanbul ignore next */
cov_2d7i0d52c2().s[47]++;
exports.handleApiError = handleApiError;
/**
 * Show user-friendly error notification (replace alert() calls)
 * This will hook into the app's existing toast system
 */
/* istanbul ignore next */
cov_2d7i0d52c2().s[48]++;
const showErrorNotification = (error, context) => {
  /* istanbul ignore next */
  cov_2d7i0d52c2().f[9]++;
  const message =
  /* istanbul ignore next */
  (cov_2d7i0d52c2().s[49]++, typeof error === 'string' ?
  /* istanbul ignore next */
  (cov_2d7i0d52c2().b[9][0]++, error) :
  /* istanbul ignore next */
  (cov_2d7i0d52c2().b[9][1]++, error.message));
  const fullMessage =
  /* istanbul ignore next */
  (cov_2d7i0d52c2().s[50]++, context ?
  /* istanbul ignore next */
  (cov_2d7i0d52c2().b[10][0]++, `${context}: ${message}`) :
  /* istanbul ignore next */
  (cov_2d7i0d52c2().b[10][1]++, message));
  // Use console.warn for user notifications to reduce error noise
  /* istanbul ignore next */
  cov_2d7i0d52c2().s[51]++;
  logger_1.logger.warn('User notification: ' + fullMessage);
  // TODO: Replace with actual toast notification system
  // toast.error(fullMessage);
};
/* istanbul ignore next */
cov_2d7i0d52c2().s[52]++;
exports.showErrorNotification = showErrorNotification;
/**
 * Validation error for form/input validation
 */
class ValidationError extends Error {
  constructor(message, field) {
    /* istanbul ignore next */
    cov_2d7i0d52c2().f[10]++;
    cov_2d7i0d52c2().s[53]++;
    super(message);
    /* istanbul ignore next */
    cov_2d7i0d52c2().s[54]++;
    this.field = field;
    /* istanbul ignore next */
    cov_2d7i0d52c2().s[55]++;
    this.name = 'ValidationError';
  }
}
/* istanbul ignore next */
cov_2d7i0d52c2().s[56]++;
exports.ValidationError = ValidationError;
/**
 * Audio processing specific error
 */
class AudioError extends Error {
  constructor(message, audioContext) {
    /* istanbul ignore next */
    cov_2d7i0d52c2().f[11]++;
    cov_2d7i0d52c2().s[57]++;
    super(message);
    /* istanbul ignore next */
    cov_2d7i0d52c2().s[58]++;
    this.audioContext = audioContext;
    /* istanbul ignore next */
    cov_2d7i0d52c2().s[59]++;
    this.name = 'AudioError';
  }
}
/* istanbul ignore next */
cov_2d7i0d52c2().s[60]++;
exports.AudioError = AudioError;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,