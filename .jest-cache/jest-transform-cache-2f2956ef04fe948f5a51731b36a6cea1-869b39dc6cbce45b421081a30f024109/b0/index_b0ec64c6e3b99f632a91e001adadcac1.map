{"version":3,"names":["cov_23irg4x7nn","actualCoverage","CosmosClient","s","require","BlobServiceClient","DefaultAzureCredential","SecretClient","admin","cosmosClient","database","blobServiceClient","firebaseInitialized","initializeServices","context","f","keyVaultClient","process","env","AZURE_KEY_VAULT_URL","b","cosmosConnection","AZURE_COSMOS_CONNECTION_STRING","secret","getSecret","value","error","log","warn","message","endpoint","AZURE_COSMOS_ENDPOINT","key","AZURE_COSMOS_KEY","Error","storageConnection","AZURE_STORAGE_CONNECTION_STRING","fromConnectionString","firebaseConfig","serviceAccountSecret","JSON","parse","projectId","FIREBASE_PROJECT_ID","clientEmail","FIREBASE_CLIENT_EMAIL","privateKey","FIREBASE_PRIVATE_KEY","replace","apps","length","initializeApp","credential","cert","getPendingDeletions","container","now","Date","toISOString","query","parameters","name","resources","items","fetchAll","processDataDeletion","request","startTime","id","userId","item","partitionKey","patch","op","path","deletedData","errors","containersToDelete","containerName","deleted","deleteFromContainer","push","errorMsg","deletedBlobContainers","deleteFromBlobStorage","join","auth","deleteUser","finalStatus","createAuditLogEntry","action","details","requestId","status","processingTimeMs","complianceOfficer","duration","success","updateError","deletedCount","batchSize","i","batch","slice","deletePromises","map","delete","catch","results","Promise","all","filter","result","deletedContainers","userContainers","containerClient","getContainerClient","prefix","deletedBlobs","blob","listBlobsFlat","deleteBlob","entry","auditEntry","Math","random","toString","substring","timestamp","create","module","exports","myTimer","pendingRequests","successful","r","failed","totalDuration","totalRequests","auditError"],"sources":["index.js"],"sourcesContent":["const { CosmosClient } = require('@azure/cosmos');\nconst { BlobServiceClient } = require('@azure/storage-blob');\nconst { DefaultAzureCredential } = require('@azure/identity');\nconst { SecretClient } = require('@azure/keyvault-secrets');\nconst admin = require('firebase-admin');\n\n/**\n * Scheduled Azure Function for GDPR Data Deletion Processing\n * \n * Runs daily at 2:00 AM to process data deletion requests that have reached\n * their 30-day compliance window.\n * \n * Schedule: \"0 0 2 * * *\" (2:00 AM every day)\n */\n\nlet cosmosClient;\nlet database;\nlet blobServiceClient;\nlet firebaseInitialized = false;\n\n/**\n * Initialize all required services\n */\nasync function initializeServices(context) {\n  try {\n    // Initialize Azure Key Vault for secrets\n    const keyVaultClient = process.env.AZURE_KEY_VAULT_URL \n      ? new SecretClient(process.env.AZURE_KEY_VAULT_URL, new DefaultAzureCredential())\n      : null;\n\n    // Initialize Cosmos DB\n    let cosmosConnection = process.env.AZURE_COSMOS_CONNECTION_STRING;\n    \n    if (!cosmosConnection && keyVaultClient) {\n      try {\n        const secret = await keyVaultClient.getSecret('cosmos-db-connection-string');\n        cosmosConnection = secret.value;\n      } catch (error) {\n        context.log.warn('Could not retrieve Cosmos DB connection from Key Vault:', error.message);\n      }\n    }\n\n    if (!cosmosConnection) {\n      const endpoint = process.env.AZURE_COSMOS_ENDPOINT;\n      const key = process.env.AZURE_COSMOS_KEY;\n      \n      if (!endpoint || !key) {\n        throw new Error('Cosmos DB configuration missing');\n      }\n      \n      cosmosClient = new CosmosClient({ endpoint, key });\n    } else {\n      cosmosClient = new CosmosClient(cosmosConnection);\n    }\n\n    database = cosmosClient.database('PrepBettrDB');\n\n    // Initialize Azure Blob Storage\n    let storageConnection = process.env.AZURE_STORAGE_CONNECTION_STRING;\n    \n    if (!storageConnection && keyVaultClient) {\n      try {\n        const secret = await keyVaultClient.getSecret('storage-connection-string');\n        storageConnection = secret.value;\n      } catch (error) {\n        context.log.warn('Could not retrieve Storage connection from Key Vault:', error.message);\n      }\n    }\n\n    if (!storageConnection) {\n      throw new Error('Azure Storage connection string not found');\n    }\n\n    blobServiceClient = BlobServiceClient.fromConnectionString(storageConnection);\n\n    // Initialize Firebase Admin SDK\n    if (!firebaseInitialized) {\n      let firebaseConfig;\n      \n      if (keyVaultClient) {\n        try {\n          const serviceAccountSecret = await keyVaultClient.getSecret('firebase-service-account-key');\n          firebaseConfig = JSON.parse(serviceAccountSecret.value);\n        } catch (error) {\n          context.log.warn('Could not retrieve Firebase config from Key Vault:', error.message);\n        }\n      }\n\n      // Fallback to environment variables\n      if (!firebaseConfig) {\n        firebaseConfig = {\n          projectId: process.env.FIREBASE_PROJECT_ID,\n          clientEmail: process.env.FIREBASE_CLIENT_EMAIL,\n          privateKey: process.env.FIREBASE_PRIVATE_KEY?.replace(/\\\\n/g, '\\n')\n        };\n      }\n\n      if (!admin.apps.length) {\n        admin.initializeApp({\n          credential: admin.credential.cert(firebaseConfig),\n          projectId: firebaseConfig.projectId\n        });\n      }\n      \n      firebaseInitialized = true;\n    }\n\n    context.log('‚úÖ All services initialized successfully');\n  } catch (error) {\n    context.log.error('‚ùå Failed to initialize services:', error);\n    throw error;\n  }\n}\n\n/**\n * Get pending deletion requests that are ready for processing\n */\nasync function getPendingDeletions(context) {\n  try {\n    const container = database.container('gdprRequests');\n    const now = new Date().toISOString();\n    \n    const query = {\n      query: 'SELECT * FROM c WHERE c.status = @status AND c.scheduledDate <= @now',\n      parameters: [\n        { name: '@status', value: 'pending' },\n        { name: '@now', value: now }\n      ]\n    };\n\n    const { resources } = await container.items.query(query).fetchAll();\n    \n    context.log(`üìã Found ${resources.length} deletion requests ready for processing`);\n    return resources;\n  } catch (error) {\n    context.log.error('‚ùå Failed to get pending deletions:', error);\n    throw error;\n  }\n}\n\n/**\n * Process a single data deletion request\n */\nasync function processDataDeletion(context, request) {\n  const startTime = Date.now();\n  \n  try {\n    context.log(`üóëÔ∏è Processing deletion request ${request.id} for user ${request.userId}`);\n    \n    // Update status to processing\n    const container = database.container('gdprRequests');\n    await container.item(request.id, request.partitionKey).patch([\n      { op: 'replace', path: '/status', value: 'processing' }\n    ]);\n\n    const deletedData = [];\n    const errors = [];\n\n    // Delete from Cosmos DB containers\n    const containersToDelete = [\n      'users',\n      'profiles',\n      'resumes',\n      'interviews',\n      'feedback',\n      'usage',\n      'notifications',\n      'emailVerifications',\n      'userConsents'\n    ];\n\n    for (const containerName of containersToDelete) {\n      try {\n        const deleted = await deleteFromContainer(context, containerName, request.userId);\n        if (deleted > 0) {\n          deletedData.push(`${containerName} (${deleted} items)`);\n        }\n      } catch (error) {\n        const errorMsg = `Failed to delete from ${containerName}: ${error.message}`;\n        errors.push(errorMsg);\n        context.log.error(`‚ùå ${errorMsg}`);\n      }\n    }\n\n    // Delete from Azure Blob Storage\n    try {\n      const deletedBlobContainers = await deleteFromBlobStorage(context, request.userId);\n      if (deletedBlobContainers.length > 0) {\n        deletedData.push(`blob-storage (${deletedBlobContainers.join(', ')})`);\n      }\n    } catch (error) {\n      const errorMsg = `Failed to delete from blob storage: ${error.message}`;\n      errors.push(errorMsg);\n      context.log.error(`‚ùå ${errorMsg}`);\n    }\n\n    // Delete from Firebase Authentication\n    try {\n      await admin.auth().deleteUser(request.userId);\n      deletedData.push('firebase-auth (1 user)');\n      context.log(`‚úÖ Deleted Firebase authentication record for user ${request.userId}`);\n    } catch (error) {\n      const errorMsg = `Failed to delete Firebase auth record: ${error.message}`;\n      errors.push(errorMsg);\n      context.log.error(`‚ùå ${errorMsg}`);\n    }\n\n    // Update request with results\n    const finalStatus = errors.length === 0 ? 'completed' : 'completed'; // Mark as completed even with some errors\n    await container.item(request.id, request.partitionKey).patch([\n      { op: 'replace', path: '/status', value: finalStatus },\n      { op: 'replace', path: '/completedDate', value: new Date().toISOString() },\n      { op: 'replace', path: '/deletedData', value: deletedData },\n      { op: 'replace', path: '/errors', value: errors }\n    ]);\n\n    // Create audit log entry\n    await createAuditLogEntry(context, {\n      userId: request.userId,\n      action: 'data_deletion_processed',\n      details: {\n        requestId: request.id,\n        deletedData,\n        errors,\n        status: finalStatus,\n        processingTimeMs: Date.now() - startTime\n      },\n      complianceOfficer: 'scheduled-function'\n    });\n\n    const duration = Date.now() - startTime;\n    context.log(`‚úÖ Deletion processed for user ${request.userId} in ${duration}ms`);\n    context.log(`   Deleted: ${deletedData.join(', ')}`);\n    \n    if (errors.length > 0) {\n      context.log(`   Errors: ${errors.join(', ')}`);\n    }\n\n    return { \n      success: true, \n      requestId: request.id, \n      userId: request.userId, \n      deletedData, \n      errors,\n      duration \n    };\n\n  } catch (error) {\n    const duration = Date.now() - startTime;\n    context.log.error(`‚ùå Failed to process deletion request ${request.id}:`, error);\n    \n    // Update request status to failed\n    try {\n      const container = database.container('gdprRequests');\n      await container.item(request.id, request.partitionKey).patch([\n        { op: 'replace', path: '/status', value: 'failed' },\n        { op: 'replace', path: '/errors', value: [error.message || 'Unknown error'] }\n      ]);\n    } catch (updateError) {\n      context.log.error('‚ùå Failed to update request status to failed:', updateError);\n    }\n\n    return { \n      success: false, \n      requestId: request.id, \n      userId: request.userId, \n      error: error.message,\n      duration \n    };\n  }\n}\n\n/**\n * Delete user data from a specific Cosmos DB container\n */\nasync function deleteFromContainer(context, containerName, userId) {\n  try {\n    const container = database.container(containerName);\n    const query = {\n      query: 'SELECT c.id FROM c WHERE c.userId = @userId',\n      parameters: [{ name: '@userId', value: userId }]\n    };\n\n    const { resources: items } = await container.items.query(query, {\n      partitionKey: userId\n    }).fetchAll();\n\n    let deletedCount = 0;\n    \n    // Delete in batches to avoid overwhelming the database\n    const batchSize = 25;\n    for (let i = 0; i < items.length; i += batchSize) {\n      const batch = items.slice(i, i + batchSize);\n      const deletePromises = batch.map(item => \n        container.item(item.id, userId).delete().catch(error => {\n          context.log.warn(`Failed to delete item ${item.id} from ${containerName}:`, error.message);\n          return null;\n        })\n      );\n      \n      const results = await Promise.all(deletePromises);\n      deletedCount += results.filter(result => result !== null).length;\n    }\n\n    return deletedCount;\n  } catch (error) {\n    context.log.error(`‚ùå Error deleting from container ${containerName}:`, error);\n    throw error;\n  }\n}\n\n/**\n * Delete user files from Azure Blob Storage\n */\nasync function deleteFromBlobStorage(context, userId) {\n  const deletedContainers = [];\n  const userContainers = ['user-files', 'resumes', 'profile-pics', 'documents'];\n\n  for (const containerName of userContainers) {\n    try {\n      const containerClient = blobServiceClient.getContainerClient(containerName);\n      const prefix = `users/${userId}/`;\n      \n      let deletedBlobs = 0;\n      for await (const blob of containerClient.listBlobsFlat({ prefix })) {\n        try {\n          await containerClient.deleteBlob(blob.name);\n          deletedBlobs++;\n        } catch (error) {\n          context.log.warn(`Failed to delete blob ${blob.name}:`, error.message);\n        }\n      }\n\n      if (deletedBlobs > 0) {\n        deletedContainers.push(`${containerName} (${deletedBlobs} files)`);\n      }\n    } catch (error) {\n      context.log.warn(`Failed to access blob container ${containerName}:`, error.message);\n    }\n  }\n\n  return deletedContainers;\n}\n\n/**\n * Create audit log entry\n */\nasync function createAuditLogEntry(context, entry) {\n  try {\n    const auditEntry = {\n      id: `audit_${Date.now()}_${Math.random().toString(36).substring(2)}`,\n      timestamp: new Date().toISOString(),\n      partitionKey: entry.userId,\n      ...entry\n    };\n\n    const container = database.container('dataProtectionAuditLog');\n    await container.items.create(auditEntry);\n  } catch (error) {\n    context.log.error('‚ùå Failed to create audit log entry:', error);\n    // Don't throw - audit logging failure shouldn't stop the main operation\n  }\n}\n\n/**\n * Main function - Timer triggered\n */\nmodule.exports = async function (context, myTimer) {\n  const startTime = Date.now();\n  context.log('üïê GDPR Scheduled Deletion Processor started at', new Date().toISOString());\n\n  try {\n    // Initialize all services\n    await initializeServices(context);\n    \n    // Get pending deletion requests\n    const pendingRequests = await getPendingDeletions(context);\n    \n    if (pendingRequests.length === 0) {\n      context.log('‚úÖ No pending deletion requests found');\n      return;\n    }\n\n    // Process each deletion request\n    const results = [];\n    \n    for (const request of pendingRequests) {\n      try {\n        const result = await processDataDeletion(context, request);\n        results.push(result);\n      } catch (error) {\n        context.log.error(`‚ùå Failed to process request ${request.id}:`, error);\n        results.push({\n          success: false,\n          requestId: request.id,\n          userId: request.userId,\n          error: error.message\n        });\n      }\n    }\n\n    // Summary\n    const successful = results.filter(r => r.success).length;\n    const failed = results.filter(r => !r.success).length;\n    const totalDuration = Date.now() - startTime;\n    \n    context.log(`üìä GDPR Deletion Processing Summary:`);\n    context.log(`   Total requests processed: ${results.length}`);\n    context.log(`   Successful: ${successful}`);\n    context.log(`   Failed: ${failed}`);\n    context.log(`   Total processing time: ${totalDuration}ms`);\n\n    // Create summary audit log\n    await createAuditLogEntry(context, {\n      userId: 'system',\n      action: 'scheduled_deletion_batch_processed',\n      details: {\n        totalRequests: results.length,\n        successful,\n        failed,\n        processingTimeMs: totalDuration,\n        results: results.map(r => ({\n          requestId: r.requestId,\n          userId: r.userId,\n          success: r.success,\n          deletedData: r.deletedData,\n          errors: r.errors\n        }))\n      },\n      complianceOfficer: 'scheduled-function'\n    });\n\n    context.log(`‚úÖ GDPR Scheduled Deletion Processor completed in ${totalDuration}ms`);\n    \n  } catch (error) {\n    const totalDuration = Date.now() - startTime;\n    context.log.error(`‚ùå GDPR Scheduled Deletion Processor failed after ${totalDuration}ms:`, error);\n    \n    // Create error audit log\n    try {\n      await createAuditLogEntry(context, {\n        userId: 'system',\n        action: 'scheduled_deletion_batch_failed',\n        details: {\n          error: error.message,\n          processingTimeMs: totalDuration\n        },\n        complianceOfficer: 'scheduled-function'\n      });\n    } catch (auditError) {\n      context.log.error('‚ùå Failed to create error audit log:', auditError);\n    }\n    \n    throw error;\n  }\n};\n"],"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","ignoreList":[]}