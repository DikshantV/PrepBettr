9eaf178720bd69df5fb71df9b1e97840
"use strict";

/**
 * Text Preprocessing Utilities
 *
 * Functions to clean and prepare text for Text-to-Speech (TTS) services
 * by removing markdown formatting, symbols, and other unwanted characters.
 */
/* istanbul ignore next */
function cov_gf9ybv1ma() {
  var path = "/Users/dikshantvashistha/PrepBettr/lib/utils/text-preprocessing.ts";
  var hash = "7b7951b92ee2315e4a1025ff4e4662ec482d62e8";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dikshantvashistha/PrepBettr/lib/utils/text-preprocessing.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 8,
          column: 62
        }
      },
      "1": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 42
        }
      },
      "2": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 10,
          column: 54
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 62
        }
      },
      "4": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 56
        }
      },
      "5": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 22,
          column: 5
        }
      },
      "6": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 18
        }
      },
      "7": {
        start: {
          line: 23,
          column: 22
        },
        end: {
          line: 23,
          column: 26
        }
      },
      "8": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 25,
          column: 58
        }
      },
      "9": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 27,
          column: 70
        }
      },
      "10": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 28,
          column: 68
        }
      },
      "11": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 30,
          column: 61
        }
      },
      "12": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 32,
          column: 61
        }
      },
      "13": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 34,
          column: 58
        }
      },
      "14": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 36,
          column: 70
        }
      },
      "15": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 38,
          column: 54
        }
      },
      "16": {
        start: {
          line: 40,
          column: 4
        },
        end: {
          line: 40,
          column: 57
        }
      },
      "17": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 41,
          column: 54
        }
      },
      "18": {
        start: {
          line: 43,
          column: 4
        },
        end: {
          line: 43,
          column: 78
        }
      },
      "19": {
        start: {
          line: 43,
          column: 54
        },
        end: {
          line: 43,
          column: 65
        }
      },
      "20": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 45,
          column: 37
        }
      },
      "21": {
        start: {
          line: 47,
          column: 4
        },
        end: {
          line: 47,
          column: 54
        }
      },
      "22": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 49,
          column: 66
        }
      },
      "23": {
        start: {
          line: 50,
          column: 4
        },
        end: {
          line: 50,
          column: 23
        }
      },
      "24": {
        start: {
          line: 60,
          column: 4
        },
        end: {
          line: 62,
          column: 5
        }
      },
      "25": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 61,
          column: 18
        }
      },
      "26": {
        start: {
          line: 63,
          column: 22
        },
        end: {
          line: 63,
          column: 26
        }
      },
      "27": {
        start: {
          line: 66,
          column: 4
        },
        end: {
          line: 66,
          column: 67
        }
      },
      "28": {
        start: {
          line: 68,
          column: 4
        },
        end: {
          line: 68,
          column: 83
        }
      },
      "29": {
        start: {
          line: 70,
          column: 4
        },
        end: {
          line: 70,
          column: 83
        }
      },
      "30": {
        start: {
          line: 72,
          column: 4
        },
        end: {
          line: 72,
          column: 71
        }
      },
      "31": {
        start: {
          line: 74,
          column: 4
        },
        end: {
          line: 74,
          column: 57
        }
      },
      "32": {
        start: {
          line: 76,
          column: 4
        },
        end: {
          line: 76,
          column: 47
        }
      },
      "33": {
        start: {
          line: 78,
          column: 22
        },
        end: {
          line: 78,
          column: 94
        }
      },
      "34": {
        start: {
          line: 78,
          column: 59
        },
        end: {
          line: 78,
          column: 67
        }
      },
      "35": {
        start: {
          line: 78,
          column: 81
        },
        end: {
          line: 78,
          column: 93
        }
      },
      "36": {
        start: {
          line: 80,
          column: 29
        },
        end: {
          line: 82,
          column: 78
        }
      },
      "37": {
        start: {
          line: 80,
          column: 56
        },
        end: {
          line: 82,
          column: 77
        }
      },
      "38": {
        start: {
          line: 84,
          column: 19
        },
        end: {
          line: 84,
          column: 88
        }
      },
      "39": {
        start: {
          line: 84,
          column: 59
        },
        end: {
          line: 84,
          column: 72
        }
      },
      "40": {
        start: {
          line: 86,
          column: 4
        },
        end: {
          line: 88,
          column: 5
        }
      },
      "41": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 87,
          column: 35
        }
      },
      "42": {
        start: {
          line: 89,
          column: 4
        },
        end: {
          line: 89,
          column: 25
        }
      },
      "43": {
        start: {
          line: 99,
          column: 4
        },
        end: {
          line: 101,
          column: 5
        }
      },
      "44": {
        start: {
          line: 100,
          column: 8
        },
        end: {
          line: 100,
          column: 18
        }
      },
      "45": {
        start: {
          line: 102,
          column: 22
        },
        end: {
          line: 102,
          column: 43
        }
      },
      "46": {
        start: {
          line: 104,
          column: 4
        },
        end: {
          line: 104,
          column: 102
        }
      },
      "47": {
        start: {
          line: 106,
          column: 4
        },
        end: {
          line: 106,
          column: 94
        }
      },
      "48": {
        start: {
          line: 108,
          column: 4
        },
        end: {
          line: 108,
          column: 53
        }
      },
      "49": {
        start: {
          line: 110,
          column: 4
        },
        end: {
          line: 110,
          column: 93
        }
      },
      "50": {
        start: {
          line: 112,
          column: 4
        },
        end: {
          line: 114,
          column: 5
        }
      },
      "51": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 113,
          column: 47
        }
      },
      "52": {
        start: {
          line: 115,
          column: 4
        },
        end: {
          line: 115,
          column: 23
        }
      },
      "53": {
        start: {
          line: 124,
          column: 19
        },
        end: {
          line: 124,
          column: 21
        }
      },
      "54": {
        start: {
          line: 125,
          column: 4
        },
        end: {
          line: 127,
          column: 5
        }
      },
      "55": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 126,
          column: 89
        }
      },
      "56": {
        start: {
          line: 128,
          column: 24
        },
        end: {
          line: 128,
          column: 55
        }
      },
      "57": {
        start: {
          line: 130,
          column: 4
        },
        end: {
          line: 132,
          column: 5
        }
      },
      "58": {
        start: {
          line: 131,
          column: 8
        },
        end: {
          line: 131,
          column: 86
        }
      },
      "59": {
        start: {
          line: 133,
          column: 4
        },
        end: {
          line: 135,
          column: 5
        }
      },
      "60": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 134,
          column: 70
        }
      },
      "61": {
        start: {
          line: 137,
          column: 29
        },
        end: {
          line: 137,
          column: 63
        }
      },
      "62": {
        start: {
          line: 138,
          column: 4
        },
        end: {
          line: 140,
          column: 5
        }
      },
      "63": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 139,
          column: 110
        }
      },
      "64": {
        start: {
          line: 142,
          column: 29
        },
        end: {
          line: 142,
          column: 64
        }
      },
      "65": {
        start: {
          line: 143,
          column: 4
        },
        end: {
          line: 145,
          column: 5
        }
      },
      "66": {
        start: {
          line: 144,
          column: 8
        },
        end: {
          line: 144,
          column: 86
        }
      },
      "67": {
        start: {
          line: 146,
          column: 4
        },
        end: {
          line: 150,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "cleanTextForTTS",
        decl: {
          start: {
            line: 19,
            column: 9
          },
          end: {
            line: 19,
            column: 24
          }
        },
        loc: {
          start: {
            line: 19,
            column: 31
          },
          end: {
            line: 51,
            column: 1
          }
        },
        line: 19
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 43,
            column: 46
          },
          end: {
            line: 43,
            column: 47
          }
        },
        loc: {
          start: {
            line: 43,
            column: 54
          },
          end: {
            line: 43,
            column: 65
          }
        },
        line: 43
      },
      "2": {
        name: "extractQuestionForTTS",
        decl: {
          start: {
            line: 59,
            column: 9
          },
          end: {
            line: 59,
            column: 30
          }
        },
        loc: {
          start: {
            line: 59,
            column: 37
          },
          end: {
            line: 90,
            column: 1
          }
        },
        line: 59
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 78,
            column: 54
          },
          end: {
            line: 78,
            column: 55
          }
        },
        loc: {
          start: {
            line: 78,
            column: 59
          },
          end: {
            line: 78,
            column: 67
          }
        },
        line: 78
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 78,
            column: 76
          },
          end: {
            line: 78,
            column: 77
          }
        },
        loc: {
          start: {
            line: 78,
            column: 81
          },
          end: {
            line: 78,
            column: 93
          }
        },
        line: 78
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 80,
            column: 44
          },
          end: {
            line: 80,
            column: 45
          }
        },
        loc: {
          start: {
            line: 80,
            column: 56
          },
          end: {
            line: 82,
            column: 77
          }
        },
        line: 80
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 84,
            column: 54
          },
          end: {
            line: 84,
            column: 55
          }
        },
        loc: {
          start: {
            line: 84,
            column: 59
          },
          end: {
            line: 84,
            column: 72
          }
        },
        line: 84
      },
      "7": {
        name: "prepareConversationForTTS",
        decl: {
          start: {
            line: 98,
            column: 9
          },
          end: {
            line: 98,
            column: 34
          }
        },
        loc: {
          start: {
            line: 98,
            column: 41
          },
          end: {
            line: 116,
            column: 1
          }
        },
        line: 98
      },
      "8": {
        name: "validateAndCleanForTTS",
        decl: {
          start: {
            line: 123,
            column: 9
          },
          end: {
            line: 123,
            column: 31
          }
        },
        loc: {
          start: {
            line: 123,
            column: 38
          },
          end: {
            line: 151,
            column: 1
          }
        },
        line: 123
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 20
      },
      "1": {
        loc: {
          start: {
            line: 20,
            column: 8
          },
          end: {
            line: 20,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 20,
            column: 8
          },
          end: {
            line: 20,
            column: 13
          }
        }, {
          start: {
            line: 20,
            column: 17
          },
          end: {
            line: 20,
            column: 41
          }
        }],
        line: 20
      },
      "2": {
        loc: {
          start: {
            line: 60,
            column: 4
          },
          end: {
            line: 62,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 60,
            column: 4
          },
          end: {
            line: 62,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 60
      },
      "3": {
        loc: {
          start: {
            line: 60,
            column: 8
          },
          end: {
            line: 60,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 60,
            column: 8
          },
          end: {
            line: 60,
            column: 13
          }
        }, {
          start: {
            line: 60,
            column: 17
          },
          end: {
            line: 60,
            column: 41
          }
        }],
        line: 60
      },
      "4": {
        loc: {
          start: {
            line: 80,
            column: 56
          },
          end: {
            line: 82,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 80,
            column: 56
          },
          end: {
            line: 80,
            column: 78
          }
        }, {
          start: {
            line: 81,
            column: 8
          },
          end: {
            line: 81,
            column: 28
          }
        }, {
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 82,
            column: 77
          }
        }],
        line: 80
      },
      "5": {
        loc: {
          start: {
            line: 84,
            column: 19
          },
          end: {
            line: 84,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 84,
            column: 19
          },
          end: {
            line: 84,
            column: 35
          }
        }, {
          start: {
            line: 84,
            column: 39
          },
          end: {
            line: 84,
            column: 73
          }
        }, {
          start: {
            line: 84,
            column: 77
          },
          end: {
            line: 84,
            column: 88
          }
        }],
        line: 84
      },
      "6": {
        loc: {
          start: {
            line: 86,
            column: 4
          },
          end: {
            line: 88,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 86,
            column: 4
          },
          end: {
            line: 88,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 86
      },
      "7": {
        loc: {
          start: {
            line: 86,
            column: 8
          },
          end: {
            line: 86,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 86,
            column: 8
          },
          end: {
            line: 86,
            column: 14
          }
        }, {
          start: {
            line: 86,
            column: 18
          },
          end: {
            line: 86,
            column: 47
          }
        }],
        line: 86
      },
      "8": {
        loc: {
          start: {
            line: 99,
            column: 4
          },
          end: {
            line: 101,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 99,
            column: 4
          },
          end: {
            line: 101,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 99
      },
      "9": {
        loc: {
          start: {
            line: 99,
            column: 8
          },
          end: {
            line: 99,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 99,
            column: 8
          },
          end: {
            line: 99,
            column: 13
          }
        }, {
          start: {
            line: 99,
            column: 17
          },
          end: {
            line: 99,
            column: 41
          }
        }],
        line: 99
      },
      "10": {
        loc: {
          start: {
            line: 112,
            column: 4
          },
          end: {
            line: 114,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 112,
            column: 4
          },
          end: {
            line: 114,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 112
      },
      "11": {
        loc: {
          start: {
            line: 112,
            column: 8
          },
          end: {
            line: 112,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 112,
            column: 8
          },
          end: {
            line: 112,
            column: 19
          }
        }, {
          start: {
            line: 112,
            column: 23
          },
          end: {
            line: 112,
            column: 57
          }
        }],
        line: 112
      },
      "12": {
        loc: {
          start: {
            line: 125,
            column: 4
          },
          end: {
            line: 127,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 125,
            column: 4
          },
          end: {
            line: 127,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 125
      },
      "13": {
        loc: {
          start: {
            line: 125,
            column: 8
          },
          end: {
            line: 125,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 125,
            column: 8
          },
          end: {
            line: 125,
            column: 13
          }
        }, {
          start: {
            line: 125,
            column: 17
          },
          end: {
            line: 125,
            column: 41
          }
        }],
        line: 125
      },
      "14": {
        loc: {
          start: {
            line: 130,
            column: 4
          },
          end: {
            line: 132,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 130,
            column: 4
          },
          end: {
            line: 132,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 130
      },
      "15": {
        loc: {
          start: {
            line: 133,
            column: 4
          },
          end: {
            line: 135,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 133,
            column: 4
          },
          end: {
            line: 135,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 133
      },
      "16": {
        loc: {
          start: {
            line: 138,
            column: 4
          },
          end: {
            line: 140,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 138,
            column: 4
          },
          end: {
            line: 140,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 138
      },
      "17": {
        loc: {
          start: {
            line: 138,
            column: 8
          },
          end: {
            line: 138,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 138,
            column: 8
          },
          end: {
            line: 138,
            column: 24
          }
        }, {
          start: {
            line: 138,
            column: 28
          },
          end: {
            line: 138,
            column: 55
          }
        }],
        line: 138
      },
      "18": {
        loc: {
          start: {
            line: 143,
            column: 4
          },
          end: {
            line: 145,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 143,
            column: 4
          },
          end: {
            line: 145,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 143
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/dikshantvashistha/PrepBettr/lib/utils/text-preprocessing.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/dikshantvashistha/PrepBettr/lib/utils/text-preprocessing.ts"],
      sourcesContent: ["/**\n * Text Preprocessing Utilities\n * \n * Functions to clean and prepare text for Text-to-Speech (TTS) services\n * by removing markdown formatting, symbols, and other unwanted characters.\n */\n\n/**\n * Clean Markdown formatting and symbols from text before sending to TTS\n * \n * @param text - Raw text that may contain Markdown formatting\n * @returns Cleaned text suitable for speech synthesis\n */\nexport function cleanTextForTTS(text: string): string {\n  if (!text || typeof text !== 'string') {\n    return '';\n  }\n\n  let cleanedText = text;\n\n  // Remove Markdown headers (# ## ### #### ##### ######)\n  cleanedText = cleanedText.replace(/^#{1,6}\\s*/gm, '');\n  \n  // Remove Markdown bold and italic formatting (** __ * _)\n  cleanedText = cleanedText.replace(/\\*{1,2}([^*]+)\\*{1,2}/g, '$1');\n  cleanedText = cleanedText.replace(/_{1,2}([^_]+)_{1,2}/g, '$1');\n  \n  // Remove Markdown horizontal rules (--- or ***)\n  cleanedText = cleanedText.replace(/^[-*]{3,}\\s*$/gm, '');\n  \n  // Remove Markdown code blocks (```code```)\n  cleanedText = cleanedText.replace(/```[\\s\\S]*?```/g, '');\n  \n  // Remove inline code (`code`)\n  cleanedText = cleanedText.replace(/`([^`]+)`/g, '$1');\n  \n  // Remove Markdown links ([text](url) -> text)\n  cleanedText = cleanedText.replace(/\\[([^\\]]+)\\]\\([^)]+\\)/g, '$1');\n  \n  // Remove HTML tags if any\n  cleanedText = cleanedText.replace(/<[^>]*>/g, '');\n  \n  // Remove excessive whitespace and normalize line breaks\n  cleanedText = cleanedText.replace(/\\n{3,}/g, '\\n\\n'); // Max 2 consecutive newlines\n  cleanedText = cleanedText.replace(/[ \\t]+/g, ' '); // Multiple spaces/tabs to single space\n  \n  // Remove leading/trailing whitespace from each line\n  cleanedText = cleanedText.split('\\n').map(line => line.trim()).join('\\n');\n  \n  // Remove empty lines at start and end\n  cleanedText = cleanedText.trim();\n  \n  // Replace multiple consecutive spaces with single space\n  cleanedText = cleanedText.replace(/\\s{2,}/g, ' ');\n  \n  // Ensure periods for better speech pacing (add period if sentence doesn't end with punctuation)\n  cleanedText = cleanedText.replace(/([a-zA-Z0-9])\\n/g, '$1. ');\n  \n  return cleanedText;\n}\n\n/**\n * Extract clean question text from formatted AI responses\n * Specifically handles interview question formats with headers and metadata\n * \n * @param text - Formatted text that may contain question metadata\n * @returns Clean question text suitable for speech\n */\nexport function extractQuestionForTTS(text: string): string {\n  if (!text || typeof text !== 'string') {\n    return '';\n  }\n\n  let cleanedText = text;\n  \n  // Remove structured headers and metadata commonly generated by AI\n  // Remove \"### Role:\", \"### Category:\", etc.\n  cleanedText = cleanedText.replace(/###?\\s*\\w+:\\s*[^\\n]*/g, '');\n  \n  // Remove \"**Question N:**\" type headers\n  cleanedText = cleanedText.replace(/\\*{1,2}\\s*Question\\s+\\d+[^*]*\\*{1,2}/g, '');\n  \n  // Remove \"**Question Text:**\" labels\n  cleanedText = cleanedText.replace(/\\*{1,2}\\s*Question\\s+Text:\\s*\\*{1,2}/g, '');\n  \n  // Remove other structured labels like \"Key:\", \"Expected:\", etc.\n  cleanedText = cleanedText.replace(/\\*{1,2}\\s*\\w+:\\s*\\*{1,2}/g, '');\n  \n  // Remove numbered list prefixes (1., 2., etc.)\n  cleanedText = cleanedText.replace(/^\\d+\\.\\s*/gm, '');\n  \n  // Apply general markdown cleaning\n  cleanedText = cleanTextForTTS(cleanedText);\n  \n  // Split into sentences and find the actual question\n  const sentences = cleanedText.split(/[.!?]+/).map(s => s.trim()).filter(s => s.length > 0);\n  \n  // Look for the longest sentence that seems like a question or main content\n  const questionSentence = sentences.find(sentence => \n    sentence.includes('?') || \n    sentence.length > 20 || \n    /\\b(describe|explain|tell|how|what|why|when|where)\\b/i.test(sentence)\n  );\n  \n  // Return the question sentence or the first substantial sentence\n  const result = questionSentence || sentences.find(s => s.length > 15) || cleanedText;\n  \n  // Ensure it ends with proper punctuation for speech\n  if (result && !/[.!?]$/.test(result.trim())) {\n    return result.trim() + '.';\n  }\n  \n  return result.trim();\n}\n\n/**\n * Prepare conversation text for natural speech output\n * Handles common conversational patterns and improves speech flow\n * \n * @param text - Conversation text\n * @returns Text optimized for natural speech synthesis\n */\nexport function prepareConversationForTTS(text: string): string {\n  if (!text || typeof text !== 'string') {\n    return '';\n  }\n\n  let cleanedText = cleanTextForTTS(text);\n  \n  // Add natural pauses after greetings\n  cleanedText = cleanedText.replace(/^(Hello|Hi|Hey|Good morning|Good afternoon)[,!]?\\s*/i, '$1! ');\n  \n  // Add pause after \"Great!\" or \"Excellent!\" responses\n  cleanedText = cleanedText.replace(/^(Great|Excellent|Perfect|Wonderful)[!]?\\s*/i, '$1! ');\n  \n  // Ensure questions end with question marks for proper intonation\n  cleanedText = cleanedText.replace(/\\?\\.$/g, '?');\n  \n  // Add slight pause after transition words\n  cleanedText = cleanedText.replace(/\\b(Now|Next|So|Well|However|Therefore)\\s+/gi, '$1, ');\n  \n  // Ensure proper punctuation for speech rhythm\n  if (cleanedText && !/[.!?]$/.test(cleanedText.trim())) {\n    cleanedText = cleanedText.trim() + '.';\n  }\n  \n  return cleanedText;\n}\n\n/**\n * Validate that text is suitable for TTS (not too long, has content, etc.)\n * \n * @param text - Text to validate\n * @returns Object with validation result and cleaned text\n */\nexport function validateAndCleanForTTS(text: string): { \n  isValid: boolean; \n  cleanedText: string; \n  issues: string[]; \n} {\n  const issues: string[] = [];\n  \n  if (!text || typeof text !== 'string') {\n    return { isValid: false, cleanedText: '', issues: ['Text is empty or invalid'] };\n  }\n  \n  const cleanedText = prepareConversationForTTS(text);\n  \n  // Check length constraints (typical TTS services have limits)\n  if (cleanedText.length > 5000) {\n    issues.push('Text is too long for optimal TTS processing (>5000 characters)');\n  }\n  \n  if (cleanedText.length < 3) {\n    issues.push('Text is too short for meaningful speech output');\n  }\n  \n  // Check for remaining problematic characters\n  const problematicChars = cleanedText.match(/[#*_`\\[\\]{}]/g);\n  if (problematicChars && problematicChars.length > 0) {\n    issues.push(`Contains unhandled formatting characters: ${[...new Set(problematicChars)].join(', ')}`);\n  }\n  \n  // Check for repeated patterns that might cause speech issues\n  const repeatedPatterns = cleanedText.match(/(.{3,})\\1{2,}/g);\n  if (repeatedPatterns) {\n    issues.push('Contains repeated text patterns that may affect speech quality');\n  }\n  \n  return {\n    isValid: issues.length === 0,\n    cleanedText,\n    issues\n  };\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "7b7951b92ee2315e4a1025ff4e4662ec482d62e8"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_gf9ybv1ma = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_gf9ybv1ma();
cov_gf9ybv1ma().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_gf9ybv1ma().s[1]++;
exports.cleanTextForTTS = cleanTextForTTS;
/* istanbul ignore next */
cov_gf9ybv1ma().s[2]++;
exports.extractQuestionForTTS = extractQuestionForTTS;
/* istanbul ignore next */
cov_gf9ybv1ma().s[3]++;
exports.prepareConversationForTTS = prepareConversationForTTS;
/* istanbul ignore next */
cov_gf9ybv1ma().s[4]++;
exports.validateAndCleanForTTS = validateAndCleanForTTS;
/**
 * Clean Markdown formatting and symbols from text before sending to TTS
 *
 * @param text - Raw text that may contain Markdown formatting
 * @returns Cleaned text suitable for speech synthesis
 */
function cleanTextForTTS(text) {
  /* istanbul ignore next */
  cov_gf9ybv1ma().f[0]++;
  cov_gf9ybv1ma().s[5]++;
  if (
  /* istanbul ignore next */
  (cov_gf9ybv1ma().b[1][0]++, !text) ||
  /* istanbul ignore next */
  (cov_gf9ybv1ma().b[1][1]++, typeof text !== 'string')) {
    /* istanbul ignore next */
    cov_gf9ybv1ma().b[0][0]++;
    cov_gf9ybv1ma().s[6]++;
    return '';
  } else
  /* istanbul ignore next */
  {
    cov_gf9ybv1ma().b[0][1]++;
  }
  let cleanedText =
  /* istanbul ignore next */
  (cov_gf9ybv1ma().s[7]++, text);
  // Remove Markdown headers (# ## ### #### ##### ######)
  /* istanbul ignore next */
  cov_gf9ybv1ma().s[8]++;
  cleanedText = cleanedText.replace(/^#{1,6}\s*/gm, '');
  // Remove Markdown bold and italic formatting (** __ * _)
  /* istanbul ignore next */
  cov_gf9ybv1ma().s[9]++;
  cleanedText = cleanedText.replace(/\*{1,2}([^*]+)\*{1,2}/g, '$1');
  /* istanbul ignore next */
  cov_gf9ybv1ma().s[10]++;
  cleanedText = cleanedText.replace(/_{1,2}([^_]+)_{1,2}/g, '$1');
  // Remove Markdown horizontal rules (--- or ***)
  /* istanbul ignore next */
  cov_gf9ybv1ma().s[11]++;
  cleanedText = cleanedText.replace(/^[-*]{3,}\s*$/gm, '');
  // Remove Markdown code blocks (```code```)
  /* istanbul ignore next */
  cov_gf9ybv1ma().s[12]++;
  cleanedText = cleanedText.replace(/```[\s\S]*?```/g, '');
  // Remove inline code (`code`)
  /* istanbul ignore next */
  cov_gf9ybv1ma().s[13]++;
  cleanedText = cleanedText.replace(/`([^`]+)`/g, '$1');
  // Remove Markdown links ([text](url) -> text)
  /* istanbul ignore next */
  cov_gf9ybv1ma().s[14]++;
  cleanedText = cleanedText.replace(/\[([^\]]+)\]\([^)]+\)/g, '$1');
  // Remove HTML tags if any
  /* istanbul ignore next */
  cov_gf9ybv1ma().s[15]++;
  cleanedText = cleanedText.replace(/<[^>]*>/g, '');
  // Remove excessive whitespace and normalize line breaks
  /* istanbul ignore next */
  cov_gf9ybv1ma().s[16]++;
  cleanedText = cleanedText.replace(/\n{3,}/g, '\n\n'); // Max 2 consecutive newlines
  /* istanbul ignore next */
  cov_gf9ybv1ma().s[17]++;
  cleanedText = cleanedText.replace(/[ \t]+/g, ' '); // Multiple spaces/tabs to single space
  // Remove leading/trailing whitespace from each line
  /* istanbul ignore next */
  cov_gf9ybv1ma().s[18]++;
  cleanedText = cleanedText.split('\n').map(line => {
    /* istanbul ignore next */
    cov_gf9ybv1ma().f[1]++;
    cov_gf9ybv1ma().s[19]++;
    return line.trim();
  }).join('\n');
  // Remove empty lines at start and end
  /* istanbul ignore next */
  cov_gf9ybv1ma().s[20]++;
  cleanedText = cleanedText.trim();
  // Replace multiple consecutive spaces with single space
  /* istanbul ignore next */
  cov_gf9ybv1ma().s[21]++;
  cleanedText = cleanedText.replace(/\s{2,}/g, ' ');
  // Ensure periods for better speech pacing (add period if sentence doesn't end with punctuation)
  /* istanbul ignore next */
  cov_gf9ybv1ma().s[22]++;
  cleanedText = cleanedText.replace(/([a-zA-Z0-9])\n/g, '$1. ');
  /* istanbul ignore next */
  cov_gf9ybv1ma().s[23]++;
  return cleanedText;
}
/**
 * Extract clean question text from formatted AI responses
 * Specifically handles interview question formats with headers and metadata
 *
 * @param text - Formatted text that may contain question metadata
 * @returns Clean question text suitable for speech
 */
function extractQuestionForTTS(text) {
  /* istanbul ignore next */
  cov_gf9ybv1ma().f[2]++;
  cov_gf9ybv1ma().s[24]++;
  if (
  /* istanbul ignore next */
  (cov_gf9ybv1ma().b[3][0]++, !text) ||
  /* istanbul ignore next */
  (cov_gf9ybv1ma().b[3][1]++, typeof text !== 'string')) {
    /* istanbul ignore next */
    cov_gf9ybv1ma().b[2][0]++;
    cov_gf9ybv1ma().s[25]++;
    return '';
  } else
  /* istanbul ignore next */
  {
    cov_gf9ybv1ma().b[2][1]++;
  }
  let cleanedText =
  /* istanbul ignore next */
  (cov_gf9ybv1ma().s[26]++, text);
  // Remove structured headers and metadata commonly generated by AI
  // Remove "### Role:", "### Category:", etc.
  /* istanbul ignore next */
  cov_gf9ybv1ma().s[27]++;
  cleanedText = cleanedText.replace(/###?\s*\w+:\s*[^\n]*/g, '');
  // Remove "**Question N:**" type headers
  /* istanbul ignore next */
  cov_gf9ybv1ma().s[28]++;
  cleanedText = cleanedText.replace(/\*{1,2}\s*Question\s+\d+[^*]*\*{1,2}/g, '');
  // Remove "**Question Text:**" labels
  /* istanbul ignore next */
  cov_gf9ybv1ma().s[29]++;
  cleanedText = cleanedText.replace(/\*{1,2}\s*Question\s+Text:\s*\*{1,2}/g, '');
  // Remove other structured labels like "Key:", "Expected:", etc.
  /* istanbul ignore next */
  cov_gf9ybv1ma().s[30]++;
  cleanedText = cleanedText.replace(/\*{1,2}\s*\w+:\s*\*{1,2}/g, '');
  // Remove numbered list prefixes (1., 2., etc.)
  /* istanbul ignore next */
  cov_gf9ybv1ma().s[31]++;
  cleanedText = cleanedText.replace(/^\d+\.\s*/gm, '');
  // Apply general markdown cleaning
  /* istanbul ignore next */
  cov_gf9ybv1ma().s[32]++;
  cleanedText = cleanTextForTTS(cleanedText);
  // Split into sentences and find the actual question
  const sentences =
  /* istanbul ignore next */
  (cov_gf9ybv1ma().s[33]++, cleanedText.split(/[.!?]+/).map(s => {
    /* istanbul ignore next */
    cov_gf9ybv1ma().f[3]++;
    cov_gf9ybv1ma().s[34]++;
    return s.trim();
  }).filter(s => {
    /* istanbul ignore next */
    cov_gf9ybv1ma().f[4]++;
    cov_gf9ybv1ma().s[35]++;
    return s.length > 0;
  }));
  // Look for the longest sentence that seems like a question or main content
  const questionSentence =
  /* istanbul ignore next */
  (cov_gf9ybv1ma().s[36]++, sentences.find(sentence => {
    /* istanbul ignore next */
    cov_gf9ybv1ma().f[5]++;
    cov_gf9ybv1ma().s[37]++;
    return /* istanbul ignore next */(cov_gf9ybv1ma().b[4][0]++, sentence.includes('?')) ||
    /* istanbul ignore next */
    (cov_gf9ybv1ma().b[4][1]++, sentence.length > 20) ||
    /* istanbul ignore next */
    (cov_gf9ybv1ma().b[4][2]++, /\b(describe|explain|tell|how|what|why|when|where)\b/i.test(sentence));
  }));
  // Return the question sentence or the first substantial sentence
  const result =
  /* istanbul ignore next */
  (cov_gf9ybv1ma().s[38]++,
  /* istanbul ignore next */
  (cov_gf9ybv1ma().b[5][0]++, questionSentence) ||
  /* istanbul ignore next */
  (cov_gf9ybv1ma().b[5][1]++, sentences.find(s => {
    /* istanbul ignore next */
    cov_gf9ybv1ma().f[6]++;
    cov_gf9ybv1ma().s[39]++;
    return s.length > 15;
  })) ||
  /* istanbul ignore next */
  (cov_gf9ybv1ma().b[5][2]++, cleanedText));
  // Ensure it ends with proper punctuation for speech
  /* istanbul ignore next */
  cov_gf9ybv1ma().s[40]++;
  if (
  /* istanbul ignore next */
  (cov_gf9ybv1ma().b[7][0]++, result) &&
  /* istanbul ignore next */
  (cov_gf9ybv1ma().b[7][1]++, !/[.!?]$/.test(result.trim()))) {
    /* istanbul ignore next */
    cov_gf9ybv1ma().b[6][0]++;
    cov_gf9ybv1ma().s[41]++;
    return result.trim() + '.';
  } else
  /* istanbul ignore next */
  {
    cov_gf9ybv1ma().b[6][1]++;
  }
  cov_gf9ybv1ma().s[42]++;
  return result.trim();
}
/**
 * Prepare conversation text for natural speech output
 * Handles common conversational patterns and improves speech flow
 *
 * @param text - Conversation text
 * @returns Text optimized for natural speech synthesis
 */
function prepareConversationForTTS(text) {
  /* istanbul ignore next */
  cov_gf9ybv1ma().f[7]++;
  cov_gf9ybv1ma().s[43]++;
  if (
  /* istanbul ignore next */
  (cov_gf9ybv1ma().b[9][0]++, !text) ||
  /* istanbul ignore next */
  (cov_gf9ybv1ma().b[9][1]++, typeof text !== 'string')) {
    /* istanbul ignore next */
    cov_gf9ybv1ma().b[8][0]++;
    cov_gf9ybv1ma().s[44]++;
    return '';
  } else
  /* istanbul ignore next */
  {
    cov_gf9ybv1ma().b[8][1]++;
  }
  let cleanedText =
  /* istanbul ignore next */
  (cov_gf9ybv1ma().s[45]++, cleanTextForTTS(text));
  // Add natural pauses after greetings
  /* istanbul ignore next */
  cov_gf9ybv1ma().s[46]++;
  cleanedText = cleanedText.replace(/^(Hello|Hi|Hey|Good morning|Good afternoon)[,!]?\s*/i, '$1! ');
  // Add pause after "Great!" or "Excellent!" responses
  /* istanbul ignore next */
  cov_gf9ybv1ma().s[47]++;
  cleanedText = cleanedText.replace(/^(Great|Excellent|Perfect|Wonderful)[!]?\s*/i, '$1! ');
  // Ensure questions end with question marks for proper intonation
  /* istanbul ignore next */
  cov_gf9ybv1ma().s[48]++;
  cleanedText = cleanedText.replace(/\?\.$/g, '?');
  // Add slight pause after transition words
  /* istanbul ignore next */
  cov_gf9ybv1ma().s[49]++;
  cleanedText = cleanedText.replace(/\b(Now|Next|So|Well|However|Therefore)\s+/gi, '$1, ');
  // Ensure proper punctuation for speech rhythm
  /* istanbul ignore next */
  cov_gf9ybv1ma().s[50]++;
  if (
  /* istanbul ignore next */
  (cov_gf9ybv1ma().b[11][0]++, cleanedText) &&
  /* istanbul ignore next */
  (cov_gf9ybv1ma().b[11][1]++, !/[.!?]$/.test(cleanedText.trim()))) {
    /* istanbul ignore next */
    cov_gf9ybv1ma().b[10][0]++;
    cov_gf9ybv1ma().s[51]++;
    cleanedText = cleanedText.trim() + '.';
  } else
  /* istanbul ignore next */
  {
    cov_gf9ybv1ma().b[10][1]++;
  }
  cov_gf9ybv1ma().s[52]++;
  return cleanedText;
}
/**
 * Validate that text is suitable for TTS (not too long, has content, etc.)
 *
 * @param text - Text to validate
 * @returns Object with validation result and cleaned text
 */
function validateAndCleanForTTS(text) {
  /* istanbul ignore next */
  cov_gf9ybv1ma().f[8]++;
  const issues =
  /* istanbul ignore next */
  (cov_gf9ybv1ma().s[53]++, []);
  /* istanbul ignore next */
  cov_gf9ybv1ma().s[54]++;
  if (
  /* istanbul ignore next */
  (cov_gf9ybv1ma().b[13][0]++, !text) ||
  /* istanbul ignore next */
  (cov_gf9ybv1ma().b[13][1]++, typeof text !== 'string')) {
    /* istanbul ignore next */
    cov_gf9ybv1ma().b[12][0]++;
    cov_gf9ybv1ma().s[55]++;
    return {
      isValid: false,
      cleanedText: '',
      issues: ['Text is empty or invalid']
    };
  } else
  /* istanbul ignore next */
  {
    cov_gf9ybv1ma().b[12][1]++;
  }
  const cleanedText =
  /* istanbul ignore next */
  (cov_gf9ybv1ma().s[56]++, prepareConversationForTTS(text));
  // Check length constraints (typical TTS services have limits)
  /* istanbul ignore next */
  cov_gf9ybv1ma().s[57]++;
  if (cleanedText.length > 5000) {
    /* istanbul ignore next */
    cov_gf9ybv1ma().b[14][0]++;
    cov_gf9ybv1ma().s[58]++;
    issues.push('Text is too long for optimal TTS processing (>5000 characters)');
  } else
  /* istanbul ignore next */
  {
    cov_gf9ybv1ma().b[14][1]++;
  }
  cov_gf9ybv1ma().s[59]++;
  if (cleanedText.length < 3) {
    /* istanbul ignore next */
    cov_gf9ybv1ma().b[15][0]++;
    cov_gf9ybv1ma().s[60]++;
    issues.push('Text is too short for meaningful speech output');
  } else
  /* istanbul ignore next */
  {
    cov_gf9ybv1ma().b[15][1]++;
  }
  // Check for remaining problematic characters
  const problematicChars =
  /* istanbul ignore next */
  (cov_gf9ybv1ma().s[61]++, cleanedText.match(/[#*_`\[\]{}]/g));
  /* istanbul ignore next */
  cov_gf9ybv1ma().s[62]++;
  if (
  /* istanbul ignore next */
  (cov_gf9ybv1ma().b[17][0]++, problematicChars) &&
  /* istanbul ignore next */
  (cov_gf9ybv1ma().b[17][1]++, problematicChars.length > 0)) {
    /* istanbul ignore next */
    cov_gf9ybv1ma().b[16][0]++;
    cov_gf9ybv1ma().s[63]++;
    issues.push(`Contains unhandled formatting characters: ${[...new Set(problematicChars)].join(', ')}`);
  } else
  /* istanbul ignore next */
  {
    cov_gf9ybv1ma().b[16][1]++;
  }
  // Check for repeated patterns that might cause speech issues
  const repeatedPatterns =
  /* istanbul ignore next */
  (cov_gf9ybv1ma().s[64]++, cleanedText.match(/(.{3,})\1{2,}/g));
  /* istanbul ignore next */
  cov_gf9ybv1ma().s[65]++;
  if (repeatedPatterns) {
    /* istanbul ignore next */
    cov_gf9ybv1ma().b[18][0]++;
    cov_gf9ybv1ma().s[66]++;
    issues.push('Contains repeated text patterns that may affect speech quality');
  } else
  /* istanbul ignore next */
  {
    cov_gf9ybv1ma().b[18][1]++;
  }
  cov_gf9ybv1ma().s[67]++;
  return {
    isValid: issues.length === 0,
    cleanedText,
    issues
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,