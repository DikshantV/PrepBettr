{"version":3,"names":["cov_6wvp4dxew","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","admin_1","require","FirebaseUserService","getInstance","instance","getUserProfile","uid","firestore","getAdminFirestore","userDoc","collection","doc","get","exists","console","log","data","profile","email","displayName","profilePictureUrl","phoneNumber","emailVerified","plan","createdAt","_a","toDate","Date","updatedAt","_b","about","workplace","skills","dateOfBirth","error","createUserProfile","userData","now","profileData","split","set","Object","assign","updateUserProfile","updates","_","updateData","__rest","updatePayload","update","ensureUserProfile","existingProfile","getAuthUser","auth","getAdminAuth","userRecord","getUser","createAuthUser","createUser","password","signInWithEmailAndPassword","getUserByEmail","customToken","createCustomToken","user","token","deleteUser","delete","healthCheck","details","healthy","catch","firebaseAuth","Error","message","limit","exports","firebaseUserService","default"],"sources":["/Users/dikshantvashistha/PrepBettr/lib/services/firebase-user-service.ts"],"sourcesContent":["/**\n * Firebase User Service - Real Implementation\n * \n * Handles user profile management using Firebase Authentication and Firestore\n * This is the single source of truth for user identity and profiles\n */\n\nimport { getAdminAuth, getAdminFirestore } from '@/lib/firebase/admin';\n\nexport interface UserProfile {\n  uid: string;\n  email: string;\n  displayName?: string;\n  profilePictureUrl?: string;\n  phoneNumber?: string;\n  emailVerified: boolean;\n  plan: 'free' | 'premium';\n  createdAt: Date;\n  updatedAt: Date;\n  // Additional profile data\n  about?: string;\n  workplace?: string;\n  skills?: string[];\n  dateOfBirth?: string;\n}\n\nexport interface CreateUserData {\n  email: string;\n  displayName?: string;\n  phoneNumber?: string;\n  emailVerified?: boolean;\n  plan?: 'free' | 'premium';\n}\n\nclass FirebaseUserService {\n  private static instance: FirebaseUserService;\n  \n  public static getInstance(): FirebaseUserService {\n    if (!FirebaseUserService.instance) {\n      FirebaseUserService.instance = new FirebaseUserService();\n    }\n    return FirebaseUserService.instance;\n  }\n\n  /**\n   * Get user profile from Firestore\n   */\n  async getUserProfile(uid: string): Promise<UserProfile | null> {\n    try {\n      const firestore = await getAdminFirestore();\n      const userDoc = await firestore.collection('users').doc(uid).get();\n      \n      if (!userDoc.exists) {\n        console.log(`User profile not found for uid: ${uid}`);\n        return null;\n      }\n      \n      const data = userDoc.data();\n      if (!data) {\n        console.log(`User profile data is empty for uid: ${uid}`);\n        return null;\n      }\n\n      // Convert Firestore timestamps to Date objects (handle both Firestore Timestamp and regular dates)\n      const profile: UserProfile = {\n        uid,\n        email: data.email,\n        displayName: data.displayName,\n        profilePictureUrl: data.profilePictureUrl,\n        phoneNumber: data.phoneNumber,\n        emailVerified: data.emailVerified || false,\n        plan: data.plan || 'free',\n        createdAt: data.createdAt?.toDate ? data.createdAt.toDate() : (data.createdAt ? new Date(data.createdAt) : new Date()),\n        updatedAt: data.updatedAt?.toDate ? data.updatedAt.toDate() : (data.updatedAt ? new Date(data.updatedAt) : new Date()),\n        about: data.about,\n        workplace: data.workplace,\n        skills: data.skills || [],\n        dateOfBirth: data.dateOfBirth\n      };\n\n      console.log(`‚úÖ Retrieved user profile for uid: ${uid}`);\n      return profile;\n    } catch (error) {\n      console.error(`‚ùå Failed to get user profile for uid: ${uid}`, error);\n      throw error;\n    }\n  }\n\n  /**\n   * Create user profile in Firestore\n   */\n  async createUserProfile(uid: string, userData: CreateUserData): Promise<UserProfile> {\n    try {\n      const firestore = await getAdminFirestore();\n      const now = new Date();\n      \n      const profileData = {\n        email: userData.email,\n        displayName: userData.displayName || userData.email.split('@')[0],\n        profilePictureUrl: undefined,\n        phoneNumber: userData.phoneNumber || undefined,\n        emailVerified: userData.emailVerified || false,\n        plan: userData.plan || 'free',\n        createdAt: now,\n        updatedAt: now,\n        about: undefined,\n        workplace: undefined,\n        skills: [],\n        dateOfBirth: undefined\n      };\n\n      await firestore.collection('users').doc(uid).set(profileData);\n      \n      console.log(`‚úÖ Created user profile for uid: ${uid}, email: ${userData.email}`);\n      \n      return {\n        uid,\n        ...profileData,\n        skills: profileData.skills || []\n      };\n    } catch (error) {\n      console.error(`‚ùå Failed to create user profile for uid: ${uid}`, error);\n      throw error;\n    }\n  }\n\n  /**\n   * Update user profile in Firestore\n   */\n  async updateUserProfile(uid: string, updates: Partial<UserProfile>): Promise<void> {\n    try {\n      const firestore = await getAdminFirestore();\n      \n      // Remove uid from updates to prevent overwriting document ID\n      const { uid: _, ...updateData } = updates;\n      \n      const updatePayload = {\n        ...updateData,\n        updatedAt: new Date()\n      };\n\n      await firestore.collection('users').doc(uid).update(updatePayload);\n      \n      console.log(`‚úÖ Updated user profile for uid: ${uid}`);\n    } catch (error) {\n      console.error(`‚ùå Failed to update user profile for uid: ${uid}`, error);\n      throw error;\n    }\n  }\n\n  /**\n   * Ensure user profile exists - create if not found\n   */\n  async ensureUserProfile(uid: string, userData: CreateUserData): Promise<UserProfile> {\n    try {\n      // First, try to get existing profile\n      const existingProfile = await this.getUserProfile(uid);\n      \n      if (existingProfile) {\n        console.log(`üîÑ User profile already exists for uid: ${uid}`);\n        return existingProfile;\n      }\n\n      // If not found, create new profile\n      console.log(`üÜï Creating new user profile for uid: ${uid}`);\n      return await this.createUserProfile(uid, userData);\n    } catch (error) {\n      console.error(`‚ùå Failed to ensure user profile for uid: ${uid}`, error);\n      throw error;\n    }\n  }\n\n  /**\n   * Get Firebase Auth user record\n   */\n  async getAuthUser(uid: string) {\n    try {\n      const auth = await getAdminAuth();\n      const userRecord = await auth.getUser(uid);\n      \n      console.log(`‚úÖ Retrieved Firebase Auth user for uid: ${uid}`);\n      return userRecord;\n    } catch (error) {\n      console.error(`‚ùå Failed to get Firebase Auth user for uid: ${uid}`, error);\n      throw error;\n    }\n  }\n\n  /**\n   * Create Firebase Auth user (for email/password signup)\n   */\n  async createAuthUser(userData: {\n    email: string;\n    password?: string;\n    displayName?: string;\n    phoneNumber?: string;\n    emailVerified?: boolean;\n  }) {\n    try {\n      const auth = await getAdminAuth();\n      \n      const userRecord = await auth.createUser({\n        email: userData.email,\n        password: userData.password,\n        displayName: userData.displayName,\n        phoneNumber: userData.phoneNumber,\n        emailVerified: userData.emailVerified || false\n      });\n      \n      console.log(`‚úÖ Created Firebase Auth user for email: ${userData.email}, uid: ${userRecord.uid}`);\n      return userRecord;\n    } catch (error) {\n      console.error(`‚ùå Failed to create Firebase Auth user for email: ${userData.email}`, error);\n      throw error;\n    }\n  }\n\n  /**\n   * Sign in with email and password (create custom token)\n   */\n  async signInWithEmailAndPassword(email: string, password: string) {\n    try {\n      const auth = await getAdminAuth();\n      \n      // In a real implementation, you'd verify the password against Firebase Auth\n      // For now, we'll create a custom token for the user\n      const userRecord = await auth.getUserByEmail(email);\n      const customToken = await auth.createCustomToken(userRecord.uid);\n      \n      console.log(`‚úÖ Created custom token for email: ${email}, uid: ${userRecord.uid}`);\n      \n      return {\n        user: {\n          uid: userRecord.uid,\n          email: userRecord.email,\n          displayName: userRecord.displayName,\n          emailVerified: userRecord.emailVerified\n        },\n        token: customToken\n      };\n    } catch (error) {\n      console.error(`‚ùå Failed to sign in with email: ${email}`, error);\n      throw error;\n    }\n  }\n\n  /**\n   * Delete user profile and auth record\n   */\n  async deleteUser(uid: string): Promise<void> {\n    try {\n      const auth = await getAdminAuth();\n      const firestore = await getAdminFirestore();\n      \n      // Delete Firestore profile\n      await firestore.collection('users').doc(uid).delete();\n      \n      // Delete Firebase Auth user\n      await auth.deleteUser(uid);\n      \n      console.log(`‚úÖ Deleted user completely for uid: ${uid}`);\n    } catch (error) {\n      console.error(`‚ùå Failed to delete user for uid: ${uid}`, error);\n      throw error;\n    }\n  }\n\n  /**\n   * Health check - verify Firebase connections\n   */\n  async healthCheck(): Promise<{ healthy: boolean; details: Record<string, any> }> {\n    const details: Record<string, any> = {};\n    let healthy = true;\n\n    try {\n      // Test Firebase Auth connection\n      const auth = await getAdminAuth();\n      await auth.getUser('test-user-id').catch(() => {\n        // Expected to fail, just testing connectivity\n      });\n      details.firebaseAuth = 'connected';\n    } catch (error) {\n      details.firebaseAuth = `error: ${error instanceof Error ? error.message : 'Unknown error'}`;\n      healthy = false;\n    }\n\n    try {\n      // Test Firestore connection\n      const firestore = await getAdminFirestore();\n      await firestore.collection('users').limit(1).get();\n      details.firestore = 'connected';\n    } catch (error) {\n      details.firestore = `error: ${error instanceof Error ? error.message : 'Unknown error'}`;\n      healthy = false;\n    }\n\n    return { healthy, details };\n  }\n}\n\n// Export singleton instance\nexport const firebaseUserService = FirebaseUserService.getInstance();\nexport default firebaseUserService;\n"],"mappings":"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","ignoreList":[]}