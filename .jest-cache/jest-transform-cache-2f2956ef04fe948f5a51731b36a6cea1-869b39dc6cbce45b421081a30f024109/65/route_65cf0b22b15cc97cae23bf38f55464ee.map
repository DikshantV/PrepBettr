{"version":3,"names":["exports","POST","cov_14hzjqw62p","s","GET","server_1","require","interview_workflow_1","workflow","getWorkflow","f","b","InterviewWorkflow","request","body","json","sessionId","NextResponse","error","status","console","log","fromAgent","toAgent","force","workflowInstance","currentStatus","getStatus","state","success","code","pendingAgents","length","activeAgents","handoffContext","context","previousQuestions","insights","currentStage","metrics","totalQuestionsGenerated","focusAreas","instructions","timestamp","Date","now","advanceStage","updatedStatus","handoff","message","timing","handoffTimestamp","nextStageStartTime","_a","stages","currentStageIndex","startTime","recoverable","_b","endpoint","description","requiredFields","optionalFields","agentTypes","validTransitions","technical","behavioral","industry","example","notes"],"sources":["/Users/dikshantvashistha/PrepBettr/app/api/interview/agent/handoff/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { InterviewWorkflow } from '@/lib/azure-ai-foundry/workflows/interview-workflow';\nimport type { AgentHandoff } from '@/lib/azure-ai-foundry/workflows/workflow-types';\n\n// Initialize workflow lazily to avoid build-time issues\nlet workflow: InterviewWorkflow | null = null;\n\nfunction getWorkflow(): InterviewWorkflow {\n  if (!workflow) {\n    workflow = new InterviewWorkflow();\n  }\n  return workflow;\n}\n\n/**\n * POST /api/interview/agent/handoff\n * \n * Trigger agent handoff and advance to next stage\n * \n * Request Body:\n * - sessionId: string (required)\n * - fromAgent?: AgentType (current agent)\n * - toAgent?: AgentType (target agent, auto-determined if not provided)\n * - insights?: string[] (key insights to pass to next agent)\n * - focusAreas?: string[] (areas for next agent to focus on)\n * - instructions?: string (additional instructions for handoff)\n * - force?: boolean (force handoff even if current stage incomplete)\n * \n * Response:\n * - success: boolean\n * - handoff: AgentHandoff information\n * - status: updated WorkflowStatus\n */\nexport async function POST(request: NextRequest) {\n  let body: any = {};\n  try {\n    body = await request.json();\n    \n    if (!body.sessionId) {\n      return NextResponse.json({\n        error: 'Session ID is required'\n      }, { status: 400 });\n    }\n\n    const sessionId = body.sessionId;\n    \n    console.log(`[API] Agent handoff requested for session: ${sessionId}`);\n    console.log(`- From: ${body.fromAgent || 'auto'}`);\n    console.log(`- To: ${body.toAgent || 'auto'}`);\n    console.log(`- Force: ${body.force || false}`);\n\n    // Get workflow instance (initialized lazily)\n    const workflowInstance = getWorkflow();\n\n    // Get current status to validate handoff\n    const currentStatus = await workflowInstance.getStatus(sessionId);\n    \n    // Validate that handoff is possible\n    if (!body.force) {\n      if (currentStatus.state === 'completed') {\n        return NextResponse.json({\n          success: false,\n          error: 'Interview is already completed',\n          code: 'INVALID_STATE'\n        }, { status: 400 });\n      }\n      \n      if (currentStatus.state === 'failed') {\n        return NextResponse.json({\n          success: false,\n          error: 'Interview has failed, cannot perform handoff',\n          code: 'INVALID_STATE'\n        }, { status: 400 });\n      }\n      \n      if (currentStatus.pendingAgents.length === 0) {\n        return NextResponse.json({\n          success: false,\n          error: 'No pending agents for handoff',\n          code: 'INVALID_STATE'\n        }, { status: 400 });\n      }\n    }\n\n    // Determine agents for handoff\n    const fromAgent = body.fromAgent || currentStatus.activeAgents[0];\n    const toAgent = body.toAgent || currentStatus.pendingAgents[0];\n\n    // Build handoff context\n    const handoffContext: AgentHandoff = {\n      sessionId,\n      fromAgent,\n      toAgent,\n      context: {\n        previousQuestions: [], // Would be populated from session state\n        insights: body.insights || [\n          `Completed ${currentStatus.currentStage} stage`,\n          `Generated ${currentStatus.metrics.totalQuestionsGenerated} questions so far`\n        ],\n        focusAreas: body.focusAreas || [],\n        instructions: body.instructions\n      },\n      timestamp: Date.now()\n    };\n\n    console.log(`[API] Executing handoff: ${fromAgent} → ${toAgent}`);\n\n    // Trigger stage advancement (which handles the agent transition)\n    await workflowInstance.advanceStage(sessionId);\n    \n    // Get updated status\n    const updatedStatus = await workflowInstance.getStatus(sessionId);\n\n    return NextResponse.json({\n      success: true,\n      sessionId,\n      handoff: handoffContext,\n      status: updatedStatus,\n      message: `Agent handoff completed: ${fromAgent} → ${toAgent}`,\n      timing: {\n        handoffTimestamp: handoffContext.timestamp,\n        nextStageStartTime: updatedStatus.stages[updatedStatus.currentStageIndex - 1]?.startTime\n      }\n    });\n\n  } catch (error: any) {\n    console.error('[API] Error during agent handoff:', error);\n    \n    if (error.code === 'SESSION_NOT_FOUND') {\n      return NextResponse.json({\n        success: false,\n        error: 'Session not found',\n        sessionId: body.sessionId\n      }, { status: 404 });\n    }\n\n    return NextResponse.json({\n      success: false,\n      error: error.message || 'Failed to execute agent handoff',\n      code: error.code || 'UNKNOWN_ERROR',\n      sessionId: body.sessionId,\n      recoverable: error.recoverable ?? true\n    }, { status: 500 });\n  }\n}\n\n/**\n * GET /api/interview/agent/handoff\n * \n * Get handoff API documentation\n */\nexport async function GET() {\n  return NextResponse.json({\n    endpoint: 'POST /api/interview/agent/handoff',\n    description: 'Trigger agent handoff and advance to next interview stage',\n    requiredFields: ['sessionId'],\n    optionalFields: [\n      'fromAgent',\n      'toAgent',\n      'insights',\n      'focusAreas', \n      'instructions',\n      'force'\n    ],\n    agentTypes: ['technical', 'behavioral', 'industry'],\n    validTransitions: {\n      technical: ['behavioral', 'industry'],\n      behavioral: ['industry', 'wrap-up'],\n      industry: ['wrap-up']\n    },\n    example: {\n      sessionId: 'interview_abc123',\n      fromAgent: 'technical',\n      toAgent: 'behavioral',\n      insights: [\n        'Candidate shows strong algorithmic thinking',\n        'Good understanding of system design principles'\n      ],\n      focusAreas: [\n        'Leadership experience',\n        'Team collaboration'\n      ],\n      instructions: 'Focus on senior-level behavioral scenarios'\n    },\n    notes: [\n      'Agents are automatically determined based on stage progression if not specified',\n      'Set force: true to skip validation checks',\n      'Handoffs update session state and trigger next agent'\n    ]\n  });\n}\n"],"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","ignoreList":[]}