079216d18428f2eda3a9eb24e468d656
"use strict";

/* istanbul ignore next */
function cov_14hzjqw62p() {
  var path = "/Users/dikshantvashistha/PrepBettr/app/api/interview/agent/handoff/route.ts";
  var hash = "424afbaa5afaf0bb7ebbf74fd168c269d757695f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dikshantvashistha/PrepBettr/app/api/interview/agent/handoff/route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 20
        }
      },
      "2": {
        start: {
          line: 4,
          column: 0
        },
        end: {
          line: 4,
          column: 18
        }
      },
      "3": {
        start: {
          line: 5,
          column: 17
        },
        end: {
          line: 5,
          column: 39
        }
      },
      "4": {
        start: {
          line: 6,
          column: 29
        },
        end: {
          line: 6,
          column: 91
        }
      },
      "5": {
        start: {
          line: 8,
          column: 15
        },
        end: {
          line: 8,
          column: 19
        }
      },
      "6": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 12,
          column: 5
        }
      },
      "7": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 64
        }
      },
      "8": {
        start: {
          line: 13,
          column: 4
        },
        end: {
          line: 13,
          column: 20
        }
      },
      "9": {
        start: {
          line: 36,
          column: 15
        },
        end: {
          line: 36,
          column: 17
        }
      },
      "10": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 129,
          column: 5
        }
      },
      "11": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 36
        }
      },
      "12": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 43,
          column: 9
        }
      },
      "13": {
        start: {
          line: 40,
          column: 12
        },
        end: {
          line: 42,
          column: 32
        }
      },
      "14": {
        start: {
          line: 44,
          column: 26
        },
        end: {
          line: 44,
          column: 40
        }
      },
      "15": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 79
        }
      },
      "16": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 46,
          column: 59
        }
      },
      "17": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 55
        }
      },
      "18": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 48,
          column: 55
        }
      },
      "19": {
        start: {
          line: 50,
          column: 33
        },
        end: {
          line: 50,
          column: 46
        }
      },
      "20": {
        start: {
          line: 52,
          column: 30
        },
        end: {
          line: 52,
          column: 73
        }
      },
      "21": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 76,
          column: 9
        }
      },
      "22": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 61,
          column: 13
        }
      },
      "23": {
        start: {
          line: 56,
          column: 16
        },
        end: {
          line: 60,
          column: 36
        }
      },
      "24": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 68,
          column: 13
        }
      },
      "25": {
        start: {
          line: 63,
          column: 16
        },
        end: {
          line: 67,
          column: 36
        }
      },
      "26": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 75,
          column: 13
        }
      },
      "27": {
        start: {
          line: 70,
          column: 16
        },
        end: {
          line: 74,
          column: 36
        }
      },
      "28": {
        start: {
          line: 78,
          column: 26
        },
        end: {
          line: 78,
          column: 73
        }
      },
      "29": {
        start: {
          line: 79,
          column: 24
        },
        end: {
          line: 79,
          column: 70
        }
      },
      "30": {
        start: {
          line: 81,
          column: 31
        },
        end: {
          line: 95,
          column: 9
        }
      },
      "31": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 96,
          column: 74
        }
      },
      "32": {
        start: {
          line: 98,
          column: 8
        },
        end: {
          line: 98,
          column: 55
        }
      },
      "33": {
        start: {
          line: 100,
          column: 30
        },
        end: {
          line: 100,
          column: 73
        }
      },
      "34": {
        start: {
          line: 101,
          column: 8
        },
        end: {
          line: 111,
          column: 11
        }
      },
      "35": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 114,
          column: 66
        }
      },
      "36": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 121,
          column: 9
        }
      },
      "37": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 120,
          column: 32
        }
      },
      "38": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 128,
          column: 28
        }
      },
      "39": {
        start: {
          line: 137,
          column: 4
        },
        end: {
          line: 174,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "getWorkflow",
        decl: {
          start: {
            line: 9,
            column: 9
          },
          end: {
            line: 9,
            column: 20
          }
        },
        loc: {
          start: {
            line: 9,
            column: 23
          },
          end: {
            line: 14,
            column: 1
          }
        },
        line: 9
      },
      "1": {
        name: "POST",
        decl: {
          start: {
            line: 34,
            column: 15
          },
          end: {
            line: 34,
            column: 19
          }
        },
        loc: {
          start: {
            line: 34,
            column: 29
          },
          end: {
            line: 130,
            column: 1
          }
        },
        line: 34
      },
      "2": {
        name: "GET",
        decl: {
          start: {
            line: 136,
            column: 15
          },
          end: {
            line: 136,
            column: 18
          }
        },
        loc: {
          start: {
            line: 136,
            column: 21
          },
          end: {
            line: 175,
            column: 1
          }
        },
        line: 136
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 10
      },
      "1": {
        loc: {
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 43,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 43,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 39
      },
      "2": {
        loc: {
          start: {
            line: 46,
            column: 31
          },
          end: {
            line: 46,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 46,
            column: 31
          },
          end: {
            line: 46,
            column: 45
          }
        }, {
          start: {
            line: 46,
            column: 49
          },
          end: {
            line: 46,
            column: 55
          }
        }],
        line: 46
      },
      "3": {
        loc: {
          start: {
            line: 47,
            column: 29
          },
          end: {
            line: 47,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 47,
            column: 29
          },
          end: {
            line: 47,
            column: 41
          }
        }, {
          start: {
            line: 47,
            column: 45
          },
          end: {
            line: 47,
            column: 51
          }
        }],
        line: 47
      },
      "4": {
        loc: {
          start: {
            line: 48,
            column: 32
          },
          end: {
            line: 48,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 48,
            column: 32
          },
          end: {
            line: 48,
            column: 42
          }
        }, {
          start: {
            line: 48,
            column: 46
          },
          end: {
            line: 48,
            column: 51
          }
        }],
        line: 48
      },
      "5": {
        loc: {
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 76,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 76,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 54
      },
      "6": {
        loc: {
          start: {
            line: 55,
            column: 12
          },
          end: {
            line: 61,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 12
          },
          end: {
            line: 61,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 55
      },
      "7": {
        loc: {
          start: {
            line: 62,
            column: 12
          },
          end: {
            line: 68,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 62,
            column: 12
          },
          end: {
            line: 68,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 62
      },
      "8": {
        loc: {
          start: {
            line: 69,
            column: 12
          },
          end: {
            line: 75,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 69,
            column: 12
          },
          end: {
            line: 75,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 69
      },
      "9": {
        loc: {
          start: {
            line: 78,
            column: 26
          },
          end: {
            line: 78,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 78,
            column: 26
          },
          end: {
            line: 78,
            column: 40
          }
        }, {
          start: {
            line: 78,
            column: 44
          },
          end: {
            line: 78,
            column: 73
          }
        }],
        line: 78
      },
      "10": {
        loc: {
          start: {
            line: 79,
            column: 24
          },
          end: {
            line: 79,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 79,
            column: 24
          },
          end: {
            line: 79,
            column: 36
          }
        }, {
          start: {
            line: 79,
            column: 40
          },
          end: {
            line: 79,
            column: 70
          }
        }],
        line: 79
      },
      "11": {
        loc: {
          start: {
            line: 87,
            column: 26
          },
          end: {
            line: 90,
            column: 17
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 87,
            column: 26
          },
          end: {
            line: 87,
            column: 39
          }
        }, {
          start: {
            line: 87,
            column: 43
          },
          end: {
            line: 90,
            column: 17
          }
        }],
        line: 87
      },
      "12": {
        loc: {
          start: {
            line: 91,
            column: 28
          },
          end: {
            line: 91,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 91,
            column: 28
          },
          end: {
            line: 91,
            column: 43
          }
        }, {
          start: {
            line: 91,
            column: 47
          },
          end: {
            line: 91,
            column: 49
          }
        }],
        line: 91
      },
      "13": {
        loc: {
          start: {
            line: 109,
            column: 36
          },
          end: {
            line: 109,
            column: 150
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 109,
            column: 129
          },
          end: {
            line: 109,
            column: 135
          }
        }, {
          start: {
            line: 109,
            column: 138
          },
          end: {
            line: 109,
            column: 150
          }
        }],
        line: 109
      },
      "14": {
        loc: {
          start: {
            line: 109,
            column: 36
          },
          end: {
            line: 109,
            column: 126
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 109,
            column: 36
          },
          end: {
            line: 109,
            column: 109
          }
        }, {
          start: {
            line: 109,
            column: 113
          },
          end: {
            line: 109,
            column: 126
          }
        }],
        line: 109
      },
      "15": {
        loc: {
          start: {
            line: 115,
            column: 8
          },
          end: {
            line: 121,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 115,
            column: 8
          },
          end: {
            line: 121,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 115
      },
      "16": {
        loc: {
          start: {
            line: 124,
            column: 19
          },
          end: {
            line: 124,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 124,
            column: 19
          },
          end: {
            line: 124,
            column: 32
          }
        }, {
          start: {
            line: 124,
            column: 36
          },
          end: {
            line: 124,
            column: 69
          }
        }],
        line: 124
      },
      "17": {
        loc: {
          start: {
            line: 125,
            column: 18
          },
          end: {
            line: 125,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 125,
            column: 18
          },
          end: {
            line: 125,
            column: 28
          }
        }, {
          start: {
            line: 125,
            column: 32
          },
          end: {
            line: 125,
            column: 47
          }
        }],
        line: 125
      },
      "18": {
        loc: {
          start: {
            line: 127,
            column: 25
          },
          end: {
            line: 127,
            column: 87
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 127,
            column: 78
          },
          end: {
            line: 127,
            column: 80
          }
        }, {
          start: {
            line: 127,
            column: 83
          },
          end: {
            line: 127,
            column: 87
          }
        }],
        line: 127
      },
      "19": {
        loc: {
          start: {
            line: 127,
            column: 25
          },
          end: {
            line: 127,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 127,
            column: 25
          },
          end: {
            line: 127,
            column: 58
          }
        }, {
          start: {
            line: 127,
            column: 62
          },
          end: {
            line: 127,
            column: 75
          }
        }],
        line: 127
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/dikshantvashistha/PrepBettr/app/api/interview/agent/handoff/route.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/dikshantvashistha/PrepBettr/app/api/interview/agent/handoff/route.ts"],
      sourcesContent: ["import { NextRequest, NextResponse } from 'next/server';\nimport { InterviewWorkflow } from '@/lib/azure-ai-foundry/workflows/interview-workflow';\nimport type { AgentHandoff } from '@/lib/azure-ai-foundry/workflows/workflow-types';\n\n// Initialize workflow lazily to avoid build-time issues\nlet workflow: InterviewWorkflow | null = null;\n\nfunction getWorkflow(): InterviewWorkflow {\n  if (!workflow) {\n    workflow = new InterviewWorkflow();\n  }\n  return workflow;\n}\n\n/**\n * POST /api/interview/agent/handoff\n * \n * Trigger agent handoff and advance to next stage\n * \n * Request Body:\n * - sessionId: string (required)\n * - fromAgent?: AgentType (current agent)\n * - toAgent?: AgentType (target agent, auto-determined if not provided)\n * - insights?: string[] (key insights to pass to next agent)\n * - focusAreas?: string[] (areas for next agent to focus on)\n * - instructions?: string (additional instructions for handoff)\n * - force?: boolean (force handoff even if current stage incomplete)\n * \n * Response:\n * - success: boolean\n * - handoff: AgentHandoff information\n * - status: updated WorkflowStatus\n */\nexport async function POST(request: NextRequest) {\n  let body: any = {};\n  try {\n    body = await request.json();\n    \n    if (!body.sessionId) {\n      return NextResponse.json({\n        error: 'Session ID is required'\n      }, { status: 400 });\n    }\n\n    const sessionId = body.sessionId;\n    \n    console.log(`[API] Agent handoff requested for session: ${sessionId}`);\n    console.log(`- From: ${body.fromAgent || 'auto'}`);\n    console.log(`- To: ${body.toAgent || 'auto'}`);\n    console.log(`- Force: ${body.force || false}`);\n\n    // Get workflow instance (initialized lazily)\n    const workflowInstance = getWorkflow();\n\n    // Get current status to validate handoff\n    const currentStatus = await workflowInstance.getStatus(sessionId);\n    \n    // Validate that handoff is possible\n    if (!body.force) {\n      if (currentStatus.state === 'completed') {\n        return NextResponse.json({\n          success: false,\n          error: 'Interview is already completed',\n          code: 'INVALID_STATE'\n        }, { status: 400 });\n      }\n      \n      if (currentStatus.state === 'failed') {\n        return NextResponse.json({\n          success: false,\n          error: 'Interview has failed, cannot perform handoff',\n          code: 'INVALID_STATE'\n        }, { status: 400 });\n      }\n      \n      if (currentStatus.pendingAgents.length === 0) {\n        return NextResponse.json({\n          success: false,\n          error: 'No pending agents for handoff',\n          code: 'INVALID_STATE'\n        }, { status: 400 });\n      }\n    }\n\n    // Determine agents for handoff\n    const fromAgent = body.fromAgent || currentStatus.activeAgents[0];\n    const toAgent = body.toAgent || currentStatus.pendingAgents[0];\n\n    // Build handoff context\n    const handoffContext: AgentHandoff = {\n      sessionId,\n      fromAgent,\n      toAgent,\n      context: {\n        previousQuestions: [], // Would be populated from session state\n        insights: body.insights || [\n          `Completed ${currentStatus.currentStage} stage`,\n          `Generated ${currentStatus.metrics.totalQuestionsGenerated} questions so far`\n        ],\n        focusAreas: body.focusAreas || [],\n        instructions: body.instructions\n      },\n      timestamp: Date.now()\n    };\n\n    console.log(`[API] Executing handoff: ${fromAgent} \u2192 ${toAgent}`);\n\n    // Trigger stage advancement (which handles the agent transition)\n    await workflowInstance.advanceStage(sessionId);\n    \n    // Get updated status\n    const updatedStatus = await workflowInstance.getStatus(sessionId);\n\n    return NextResponse.json({\n      success: true,\n      sessionId,\n      handoff: handoffContext,\n      status: updatedStatus,\n      message: `Agent handoff completed: ${fromAgent} \u2192 ${toAgent}`,\n      timing: {\n        handoffTimestamp: handoffContext.timestamp,\n        nextStageStartTime: updatedStatus.stages[updatedStatus.currentStageIndex - 1]?.startTime\n      }\n    });\n\n  } catch (error: any) {\n    console.error('[API] Error during agent handoff:', error);\n    \n    if (error.code === 'SESSION_NOT_FOUND') {\n      return NextResponse.json({\n        success: false,\n        error: 'Session not found',\n        sessionId: body.sessionId\n      }, { status: 404 });\n    }\n\n    return NextResponse.json({\n      success: false,\n      error: error.message || 'Failed to execute agent handoff',\n      code: error.code || 'UNKNOWN_ERROR',\n      sessionId: body.sessionId,\n      recoverable: error.recoverable ?? true\n    }, { status: 500 });\n  }\n}\n\n/**\n * GET /api/interview/agent/handoff\n * \n * Get handoff API documentation\n */\nexport async function GET() {\n  return NextResponse.json({\n    endpoint: 'POST /api/interview/agent/handoff',\n    description: 'Trigger agent handoff and advance to next interview stage',\n    requiredFields: ['sessionId'],\n    optionalFields: [\n      'fromAgent',\n      'toAgent',\n      'insights',\n      'focusAreas', \n      'instructions',\n      'force'\n    ],\n    agentTypes: ['technical', 'behavioral', 'industry'],\n    validTransitions: {\n      technical: ['behavioral', 'industry'],\n      behavioral: ['industry', 'wrap-up'],\n      industry: ['wrap-up']\n    },\n    example: {\n      sessionId: 'interview_abc123',\n      fromAgent: 'technical',\n      toAgent: 'behavioral',\n      insights: [\n        'Candidate shows strong algorithmic thinking',\n        'Good understanding of system design principles'\n      ],\n      focusAreas: [\n        'Leadership experience',\n        'Team collaboration'\n      ],\n      instructions: 'Focus on senior-level behavioral scenarios'\n    },\n    notes: [\n      'Agents are automatically determined based on stage progression if not specified',\n      'Set force: true to skip validation checks',\n      'Handoffs update session state and trigger next agent'\n    ]\n  });\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "424afbaa5afaf0bb7ebbf74fd168c269d757695f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_14hzjqw62p = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_14hzjqw62p();
cov_14hzjqw62p().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_14hzjqw62p().s[1]++;
exports.POST = POST;
/* istanbul ignore next */
cov_14hzjqw62p().s[2]++;
exports.GET = GET;
const server_1 =
/* istanbul ignore next */
(cov_14hzjqw62p().s[3]++, require("next/server"));
const interview_workflow_1 =
/* istanbul ignore next */
(cov_14hzjqw62p().s[4]++, require("@/lib/azure-ai-foundry/workflows/interview-workflow"));
// Initialize workflow lazily to avoid build-time issues
let workflow =
/* istanbul ignore next */
(cov_14hzjqw62p().s[5]++, null);
function getWorkflow() {
  /* istanbul ignore next */
  cov_14hzjqw62p().f[0]++;
  cov_14hzjqw62p().s[6]++;
  if (!workflow) {
    /* istanbul ignore next */
    cov_14hzjqw62p().b[0][0]++;
    cov_14hzjqw62p().s[7]++;
    workflow = new interview_workflow_1.InterviewWorkflow();
  } else
  /* istanbul ignore next */
  {
    cov_14hzjqw62p().b[0][1]++;
  }
  cov_14hzjqw62p().s[8]++;
  return workflow;
}
/**
 * POST /api/interview/agent/handoff
 *
 * Trigger agent handoff and advance to next stage
 *
 * Request Body:
 * - sessionId: string (required)
 * - fromAgent?: AgentType (current agent)
 * - toAgent?: AgentType (target agent, auto-determined if not provided)
 * - insights?: string[] (key insights to pass to next agent)
 * - focusAreas?: string[] (areas for next agent to focus on)
 * - instructions?: string (additional instructions for handoff)
 * - force?: boolean (force handoff even if current stage incomplete)
 *
 * Response:
 * - success: boolean
 * - handoff: AgentHandoff information
 * - status: updated WorkflowStatus
 */
async function POST(request) {
  /* istanbul ignore next */
  cov_14hzjqw62p().f[1]++;
  var _a, _b;
  let body =
  /* istanbul ignore next */
  (cov_14hzjqw62p().s[9]++, {});
  /* istanbul ignore next */
  cov_14hzjqw62p().s[10]++;
  try {
    /* istanbul ignore next */
    cov_14hzjqw62p().s[11]++;
    body = await request.json();
    /* istanbul ignore next */
    cov_14hzjqw62p().s[12]++;
    if (!body.sessionId) {
      /* istanbul ignore next */
      cov_14hzjqw62p().b[1][0]++;
      cov_14hzjqw62p().s[13]++;
      return server_1.NextResponse.json({
        error: 'Session ID is required'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_14hzjqw62p().b[1][1]++;
    }
    const sessionId =
    /* istanbul ignore next */
    (cov_14hzjqw62p().s[14]++, body.sessionId);
    /* istanbul ignore next */
    cov_14hzjqw62p().s[15]++;
    console.log(`[API] Agent handoff requested for session: ${sessionId}`);
    /* istanbul ignore next */
    cov_14hzjqw62p().s[16]++;
    console.log(`- From: ${
    /* istanbul ignore next */
    (cov_14hzjqw62p().b[2][0]++, body.fromAgent) ||
    /* istanbul ignore next */
    (cov_14hzjqw62p().b[2][1]++, 'auto')}`);
    /* istanbul ignore next */
    cov_14hzjqw62p().s[17]++;
    console.log(`- To: ${
    /* istanbul ignore next */
    (cov_14hzjqw62p().b[3][0]++, body.toAgent) ||
    /* istanbul ignore next */
    (cov_14hzjqw62p().b[3][1]++, 'auto')}`);
    /* istanbul ignore next */
    cov_14hzjqw62p().s[18]++;
    console.log(`- Force: ${
    /* istanbul ignore next */
    (cov_14hzjqw62p().b[4][0]++, body.force) ||
    /* istanbul ignore next */
    (cov_14hzjqw62p().b[4][1]++, false)}`);
    // Get workflow instance (initialized lazily)
    const workflowInstance =
    /* istanbul ignore next */
    (cov_14hzjqw62p().s[19]++, getWorkflow());
    // Get current status to validate handoff
    const currentStatus =
    /* istanbul ignore next */
    (cov_14hzjqw62p().s[20]++, await workflowInstance.getStatus(sessionId));
    // Validate that handoff is possible
    /* istanbul ignore next */
    cov_14hzjqw62p().s[21]++;
    if (!body.force) {
      /* istanbul ignore next */
      cov_14hzjqw62p().b[5][0]++;
      cov_14hzjqw62p().s[22]++;
      if (currentStatus.state === 'completed') {
        /* istanbul ignore next */
        cov_14hzjqw62p().b[6][0]++;
        cov_14hzjqw62p().s[23]++;
        return server_1.NextResponse.json({
          success: false,
          error: 'Interview is already completed',
          code: 'INVALID_STATE'
        }, {
          status: 400
        });
      } else
      /* istanbul ignore next */
      {
        cov_14hzjqw62p().b[6][1]++;
      }
      cov_14hzjqw62p().s[24]++;
      if (currentStatus.state === 'failed') {
        /* istanbul ignore next */
        cov_14hzjqw62p().b[7][0]++;
        cov_14hzjqw62p().s[25]++;
        return server_1.NextResponse.json({
          success: false,
          error: 'Interview has failed, cannot perform handoff',
          code: 'INVALID_STATE'
        }, {
          status: 400
        });
      } else
      /* istanbul ignore next */
      {
        cov_14hzjqw62p().b[7][1]++;
      }
      cov_14hzjqw62p().s[26]++;
      if (currentStatus.pendingAgents.length === 0) {
        /* istanbul ignore next */
        cov_14hzjqw62p().b[8][0]++;
        cov_14hzjqw62p().s[27]++;
        return server_1.NextResponse.json({
          success: false,
          error: 'No pending agents for handoff',
          code: 'INVALID_STATE'
        }, {
          status: 400
        });
      } else
      /* istanbul ignore next */
      {
        cov_14hzjqw62p().b[8][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_14hzjqw62p().b[5][1]++;
    }
    // Determine agents for handoff
    const fromAgent =
    /* istanbul ignore next */
    (cov_14hzjqw62p().s[28]++,
    /* istanbul ignore next */
    (cov_14hzjqw62p().b[9][0]++, body.fromAgent) ||
    /* istanbul ignore next */
    (cov_14hzjqw62p().b[9][1]++, currentStatus.activeAgents[0]));
    const toAgent =
    /* istanbul ignore next */
    (cov_14hzjqw62p().s[29]++,
    /* istanbul ignore next */
    (cov_14hzjqw62p().b[10][0]++, body.toAgent) ||
    /* istanbul ignore next */
    (cov_14hzjqw62p().b[10][1]++, currentStatus.pendingAgents[0]));
    // Build handoff context
    const handoffContext =
    /* istanbul ignore next */
    (cov_14hzjqw62p().s[30]++, {
      sessionId,
      fromAgent,
      toAgent,
      context: {
        previousQuestions: [],
        // Would be populated from session state
        insights:
        /* istanbul ignore next */
        (cov_14hzjqw62p().b[11][0]++, body.insights) ||
        /* istanbul ignore next */
        (cov_14hzjqw62p().b[11][1]++, [`Completed ${currentStatus.currentStage} stage`, `Generated ${currentStatus.metrics.totalQuestionsGenerated} questions so far`]),
        focusAreas:
        /* istanbul ignore next */
        (cov_14hzjqw62p().b[12][0]++, body.focusAreas) ||
        /* istanbul ignore next */
        (cov_14hzjqw62p().b[12][1]++, []),
        instructions: body.instructions
      },
      timestamp: Date.now()
    });
    /* istanbul ignore next */
    cov_14hzjqw62p().s[31]++;
    console.log(`[API] Executing handoff: ${fromAgent} → ${toAgent}`);
    // Trigger stage advancement (which handles the agent transition)
    /* istanbul ignore next */
    cov_14hzjqw62p().s[32]++;
    await workflowInstance.advanceStage(sessionId);
    // Get updated status
    const updatedStatus =
    /* istanbul ignore next */
    (cov_14hzjqw62p().s[33]++, await workflowInstance.getStatus(sessionId));
    /* istanbul ignore next */
    cov_14hzjqw62p().s[34]++;
    return server_1.NextResponse.json({
      success: true,
      sessionId,
      handoff: handoffContext,
      status: updatedStatus,
      message: `Agent handoff completed: ${fromAgent} → ${toAgent}`,
      timing: {
        handoffTimestamp: handoffContext.timestamp,
        nextStageStartTime:
        /* istanbul ignore next */
        (cov_14hzjqw62p().b[14][0]++, (_a = updatedStatus.stages[updatedStatus.currentStageIndex - 1]) === null) ||
        /* istanbul ignore next */
        (cov_14hzjqw62p().b[14][1]++, _a === void 0) ?
        /* istanbul ignore next */
        (cov_14hzjqw62p().b[13][0]++, void 0) :
        /* istanbul ignore next */
        (cov_14hzjqw62p().b[13][1]++, _a.startTime)
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_14hzjqw62p().s[35]++;
    console.error('[API] Error during agent handoff:', error);
    /* istanbul ignore next */
    cov_14hzjqw62p().s[36]++;
    if (error.code === 'SESSION_NOT_FOUND') {
      /* istanbul ignore next */
      cov_14hzjqw62p().b[15][0]++;
      cov_14hzjqw62p().s[37]++;
      return server_1.NextResponse.json({
        success: false,
        error: 'Session not found',
        sessionId: body.sessionId
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_14hzjqw62p().b[15][1]++;
    }
    cov_14hzjqw62p().s[38]++;
    return server_1.NextResponse.json({
      success: false,
      error:
      /* istanbul ignore next */
      (cov_14hzjqw62p().b[16][0]++, error.message) ||
      /* istanbul ignore next */
      (cov_14hzjqw62p().b[16][1]++, 'Failed to execute agent handoff'),
      code:
      /* istanbul ignore next */
      (cov_14hzjqw62p().b[17][0]++, error.code) ||
      /* istanbul ignore next */
      (cov_14hzjqw62p().b[17][1]++, 'UNKNOWN_ERROR'),
      sessionId: body.sessionId,
      recoverable:
      /* istanbul ignore next */
      (cov_14hzjqw62p().b[19][0]++, (_b = error.recoverable) !== null) &&
      /* istanbul ignore next */
      (cov_14hzjqw62p().b[19][1]++, _b !== void 0) ?
      /* istanbul ignore next */
      (cov_14hzjqw62p().b[18][0]++, _b) :
      /* istanbul ignore next */
      (cov_14hzjqw62p().b[18][1]++, true)
    }, {
      status: 500
    });
  }
}
/**
 * GET /api/interview/agent/handoff
 *
 * Get handoff API documentation
 */
async function GET() {
  /* istanbul ignore next */
  cov_14hzjqw62p().f[2]++;
  cov_14hzjqw62p().s[39]++;
  return server_1.NextResponse.json({
    endpoint: 'POST /api/interview/agent/handoff',
    description: 'Trigger agent handoff and advance to next interview stage',
    requiredFields: ['sessionId'],
    optionalFields: ['fromAgent', 'toAgent', 'insights', 'focusAreas', 'instructions', 'force'],
    agentTypes: ['technical', 'behavioral', 'industry'],
    validTransitions: {
      technical: ['behavioral', 'industry'],
      behavioral: ['industry', 'wrap-up'],
      industry: ['wrap-up']
    },
    example: {
      sessionId: 'interview_abc123',
      fromAgent: 'technical',
      toAgent: 'behavioral',
      insights: ['Candidate shows strong algorithmic thinking', 'Good understanding of system design principles'],
      focusAreas: ['Leadership experience', 'Team collaboration'],
      instructions: 'Focus on senior-level behavioral scenarios'
    },
    notes: ['Agents are automatically determined based on stage progression if not specified', 'Set force: true to skip validation checks', 'Handoffs update session state and trigger next agent']
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJleHBvcnRzIiwiUE9TVCIsImNvdl8xNGh6anF3NjJwIiwicyIsIkdFVCIsInNlcnZlcl8xIiwicmVxdWlyZSIsImludGVydmlld193b3JrZmxvd18xIiwid29ya2Zsb3ciLCJnZXRXb3JrZmxvdyIsImYiLCJiIiwiSW50ZXJ2aWV3V29ya2Zsb3ciLCJyZXF1ZXN0IiwiYm9keSIsImpzb24iLCJzZXNzaW9uSWQiLCJOZXh0UmVzcG9uc2UiLCJlcnJvciIsInN0YXR1cyIsImNvbnNvbGUiLCJsb2ciLCJmcm9tQWdlbnQiLCJ0b0FnZW50IiwiZm9yY2UiLCJ3b3JrZmxvd0luc3RhbmNlIiwiY3VycmVudFN0YXR1cyIsImdldFN0YXR1cyIsInN0YXRlIiwic3VjY2VzcyIsImNvZGUiLCJwZW5kaW5nQWdlbnRzIiwibGVuZ3RoIiwiYWN0aXZlQWdlbnRzIiwiaGFuZG9mZkNvbnRleHQiLCJjb250ZXh0IiwicHJldmlvdXNRdWVzdGlvbnMiLCJpbnNpZ2h0cyIsImN1cnJlbnRTdGFnZSIsIm1ldHJpY3MiLCJ0b3RhbFF1ZXN0aW9uc0dlbmVyYXRlZCIsImZvY3VzQXJlYXMiLCJpbnN0cnVjdGlvbnMiLCJ0aW1lc3RhbXAiLCJEYXRlIiwibm93IiwiYWR2YW5jZVN0YWdlIiwidXBkYXRlZFN0YXR1cyIsImhhbmRvZmYiLCJtZXNzYWdlIiwidGltaW5nIiwiaGFuZG9mZlRpbWVzdGFtcCIsIm5leHRTdGFnZVN0YXJ0VGltZSIsIl9hIiwic3RhZ2VzIiwiY3VycmVudFN0YWdlSW5kZXgiLCJzdGFydFRpbWUiLCJyZWNvdmVyYWJsZSIsIl9iIiwiZW5kcG9pbnQiLCJkZXNjcmlwdGlvbiIsInJlcXVpcmVkRmllbGRzIiwib3B0aW9uYWxGaWVsZHMiLCJhZ2VudFR5cGVzIiwidmFsaWRUcmFuc2l0aW9ucyIsInRlY2huaWNhbCIsImJlaGF2aW9yYWwiLCJpbmR1c3RyeSIsImV4YW1wbGUiLCJub3RlcyJdLCJzb3VyY2VzIjpbIi9Vc2Vycy9kaWtzaGFudHZhc2hpc3RoYS9QcmVwQmV0dHIvYXBwL2FwaS9pbnRlcnZpZXcvYWdlbnQvaGFuZG9mZi9yb3V0ZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZXh0UmVxdWVzdCwgTmV4dFJlc3BvbnNlIH0gZnJvbSAnbmV4dC9zZXJ2ZXInO1xuaW1wb3J0IHsgSW50ZXJ2aWV3V29ya2Zsb3cgfSBmcm9tICdAL2xpYi9henVyZS1haS1mb3VuZHJ5L3dvcmtmbG93cy9pbnRlcnZpZXctd29ya2Zsb3cnO1xuaW1wb3J0IHR5cGUgeyBBZ2VudEhhbmRvZmYgfSBmcm9tICdAL2xpYi9henVyZS1haS1mb3VuZHJ5L3dvcmtmbG93cy93b3JrZmxvdy10eXBlcyc7XG5cbi8vIEluaXRpYWxpemUgd29ya2Zsb3cgbGF6aWx5IHRvIGF2b2lkIGJ1aWxkLXRpbWUgaXNzdWVzXG5sZXQgd29ya2Zsb3c6IEludGVydmlld1dvcmtmbG93IHwgbnVsbCA9IG51bGw7XG5cbmZ1bmN0aW9uIGdldFdvcmtmbG93KCk6IEludGVydmlld1dvcmtmbG93IHtcbiAgaWYgKCF3b3JrZmxvdykge1xuICAgIHdvcmtmbG93ID0gbmV3IEludGVydmlld1dvcmtmbG93KCk7XG4gIH1cbiAgcmV0dXJuIHdvcmtmbG93O1xufVxuXG4vKipcbiAqIFBPU1QgL2FwaS9pbnRlcnZpZXcvYWdlbnQvaGFuZG9mZlxuICogXG4gKiBUcmlnZ2VyIGFnZW50IGhhbmRvZmYgYW5kIGFkdmFuY2UgdG8gbmV4dCBzdGFnZVxuICogXG4gKiBSZXF1ZXN0IEJvZHk6XG4gKiAtIHNlc3Npb25JZDogc3RyaW5nIChyZXF1aXJlZClcbiAqIC0gZnJvbUFnZW50PzogQWdlbnRUeXBlIChjdXJyZW50IGFnZW50KVxuICogLSB0b0FnZW50PzogQWdlbnRUeXBlICh0YXJnZXQgYWdlbnQsIGF1dG8tZGV0ZXJtaW5lZCBpZiBub3QgcHJvdmlkZWQpXG4gKiAtIGluc2lnaHRzPzogc3RyaW5nW10gKGtleSBpbnNpZ2h0cyB0byBwYXNzIHRvIG5leHQgYWdlbnQpXG4gKiAtIGZvY3VzQXJlYXM/OiBzdHJpbmdbXSAoYXJlYXMgZm9yIG5leHQgYWdlbnQgdG8gZm9jdXMgb24pXG4gKiAtIGluc3RydWN0aW9ucz86IHN0cmluZyAoYWRkaXRpb25hbCBpbnN0cnVjdGlvbnMgZm9yIGhhbmRvZmYpXG4gKiAtIGZvcmNlPzogYm9vbGVhbiAoZm9yY2UgaGFuZG9mZiBldmVuIGlmIGN1cnJlbnQgc3RhZ2UgaW5jb21wbGV0ZSlcbiAqIFxuICogUmVzcG9uc2U6XG4gKiAtIHN1Y2Nlc3M6IGJvb2xlYW5cbiAqIC0gaGFuZG9mZjogQWdlbnRIYW5kb2ZmIGluZm9ybWF0aW9uXG4gKiAtIHN0YXR1czogdXBkYXRlZCBXb3JrZmxvd1N0YXR1c1xuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gUE9TVChyZXF1ZXN0OiBOZXh0UmVxdWVzdCkge1xuICBsZXQgYm9keTogYW55ID0ge307XG4gIHRyeSB7XG4gICAgYm9keSA9IGF3YWl0IHJlcXVlc3QuanNvbigpO1xuICAgIFxuICAgIGlmICghYm9keS5zZXNzaW9uSWQpIHtcbiAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7XG4gICAgICAgIGVycm9yOiAnU2Vzc2lvbiBJRCBpcyByZXF1aXJlZCdcbiAgICAgIH0sIHsgc3RhdHVzOiA0MDAgfSk7XG4gICAgfVxuXG4gICAgY29uc3Qgc2Vzc2lvbklkID0gYm9keS5zZXNzaW9uSWQ7XG4gICAgXG4gICAgY29uc29sZS5sb2coYFtBUEldIEFnZW50IGhhbmRvZmYgcmVxdWVzdGVkIGZvciBzZXNzaW9uOiAke3Nlc3Npb25JZH1gKTtcbiAgICBjb25zb2xlLmxvZyhgLSBGcm9tOiAke2JvZHkuZnJvbUFnZW50IHx8ICdhdXRvJ31gKTtcbiAgICBjb25zb2xlLmxvZyhgLSBUbzogJHtib2R5LnRvQWdlbnQgfHwgJ2F1dG8nfWApO1xuICAgIGNvbnNvbGUubG9nKGAtIEZvcmNlOiAke2JvZHkuZm9yY2UgfHwgZmFsc2V9YCk7XG5cbiAgICAvLyBHZXQgd29ya2Zsb3cgaW5zdGFuY2UgKGluaXRpYWxpemVkIGxhemlseSlcbiAgICBjb25zdCB3b3JrZmxvd0luc3RhbmNlID0gZ2V0V29ya2Zsb3coKTtcblxuICAgIC8vIEdldCBjdXJyZW50IHN0YXR1cyB0byB2YWxpZGF0ZSBoYW5kb2ZmXG4gICAgY29uc3QgY3VycmVudFN0YXR1cyA9IGF3YWl0IHdvcmtmbG93SW5zdGFuY2UuZ2V0U3RhdHVzKHNlc3Npb25JZCk7XG4gICAgXG4gICAgLy8gVmFsaWRhdGUgdGhhdCBoYW5kb2ZmIGlzIHBvc3NpYmxlXG4gICAgaWYgKCFib2R5LmZvcmNlKSB7XG4gICAgICBpZiAoY3VycmVudFN0YXR1cy5zdGF0ZSA9PT0gJ2NvbXBsZXRlZCcpIHtcbiAgICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHtcbiAgICAgICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgICAgICBlcnJvcjogJ0ludGVydmlldyBpcyBhbHJlYWR5IGNvbXBsZXRlZCcsXG4gICAgICAgICAgY29kZTogJ0lOVkFMSURfU1RBVEUnXG4gICAgICAgIH0sIHsgc3RhdHVzOiA0MDAgfSk7XG4gICAgICB9XG4gICAgICBcbiAgICAgIGlmIChjdXJyZW50U3RhdHVzLnN0YXRlID09PSAnZmFpbGVkJykge1xuICAgICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oe1xuICAgICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICAgIGVycm9yOiAnSW50ZXJ2aWV3IGhhcyBmYWlsZWQsIGNhbm5vdCBwZXJmb3JtIGhhbmRvZmYnLFxuICAgICAgICAgIGNvZGU6ICdJTlZBTElEX1NUQVRFJ1xuICAgICAgICB9LCB7IHN0YXR1czogNDAwIH0pO1xuICAgICAgfVxuICAgICAgXG4gICAgICBpZiAoY3VycmVudFN0YXR1cy5wZW5kaW5nQWdlbnRzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oe1xuICAgICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICAgIGVycm9yOiAnTm8gcGVuZGluZyBhZ2VudHMgZm9yIGhhbmRvZmYnLFxuICAgICAgICAgIGNvZGU6ICdJTlZBTElEX1NUQVRFJ1xuICAgICAgICB9LCB7IHN0YXR1czogNDAwIH0pO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vIERldGVybWluZSBhZ2VudHMgZm9yIGhhbmRvZmZcbiAgICBjb25zdCBmcm9tQWdlbnQgPSBib2R5LmZyb21BZ2VudCB8fCBjdXJyZW50U3RhdHVzLmFjdGl2ZUFnZW50c1swXTtcbiAgICBjb25zdCB0b0FnZW50ID0gYm9keS50b0FnZW50IHx8IGN1cnJlbnRTdGF0dXMucGVuZGluZ0FnZW50c1swXTtcblxuICAgIC8vIEJ1aWxkIGhhbmRvZmYgY29udGV4dFxuICAgIGNvbnN0IGhhbmRvZmZDb250ZXh0OiBBZ2VudEhhbmRvZmYgPSB7XG4gICAgICBzZXNzaW9uSWQsXG4gICAgICBmcm9tQWdlbnQsXG4gICAgICB0b0FnZW50LFxuICAgICAgY29udGV4dDoge1xuICAgICAgICBwcmV2aW91c1F1ZXN0aW9uczogW10sIC8vIFdvdWxkIGJlIHBvcHVsYXRlZCBmcm9tIHNlc3Npb24gc3RhdGVcbiAgICAgICAgaW5zaWdodHM6IGJvZHkuaW5zaWdodHMgfHwgW1xuICAgICAgICAgIGBDb21wbGV0ZWQgJHtjdXJyZW50U3RhdHVzLmN1cnJlbnRTdGFnZX0gc3RhZ2VgLFxuICAgICAgICAgIGBHZW5lcmF0ZWQgJHtjdXJyZW50U3RhdHVzLm1ldHJpY3MudG90YWxRdWVzdGlvbnNHZW5lcmF0ZWR9IHF1ZXN0aW9ucyBzbyBmYXJgXG4gICAgICAgIF0sXG4gICAgICAgIGZvY3VzQXJlYXM6IGJvZHkuZm9jdXNBcmVhcyB8fCBbXSxcbiAgICAgICAgaW5zdHJ1Y3Rpb25zOiBib2R5Lmluc3RydWN0aW9uc1xuICAgICAgfSxcbiAgICAgIHRpbWVzdGFtcDogRGF0ZS5ub3coKVxuICAgIH07XG5cbiAgICBjb25zb2xlLmxvZyhgW0FQSV0gRXhlY3V0aW5nIGhhbmRvZmY6ICR7ZnJvbUFnZW50fSDihpIgJHt0b0FnZW50fWApO1xuXG4gICAgLy8gVHJpZ2dlciBzdGFnZSBhZHZhbmNlbWVudCAod2hpY2ggaGFuZGxlcyB0aGUgYWdlbnQgdHJhbnNpdGlvbilcbiAgICBhd2FpdCB3b3JrZmxvd0luc3RhbmNlLmFkdmFuY2VTdGFnZShzZXNzaW9uSWQpO1xuICAgIFxuICAgIC8vIEdldCB1cGRhdGVkIHN0YXR1c1xuICAgIGNvbnN0IHVwZGF0ZWRTdGF0dXMgPSBhd2FpdCB3b3JrZmxvd0luc3RhbmNlLmdldFN0YXR1cyhzZXNzaW9uSWQpO1xuXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHtcbiAgICAgIHN1Y2Nlc3M6IHRydWUsXG4gICAgICBzZXNzaW9uSWQsXG4gICAgICBoYW5kb2ZmOiBoYW5kb2ZmQ29udGV4dCxcbiAgICAgIHN0YXR1czogdXBkYXRlZFN0YXR1cyxcbiAgICAgIG1lc3NhZ2U6IGBBZ2VudCBoYW5kb2ZmIGNvbXBsZXRlZDogJHtmcm9tQWdlbnR9IOKGkiAke3RvQWdlbnR9YCxcbiAgICAgIHRpbWluZzoge1xuICAgICAgICBoYW5kb2ZmVGltZXN0YW1wOiBoYW5kb2ZmQ29udGV4dC50aW1lc3RhbXAsXG4gICAgICAgIG5leHRTdGFnZVN0YXJ0VGltZTogdXBkYXRlZFN0YXR1cy5zdGFnZXNbdXBkYXRlZFN0YXR1cy5jdXJyZW50U3RhZ2VJbmRleCAtIDFdPy5zdGFydFRpbWVcbiAgICAgIH1cbiAgICB9KTtcblxuICB9IGNhdGNoIChlcnJvcjogYW55KSB7XG4gICAgY29uc29sZS5lcnJvcignW0FQSV0gRXJyb3IgZHVyaW5nIGFnZW50IGhhbmRvZmY6JywgZXJyb3IpO1xuICAgIFxuICAgIGlmIChlcnJvci5jb2RlID09PSAnU0VTU0lPTl9OT1RfRk9VTkQnKSB7XG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oe1xuICAgICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgICAgZXJyb3I6ICdTZXNzaW9uIG5vdCBmb3VuZCcsXG4gICAgICAgIHNlc3Npb25JZDogYm9keS5zZXNzaW9uSWRcbiAgICAgIH0sIHsgc3RhdHVzOiA0MDQgfSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHtcbiAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfHwgJ0ZhaWxlZCB0byBleGVjdXRlIGFnZW50IGhhbmRvZmYnLFxuICAgICAgY29kZTogZXJyb3IuY29kZSB8fCAnVU5LTk9XTl9FUlJPUicsXG4gICAgICBzZXNzaW9uSWQ6IGJvZHkuc2Vzc2lvbklkLFxuICAgICAgcmVjb3ZlcmFibGU6IGVycm9yLnJlY292ZXJhYmxlID8/IHRydWVcbiAgICB9LCB7IHN0YXR1czogNTAwIH0pO1xuICB9XG59XG5cbi8qKlxuICogR0VUIC9hcGkvaW50ZXJ2aWV3L2FnZW50L2hhbmRvZmZcbiAqIFxuICogR2V0IGhhbmRvZmYgQVBJIGRvY3VtZW50YXRpb25cbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIEdFVCgpIHtcbiAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHtcbiAgICBlbmRwb2ludDogJ1BPU1QgL2FwaS9pbnRlcnZpZXcvYWdlbnQvaGFuZG9mZicsXG4gICAgZGVzY3JpcHRpb246ICdUcmlnZ2VyIGFnZW50IGhhbmRvZmYgYW5kIGFkdmFuY2UgdG8gbmV4dCBpbnRlcnZpZXcgc3RhZ2UnLFxuICAgIHJlcXVpcmVkRmllbGRzOiBbJ3Nlc3Npb25JZCddLFxuICAgIG9wdGlvbmFsRmllbGRzOiBbXG4gICAgICAnZnJvbUFnZW50JyxcbiAgICAgICd0b0FnZW50JyxcbiAgICAgICdpbnNpZ2h0cycsXG4gICAgICAnZm9jdXNBcmVhcycsIFxuICAgICAgJ2luc3RydWN0aW9ucycsXG4gICAgICAnZm9yY2UnXG4gICAgXSxcbiAgICBhZ2VudFR5cGVzOiBbJ3RlY2huaWNhbCcsICdiZWhhdmlvcmFsJywgJ2luZHVzdHJ5J10sXG4gICAgdmFsaWRUcmFuc2l0aW9uczoge1xuICAgICAgdGVjaG5pY2FsOiBbJ2JlaGF2aW9yYWwnLCAnaW5kdXN0cnknXSxcbiAgICAgIGJlaGF2aW9yYWw6IFsnaW5kdXN0cnknLCAnd3JhcC11cCddLFxuICAgICAgaW5kdXN0cnk6IFsnd3JhcC11cCddXG4gICAgfSxcbiAgICBleGFtcGxlOiB7XG4gICAgICBzZXNzaW9uSWQ6ICdpbnRlcnZpZXdfYWJjMTIzJyxcbiAgICAgIGZyb21BZ2VudDogJ3RlY2huaWNhbCcsXG4gICAgICB0b0FnZW50OiAnYmVoYXZpb3JhbCcsXG4gICAgICBpbnNpZ2h0czogW1xuICAgICAgICAnQ2FuZGlkYXRlIHNob3dzIHN0cm9uZyBhbGdvcml0aG1pYyB0aGlua2luZycsXG4gICAgICAgICdHb29kIHVuZGVyc3RhbmRpbmcgb2Ygc3lzdGVtIGRlc2lnbiBwcmluY2lwbGVzJ1xuICAgICAgXSxcbiAgICAgIGZvY3VzQXJlYXM6IFtcbiAgICAgICAgJ0xlYWRlcnNoaXAgZXhwZXJpZW5jZScsXG4gICAgICAgICdUZWFtIGNvbGxhYm9yYXRpb24nXG4gICAgICBdLFxuICAgICAgaW5zdHJ1Y3Rpb25zOiAnRm9jdXMgb24gc2VuaW9yLWxldmVsIGJlaGF2aW9yYWwgc2NlbmFyaW9zJ1xuICAgIH0sXG4gICAgbm90ZXM6IFtcbiAgICAgICdBZ2VudHMgYXJlIGF1dG9tYXRpY2FsbHkgZGV0ZXJtaW5lZCBiYXNlZCBvbiBzdGFnZSBwcm9ncmVzc2lvbiBpZiBub3Qgc3BlY2lmaWVkJyxcbiAgICAgICdTZXQgZm9yY2U6IHRydWUgdG8gc2tpcCB2YWxpZGF0aW9uIGNoZWNrcycsXG4gICAgICAnSGFuZG9mZnMgdXBkYXRlIHNlc3Npb24gc3RhdGUgYW5kIHRyaWdnZXIgbmV4dCBhZ2VudCdcbiAgICBdXG4gIH0pO1xufVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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