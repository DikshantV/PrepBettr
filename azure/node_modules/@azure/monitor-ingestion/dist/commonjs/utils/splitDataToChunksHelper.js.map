{"version":3,"file":"splitDataToChunksHelper.js","sourceRoot":"","sources":["../../../src/utils/splitDataToChunksHelper.ts"],"names":[],"mappings":";AAAA,uCAAuC;AACvC,kCAAkC;;AAOlC,8CAsBC;AA3BD,yDAAmD;AAEnD;;GAEG;AACH,SAAgB,iBAAiB,CAAC,IAA+B;IAC/D,IAAI,KAAK,GAA8B,EAAE,CAAC;IAC1C,MAAM,UAAU,GAAgC,EAAE,CAAC;IACnD,IAAI,IAAI,GAAG,CAAC,CAAC;IACb,MAAM,QAAQ,GAAG,OAAO,CAAC;IACzB,KAAK,MAAM,OAAO,IAAI,IAAI,EAAE,CAAC;QAC3B,MAAM,WAAW,GAAG,IAAA,gCAAa,EAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;QAC3D,IAAI,IAAI,GAAG,WAAW,GAAG,QAAQ,EAAE,CAAC;YAClC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACpB,IAAI,IAAI,WAAW,CAAC;QACtB,CAAC;aAAM,CAAC;YACN,IAAI,KAAK,CAAC,MAAM;gBAAE,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACzC,KAAK,GAAG,CAAC,OAAO,CAAC,CAAC;YAClB,IAAI,GAAG,WAAW,CAAC;QACrB,CAAC;IACH,CAAC;IAED,IAAI,KAAK,CAAC,MAAM,EAAE,CAAC;QACjB,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACzB,CAAC;IAED,OAAO,UAAU,CAAC;AACpB,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { getBinarySize } from \"./getBinarySize.js\";\n\n/**\n * @internal\n */\nexport function splitDataToChunks(logs: Record<string, unknown>[]): Record<string, unknown>[][] {\n  let chunk: Record<string, unknown>[] = [];\n  const chunkArray: Record<string, unknown>[][] = [];\n  let size = 0;\n  const maxBytes = 1000000;\n  for (const element of logs) {\n    const elementSize = getBinarySize(JSON.stringify(element));\n    if (size + elementSize < maxBytes) {\n      chunk.push(element);\n      size += elementSize;\n    } else {\n      if (chunk.length) chunkArray.push(chunk);\n      chunk = [element];\n      size = elementSize;\n    }\n  }\n\n  if (chunk.length) {\n    chunkArray.push(chunk);\n  }\n\n  return chunkArray;\n}\n"]}