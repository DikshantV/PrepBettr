{"version":3,"file":"gZippingPolicy.js","sourceRoot":"","sources":["../../src/gZippingPolicy.ts"],"names":[],"mappings":";AAAA,uCAAuC;AACvC,kCAAkC;;;;AAGlC,mDAA6B;AAC7B,yCAAsC;AACtC,MAAM,IAAI,GAAG,IAAA,qBAAS,EAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAElC;;GAEG;AACU,QAAA,kBAAkB,GAAG,gBAAgB,CAAC;AAEtC,QAAA,cAAc,GAAmB;IAC5C,IAAI,EAAE,0BAAkB;IACxB,WAAW,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE;QAC/B,IAAI,GAAG,CAAC,IAAI,EAAE,CAAC;YACb,MAAM,MAAM,GAAG,MAAM,QAAQ,CAAC,GAAG,CAAC,IAAqD,CAAC,CAAC;YACzF,GAAG,CAAC,IAAI,GAAG,MAAM,CAAC;QACpB,CAAC;QACD,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC;IACnB,CAAC;CACF,CAAC;AAEF,SAAS,QAAQ,CAAC,IAAmD;IACnE,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC;AACpB,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { PipelinePolicy } from \"@azure/core-rest-pipeline\";\nimport * as zlib from \"zlib\";\nimport { promisify } from \"node:util\";\nconst gzip = promisify(zlib.gzip);\n\n/**\n * Name of the {@link gZippingPolicy}\n */\nexport const gZippingPolicyName = \"GzippingPolicy\";\n\nexport const GZippingPolicy: PipelinePolicy = {\n  name: gZippingPolicyName,\n  sendRequest: async (req, next) => {\n    if (req.body) {\n      const buffer = await gzipping(req.body as string | ArrayBuffer | NodeJS.ArrayBufferView);\n      req.body = buffer;\n    }\n    return next(req);\n  },\n};\n\nfunction gzipping(body: string | ArrayBuffer | NodeJS.ArrayBufferView): Promise<Buffer> {\n  return gzip(body);\n}\n"]}