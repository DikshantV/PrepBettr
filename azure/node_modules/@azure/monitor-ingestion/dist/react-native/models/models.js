// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { isError } from "@azure/core-util";
/** Service API versions */
export var KnownVersions;
(function (KnownVersions) {
    /** The 2023-01-01 API version. */
    KnownVersions["V20230101"] = "2023-01-01";
})(KnownVersions || (KnownVersions = {}));
/**
 * Known values for Monitor Audience
 */
export var KnownMonitorAudience;
(function (KnownMonitorAudience) {
    /**
     * Audience for Azure China
     */
    KnownMonitorAudience["AzureChina"] = "https://monitor.azure.cn";
    /**
     * Audience for Azure Government
     */
    KnownMonitorAudience["AzureGovernment"] = "https://monitor.azure.us";
    /**
     * Audience for Azure Public
     */
    KnownMonitorAudience["AzurePublicCloud"] = "https://monitor.azure.com";
})(KnownMonitorAudience || (KnownMonitorAudience = {}));
/**
 * Aggregate Upload Logs Error Name
 */
export const AggregateLogsUploadErrorName = "AggregateLogsUploadError";
/**
 * Aggregate Error type for upload function
 */
export class AggregateLogsUploadError extends Error {
    /**
     *
     * @param errors - list of {@link LogsUploadFailure}
     * @param errorMessage - error message
     */
    constructor(errors, errorMessage) {
        super(`${errorMessage}\n}`);
        this.errors = errors;
        this.name = AggregateLogsUploadErrorName;
    }
}
/**
 * Typeguard for AggregateUploadLogsError
 * @param e - Something caught by a catch clause.
 */
export function isAggregateLogsUploadError(e) {
    if (e instanceof AggregateLogsUploadError) {
        return true;
    }
    return isError(e) && e.name === AggregateLogsUploadErrorName;
}
//# sourceMappingURL=models.js.map